

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 18 16:24:49 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     _LATB	set	3978
    80  0000                     _PORTBbits	set	3969
    81  0000                     _PORTB	set	3969
    82  0000                     _PORTD	set	3971
    83  0000                     _TRISB	set	3987
    84  0000                     _INTCON2bits	set	4081
    85  0000                     _ADCON1	set	4033
    86  0000                     _PORTAbits	set	3968
    87  0000                     _PORTA	set	3968
    88  0000                     _TRISA	set	3986
    89  0000                     _PORTDbits	set	3971
    90  0000                     _TRISDbits	set	3989
    91                           
    92                           	psect	mediumconst
    93  007E86                     __pmediumconst:
    94                           	opt callstack 0
    95  007E86  00                 	db	0
    96  007E87                     STR_19:
    97  007E87  2A                 	db	42
    98  007E88  2A                 	db	42
    99  007E89  2A                 	db	42
   100  007E8A  2A                 	db	42
   101  007E8B  2A                 	db	42
   102  007E8C  2A                 	db	42
   103  007E8D  2A                 	db	42
   104  007E8E  2A                 	db	42
   105  007E8F  2A                 	db	42
   106  007E90  2A                 	db	42
   107  007E91  2A                 	db	42
   108  007E92  2A                 	db	42
   109  007E93  2A                 	db	42
   110  007E94  2A                 	db	42
   111  007E95  2A                 	db	42
   112  007E96  00                 	db	0
   113  007E97                     STR_21:
   114  007E97  73                 	db	115	;'s'
   115  007E98  65                 	db	101	;'e'
   116  007E99  6E                 	db	110	;'n'
   117  007E9A  74                 	db	116	;'t'
   118  007E9B  69                 	db	105	;'i'
   119  007E9C  64                 	db	100	;'d'
   120  007E9D  6F                 	db	111	;'o'
   121  007E9E  20                 	db	32
   122  007E9F  64                 	db	100	;'d'
   123  007EA0  65                 	db	101	;'e'
   124  007EA1  20                 	db	32
   125  007EA2  67                 	db	103	;'g'
   126  007EA3  69                 	db	105	;'i'
   127  007EA4  72                 	db	114	;'r'
   128  007EA5  6F                 	db	111	;'o'
   129  007EA6  00                 	db	0
   130  007EA7                     STR_15:
   131  007EA7  63                 	db	99	;'c'
   132  007EA8  75                 	db	117	;'u'
   133  007EA9  61                 	db	97	;'a'
   134  007EAA  6E                 	db	110	;'n'
   135  007EAB  64                 	db	100	;'d'
   136  007EAC  6F                 	db	111	;'o'
   137  007EAD  20                 	db	32
   138  007EAE  74                 	db	116	;'t'
   139  007EAF  65                 	db	101	;'e'
   140  007EB0  72                 	db	114	;'r'
   141  007EB1  6D                 	db	109	;'m'
   142  007EB2  69                 	db	105	;'i'
   143  007EB3  6E                 	db	110	;'n'
   144  007EB4  65                 	db	101	;'e'
   145  007EB5  73                 	db	115	;'s'
   146  007EB6  00                 	db	0
   147  007EB7                     STR_16:
   148  007EB7  41                 	db	65	;'A'
   149  007EB8  3A                 	db	58	;':'
   150  007EB9  46                 	db	70	;'F'
   151  007EBA  53                 	db	83	;'S'
   152  007EBB  20                 	db	32
   153  007EBC  42                 	db	66	;'B'
   154  007EBD  3A                 	db	58	;':'
   155  007EBE  57                 	db	87	;'W'
   156  007EBF  53                 	db	83	;'S'
   157  007EC0  20                 	db	32
   158  007EC1  43                 	db	67	;'C'
   159  007EC2  3A                 	db	58	;':'
   160  007EC3  48                 	db	72	;'H'
   161  007EC4  53                 	db	83	;'S'
   162  007EC5  00                 	db	0
   163  007EC6                     STR_36:
   164  007EC6  49                 	db	73	;'I'
   165  007EC7  6E                 	db	110	;'n'
   166  007EC8  74                 	db	116	;'t'
   167  007EC9  65                 	db	101	;'e'
   168  007ECA  6E                 	db	110	;'n'
   169  007ECB  74                 	db	116	;'t'
   170  007ECC  61                 	db	97	;'a'
   171  007ECD  6C                 	db	108	;'l'
   172  007ECE  6F                 	db	111	;'o'
   173  007ECF  20                 	db	32
   174  007ED0  64                 	db	100	;'d'
   175  007ED1  65                 	db	101	;'e'
   176  007ED2  20                 	db	32
   177  007ED3  00                 	db	0
   178  007ED4                     STR_83:
   179  007ED4  53                 	db	83	;'S'
   180  007ED5  65                 	db	101	;'e'
   181  007ED6  6C                 	db	108	;'l'
   182  007ED7  65                 	db	101	;'e'
   183  007ED8  63                 	db	99	;'c'
   184  007ED9  63                 	db	99	;'c'
   185  007EDA  69                 	db	105	;'i'
   186  007EDB  6F                 	db	111	;'o'
   187  007EDC  6E                 	db	110	;'n'
   188  007EDD  61                 	db	97	;'a'
   189  007EDE  20                 	db	32
   190  007EDF  64                 	db	100	;'d'
   191  007EE0  65                 	db	101	;'e'
   192  007EE1  00                 	db	0
   193  007EE2                     STR_20:
   194  007EE2  53                 	db	83	;'S'
   195  007EE3  65                 	db	101	;'e'
   196  007EE4  6C                 	db	108	;'l'
   197  007EE5  65                 	db	101	;'e'
   198  007EE6  63                 	db	99	;'c'
   199  007EE7  63                 	db	99	;'c'
   200  007EE8  69                 	db	105	;'i'
   201  007EE9  6F                 	db	111	;'o'
   202  007EEA  6E                 	db	110	;'n'
   203  007EEB  61                 	db	97	;'a'
   204  007EEC  20                 	db	32
   205  007EED  65                 	db	101	;'e'
   206  007EEE  6C                 	db	108	;'l'
   207  007EEF  00                 	db	0
   208  007EF0                     STR_38:
   209  007EF0  4D                 	db	77	;'M'
   210  007EF1  6F                 	db	111	;'o'
   211  007EF2  74                 	db	116	;'t'
   212  007EF3  6F                 	db	111	;'o'
   213  007EF4  72                 	db	114	;'r'
   214  007EF5  20                 	db	32
   215  007EF6  47                 	db	71	;'G'
   216  007EF7  69                 	db	105	;'i'
   217  007EF8  72                 	db	114	;'r'
   218  007EF9  61                 	db	97	;'a'
   219  007EFA  6E                 	db	110	;'n'
   220  007EFB  64                 	db	100	;'d'
   221  007EFC  6F                 	db	111	;'o'
   222  007EFD  00                 	db	0
   223  007EFE                     STR_10:
   224  007EFE  4D                 	db	77	;'M'
   225  007EFF  6F                 	db	111	;'o'
   226  007F00  74                 	db	116	;'t'
   227  007F01  6F                 	db	111	;'o'
   228  007F02  72                 	db	114	;'r'
   229  007F03  20                 	db	32
   230  007F04  61                 	db	97	;'a'
   231  007F05  20                 	db	32
   232  007F06  70                 	db	112	;'p'
   233  007F07  61                 	db	97	;'a'
   234  007F08  73                 	db	115	;'s'
   235  007F09  6F                 	db	111	;'o'
   236  007F0A  73                 	db	115	;'s'
   237  007F0B  00                 	db	0
   238  007F0C                     STR_12:
   239  007F0C  45                 	db	69	;'E'
   240  007F0D  73                 	db	115	;'s'
   241  007F0E  20                 	db	32
   242  007F0F  6C                 	db	108	;'l'
   243  007F10  6F                 	db	111	;'o'
   244  007F11  20                 	db	32
   245  007F12  71                 	db	113	;'q'
   246  007F13  75                 	db	117	;'u'
   247  007F14  65                 	db	101	;'e'
   248  007F15  20                 	db	32
   249  007F16  68                 	db	104	;'h'
   250  007F17  61                 	db	97	;'a'
   251  007F18  79                 	db	121	;'y'
   252  007F19  00                 	db	0
   253  007F1A                     STR_24:
   254  007F1A  31                 	db	49	;'1'
   255  007F1B  3A                 	db	58	;':'
   256  007F1C  44                 	db	68	;'D'
   257  007F1D  45                 	db	69	;'E'
   258  007F1E  52                 	db	82	;'R'
   259  007F1F  20                 	db	32
   260  007F20  20                 	db	32
   261  007F21  32                 	db	50	;'2'
   262  007F22  3A                 	db	58	;':'
   263  007F23  49                 	db	73	;'I'
   264  007F24  5A                 	db	90	;'Z'
   265  007F25  51                 	db	81	;'Q'
   266  007F26  00                 	db	0
   267  007F27                     STR_34:
   268  007F27  56                 	db	86	;'V'
   269  007F28  61                 	db	97	;'a'
   270  007F29  6C                 	db	108	;'l'
   271  007F2A  6F                 	db	111	;'o'
   272  007F2B  72                 	db	114	;'r'
   273  007F2C  20                 	db	32
   274  007F2D  6D                 	db	109	;'m'
   275  007F2E  61                 	db	97	;'a'
   276  007F2F  78                 	db	120	;'x'
   277  007F30  69                 	db	105	;'i'
   278  007F31  6D                 	db	109	;'m'
   279  007F32  6F                 	db	111	;'o'
   280  007F33  00                 	db	0
   281  007F34                     STR_37:
   282  007F34  6E                 	db	110	;'n'
   283  007F35  75                 	db	117	;'u'
   284  007F36  65                 	db	101	;'e'
   285  007F37  76                 	db	118	;'v'
   286  007F38  6F                 	db	111	;'o'
   287  007F39  20                 	db	32
   288  007F3A  68                 	db	104	;'h'
   289  007F3B  75                 	db	117	;'u'
   290  007F3C  6D                 	db	109	;'m'
   291  007F3D  61                 	db	97	;'a'
   292  007F3E  6E                 	db	110	;'n'
   293  007F3F  6F                 	db	111	;'o'
   294  007F40  00                 	db	0
   295  007F41                     STR_31:
   296  007F41  4E                 	db	78	;'N'
   297  007F42  75                 	db	117	;'u'
   298  007F43  6D                 	db	109	;'m'
   299  007F44  65                 	db	101	;'e'
   300  007F45  72                 	db	114	;'r'
   301  007F46  6F                 	db	111	;'o'
   302  007F47  20                 	db	32
   303  007F48  64                 	db	100	;'d'
   304  007F49  65                 	db	101	;'e'
   305  007F4A  20                 	db	32
   306  007F4B  00                 	db	0
   307  007F4C                     STR_14:
   308  007F4C  50                 	db	80	;'P'
   309  007F4D  72                 	db	114	;'r'
   310  007F4E  65                 	db	101	;'e'
   311  007F4F  73                 	db	115	;'s'
   312  007F50  69                 	db	105	;'i'
   313  007F51  6F                 	db	111	;'o'
   314  007F52  6E                 	db	110	;'n'
   315  007F53  61                 	db	97	;'a'
   316  007F54  20                 	db	32
   317  007F55  2A                 	db	42
   318  007F56  00                 	db	0
   319  007F57                     STR_82:
   320  007F57  49                 	db	73	;'I'
   321  007F58  4E                 	db	78	;'N'
   322  007F59  43                 	db	67	;'C'
   323  007F5A  4F                 	db	79	;'O'
   324  007F5B  52                 	db	82	;'R'
   325  007F5C  52                 	db	82	;'R'
   326  007F5D  45                 	db	69	;'E'
   327  007F5E  43                 	db	67	;'C'
   328  007F5F  54                 	db	84	;'T'
   329  007F60  4F                 	db	79	;'O'
   330  007F61  00                 	db	0
   331  007F62                     STR_39:
   332  007F62  57                 	db	87	;'W'
   333  007F63  41                 	db	65	;'A'
   334  007F64  56                 	db	86	;'V'
   335  007F65  45                 	db	69	;'E'
   336  007F66  20                 	db	32
   337  007F67  53                 	db	83	;'S'
   338  007F68  54                 	db	84	;'T'
   339  007F69  45                 	db	69	;'E'
   340  007F6A  50                 	db	80	;'P'
   341  007F6B  53                 	db	83	;'S'
   342  007F6C  00                 	db	0
   343  007F6D                     STR_60:
   344  007F6D  48                 	db	72	;'H'
   345  007F6E  41                 	db	65	;'A'
   346  007F6F  4C                 	db	76	;'L'
   347  007F70  46                 	db	70	;'F'
   348  007F71  20                 	db	32
   349  007F72  53                 	db	83	;'S'
   350  007F73  54                 	db	84	;'T'
   351  007F74  45                 	db	69	;'E'
   352  007F75  50                 	db	80	;'P'
   353  007F76  53                 	db	83	;'S'
   354  007F77  00                 	db	0
   355  007F78                     STR_18:
   356  007F78  46                 	db	70	;'F'
   357  007F79  55                 	db	85	;'U'
   358  007F7A  4C                 	db	76	;'L'
   359  007F7B  4C                 	db	76	;'L'
   360  007F7C  20                 	db	32
   361  007F7D  53                 	db	83	;'S'
   362  007F7E  54                 	db	84	;'T'
   363  007F7F  45                 	db	69	;'E'
   364  007F80  50                 	db	80	;'P'
   365  007F81  53                 	db	83	;'S'
   366  007F82  00                 	db	0
   367  007F83                     STR_2:
   368  007F83  69                 	db	105	;'i'
   369  007F84  6E                 	db	110	;'n'
   370  007F85  63                 	db	99	;'c'
   371  007F86  6F                 	db	111	;'o'
   372  007F87  72                 	db	114	;'r'
   373  007F88  72                 	db	114	;'r'
   374  007F89  65                 	db	101	;'e'
   375  007F8A  63                 	db	99	;'c'
   376  007F8B  74                 	db	116	;'t'
   377  007F8C  61                 	db	97	;'a'
   378  007F8D  00                 	db	0
   379  007F8E                     STR_9:
   380  007F8E  43                 	db	67	;'C'
   381  007F8F  6F                 	db	111	;'o'
   382  007F90  6E                 	db	110	;'n'
   383  007F91  74                 	db	116	;'t'
   384  007F92  72                 	db	114	;'r'
   385  007F93  6F                 	db	111	;'o'
   386  007F94  6C                 	db	108	;'l'
   387  007F95  20                 	db	32
   388  007F96  64                 	db	100	;'d'
   389  007F97  65                 	db	101	;'e'
   390  007F98  00                 	db	0
   391  007F99                     STR_7:
   392  007F99  42                 	db	66	;'B'
   393  007F9A  69                 	db	105	;'i'
   394  007F9B  65                 	db	101	;'e'
   395  007F9C  6E                 	db	110	;'n'
   396  007F9D  76                 	db	118	;'v'
   397  007F9E  65                 	db	101	;'e'
   398  007F9F  6E                 	db	110	;'n'
   399  007FA0  69                 	db	105	;'i'
   400  007FA1  64                 	db	100	;'d'
   401  007FA2  6F                 	db	111	;'o'
   402  007FA3  00                 	db	0
   403  007FA4                     STR_28:
   404  007FA4  4E                 	db	78	;'N'
   405  007FA5  20                 	db	32
   406  007FA6  64                 	db	100	;'d'
   407  007FA7  65                 	db	101	;'e'
   408  007FA8  20                 	db	32
   409  007FA9  70                 	db	112	;'p'
   410  007FAA  61                 	db	97	;'a'
   411  007FAB  73                 	db	115	;'s'
   412  007FAC  6F                 	db	111	;'o'
   413  007FAD  73                 	db	115	;'s'
   414  007FAE  00                 	db	0
   415  007FAF                     STR_8:
   416  007FAF  48                 	db	72	;'H'
   417  007FB0  75                 	db	117	;'u'
   418  007FB1  6D                 	db	109	;'m'
   419  007FB2  61                 	db	97	;'a'
   420  007FB3  6E                 	db	110	;'n'
   421  007FB4  6F                 	db	111	;'o'
   422  007FB5  20                 	db	32
   423  007FB6  3A                 	db	58	;':'
   424  007FB7  33                 	db	51	;'3'
   425  007FB8  00                 	db	0
   426  007FB9                     STR_84:
   427  007FB9  6E                 	db	110	;'n'
   428  007FBA  75                 	db	117	;'u'
   429  007FBB  65                 	db	101	;'e'
   430  007FBC  76                 	db	118	;'v'
   431  007FBD  6F                 	db	111	;'o'
   432  007FBE  20                 	db	32
   433  007FBF  58                 	db	88	;'X'
   434  007FC0  2C                 	db	44
   435  007FC1  50                 	db	80	;'P'
   436  007FC2  00                 	db	0
   437  007FC3                     STR_35:
   438  007FC3  61                 	db	97	;'a'
   439  007FC4  6C                 	db	108	;'l'
   440  007FC5  63                 	db	99	;'c'
   441  007FC6  61                 	db	97	;'a'
   442  007FC7  6E                 	db	110	;'n'
   443  007FC8  7A                 	db	122	;'z'
   444  007FC9  61                 	db	97	;'a'
   445  007FCA  64                 	db	100	;'d'
   446  007FCB  6F                 	db	111	;'o'
   447  007FCC  00                 	db	0
   448  007FCD                     STR_11:
   449  007FCD  55                 	db	85	;'U'
   450  007FCE  6E                 	db	110	;'n'
   451  007FCF  69                 	db	105	;'i'
   452  007FD0  70                 	db	112	;'p'
   453  007FD1  6F                 	db	111	;'o'
   454  007FD2  6C                 	db	108	;'l'
   455  007FD3  61                 	db	97	;'a'
   456  007FD4  72                 	db	114	;'r'
   457  007FD5  00                 	db	0
   458  007FD6                     STR_13:
   459  007FD6  4F                 	db	79	;'O'
   460  007FD7  70                 	db	112	;'p'
   461  007FD8  63                 	db	99	;'c'
   462  007FD9  69                 	db	105	;'i'
   463  007FDA  6F                 	db	111	;'o'
   464  007FDB  6E                 	db	110	;'n'
   465  007FDC  65                 	db	101	;'e'
   466  007FDD  73                 	db	115	;'s'
   467  007FDE  00                 	db	0
   468  007FDF                     STR_32:
   469  007FDF  50                 	db	80	;'P'
   470  007FE0  61                 	db	97	;'a'
   471  007FE1  73                 	db	115	;'s'
   472  007FE2  6F                 	db	111	;'o'
   473  007FE3  73                 	db	115	;'s'
   474  007FE4  3A                 	db	58	;':'
   475  007FE5  00                 	db	0
   476  007FE6                     STR_1:
   477  007FE6  4F                 	db	79	;'O'
   478  007FE7  70                 	db	112	;'p'
   479  007FE8  63                 	db	99	;'c'
   480  007FE9  69                 	db	105	;'i'
   481  007FEA  6F                 	db	111	;'o'
   482  007FEB  6E                 	db	110	;'n'
   483  007FEC  00                 	db	0
   484  007FED                     STR_25:
   485  007FED  4F                 	db	79	;'O'
   486  007FEE  50                 	db	80	;'P'
   487  007FEF  54                 	db	84	;'T'
   488  007FF0  3A                 	db	58	;':'
   489  007FF1  00                 	db	0
   490  007FF2                     STR_81:
   491  007FF2  44                 	db	68	;'D'
   492  007FF3  41                 	db	65	;'A'
   493  007FF4  54                 	db	84	;'T'
   494  007FF5  4F                 	db	79	;'O'
   495  007FF6  00                 	db	0
   496  007FF7                     STR_26:
   497  007FF7  20                 	db	32
   498  007FF8  25                 	db	37
   499  007FF9  63                 	db	99	;'c'
   500  007FFA  00                 	db	0
   501  007FFB                     STR_33:
   502  007FFB  20                 	db	32
   503  007FFC  25                 	db	37
   504  007FFD  64                 	db	100	;'d'
   505  007FFE  00                 	db	0
   506  0000                     
   507                           ; #config settings
   508  007FFF  00                 	db	0	; dummy byte at the end
   509  0000                     
   510                           	psect	cinit
   511  005486                     __pcinit:
   512                           	opt callstack 0
   513  005486                     start_initialization:
   514                           	opt callstack 0
   515  005486                     __initialization:
   516                           	opt callstack 0
   517                           
   518                           ; Clear objects allocated to BANK0 (101 bytes)
   519  005486  EE00  F060         	lfsr	0,__pbssBANK0
   520  00548A  0E65               	movlw	101
   521  00548C                     clear_0:
   522  00548C  6AEE               	clrf	postinc0,c
   523  00548E  06E8               	decf	wreg,f,c
   524  005490  E1FD               	bnz	clear_0
   525                           
   526                           ; Clear objects allocated to COMRAM (2 bytes)
   527  005492  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   528  005494  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   529  005496                     end_of_initialization:
   530                           	opt callstack 0
   531  005496                     __end_of__initialization:
   532                           	opt callstack 0
   533  005496  0E00               	movlw	low (__Lmediumconst shr (0+16))
   534  005498  6EF8               	movwf	tblptru,c
   535  00549A  0100               	movlb	0
   536  00549C  EFDB  F035         	goto	_main	;jump to C main() function
   537                           
   538                           	psect	bssCOMRAM
   539  00005D                     __pbssCOMRAM:
   540                           	opt callstack 0
   541  00005D                     _flags:
   542                           	opt callstack 0
   543  00005D                     	ds	2
   544                           
   545                           	psect	bssBANK0
   546  000060                     __pbssBANK0:
   547                           	opt callstack 0
   548  000060                     _Pasos_fun:
   549                           	opt callstack 0
   550  000060                     	ds	4
   551  000064                     _valor:
   552                           	opt callstack 0
   553  000064                     	ds	4
   554  000068                     _contador:
   555                           	opt callstack 0
   556  000068                     	ds	4
   557  00006C                     _nout:
   558                           	opt callstack 0
   559  00006C                     	ds	2
   560  00006E                     _width:
   561                           	opt callstack 0
   562  00006E                     	ds	2
   563  000070                     _prec:
   564                           	opt callstack 0
   565  000070                     	ds	2
   566  000072                     _dbuf:
   567                           	opt callstack 0
   568  000072                     	ds	32
   569  000092                     _palabra2:
   570                           	opt callstack 0
   571  000092                     	ds	17
   572  0000A3                     _palabra1:
   573                           	opt callstack 0
   574  0000A3                     	ds	17
   575  0000B4                     _palabra:
   576                           	opt callstack 0
   577  0000B4                     	ds	17
   578                           
   579                           	psect	cstackBANK0
   580  0000C5                     __pcstackBANK0:
   581                           	opt callstack 0
   582  0000C5                     ?_sprintf:
   583                           	opt callstack 0
   584  0000C5                     sprintf@s:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x0
   588  0000C5                     	ds	2
   589  0000C7                     sprintf@fmt:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x2
   593  0000C7                     	ds	8
   594  0000CF                     sprintf@ap:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0xA
   598  0000CF                     	ds	2
   599  0000D1                     sprintf@f:
   600                           	opt callstack 0
   601                           
   602                           ; 6 bytes @ 0xC
   603  0000D1                     	ds	6
   604  0000D7                     main@i:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x12
   608  0000D7                     	ds	2
   609  0000D9                     main@caracter:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x14
   613  0000D9                     	ds	1
   614  0000DA                     main@dir:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x15
   618  0000DA                     	ds	2
   619  0000DC                     main@Dir_sel:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x17
   623  0000DC                     	ds	1
   624  0000DD                     main@pasos:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x18
   628  0000DD                     	ds	4
   629                           
   630                           	psect	cstackCOMRAM
   631  000001                     __pcstackCOMRAM:
   632                           	opt callstack 0
   633  000001                     ??_Lcd_Cmd:
   634  000001                     ??_Lcd_Chr_CP:
   635  000001                     ??_Full_stepper:
   636  000001                     ??_Wave_stepper:
   637  000001                     ??_Half_stepper:
   638  000001                     ??_Full_stepper_izq:
   639  000001                     ??_Wave_stepper_izq:
   640  000001                     ??_Half_stepper_izq:
   641  000001                     ?_strlen:
   642                           	opt callstack 0
   643  000001                     ?___lmul:
   644                           	opt callstack 0
   645  000001                     ?___aodiv:
   646                           	opt callstack 0
   647  000001                     ?___aomod:
   648                           	opt callstack 0
   649  000001                     fputc@c:
   650                           	opt callstack 0
   651  000001                     strlen@s:
   652                           	opt callstack 0
   653  000001                     ___lmul@multiplier:
   654                           	opt callstack 0
   655  000001                     ___aodiv@dividend:
   656                           	opt callstack 0
   657  000001                     ___aomod@dividend:
   658                           	opt callstack 0
   659                           
   660                           ; 8 bytes @ 0x0
   661  000001                     	ds	2
   662  000003                     Lcd_Chr_CP@data:
   663                           	opt callstack 0
   664  000003                     Lcd_Cmd@data:
   665                           	opt callstack 0
   666  000003                     fputc@fp:
   667                           	opt callstack 0
   668  000003                     strlen@a:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x2
   672  000003                     	ds	1
   673  000004                     ??_Lcd_Init:
   674  000004                     Lcd_Out@x:
   675                           	opt callstack 0
   676  000004                     Lcd_Out2@x:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x3
   680  000004                     	ds	1
   681  000005                     ??_fputc:
   682  000005                     Lcd_Init@data:
   683                           	opt callstack 0
   684  000005                     Lcd_Out@buffer:
   685                           	opt callstack 0
   686  000005                     Lcd_Out2@buffer:
   687                           	opt callstack 0
   688  000005                     ___lmul@multiplicand:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x4
   692  000005                     	ds	2
   693  000007                     ??_Lcd_Out:
   694  000007                     ??_Lcd_Out2:
   695                           
   696                           ; 1 bytes @ 0x6
   697  000007                     	ds	2
   698  000009                     Lcd_Out@y:
   699                           	opt callstack 0
   700  000009                     Lcd_Out2@y:
   701                           	opt callstack 0
   702  000009                     ___lmul@product:
   703                           	opt callstack 0
   704  000009                     ___aodiv@divisor:
   705                           	opt callstack 0
   706  000009                     ___aomod@divisor:
   707                           	opt callstack 0
   708                           
   709                           ; 8 bytes @ 0x8
   710  000009                     	ds	1
   711  00000A                     Lcd_Out@data:
   712                           	opt callstack 0
   713  00000A                     Lcd_Out2@data:
   714                           	opt callstack 0
   715  00000A                     fputs@s:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x9
   719  00000A                     	ds	1
   720  00000B                     opt_Full_stepper@steps:
   721                           	opt callstack 0
   722  00000B                     opt_Wave_stepper@steps:
   723                           	opt callstack 0
   724  00000B                     opt_Half_stepper@steps:
   725                           	opt callstack 0
   726                           
   727                           ; 4 bytes @ 0xA
   728  00000B                     	ds	1
   729  00000C                     fputs@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0xB
   733  00000C                     	ds	2
   734  00000E                     fputs@c:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0xD
   738  00000E                     	ds	1
   739  00000F                     opt_Full_stepper@direttion:
   740                           	opt callstack 0
   741  00000F                     opt_Wave_stepper@direttion:
   742                           	opt callstack 0
   743  00000F                     opt_Half_stepper@direttion:
   744                           	opt callstack 0
   745  00000F                     fputs@i:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0xE
   749  00000F                     	ds	2
   750  000011                     ??_opt_Full_stepper:
   751  000011                     ??_opt_Wave_stepper:
   752  000011                     ??_opt_Half_stepper:
   753  000011                     ?_pad:
   754                           	opt callstack 0
   755  000011                     ___aodiv@counter:
   756                           	opt callstack 0
   757  000011                     ___aomod@counter:
   758                           	opt callstack 0
   759  000011                     pad@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x10
   763  000011                     	ds	1
   764  000012                     ___aodiv@sign:
   765                           	opt callstack 0
   766  000012                     ___aomod@sign:
   767                           	opt callstack 0
   768                           
   769                           ; 1 bytes @ 0x11
   770  000012                     	ds	1
   771  000013                     ?_abs:
   772                           	opt callstack 0
   773  000013                     pad@buf:
   774                           	opt callstack 0
   775  000013                     abs@a:
   776                           	opt callstack 0
   777  000013                     ___aodiv@quotient:
   778                           	opt callstack 0
   779                           
   780                           ; 8 bytes @ 0x12
   781  000013                     	ds	2
   782  000015                     ??_abs:
   783  000015                     pad@p:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x14
   787  000015                     	ds	2
   788  000017                     ??_pad:
   789                           
   790                           ; 1 bytes @ 0x16
   791  000017                     	ds	1
   792  000018                     pad@i:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x17
   796  000018                     	ds	2
   797  00001A                     pad@w:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x19
   801  00001A                     	ds	2
   802  00001C                     ?_ctoa:
   803                           	opt callstack 0
   804  00001C                     ?_dtoa:
   805                           	opt callstack 0
   806  00001C                     ctoa@fp:
   807                           	opt callstack 0
   808  00001C                     dtoa@fp:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x1B
   812  00001C                     	ds	2
   813  00001E                     ctoa@c:
   814                           	opt callstack 0
   815  00001E                     dtoa@d:
   816                           	opt callstack 0
   817                           
   818                           ; 8 bytes @ 0x1D
   819  00001E                     	ds	1
   820  00001F                     ctoa@w:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x1E
   824  00001F                     	ds	7
   825  000026                     ??_dtoa:
   826                           
   827                           ; 1 bytes @ 0x25
   828  000026                     	ds	8
   829  00002E                     _dtoa$523:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x2D
   833  00002E                     	ds	2
   834  000030                     dtoa@p:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x2F
   838  000030                     	ds	2
   839  000032                     dtoa@w:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x31
   843  000032                     	ds	2
   844  000034                     dtoa@s:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x33
   848  000034                     	ds	2
   849  000036                     dtoa@n:
   850                           	opt callstack 0
   851                           
   852                           ; 8 bytes @ 0x35
   853  000036                     	ds	8
   854  00003E                     dtoa@i:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x3D
   858  00003E                     	ds	2
   859  000040                     ?_vfpfcnvrt:
   860                           	opt callstack 0
   861  000040                     vfpfcnvrt@fp:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x3F
   865  000040                     	ds	2
   866  000042                     vfpfcnvrt@fmt:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x41
   870  000042                     	ds	2
   871  000044                     vfpfcnvrt@ap:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x43
   875  000044                     	ds	2
   876  000046                     ??_vfpfcnvrt:
   877                           
   878                           ; 1 bytes @ 0x45
   879  000046                     	ds	2
   880  000048                     vfpfcnvrt@ll:
   881                           	opt callstack 0
   882                           
   883                           ; 8 bytes @ 0x47
   884  000048                     	ds	8
   885  000050                     vfpfcnvrt@c:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x4F
   889  000050                     	ds	1
   890  000051                     ?_vfprintf:
   891                           	opt callstack 0
   892  000051                     vfprintf@fp:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x50
   896  000051                     	ds	2
   897  000053                     vfprintf@fmt:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0x52
   901  000053                     	ds	2
   902  000055                     vfprintf@ap:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x54
   906  000055                     	ds	2
   907  000057                     vfprintf@cfmt:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x56
   911  000057                     	ds	2
   912  000059                     ??_main:
   913                           
   914                           ; 1 bytes @ 0x58
   915  000059                     	ds	4
   916                           
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 19 in file "Practica8_15_03_19.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  i               2   18[BANK0 ] int 
   927 ;;  pasos           4   24[BANK0 ] long 
   928 ;;  dir             2   21[BANK0 ] short 
   929 ;;  Dir_sel         1   23[BANK0 ] unsigned char 
   930 ;;  caracter        1   20[BANK0 ] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       0       0       0       0       0       0       0       0
   941 ;;      Locals:         0      10       0       0       0       0       0       0       0
   942 ;;      Temps:          4       0       0       0       0       0       0       0       0
   943 ;;      Totals:         4      10       0       0       0       0       0       0       0
   944 ;;Total ram usage:       14 bytes
   945 ;; Hardware stack levels required when called:    8
   946 ;; This function calls:
   947 ;;		_Lcd_Cmd
   948 ;;		_Lcd_Init
   949 ;;		_Lcd_Out
   950 ;;		_Lcd_Out2
   951 ;;		___lmul
   952 ;;		_initM
   953 ;;		_opt_Full_stepper
   954 ;;		_opt_Half_stepper
   955 ;;		_opt_Wave_stepper
   956 ;;		_sprintf
   957 ;;		_teclado
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text0
   964  006BB6                     __ptext0:
   965                           	opt callstack 0
   966  006BB6                     _main:
   967                           	opt callstack 23
   968                           
   969                           ;Practica8_15_03_19.c: 20:     ADCON1=0x0F;
   970                           
   971                           ;incstack = 0
   972  006BB6  0E0F               	movlw	15
   973  006BB8  6EC1               	movwf	4033,c	;volatile
   974                           
   975                           ;Practica8_15_03_19.c: 21:     INTCON2bits.RBPU=0;
   976  006BBA  9EF1               	bcf	4081,7,c	;volatile
   977                           
   978                           ;Practica8_15_03_19.c: 22:     TRISB=0xF0;
   979  006BBC  0EF0               	movlw	240
   980  006BBE  6E93               	movwf	3987,c	;volatile
   981                           
   982                           ;Practica8_15_03_19.c: 23:     PORTD=0x00;
   983  006BC0  0E00               	movlw	0
   984  006BC2  6E83               	movwf	3971,c	;volatile
   985                           
   986                           ;Practica8_15_03_19.c: 24:     PORTA=0x00;
   987  006BC4  0E00               	movlw	0
   988  006BC6  6E80               	movwf	3968,c	;volatile
   989                           
   990                           ;Practica8_15_03_19.c: 25:     initM();
   991  006BC8  EC50  F02A         	call	_initM	;wreg free
   992                           
   993                           ;Practica8_15_03_19.c: 26:     Lcd_Init();
   994  006BCC  EC06  F02F         	call	_Lcd_Init	;wreg free
   995                           
   996                           ;Practica8_15_03_19.c: 27:     Lcd_Cmd(1);
   997  006BD0  0E01               	movlw	1
   998  006BD2  EC8F  F02F         	call	_Lcd_Cmd
   999                           
  1000                           ;Practica8_15_03_19.c: 28:     Lcd_Cmd(12);
  1001  006BD6  0E0C               	movlw	12
  1002  006BD8  EC8F  F02F         	call	_Lcd_Cmd
  1003                           
  1004                           ;Practica8_15_03_19.c: 29:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1005  006BDC  0E02               	movlw	2
  1006  006BDE  6E5A               	movwf	(??_main+1)& (0+255),c
  1007  006BE0  0E86               	movlw	134
  1008  006BE2  6E59               	movwf	??_main& (0+255),c
  1009  006BE4  0E99               	movlw	153
  1010  006BE6                     u2397:
  1011  006BE6  2EE8               	decfsz	wreg,f,c
  1012  006BE8  D7FE               	bra	u2397
  1013  006BEA  2E59               	decfsz	??_main& (0+255),f,c
  1014  006BEC  D7FC               	bra	u2397
  1015  006BEE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1016  006BF0  D7FA               	bra	u2397
  1017  006BF2  F000               	nop	
  1018                           
  1019                           ;Practica8_15_03_19.c: 32:     unsigned char caracter;;Practica8_15_03_19.c: 33:     uns
      +                          igned char Dir_sel;;Practica8_15_03_19.c: 35:     Lcd_Out(1,3,"Bienvenido");
  1020  006BF4  0E03               	movlw	3
  1021  006BF6  6E04               	movwf	Lcd_Out@x,c
  1022  006BF8  0E99               	movlw	low STR_7
  1023  006BFA  6E05               	movwf	Lcd_Out@buffer,c
  1024  006BFC  0E7F               	movlw	high STR_7
  1025  006BFE  6E06               	movwf	Lcd_Out@buffer+1,c
  1026  006C00  0E01               	movlw	1
  1027  006C02  EC86  F02B         	call	_Lcd_Out
  1028                           
  1029                           ;Practica8_15_03_19.c: 36:     Lcd_Out(2,4,"Humano :3");
  1030  006C06  0E04               	movlw	4
  1031  006C08  6E04               	movwf	Lcd_Out@x,c
  1032  006C0A  0EAF               	movlw	low STR_8
  1033  006C0C  6E05               	movwf	Lcd_Out@buffer,c
  1034  006C0E  0E7F               	movlw	high STR_8
  1035  006C10  6E06               	movwf	Lcd_Out@buffer+1,c
  1036  006C12  0E02               	movlw	2
  1037  006C14  EC86  F02B         	call	_Lcd_Out
  1038                           
  1039                           ;Practica8_15_03_19.c: 37:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1040  006C18  0E1F               	movlw	31
  1041  006C1A  6E5A               	movwf	(??_main+1)& (0+255),c
  1042  006C1C  0E71               	movlw	113
  1043  006C1E  6E59               	movwf	??_main& (0+255),c
  1044  006C20  0E1E               	movlw	30
  1045  006C22                     u2407:
  1046  006C22  2EE8               	decfsz	wreg,f,c
  1047  006C24  D7FE               	bra	u2407
  1048  006C26  2E59               	decfsz	??_main& (0+255),f,c
  1049  006C28  D7FC               	bra	u2407
  1050  006C2A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1051  006C2C  D7FA               	bra	u2407
  1052  006C2E  D000               	nop2	
  1053                           
  1054                           ;Practica8_15_03_19.c: 38:     Lcd_Cmd(1);
  1055  006C30  0E01               	movlw	1
  1056  006C32  EC8F  F02F         	call	_Lcd_Cmd
  1057                           
  1058                           ;Practica8_15_03_19.c: 39:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1059  006C36  0E02               	movlw	2
  1060  006C38  6E5A               	movwf	(??_main+1)& (0+255),c
  1061  006C3A  0E86               	movlw	134
  1062  006C3C  6E59               	movwf	??_main& (0+255),c
  1063  006C3E  0E99               	movlw	153
  1064  006C40                     u2417:
  1065  006C40  2EE8               	decfsz	wreg,f,c
  1066  006C42  D7FE               	bra	u2417
  1067  006C44  2E59               	decfsz	??_main& (0+255),f,c
  1068  006C46  D7FC               	bra	u2417
  1069  006C48  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1070  006C4A  D7FA               	bra	u2417
  1071  006C4C  F000               	nop	
  1072                           
  1073                           ;Practica8_15_03_19.c: 40:     Lcd_Out(1,1,"Control de");
  1074  006C4E  0E01               	movlw	1
  1075  006C50  6E04               	movwf	Lcd_Out@x,c
  1076  006C52  0E8E               	movlw	low STR_9
  1077  006C54  6E05               	movwf	Lcd_Out@buffer,c
  1078  006C56  0E7F               	movlw	high STR_9
  1079  006C58  6E06               	movwf	Lcd_Out@buffer+1,c
  1080  006C5A  0E01               	movlw	1
  1081  006C5C  EC86  F02B         	call	_Lcd_Out
  1082                           
  1083                           ;Practica8_15_03_19.c: 41:     Lcd_Out(2,1,"Motor a pasos");
  1084  006C60  0E01               	movlw	1
  1085  006C62  6E04               	movwf	Lcd_Out@x,c
  1086  006C64  0EFE               	movlw	low STR_10
  1087  006C66  6E05               	movwf	Lcd_Out@buffer,c
  1088  006C68  0E7E               	movlw	high STR_10
  1089  006C6A  6E06               	movwf	Lcd_Out@buffer+1,c
  1090  006C6C  0E02               	movlw	2
  1091  006C6E  EC86  F02B         	call	_Lcd_Out
  1092                           
  1093                           ;Practica8_15_03_19.c: 42:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1094  006C72  0E1F               	movlw	31
  1095  006C74  6E5A               	movwf	(??_main+1)& (0+255),c
  1096  006C76  0E71               	movlw	113
  1097  006C78  6E59               	movwf	??_main& (0+255),c
  1098  006C7A  0E1E               	movlw	30
  1099  006C7C                     u2427:
  1100  006C7C  2EE8               	decfsz	wreg,f,c
  1101  006C7E  D7FE               	bra	u2427
  1102  006C80  2E59               	decfsz	??_main& (0+255),f,c
  1103  006C82  D7FC               	bra	u2427
  1104  006C84  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1105  006C86  D7FA               	bra	u2427
  1106  006C88  D000               	nop2	
  1107                           
  1108                           ;Practica8_15_03_19.c: 43:     Lcd_Cmd(1);
  1109  006C8A  0E01               	movlw	1
  1110  006C8C  EC8F  F02F         	call	_Lcd_Cmd
  1111                           
  1112                           ;Practica8_15_03_19.c: 44:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1113  006C90  0E02               	movlw	2
  1114  006C92  6E5A               	movwf	(??_main+1)& (0+255),c
  1115  006C94  0E86               	movlw	134
  1116  006C96  6E59               	movwf	??_main& (0+255),c
  1117  006C98  0E99               	movlw	153
  1118  006C9A                     u2437:
  1119  006C9A  2EE8               	decfsz	wreg,f,c
  1120  006C9C  D7FE               	bra	u2437
  1121  006C9E  2E59               	decfsz	??_main& (0+255),f,c
  1122  006CA0  D7FC               	bra	u2437
  1123  006CA2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1124  006CA4  D7FA               	bra	u2437
  1125  006CA6  F000               	nop	
  1126                           
  1127                           ;Practica8_15_03_19.c: 45:     Lcd_Out(1,1,"Unipolar");
  1128  006CA8  0E01               	movlw	1
  1129  006CAA  6E04               	movwf	Lcd_Out@x,c
  1130  006CAC  0ECD               	movlw	low STR_11
  1131  006CAE  6E05               	movwf	Lcd_Out@buffer,c
  1132  006CB0  0E7F               	movlw	high STR_11
  1133  006CB2  6E06               	movwf	Lcd_Out@buffer+1,c
  1134  006CB4  0E01               	movlw	1
  1135  006CB6  EC86  F02B         	call	_Lcd_Out
  1136                           
  1137                           ;Practica8_15_03_19.c: 46:     Lcd_Out(2,1,"Es lo que hay");
  1138  006CBA  0E01               	movlw	1
  1139  006CBC  6E04               	movwf	Lcd_Out@x,c
  1140  006CBE  0E0C               	movlw	low STR_12
  1141  006CC0  6E05               	movwf	Lcd_Out@buffer,c
  1142  006CC2  0E7F               	movlw	high STR_12
  1143  006CC4  6E06               	movwf	Lcd_Out@buffer+1,c
  1144  006CC6  0E02               	movlw	2
  1145  006CC8  EC86  F02B         	call	_Lcd_Out
  1146                           
  1147                           ;Practica8_15_03_19.c: 47:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1148  006CCC  0E1F               	movlw	31
  1149  006CCE  6E5A               	movwf	(??_main+1)& (0+255),c
  1150  006CD0  0E71               	movlw	113
  1151  006CD2  6E59               	movwf	??_main& (0+255),c
  1152  006CD4  0E1E               	movlw	30
  1153  006CD6                     u2447:
  1154  006CD6  2EE8               	decfsz	wreg,f,c
  1155  006CD8  D7FE               	bra	u2447
  1156  006CDA  2E59               	decfsz	??_main& (0+255),f,c
  1157  006CDC  D7FC               	bra	u2447
  1158  006CDE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1159  006CE0  D7FA               	bra	u2447
  1160  006CE2  D000               	nop2	
  1161  006CE4                     l3585:
  1162                           
  1163                           ;Practica8_15_03_19.c: 49:         Dir_sel=0;caracter=0;valor=0;dir=0;pasos=0;Dir_sel=0;
  1164  006CE4  0E00               	movlw	0
  1165  006CE6  0100               	movlb	0	; () banked
  1166  006CE8  6FDC               	movwf	main@Dir_sel& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169  006CEA  0E00               	movlw	0
  1170  006CEC  6FD9               	movwf	main@caracter& (0+255),b
  1171                           
  1172                           ; BSR set to: 0
  1173  006CEE  0E00               	movlw	0
  1174  006CF0  6F64               	movwf	_valor& (0+255),b
  1175  006CF2  0E00               	movlw	0
  1176  006CF4  6F65               	movwf	(_valor+1)& (0+255),b
  1177  006CF6  0E00               	movlw	0
  1178  006CF8  6F66               	movwf	(_valor+2)& (0+255),b
  1179  006CFA  0E00               	movlw	0
  1180  006CFC  6F67               	movwf	(_valor+3)& (0+255),b
  1181                           
  1182                           ; BSR set to: 0
  1183  006CFE  0E00               	movlw	0
  1184  006D00  6FDB               	movwf	(main@dir+1)& (0+255),b
  1185  006D02  0E00               	movlw	0
  1186  006D04  6FDA               	movwf	main@dir& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189  006D06  0E00               	movlw	0
  1190  006D08  6FDD               	movwf	main@pasos& (0+255),b
  1191  006D0A  0E00               	movlw	0
  1192  006D0C  6FDE               	movwf	(main@pasos+1)& (0+255),b
  1193  006D0E  0E00               	movlw	0
  1194  006D10  6FDF               	movwf	(main@pasos+2)& (0+255),b
  1195  006D12  0E00               	movlw	0
  1196  006D14  6FE0               	movwf	(main@pasos+3)& (0+255),b
  1197                           
  1198                           ; BSR set to: 0
  1199  006D16  0E00               	movlw	0
  1200  006D18  6FDC               	movwf	main@Dir_sel& (0+255),b
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;Practica8_15_03_19.c: 50:         Lcd_Cmd(1);
  1204  006D1A  0E01               	movlw	1
  1205  006D1C  EC8F  F02F         	call	_Lcd_Cmd
  1206                           
  1207                           ;Practica8_15_03_19.c: 51:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1208  006D20  0E02               	movlw	2
  1209  006D22  6E5A               	movwf	(??_main+1)& (0+255),c
  1210  006D24  0E86               	movlw	134
  1211  006D26  6E59               	movwf	??_main& (0+255),c
  1212  006D28  0E99               	movlw	153
  1213  006D2A                     u2457:
  1214  006D2A  2EE8               	decfsz	wreg,f,c
  1215  006D2C  D7FE               	bra	u2457
  1216  006D2E  2E59               	decfsz	??_main& (0+255),f,c
  1217  006D30  D7FC               	bra	u2457
  1218  006D32  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1219  006D34  D7FA               	bra	u2457
  1220  006D36  F000               	nop	
  1221                           
  1222                           ;Practica8_15_03_19.c: 52:         Lcd_Out(1,1,"Opciones");
  1223  006D38  0E01               	movlw	1
  1224  006D3A  6E04               	movwf	Lcd_Out@x,c
  1225  006D3C  0ED6               	movlw	low STR_13
  1226  006D3E  6E05               	movwf	Lcd_Out@buffer,c
  1227  006D40  0E7F               	movlw	high STR_13
  1228  006D42  6E06               	movwf	Lcd_Out@buffer+1,c
  1229  006D44  0E01               	movlw	1
  1230  006D46  EC86  F02B         	call	_Lcd_Out
  1231                           
  1232                           ;Practica8_15_03_19.c: 53:         for(int i=10;i>0;i--){
  1233  006D4A  0E00               	movlw	0
  1234  006D4C  0100               	movlb	0	; () banked
  1235  006D4E  6FD8               	movwf	(main@i+1)& (0+255),b
  1236  006D50  0E0A               	movlw	10
  1237  006D52  6FD7               	movwf	main@i& (0+255),b
  1238  006D54                     l3605:
  1239                           
  1240                           ; BSR set to: 0
  1241  006D54  BFD8               	btfsc	(main@i+1)& (0+255),7,b
  1242  006D56  D019               	goto	l3617
  1243  006D58  51D8               	movf	(main@i+1)& (0+255),w,b
  1244  006D5A  E103               	bnz	l3609
  1245  006D5C  05D7               	decf	main@i& (0+255),w,b
  1246  006D5E  A0D8               	btfss	status,0,c
  1247  006D60  D014               	goto	l3617
  1248  006D62                     l3609:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;Practica8_15_03_19.c: 54:             Lcd_Cmd(24);
  1252  006D62  0E18               	movlw	24
  1253  006D64  EC8F  F02F         	call	_Lcd_Cmd
  1254                           
  1255                           ;Practica8_15_03_19.c: 55:             _delay((unsigned long)((400)*(12000000/4000.0)));
  1256  006D68  0E07               	movlw	7
  1257  006D6A  6E5A               	movwf	(??_main+1)& (0+255),c
  1258  006D6C  0E17               	movlw	23
  1259  006D6E  6E59               	movwf	??_main& (0+255),c
  1260  006D70  0E6A               	movlw	106
  1261  006D72                     u2467:
  1262  006D72  2EE8               	decfsz	wreg,f,c
  1263  006D74  D7FE               	bra	u2467
  1264  006D76  2E59               	decfsz	??_main& (0+255),f,c
  1265  006D78  D7FC               	bra	u2467
  1266  006D7A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1267  006D7C  D7FA               	bra	u2467
  1268  006D7E  D000               	nop2	
  1269                           
  1270                           ;Practica8_15_03_19.c: 56:         }
  1271  006D80  0100               	movlb	0	; () banked
  1272  006D82  07D7               	decf	main@i& (0+255),f,b
  1273  006D84  A0D8               	btfss	status,0,c
  1274  006D86  07D8               	decf	(main@i+1)& (0+255),f,b
  1275  006D88  D7E5               	goto	l3605
  1276  006D8A                     l3617:
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Practica8_15_03_19.c: 58:         Lcd_Cmd(1);
  1280  006D8A  0E01               	movlw	1
  1281  006D8C  EC8F  F02F         	call	_Lcd_Cmd
  1282                           
  1283                           ;Practica8_15_03_19.c: 59:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1284  006D90  0E02               	movlw	2
  1285  006D92  6E5A               	movwf	(??_main+1)& (0+255),c
  1286  006D94  0E86               	movlw	134
  1287  006D96  6E59               	movwf	??_main& (0+255),c
  1288  006D98  0E99               	movlw	153
  1289  006D9A                     u2477:
  1290  006D9A  2EE8               	decfsz	wreg,f,c
  1291  006D9C  D7FE               	bra	u2477
  1292  006D9E  2E59               	decfsz	??_main& (0+255),f,c
  1293  006DA0  D7FC               	bra	u2477
  1294  006DA2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1295  006DA4  D7FA               	bra	u2477
  1296  006DA6  F000               	nop	
  1297                           
  1298                           ;Practica8_15_03_19.c: 60:         Lcd_Out(1,1,"Presiona *");
  1299  006DA8  0E01               	movlw	1
  1300  006DAA  6E04               	movwf	Lcd_Out@x,c
  1301  006DAC  0E4C               	movlw	low STR_14
  1302  006DAE  6E05               	movwf	Lcd_Out@buffer,c
  1303  006DB0  0E7F               	movlw	high STR_14
  1304  006DB2  6E06               	movwf	Lcd_Out@buffer+1,c
  1305  006DB4  0E01               	movlw	1
  1306  006DB6  EC86  F02B         	call	_Lcd_Out
  1307                           
  1308                           ;Practica8_15_03_19.c: 61:         Lcd_Out(2,1,"cuando termines");
  1309  006DBA  0E01               	movlw	1
  1310  006DBC  6E04               	movwf	Lcd_Out@x,c
  1311  006DBE  0EA7               	movlw	low STR_15
  1312  006DC0  6E05               	movwf	Lcd_Out@buffer,c
  1313  006DC2  0E7E               	movlw	high STR_15
  1314  006DC4  6E06               	movwf	Lcd_Out@buffer+1,c
  1315  006DC6  0E02               	movlw	2
  1316  006DC8  EC86  F02B         	call	_Lcd_Out
  1317                           
  1318                           ;Practica8_15_03_19.c: 62:         _delay((unsigned long)((2000)*(12000000/4000.0)));
  1319  006DCC  0E1F               	movlw	31
  1320  006DCE  6E5A               	movwf	(??_main+1)& (0+255),c
  1321  006DD0  0E71               	movlw	113
  1322  006DD2  6E59               	movwf	??_main& (0+255),c
  1323  006DD4  0E1E               	movlw	30
  1324  006DD6                     u2487:
  1325  006DD6  2EE8               	decfsz	wreg,f,c
  1326  006DD8  D7FE               	bra	u2487
  1327  006DDA  2E59               	decfsz	??_main& (0+255),f,c
  1328  006DDC  D7FC               	bra	u2487
  1329  006DDE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1330  006DE0  D7FA               	bra	u2487
  1331  006DE2  D000               	nop2	
  1332                           
  1333                           ;Practica8_15_03_19.c: 63:         Lcd_Cmd(1);
  1334  006DE4  0E01               	movlw	1
  1335  006DE6  EC8F  F02F         	call	_Lcd_Cmd
  1336                           
  1337                           ;Practica8_15_03_19.c: 64:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1338  006DEA  0E02               	movlw	2
  1339  006DEC  6E5A               	movwf	(??_main+1)& (0+255),c
  1340  006DEE  0E86               	movlw	134
  1341  006DF0  6E59               	movwf	??_main& (0+255),c
  1342  006DF2  0E99               	movlw	153
  1343  006DF4                     u2497:
  1344  006DF4  2EE8               	decfsz	wreg,f,c
  1345  006DF6  D7FE               	bra	u2497
  1346  006DF8  2E59               	decfsz	??_main& (0+255),f,c
  1347  006DFA  D7FC               	bra	u2497
  1348  006DFC  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1349  006DFE  D7FA               	bra	u2497
  1350  006E00  F000               	nop	
  1351                           
  1352                           ;Practica8_15_03_19.c: 65:         Lcd_Out(1,1,"A:FS B:WS C:HS");
  1353  006E02  0E01               	movlw	1
  1354  006E04  6E04               	movwf	Lcd_Out@x,c
  1355  006E06  0EB7               	movlw	low STR_16
  1356  006E08  6E05               	movwf	Lcd_Out@buffer,c
  1357  006E0A  0E7E               	movlw	high STR_16
  1358  006E0C  6E06               	movwf	Lcd_Out@buffer+1,c
  1359  006E0E  0E01               	movlw	1
  1360  006E10  EC86  F02B         	call	_Lcd_Out
  1361                           
  1362                           ;Practica8_15_03_19.c: 66:         while(valor != '*'){
  1363  006E14  D030               	goto	l3643
  1364  006E16                     l3631:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;Practica8_15_03_19.c: 67:             teclado();
  1368  006E16  EC08  F033         	call	_teclado	;wreg free
  1369                           
  1370                           ;Practica8_15_03_19.c: 68:             if(valor=='A' || valor=='B' || valor=='C'){
  1371  006E1A  0E41               	movlw	65
  1372  006E1C  0100               	movlb	0	; () banked
  1373  006E1E  1964               	xorwf	_valor& (0+255),w,b
  1374  006E20  1165               	iorwf	(_valor+1)& (0+255),w,b
  1375  006E22  1166               	iorwf	(_valor+2)& (0+255),w,b
  1376  006E24  1167               	iorwf	(_valor+3)& (0+255),w,b
  1377  006E26  B4D8               	btfsc	status,2,c
  1378  006E28  D00E               	goto	u2100
  1379                           
  1380                           ; BSR set to: 0
  1381  006E2A  0E42               	movlw	66
  1382  006E2C  1964               	xorwf	_valor& (0+255),w,b
  1383  006E2E  1165               	iorwf	(_valor+1)& (0+255),w,b
  1384  006E30  1166               	iorwf	(_valor+2)& (0+255),w,b
  1385  006E32  1167               	iorwf	(_valor+3)& (0+255),w,b
  1386  006E34  B4D8               	btfsc	status,2,c
  1387  006E36  D007               	goto	u2100
  1388                           
  1389                           ; BSR set to: 0
  1390  006E38  0E43               	movlw	67
  1391  006E3A  1964               	xorwf	_valor& (0+255),w,b
  1392  006E3C  1165               	iorwf	(_valor+1)& (0+255),w,b
  1393  006E3E  1166               	iorwf	(_valor+2)& (0+255),w,b
  1394  006E40  1167               	iorwf	(_valor+3)& (0+255),w,b
  1395  006E42  A4D8               	btfss	status,2,c
  1396  006E44  D018               	goto	l3643
  1397  006E46                     u2100:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;Practica8_15_03_19.c: 69:             caracter=valor;
  1401  006E46  C064  F0D9         	movff	_valor,main@caracter
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;Practica8_15_03_19.c: 70:             sprintf(palabra,"%c",caracter);
  1405  006E4A  0EB4               	movlw	low _palabra
  1406  006E4C  6FC5               	movwf	sprintf@s& (0+255),b
  1407  006E4E  0E00               	movlw	high _palabra
  1408  006E50  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  1409  006E52  0EF8               	movlw	low (STR_26+1)
  1410  006E54  6FC7               	movwf	sprintf@fmt& (0+255),b
  1411  006E56  0E7F               	movlw	high (STR_26+1)
  1412  006E58  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  1413  006E5A  C0D9  F0C9         	movff	main@caracter,?_sprintf+4
  1414  006E5E  6BCA               	clrf	(?_sprintf+5)& (0+255),b
  1415  006E60  ECCF  F02A         	call	_sprintf	;wreg free
  1416                           
  1417                           ;Practica8_15_03_19.c: 71:             Lcd_Out2(2,1,palabra);
  1418  006E64  0E01               	movlw	1
  1419  006E66  6E04               	movwf	Lcd_Out2@x,c
  1420  006E68  0EB4               	movlw	low _palabra
  1421  006E6A  6E05               	movwf	Lcd_Out2@buffer,c
  1422  006E6C  0E00               	movlw	high _palabra
  1423  006E6E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1424  006E70  0E02               	movlw	2
  1425  006E72  EC4E  F02B         	call	_Lcd_Out2
  1426  006E76                     l3643:
  1427                           
  1428                           ;Practica8_15_03_19.c: 66:         while(valor != '*'){
  1429  006E76  0E2A               	movlw	42
  1430  006E78  0100               	movlb	0	; () banked
  1431  006E7A  1964               	xorwf	_valor& (0+255),w,b
  1432  006E7C  1165               	iorwf	(_valor+1)& (0+255),w,b
  1433  006E7E  1166               	iorwf	(_valor+2)& (0+255),w,b
  1434  006E80  1167               	iorwf	(_valor+3)& (0+255),w,b
  1435  006E82  A4D8               	btfss	status,2,c
  1436  006E84  D7C8               	goto	l3631
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;Practica8_15_03_19.c: 74:         Lcd_Cmd(1);
  1440  006E86  0E01               	movlw	1
  1441  006E88  EC8F  F02F         	call	_Lcd_Cmd
  1442                           
  1443                           ;Practica8_15_03_19.c: 75:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1444  006E8C  0E02               	movlw	2
  1445  006E8E  6E5A               	movwf	(??_main+1)& (0+255),c
  1446  006E90  0E86               	movlw	134
  1447  006E92  6E59               	movwf	??_main& (0+255),c
  1448  006E94  0E99               	movlw	153
  1449  006E96                     u2507:
  1450  006E96  2EE8               	decfsz	wreg,f,c
  1451  006E98  D7FE               	bra	u2507
  1452  006E9A  2E59               	decfsz	??_main& (0+255),f,c
  1453  006E9C  D7FC               	bra	u2507
  1454  006E9E  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1455  006EA0  D7FA               	bra	u2507
  1456  006EA2  F000               	nop	
  1457                           
  1458                           ;Practica8_15_03_19.c: 76:         switch(caracter){
  1459  006EA4  EF2E  F03F         	goto	l4103
  1460  006EA8                     l3649:
  1461                           
  1462                           ; BSR set to: 0
  1463  006EA8  0E00               	movlw	0
  1464  006EAA  6F64               	movwf	_valor& (0+255),b
  1465  006EAC  0E00               	movlw	0
  1466  006EAE  6F65               	movwf	(_valor+1)& (0+255),b
  1467  006EB0  0E00               	movlw	0
  1468  006EB2  6F66               	movwf	(_valor+2)& (0+255),b
  1469  006EB4  0E00               	movlw	0
  1470  006EB6  6F67               	movwf	(_valor+3)& (0+255),b
  1471  006EB8  0E00               	movlw	0
  1472  006EBA  6FD9               	movwf	main@caracter& (0+255),b
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;Practica8_15_03_19.c: 78:                 Lcd_Out(1,1,"FULL STEPS");
  1476  006EBC  0E01               	movlw	1
  1477  006EBE  6E04               	movwf	Lcd_Out@x,c
  1478  006EC0  0E78               	movlw	low STR_18
  1479  006EC2  6E05               	movwf	Lcd_Out@buffer,c
  1480  006EC4  0E7F               	movlw	high STR_18
  1481  006EC6  6E06               	movwf	Lcd_Out@buffer+1,c
  1482  006EC8  0E01               	movlw	1
  1483  006ECA  EC86  F02B         	call	_Lcd_Out
  1484                           
  1485                           ;Practica8_15_03_19.c: 79:                 Lcd_Out(2,1,"***************");
  1486  006ECE  0E01               	movlw	1
  1487  006ED0  6E04               	movwf	Lcd_Out@x,c
  1488  006ED2  0E87               	movlw	low STR_19
  1489  006ED4  6E05               	movwf	Lcd_Out@buffer,c
  1490  006ED6  0E7E               	movlw	high STR_19
  1491  006ED8  6E06               	movwf	Lcd_Out@buffer+1,c
  1492  006EDA  0E02               	movlw	2
  1493  006EDC  EC86  F02B         	call	_Lcd_Out
  1494                           
  1495                           ;Practica8_15_03_19.c: 80:                 _delay((unsigned long)((1000)*(12000000/4000.
      +                          0)));
  1496  006EE0  0E10               	movlw	16
  1497  006EE2  6E5A               	movwf	(??_main+1)& (0+255),c
  1498  006EE4  0E39               	movlw	57
  1499  006EE6  6E59               	movwf	??_main& (0+255),c
  1500  006EE8  0E0E               	movlw	14
  1501  006EEA                     u2517:
  1502  006EEA  2EE8               	decfsz	wreg,f,c
  1503  006EEC  D7FE               	bra	u2517
  1504  006EEE  2E59               	decfsz	??_main& (0+255),f,c
  1505  006EF0  D7FC               	bra	u2517
  1506  006EF2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1507  006EF4  D7FA               	bra	u2517
  1508                           
  1509                           ;Practica8_15_03_19.c: 81:                 Lcd_Cmd(1);
  1510  006EF6  0E01               	movlw	1
  1511  006EF8  EC8F  F02F         	call	_Lcd_Cmd
  1512                           
  1513                           ;Practica8_15_03_19.c: 82:                 _delay((unsigned long)((100)*(12000000/4000.0
      +                          )));
  1514  006EFC  0E02               	movlw	2
  1515  006EFE  6E5A               	movwf	(??_main+1)& (0+255),c
  1516  006F00  0E86               	movlw	134
  1517  006F02  6E59               	movwf	??_main& (0+255),c
  1518  006F04  0E99               	movlw	153
  1519  006F06                     u2527:
  1520  006F06  2EE8               	decfsz	wreg,f,c
  1521  006F08  D7FE               	bra	u2527
  1522  006F0A  2E59               	decfsz	??_main& (0+255),f,c
  1523  006F0C  D7FC               	bra	u2527
  1524  006F0E  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1525  006F10  D7FA               	bra	u2527
  1526  006F12  F000               	nop	
  1527                           
  1528                           ;Practica8_15_03_19.c: 83:                 Lcd_Out(1,1,"Selecciona el");
  1529  006F14  0E01               	movlw	1
  1530  006F16  6E04               	movwf	Lcd_Out@x,c
  1531  006F18  0EE2               	movlw	low STR_20
  1532  006F1A  6E05               	movwf	Lcd_Out@buffer,c
  1533  006F1C  0E7E               	movlw	high STR_20
  1534  006F1E  6E06               	movwf	Lcd_Out@buffer+1,c
  1535  006F20  0E01               	movlw	1
  1536  006F22  EC86  F02B         	call	_Lcd_Out
  1537                           
  1538                           ;Practica8_15_03_19.c: 84:                 Lcd_Out(2,1,"sentido de giro");
  1539  006F26  0E01               	movlw	1
  1540  006F28  6E04               	movwf	Lcd_Out@x,c
  1541  006F2A  0E97               	movlw	low STR_21
  1542  006F2C  6E05               	movwf	Lcd_Out@buffer,c
  1543  006F2E  0E7E               	movlw	high STR_21
  1544  006F30  6E06               	movwf	Lcd_Out@buffer+1,c
  1545  006F32  0E02               	movlw	2
  1546  006F34  EC86  F02B         	call	_Lcd_Out
  1547                           
  1548                           ;Practica8_15_03_19.c: 85:                 _delay((unsigned long)((1000)*(12000000/4000.
      +                          0)));
  1549  006F38  0E10               	movlw	16
  1550  006F3A  6E5A               	movwf	(??_main+1)& (0+255),c
  1551  006F3C  0E39               	movlw	57
  1552  006F3E  6E59               	movwf	??_main& (0+255),c
  1553  006F40  0E0E               	movlw	14
  1554  006F42                     u2537:
  1555  006F42  2EE8               	decfsz	wreg,f,c
  1556  006F44  D7FE               	bra	u2537
  1557  006F46  2E59               	decfsz	??_main& (0+255),f,c
  1558  006F48  D7FC               	bra	u2537
  1559  006F4A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1560  006F4C  D7FA               	bra	u2537
  1561                           
  1562                           ;Practica8_15_03_19.c: 86:                 Lcd_Cmd(1);
  1563  006F4E  0E01               	movlw	1
  1564  006F50  EC8F  F02F         	call	_Lcd_Cmd
  1565                           
  1566                           ;Practica8_15_03_19.c: 87:                 _delay((unsigned long)((100)*(12000000/4000.0
      +                          )));
  1567  006F54  0E02               	movlw	2
  1568  006F56  6E5A               	movwf	(??_main+1)& (0+255),c
  1569  006F58  0E86               	movlw	134
  1570  006F5A  6E59               	movwf	??_main& (0+255),c
  1571  006F5C  0E99               	movlw	153
  1572  006F5E                     u2547:
  1573  006F5E  2EE8               	decfsz	wreg,f,c
  1574  006F60  D7FE               	bra	u2547
  1575  006F62  2E59               	decfsz	??_main& (0+255),f,c
  1576  006F64  D7FC               	bra	u2547
  1577  006F66  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1578  006F68  D7FA               	bra	u2547
  1579  006F6A  F000               	nop	
  1580                           
  1581                           ;Practica8_15_03_19.c: 88:                 Lcd_Out(1,1,"Presiona *");
  1582  006F6C  0E01               	movlw	1
  1583  006F6E  6E04               	movwf	Lcd_Out@x,c
  1584  006F70  0E4C               	movlw	low STR_14
  1585  006F72  6E05               	movwf	Lcd_Out@buffer,c
  1586  006F74  0E7F               	movlw	high STR_14
  1587  006F76  6E06               	movwf	Lcd_Out@buffer+1,c
  1588  006F78  0E01               	movlw	1
  1589  006F7A  EC86  F02B         	call	_Lcd_Out
  1590                           
  1591                           ;Practica8_15_03_19.c: 89:                 Lcd_Out(2,1,"cuando termines");
  1592  006F7E  0E01               	movlw	1
  1593  006F80  6E04               	movwf	Lcd_Out@x,c
  1594  006F82  0EA7               	movlw	low STR_15
  1595  006F84  6E05               	movwf	Lcd_Out@buffer,c
  1596  006F86  0E7E               	movlw	high STR_15
  1597  006F88  6E06               	movwf	Lcd_Out@buffer+1,c
  1598  006F8A  0E02               	movlw	2
  1599  006F8C  EC86  F02B         	call	_Lcd_Out
  1600                           
  1601                           ;Practica8_15_03_19.c: 90:                 _delay((unsigned long)((1000)*(12000000/4000.
      +                          0)));
  1602  006F90  0E10               	movlw	16
  1603  006F92  6E5A               	movwf	(??_main+1)& (0+255),c
  1604  006F94  0E39               	movlw	57
  1605  006F96  6E59               	movwf	??_main& (0+255),c
  1606  006F98  0E0E               	movlw	14
  1607  006F9A                     u2557:
  1608  006F9A  2EE8               	decfsz	wreg,f,c
  1609  006F9C  D7FE               	bra	u2557
  1610  006F9E  2E59               	decfsz	??_main& (0+255),f,c
  1611  006FA0  D7FC               	bra	u2557
  1612  006FA2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1613  006FA4  D7FA               	bra	u2557
  1614                           
  1615                           ;Practica8_15_03_19.c: 91:                 Lcd_Cmd(1);
  1616  006FA6  0E01               	movlw	1
  1617  006FA8  EC8F  F02F         	call	_Lcd_Cmd
  1618                           
  1619                           ;Practica8_15_03_19.c: 92:                 _delay((unsigned long)((100)*(12000000/4000.0
      +                          )));
  1620  006FAC  0E02               	movlw	2
  1621  006FAE  6E5A               	movwf	(??_main+1)& (0+255),c
  1622  006FB0  0E86               	movlw	134
  1623  006FB2  6E59               	movwf	??_main& (0+255),c
  1624  006FB4  0E99               	movlw	153
  1625  006FB6                     u2567:
  1626  006FB6  2EE8               	decfsz	wreg,f,c
  1627  006FB8  D7FE               	bra	u2567
  1628  006FBA  2E59               	decfsz	??_main& (0+255),f,c
  1629  006FBC  D7FC               	bra	u2567
  1630  006FBE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1631  006FC0  D7FA               	bra	u2567
  1632  006FC2  F000               	nop	
  1633                           
  1634                           ;Practica8_15_03_19.c: 93:                 Lcd_Out(1,2,"1:DER  2:IZQ");
  1635  006FC4  0E02               	movlw	2
  1636  006FC6  6E04               	movwf	Lcd_Out@x,c
  1637  006FC8  0E1A               	movlw	low STR_24
  1638  006FCA  6E05               	movwf	Lcd_Out@buffer,c
  1639  006FCC  0E7F               	movlw	high STR_24
  1640  006FCE  6E06               	movwf	Lcd_Out@buffer+1,c
  1641  006FD0  0E01               	movlw	1
  1642  006FD2  EC86  F02B         	call	_Lcd_Out
  1643                           
  1644                           ;Practica8_15_03_19.c: 94:                 Lcd_Out(2,1,"OPT:");
  1645  006FD6  0E01               	movlw	1
  1646  006FD8  6E04               	movwf	Lcd_Out@x,c
  1647  006FDA  0EED               	movlw	low STR_25
  1648  006FDC  6E05               	movwf	Lcd_Out@buffer,c
  1649  006FDE  0E7F               	movlw	high STR_25
  1650  006FE0  6E06               	movwf	Lcd_Out@buffer+1,c
  1651  006FE2  0E02               	movlw	2
  1652  006FE4  EC86  F02B         	call	_Lcd_Out
  1653                           
  1654                           ;Practica8_15_03_19.c: 95:                 while(valor != '*'){
  1655  006FE8  D03A               	goto	l161
  1656  006FEA                     l3685:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;Practica8_15_03_19.c: 96:                     teclado();
  1660  006FEA  EC08  F033         	call	_teclado	;wreg free
  1661                           
  1662                           ;Practica8_15_03_19.c: 97:                     if(valor=='1' || valor=='2'){
  1663  006FEE  0E31               	movlw	49
  1664  006FF0  0100               	movlb	0	; () banked
  1665  006FF2  1964               	xorwf	_valor& (0+255),w,b
  1666  006FF4  1165               	iorwf	(_valor+1)& (0+255),w,b
  1667  006FF6  1166               	iorwf	(_valor+2)& (0+255),w,b
  1668  006FF8  1167               	iorwf	(_valor+3)& (0+255),w,b
  1669  006FFA  B4D8               	btfsc	status,2,c
  1670  006FFC  D007               	goto	u2130
  1671                           
  1672                           ; BSR set to: 0
  1673  006FFE  0E32               	movlw	50
  1674  007000  1964               	xorwf	_valor& (0+255),w,b
  1675  007002  1165               	iorwf	(_valor+1)& (0+255),w,b
  1676  007004  1166               	iorwf	(_valor+2)& (0+255),w,b
  1677  007006  1167               	iorwf	(_valor+3)& (0+255),w,b
  1678  007008  A4D8               	btfss	status,2,c
  1679  00700A  D029               	goto	l161
  1680  00700C                     u2130:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;Practica8_15_03_19.c: 98:                         Dir_sel=valor;
  1684  00700C  C064  F0DC         	movff	_valor,main@Dir_sel
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;Practica8_15_03_19.c: 99:                         sprintf(palabra1," %c",Dir_sel);
  1688  007010  0EA3               	movlw	low _palabra1
  1689  007012  6FC5               	movwf	sprintf@s& (0+255),b
  1690  007014  0E00               	movlw	high _palabra1
  1691  007016  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  1692  007018  0EF7               	movlw	low STR_26
  1693  00701A  6FC7               	movwf	sprintf@fmt& (0+255),b
  1694  00701C  0E7F               	movlw	high STR_26
  1695  00701E  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  1696  007020  C0DC  F0C9         	movff	main@Dir_sel,?_sprintf+4
  1697  007024  6BCA               	clrf	(?_sprintf+5)& (0+255),b
  1698  007026  ECCF  F02A         	call	_sprintf	;wreg free
  1699                           
  1700                           ;Practica8_15_03_19.c: 100:                         Lcd_Out2(2,5,palabra1);
  1701  00702A  0E05               	movlw	5
  1702  00702C  6E04               	movwf	Lcd_Out2@x,c
  1703  00702E  0EA3               	movlw	low _palabra1
  1704  007030  6E05               	movwf	Lcd_Out2@buffer,c
  1705  007032  0E00               	movlw	high _palabra1
  1706  007034  6E06               	movwf	Lcd_Out2@buffer+1,c
  1707  007036  0E02               	movlw	2
  1708  007038  EC4E  F02B         	call	_Lcd_Out2
  1709                           
  1710                           ;Practica8_15_03_19.c: 101:                         if(Dir_sel=='1'){dir=1;}
  1711  00703C  0E31               	movlw	49
  1712  00703E  0100               	movlb	0	; () banked
  1713  007040  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  1714  007042  A4D8               	btfss	status,2,c
  1715  007044  D004               	goto	l3699
  1716                           
  1717                           ; BSR set to: 0
  1718  007046  0E00               	movlw	0
  1719  007048  6FDB               	movwf	(main@dir+1)& (0+255),b
  1720  00704A  0E01               	movlw	1
  1721  00704C  D007               	goto	L1
  1722  00704E                     l3699:
  1723                           
  1724                           ; BSR set to: 0
  1725  00704E  0E32               	movlw	50
  1726  007050  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  1727  007052  A4D8               	btfss	status,2,c
  1728  007054  D004               	goto	l161
  1729                           
  1730                           ; BSR set to: 0
  1731  007056  0E00               	movlw	0
  1732  007058  6FDB               	movwf	(main@dir+1)& (0+255),b
  1733  00705A  0E02               	movlw	2
  1734  00705C                     L1:
  1735  00705C  6FDA               	movwf	main@dir& (0+255),b
  1736  00705E                     l161:
  1737                           
  1738                           ;Practica8_15_03_19.c: 95:                 while(valor != '*'){
  1739                           
  1740                           ; BSR set to: 0
  1741  00705E  0E2A               	movlw	42
  1742  007060  0100               	movlb	0	; () banked
  1743  007062  1964               	xorwf	_valor& (0+255),w,b
  1744  007064  1165               	iorwf	(_valor+1)& (0+255),w,b
  1745  007066  1166               	iorwf	(_valor+2)& (0+255),w,b
  1746  007068  1167               	iorwf	(_valor+3)& (0+255),w,b
  1747  00706A  A4D8               	btfss	status,2,c
  1748  00706C  D7BE               	goto	l3685
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;Practica8_15_03_19.c: 106:                 valor=0;
  1752  00706E  0E00               	movlw	0
  1753  007070  6F64               	movwf	_valor& (0+255),b
  1754  007072  0E00               	movlw	0
  1755  007074  6F65               	movwf	(_valor+1)& (0+255),b
  1756  007076  0E00               	movlw	0
  1757  007078  6F66               	movwf	(_valor+2)& (0+255),b
  1758  00707A  0E00               	movlw	0
  1759  00707C  6F67               	movwf	(_valor+3)& (0+255),b
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;Practica8_15_03_19.c: 107:                 Lcd_Cmd(1);
  1763  00707E  0E01               	movlw	1
  1764  007080  EC8F  F02F         	call	_Lcd_Cmd
  1765                           
  1766                           ;Practica8_15_03_19.c: 108:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  1767  007084  0E02               	movlw	2
  1768  007086  6E5A               	movwf	(??_main+1)& (0+255),c
  1769  007088  0E86               	movlw	134
  1770  00708A  6E59               	movwf	??_main& (0+255),c
  1771  00708C  0E99               	movlw	153
  1772  00708E                     u2577:
  1773  00708E  2EE8               	decfsz	wreg,f,c
  1774  007090  D7FE               	bra	u2577
  1775  007092  2E59               	decfsz	??_main& (0+255),f,c
  1776  007094  D7FC               	bra	u2577
  1777  007096  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1778  007098  D7FA               	bra	u2577
  1779  00709A  F000               	nop	
  1780                           
  1781                           ;Practica8_15_03_19.c: 109:                 Lcd_Out(1,1,"Selecciona el");
  1782  00709C  0E01               	movlw	1
  1783  00709E  6E04               	movwf	Lcd_Out@x,c
  1784  0070A0  0EE2               	movlw	low STR_20
  1785  0070A2  6E05               	movwf	Lcd_Out@buffer,c
  1786  0070A4  0E7E               	movlw	high STR_20
  1787  0070A6  6E06               	movwf	Lcd_Out@buffer+1,c
  1788  0070A8  0E01               	movlw	1
  1789  0070AA  EC86  F02B         	call	_Lcd_Out
  1790                           
  1791                           ;Practica8_15_03_19.c: 110:                 Lcd_Out(2,1,"N de pasos");
  1792  0070AE  0E01               	movlw	1
  1793  0070B0  6E04               	movwf	Lcd_Out@x,c
  1794  0070B2  0EA4               	movlw	low STR_28
  1795  0070B4  6E05               	movwf	Lcd_Out@buffer,c
  1796  0070B6  0E7F               	movlw	high STR_28
  1797  0070B8  6E06               	movwf	Lcd_Out@buffer+1,c
  1798  0070BA  0E02               	movlw	2
  1799  0070BC  EC86  F02B         	call	_Lcd_Out
  1800                           
  1801                           ;Practica8_15_03_19.c: 111:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  1802  0070C0  0E10               	movlw	16
  1803  0070C2  6E5A               	movwf	(??_main+1)& (0+255),c
  1804  0070C4  0E39               	movlw	57
  1805  0070C6  6E59               	movwf	??_main& (0+255),c
  1806  0070C8  0E0E               	movlw	14
  1807  0070CA                     u2587:
  1808  0070CA  2EE8               	decfsz	wreg,f,c
  1809  0070CC  D7FE               	bra	u2587
  1810  0070CE  2E59               	decfsz	??_main& (0+255),f,c
  1811  0070D0  D7FC               	bra	u2587
  1812  0070D2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1813  0070D4  D7FA               	bra	u2587
  1814                           
  1815                           ;Practica8_15_03_19.c: 112:                 Lcd_Cmd(1);
  1816  0070D6  0E01               	movlw	1
  1817  0070D8  EC8F  F02F         	call	_Lcd_Cmd
  1818                           
  1819                           ;Practica8_15_03_19.c: 113:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  1820  0070DC  0E02               	movlw	2
  1821  0070DE  6E5A               	movwf	(??_main+1)& (0+255),c
  1822  0070E0  0E86               	movlw	134
  1823  0070E2  6E59               	movwf	??_main& (0+255),c
  1824  0070E4  0E99               	movlw	153
  1825  0070E6                     u2597:
  1826  0070E6  2EE8               	decfsz	wreg,f,c
  1827  0070E8  D7FE               	bra	u2597
  1828  0070EA  2E59               	decfsz	??_main& (0+255),f,c
  1829  0070EC  D7FC               	bra	u2597
  1830  0070EE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1831  0070F0  D7FA               	bra	u2597
  1832  0070F2  F000               	nop	
  1833                           
  1834                           ;Practica8_15_03_19.c: 114:                 Lcd_Out(1,1,"Presiona *");
  1835  0070F4  0E01               	movlw	1
  1836  0070F6  6E04               	movwf	Lcd_Out@x,c
  1837  0070F8  0E4C               	movlw	low STR_14
  1838  0070FA  6E05               	movwf	Lcd_Out@buffer,c
  1839  0070FC  0E7F               	movlw	high STR_14
  1840  0070FE  6E06               	movwf	Lcd_Out@buffer+1,c
  1841  007100  0E01               	movlw	1
  1842  007102  EC86  F02B         	call	_Lcd_Out
  1843                           
  1844                           ;Practica8_15_03_19.c: 115:                 Lcd_Out(2,1,"cuando termines");
  1845  007106  0E01               	movlw	1
  1846  007108  6E04               	movwf	Lcd_Out@x,c
  1847  00710A  0EA7               	movlw	low STR_15
  1848  00710C  6E05               	movwf	Lcd_Out@buffer,c
  1849  00710E  0E7E               	movlw	high STR_15
  1850  007110  6E06               	movwf	Lcd_Out@buffer+1,c
  1851  007112  0E02               	movlw	2
  1852  007114  EC86  F02B         	call	_Lcd_Out
  1853                           
  1854                           ;Practica8_15_03_19.c: 116:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  1855  007118  0E10               	movlw	16
  1856  00711A  6E5A               	movwf	(??_main+1)& (0+255),c
  1857  00711C  0E39               	movlw	57
  1858  00711E  6E59               	movwf	??_main& (0+255),c
  1859  007120  0E0E               	movlw	14
  1860  007122                     u2607:
  1861  007122  2EE8               	decfsz	wreg,f,c
  1862  007124  D7FE               	bra	u2607
  1863  007126  2E59               	decfsz	??_main& (0+255),f,c
  1864  007128  D7FC               	bra	u2607
  1865  00712A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1866  00712C  D7FA               	bra	u2607
  1867                           
  1868                           ;Practica8_15_03_19.c: 117:                 Lcd_Cmd(1);
  1869  00712E  0E01               	movlw	1
  1870  007130  EC8F  F02F         	call	_Lcd_Cmd
  1871  007134                     l3729:
  1872                           
  1873                           ;Practica8_15_03_19.c: 118:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  1874  007134  0E02               	movlw	2
  1875  007136  6E5A               	movwf	(??_main+1)& (0+255),c
  1876  007138  0E86               	movlw	134
  1877  00713A  6E59               	movwf	??_main& (0+255),c
  1878  00713C  0E99               	movlw	153
  1879  00713E                     u2617:
  1880  00713E  2EE8               	decfsz	wreg,f,c
  1881  007140  D7FE               	bra	u2617
  1882  007142  2E59               	decfsz	??_main& (0+255),f,c
  1883  007144  D7FC               	bra	u2617
  1884  007146  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  1885  007148  D7FA               	bra	u2617
  1886  00714A  F000               	nop	
  1887                           
  1888                           ;Practica8_15_03_19.c: 119:                 while(valor != '*'){
  1889  00714C  D0ED               	goto	l3777
  1890  00714E                     l3731:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;Practica8_15_03_19.c: 120:                     teclado();
  1894  00714E  EC08  F033         	call	_teclado	;wreg free
  1895                           
  1896                           ;Practica8_15_03_19.c: 121:                     Lcd_Out(1,1,"Numero de ");
  1897  007152  0E01               	movlw	1
  1898  007154  6E04               	movwf	Lcd_Out@x,c
  1899  007156  0E41               	movlw	low STR_31
  1900  007158  6E05               	movwf	Lcd_Out@buffer,c
  1901  00715A  0E7F               	movlw	high STR_31
  1902  00715C  6E06               	movwf	Lcd_Out@buffer+1,c
  1903  00715E  0E01               	movlw	1
  1904  007160  EC86  F02B         	call	_Lcd_Out
  1905                           
  1906                           ;Practica8_15_03_19.c: 122:                     Lcd_Out(2,1,"Pasos:");
  1907  007164  0E01               	movlw	1
  1908  007166  6E04               	movwf	Lcd_Out@x,c
  1909  007168  0EDF               	movlw	low STR_32
  1910  00716A  6E05               	movwf	Lcd_Out@buffer,c
  1911  00716C  0E7F               	movlw	high STR_32
  1912  00716E  6E06               	movwf	Lcd_Out@buffer+1,c
  1913  007170  0E02               	movlw	2
  1914  007172  EC86  F02B         	call	_Lcd_Out
  1915                           
  1916                           ;Practica8_15_03_19.c: 123:                     if((valor >= '0') && (valor <= '9')){
  1917  007176  0100               	movlb	0	; () banked
  1918  007178  5167               	movf	(_valor+3)& (0+255),w,b
  1919  00717A  1166               	iorwf	(_valor+2)& (0+255),w,b
  1920  00717C  1165               	iorwf	(_valor+1)& (0+255),w,b
  1921  00717E  E104               	bnz	u2170
  1922  007180  0E30               	movlw	48
  1923  007182  5D64               	subwf	_valor& (0+255),w,b
  1924  007184  A0D8               	btfss	status,0,c
  1925  007186  D04E               	goto	l3747
  1926  007188                     u2170:
  1927                           
  1928                           ; BSR set to: 0
  1929  007188  5167               	movf	(_valor+3)& (0+255),w,b
  1930  00718A  1166               	iorwf	(_valor+2)& (0+255),w,b
  1931  00718C  1165               	iorwf	(_valor+1)& (0+255),w,b
  1932  00718E  E14A               	bnz	l3747
  1933  007190  0E3A               	movlw	58
  1934  007192  5D64               	subwf	_valor& (0+255),w,b
  1935  007194  B0D8               	btfsc	status,0,c
  1936  007196  D046               	goto	l3747
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;Practica8_15_03_19.c: 124:                         pasos = pasos*10 + (valor - 48);
  1940  007198  C0DD  F001         	movff	main@pasos,___lmul@multiplier
  1941  00719C  C0DE  F002         	movff	main@pasos+1,___lmul@multiplier+1
  1942  0071A0  C0DF  F003         	movff	main@pasos+2,___lmul@multiplier+2
  1943  0071A4  C0E0  F004         	movff	main@pasos+3,___lmul@multiplier+3
  1944  0071A8  0E0A               	movlw	10
  1945  0071AA  6E05               	movwf	___lmul@multiplicand,c
  1946  0071AC  0E00               	movlw	0
  1947  0071AE  6E06               	movwf	___lmul@multiplicand+1,c
  1948  0071B0  0E00               	movlw	0
  1949  0071B2  6E07               	movwf	___lmul@multiplicand+2,c
  1950  0071B4  0E00               	movlw	0
  1951  0071B6  6E08               	movwf	___lmul@multiplicand+3,c
  1952  0071B8  ECF8  F02A         	call	___lmul	;wreg free
  1953  0071BC  0100               	movlb	0	; () banked
  1954  0071BE  5164               	movf	_valor& (0+255),w,b
  1955  0071C0  2401               	addwf	?___lmul,w,c
  1956  0071C2  6E59               	movwf	??_main& (0+255),c
  1957  0071C4  5165               	movf	(_valor+1)& (0+255),w,b
  1958  0071C6  2002               	addwfc	?___lmul+1,w,c
  1959  0071C8  6E5A               	movwf	(??_main+1)& (0+255),c
  1960  0071CA  5166               	movf	(_valor+2)& (0+255),w,b
  1961  0071CC  2003               	addwfc	?___lmul+2,w,c
  1962  0071CE  6E5B               	movwf	(??_main+2)& (0+255),c
  1963  0071D0  5167               	movf	(_valor+3)& (0+255),w,b
  1964  0071D2  2004               	addwfc	?___lmul+3,w,c
  1965  0071D4  6E5C               	movwf	(??_main+3)& (0+255),c
  1966  0071D6  0ED0               	movlw	208
  1967  0071D8  2459               	addwf	??_main,w,c
  1968  0071DA  6FDD               	movwf	main@pasos& (0+255),b
  1969  0071DC  0EFF               	movlw	255
  1970  0071DE  205A               	addwfc	??_main+1,w,c
  1971  0071E0  6FDE               	movwf	(main@pasos+1)& (0+255),b
  1972  0071E2  0EFF               	movlw	255
  1973  0071E4  205B               	addwfc	??_main+2,w,c
  1974  0071E6  6FDF               	movwf	(main@pasos+2)& (0+255),b
  1975  0071E8  0EFF               	movlw	255
  1976  0071EA  205C               	addwfc	??_main+3,w,c
  1977  0071EC  6FE0               	movwf	(main@pasos+3)& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;Practica8_15_03_19.c: 125:                         sprintf(palabra2," %d",pasos);
  1981  0071EE  0E92               	movlw	low _palabra2
  1982  0071F0  6FC5               	movwf	sprintf@s& (0+255),b
  1983  0071F2  0E00               	movlw	high _palabra2
  1984  0071F4  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  1985  0071F6  0EFB               	movlw	low STR_33
  1986  0071F8  6FC7               	movwf	sprintf@fmt& (0+255),b
  1987  0071FA  0E7F               	movlw	high STR_33
  1988  0071FC  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  1989  0071FE  C0DD  F0C9         	movff	main@pasos,?_sprintf+4
  1990  007202  C0DE  F0CA         	movff	main@pasos+1,?_sprintf+5
  1991  007206  C0DF  F0CB         	movff	main@pasos+2,?_sprintf+6
  1992  00720A  C0E0  F0CC         	movff	main@pasos+3,?_sprintf+7
  1993  00720E  ECCF  F02A         	call	_sprintf	;wreg free
  1994                           
  1995                           ;Practica8_15_03_19.c: 126:                         Lcd_Out2(2,7,palabra2);
  1996  007212  0E07               	movlw	7
  1997  007214  6E04               	movwf	Lcd_Out2@x,c
  1998  007216  0E92               	movlw	low _palabra2
  1999  007218  6E05               	movwf	Lcd_Out2@buffer,c
  2000  00721A  0E00               	movlw	high _palabra2
  2001  00721C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2002  00721E  0E02               	movlw	2
  2003  007220  EC4E  F02B         	call	_Lcd_Out2
  2004  007224                     l3747:
  2005                           
  2006                           ;Practica8_15_03_19.c: 128:                     Pasos_fun = pasos;
  2007  007224  C0DD  F060         	movff	main@pasos,_Pasos_fun
  2008  007228  C0DE  F061         	movff	main@pasos+1,_Pasos_fun+1
  2009  00722C  C0DF  F062         	movff	main@pasos+2,_Pasos_fun+2
  2010  007230  C0E0  F063         	movff	main@pasos+3,_Pasos_fun+3
  2011                           
  2012                           ;Practica8_15_03_19.c: 129:                     if(Pasos_fun>9000){
  2013  007234  0100               	movlb	0	; () banked
  2014  007236  BF63               	btfsc	(_Pasos_fun+3)& (0+255),7,b
  2015  007238  D077               	goto	l3777
  2016  00723A  5163               	movf	(_Pasos_fun+3)& (0+255),w,b
  2017  00723C  1162               	iorwf	(_Pasos_fun+2)& (0+255),w,b
  2018  00723E  E106               	bnz	u2190
  2019  007240  0E29               	movlw	41
  2020  007242  5D60               	subwf	_Pasos_fun& (0+255),w,b
  2021  007244  0E23               	movlw	35
  2022  007246  5961               	subwfb	(_Pasos_fun+1)& (0+255),w,b
  2023  007248  A0D8               	btfss	status,0,c
  2024  00724A  D06E               	goto	l3777
  2025  00724C                     u2190:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;Practica8_15_03_19.c: 130:                         pasos=0;Pasos_fun=0;
  2029  00724C  0E00               	movlw	0
  2030  00724E  6FDD               	movwf	main@pasos& (0+255),b
  2031  007250  0E00               	movlw	0
  2032  007252  6FDE               	movwf	(main@pasos+1)& (0+255),b
  2033  007254  0E00               	movlw	0
  2034  007256  6FDF               	movwf	(main@pasos+2)& (0+255),b
  2035  007258  0E00               	movlw	0
  2036  00725A  6FE0               	movwf	(main@pasos+3)& (0+255),b
  2037  00725C  0E00               	movlw	0
  2038  00725E  6F60               	movwf	_Pasos_fun& (0+255),b
  2039  007260  0E00               	movlw	0
  2040  007262  6F61               	movwf	(_Pasos_fun+1)& (0+255),b
  2041  007264  0E00               	movlw	0
  2042  007266  6F62               	movwf	(_Pasos_fun+2)& (0+255),b
  2043  007268  0E00               	movlw	0
  2044  00726A  6F63               	movwf	(_Pasos_fun+3)& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;Practica8_15_03_19.c: 131:                         Lcd_Cmd(1);
  2048  00726C  0E01               	movlw	1
  2049  00726E  EC8F  F02F         	call	_Lcd_Cmd
  2050                           
  2051                           ;Practica8_15_03_19.c: 132:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  2052  007272  0E02               	movlw	2
  2053  007274  6E5A               	movwf	(??_main+1)& (0+255),c
  2054  007276  0E86               	movlw	134
  2055  007278  6E59               	movwf	??_main& (0+255),c
  2056  00727A  0E99               	movlw	153
  2057  00727C                     u2627:
  2058  00727C  2EE8               	decfsz	wreg,f,c
  2059  00727E  D7FE               	bra	u2627
  2060  007280  2E59               	decfsz	??_main& (0+255),f,c
  2061  007282  D7FC               	bra	u2627
  2062  007284  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2063  007286  D7FA               	bra	u2627
  2064  007288  F000               	nop	
  2065                           
  2066                           ;Practica8_15_03_19.c: 133:                         Lcd_Out(1,1,"Valor maximo");
  2067  00728A  0E01               	movlw	1
  2068  00728C  6E04               	movwf	Lcd_Out@x,c
  2069  00728E  0E27               	movlw	low STR_34
  2070  007290  6E05               	movwf	Lcd_Out@buffer,c
  2071  007292  0E7F               	movlw	high STR_34
  2072  007294  6E06               	movwf	Lcd_Out@buffer+1,c
  2073  007296  0E01               	movlw	1
  2074  007298  EC86  F02B         	call	_Lcd_Out
  2075                           
  2076                           ;Practica8_15_03_19.c: 134:                         Lcd_Out(2,1,"alcanzado");
  2077  00729C  0E01               	movlw	1
  2078  00729E  6E04               	movwf	Lcd_Out@x,c
  2079  0072A0  0EC3               	movlw	low STR_35
  2080  0072A2  6E05               	movwf	Lcd_Out@buffer,c
  2081  0072A4  0E7F               	movlw	high STR_35
  2082  0072A6  6E06               	movwf	Lcd_Out@buffer+1,c
  2083  0072A8  0E02               	movlw	2
  2084  0072AA  EC86  F02B         	call	_Lcd_Out
  2085                           
  2086                           ;Practica8_15_03_19.c: 135:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  2087  0072AE  0E1F               	movlw	31
  2088  0072B0  6E5A               	movwf	(??_main+1)& (0+255),c
  2089  0072B2  0E71               	movlw	113
  2090  0072B4  6E59               	movwf	??_main& (0+255),c
  2091  0072B6  0E1E               	movlw	30
  2092  0072B8                     u2637:
  2093  0072B8  2EE8               	decfsz	wreg,f,c
  2094  0072BA  D7FE               	bra	u2637
  2095  0072BC  2E59               	decfsz	??_main& (0+255),f,c
  2096  0072BE  D7FC               	bra	u2637
  2097  0072C0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2098  0072C2  D7FA               	bra	u2637
  2099  0072C4  D000               	nop2	
  2100                           
  2101                           ;Practica8_15_03_19.c: 136:                         Lcd_Cmd(1);
  2102  0072C6  0E01               	movlw	1
  2103  0072C8  EC8F  F02F         	call	_Lcd_Cmd
  2104                           
  2105                           ;Practica8_15_03_19.c: 137:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  2106  0072CC  0E02               	movlw	2
  2107  0072CE  6E5A               	movwf	(??_main+1)& (0+255),c
  2108  0072D0  0E86               	movlw	134
  2109  0072D2  6E59               	movwf	??_main& (0+255),c
  2110  0072D4  0E99               	movlw	153
  2111  0072D6                     u2647:
  2112  0072D6  2EE8               	decfsz	wreg,f,c
  2113  0072D8  D7FE               	bra	u2647
  2114  0072DA  2E59               	decfsz	??_main& (0+255),f,c
  2115  0072DC  D7FC               	bra	u2647
  2116  0072DE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2117  0072E0  D7FA               	bra	u2647
  2118  0072E2  F000               	nop	
  2119                           
  2120                           ;Practica8_15_03_19.c: 138:                         Lcd_Out(1,1,"Intentalo de ");
  2121  0072E4  0E01               	movlw	1
  2122  0072E6  6E04               	movwf	Lcd_Out@x,c
  2123  0072E8  0EC6               	movlw	low STR_36
  2124  0072EA  6E05               	movwf	Lcd_Out@buffer,c
  2125  0072EC  0E7E               	movlw	high STR_36
  2126  0072EE  6E06               	movwf	Lcd_Out@buffer+1,c
  2127  0072F0  0E01               	movlw	1
  2128  0072F2  EC86  F02B         	call	_Lcd_Out
  2129                           
  2130                           ;Practica8_15_03_19.c: 139:                         Lcd_Out(2,1,"nuevo humano");
  2131  0072F6  0E01               	movlw	1
  2132  0072F8  6E04               	movwf	Lcd_Out@x,c
  2133  0072FA  0E34               	movlw	low STR_37
  2134  0072FC  6E05               	movwf	Lcd_Out@buffer,c
  2135  0072FE  0E7F               	movlw	high STR_37
  2136  007300  6E06               	movwf	Lcd_Out@buffer+1,c
  2137  007302  0E02               	movlw	2
  2138  007304  EC86  F02B         	call	_Lcd_Out
  2139                           
  2140                           ;Practica8_15_03_19.c: 140:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  2141  007308  0E1F               	movlw	31
  2142  00730A  6E5A               	movwf	(??_main+1)& (0+255),c
  2143  00730C  0E71               	movlw	113
  2144  00730E  6E59               	movwf	??_main& (0+255),c
  2145  007310  0E1E               	movlw	30
  2146  007312                     u2657:
  2147  007312  2EE8               	decfsz	wreg,f,c
  2148  007314  D7FE               	bra	u2657
  2149  007316  2E59               	decfsz	??_main& (0+255),f,c
  2150  007318  D7FC               	bra	u2657
  2151  00731A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2152  00731C  D7FA               	bra	u2657
  2153  00731E  D000               	nop2	
  2154                           
  2155                           ;Practica8_15_03_19.c: 141:                         Lcd_Cmd(1);
  2156  007320  0E01               	movlw	1
  2157  007322  EC8F  F02F         	call	_Lcd_Cmd
  2158  007326  D706               	goto	l3729
  2159  007328                     l3777:
  2160                           
  2161                           ;Practica8_15_03_19.c: 119:                 while(valor != '*'){
  2162  007328  0E2A               	movlw	42
  2163  00732A  0100               	movlb	0	; () banked
  2164  00732C  1964               	xorwf	_valor& (0+255),w,b
  2165  00732E  1165               	iorwf	(_valor+1)& (0+255),w,b
  2166  007330  1166               	iorwf	(_valor+2)& (0+255),w,b
  2167  007332  1167               	iorwf	(_valor+3)& (0+255),w,b
  2168  007334  A4D8               	btfss	status,2,c
  2169  007336  D70B               	goto	l3731
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;Practica8_15_03_19.c: 145:                 valor=0;
  2173  007338  0E00               	movlw	0
  2174  00733A  6F64               	movwf	_valor& (0+255),b
  2175  00733C  0E00               	movlw	0
  2176  00733E  6F65               	movwf	(_valor+1)& (0+255),b
  2177  007340  0E00               	movlw	0
  2178  007342  6F66               	movwf	(_valor+2)& (0+255),b
  2179  007344  0E00               	movlw	0
  2180  007346  6F67               	movwf	(_valor+3)& (0+255),b
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;Practica8_15_03_19.c: 146:                 Lcd_Cmd(1);
  2184  007348  0E01               	movlw	1
  2185  00734A  EC8F  F02F         	call	_Lcd_Cmd
  2186                           
  2187                           ;Practica8_15_03_19.c: 147:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2188  00734E  0E02               	movlw	2
  2189  007350  6E5A               	movwf	(??_main+1)& (0+255),c
  2190  007352  0E86               	movlw	134
  2191  007354  6E59               	movwf	??_main& (0+255),c
  2192  007356  0E99               	movlw	153
  2193  007358                     u2667:
  2194  007358  2EE8               	decfsz	wreg,f,c
  2195  00735A  D7FE               	bra	u2667
  2196  00735C  2E59               	decfsz	??_main& (0+255),f,c
  2197  00735E  D7FC               	bra	u2667
  2198  007360  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2199  007362  D7FA               	bra	u2667
  2200  007364  F000               	nop	
  2201                           
  2202                           ;Practica8_15_03_19.c: 148:                 Lcd_Out(1,1,"Motor Girando");
  2203  007366  0E01               	movlw	1
  2204  007368  6E04               	movwf	Lcd_Out@x,c
  2205  00736A  0EF0               	movlw	low STR_38
  2206  00736C  6E05               	movwf	Lcd_Out@buffer,c
  2207  00736E  0E7E               	movlw	high STR_38
  2208  007370  6E06               	movwf	Lcd_Out@buffer+1,c
  2209  007372  0E01               	movlw	1
  2210  007374  EC86  F02B         	call	_Lcd_Out
  2211                           
  2212                           ;Practica8_15_03_19.c: 149:                 opt_Full_stepper(Pasos_fun,dir);
  2213  007378  C060  F00B         	movff	_Pasos_fun,opt_Full_stepper@steps
  2214  00737C  C061  F00C         	movff	_Pasos_fun+1,opt_Full_stepper@steps+1
  2215  007380  C062  F00D         	movff	_Pasos_fun+2,opt_Full_stepper@steps+2
  2216  007384  C063  F00E         	movff	_Pasos_fun+3,opt_Full_stepper@steps+3
  2217  007388  C0DA  F00F         	movff	main@dir,opt_Full_stepper@direttion
  2218  00738C  C0DB  F010         	movff	main@dir+1,opt_Full_stepper@direttion+1
  2219  007390  EC80  F02D         	call	_opt_Full_stepper	;wreg free
  2220  007394                     l3789:
  2221                           
  2222                           ;Practica8_15_03_19.c: 150:                 PORTA=0x00;
  2223  007394  0E00               	movlw	0
  2224  007396  6E80               	movwf	3968,c	;volatile
  2225                           
  2226                           ;Practica8_15_03_19.c: 151:                 break;
  2227  007398  D4A5               	goto	l3585
  2228  00739A                     l3791:
  2229                           
  2230                           ; BSR set to: 0
  2231  00739A  0E00               	movlw	0
  2232  00739C  6F64               	movwf	_valor& (0+255),b
  2233  00739E  0E00               	movlw	0
  2234  0073A0  6F65               	movwf	(_valor+1)& (0+255),b
  2235  0073A2  0E00               	movlw	0
  2236  0073A4  6F66               	movwf	(_valor+2)& (0+255),b
  2237  0073A6  0E00               	movlw	0
  2238  0073A8  6F67               	movwf	(_valor+3)& (0+255),b
  2239  0073AA  0E00               	movlw	0
  2240  0073AC  6FD9               	movwf	main@caracter& (0+255),b
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;Practica8_15_03_19.c: 154:                 Lcd_Out(1,1,"WAVE STEPS");
  2244  0073AE  0E01               	movlw	1
  2245  0073B0  6E04               	movwf	Lcd_Out@x,c
  2246  0073B2  0E62               	movlw	low STR_39
  2247  0073B4  6E05               	movwf	Lcd_Out@buffer,c
  2248  0073B6  0E7F               	movlw	high STR_39
  2249  0073B8  6E06               	movwf	Lcd_Out@buffer+1,c
  2250  0073BA  0E01               	movlw	1
  2251  0073BC  EC86  F02B         	call	_Lcd_Out
  2252                           
  2253                           ;Practica8_15_03_19.c: 155:                 Lcd_Out(2,1,"***************");
  2254  0073C0  0E01               	movlw	1
  2255  0073C2  6E04               	movwf	Lcd_Out@x,c
  2256  0073C4  0E87               	movlw	low STR_19
  2257  0073C6  6E05               	movwf	Lcd_Out@buffer,c
  2258  0073C8  0E7E               	movlw	high STR_19
  2259  0073CA  6E06               	movwf	Lcd_Out@buffer+1,c
  2260  0073CC  0E02               	movlw	2
  2261  0073CE  EC86  F02B         	call	_Lcd_Out
  2262                           
  2263                           ;Practica8_15_03_19.c: 156:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  2264  0073D2  0E10               	movlw	16
  2265  0073D4  6E5A               	movwf	(??_main+1)& (0+255),c
  2266  0073D6  0E39               	movlw	57
  2267  0073D8  6E59               	movwf	??_main& (0+255),c
  2268  0073DA  0E0E               	movlw	14
  2269  0073DC                     u2677:
  2270  0073DC  2EE8               	decfsz	wreg,f,c
  2271  0073DE  D7FE               	bra	u2677
  2272  0073E0  2E59               	decfsz	??_main& (0+255),f,c
  2273  0073E2  D7FC               	bra	u2677
  2274  0073E4  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2275  0073E6  D7FA               	bra	u2677
  2276                           
  2277                           ;Practica8_15_03_19.c: 157:                 Lcd_Cmd(1);
  2278  0073E8  0E01               	movlw	1
  2279  0073EA  EC8F  F02F         	call	_Lcd_Cmd
  2280                           
  2281                           ;Practica8_15_03_19.c: 158:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2282  0073EE  0E02               	movlw	2
  2283  0073F0  6E5A               	movwf	(??_main+1)& (0+255),c
  2284  0073F2  0E86               	movlw	134
  2285  0073F4  6E59               	movwf	??_main& (0+255),c
  2286  0073F6  0E99               	movlw	153
  2287  0073F8                     u2687:
  2288  0073F8  2EE8               	decfsz	wreg,f,c
  2289  0073FA  D7FE               	bra	u2687
  2290  0073FC  2E59               	decfsz	??_main& (0+255),f,c
  2291  0073FE  D7FC               	bra	u2687
  2292  007400  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2293  007402  D7FA               	bra	u2687
  2294  007404  F000               	nop	
  2295                           
  2296                           ;Practica8_15_03_19.c: 159:                 Lcd_Out(1,1,"Selecciona el");
  2297  007406  0E01               	movlw	1
  2298  007408  6E04               	movwf	Lcd_Out@x,c
  2299  00740A  0EE2               	movlw	low STR_20
  2300  00740C  6E05               	movwf	Lcd_Out@buffer,c
  2301  00740E  0E7E               	movlw	high STR_20
  2302  007410  6E06               	movwf	Lcd_Out@buffer+1,c
  2303  007412  0E01               	movlw	1
  2304  007414  EC86  F02B         	call	_Lcd_Out
  2305                           
  2306                           ;Practica8_15_03_19.c: 160:                 Lcd_Out(2,1,"sentido de giro");
  2307  007418  0E01               	movlw	1
  2308  00741A  6E04               	movwf	Lcd_Out@x,c
  2309  00741C  0E97               	movlw	low STR_21
  2310  00741E  6E05               	movwf	Lcd_Out@buffer,c
  2311  007420  0E7E               	movlw	high STR_21
  2312  007422  6E06               	movwf	Lcd_Out@buffer+1,c
  2313  007424  0E02               	movlw	2
  2314  007426  EC86  F02B         	call	_Lcd_Out
  2315                           
  2316                           ;Practica8_15_03_19.c: 161:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  2317  00742A  0E10               	movlw	16
  2318  00742C  6E5A               	movwf	(??_main+1)& (0+255),c
  2319  00742E  0E39               	movlw	57
  2320  007430  6E59               	movwf	??_main& (0+255),c
  2321  007432  0E0E               	movlw	14
  2322  007434                     u2697:
  2323  007434  2EE8               	decfsz	wreg,f,c
  2324  007436  D7FE               	bra	u2697
  2325  007438  2E59               	decfsz	??_main& (0+255),f,c
  2326  00743A  D7FC               	bra	u2697
  2327  00743C  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2328  00743E  D7FA               	bra	u2697
  2329                           
  2330                           ;Practica8_15_03_19.c: 162:                 Lcd_Cmd(1);
  2331  007440  0E01               	movlw	1
  2332  007442  EC8F  F02F         	call	_Lcd_Cmd
  2333                           
  2334                           ;Practica8_15_03_19.c: 163:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2335  007446  0E02               	movlw	2
  2336  007448  6E5A               	movwf	(??_main+1)& (0+255),c
  2337  00744A  0E86               	movlw	134
  2338  00744C  6E59               	movwf	??_main& (0+255),c
  2339  00744E  0E99               	movlw	153
  2340  007450                     u2707:
  2341  007450  2EE8               	decfsz	wreg,f,c
  2342  007452  D7FE               	bra	u2707
  2343  007454  2E59               	decfsz	??_main& (0+255),f,c
  2344  007456  D7FC               	bra	u2707
  2345  007458  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2346  00745A  D7FA               	bra	u2707
  2347  00745C  F000               	nop	
  2348                           
  2349                           ;Practica8_15_03_19.c: 164:                 Lcd_Out(1,1,"Presiona *");
  2350  00745E  0E01               	movlw	1
  2351  007460  6E04               	movwf	Lcd_Out@x,c
  2352  007462  0E4C               	movlw	low STR_14
  2353  007464  6E05               	movwf	Lcd_Out@buffer,c
  2354  007466  0E7F               	movlw	high STR_14
  2355  007468  6E06               	movwf	Lcd_Out@buffer+1,c
  2356  00746A  0E01               	movlw	1
  2357  00746C  EC86  F02B         	call	_Lcd_Out
  2358                           
  2359                           ;Practica8_15_03_19.c: 165:                 Lcd_Out(2,1,"cuando termines");
  2360  007470  0E01               	movlw	1
  2361  007472  6E04               	movwf	Lcd_Out@x,c
  2362  007474  0EA7               	movlw	low STR_15
  2363  007476  6E05               	movwf	Lcd_Out@buffer,c
  2364  007478  0E7E               	movlw	high STR_15
  2365  00747A  6E06               	movwf	Lcd_Out@buffer+1,c
  2366  00747C  0E02               	movlw	2
  2367  00747E  EC86  F02B         	call	_Lcd_Out
  2368                           
  2369                           ;Practica8_15_03_19.c: 166:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  2370  007482  0E10               	movlw	16
  2371  007484  6E5A               	movwf	(??_main+1)& (0+255),c
  2372  007486  0E39               	movlw	57
  2373  007488  6E59               	movwf	??_main& (0+255),c
  2374  00748A  0E0E               	movlw	14
  2375  00748C                     u2717:
  2376  00748C  2EE8               	decfsz	wreg,f,c
  2377  00748E  D7FE               	bra	u2717
  2378  007490  2E59               	decfsz	??_main& (0+255),f,c
  2379  007492  D7FC               	bra	u2717
  2380  007494  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2381  007496  D7FA               	bra	u2717
  2382                           
  2383                           ;Practica8_15_03_19.c: 167:                 Lcd_Cmd(1);
  2384  007498  0E01               	movlw	1
  2385  00749A  EC8F  F02F         	call	_Lcd_Cmd
  2386                           
  2387                           ;Practica8_15_03_19.c: 168:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2388  00749E  0E02               	movlw	2
  2389  0074A0  6E5A               	movwf	(??_main+1)& (0+255),c
  2390  0074A2  0E86               	movlw	134
  2391  0074A4  6E59               	movwf	??_main& (0+255),c
  2392  0074A6  0E99               	movlw	153
  2393  0074A8                     u2727:
  2394  0074A8  2EE8               	decfsz	wreg,f,c
  2395  0074AA  D7FE               	bra	u2727
  2396  0074AC  2E59               	decfsz	??_main& (0+255),f,c
  2397  0074AE  D7FC               	bra	u2727
  2398  0074B0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2399  0074B2  D7FA               	bra	u2727
  2400  0074B4  F000               	nop	
  2401                           
  2402                           ;Practica8_15_03_19.c: 169:                 Lcd_Out(1,2,"1:DER  2:IZQ");
  2403  0074B6  0E02               	movlw	2
  2404  0074B8  6E04               	movwf	Lcd_Out@x,c
  2405  0074BA  0E1A               	movlw	low STR_24
  2406  0074BC  6E05               	movwf	Lcd_Out@buffer,c
  2407  0074BE  0E7F               	movlw	high STR_24
  2408  0074C0  6E06               	movwf	Lcd_Out@buffer+1,c
  2409  0074C2  0E01               	movlw	1
  2410  0074C4  EC86  F02B         	call	_Lcd_Out
  2411                           
  2412                           ;Practica8_15_03_19.c: 170:                 Lcd_Out(2,1,"OPT:");
  2413  0074C8  0E01               	movlw	1
  2414  0074CA  6E04               	movwf	Lcd_Out@x,c
  2415  0074CC  0EED               	movlw	low STR_25
  2416  0074CE  6E05               	movwf	Lcd_Out@buffer,c
  2417  0074D0  0E7F               	movlw	high STR_25
  2418  0074D2  6E06               	movwf	Lcd_Out@buffer+1,c
  2419  0074D4  0E02               	movlw	2
  2420  0074D6  EC86  F02B         	call	_Lcd_Out
  2421                           
  2422                           ;Practica8_15_03_19.c: 171:                 while(valor != '*'){
  2423  0074DA  D03A               	goto	l177
  2424  0074DC                     l3827:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;Practica8_15_03_19.c: 172:                     teclado();
  2428  0074DC  EC08  F033         	call	_teclado	;wreg free
  2429                           
  2430                           ;Practica8_15_03_19.c: 173:                     if(valor=='1' || valor=='2'){
  2431  0074E0  0E31               	movlw	49
  2432  0074E2  0100               	movlb	0	; () banked
  2433  0074E4  1964               	xorwf	_valor& (0+255),w,b
  2434  0074E6  1165               	iorwf	(_valor+1)& (0+255),w,b
  2435  0074E8  1166               	iorwf	(_valor+2)& (0+255),w,b
  2436  0074EA  1167               	iorwf	(_valor+3)& (0+255),w,b
  2437  0074EC  B4D8               	btfsc	status,2,c
  2438  0074EE  D007               	goto	u2220
  2439                           
  2440                           ; BSR set to: 0
  2441  0074F0  0E32               	movlw	50
  2442  0074F2  1964               	xorwf	_valor& (0+255),w,b
  2443  0074F4  1165               	iorwf	(_valor+1)& (0+255),w,b
  2444  0074F6  1166               	iorwf	(_valor+2)& (0+255),w,b
  2445  0074F8  1167               	iorwf	(_valor+3)& (0+255),w,b
  2446  0074FA  A4D8               	btfss	status,2,c
  2447  0074FC  D029               	goto	l177
  2448  0074FE                     u2220:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;Practica8_15_03_19.c: 174:                         Dir_sel=valor;
  2452  0074FE  C064  F0DC         	movff	_valor,main@Dir_sel
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;Practica8_15_03_19.c: 175:                         sprintf(palabra1," %c",Dir_sel);
  2456  007502  0EA3               	movlw	low _palabra1
  2457  007504  6FC5               	movwf	sprintf@s& (0+255),b
  2458  007506  0E00               	movlw	high _palabra1
  2459  007508  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  2460  00750A  0EF7               	movlw	low STR_26
  2461  00750C  6FC7               	movwf	sprintf@fmt& (0+255),b
  2462  00750E  0E7F               	movlw	high STR_26
  2463  007510  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  2464  007512  C0DC  F0C9         	movff	main@Dir_sel,?_sprintf+4
  2465  007516  6BCA               	clrf	(?_sprintf+5)& (0+255),b
  2466  007518  ECCF  F02A         	call	_sprintf	;wreg free
  2467                           
  2468                           ;Practica8_15_03_19.c: 176:                         Lcd_Out2(2,5,palabra1);
  2469  00751C  0E05               	movlw	5
  2470  00751E  6E04               	movwf	Lcd_Out2@x,c
  2471  007520  0EA3               	movlw	low _palabra1
  2472  007522  6E05               	movwf	Lcd_Out2@buffer,c
  2473  007524  0E00               	movlw	high _palabra1
  2474  007526  6E06               	movwf	Lcd_Out2@buffer+1,c
  2475  007528  0E02               	movlw	2
  2476  00752A  EC4E  F02B         	call	_Lcd_Out2
  2477                           
  2478                           ;Practica8_15_03_19.c: 177:                         if(Dir_sel=='1'){dir=1;}
  2479  00752E  0E31               	movlw	49
  2480  007530  0100               	movlb	0	; () banked
  2481  007532  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  2482  007534  A4D8               	btfss	status,2,c
  2483  007536  D004               	goto	l3841
  2484                           
  2485                           ; BSR set to: 0
  2486  007538  0E00               	movlw	0
  2487  00753A  6FDB               	movwf	(main@dir+1)& (0+255),b
  2488  00753C  0E01               	movlw	1
  2489  00753E  D007               	goto	L2
  2490  007540                     l3841:
  2491                           
  2492                           ; BSR set to: 0
  2493  007540  0E32               	movlw	50
  2494  007542  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  2495  007544  A4D8               	btfss	status,2,c
  2496  007546  D004               	goto	l177
  2497                           
  2498                           ; BSR set to: 0
  2499  007548  0E00               	movlw	0
  2500  00754A  6FDB               	movwf	(main@dir+1)& (0+255),b
  2501  00754C  0E02               	movlw	2
  2502  00754E                     L2:
  2503  00754E  6FDA               	movwf	main@dir& (0+255),b
  2504  007550                     l177:
  2505                           
  2506                           ;Practica8_15_03_19.c: 171:                 while(valor != '*'){
  2507                           
  2508                           ; BSR set to: 0
  2509  007550  0E2A               	movlw	42
  2510  007552  0100               	movlb	0	; () banked
  2511  007554  1964               	xorwf	_valor& (0+255),w,b
  2512  007556  1165               	iorwf	(_valor+1)& (0+255),w,b
  2513  007558  1166               	iorwf	(_valor+2)& (0+255),w,b
  2514  00755A  1167               	iorwf	(_valor+3)& (0+255),w,b
  2515  00755C  A4D8               	btfss	status,2,c
  2516  00755E  D7BE               	goto	l3827
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;Practica8_15_03_19.c: 182:                 valor=0;
  2520  007560  0E00               	movlw	0
  2521  007562  6F64               	movwf	_valor& (0+255),b
  2522  007564  0E00               	movlw	0
  2523  007566  6F65               	movwf	(_valor+1)& (0+255),b
  2524  007568  0E00               	movlw	0
  2525  00756A  6F66               	movwf	(_valor+2)& (0+255),b
  2526  00756C  0E00               	movlw	0
  2527  00756E  6F67               	movwf	(_valor+3)& (0+255),b
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;Practica8_15_03_19.c: 183:                 Lcd_Cmd(1);
  2531  007570  0E01               	movlw	1
  2532  007572  EC8F  F02F         	call	_Lcd_Cmd
  2533                           
  2534                           ;Practica8_15_03_19.c: 184:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2535  007576  0E02               	movlw	2
  2536  007578  6E5A               	movwf	(??_main+1)& (0+255),c
  2537  00757A  0E86               	movlw	134
  2538  00757C  6E59               	movwf	??_main& (0+255),c
  2539  00757E  0E99               	movlw	153
  2540  007580                     u2737:
  2541  007580  2EE8               	decfsz	wreg,f,c
  2542  007582  D7FE               	bra	u2737
  2543  007584  2E59               	decfsz	??_main& (0+255),f,c
  2544  007586  D7FC               	bra	u2737
  2545  007588  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2546  00758A  D7FA               	bra	u2737
  2547  00758C  F000               	nop	
  2548                           
  2549                           ;Practica8_15_03_19.c: 185:                 Lcd_Out(1,1,"Selecciona el");
  2550  00758E  0E01               	movlw	1
  2551  007590  6E04               	movwf	Lcd_Out@x,c
  2552  007592  0EE2               	movlw	low STR_20
  2553  007594  6E05               	movwf	Lcd_Out@buffer,c
  2554  007596  0E7E               	movlw	high STR_20
  2555  007598  6E06               	movwf	Lcd_Out@buffer+1,c
  2556  00759A  0E01               	movlw	1
  2557  00759C  EC86  F02B         	call	_Lcd_Out
  2558                           
  2559                           ;Practica8_15_03_19.c: 186:                 Lcd_Out(2,1,"N de pasos");
  2560  0075A0  0E01               	movlw	1
  2561  0075A2  6E04               	movwf	Lcd_Out@x,c
  2562  0075A4  0EA4               	movlw	low STR_28
  2563  0075A6  6E05               	movwf	Lcd_Out@buffer,c
  2564  0075A8  0E7F               	movlw	high STR_28
  2565  0075AA  6E06               	movwf	Lcd_Out@buffer+1,c
  2566  0075AC  0E02               	movlw	2
  2567  0075AE  EC86  F02B         	call	_Lcd_Out
  2568                           
  2569                           ;Practica8_15_03_19.c: 187:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  2570  0075B2  0E10               	movlw	16
  2571  0075B4  6E5A               	movwf	(??_main+1)& (0+255),c
  2572  0075B6  0E39               	movlw	57
  2573  0075B8  6E59               	movwf	??_main& (0+255),c
  2574  0075BA  0E0E               	movlw	14
  2575  0075BC                     u2747:
  2576  0075BC  2EE8               	decfsz	wreg,f,c
  2577  0075BE  D7FE               	bra	u2747
  2578  0075C0  2E59               	decfsz	??_main& (0+255),f,c
  2579  0075C2  D7FC               	bra	u2747
  2580  0075C4  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2581  0075C6  D7FA               	bra	u2747
  2582                           
  2583                           ;Practica8_15_03_19.c: 188:                 Lcd_Cmd(1);
  2584  0075C8  0E01               	movlw	1
  2585  0075CA  EC8F  F02F         	call	_Lcd_Cmd
  2586                           
  2587                           ;Practica8_15_03_19.c: 189:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2588  0075CE  0E02               	movlw	2
  2589  0075D0  6E5A               	movwf	(??_main+1)& (0+255),c
  2590  0075D2  0E86               	movlw	134
  2591  0075D4  6E59               	movwf	??_main& (0+255),c
  2592  0075D6  0E99               	movlw	153
  2593  0075D8                     u2757:
  2594  0075D8  2EE8               	decfsz	wreg,f,c
  2595  0075DA  D7FE               	bra	u2757
  2596  0075DC  2E59               	decfsz	??_main& (0+255),f,c
  2597  0075DE  D7FC               	bra	u2757
  2598  0075E0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2599  0075E2  D7FA               	bra	u2757
  2600  0075E4  F000               	nop	
  2601                           
  2602                           ;Practica8_15_03_19.c: 190:                 Lcd_Out(1,1,"Presiona *");
  2603  0075E6  0E01               	movlw	1
  2604  0075E8  6E04               	movwf	Lcd_Out@x,c
  2605  0075EA  0E4C               	movlw	low STR_14
  2606  0075EC  6E05               	movwf	Lcd_Out@buffer,c
  2607  0075EE  0E7F               	movlw	high STR_14
  2608  0075F0  6E06               	movwf	Lcd_Out@buffer+1,c
  2609  0075F2  0E01               	movlw	1
  2610  0075F4  EC86  F02B         	call	_Lcd_Out
  2611                           
  2612                           ;Practica8_15_03_19.c: 191:                 Lcd_Out(2,1,"cuando termines");
  2613  0075F8  0E01               	movlw	1
  2614  0075FA  6E04               	movwf	Lcd_Out@x,c
  2615  0075FC  0EA7               	movlw	low STR_15
  2616  0075FE  6E05               	movwf	Lcd_Out@buffer,c
  2617  007600  0E7E               	movlw	high STR_15
  2618  007602  6E06               	movwf	Lcd_Out@buffer+1,c
  2619  007604  0E02               	movlw	2
  2620  007606  EC86  F02B         	call	_Lcd_Out
  2621                           
  2622                           ;Practica8_15_03_19.c: 192:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  2623  00760A  0E10               	movlw	16
  2624  00760C  6E5A               	movwf	(??_main+1)& (0+255),c
  2625  00760E  0E39               	movlw	57
  2626  007610  6E59               	movwf	??_main& (0+255),c
  2627  007612  0E0E               	movlw	14
  2628  007614                     u2767:
  2629  007614  2EE8               	decfsz	wreg,f,c
  2630  007616  D7FE               	bra	u2767
  2631  007618  2E59               	decfsz	??_main& (0+255),f,c
  2632  00761A  D7FC               	bra	u2767
  2633  00761C  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2634  00761E  D7FA               	bra	u2767
  2635                           
  2636                           ;Practica8_15_03_19.c: 193:                 Lcd_Cmd(1);
  2637  007620  0E01               	movlw	1
  2638  007622  EC8F  F02F         	call	_Lcd_Cmd
  2639  007626                     l3871:
  2640                           
  2641                           ;Practica8_15_03_19.c: 194:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2642  007626  0E02               	movlw	2
  2643  007628  6E5A               	movwf	(??_main+1)& (0+255),c
  2644  00762A  0E86               	movlw	134
  2645  00762C  6E59               	movwf	??_main& (0+255),c
  2646  00762E  0E99               	movlw	153
  2647  007630                     u2777:
  2648  007630  2EE8               	decfsz	wreg,f,c
  2649  007632  D7FE               	bra	u2777
  2650  007634  2E59               	decfsz	??_main& (0+255),f,c
  2651  007636  D7FC               	bra	u2777
  2652  007638  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2653  00763A  D7FA               	bra	u2777
  2654  00763C  F000               	nop	
  2655                           
  2656                           ;Practica8_15_03_19.c: 195:                 while(valor != '*'){
  2657  00763E  D0ED               	goto	l3919
  2658  007640                     l3873:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;Practica8_15_03_19.c: 196:                     teclado();
  2662  007640  EC08  F033         	call	_teclado	;wreg free
  2663                           
  2664                           ;Practica8_15_03_19.c: 197:                     Lcd_Out(1,1,"Numero de ");
  2665  007644  0E01               	movlw	1
  2666  007646  6E04               	movwf	Lcd_Out@x,c
  2667  007648  0E41               	movlw	low STR_31
  2668  00764A  6E05               	movwf	Lcd_Out@buffer,c
  2669  00764C  0E7F               	movlw	high STR_31
  2670  00764E  6E06               	movwf	Lcd_Out@buffer+1,c
  2671  007650  0E01               	movlw	1
  2672  007652  EC86  F02B         	call	_Lcd_Out
  2673                           
  2674                           ;Practica8_15_03_19.c: 198:                     Lcd_Out(2,1,"Pasos:");
  2675  007656  0E01               	movlw	1
  2676  007658  6E04               	movwf	Lcd_Out@x,c
  2677  00765A  0EDF               	movlw	low STR_32
  2678  00765C  6E05               	movwf	Lcd_Out@buffer,c
  2679  00765E  0E7F               	movlw	high STR_32
  2680  007660  6E06               	movwf	Lcd_Out@buffer+1,c
  2681  007662  0E02               	movlw	2
  2682  007664  EC86  F02B         	call	_Lcd_Out
  2683                           
  2684                           ;Practica8_15_03_19.c: 199:                     if((valor >= '0') && (valor <= '9')){
  2685  007668  0100               	movlb	0	; () banked
  2686  00766A  5167               	movf	(_valor+3)& (0+255),w,b
  2687  00766C  1166               	iorwf	(_valor+2)& (0+255),w,b
  2688  00766E  1165               	iorwf	(_valor+1)& (0+255),w,b
  2689  007670  E104               	bnz	u2260
  2690  007672  0E30               	movlw	48
  2691  007674  5D64               	subwf	_valor& (0+255),w,b
  2692  007676  A0D8               	btfss	status,0,c
  2693  007678  D04E               	goto	l3889
  2694  00767A                     u2260:
  2695                           
  2696                           ; BSR set to: 0
  2697  00767A  5167               	movf	(_valor+3)& (0+255),w,b
  2698  00767C  1166               	iorwf	(_valor+2)& (0+255),w,b
  2699  00767E  1165               	iorwf	(_valor+1)& (0+255),w,b
  2700  007680  E14A               	bnz	l3889
  2701  007682  0E3A               	movlw	58
  2702  007684  5D64               	subwf	_valor& (0+255),w,b
  2703  007686  B0D8               	btfsc	status,0,c
  2704  007688  D046               	goto	l3889
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;Practica8_15_03_19.c: 200:                         pasos = pasos*10 + (valor - 48);
  2708  00768A  C0DD  F001         	movff	main@pasos,___lmul@multiplier
  2709  00768E  C0DE  F002         	movff	main@pasos+1,___lmul@multiplier+1
  2710  007692  C0DF  F003         	movff	main@pasos+2,___lmul@multiplier+2
  2711  007696  C0E0  F004         	movff	main@pasos+3,___lmul@multiplier+3
  2712  00769A  0E0A               	movlw	10
  2713  00769C  6E05               	movwf	___lmul@multiplicand,c
  2714  00769E  0E00               	movlw	0
  2715  0076A0  6E06               	movwf	___lmul@multiplicand+1,c
  2716  0076A2  0E00               	movlw	0
  2717  0076A4  6E07               	movwf	___lmul@multiplicand+2,c
  2718  0076A6  0E00               	movlw	0
  2719  0076A8  6E08               	movwf	___lmul@multiplicand+3,c
  2720  0076AA  ECF8  F02A         	call	___lmul	;wreg free
  2721  0076AE  0100               	movlb	0	; () banked
  2722  0076B0  5164               	movf	_valor& (0+255),w,b
  2723  0076B2  2401               	addwf	?___lmul,w,c
  2724  0076B4  6E59               	movwf	??_main& (0+255),c
  2725  0076B6  5165               	movf	(_valor+1)& (0+255),w,b
  2726  0076B8  2002               	addwfc	?___lmul+1,w,c
  2727  0076BA  6E5A               	movwf	(??_main+1)& (0+255),c
  2728  0076BC  5166               	movf	(_valor+2)& (0+255),w,b
  2729  0076BE  2003               	addwfc	?___lmul+2,w,c
  2730  0076C0  6E5B               	movwf	(??_main+2)& (0+255),c
  2731  0076C2  5167               	movf	(_valor+3)& (0+255),w,b
  2732  0076C4  2004               	addwfc	?___lmul+3,w,c
  2733  0076C6  6E5C               	movwf	(??_main+3)& (0+255),c
  2734  0076C8  0ED0               	movlw	208
  2735  0076CA  2459               	addwf	??_main,w,c
  2736  0076CC  6FDD               	movwf	main@pasos& (0+255),b
  2737  0076CE  0EFF               	movlw	255
  2738  0076D0  205A               	addwfc	??_main+1,w,c
  2739  0076D2  6FDE               	movwf	(main@pasos+1)& (0+255),b
  2740  0076D4  0EFF               	movlw	255
  2741  0076D6  205B               	addwfc	??_main+2,w,c
  2742  0076D8  6FDF               	movwf	(main@pasos+2)& (0+255),b
  2743  0076DA  0EFF               	movlw	255
  2744  0076DC  205C               	addwfc	??_main+3,w,c
  2745  0076DE  6FE0               	movwf	(main@pasos+3)& (0+255),b
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;Practica8_15_03_19.c: 201:                         sprintf(palabra2," %d",pasos);
  2749  0076E0  0E92               	movlw	low _palabra2
  2750  0076E2  6FC5               	movwf	sprintf@s& (0+255),b
  2751  0076E4  0E00               	movlw	high _palabra2
  2752  0076E6  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  2753  0076E8  0EFB               	movlw	low STR_33
  2754  0076EA  6FC7               	movwf	sprintf@fmt& (0+255),b
  2755  0076EC  0E7F               	movlw	high STR_33
  2756  0076EE  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  2757  0076F0  C0DD  F0C9         	movff	main@pasos,?_sprintf+4
  2758  0076F4  C0DE  F0CA         	movff	main@pasos+1,?_sprintf+5
  2759  0076F8  C0DF  F0CB         	movff	main@pasos+2,?_sprintf+6
  2760  0076FC  C0E0  F0CC         	movff	main@pasos+3,?_sprintf+7
  2761  007700  ECCF  F02A         	call	_sprintf	;wreg free
  2762                           
  2763                           ;Practica8_15_03_19.c: 202:                         Lcd_Out2(2,7,palabra2);
  2764  007704  0E07               	movlw	7
  2765  007706  6E04               	movwf	Lcd_Out2@x,c
  2766  007708  0E92               	movlw	low _palabra2
  2767  00770A  6E05               	movwf	Lcd_Out2@buffer,c
  2768  00770C  0E00               	movlw	high _palabra2
  2769  00770E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2770  007710  0E02               	movlw	2
  2771  007712  EC4E  F02B         	call	_Lcd_Out2
  2772  007716                     l3889:
  2773                           
  2774                           ;Practica8_15_03_19.c: 204:                     Pasos_fun = pasos;
  2775  007716  C0DD  F060         	movff	main@pasos,_Pasos_fun
  2776  00771A  C0DE  F061         	movff	main@pasos+1,_Pasos_fun+1
  2777  00771E  C0DF  F062         	movff	main@pasos+2,_Pasos_fun+2
  2778  007722  C0E0  F063         	movff	main@pasos+3,_Pasos_fun+3
  2779                           
  2780                           ;Practica8_15_03_19.c: 205:                     if(Pasos_fun>9000){
  2781  007726  0100               	movlb	0	; () banked
  2782  007728  BF63               	btfsc	(_Pasos_fun+3)& (0+255),7,b
  2783  00772A  D077               	goto	l3919
  2784  00772C  5163               	movf	(_Pasos_fun+3)& (0+255),w,b
  2785  00772E  1162               	iorwf	(_Pasos_fun+2)& (0+255),w,b
  2786  007730  E106               	bnz	u2280
  2787  007732  0E29               	movlw	41
  2788  007734  5D60               	subwf	_Pasos_fun& (0+255),w,b
  2789  007736  0E23               	movlw	35
  2790  007738  5961               	subwfb	(_Pasos_fun+1)& (0+255),w,b
  2791  00773A  A0D8               	btfss	status,0,c
  2792  00773C  D06E               	goto	l3919
  2793  00773E                     u2280:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;Practica8_15_03_19.c: 206:                         pasos=0;Pasos_fun=0;
  2797  00773E  0E00               	movlw	0
  2798  007740  6FDD               	movwf	main@pasos& (0+255),b
  2799  007742  0E00               	movlw	0
  2800  007744  6FDE               	movwf	(main@pasos+1)& (0+255),b
  2801  007746  0E00               	movlw	0
  2802  007748  6FDF               	movwf	(main@pasos+2)& (0+255),b
  2803  00774A  0E00               	movlw	0
  2804  00774C  6FE0               	movwf	(main@pasos+3)& (0+255),b
  2805  00774E  0E00               	movlw	0
  2806  007750  6F60               	movwf	_Pasos_fun& (0+255),b
  2807  007752  0E00               	movlw	0
  2808  007754  6F61               	movwf	(_Pasos_fun+1)& (0+255),b
  2809  007756  0E00               	movlw	0
  2810  007758  6F62               	movwf	(_Pasos_fun+2)& (0+255),b
  2811  00775A  0E00               	movlw	0
  2812  00775C  6F63               	movwf	(_Pasos_fun+3)& (0+255),b
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;Practica8_15_03_19.c: 207:                         Lcd_Cmd(1);
  2816  00775E  0E01               	movlw	1
  2817  007760  EC8F  F02F         	call	_Lcd_Cmd
  2818                           
  2819                           ;Practica8_15_03_19.c: 208:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  2820  007764  0E02               	movlw	2
  2821  007766  6E5A               	movwf	(??_main+1)& (0+255),c
  2822  007768  0E86               	movlw	134
  2823  00776A  6E59               	movwf	??_main& (0+255),c
  2824  00776C  0E99               	movlw	153
  2825  00776E                     u2787:
  2826  00776E  2EE8               	decfsz	wreg,f,c
  2827  007770  D7FE               	bra	u2787
  2828  007772  2E59               	decfsz	??_main& (0+255),f,c
  2829  007774  D7FC               	bra	u2787
  2830  007776  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2831  007778  D7FA               	bra	u2787
  2832  00777A  F000               	nop	
  2833                           
  2834                           ;Practica8_15_03_19.c: 209:                         Lcd_Out(1,1,"Valor maximo");
  2835  00777C  0E01               	movlw	1
  2836  00777E  6E04               	movwf	Lcd_Out@x,c
  2837  007780  0E27               	movlw	low STR_34
  2838  007782  6E05               	movwf	Lcd_Out@buffer,c
  2839  007784  0E7F               	movlw	high STR_34
  2840  007786  6E06               	movwf	Lcd_Out@buffer+1,c
  2841  007788  0E01               	movlw	1
  2842  00778A  EC86  F02B         	call	_Lcd_Out
  2843                           
  2844                           ;Practica8_15_03_19.c: 210:                         Lcd_Out(2,1,"alcanzado");
  2845  00778E  0E01               	movlw	1
  2846  007790  6E04               	movwf	Lcd_Out@x,c
  2847  007792  0EC3               	movlw	low STR_35
  2848  007794  6E05               	movwf	Lcd_Out@buffer,c
  2849  007796  0E7F               	movlw	high STR_35
  2850  007798  6E06               	movwf	Lcd_Out@buffer+1,c
  2851  00779A  0E02               	movlw	2
  2852  00779C  EC86  F02B         	call	_Lcd_Out
  2853                           
  2854                           ;Practica8_15_03_19.c: 211:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  2855  0077A0  0E1F               	movlw	31
  2856  0077A2  6E5A               	movwf	(??_main+1)& (0+255),c
  2857  0077A4  0E71               	movlw	113
  2858  0077A6  6E59               	movwf	??_main& (0+255),c
  2859  0077A8  0E1E               	movlw	30
  2860  0077AA                     u2797:
  2861  0077AA  2EE8               	decfsz	wreg,f,c
  2862  0077AC  D7FE               	bra	u2797
  2863  0077AE  2E59               	decfsz	??_main& (0+255),f,c
  2864  0077B0  D7FC               	bra	u2797
  2865  0077B2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2866  0077B4  D7FA               	bra	u2797
  2867  0077B6  D000               	nop2	
  2868                           
  2869                           ;Practica8_15_03_19.c: 212:                         Lcd_Cmd(1);
  2870  0077B8  0E01               	movlw	1
  2871  0077BA  EC8F  F02F         	call	_Lcd_Cmd
  2872                           
  2873                           ;Practica8_15_03_19.c: 213:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  2874  0077BE  0E02               	movlw	2
  2875  0077C0  6E5A               	movwf	(??_main+1)& (0+255),c
  2876  0077C2  0E86               	movlw	134
  2877  0077C4  6E59               	movwf	??_main& (0+255),c
  2878  0077C6  0E99               	movlw	153
  2879  0077C8                     u2807:
  2880  0077C8  2EE8               	decfsz	wreg,f,c
  2881  0077CA  D7FE               	bra	u2807
  2882  0077CC  2E59               	decfsz	??_main& (0+255),f,c
  2883  0077CE  D7FC               	bra	u2807
  2884  0077D0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2885  0077D2  D7FA               	bra	u2807
  2886  0077D4  F000               	nop	
  2887                           
  2888                           ;Practica8_15_03_19.c: 214:                         Lcd_Out(1,1,"Intentalo de ");
  2889  0077D6  0E01               	movlw	1
  2890  0077D8  6E04               	movwf	Lcd_Out@x,c
  2891  0077DA  0EC6               	movlw	low STR_36
  2892  0077DC  6E05               	movwf	Lcd_Out@buffer,c
  2893  0077DE  0E7E               	movlw	high STR_36
  2894  0077E0  6E06               	movwf	Lcd_Out@buffer+1,c
  2895  0077E2  0E01               	movlw	1
  2896  0077E4  EC86  F02B         	call	_Lcd_Out
  2897                           
  2898                           ;Practica8_15_03_19.c: 215:                         Lcd_Out(2,1,"nuevo humano");
  2899  0077E8  0E01               	movlw	1
  2900  0077EA  6E04               	movwf	Lcd_Out@x,c
  2901  0077EC  0E34               	movlw	low STR_37
  2902  0077EE  6E05               	movwf	Lcd_Out@buffer,c
  2903  0077F0  0E7F               	movlw	high STR_37
  2904  0077F2  6E06               	movwf	Lcd_Out@buffer+1,c
  2905  0077F4  0E02               	movlw	2
  2906  0077F6  EC86  F02B         	call	_Lcd_Out
  2907                           
  2908                           ;Practica8_15_03_19.c: 216:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  2909  0077FA  0E1F               	movlw	31
  2910  0077FC  6E5A               	movwf	(??_main+1)& (0+255),c
  2911  0077FE  0E71               	movlw	113
  2912  007800  6E59               	movwf	??_main& (0+255),c
  2913  007802  0E1E               	movlw	30
  2914  007804                     u2817:
  2915  007804  2EE8               	decfsz	wreg,f,c
  2916  007806  D7FE               	bra	u2817
  2917  007808  2E59               	decfsz	??_main& (0+255),f,c
  2918  00780A  D7FC               	bra	u2817
  2919  00780C  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2920  00780E  D7FA               	bra	u2817
  2921  007810  D000               	nop2	
  2922                           
  2923                           ;Practica8_15_03_19.c: 217:                         Lcd_Cmd(1);
  2924  007812  0E01               	movlw	1
  2925  007814  EC8F  F02F         	call	_Lcd_Cmd
  2926  007818  D706               	goto	l3871
  2927  00781A                     l3919:
  2928                           
  2929                           ;Practica8_15_03_19.c: 195:                 while(valor != '*'){
  2930  00781A  0E2A               	movlw	42
  2931  00781C  0100               	movlb	0	; () banked
  2932  00781E  1964               	xorwf	_valor& (0+255),w,b
  2933  007820  1165               	iorwf	(_valor+1)& (0+255),w,b
  2934  007822  1166               	iorwf	(_valor+2)& (0+255),w,b
  2935  007824  1167               	iorwf	(_valor+3)& (0+255),w,b
  2936  007826  A4D8               	btfss	status,2,c
  2937  007828  D70B               	goto	l3873
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;Practica8_15_03_19.c: 221:                 valor=0;
  2941  00782A  0E00               	movlw	0
  2942  00782C  6F64               	movwf	_valor& (0+255),b
  2943  00782E  0E00               	movlw	0
  2944  007830  6F65               	movwf	(_valor+1)& (0+255),b
  2945  007832  0E00               	movlw	0
  2946  007834  6F66               	movwf	(_valor+2)& (0+255),b
  2947  007836  0E00               	movlw	0
  2948  007838  6F67               	movwf	(_valor+3)& (0+255),b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;Practica8_15_03_19.c: 222:                 Lcd_Cmd(1);
  2952  00783A  0E01               	movlw	1
  2953  00783C  EC8F  F02F         	call	_Lcd_Cmd
  2954                           
  2955                           ;Practica8_15_03_19.c: 223:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  2956  007840  0E02               	movlw	2
  2957  007842  6E5A               	movwf	(??_main+1)& (0+255),c
  2958  007844  0E86               	movlw	134
  2959  007846  6E59               	movwf	??_main& (0+255),c
  2960  007848  0E99               	movlw	153
  2961  00784A                     u2827:
  2962  00784A  2EE8               	decfsz	wreg,f,c
  2963  00784C  D7FE               	bra	u2827
  2964  00784E  2E59               	decfsz	??_main& (0+255),f,c
  2965  007850  D7FC               	bra	u2827
  2966  007852  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  2967  007854  D7FA               	bra	u2827
  2968  007856  F000               	nop	
  2969                           
  2970                           ;Practica8_15_03_19.c: 224:                 Lcd_Out(1,1,"Motor Girando");
  2971  007858  0E01               	movlw	1
  2972  00785A  6E04               	movwf	Lcd_Out@x,c
  2973  00785C  0EF0               	movlw	low STR_38
  2974  00785E  6E05               	movwf	Lcd_Out@buffer,c
  2975  007860  0E7E               	movlw	high STR_38
  2976  007862  6E06               	movwf	Lcd_Out@buffer+1,c
  2977  007864  0E01               	movlw	1
  2978  007866  EC86  F02B         	call	_Lcd_Out
  2979                           
  2980                           ;Practica8_15_03_19.c: 225:                 opt_Wave_stepper(Pasos_fun,dir);
  2981  00786A  C060  F00B         	movff	_Pasos_fun,opt_Wave_stepper@steps
  2982  00786E  C061  F00C         	movff	_Pasos_fun+1,opt_Wave_stepper@steps+1
  2983  007872  C062  F00D         	movff	_Pasos_fun+2,opt_Wave_stepper@steps+2
  2984  007876  C063  F00E         	movff	_Pasos_fun+3,opt_Wave_stepper@steps+3
  2985  00787A  C0DA  F00F         	movff	main@dir,opt_Wave_stepper@direttion
  2986  00787E  C0DB  F010         	movff	main@dir+1,opt_Wave_stepper@direttion+1
  2987  007882  EC84  F02E         	call	_opt_Wave_stepper	;wreg free
  2988  007886  D586               	goto	l3789
  2989  007888                     l3933:
  2990                           
  2991                           ; BSR set to: 0
  2992  007888  0E00               	movlw	0
  2993  00788A  6F64               	movwf	_valor& (0+255),b
  2994  00788C  0E00               	movlw	0
  2995  00788E  6F65               	movwf	(_valor+1)& (0+255),b
  2996  007890  0E00               	movlw	0
  2997  007892  6F66               	movwf	(_valor+2)& (0+255),b
  2998  007894  0E00               	movlw	0
  2999  007896  6F67               	movwf	(_valor+3)& (0+255),b
  3000  007898  0E00               	movlw	0
  3001  00789A  6FD9               	movwf	main@caracter& (0+255),b
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;Practica8_15_03_19.c: 230:                 Lcd_Out(1,1,"HALF STEPS");
  3005  00789C  0E01               	movlw	1
  3006  00789E  6E04               	movwf	Lcd_Out@x,c
  3007  0078A0  0E6D               	movlw	low STR_60
  3008  0078A2  6E05               	movwf	Lcd_Out@buffer,c
  3009  0078A4  0E7F               	movlw	high STR_60
  3010  0078A6  6E06               	movwf	Lcd_Out@buffer+1,c
  3011  0078A8  0E01               	movlw	1
  3012  0078AA  EC86  F02B         	call	_Lcd_Out
  3013                           
  3014                           ;Practica8_15_03_19.c: 231:                 Lcd_Out(2,1,"***************");
  3015  0078AE  0E01               	movlw	1
  3016  0078B0  6E04               	movwf	Lcd_Out@x,c
  3017  0078B2  0E87               	movlw	low STR_19
  3018  0078B4  6E05               	movwf	Lcd_Out@buffer,c
  3019  0078B6  0E7E               	movlw	high STR_19
  3020  0078B8  6E06               	movwf	Lcd_Out@buffer+1,c
  3021  0078BA  0E02               	movlw	2
  3022  0078BC  EC86  F02B         	call	_Lcd_Out
  3023                           
  3024                           ;Practica8_15_03_19.c: 232:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3025  0078C0  0E10               	movlw	16
  3026  0078C2  6E5A               	movwf	(??_main+1)& (0+255),c
  3027  0078C4  0E39               	movlw	57
  3028  0078C6  6E59               	movwf	??_main& (0+255),c
  3029  0078C8  0E0E               	movlw	14
  3030  0078CA                     u2837:
  3031  0078CA  2EE8               	decfsz	wreg,f,c
  3032  0078CC  D7FE               	bra	u2837
  3033  0078CE  2E59               	decfsz	??_main& (0+255),f,c
  3034  0078D0  D7FC               	bra	u2837
  3035  0078D2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3036  0078D4  D7FA               	bra	u2837
  3037                           
  3038                           ;Practica8_15_03_19.c: 233:                 Lcd_Cmd(1);
  3039  0078D6  0E01               	movlw	1
  3040  0078D8  EC8F  F02F         	call	_Lcd_Cmd
  3041                           
  3042                           ;Practica8_15_03_19.c: 234:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3043  0078DC  0E02               	movlw	2
  3044  0078DE  6E5A               	movwf	(??_main+1)& (0+255),c
  3045  0078E0  0E86               	movlw	134
  3046  0078E2  6E59               	movwf	??_main& (0+255),c
  3047  0078E4  0E99               	movlw	153
  3048  0078E6                     u2847:
  3049  0078E6  2EE8               	decfsz	wreg,f,c
  3050  0078E8  D7FE               	bra	u2847
  3051  0078EA  2E59               	decfsz	??_main& (0+255),f,c
  3052  0078EC  D7FC               	bra	u2847
  3053  0078EE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3054  0078F0  D7FA               	bra	u2847
  3055  0078F2  F000               	nop	
  3056                           
  3057                           ;Practica8_15_03_19.c: 235:                 Lcd_Out(1,1,"Selecciona el");
  3058  0078F4  0E01               	movlw	1
  3059  0078F6  6E04               	movwf	Lcd_Out@x,c
  3060  0078F8  0EE2               	movlw	low STR_20
  3061  0078FA  6E05               	movwf	Lcd_Out@buffer,c
  3062  0078FC  0E7E               	movlw	high STR_20
  3063  0078FE  6E06               	movwf	Lcd_Out@buffer+1,c
  3064  007900  0E01               	movlw	1
  3065  007902  EC86  F02B         	call	_Lcd_Out
  3066                           
  3067                           ;Practica8_15_03_19.c: 236:                 Lcd_Out(2,1,"sentido de giro");
  3068  007906  0E01               	movlw	1
  3069  007908  6E04               	movwf	Lcd_Out@x,c
  3070  00790A  0E97               	movlw	low STR_21
  3071  00790C  6E05               	movwf	Lcd_Out@buffer,c
  3072  00790E  0E7E               	movlw	high STR_21
  3073  007910  6E06               	movwf	Lcd_Out@buffer+1,c
  3074  007912  0E02               	movlw	2
  3075  007914  EC86  F02B         	call	_Lcd_Out
  3076                           
  3077                           ;Practica8_15_03_19.c: 237:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3078  007918  0E10               	movlw	16
  3079  00791A  6E5A               	movwf	(??_main+1)& (0+255),c
  3080  00791C  0E39               	movlw	57
  3081  00791E  6E59               	movwf	??_main& (0+255),c
  3082  007920  0E0E               	movlw	14
  3083  007922                     u2857:
  3084  007922  2EE8               	decfsz	wreg,f,c
  3085  007924  D7FE               	bra	u2857
  3086  007926  2E59               	decfsz	??_main& (0+255),f,c
  3087  007928  D7FC               	bra	u2857
  3088  00792A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3089  00792C  D7FA               	bra	u2857
  3090                           
  3091                           ;Practica8_15_03_19.c: 238:                 Lcd_Cmd(1);
  3092  00792E  0E01               	movlw	1
  3093  007930  EC8F  F02F         	call	_Lcd_Cmd
  3094                           
  3095                           ;Practica8_15_03_19.c: 239:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3096  007934  0E02               	movlw	2
  3097  007936  6E5A               	movwf	(??_main+1)& (0+255),c
  3098  007938  0E86               	movlw	134
  3099  00793A  6E59               	movwf	??_main& (0+255),c
  3100  00793C  0E99               	movlw	153
  3101  00793E                     u2867:
  3102  00793E  2EE8               	decfsz	wreg,f,c
  3103  007940  D7FE               	bra	u2867
  3104  007942  2E59               	decfsz	??_main& (0+255),f,c
  3105  007944  D7FC               	bra	u2867
  3106  007946  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3107  007948  D7FA               	bra	u2867
  3108  00794A  F000               	nop	
  3109                           
  3110                           ;Practica8_15_03_19.c: 240:                 Lcd_Out(1,1,"Presiona *");
  3111  00794C  0E01               	movlw	1
  3112  00794E  6E04               	movwf	Lcd_Out@x,c
  3113  007950  0E4C               	movlw	low STR_14
  3114  007952  6E05               	movwf	Lcd_Out@buffer,c
  3115  007954  0E7F               	movlw	high STR_14
  3116  007956  6E06               	movwf	Lcd_Out@buffer+1,c
  3117  007958  0E01               	movlw	1
  3118  00795A  EC86  F02B         	call	_Lcd_Out
  3119                           
  3120                           ;Practica8_15_03_19.c: 241:                 Lcd_Out(2,1,"cuando termines");
  3121  00795E  0E01               	movlw	1
  3122  007960  6E04               	movwf	Lcd_Out@x,c
  3123  007962  0EA7               	movlw	low STR_15
  3124  007964  6E05               	movwf	Lcd_Out@buffer,c
  3125  007966  0E7E               	movlw	high STR_15
  3126  007968  6E06               	movwf	Lcd_Out@buffer+1,c
  3127  00796A  0E02               	movlw	2
  3128  00796C  EC86  F02B         	call	_Lcd_Out
  3129                           
  3130                           ;Practica8_15_03_19.c: 242:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3131  007970  0E10               	movlw	16
  3132  007972  6E5A               	movwf	(??_main+1)& (0+255),c
  3133  007974  0E39               	movlw	57
  3134  007976  6E59               	movwf	??_main& (0+255),c
  3135  007978  0E0E               	movlw	14
  3136  00797A                     u2877:
  3137  00797A  2EE8               	decfsz	wreg,f,c
  3138  00797C  D7FE               	bra	u2877
  3139  00797E  2E59               	decfsz	??_main& (0+255),f,c
  3140  007980  D7FC               	bra	u2877
  3141  007982  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3142  007984  D7FA               	bra	u2877
  3143                           
  3144                           ;Practica8_15_03_19.c: 243:                 Lcd_Cmd(1);
  3145  007986  0E01               	movlw	1
  3146  007988  EC8F  F02F         	call	_Lcd_Cmd
  3147                           
  3148                           ;Practica8_15_03_19.c: 244:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3149  00798C  0E02               	movlw	2
  3150  00798E  6E5A               	movwf	(??_main+1)& (0+255),c
  3151  007990  0E86               	movlw	134
  3152  007992  6E59               	movwf	??_main& (0+255),c
  3153  007994  0E99               	movlw	153
  3154  007996                     u2887:
  3155  007996  2EE8               	decfsz	wreg,f,c
  3156  007998  D7FE               	bra	u2887
  3157  00799A  2E59               	decfsz	??_main& (0+255),f,c
  3158  00799C  D7FC               	bra	u2887
  3159  00799E  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3160  0079A0  D7FA               	bra	u2887
  3161  0079A2  F000               	nop	
  3162                           
  3163                           ;Practica8_15_03_19.c: 245:                 Lcd_Out(1,2,"1:DER  2:IZQ");
  3164  0079A4  0E02               	movlw	2
  3165  0079A6  6E04               	movwf	Lcd_Out@x,c
  3166  0079A8  0E1A               	movlw	low STR_24
  3167  0079AA  6E05               	movwf	Lcd_Out@buffer,c
  3168  0079AC  0E7F               	movlw	high STR_24
  3169  0079AE  6E06               	movwf	Lcd_Out@buffer+1,c
  3170  0079B0  0E01               	movlw	1
  3171  0079B2  EC86  F02B         	call	_Lcd_Out
  3172                           
  3173                           ;Practica8_15_03_19.c: 246:                 Lcd_Out(2,1,"OPT:");
  3174  0079B6  0E01               	movlw	1
  3175  0079B8  6E04               	movwf	Lcd_Out@x,c
  3176  0079BA  0EED               	movlw	low STR_25
  3177  0079BC  6E05               	movwf	Lcd_Out@buffer,c
  3178  0079BE  0E7F               	movlw	high STR_25
  3179  0079C0  6E06               	movwf	Lcd_Out@buffer+1,c
  3180  0079C2  0E02               	movlw	2
  3181  0079C4  EC86  F02B         	call	_Lcd_Out
  3182                           
  3183                           ;Practica8_15_03_19.c: 247:                 while(valor != '*'){
  3184  0079C8  D03A               	goto	l192
  3185  0079CA                     l3969:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;Practica8_15_03_19.c: 248:                     teclado();
  3189  0079CA  EC08  F033         	call	_teclado	;wreg free
  3190                           
  3191                           ;Practica8_15_03_19.c: 249:                     if(valor=='1' || valor=='2'){
  3192  0079CE  0E31               	movlw	49
  3193  0079D0  0100               	movlb	0	; () banked
  3194  0079D2  1964               	xorwf	_valor& (0+255),w,b
  3195  0079D4  1165               	iorwf	(_valor+1)& (0+255),w,b
  3196  0079D6  1166               	iorwf	(_valor+2)& (0+255),w,b
  3197  0079D8  1167               	iorwf	(_valor+3)& (0+255),w,b
  3198  0079DA  B4D8               	btfsc	status,2,c
  3199  0079DC  D007               	goto	u2310
  3200                           
  3201                           ; BSR set to: 0
  3202  0079DE  0E32               	movlw	50
  3203  0079E0  1964               	xorwf	_valor& (0+255),w,b
  3204  0079E2  1165               	iorwf	(_valor+1)& (0+255),w,b
  3205  0079E4  1166               	iorwf	(_valor+2)& (0+255),w,b
  3206  0079E6  1167               	iorwf	(_valor+3)& (0+255),w,b
  3207  0079E8  A4D8               	btfss	status,2,c
  3208  0079EA  D029               	goto	l192
  3209  0079EC                     u2310:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;Practica8_15_03_19.c: 250:                         Dir_sel=valor;
  3213  0079EC  C064  F0DC         	movff	_valor,main@Dir_sel
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;Practica8_15_03_19.c: 251:                         sprintf(palabra1," %c",Dir_sel);
  3217  0079F0  0EA3               	movlw	low _palabra1
  3218  0079F2  6FC5               	movwf	sprintf@s& (0+255),b
  3219  0079F4  0E00               	movlw	high _palabra1
  3220  0079F6  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  3221  0079F8  0EF7               	movlw	low STR_26
  3222  0079FA  6FC7               	movwf	sprintf@fmt& (0+255),b
  3223  0079FC  0E7F               	movlw	high STR_26
  3224  0079FE  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  3225  007A00  C0DC  F0C9         	movff	main@Dir_sel,?_sprintf+4
  3226  007A04  6BCA               	clrf	(?_sprintf+5)& (0+255),b
  3227  007A06  ECCF  F02A         	call	_sprintf	;wreg free
  3228                           
  3229                           ;Practica8_15_03_19.c: 252:                         Lcd_Out2(2,5,palabra1);
  3230  007A0A  0E05               	movlw	5
  3231  007A0C  6E04               	movwf	Lcd_Out2@x,c
  3232  007A0E  0EA3               	movlw	low _palabra1
  3233  007A10  6E05               	movwf	Lcd_Out2@buffer,c
  3234  007A12  0E00               	movlw	high _palabra1
  3235  007A14  6E06               	movwf	Lcd_Out2@buffer+1,c
  3236  007A16  0E02               	movlw	2
  3237  007A18  EC4E  F02B         	call	_Lcd_Out2
  3238                           
  3239                           ;Practica8_15_03_19.c: 253:                         if(Dir_sel=='1'){dir=1;}
  3240  007A1C  0E31               	movlw	49
  3241  007A1E  0100               	movlb	0	; () banked
  3242  007A20  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  3243  007A22  A4D8               	btfss	status,2,c
  3244  007A24  D004               	goto	l3983
  3245                           
  3246                           ; BSR set to: 0
  3247  007A26  0E00               	movlw	0
  3248  007A28  6FDB               	movwf	(main@dir+1)& (0+255),b
  3249  007A2A  0E01               	movlw	1
  3250  007A2C  D007               	goto	L3
  3251  007A2E                     l3983:
  3252                           
  3253                           ; BSR set to: 0
  3254  007A2E  0E32               	movlw	50
  3255  007A30  19DC               	xorwf	main@Dir_sel& (0+255),w,b
  3256  007A32  A4D8               	btfss	status,2,c
  3257  007A34  D004               	goto	l192
  3258                           
  3259                           ; BSR set to: 0
  3260  007A36  0E00               	movlw	0
  3261  007A38  6FDB               	movwf	(main@dir+1)& (0+255),b
  3262  007A3A  0E02               	movlw	2
  3263  007A3C                     L3:
  3264  007A3C  6FDA               	movwf	main@dir& (0+255),b
  3265  007A3E                     l192:
  3266                           
  3267                           ;Practica8_15_03_19.c: 247:                 while(valor != '*'){
  3268                           
  3269                           ; BSR set to: 0
  3270  007A3E  0E2A               	movlw	42
  3271  007A40  0100               	movlb	0	; () banked
  3272  007A42  1964               	xorwf	_valor& (0+255),w,b
  3273  007A44  1165               	iorwf	(_valor+1)& (0+255),w,b
  3274  007A46  1166               	iorwf	(_valor+2)& (0+255),w,b
  3275  007A48  1167               	iorwf	(_valor+3)& (0+255),w,b
  3276  007A4A  A4D8               	btfss	status,2,c
  3277  007A4C  D7BE               	goto	l3969
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;Practica8_15_03_19.c: 258:                 valor=0;
  3281  007A4E  0E00               	movlw	0
  3282  007A50  6F64               	movwf	_valor& (0+255),b
  3283  007A52  0E00               	movlw	0
  3284  007A54  6F65               	movwf	(_valor+1)& (0+255),b
  3285  007A56  0E00               	movlw	0
  3286  007A58  6F66               	movwf	(_valor+2)& (0+255),b
  3287  007A5A  0E00               	movlw	0
  3288  007A5C  6F67               	movwf	(_valor+3)& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;Practica8_15_03_19.c: 259:                 Lcd_Cmd(1);
  3292  007A5E  0E01               	movlw	1
  3293  007A60  EC8F  F02F         	call	_Lcd_Cmd
  3294                           
  3295                           ;Practica8_15_03_19.c: 260:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3296  007A64  0E02               	movlw	2
  3297  007A66  6E5A               	movwf	(??_main+1)& (0+255),c
  3298  007A68  0E86               	movlw	134
  3299  007A6A  6E59               	movwf	??_main& (0+255),c
  3300  007A6C  0E99               	movlw	153
  3301  007A6E                     u2897:
  3302  007A6E  2EE8               	decfsz	wreg,f,c
  3303  007A70  D7FE               	bra	u2897
  3304  007A72  2E59               	decfsz	??_main& (0+255),f,c
  3305  007A74  D7FC               	bra	u2897
  3306  007A76  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3307  007A78  D7FA               	bra	u2897
  3308  007A7A  F000               	nop	
  3309                           
  3310                           ;Practica8_15_03_19.c: 261:                 Lcd_Out(1,1,"Selecciona el");
  3311  007A7C  0E01               	movlw	1
  3312  007A7E  6E04               	movwf	Lcd_Out@x,c
  3313  007A80  0EE2               	movlw	low STR_20
  3314  007A82  6E05               	movwf	Lcd_Out@buffer,c
  3315  007A84  0E7E               	movlw	high STR_20
  3316  007A86  6E06               	movwf	Lcd_Out@buffer+1,c
  3317  007A88  0E01               	movlw	1
  3318  007A8A  EC86  F02B         	call	_Lcd_Out
  3319                           
  3320                           ;Practica8_15_03_19.c: 262:                 Lcd_Out(2,1,"N de pasos");
  3321  007A8E  0E01               	movlw	1
  3322  007A90  6E04               	movwf	Lcd_Out@x,c
  3323  007A92  0EA4               	movlw	low STR_28
  3324  007A94  6E05               	movwf	Lcd_Out@buffer,c
  3325  007A96  0E7F               	movlw	high STR_28
  3326  007A98  6E06               	movwf	Lcd_Out@buffer+1,c
  3327  007A9A  0E02               	movlw	2
  3328  007A9C  EC86  F02B         	call	_Lcd_Out
  3329                           
  3330                           ;Practica8_15_03_19.c: 263:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3331  007AA0  0E10               	movlw	16
  3332  007AA2  6E5A               	movwf	(??_main+1)& (0+255),c
  3333  007AA4  0E39               	movlw	57
  3334  007AA6  6E59               	movwf	??_main& (0+255),c
  3335  007AA8  0E0E               	movlw	14
  3336  007AAA                     u2907:
  3337  007AAA  2EE8               	decfsz	wreg,f,c
  3338  007AAC  D7FE               	bra	u2907
  3339  007AAE  2E59               	decfsz	??_main& (0+255),f,c
  3340  007AB0  D7FC               	bra	u2907
  3341  007AB2  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3342  007AB4  D7FA               	bra	u2907
  3343                           
  3344                           ;Practica8_15_03_19.c: 264:                 Lcd_Cmd(1);
  3345  007AB6  0E01               	movlw	1
  3346  007AB8  EC8F  F02F         	call	_Lcd_Cmd
  3347                           
  3348                           ;Practica8_15_03_19.c: 265:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3349  007ABC  0E02               	movlw	2
  3350  007ABE  6E5A               	movwf	(??_main+1)& (0+255),c
  3351  007AC0  0E86               	movlw	134
  3352  007AC2  6E59               	movwf	??_main& (0+255),c
  3353  007AC4  0E99               	movlw	153
  3354  007AC6                     u2917:
  3355  007AC6  2EE8               	decfsz	wreg,f,c
  3356  007AC8  D7FE               	bra	u2917
  3357  007ACA  2E59               	decfsz	??_main& (0+255),f,c
  3358  007ACC  D7FC               	bra	u2917
  3359  007ACE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3360  007AD0  D7FA               	bra	u2917
  3361  007AD2  F000               	nop	
  3362                           
  3363                           ;Practica8_15_03_19.c: 266:                 Lcd_Out(1,1,"Presiona *");
  3364  007AD4  0E01               	movlw	1
  3365  007AD6  6E04               	movwf	Lcd_Out@x,c
  3366  007AD8  0E4C               	movlw	low STR_14
  3367  007ADA  6E05               	movwf	Lcd_Out@buffer,c
  3368  007ADC  0E7F               	movlw	high STR_14
  3369  007ADE  6E06               	movwf	Lcd_Out@buffer+1,c
  3370  007AE0  0E01               	movlw	1
  3371  007AE2  EC86  F02B         	call	_Lcd_Out
  3372                           
  3373                           ;Practica8_15_03_19.c: 267:                 Lcd_Out(2,1,"cuando termines");
  3374  007AE6  0E01               	movlw	1
  3375  007AE8  6E04               	movwf	Lcd_Out@x,c
  3376  007AEA  0EA7               	movlw	low STR_15
  3377  007AEC  6E05               	movwf	Lcd_Out@buffer,c
  3378  007AEE  0E7E               	movlw	high STR_15
  3379  007AF0  6E06               	movwf	Lcd_Out@buffer+1,c
  3380  007AF2  0E02               	movlw	2
  3381  007AF4  EC86  F02B         	call	_Lcd_Out
  3382                           
  3383                           ;Practica8_15_03_19.c: 268:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3384  007AF8  0E10               	movlw	16
  3385  007AFA  6E5A               	movwf	(??_main+1)& (0+255),c
  3386  007AFC  0E39               	movlw	57
  3387  007AFE  6E59               	movwf	??_main& (0+255),c
  3388  007B00  0E0E               	movlw	14
  3389  007B02                     u2927:
  3390  007B02  2EE8               	decfsz	wreg,f,c
  3391  007B04  D7FE               	bra	u2927
  3392  007B06  2E59               	decfsz	??_main& (0+255),f,c
  3393  007B08  D7FC               	bra	u2927
  3394  007B0A  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3395  007B0C  D7FA               	bra	u2927
  3396                           
  3397                           ;Practica8_15_03_19.c: 269:                 Lcd_Cmd(1);
  3398  007B0E  0E01               	movlw	1
  3399  007B10  EC8F  F02F         	call	_Lcd_Cmd
  3400  007B14                     l4013:
  3401                           
  3402                           ;Practica8_15_03_19.c: 270:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3403  007B14  0E02               	movlw	2
  3404  007B16  6E5A               	movwf	(??_main+1)& (0+255),c
  3405  007B18  0E86               	movlw	134
  3406  007B1A  6E59               	movwf	??_main& (0+255),c
  3407  007B1C  0E99               	movlw	153
  3408  007B1E                     u2937:
  3409  007B1E  2EE8               	decfsz	wreg,f,c
  3410  007B20  D7FE               	bra	u2937
  3411  007B22  2E59               	decfsz	??_main& (0+255),f,c
  3412  007B24  D7FC               	bra	u2937
  3413  007B26  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3414  007B28  D7FA               	bra	u2937
  3415  007B2A  F000               	nop	
  3416                           
  3417                           ;Practica8_15_03_19.c: 271:                 while(valor != '*'){
  3418  007B2C  D0ED               	goto	l4061
  3419  007B2E                     l4015:
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;Practica8_15_03_19.c: 272:                     teclado();
  3423  007B2E  EC08  F033         	call	_teclado	;wreg free
  3424                           
  3425                           ;Practica8_15_03_19.c: 273:                     Lcd_Out(1,1,"Numero de ");
  3426  007B32  0E01               	movlw	1
  3427  007B34  6E04               	movwf	Lcd_Out@x,c
  3428  007B36  0E41               	movlw	low STR_31
  3429  007B38  6E05               	movwf	Lcd_Out@buffer,c
  3430  007B3A  0E7F               	movlw	high STR_31
  3431  007B3C  6E06               	movwf	Lcd_Out@buffer+1,c
  3432  007B3E  0E01               	movlw	1
  3433  007B40  EC86  F02B         	call	_Lcd_Out
  3434                           
  3435                           ;Practica8_15_03_19.c: 274:                     Lcd_Out(2,1,"Pasos:");
  3436  007B44  0E01               	movlw	1
  3437  007B46  6E04               	movwf	Lcd_Out@x,c
  3438  007B48  0EDF               	movlw	low STR_32
  3439  007B4A  6E05               	movwf	Lcd_Out@buffer,c
  3440  007B4C  0E7F               	movlw	high STR_32
  3441  007B4E  6E06               	movwf	Lcd_Out@buffer+1,c
  3442  007B50  0E02               	movlw	2
  3443  007B52  EC86  F02B         	call	_Lcd_Out
  3444                           
  3445                           ;Practica8_15_03_19.c: 275:                     if((valor >= '0') && (valor <= '9')){
  3446  007B56  0100               	movlb	0	; () banked
  3447  007B58  5167               	movf	(_valor+3)& (0+255),w,b
  3448  007B5A  1166               	iorwf	(_valor+2)& (0+255),w,b
  3449  007B5C  1165               	iorwf	(_valor+1)& (0+255),w,b
  3450  007B5E  E104               	bnz	u2350
  3451  007B60  0E30               	movlw	48
  3452  007B62  5D64               	subwf	_valor& (0+255),w,b
  3453  007B64  A0D8               	btfss	status,0,c
  3454  007B66  D04E               	goto	l4031
  3455  007B68                     u2350:
  3456                           
  3457                           ; BSR set to: 0
  3458  007B68  5167               	movf	(_valor+3)& (0+255),w,b
  3459  007B6A  1166               	iorwf	(_valor+2)& (0+255),w,b
  3460  007B6C  1165               	iorwf	(_valor+1)& (0+255),w,b
  3461  007B6E  E14A               	bnz	l4031
  3462  007B70  0E3A               	movlw	58
  3463  007B72  5D64               	subwf	_valor& (0+255),w,b
  3464  007B74  B0D8               	btfsc	status,0,c
  3465  007B76  D046               	goto	l4031
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;Practica8_15_03_19.c: 276:                         pasos = pasos*10 + (valor - 48);
  3469  007B78  C0DD  F001         	movff	main@pasos,___lmul@multiplier
  3470  007B7C  C0DE  F002         	movff	main@pasos+1,___lmul@multiplier+1
  3471  007B80  C0DF  F003         	movff	main@pasos+2,___lmul@multiplier+2
  3472  007B84  C0E0  F004         	movff	main@pasos+3,___lmul@multiplier+3
  3473  007B88  0E0A               	movlw	10
  3474  007B8A  6E05               	movwf	___lmul@multiplicand,c
  3475  007B8C  0E00               	movlw	0
  3476  007B8E  6E06               	movwf	___lmul@multiplicand+1,c
  3477  007B90  0E00               	movlw	0
  3478  007B92  6E07               	movwf	___lmul@multiplicand+2,c
  3479  007B94  0E00               	movlw	0
  3480  007B96  6E08               	movwf	___lmul@multiplicand+3,c
  3481  007B98  ECF8  F02A         	call	___lmul	;wreg free
  3482  007B9C  0100               	movlb	0	; () banked
  3483  007B9E  5164               	movf	_valor& (0+255),w,b
  3484  007BA0  2401               	addwf	?___lmul,w,c
  3485  007BA2  6E59               	movwf	??_main& (0+255),c
  3486  007BA4  5165               	movf	(_valor+1)& (0+255),w,b
  3487  007BA6  2002               	addwfc	?___lmul+1,w,c
  3488  007BA8  6E5A               	movwf	(??_main+1)& (0+255),c
  3489  007BAA  5166               	movf	(_valor+2)& (0+255),w,b
  3490  007BAC  2003               	addwfc	?___lmul+2,w,c
  3491  007BAE  6E5B               	movwf	(??_main+2)& (0+255),c
  3492  007BB0  5167               	movf	(_valor+3)& (0+255),w,b
  3493  007BB2  2004               	addwfc	?___lmul+3,w,c
  3494  007BB4  6E5C               	movwf	(??_main+3)& (0+255),c
  3495  007BB6  0ED0               	movlw	208
  3496  007BB8  2459               	addwf	??_main,w,c
  3497  007BBA  6FDD               	movwf	main@pasos& (0+255),b
  3498  007BBC  0EFF               	movlw	255
  3499  007BBE  205A               	addwfc	??_main+1,w,c
  3500  007BC0  6FDE               	movwf	(main@pasos+1)& (0+255),b
  3501  007BC2  0EFF               	movlw	255
  3502  007BC4  205B               	addwfc	??_main+2,w,c
  3503  007BC6  6FDF               	movwf	(main@pasos+2)& (0+255),b
  3504  007BC8  0EFF               	movlw	255
  3505  007BCA  205C               	addwfc	??_main+3,w,c
  3506  007BCC  6FE0               	movwf	(main@pasos+3)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;Practica8_15_03_19.c: 277:                         sprintf(palabra2," %d",pasos);
  3510  007BCE  0E92               	movlw	low _palabra2
  3511  007BD0  6FC5               	movwf	sprintf@s& (0+255),b
  3512  007BD2  0E00               	movlw	high _palabra2
  3513  007BD4  6FC6               	movwf	(sprintf@s+1)& (0+255),b
  3514  007BD6  0EFB               	movlw	low STR_33
  3515  007BD8  6FC7               	movwf	sprintf@fmt& (0+255),b
  3516  007BDA  0E7F               	movlw	high STR_33
  3517  007BDC  6FC8               	movwf	(sprintf@fmt+1)& (0+255),b
  3518  007BDE  C0DD  F0C9         	movff	main@pasos,?_sprintf+4
  3519  007BE2  C0DE  F0CA         	movff	main@pasos+1,?_sprintf+5
  3520  007BE6  C0DF  F0CB         	movff	main@pasos+2,?_sprintf+6
  3521  007BEA  C0E0  F0CC         	movff	main@pasos+3,?_sprintf+7
  3522  007BEE  ECCF  F02A         	call	_sprintf	;wreg free
  3523                           
  3524                           ;Practica8_15_03_19.c: 278:                         Lcd_Out2(2,7,palabra2);
  3525  007BF2  0E07               	movlw	7
  3526  007BF4  6E04               	movwf	Lcd_Out2@x,c
  3527  007BF6  0E92               	movlw	low _palabra2
  3528  007BF8  6E05               	movwf	Lcd_Out2@buffer,c
  3529  007BFA  0E00               	movlw	high _palabra2
  3530  007BFC  6E06               	movwf	Lcd_Out2@buffer+1,c
  3531  007BFE  0E02               	movlw	2
  3532  007C00  EC4E  F02B         	call	_Lcd_Out2
  3533  007C04                     l4031:
  3534                           
  3535                           ;Practica8_15_03_19.c: 280:                     Pasos_fun = pasos;
  3536  007C04  C0DD  F060         	movff	main@pasos,_Pasos_fun
  3537  007C08  C0DE  F061         	movff	main@pasos+1,_Pasos_fun+1
  3538  007C0C  C0DF  F062         	movff	main@pasos+2,_Pasos_fun+2
  3539  007C10  C0E0  F063         	movff	main@pasos+3,_Pasos_fun+3
  3540                           
  3541                           ;Practica8_15_03_19.c: 281:                     if(Pasos_fun>9000){
  3542  007C14  0100               	movlb	0	; () banked
  3543  007C16  BF63               	btfsc	(_Pasos_fun+3)& (0+255),7,b
  3544  007C18  D077               	goto	l4061
  3545  007C1A  5163               	movf	(_Pasos_fun+3)& (0+255),w,b
  3546  007C1C  1162               	iorwf	(_Pasos_fun+2)& (0+255),w,b
  3547  007C1E  E106               	bnz	u2370
  3548  007C20  0E29               	movlw	41
  3549  007C22  5D60               	subwf	_Pasos_fun& (0+255),w,b
  3550  007C24  0E23               	movlw	35
  3551  007C26  5961               	subwfb	(_Pasos_fun+1)& (0+255),w,b
  3552  007C28  A0D8               	btfss	status,0,c
  3553  007C2A  D06E               	goto	l4061
  3554  007C2C                     u2370:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;Practica8_15_03_19.c: 282:                         pasos=0;Pasos_fun=0;
  3558  007C2C  0E00               	movlw	0
  3559  007C2E  6FDD               	movwf	main@pasos& (0+255),b
  3560  007C30  0E00               	movlw	0
  3561  007C32  6FDE               	movwf	(main@pasos+1)& (0+255),b
  3562  007C34  0E00               	movlw	0
  3563  007C36  6FDF               	movwf	(main@pasos+2)& (0+255),b
  3564  007C38  0E00               	movlw	0
  3565  007C3A  6FE0               	movwf	(main@pasos+3)& (0+255),b
  3566  007C3C  0E00               	movlw	0
  3567  007C3E  6F60               	movwf	_Pasos_fun& (0+255),b
  3568  007C40  0E00               	movlw	0
  3569  007C42  6F61               	movwf	(_Pasos_fun+1)& (0+255),b
  3570  007C44  0E00               	movlw	0
  3571  007C46  6F62               	movwf	(_Pasos_fun+2)& (0+255),b
  3572  007C48  0E00               	movlw	0
  3573  007C4A  6F63               	movwf	(_Pasos_fun+3)& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;Practica8_15_03_19.c: 283:                         Lcd_Cmd(1);
  3577  007C4C  0E01               	movlw	1
  3578  007C4E  EC8F  F02F         	call	_Lcd_Cmd
  3579                           
  3580                           ;Practica8_15_03_19.c: 284:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  3581  007C52  0E02               	movlw	2
  3582  007C54  6E5A               	movwf	(??_main+1)& (0+255),c
  3583  007C56  0E86               	movlw	134
  3584  007C58  6E59               	movwf	??_main& (0+255),c
  3585  007C5A  0E99               	movlw	153
  3586  007C5C                     u2947:
  3587  007C5C  2EE8               	decfsz	wreg,f,c
  3588  007C5E  D7FE               	bra	u2947
  3589  007C60  2E59               	decfsz	??_main& (0+255),f,c
  3590  007C62  D7FC               	bra	u2947
  3591  007C64  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3592  007C66  D7FA               	bra	u2947
  3593  007C68  F000               	nop	
  3594                           
  3595                           ;Practica8_15_03_19.c: 285:                         Lcd_Out(1,1,"Valor maximo");
  3596  007C6A  0E01               	movlw	1
  3597  007C6C  6E04               	movwf	Lcd_Out@x,c
  3598  007C6E  0E27               	movlw	low STR_34
  3599  007C70  6E05               	movwf	Lcd_Out@buffer,c
  3600  007C72  0E7F               	movlw	high STR_34
  3601  007C74  6E06               	movwf	Lcd_Out@buffer+1,c
  3602  007C76  0E01               	movlw	1
  3603  007C78  EC86  F02B         	call	_Lcd_Out
  3604                           
  3605                           ;Practica8_15_03_19.c: 286:                         Lcd_Out(2,1,"alcanzado");
  3606  007C7C  0E01               	movlw	1
  3607  007C7E  6E04               	movwf	Lcd_Out@x,c
  3608  007C80  0EC3               	movlw	low STR_35
  3609  007C82  6E05               	movwf	Lcd_Out@buffer,c
  3610  007C84  0E7F               	movlw	high STR_35
  3611  007C86  6E06               	movwf	Lcd_Out@buffer+1,c
  3612  007C88  0E02               	movlw	2
  3613  007C8A  EC86  F02B         	call	_Lcd_Out
  3614                           
  3615                           ;Practica8_15_03_19.c: 287:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  3616  007C8E  0E1F               	movlw	31
  3617  007C90  6E5A               	movwf	(??_main+1)& (0+255),c
  3618  007C92  0E71               	movlw	113
  3619  007C94  6E59               	movwf	??_main& (0+255),c
  3620  007C96  0E1E               	movlw	30
  3621  007C98                     u2957:
  3622  007C98  2EE8               	decfsz	wreg,f,c
  3623  007C9A  D7FE               	bra	u2957
  3624  007C9C  2E59               	decfsz	??_main& (0+255),f,c
  3625  007C9E  D7FC               	bra	u2957
  3626  007CA0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3627  007CA2  D7FA               	bra	u2957
  3628  007CA4  D000               	nop2	
  3629                           
  3630                           ;Practica8_15_03_19.c: 288:                         Lcd_Cmd(1);
  3631  007CA6  0E01               	movlw	1
  3632  007CA8  EC8F  F02F         	call	_Lcd_Cmd
  3633                           
  3634                           ;Practica8_15_03_19.c: 289:                         _delay((unsigned long)((100)*(120000
      +                          00/4000.0)));
  3635  007CAC  0E02               	movlw	2
  3636  007CAE  6E5A               	movwf	(??_main+1)& (0+255),c
  3637  007CB0  0E86               	movlw	134
  3638  007CB2  6E59               	movwf	??_main& (0+255),c
  3639  007CB4  0E99               	movlw	153
  3640  007CB6                     u2967:
  3641  007CB6  2EE8               	decfsz	wreg,f,c
  3642  007CB8  D7FE               	bra	u2967
  3643  007CBA  2E59               	decfsz	??_main& (0+255),f,c
  3644  007CBC  D7FC               	bra	u2967
  3645  007CBE  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3646  007CC0  D7FA               	bra	u2967
  3647  007CC2  F000               	nop	
  3648                           
  3649                           ;Practica8_15_03_19.c: 290:                         Lcd_Out(1,1,"Intentalo de ");
  3650  007CC4  0E01               	movlw	1
  3651  007CC6  6E04               	movwf	Lcd_Out@x,c
  3652  007CC8  0EC6               	movlw	low STR_36
  3653  007CCA  6E05               	movwf	Lcd_Out@buffer,c
  3654  007CCC  0E7E               	movlw	high STR_36
  3655  007CCE  6E06               	movwf	Lcd_Out@buffer+1,c
  3656  007CD0  0E01               	movlw	1
  3657  007CD2  EC86  F02B         	call	_Lcd_Out
  3658                           
  3659                           ;Practica8_15_03_19.c: 291:                         Lcd_Out(2,1,"nuevo humano");
  3660  007CD6  0E01               	movlw	1
  3661  007CD8  6E04               	movwf	Lcd_Out@x,c
  3662  007CDA  0E34               	movlw	low STR_37
  3663  007CDC  6E05               	movwf	Lcd_Out@buffer,c
  3664  007CDE  0E7F               	movlw	high STR_37
  3665  007CE0  6E06               	movwf	Lcd_Out@buffer+1,c
  3666  007CE2  0E02               	movlw	2
  3667  007CE4  EC86  F02B         	call	_Lcd_Out
  3668                           
  3669                           ;Practica8_15_03_19.c: 292:                         _delay((unsigned long)((2000)*(12000
      +                          000/4000.0)));
  3670  007CE8  0E1F               	movlw	31
  3671  007CEA  6E5A               	movwf	(??_main+1)& (0+255),c
  3672  007CEC  0E71               	movlw	113
  3673  007CEE  6E59               	movwf	??_main& (0+255),c
  3674  007CF0  0E1E               	movlw	30
  3675  007CF2                     u2977:
  3676  007CF2  2EE8               	decfsz	wreg,f,c
  3677  007CF4  D7FE               	bra	u2977
  3678  007CF6  2E59               	decfsz	??_main& (0+255),f,c
  3679  007CF8  D7FC               	bra	u2977
  3680  007CFA  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3681  007CFC  D7FA               	bra	u2977
  3682  007CFE  D000               	nop2	
  3683                           
  3684                           ;Practica8_15_03_19.c: 293:                         Lcd_Cmd(1);
  3685  007D00  0E01               	movlw	1
  3686  007D02  EC8F  F02F         	call	_Lcd_Cmd
  3687  007D06  D706               	goto	l4013
  3688  007D08                     l4061:
  3689                           
  3690                           ;Practica8_15_03_19.c: 271:                 while(valor != '*'){
  3691  007D08  0E2A               	movlw	42
  3692  007D0A  0100               	movlb	0	; () banked
  3693  007D0C  1964               	xorwf	_valor& (0+255),w,b
  3694  007D0E  1165               	iorwf	(_valor+1)& (0+255),w,b
  3695  007D10  1166               	iorwf	(_valor+2)& (0+255),w,b
  3696  007D12  1167               	iorwf	(_valor+3)& (0+255),w,b
  3697  007D14  A4D8               	btfss	status,2,c
  3698  007D16  D70B               	goto	l4015
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;Practica8_15_03_19.c: 297:                 valor=0;
  3702  007D18  0E00               	movlw	0
  3703  007D1A  6F64               	movwf	_valor& (0+255),b
  3704  007D1C  0E00               	movlw	0
  3705  007D1E  6F65               	movwf	(_valor+1)& (0+255),b
  3706  007D20  0E00               	movlw	0
  3707  007D22  6F66               	movwf	(_valor+2)& (0+255),b
  3708  007D24  0E00               	movlw	0
  3709  007D26  6F67               	movwf	(_valor+3)& (0+255),b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;Practica8_15_03_19.c: 298:                 Lcd_Cmd(1);
  3713  007D28  0E01               	movlw	1
  3714  007D2A  EC8F  F02F         	call	_Lcd_Cmd
  3715                           
  3716                           ;Practica8_15_03_19.c: 299:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3717  007D2E  0E02               	movlw	2
  3718  007D30  6E5A               	movwf	(??_main+1)& (0+255),c
  3719  007D32  0E86               	movlw	134
  3720  007D34  6E59               	movwf	??_main& (0+255),c
  3721  007D36  0E99               	movlw	153
  3722  007D38                     u2987:
  3723  007D38  2EE8               	decfsz	wreg,f,c
  3724  007D3A  D7FE               	bra	u2987
  3725  007D3C  2E59               	decfsz	??_main& (0+255),f,c
  3726  007D3E  D7FC               	bra	u2987
  3727  007D40  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3728  007D42  D7FA               	bra	u2987
  3729  007D44  F000               	nop	
  3730                           
  3731                           ;Practica8_15_03_19.c: 300:                 Lcd_Out(1,1,"Motor Girando");
  3732  007D46  0E01               	movlw	1
  3733  007D48  6E04               	movwf	Lcd_Out@x,c
  3734  007D4A  0EF0               	movlw	low STR_38
  3735  007D4C  6E05               	movwf	Lcd_Out@buffer,c
  3736  007D4E  0E7E               	movlw	high STR_38
  3737  007D50  6E06               	movwf	Lcd_Out@buffer+1,c
  3738  007D52  0E01               	movlw	1
  3739  007D54  EC86  F02B         	call	_Lcd_Out
  3740                           
  3741                           ;Practica8_15_03_19.c: 301:                 opt_Half_stepper(Pasos_fun,dir);
  3742  007D58  C060  F00B         	movff	_Pasos_fun,opt_Half_stepper@steps
  3743  007D5C  C061  F00C         	movff	_Pasos_fun+1,opt_Half_stepper@steps+1
  3744  007D60  C062  F00D         	movff	_Pasos_fun+2,opt_Half_stepper@steps+2
  3745  007D64  C063  F00E         	movff	_Pasos_fun+3,opt_Half_stepper@steps+3
  3746  007D68  C0DA  F00F         	movff	main@dir,opt_Half_stepper@direttion
  3747  007D6C  C0DB  F010         	movff	main@dir+1,opt_Half_stepper@direttion+1
  3748  007D70  EC02  F02E         	call	_opt_Half_stepper	;wreg free
  3749  007D74  EFCA  F039         	goto	l3789
  3750  007D78                     l4075:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;Practica8_15_03_19.c: 306:                 valor=0;
  3754  007D78  0E00               	movlw	0
  3755  007D7A  6F64               	movwf	_valor& (0+255),b
  3756  007D7C  0E00               	movlw	0
  3757  007D7E  6F65               	movwf	(_valor+1)& (0+255),b
  3758  007D80  0E00               	movlw	0
  3759  007D82  6F66               	movwf	(_valor+2)& (0+255),b
  3760  007D84  0E00               	movlw	0
  3761  007D86  6F67               	movwf	(_valor+3)& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;Practica8_15_03_19.c: 307:                 Lcd_Cmd(1);
  3765  007D88  0E01               	movlw	1
  3766  007D8A  EC8F  F02F         	call	_Lcd_Cmd
  3767                           
  3768                           ;Practica8_15_03_19.c: 308:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3769  007D8E  0E02               	movlw	2
  3770  007D90  6E5A               	movwf	(??_main+1)& (0+255),c
  3771  007D92  0E86               	movlw	134
  3772  007D94  6E59               	movwf	??_main& (0+255),c
  3773  007D96  0E99               	movlw	153
  3774  007D98                     u2997:
  3775  007D98  2EE8               	decfsz	wreg,f,c
  3776  007D9A  D7FE               	bra	u2997
  3777  007D9C  2E59               	decfsz	??_main& (0+255),f,c
  3778  007D9E  D7FC               	bra	u2997
  3779  007DA0  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3780  007DA2  D7FA               	bra	u2997
  3781  007DA4  F000               	nop	
  3782                           
  3783                           ;Practica8_15_03_19.c: 309:                 Lcd_Out(1,1,"DATO");
  3784  007DA6  0E01               	movlw	1
  3785  007DA8  6E04               	movwf	Lcd_Out@x,c
  3786  007DAA  0EF2               	movlw	low STR_81
  3787  007DAC  6E05               	movwf	Lcd_Out@buffer,c
  3788  007DAE  0E7F               	movlw	high STR_81
  3789  007DB0  6E06               	movwf	Lcd_Out@buffer+1,c
  3790  007DB2  0E01               	movlw	1
  3791  007DB4  EC86  F02B         	call	_Lcd_Out
  3792                           
  3793                           ;Practica8_15_03_19.c: 310:                 Lcd_Out(2,1,"INCORRECTO");
  3794  007DB8  0E01               	movlw	1
  3795  007DBA  6E04               	movwf	Lcd_Out@x,c
  3796  007DBC  0E57               	movlw	low STR_82
  3797  007DBE  6E05               	movwf	Lcd_Out@buffer,c
  3798  007DC0  0E7F               	movlw	high STR_82
  3799  007DC2  6E06               	movwf	Lcd_Out@buffer+1,c
  3800  007DC4  0E02               	movlw	2
  3801  007DC6  EC86  F02B         	call	_Lcd_Out
  3802                           
  3803                           ;Practica8_15_03_19.c: 311:                 _delay((unsigned long)((1000)*(12000000/4000
      +                          .0)));
  3804  007DCA  0E10               	movlw	16
  3805  007DCC  6E5A               	movwf	(??_main+1)& (0+255),c
  3806  007DCE  0E39               	movlw	57
  3807  007DD0  6E59               	movwf	??_main& (0+255),c
  3808  007DD2  0E0E               	movlw	14
  3809  007DD4                     u3007:
  3810  007DD4  2EE8               	decfsz	wreg,f,c
  3811  007DD6  D7FE               	bra	u3007
  3812  007DD8  2E59               	decfsz	??_main& (0+255),f,c
  3813  007DDA  D7FC               	bra	u3007
  3814  007DDC  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3815  007DDE  D7FA               	bra	u3007
  3816                           
  3817                           ;Practica8_15_03_19.c: 312:                 Lcd_Cmd(1);
  3818  007DE0  0E01               	movlw	1
  3819  007DE2  EC8F  F02F         	call	_Lcd_Cmd
  3820                           
  3821                           ;Practica8_15_03_19.c: 313:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3822  007DE6  0E02               	movlw	2
  3823  007DE8  6E5A               	movwf	(??_main+1)& (0+255),c
  3824  007DEA  0E86               	movlw	134
  3825  007DEC  6E59               	movwf	??_main& (0+255),c
  3826  007DEE  0E99               	movlw	153
  3827  007DF0                     u3017:
  3828  007DF0  2EE8               	decfsz	wreg,f,c
  3829  007DF2  D7FE               	bra	u3017
  3830  007DF4  2E59               	decfsz	??_main& (0+255),f,c
  3831  007DF6  D7FC               	bra	u3017
  3832  007DF8  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3833  007DFA  D7FA               	bra	u3017
  3834  007DFC  F000               	nop	
  3835                           
  3836                           ;Practica8_15_03_19.c: 314:                 Lcd_Out(1,1,"Selecciona de");
  3837  007DFE  0E01               	movlw	1
  3838  007E00  6E04               	movwf	Lcd_Out@x,c
  3839  007E02  0ED4               	movlw	low STR_83
  3840  007E04  6E05               	movwf	Lcd_Out@buffer,c
  3841  007E06  0E7E               	movlw	high STR_83
  3842  007E08  6E06               	movwf	Lcd_Out@buffer+1,c
  3843  007E0A  0E01               	movlw	1
  3844  007E0C  EC86  F02B         	call	_Lcd_Out
  3845                           
  3846                           ;Practica8_15_03_19.c: 315:                 Lcd_Out(2,1,"nuevo X,P");
  3847  007E10  0E01               	movlw	1
  3848  007E12  6E04               	movwf	Lcd_Out@x,c
  3849  007E14  0EB9               	movlw	low STR_84
  3850  007E16  6E05               	movwf	Lcd_Out@buffer,c
  3851  007E18  0E7F               	movlw	high STR_84
  3852  007E1A  6E06               	movwf	Lcd_Out@buffer+1,c
  3853  007E1C  0E02               	movlw	2
  3854  007E1E  EC86  F02B         	call	_Lcd_Out
  3855                           
  3856                           ;Practica8_15_03_19.c: 316:                 _delay((unsigned long)((2000)*(12000000/4000
      +                          .0)));
  3857  007E22  0E1F               	movlw	31
  3858  007E24  6E5A               	movwf	(??_main+1)& (0+255),c
  3859  007E26  0E71               	movlw	113
  3860  007E28  6E59               	movwf	??_main& (0+255),c
  3861  007E2A  0E1E               	movlw	30
  3862  007E2C                     u3027:
  3863  007E2C  2EE8               	decfsz	wreg,f,c
  3864  007E2E  D7FE               	bra	u3027
  3865  007E30  2E59               	decfsz	??_main& (0+255),f,c
  3866  007E32  D7FC               	bra	u3027
  3867  007E34  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3868  007E36  D7FA               	bra	u3027
  3869  007E38  D000               	nop2	
  3870                           
  3871                           ;Practica8_15_03_19.c: 317:                 Lcd_Cmd(1);
  3872  007E3A  0E01               	movlw	1
  3873  007E3C  EC8F  F02F         	call	_Lcd_Cmd
  3874                           
  3875                           ;Practica8_15_03_19.c: 318:                 _delay((unsigned long)((100)*(12000000/4000.
      +                          0)));
  3876  007E40  0E02               	movlw	2
  3877  007E42  6E5A               	movwf	(??_main+1)& (0+255),c
  3878  007E44  0E86               	movlw	134
  3879  007E46  6E59               	movwf	??_main& (0+255),c
  3880  007E48  0E99               	movlw	153
  3881  007E4A                     u3037:
  3882  007E4A  2EE8               	decfsz	wreg,f,c
  3883  007E4C  D7FE               	bra	u3037
  3884  007E4E  2E59               	decfsz	??_main& (0+255),f,c
  3885  007E50  D7FC               	bra	u3037
  3886  007E52  2E5A               	decfsz	(??_main+1)& (0+255),f,c
  3887  007E54  D7FA               	bra	u3037
  3888  007E56  F000               	nop	
  3889                           
  3890                           ;Practica8_15_03_19.c: 319:                 break;
  3891  007E58  EF72  F036         	goto	l3585
  3892  007E5C                     l4103:
  3893  007E5C  0100               	movlb	0	; () banked
  3894  007E5E  51D9               	movf	main@caracter& (0+255),w,b
  3895  007E60  6E59               	movwf	??_main& (0+255),c
  3896  007E62  6A5A               	clrf	(??_main+1)& (0+255),c
  3897                           
  3898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3899                           ; Switch size 1, requested type "simple"
  3900                           ; Number of cases is 1, Range of values is 0 to 0
  3901                           ; switch strategies available:
  3902                           ; Name         Instructions Cycles
  3903                           ; simple_byte            4     3 (average)
  3904                           ;	Chosen strategy is simple_byte
  3905  007E64  505A               	movf	??_main+1,w,c
  3906  007E66  0A00               	xorlw	0	; case 0
  3907  007E68  A4D8               	btfss	status,2,c
  3908  007E6A  D786               	goto	l4075
  3909                           
  3910                           ; BSR set to: 0
  3911                           ; Switch size 1, requested type "simple"
  3912                           ; Number of cases is 3, Range of values is 65 to 67
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte           10     6 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917  007E6C  5059               	movf	??_main,w,c
  3918  007E6E  0A41               	xorlw	65	; case 65
  3919  007E70  B4D8               	btfsc	status,2,c
  3920  007E72  EF54  F037         	goto	l3649
  3921  007E76  0A03               	xorlw	3	; case 66
  3922  007E78  B4D8               	btfsc	status,2,c
  3923  007E7A  EFCD  F039         	goto	l3791
  3924  007E7E  0A01               	xorlw	1	; case 67
  3925  007E80  B4D8               	btfsc	status,2,c
  3926  007E82  D502               	goto	l3933
  3927  007E84  D779               	goto	l4075
  3928  007E86                     __end_of_main:
  3929                           	opt callstack 0
  3930                           
  3931 ;; *************** function _teclado *****************
  3932 ;; Defined at:
  3933 ;;		line 324 in file "Practica8_15_03_19.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text1
  3961  006610                     __ptext1:
  3962                           	opt callstack 0
  3963  006610                     _teclado:
  3964                           	opt callstack 30
  3965                           
  3966                           ;Practica8_15_03_19.c: 325:     valor=0;
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;incstack = 0
  3970  006610  0E00               	movlw	0
  3971  006612  0100               	movlb	0	; () banked
  3972  006614  6F64               	movwf	_valor& (0+255),b
  3973  006616  0E00               	movlw	0
  3974  006618  6F65               	movwf	(_valor+1)& (0+255),b
  3975  00661A  0E00               	movlw	0
  3976  00661C  6F66               	movwf	(_valor+2)& (0+255),b
  3977  00661E  0E00               	movlw	0
  3978  006620  6F67               	movwf	(_valor+3)& (0+255),b
  3979                           
  3980                           ;Practica8_15_03_19.c: 326:     PORTB=0xF0;
  3981  006622  0EF0               	movlw	240
  3982  006624  6E81               	movwf	3969,c	;volatile
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;Practica8_15_03_19.c: 327:     if(PORTB != 0xF0){
  3986  006626  0EF0               	movlw	240
  3987  006628  1881               	xorwf	3969,w,c	;volatile
  3988  00662A  B4D8               	btfsc	status,2,c
  3989  00662C  D0A8               	goto	l210
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;Practica8_15_03_19.c: 328:         PORTB=0xFE;
  3993  00662E  0EFE               	movlw	254
  3994  006630  6E81               	movwf	3969,c	;volatile
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;Practica8_15_03_19.c: 329:             if(PORTBbits.RB4==0){valor = '*';}
  3998  006632  B881               	btfsc	3969,4,c	;volatile
  3999  006634  D008               	goto	l3457
  4000                           
  4001                           ; BSR set to: 0
  4002  006636  0E2A               	movlw	42
  4003  006638  6F64               	movwf	_valor& (0+255),b
  4004  00663A  0E00               	movlw	0
  4005  00663C  6F65               	movwf	(_valor+1)& (0+255),b
  4006  00663E  0E00               	movlw	0
  4007  006640  6F66               	movwf	(_valor+2)& (0+255),b
  4008  006642  0E00               	movlw	0
  4009  006644  6F67               	movwf	(_valor+3)& (0+255),b
  4010  006646                     l3457:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;Practica8_15_03_19.c: 330:             if(PORTBbits.RB5==0){valor = '0';}
  4014  006646  BA81               	btfsc	3969,5,c	;volatile
  4015  006648  D008               	goto	l3461
  4016                           
  4017                           ; BSR set to: 0
  4018  00664A  0E30               	movlw	48
  4019  00664C  6F64               	movwf	_valor& (0+255),b
  4020  00664E  0E00               	movlw	0
  4021  006650  6F65               	movwf	(_valor+1)& (0+255),b
  4022  006652  0E00               	movlw	0
  4023  006654  6F66               	movwf	(_valor+2)& (0+255),b
  4024  006656  0E00               	movlw	0
  4025  006658  6F67               	movwf	(_valor+3)& (0+255),b
  4026  00665A                     l3461:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;Practica8_15_03_19.c: 331:             if(PORTBbits.RB6==0){valor = '#';}
  4030  00665A  BC81               	btfsc	3969,6,c	;volatile
  4031  00665C  D008               	goto	l3465
  4032                           
  4033                           ; BSR set to: 0
  4034  00665E  0E23               	movlw	35
  4035  006660  6F64               	movwf	_valor& (0+255),b
  4036  006662  0E00               	movlw	0
  4037  006664  6F65               	movwf	(_valor+1)& (0+255),b
  4038  006666  0E00               	movlw	0
  4039  006668  6F66               	movwf	(_valor+2)& (0+255),b
  4040  00666A  0E00               	movlw	0
  4041  00666C  6F67               	movwf	(_valor+3)& (0+255),b
  4042  00666E                     l3465:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;Practica8_15_03_19.c: 332:             if(PORTBbits.RB7==0){valor = 'D';}
  4046  00666E  BE81               	btfsc	3969,7,c	;volatile
  4047  006670  D008               	goto	l214
  4048                           
  4049                           ; BSR set to: 0
  4050  006672  0E44               	movlw	68
  4051  006674  6F64               	movwf	_valor& (0+255),b
  4052  006676  0E00               	movlw	0
  4053  006678  6F65               	movwf	(_valor+1)& (0+255),b
  4054  00667A  0E00               	movlw	0
  4055  00667C  6F66               	movwf	(_valor+2)& (0+255),b
  4056  00667E  0E00               	movlw	0
  4057  006680  6F67               	movwf	(_valor+3)& (0+255),b
  4058  006682                     l214:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;Practica8_15_03_19.c: 333:         PORTB=0xFD;
  4062  006682  0EFD               	movlw	253
  4063  006684  6E81               	movwf	3969,c	;volatile
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;Practica8_15_03_19.c: 334:             if(PORTBbits.RB4==0){valor = '7';}
  4067  006686  B881               	btfsc	3969,4,c	;volatile
  4068  006688  D008               	goto	l3473
  4069                           
  4070                           ; BSR set to: 0
  4071  00668A  0E37               	movlw	55
  4072  00668C  6F64               	movwf	_valor& (0+255),b
  4073  00668E  0E00               	movlw	0
  4074  006690  6F65               	movwf	(_valor+1)& (0+255),b
  4075  006692  0E00               	movlw	0
  4076  006694  6F66               	movwf	(_valor+2)& (0+255),b
  4077  006696  0E00               	movlw	0
  4078  006698  6F67               	movwf	(_valor+3)& (0+255),b
  4079  00669A                     l3473:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;Practica8_15_03_19.c: 335:             if(PORTBbits.RB5==0){valor = '8';}
  4083  00669A  BA81               	btfsc	3969,5,c	;volatile
  4084  00669C  D008               	goto	l3477
  4085                           
  4086                           ; BSR set to: 0
  4087  00669E  0E38               	movlw	56
  4088  0066A0  6F64               	movwf	_valor& (0+255),b
  4089  0066A2  0E00               	movlw	0
  4090  0066A4  6F65               	movwf	(_valor+1)& (0+255),b
  4091  0066A6  0E00               	movlw	0
  4092  0066A8  6F66               	movwf	(_valor+2)& (0+255),b
  4093  0066AA  0E00               	movlw	0
  4094  0066AC  6F67               	movwf	(_valor+3)& (0+255),b
  4095  0066AE                     l3477:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;Practica8_15_03_19.c: 336:             if(PORTBbits.RB6==0){valor = '9';}
  4099  0066AE  BC81               	btfsc	3969,6,c	;volatile
  4100  0066B0  D008               	goto	l3481
  4101                           
  4102                           ; BSR set to: 0
  4103  0066B2  0E39               	movlw	57
  4104  0066B4  6F64               	movwf	_valor& (0+255),b
  4105  0066B6  0E00               	movlw	0
  4106  0066B8  6F65               	movwf	(_valor+1)& (0+255),b
  4107  0066BA  0E00               	movlw	0
  4108  0066BC  6F66               	movwf	(_valor+2)& (0+255),b
  4109  0066BE  0E00               	movlw	0
  4110  0066C0  6F67               	movwf	(_valor+3)& (0+255),b
  4111  0066C2                     l3481:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;Practica8_15_03_19.c: 337:             if(PORTBbits.RB7==0){valor = 'C';}
  4115  0066C2  BE81               	btfsc	3969,7,c	;volatile
  4116  0066C4  D008               	goto	l218
  4117                           
  4118                           ; BSR set to: 0
  4119  0066C6  0E43               	movlw	67
  4120  0066C8  6F64               	movwf	_valor& (0+255),b
  4121  0066CA  0E00               	movlw	0
  4122  0066CC  6F65               	movwf	(_valor+1)& (0+255),b
  4123  0066CE  0E00               	movlw	0
  4124  0066D0  6F66               	movwf	(_valor+2)& (0+255),b
  4125  0066D2  0E00               	movlw	0
  4126  0066D4  6F67               	movwf	(_valor+3)& (0+255),b
  4127  0066D6                     l218:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;Practica8_15_03_19.c: 338:         PORTB=0xFB;
  4131  0066D6  0EFB               	movlw	251
  4132  0066D8  6E81               	movwf	3969,c	;volatile
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;Practica8_15_03_19.c: 339:             if(PORTBbits.RB4==0){valor = '4';}
  4136  0066DA  B881               	btfsc	3969,4,c	;volatile
  4137  0066DC  D008               	goto	l3489
  4138                           
  4139                           ; BSR set to: 0
  4140  0066DE  0E34               	movlw	52
  4141  0066E0  6F64               	movwf	_valor& (0+255),b
  4142  0066E2  0E00               	movlw	0
  4143  0066E4  6F65               	movwf	(_valor+1)& (0+255),b
  4144  0066E6  0E00               	movlw	0
  4145  0066E8  6F66               	movwf	(_valor+2)& (0+255),b
  4146  0066EA  0E00               	movlw	0
  4147  0066EC  6F67               	movwf	(_valor+3)& (0+255),b
  4148  0066EE                     l3489:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;Practica8_15_03_19.c: 340:             if(PORTBbits.RB5==0){valor = '5';}
  4152  0066EE  BA81               	btfsc	3969,5,c	;volatile
  4153  0066F0  D008               	goto	l3493
  4154                           
  4155                           ; BSR set to: 0
  4156  0066F2  0E35               	movlw	53
  4157  0066F4  6F64               	movwf	_valor& (0+255),b
  4158  0066F6  0E00               	movlw	0
  4159  0066F8  6F65               	movwf	(_valor+1)& (0+255),b
  4160  0066FA  0E00               	movlw	0
  4161  0066FC  6F66               	movwf	(_valor+2)& (0+255),b
  4162  0066FE  0E00               	movlw	0
  4163  006700  6F67               	movwf	(_valor+3)& (0+255),b
  4164  006702                     l3493:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;Practica8_15_03_19.c: 341:             if(PORTBbits.RB6==0){valor = '6';}
  4168  006702  BC81               	btfsc	3969,6,c	;volatile
  4169  006704  D008               	goto	l3497
  4170                           
  4171                           ; BSR set to: 0
  4172  006706  0E36               	movlw	54
  4173  006708  6F64               	movwf	_valor& (0+255),b
  4174  00670A  0E00               	movlw	0
  4175  00670C  6F65               	movwf	(_valor+1)& (0+255),b
  4176  00670E  0E00               	movlw	0
  4177  006710  6F66               	movwf	(_valor+2)& (0+255),b
  4178  006712  0E00               	movlw	0
  4179  006714  6F67               	movwf	(_valor+3)& (0+255),b
  4180  006716                     l3497:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;Practica8_15_03_19.c: 342:             if(PORTBbits.RB7==0){valor = 'B';}
  4184  006716  BE81               	btfsc	3969,7,c	;volatile
  4185  006718  D008               	goto	l222
  4186                           
  4187                           ; BSR set to: 0
  4188  00671A  0E42               	movlw	66
  4189  00671C  6F64               	movwf	_valor& (0+255),b
  4190  00671E  0E00               	movlw	0
  4191  006720  6F65               	movwf	(_valor+1)& (0+255),b
  4192  006722  0E00               	movlw	0
  4193  006724  6F66               	movwf	(_valor+2)& (0+255),b
  4194  006726  0E00               	movlw	0
  4195  006728  6F67               	movwf	(_valor+3)& (0+255),b
  4196  00672A                     l222:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;Practica8_15_03_19.c: 343:         PORTB=0xF7;
  4200  00672A  0EF7               	movlw	247
  4201  00672C  6E81               	movwf	3969,c	;volatile
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;Practica8_15_03_19.c: 344:             if(PORTBbits.RB4==0){valor = '1';}
  4205  00672E  B881               	btfsc	3969,4,c	;volatile
  4206  006730  D008               	goto	l3505
  4207                           
  4208                           ; BSR set to: 0
  4209  006732  0E31               	movlw	49
  4210  006734  6F64               	movwf	_valor& (0+255),b
  4211  006736  0E00               	movlw	0
  4212  006738  6F65               	movwf	(_valor+1)& (0+255),b
  4213  00673A  0E00               	movlw	0
  4214  00673C  6F66               	movwf	(_valor+2)& (0+255),b
  4215  00673E  0E00               	movlw	0
  4216  006740  6F67               	movwf	(_valor+3)& (0+255),b
  4217  006742                     l3505:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;Practica8_15_03_19.c: 345:             if(PORTBbits.RB5==0){valor = '2';}
  4221  006742  BA81               	btfsc	3969,5,c	;volatile
  4222  006744  D008               	goto	l3509
  4223                           
  4224                           ; BSR set to: 0
  4225  006746  0E32               	movlw	50
  4226  006748  6F64               	movwf	_valor& (0+255),b
  4227  00674A  0E00               	movlw	0
  4228  00674C  6F65               	movwf	(_valor+1)& (0+255),b
  4229  00674E  0E00               	movlw	0
  4230  006750  6F66               	movwf	(_valor+2)& (0+255),b
  4231  006752  0E00               	movlw	0
  4232  006754  6F67               	movwf	(_valor+3)& (0+255),b
  4233  006756                     l3509:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;Practica8_15_03_19.c: 346:             if(PORTBbits.RB6==0){valor = '3';}
  4237  006756  BC81               	btfsc	3969,6,c	;volatile
  4238  006758  D008               	goto	l3513
  4239                           
  4240                           ; BSR set to: 0
  4241  00675A  0E33               	movlw	51
  4242  00675C  6F64               	movwf	_valor& (0+255),b
  4243  00675E  0E00               	movlw	0
  4244  006760  6F65               	movwf	(_valor+1)& (0+255),b
  4245  006762  0E00               	movlw	0
  4246  006764  6F66               	movwf	(_valor+2)& (0+255),b
  4247  006766  0E00               	movlw	0
  4248  006768  6F67               	movwf	(_valor+3)& (0+255),b
  4249  00676A                     l3513:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;Practica8_15_03_19.c: 347:             if(PORTBbits.RB7==0){valor = 'A';}
  4253  00676A  BE81               	btfsc	3969,7,c	;volatile
  4254  00676C  D008               	goto	l210
  4255                           
  4256                           ; BSR set to: 0
  4257  00676E  0E41               	movlw	65
  4258  006770  6F64               	movwf	_valor& (0+255),b
  4259  006772  0E00               	movlw	0
  4260  006774  6F65               	movwf	(_valor+1)& (0+255),b
  4261  006776  0E00               	movlw	0
  4262  006778  6F66               	movwf	(_valor+2)& (0+255),b
  4263  00677A  0E00               	movlw	0
  4264  00677C  6F67               	movwf	(_valor+3)& (0+255),b
  4265  00677E                     l210:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;Practica8_15_03_19.c: 349:     LATB = 0xF0;
  4269  00677E  0EF0               	movlw	240
  4270  006780  6E8A               	movwf	3978,c	;volatile
  4271  006782                     l3517:
  4272  006782  0EF0               	movlw	240
  4273  006784  1881               	xorwf	3969,w,c	;volatile
  4274  006786  B4D8               	btfsc	status,2,c
  4275  006788  0012               	return	
  4276  00678A  D7FB               	goto	l3517
  4277  00678C                     __end_of_teclado:
  4278                           	opt callstack 0
  4279                           
  4280 ;; *************** function _sprintf *****************
  4281 ;; Defined at:
  4282 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4285 ;;		 -> palabra2(17), palabra1(17), palabra(17), 
  4286 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4287 ;;		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
  4288 ;;		 -> STR_33(4), STR_26(4), STR_17(3), 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  f               6   12[BANK0 ] struct _IO_FILE
  4291 ;;  ap              2   10[BANK0 ] PTR void [1]
  4292 ;;		 -> ?_sprintf(2), 
  4293 ;;  ret             2    0        int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    0[BANK0 ] int 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4303 ;;      Params:         0       8       0       0       0       0       0       0       0
  4304 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4306 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4307 ;;Total ram usage:       18 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    7
  4310 ;; This function calls:
  4311 ;;		_vfprintf
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text2
  4318  00559E                     __ptext2:
  4319                           	opt callstack 0
  4320  00559E                     _sprintf:
  4321                           	opt callstack 23
  4322                           
  4323                           ;incstack = 0
  4324  00559E  0EC9               	movlw	low (?_sprintf+4)
  4325  0055A0  0100               	movlb	0	; () banked
  4326  0055A2  6FCF               	movwf	sprintf@ap& (0+255),b
  4327  0055A4  0E00               	movlw	high (?_sprintf+4)
  4328  0055A6  6FD0               	movwf	(sprintf@ap+1)& (0+255),b
  4329  0055A8  C0C5  F0D1         	movff	sprintf@s,sprintf@f
  4330  0055AC  C0C6  F0D2         	movff	sprintf@s+1,sprintf@f+1
  4331                           
  4332                           ; BSR set to: 0
  4333  0055B0  0E00               	movlw	0
  4334  0055B2  6FD4               	movwf	(sprintf@f+3)& (0+255),b
  4335  0055B4  0E00               	movlw	0
  4336  0055B6  6FD3               	movwf	(sprintf@f+2)& (0+255),b
  4337                           
  4338                           ; BSR set to: 0
  4339  0055B8  0E00               	movlw	0
  4340  0055BA  6FD6               	movwf	(sprintf@f+5)& (0+255),b
  4341  0055BC  0E00               	movlw	0
  4342  0055BE  6FD5               	movwf	(sprintf@f+4)& (0+255),b
  4343                           
  4344                           ; BSR set to: 0
  4345  0055C0  0ED1               	movlw	low sprintf@f
  4346  0055C2  6E51               	movwf	vfprintf@fp,c
  4347  0055C4  0E00               	movlw	high sprintf@f
  4348  0055C6  6E52               	movwf	vfprintf@fp+1,c
  4349  0055C8  C0C7  F053         	movff	sprintf@fmt,vfprintf@fmt
  4350  0055CC  C0C8  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4351  0055D0  0ECF               	movlw	low sprintf@ap
  4352  0055D2  6E55               	movwf	vfprintf@ap,c
  4353  0055D4  0E00               	movlw	high sprintf@ap
  4354  0055D6  6E56               	movwf	vfprintf@ap+1,c
  4355  0055D8  EC23  F02B         	call	_vfprintf	;wreg free
  4356  0055DC  0100               	movlb	0	; () banked
  4357  0055DE  51D3               	movf	(sprintf@f+2)& (0+255),w,b
  4358  0055E0  25C5               	addwf	sprintf@s& (0+255),w,b
  4359  0055E2  6ED9               	movwf	fsr2l,c
  4360  0055E4  51D4               	movf	(sprintf@f+3)& (0+255),w,b
  4361  0055E6  21C6               	addwfc	(sprintf@s+1)& (0+255),w,b
  4362  0055E8  6EDA               	movwf	fsr2h,c
  4363  0055EA  0E00               	movlw	0
  4364  0055EC  6EDF               	movwf	indf2,c
  4365                           
  4366                           ; BSR set to: 0
  4367  0055EE  0012               	return		;funcret
  4368  0055F0                     __end_of_sprintf:
  4369                           	opt callstack 0
  4370                           
  4371 ;; *************** function _vfprintf *****************
  4372 ;; Defined at:
  4373 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  4376 ;;		 -> sprintf@f(6), 
  4377 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  4378 ;;		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
  4379 ;;		 -> STR_33(4), STR_26(4), STR_17(3), 
  4380 ;;  ap              2   84[COMRAM] PTR PTR void 
  4381 ;;		 -> sprintf@ap(2), 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  4384 ;;		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
  4385 ;;		 -> STR_33(4), STR_26(4), STR_17(3), 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2   80[COMRAM] int 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4395 ;;      Params:         6       0       0       0       0       0       0       0       0
  4396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4398 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4399 ;;Total ram usage:        8 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    6
  4402 ;; This function calls:
  4403 ;;		_vfpfcnvrt
  4404 ;; This function is called by:
  4405 ;;		_sprintf
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text3
  4410  005646                     __ptext3:
  4411                           	opt callstack 0
  4412  005646                     _vfprintf:
  4413                           	opt callstack 23
  4414                           
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;incstack = 0
  4419  005646  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  4420  00564A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4421                           
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4423  00564E  0E00               	movlw	0
  4424  005650  0100               	movlb	0	; () banked
  4425  005652  6F6D               	movwf	(_nout+1)& (0+255),b
  4426  005654  0E00               	movlw	0
  4427  005656  6F6C               	movwf	_nout& (0+255),b
  4428                           
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4430  005658  D013               	goto	l3259
  4431  00565A                     l3257:
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4435  00565A  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4436  00565E  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4437  005662  0E57               	movlw	low vfprintf@cfmt
  4438  005664  6E42               	movwf	vfpfcnvrt@fmt,c
  4439  005666  0E00               	movlw	high vfprintf@cfmt
  4440  005668  6E43               	movwf	vfpfcnvrt@fmt+1,c
  4441  00566A  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4442  00566E  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4443  005672  ECC6  F033         	call	_vfpfcnvrt	;wreg free
  4444  005676  5040               	movf	?_vfpfcnvrt,w,c
  4445  005678  0100               	movlb	0	; () banked
  4446  00567A  276C               	addwf	_nout& (0+255),f,b
  4447  00567C  5041               	movf	?_vfpfcnvrt+1,w,c
  4448  00567E  236D               	addwfc	(_nout+1)& (0+255),f,b
  4449  005680                     l3259:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4453  005680  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  4454  005684  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4455  005688                     	if	0	;tblptru may be non-zero
  4456  005688                     	endif
  4457  005688                     	if	0	;tblptru may be non-zero
  4458  005688                     	endif
  4459  005688  0008               	tblrd		*
  4460  00568A  50F5               	movf	tablat,w,c
  4461  00568C  0900               	iorlw	0
  4462  00568E  A4D8               	btfss	status,2,c
  4463  005690  D7E4               	goto	l3257
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4467  005692  C06C  F051         	movff	_nout,?_vfprintf
  4468  005696  C06D  F052         	movff	_nout+1,?_vfprintf+1
  4469                           
  4470                           ; BSR set to: 0
  4471  00569A  0012               	return		;funcret
  4472  00569C                     __end_of_vfprintf:
  4473                           	opt callstack 0
  4474                           
  4475 ;; *************** function _vfpfcnvrt *****************
  4476 ;; Defined at:
  4477 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4480 ;;		 -> sprintf@f(6), 
  4481 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4482 ;;		 -> vfprintf@cfmt(2), 
  4483 ;;  ap              2   67[COMRAM] PTR PTR void 
  4484 ;;		 -> sprintf@ap(2), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  ll              8   71[COMRAM] long long 
  4487 ;;  llu             8    0        unsigned long long 
  4488 ;;  f               4    0        unsigned long long 
  4489 ;;  vp              3    0        PTR void 
  4490 ;;  ct              3    0        unsigned char [3]
  4491 ;;  cp              3    0        PTR unsigned char 
  4492 ;;  i               2    0        int 
  4493 ;;  done            2    0        int 
  4494 ;;  c               1   79[COMRAM] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2   63[COMRAM] int 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4504 ;;      Params:         6       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4507 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:       17 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    5
  4511 ;; This function calls:
  4512 ;;		_ctoa
  4513 ;;		_dtoa
  4514 ;;		_fputc
  4515 ;; This function is called by:
  4516 ;;		_vfprintf
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text4
  4521  00678C                     __ptext4:
  4522                           	opt callstack 0
  4523  00678C                     _vfpfcnvrt:
  4524                           	opt callstack 23
  4525                           
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;incstack = 0
  4530  00678C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4531  006790  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4532  006794  CFDE FFF6          	movff	postinc2,tblptrl
  4533  006798  CFDD FFF7          	movff	postdec2,tblptrh
  4534  00679C                     	if	0	;tblptru may be non-zero
  4535  00679C                     	endif
  4536  00679C                     	if	0	;tblptru may be non-zero
  4537  00679C                     	endif
  4538  00679C  0008               	tblrd		*
  4539  00679E  50F5               	movf	tablat,w,c
  4540  0067A0  0A25               	xorlw	37
  4541  0067A2  A4D8               	btfss	status,2,c
  4542  0067A4  D0CD               	goto	l2907
  4543                           
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4545  0067A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4546  0067AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4547  0067AE  2ADE               	incf	postinc2,f,c
  4548  0067B0  0E00               	movlw	0
  4549  0067B2  22DD               	addwfc	postdec2,f,c
  4550                           
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4552  0067B4  0E00               	movlw	0
  4553  0067B6  0100               	movlb	0	; () banked
  4554  0067B8  6F6F               	movwf	(_width+1)& (0+255),b
  4555  0067BA  0E00               	movlw	0
  4556  0067BC  6F6E               	movwf	_width& (0+255),b
  4557  0067BE  C06E  F05D         	movff	_width,_flags
  4558  0067C2  C06F  F05E         	movff	_width+1,_flags+1
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4562  0067C6  6970               	setf	_prec& (0+255),b
  4563  0067C8  6971               	setf	(_prec+1)& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4567  0067CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4568  0067CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4569  0067D2  CFDE FFF6          	movff	postinc2,tblptrl
  4570  0067D6  CFDD FFF7          	movff	postdec2,tblptrh
  4571  0067DA                     	if	0	;tblptru may be non-zero
  4572  0067DA                     	endif
  4573  0067DA                     	if	0	;tblptru may be non-zero
  4574  0067DA                     	endif
  4575  0067DA  0008               	tblrd		*
  4576  0067DC  50F5               	movf	tablat,w,c
  4577  0067DE  0A63               	xorlw	99
  4578  0067E0  A4D8               	btfss	status,2,c
  4579  0067E2  D026               	goto	l2881
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4583  0067E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4584  0067E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4585  0067EC  2ADE               	incf	postinc2,f,c
  4586  0067EE  0E00               	movlw	0
  4587  0067F0  22DD               	addwfc	postdec2,f,c
  4588                           
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4590  0067F2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4591  0067F6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4592  0067FA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4593  0067FE  0E02               	movlw	2
  4594  006800  26DE               	addwf	postinc2,f,c
  4595  006802  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4596  006806  0E00               	movlw	0
  4597  006808  22DD               	addwfc	postdec2,f,c
  4598  00680A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4599  00680E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4600  006812  50DF               	movf	indf2,w,c
  4601  006814  6E50               	movwf	vfpfcnvrt@c,c
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4605  006816  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4606  00681A  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4607  00681E  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4608  006822  ECA8  F02A         	call	_ctoa	;wreg free
  4609  006826  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  4610  00682A  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4611  00682E  0012               	return	
  4612  006830                     l2881:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4616  006830  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4617  006834  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4618  006838  CFDE FFF6          	movff	postinc2,tblptrl
  4619  00683C  CFDD FFF7          	movff	postdec2,tblptrh
  4620  006840                     	if	0	;tblptru may be non-zero
  4621  006840                     	endif
  4622  006840                     	if	0	;tblptru may be non-zero
  4623  006840                     	endif
  4624  006840  0008               	tblrd		*
  4625  006842  50F5               	movf	tablat,w,c
  4626  006844  0A64               	xorlw	100
  4627  006846  B4D8               	btfsc	status,2,c
  4628  006848  D00D               	goto	u1690
  4629                           
  4630                           ; BSR set to: 0
  4631  00684A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4632  00684E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4633  006852  CFDE FFF6          	movff	postinc2,tblptrl
  4634  006856  CFDD FFF7          	movff	postdec2,tblptrh
  4635  00685A                     	if	0	;tblptru may be non-zero
  4636  00685A                     	endif
  4637  00685A                     	if	0	;tblptru may be non-zero
  4638  00685A                     	endif
  4639  00685A  0008               	tblrd		*
  4640  00685C  50F5               	movf	tablat,w,c
  4641  00685E  0A69               	xorlw	105
  4642  006860  A4D8               	btfss	status,2,c
  4643  006862  D03F               	goto	l2891
  4644  006864                     u1690:
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4648  006864  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4649  006868  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4650  00686C  2ADE               	incf	postinc2,f,c
  4651  00686E  0E00               	movlw	0
  4652  006870  22DD               	addwfc	postdec2,f,c
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4655  006872  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4656  006876  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4657  00687A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4658  00687E  0E02               	movlw	2
  4659  006880  26DE               	addwf	postinc2,f,c
  4660  006882  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4661  006886  0E00               	movlw	0
  4662  006888  22DD               	addwfc	postdec2,f,c
  4663  00688A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4664  00688E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4665  006892  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4666  006896  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4667  00689A  0E00               	movlw	0
  4668  00689C  BE49               	btfsc	vfpfcnvrt@ll+1,7,c
  4669  00689E  0EFF               	movlw	-1
  4670  0068A0  6E4A               	movwf	vfpfcnvrt@ll+2,c
  4671  0068A2  6E4B               	movwf	vfpfcnvrt@ll+3,c
  4672  0068A4  6E4C               	movwf	vfpfcnvrt@ll+4,c
  4673  0068A6  6E4D               	movwf	vfpfcnvrt@ll+5,c
  4674  0068A8  6E4E               	movwf	vfpfcnvrt@ll+6,c
  4675  0068AA  6E4F               	movwf	vfpfcnvrt@ll+7,c
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4679  0068AC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4680  0068B0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4681  0068B4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4682  0068B8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4683  0068BC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4684  0068C0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4685  0068C4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4686  0068C8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4687  0068CC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4688  0068D0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4689  0068D4  ECBA  F034         	call	_dtoa	;wreg free
  4690  0068D8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4691  0068DC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4692  0068E0  0012               	return	
  4693  0068E2                     l2891:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4697  0068E2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4698  0068E6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4699  0068EA  CFDE FFF6          	movff	postinc2,tblptrl
  4700  0068EE  CFDD FFF7          	movff	postdec2,tblptrh
  4701  0068F2                     	if	0	;tblptru may be non-zero
  4702  0068F2                     	endif
  4703  0068F2                     	if	0	;tblptru may be non-zero
  4704  0068F2                     	endif
  4705  0068F2  0008               	tblrd		*
  4706  0068F4  50F5               	movf	tablat,w,c
  4707  0068F6  0A25               	xorlw	37
  4708  0068F8  A4D8               	btfss	status,2,c
  4709  0068FA  D016               	goto	l2901
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4713  0068FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4714  006900  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4715  006904  2ADE               	incf	postinc2,f,c
  4716  006906  0E00               	movlw	0
  4717  006908  22DD               	addwfc	postdec2,f,c
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4721  00690A  0E00               	movlw	0
  4722  00690C  6E02               	movwf	fputc@c+1,c
  4723  00690E  0E25               	movlw	37
  4724  006910  6E01               	movwf	fputc@c,c
  4725  006912  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4726  006916  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4727  00691A  EC30  F02D         	call	_fputc	;wreg free
  4728  00691E                     l2897:
  4729                           
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4731  00691E  0E00               	movlw	0
  4732  006920  6E41               	movwf	?_vfpfcnvrt+1,c
  4733  006922  0E01               	movlw	1
  4734  006924  6E40               	movwf	?_vfpfcnvrt,c
  4735  006926  0012               	return	
  4736  006928                     l2901:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4740  006928  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4741  00692C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4742  006930  2ADE               	incf	postinc2,f,c
  4743  006932  0E00               	movlw	0
  4744  006934  22DD               	addwfc	postdec2,f,c
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4748  006936  0E00               	movlw	0
  4749  006938  6E41               	movwf	?_vfpfcnvrt+1,c
  4750  00693A  0E00               	movlw	0
  4751  00693C  6E40               	movwf	?_vfpfcnvrt,c
  4752  00693E  0012               	return	
  4753  006940                     l2907:
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4756  006940  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4757  006944  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4758  006948  CFDE FFF6          	movff	postinc2,tblptrl
  4759  00694C  CFDD FFF7          	movff	postdec2,tblptrh
  4760  006950                     	if	0	;tblptru may be non-zero
  4761  006950                     	endif
  4762  006950                     	if	0	;tblptru may be non-zero
  4763  006950                     	endif
  4764  006950  0008               	tblrd		*
  4765  006952  50F5               	movf	tablat,w,c
  4766  006954  6E01               	movwf	fputc@c,c
  4767  006956  6A02               	clrf	fputc@c+1,c
  4768  006958  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4769  00695C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4770  006960  EC30  F02D         	call	_fputc	;wreg free
  4771                           
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4773  006964  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4774  006968  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4775  00696C  2ADE               	incf	postinc2,f,c
  4776  00696E  0E00               	movlw	0
  4777  006970  22DD               	addwfc	postdec2,f,c
  4778  006972  D7D5               	goto	l2897
  4779  006974                     __end_of_vfpfcnvrt:
  4780                           	opt callstack 0
  4781                           
  4782 ;; *************** function _dtoa *****************
  4783 ;; Defined at:
  4784 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4787 ;;		 -> sprintf@f(6), 
  4788 ;;  d               8   29[COMRAM] long long 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  n               8   53[COMRAM] long long 
  4791 ;;  i               2   61[COMRAM] int 
  4792 ;;  s               2   51[COMRAM] int 
  4793 ;;  w               2   49[COMRAM] int 
  4794 ;;  p               2   47[COMRAM] int 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  2   27[COMRAM] int 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4804 ;;      Params:        10       0       0       0       0       0       0       0       0
  4805 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4806 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4807 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4808 ;;Total ram usage:       36 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    4
  4811 ;; This function calls:
  4812 ;;		___aodiv
  4813 ;;		___aomod
  4814 ;;		_abs
  4815 ;;		_pad
  4816 ;; This function is called by:
  4817 ;;		_vfpfcnvrt
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text5
  4822  006974                     __ptext5:
  4823                           	opt callstack 0
  4824  006974                     _dtoa:
  4825                           	opt callstack 23
  4826                           
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4828                           
  4829                           ;incstack = 0
  4830  006974  C01E  F036         	movff	dtoa@d,dtoa@n
  4831  006978  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4832  00697C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4833  006980  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4834  006984  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4835  006988  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4836  00698C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4837  006990  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4838                           
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4840  006994  AE3D               	btfss	dtoa@n+7,7,c
  4841  006996  D002               	goto	u1450
  4842  006998  0E01               	movlw	1
  4843  00699A  D001               	goto	u1460
  4844  00699C                     u1450:
  4845  00699C  0E00               	movlw	0
  4846  00699E                     u1460:
  4847  00699E  6E34               	movwf	dtoa@s,c
  4848  0069A0  6A35               	clrf	dtoa@s+1,c
  4849                           
  4850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4851  0069A2  5034               	movf	dtoa@s,w,c
  4852  0069A4  1035               	iorwf	dtoa@s+1,w,c
  4853  0069A6  B4D8               	btfsc	status,2,c
  4854  0069A8  D010               	goto	l2763
  4855                           
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4857  0069AA  1E3D               	comf	dtoa@n+7,f,c
  4858  0069AC  1E3C               	comf	dtoa@n+6,f,c
  4859  0069AE  1E3B               	comf	dtoa@n+5,f,c
  4860  0069B0  1E3A               	comf	dtoa@n+4,f,c
  4861  0069B2  1E39               	comf	dtoa@n+3,f,c
  4862  0069B4  1E38               	comf	dtoa@n+2,f,c
  4863  0069B6  1E37               	comf	dtoa@n+1,f,c
  4864  0069B8  6C36               	negf	dtoa@n,c
  4865  0069BA  0E00               	movlw	0
  4866  0069BC  2237               	addwfc	dtoa@n+1,f,c
  4867  0069BE  2238               	addwfc	dtoa@n+2,f,c
  4868  0069C0  2239               	addwfc	dtoa@n+3,f,c
  4869  0069C2  223A               	addwfc	dtoa@n+4,f,c
  4870  0069C4  223B               	addwfc	dtoa@n+5,f,c
  4871  0069C6  223C               	addwfc	dtoa@n+6,f,c
  4872  0069C8  223D               	addwfc	dtoa@n+7,f,c
  4873  0069CA                     l2763:
  4874                           
  4875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4876  0069CA  0100               	movlb	0	; () banked
  4877  0069CC  AF71               	btfss	(_prec+1)& (0+255),7,b
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4881  0069CE  925D               	bcf	_flags,1,c
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4885  0069D0  BF71               	btfsc	(_prec+1)& (0+255),7,b
  4886  0069D2  D005               	goto	u1490
  4887  0069D4  5171               	movf	(_prec+1)& (0+255),w,b
  4888  0069D6  E108               	bnz	l275
  4889  0069D8  0570               	decf	_prec& (0+255),w,b
  4890  0069DA  B0D8               	btfsc	status,0,c
  4891  0069DC  D005               	goto	l275
  4892  0069DE                     u1490:
  4893                           
  4894                           ; BSR set to: 0
  4895  0069DE  0E00               	movlw	0
  4896  0069E0  6E31               	movwf	dtoa@p+1,c
  4897  0069E2  0E01               	movlw	1
  4898  0069E4  6E30               	movwf	dtoa@p,c
  4899  0069E6  D004               	goto	l277
  4900  0069E8                     l275:
  4901                           
  4902                           ; BSR set to: 0
  4903  0069E8  C070  F030         	movff	_prec,dtoa@p
  4904  0069EC  C071  F031         	movff	_prec+1,dtoa@p+1
  4905  0069F0                     l277:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4909  0069F0  C06E  F032         	movff	_width,dtoa@w
  4910  0069F4  C06F  F033         	movff	_width+1,dtoa@w+1
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4914  0069F8  5034               	movf	dtoa@s,w,c
  4915  0069FA  1035               	iorwf	dtoa@s+1,w,c
  4916  0069FC  A4D8               	btfss	status,2,c
  4917  0069FE  D002               	goto	u1510
  4918                           
  4919                           ; BSR set to: 0
  4920  006A00  A45D               	btfss	_flags,2,c
  4921  006A02  D003               	goto	l2777
  4922  006A04                     u1510:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4926  006A04  0632               	decf	dtoa@w,f,c
  4927  006A06  A0D8               	btfss	status,0,c
  4928  006A08  0633               	decf	dtoa@w+1,f,c
  4929  006A0A                     l2777:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4933  006A0A  0E00               	movlw	0
  4934  006A0C  6E3F               	movwf	dtoa@i+1,c
  4935  006A0E  0E1F               	movlw	31
  4936  006A10  6E3E               	movwf	dtoa@i,c
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4940  006A12  0E00               	movlw	0
  4941  006A14  6F91               	movwf	(_dbuf+31)& (0+255),b
  4942                           
  4943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4944  006A16  D07C               	goto	l2791
  4945  006A18                     l2781:
  4946                           
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4948  006A18  063E               	decf	dtoa@i,f,c
  4949  006A1A  A0D8               	btfss	status,0,c
  4950  006A1C  063F               	decf	dtoa@i+1,f,c
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4953  006A1E  0E72               	movlw	low _dbuf
  4954  006A20  243E               	addwf	dtoa@i,w,c
  4955  006A22  6ED9               	movwf	fsr2l,c
  4956  006A24  0E00               	movlw	high _dbuf
  4957  006A26  203F               	addwfc	dtoa@i+1,w,c
  4958  006A28  6EDA               	movwf	fsr2h,c
  4959  006A2A  C036  F001         	movff	dtoa@n,___aomod@dividend
  4960  006A2E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4961  006A32  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4962  006A36  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4963  006A3A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4964  006A3E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4965  006A42  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4966  006A46  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4967  006A4A  0E0A               	movlw	10
  4968  006A4C  6E09               	movwf	___aomod@divisor,c
  4969  006A4E  0E00               	movlw	0
  4970  006A50  6E0A               	movwf	___aomod@divisor+1,c
  4971  006A52  0E00               	movlw	0
  4972  006A54  6E0B               	movwf	___aomod@divisor+2,c
  4973  006A56  0E00               	movlw	0
  4974  006A58  6E0C               	movwf	___aomod@divisor+3,c
  4975  006A5A  0E00               	movlw	0
  4976  006A5C  6E0D               	movwf	___aomod@divisor+4,c
  4977  006A5E  0E00               	movlw	0
  4978  006A60  6E0E               	movwf	___aomod@divisor+5,c
  4979  006A62  0E00               	movlw	0
  4980  006A64  6E0F               	movwf	___aomod@divisor+6,c
  4981  006A66  0E00               	movlw	0
  4982  006A68  6E10               	movwf	___aomod@divisor+7,c
  4983  006A6A  ECD2  F031         	call	___aomod	;wreg free
  4984  006A6E  C001  F026         	movff	?___aomod,??_dtoa
  4985  006A72  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4986  006A76  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4987  006A7A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4988  006A7E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4989  006A82  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4990  006A86  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4991  006A8A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4992  006A8E  C026  F013         	movff	??_dtoa,abs@a
  4993  006A92  C028  F014         	movff	??_dtoa+2,abs@a+1
  4994  006A96  EC73  F02A         	call	_abs	;wreg free
  4995  006A9A  5013               	movf	?_abs,w,c
  4996  006A9C  0F30               	addlw	48
  4997  006A9E  6EDF               	movwf	indf2,c
  4998                           
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5000  006AA0  0630               	decf	dtoa@p,f,c
  5001  006AA2  A0D8               	btfss	status,0,c
  5002  006AA4  0631               	decf	dtoa@p+1,f,c
  5003                           
  5004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5005  006AA6  0632               	decf	dtoa@w,f,c
  5006  006AA8  A0D8               	btfss	status,0,c
  5007  006AAA  0633               	decf	dtoa@w+1,f,c
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5010  006AAC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5011  006AB0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5012  006AB4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5013  006AB8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5014  006ABC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5015  006AC0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5016  006AC4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5017  006AC8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5018  006ACC  0E0A               	movlw	10
  5019  006ACE  6E09               	movwf	___aodiv@divisor,c
  5020  006AD0  0E00               	movlw	0
  5021  006AD2  6E0A               	movwf	___aodiv@divisor+1,c
  5022  006AD4  0E00               	movlw	0
  5023  006AD6  6E0B               	movwf	___aodiv@divisor+2,c
  5024  006AD8  0E00               	movlw	0
  5025  006ADA  6E0C               	movwf	___aodiv@divisor+3,c
  5026  006ADC  0E00               	movlw	0
  5027  006ADE  6E0D               	movwf	___aodiv@divisor+4,c
  5028  006AE0  0E00               	movlw	0
  5029  006AE2  6E0E               	movwf	___aodiv@divisor+5,c
  5030  006AE4  0E00               	movlw	0
  5031  006AE6  6E0F               	movwf	___aodiv@divisor+6,c
  5032  006AE8  0E00               	movlw	0
  5033  006AEA  6E10               	movwf	___aodiv@divisor+7,c
  5034  006AEC  EC64  F032         	call	___aodiv	;wreg free
  5035  006AF0  C001  F036         	movff	?___aodiv,dtoa@n
  5036  006AF4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5037  006AF8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5038  006AFC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5039  006B00  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5040  006B04  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5041  006B08  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5042  006B0C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5043  006B10                     l2791:
  5044                           
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5046  006B10  BE3F               	btfsc	dtoa@i+1,7,c
  5047  006B12  D01F               	goto	u1560
  5048  006B14  503F               	movf	dtoa@i+1,w,c
  5049  006B16  E103               	bnz	u1520
  5050  006B18  043E               	decf	dtoa@i,w,c
  5051  006B1A  A0D8               	btfss	status,0,c
  5052  006B1C  D01A               	goto	u1560
  5053  006B1E                     u1520:
  5054  006B1E  5036               	movf	dtoa@n,w,c
  5055  006B20  1037               	iorwf	dtoa@n+1,w,c
  5056  006B22  1038               	iorwf	dtoa@n+2,w,c
  5057  006B24  1039               	iorwf	dtoa@n+3,w,c
  5058  006B26  103A               	iorwf	dtoa@n+4,w,c
  5059  006B28  103B               	iorwf	dtoa@n+5,w,c
  5060  006B2A  103C               	iorwf	dtoa@n+6,w,c
  5061  006B2C  103D               	iorwf	dtoa@n+7,w,c
  5062  006B2E  A4D8               	btfss	status,2,c
  5063  006B30  D773               	goto	l2781
  5064  006B32  BE31               	btfsc	dtoa@p+1,7,c
  5065  006B34  D005               	goto	u1540
  5066  006B36  5031               	movf	dtoa@p+1,w,c
  5067  006B38  E102               	bnz	u1541
  5068  006B3A  0430               	decf	dtoa@p,w,c
  5069  006B3C  B0D8               	btfsc	status,0,c
  5070  006B3E                     u1541:
  5071  006B3E  D76C               	goto	l2781
  5072  006B40                     u1540:
  5073  006B40  BE33               	btfsc	dtoa@w+1,7,c
  5074  006B42  D007               	goto	u1560
  5075  006B44  5033               	movf	dtoa@w+1,w,c
  5076  006B46  E103               	bnz	u1550
  5077  006B48  0432               	decf	dtoa@w,w,c
  5078  006B4A  A0D8               	btfss	status,0,c
  5079  006B4C  D002               	goto	u1560
  5080  006B4E                     u1550:
  5081  006B4E  B25D               	btfsc	_flags,1,c
  5082  006B50  D763               	goto	l2781
  5083  006B52                     u1560:
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5086  006B52  5034               	movf	dtoa@s,w,c
  5087  006B54  1035               	iorwf	dtoa@s+1,w,c
  5088  006B56  A4D8               	btfss	status,2,c
  5089  006B58  D002               	goto	u1580
  5090  006B5A  A45D               	btfss	_flags,2,c
  5091  006B5C  D017               	goto	l2815
  5092  006B5E                     u1580:
  5093                           
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5095  006B5E  063E               	decf	dtoa@i,f,c
  5096  006B60  A0D8               	btfss	status,0,c
  5097  006B62  063F               	decf	dtoa@i+1,f,c
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5100  006B64  5034               	movf	dtoa@s,w,c
  5101  006B66  1035               	iorwf	dtoa@s+1,w,c
  5102  006B68  A4D8               	btfss	status,2,c
  5103  006B6A  D004               	goto	l2811
  5104  006B6C  0E00               	movlw	0
  5105  006B6E  6E2F               	movwf	_dtoa$523+1,c
  5106  006B70  0E2B               	movlw	43
  5107  006B72  D003               	goto	L4
  5108  006B74                     l2811:
  5109  006B74  0E00               	movlw	0
  5110  006B76  6E2F               	movwf	_dtoa$523+1,c
  5111  006B78  0E2D               	movlw	45
  5112  006B7A                     L4:
  5113  006B7A  6E2E               	movwf	_dtoa$523,c
  5114  006B7C  0E72               	movlw	low _dbuf
  5115  006B7E  243E               	addwf	dtoa@i,w,c
  5116  006B80  6ED9               	movwf	fsr2l,c
  5117  006B82  0E00               	movlw	high _dbuf
  5118  006B84  203F               	addwfc	dtoa@i+1,w,c
  5119  006B86  6EDA               	movwf	fsr2h,c
  5120  006B88  C02E  FFDF         	movff	_dtoa$523,indf2
  5121  006B8C                     l2815:
  5122                           
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5124  006B8C  C01C  F011         	movff	dtoa@fp,pad@fp
  5125  006B90  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5126  006B94  0E72               	movlw	low _dbuf
  5127  006B96  243E               	addwf	dtoa@i,w,c
  5128  006B98  6E13               	movwf	pad@buf,c
  5129  006B9A  0E00               	movlw	high _dbuf
  5130  006B9C  203F               	addwfc	dtoa@i+1,w,c
  5131  006B9E  6E14               	movwf	pad@buf+1,c
  5132  006BA0  C032  F015         	movff	dtoa@w,pad@p
  5133  006BA4  C033  F016         	movff	dtoa@w+1,pad@p+1
  5134  006BA8  ECE5  F02C         	call	_pad	;wreg free
  5135  006BAC  C011  F01C         	movff	?_pad,?_dtoa
  5136  006BB0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5137  006BB4  0012               	return		;funcret
  5138  006BB6                     __end_of_dtoa:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _abs *****************
  5142 ;; Defined at:
  5143 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  a               2   18[COMRAM] int 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2   18[COMRAM] int 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5157 ;;      Params:         2       0       0       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5159 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5160 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5161 ;;Total ram usage:        4 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_dtoa
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text6
  5171  0054E6                     __ptext6:
  5172                           	opt callstack 0
  5173  0054E6                     _abs:
  5174                           	opt callstack 26
  5175                           
  5176                           ;incstack = 0
  5177  0054E6  BE14               	btfsc	abs@a+1,7,c
  5178  0054E8  D005               	goto	u1300
  5179  0054EA  5014               	movf	abs@a+1,w,c
  5180  0054EC  E110               	bnz	l988
  5181  0054EE  0413               	decf	abs@a,w,c
  5182  0054F0  B0D8               	btfsc	status,0,c
  5183  0054F2  D00D               	goto	l988
  5184  0054F4                     u1300:
  5185  0054F4  C013  F015         	movff	abs@a,??_abs
  5186  0054F8  C014  F016         	movff	abs@a+1,??_abs+1
  5187  0054FC  1E15               	comf	??_abs,f,c
  5188  0054FE  1E16               	comf	??_abs+1,f,c
  5189  005500  4A15               	infsnz	??_abs,f,c
  5190  005502  2A16               	incf	??_abs+1,f,c
  5191  005504  C015  F013         	movff	??_abs,?_abs
  5192  005508  C016  F014         	movff	??_abs+1,?_abs+1
  5193  00550C  0012               	return	
  5194  00550E                     l988:
  5195  00550E  C013  F013         	movff	abs@a,?_abs
  5196  005512  C014  F014         	movff	abs@a+1,?_abs+1
  5197  005516  0012               	return		;funcret
  5198  005518                     __end_of_abs:
  5199                           	opt callstack 0
  5200                           
  5201 ;; *************** function ___aomod *****************
  5202 ;; Defined at:
  5203 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  dividend        8    0[COMRAM] long long 
  5206 ;;  divisor         8    8[COMRAM] long long 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  sign            1   17[COMRAM] unsigned char 
  5209 ;;  counter         1   16[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  8    0[COMRAM] long long 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5219 ;;      Params:        16       0       0       0       0       0       0       0       0
  5220 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5222 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5223 ;;Total ram usage:       18 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_dtoa
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text7
  5233  0063A4                     __ptext7:
  5234                           	opt callstack 0
  5235  0063A4                     ___aomod:
  5236                           	opt callstack 26
  5237                           
  5238                           ;incstack = 0
  5239  0063A4  0E00               	movlw	0
  5240  0063A6  6E12               	movwf	___aomod@sign,c
  5241  0063A8  AE08               	btfss	___aomod@dividend+7,7,c
  5242  0063AA  D012               	goto	l2715
  5243  0063AC  1E08               	comf	___aomod@dividend+7,f,c
  5244  0063AE  1E07               	comf	___aomod@dividend+6,f,c
  5245  0063B0  1E06               	comf	___aomod@dividend+5,f,c
  5246  0063B2  1E05               	comf	___aomod@dividend+4,f,c
  5247  0063B4  1E04               	comf	___aomod@dividend+3,f,c
  5248  0063B6  1E03               	comf	___aomod@dividend+2,f,c
  5249  0063B8  1E02               	comf	___aomod@dividend+1,f,c
  5250  0063BA  6C01               	negf	___aomod@dividend,c
  5251  0063BC  0E00               	movlw	0
  5252  0063BE  2202               	addwfc	___aomod@dividend+1,f,c
  5253  0063C0  2203               	addwfc	___aomod@dividend+2,f,c
  5254  0063C2  2204               	addwfc	___aomod@dividend+3,f,c
  5255  0063C4  2205               	addwfc	___aomod@dividend+4,f,c
  5256  0063C6  2206               	addwfc	___aomod@dividend+5,f,c
  5257  0063C8  2207               	addwfc	___aomod@dividend+6,f,c
  5258  0063CA  2208               	addwfc	___aomod@dividend+7,f,c
  5259  0063CC  0E01               	movlw	1
  5260  0063CE  6E12               	movwf	___aomod@sign,c
  5261  0063D0                     l2715:
  5262  0063D0  AE10               	btfss	___aomod@divisor+7,7,c
  5263  0063D2  D010               	goto	l2719
  5264  0063D4  1E10               	comf	___aomod@divisor+7,f,c
  5265  0063D6  1E0F               	comf	___aomod@divisor+6,f,c
  5266  0063D8  1E0E               	comf	___aomod@divisor+5,f,c
  5267  0063DA  1E0D               	comf	___aomod@divisor+4,f,c
  5268  0063DC  1E0C               	comf	___aomod@divisor+3,f,c
  5269  0063DE  1E0B               	comf	___aomod@divisor+2,f,c
  5270  0063E0  1E0A               	comf	___aomod@divisor+1,f,c
  5271  0063E2  6C09               	negf	___aomod@divisor,c
  5272  0063E4  0E00               	movlw	0
  5273  0063E6  220A               	addwfc	___aomod@divisor+1,f,c
  5274  0063E8  220B               	addwfc	___aomod@divisor+2,f,c
  5275  0063EA  220C               	addwfc	___aomod@divisor+3,f,c
  5276  0063EC  220D               	addwfc	___aomod@divisor+4,f,c
  5277  0063EE  220E               	addwfc	___aomod@divisor+5,f,c
  5278  0063F0  220F               	addwfc	___aomod@divisor+6,f,c
  5279  0063F2  2210               	addwfc	___aomod@divisor+7,f,c
  5280  0063F4                     l2719:
  5281  0063F4  5009               	movf	___aomod@divisor,w,c
  5282  0063F6  100A               	iorwf	___aomod@divisor+1,w,c
  5283  0063F8  100B               	iorwf	___aomod@divisor+2,w,c
  5284  0063FA  100C               	iorwf	___aomod@divisor+3,w,c
  5285  0063FC  100D               	iorwf	___aomod@divisor+4,w,c
  5286  0063FE  100E               	iorwf	___aomod@divisor+5,w,c
  5287  006400  100F               	iorwf	___aomod@divisor+6,w,c
  5288  006402  1010               	iorwf	___aomod@divisor+7,w,c
  5289  006404  B4D8               	btfsc	status,2,c
  5290  006406  D03C               	goto	l2735
  5291  006408  0E01               	movlw	1
  5292  00640A  6E11               	movwf	___aomod@counter,c
  5293  00640C  D00A               	goto	l2725
  5294  00640E                     l2723:
  5295  00640E  90D8               	bcf	status,0,c
  5296  006410  3609               	rlcf	___aomod@divisor,f,c
  5297  006412  360A               	rlcf	___aomod@divisor+1,f,c
  5298  006414  360B               	rlcf	___aomod@divisor+2,f,c
  5299  006416  360C               	rlcf	___aomod@divisor+3,f,c
  5300  006418  360D               	rlcf	___aomod@divisor+4,f,c
  5301  00641A  360E               	rlcf	___aomod@divisor+5,f,c
  5302  00641C  360F               	rlcf	___aomod@divisor+6,f,c
  5303  00641E  3610               	rlcf	___aomod@divisor+7,f,c
  5304  006420  2A11               	incf	___aomod@counter,f,c
  5305  006422                     l2725:
  5306  006422  AE10               	btfss	___aomod@divisor+7,7,c
  5307  006424  D7F4               	goto	l2723
  5308  006426                     u1410:
  5309  006426  5009               	movf	___aomod@divisor,w,c
  5310  006428  5C01               	subwf	___aomod@dividend,w,c
  5311  00642A  500A               	movf	___aomod@divisor+1,w,c
  5312  00642C  5802               	subwfb	___aomod@dividend+1,w,c
  5313  00642E  500B               	movf	___aomod@divisor+2,w,c
  5314  006430  5803               	subwfb	___aomod@dividend+2,w,c
  5315  006432  500C               	movf	___aomod@divisor+3,w,c
  5316  006434  5804               	subwfb	___aomod@dividend+3,w,c
  5317  006436  500D               	movf	___aomod@divisor+4,w,c
  5318  006438  5805               	subwfb	___aomod@dividend+4,w,c
  5319  00643A  500E               	movf	___aomod@divisor+5,w,c
  5320  00643C  5806               	subwfb	___aomod@dividend+5,w,c
  5321  00643E  500F               	movf	___aomod@divisor+6,w,c
  5322  006440  5807               	subwfb	___aomod@dividend+6,w,c
  5323  006442  5010               	movf	___aomod@divisor+7,w,c
  5324  006444  5808               	subwfb	___aomod@dividend+7,w,c
  5325  006446  A0D8               	btfss	status,0,c
  5326  006448  D010               	goto	l2731
  5327  00644A  5009               	movf	___aomod@divisor,w,c
  5328  00644C  5E01               	subwf	___aomod@dividend,f,c
  5329  00644E  500A               	movf	___aomod@divisor+1,w,c
  5330  006450  5A02               	subwfb	___aomod@dividend+1,f,c
  5331  006452  500B               	movf	___aomod@divisor+2,w,c
  5332  006454  5A03               	subwfb	___aomod@dividend+2,f,c
  5333  006456  500C               	movf	___aomod@divisor+3,w,c
  5334  006458  5A04               	subwfb	___aomod@dividend+3,f,c
  5335  00645A  500D               	movf	___aomod@divisor+4,w,c
  5336  00645C  5A05               	subwfb	___aomod@dividend+4,f,c
  5337  00645E  500E               	movf	___aomod@divisor+5,w,c
  5338  006460  5A06               	subwfb	___aomod@dividend+5,f,c
  5339  006462  500F               	movf	___aomod@divisor+6,w,c
  5340  006464  5A07               	subwfb	___aomod@dividend+6,f,c
  5341  006466  5010               	movf	___aomod@divisor+7,w,c
  5342  006468  5A08               	subwfb	___aomod@dividend+7,f,c
  5343  00646A                     l2731:
  5344  00646A  90D8               	bcf	status,0,c
  5345  00646C  3210               	rrcf	___aomod@divisor+7,f,c
  5346  00646E  320F               	rrcf	___aomod@divisor+6,f,c
  5347  006470  320E               	rrcf	___aomod@divisor+5,f,c
  5348  006472  320D               	rrcf	___aomod@divisor+4,f,c
  5349  006474  320C               	rrcf	___aomod@divisor+3,f,c
  5350  006476  320B               	rrcf	___aomod@divisor+2,f,c
  5351  006478  320A               	rrcf	___aomod@divisor+1,f,c
  5352  00647A  3209               	rrcf	___aomod@divisor,f,c
  5353  00647C  2E11               	decfsz	___aomod@counter,f,c
  5354  00647E  D7D3               	goto	u1410
  5355  006480                     l2735:
  5356  006480  5012               	movf	___aomod@sign,w,c
  5357  006482  B4D8               	btfsc	status,2,c
  5358  006484  D010               	goto	l2739
  5359  006486  1E08               	comf	___aomod@dividend+7,f,c
  5360  006488  1E07               	comf	___aomod@dividend+6,f,c
  5361  00648A  1E06               	comf	___aomod@dividend+5,f,c
  5362  00648C  1E05               	comf	___aomod@dividend+4,f,c
  5363  00648E  1E04               	comf	___aomod@dividend+3,f,c
  5364  006490  1E03               	comf	___aomod@dividend+2,f,c
  5365  006492  1E02               	comf	___aomod@dividend+1,f,c
  5366  006494  6C01               	negf	___aomod@dividend,c
  5367  006496  0E00               	movlw	0
  5368  006498  2202               	addwfc	___aomod@dividend+1,f,c
  5369  00649A  2203               	addwfc	___aomod@dividend+2,f,c
  5370  00649C  2204               	addwfc	___aomod@dividend+3,f,c
  5371  00649E  2205               	addwfc	___aomod@dividend+4,f,c
  5372  0064A0  2206               	addwfc	___aomod@dividend+5,f,c
  5373  0064A2  2207               	addwfc	___aomod@dividend+6,f,c
  5374  0064A4  2208               	addwfc	___aomod@dividend+7,f,c
  5375  0064A6                     l2739:
  5376  0064A6  C001  F001         	movff	___aomod@dividend,?___aomod
  5377  0064AA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5378  0064AE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5379  0064B2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5380  0064B6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5381  0064BA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5382  0064BE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5383  0064C2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5384  0064C6  0012               	return		;funcret
  5385  0064C8                     __end_of___aomod:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function ___aodiv *****************
  5389 ;; Defined at:
  5390 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  dividend        8    0[COMRAM] long long 
  5393 ;;  divisor         8    8[COMRAM] long long 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  quotient        8   18[COMRAM] long long 
  5396 ;;  sign            1   17[COMRAM] unsigned char 
  5397 ;;  counter         1   16[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  8    0[COMRAM] long long 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5407 ;;      Params:        16       0       0       0       0       0       0       0       0
  5408 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5410 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5411 ;;Total ram usage:       26 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_dtoa
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text8
  5421  0064C8                     __ptext8:
  5422                           	opt callstack 0
  5423  0064C8                     ___aodiv:
  5424                           	opt callstack 26
  5425                           
  5426                           ;incstack = 0
  5427  0064C8  0E00               	movlw	0
  5428  0064CA  6E12               	movwf	___aodiv@sign,c
  5429  0064CC  AE10               	btfss	___aodiv@divisor+7,7,c
  5430  0064CE  D012               	goto	l2671
  5431  0064D0  1E10               	comf	___aodiv@divisor+7,f,c
  5432  0064D2  1E0F               	comf	___aodiv@divisor+6,f,c
  5433  0064D4  1E0E               	comf	___aodiv@divisor+5,f,c
  5434  0064D6  1E0D               	comf	___aodiv@divisor+4,f,c
  5435  0064D8  1E0C               	comf	___aodiv@divisor+3,f,c
  5436  0064DA  1E0B               	comf	___aodiv@divisor+2,f,c
  5437  0064DC  1E0A               	comf	___aodiv@divisor+1,f,c
  5438  0064DE  6C09               	negf	___aodiv@divisor,c
  5439  0064E0  0E00               	movlw	0
  5440  0064E2  220A               	addwfc	___aodiv@divisor+1,f,c
  5441  0064E4  220B               	addwfc	___aodiv@divisor+2,f,c
  5442  0064E6  220C               	addwfc	___aodiv@divisor+3,f,c
  5443  0064E8  220D               	addwfc	___aodiv@divisor+4,f,c
  5444  0064EA  220E               	addwfc	___aodiv@divisor+5,f,c
  5445  0064EC  220F               	addwfc	___aodiv@divisor+6,f,c
  5446  0064EE  2210               	addwfc	___aodiv@divisor+7,f,c
  5447  0064F0  0E01               	movlw	1
  5448  0064F2  6E12               	movwf	___aodiv@sign,c
  5449  0064F4                     l2671:
  5450  0064F4  AE08               	btfss	___aodiv@dividend+7,7,c
  5451  0064F6  D012               	goto	l2677
  5452  0064F8  1E08               	comf	___aodiv@dividend+7,f,c
  5453  0064FA  1E07               	comf	___aodiv@dividend+6,f,c
  5454  0064FC  1E06               	comf	___aodiv@dividend+5,f,c
  5455  0064FE  1E05               	comf	___aodiv@dividend+4,f,c
  5456  006500  1E04               	comf	___aodiv@dividend+3,f,c
  5457  006502  1E03               	comf	___aodiv@dividend+2,f,c
  5458  006504  1E02               	comf	___aodiv@dividend+1,f,c
  5459  006506  6C01               	negf	___aodiv@dividend,c
  5460  006508  0E00               	movlw	0
  5461  00650A  2202               	addwfc	___aodiv@dividend+1,f,c
  5462  00650C  2203               	addwfc	___aodiv@dividend+2,f,c
  5463  00650E  2204               	addwfc	___aodiv@dividend+3,f,c
  5464  006510  2205               	addwfc	___aodiv@dividend+4,f,c
  5465  006512  2206               	addwfc	___aodiv@dividend+5,f,c
  5466  006514  2207               	addwfc	___aodiv@dividend+6,f,c
  5467  006516  2208               	addwfc	___aodiv@dividend+7,f,c
  5468  006518  0E01               	movlw	1
  5469  00651A  1A12               	xorwf	___aodiv@sign,f,c
  5470  00651C                     l2677:
  5471  00651C  EE20  F013         	lfsr	2,___aodiv@quotient
  5472  006520  0E07               	movlw	7
  5473  006522                     u1331:
  5474  006522  6ADE               	clrf	postinc2,c
  5475  006524  06E8               	decf	wreg,f,c
  5476  006526  E2FD               	bc	u1331
  5477  006528  5009               	movf	___aodiv@divisor,w,c
  5478  00652A  100A               	iorwf	___aodiv@divisor+1,w,c
  5479  00652C  100B               	iorwf	___aodiv@divisor+2,w,c
  5480  00652E  100C               	iorwf	___aodiv@divisor+3,w,c
  5481  006530  100D               	iorwf	___aodiv@divisor+4,w,c
  5482  006532  100E               	iorwf	___aodiv@divisor+5,w,c
  5483  006534  100F               	iorwf	___aodiv@divisor+6,w,c
  5484  006536  1010               	iorwf	___aodiv@divisor+7,w,c
  5485  006538  B4D8               	btfsc	status,2,c
  5486  00653A  D046               	goto	l2699
  5487  00653C  0E01               	movlw	1
  5488  00653E  6E11               	movwf	___aodiv@counter,c
  5489  006540  D00A               	goto	l2685
  5490  006542                     l2683:
  5491  006542  90D8               	bcf	status,0,c
  5492  006544  3609               	rlcf	___aodiv@divisor,f,c
  5493  006546  360A               	rlcf	___aodiv@divisor+1,f,c
  5494  006548  360B               	rlcf	___aodiv@divisor+2,f,c
  5495  00654A  360C               	rlcf	___aodiv@divisor+3,f,c
  5496  00654C  360D               	rlcf	___aodiv@divisor+4,f,c
  5497  00654E  360E               	rlcf	___aodiv@divisor+5,f,c
  5498  006550  360F               	rlcf	___aodiv@divisor+6,f,c
  5499  006552  3610               	rlcf	___aodiv@divisor+7,f,c
  5500  006554  2A11               	incf	___aodiv@counter,f,c
  5501  006556                     l2685:
  5502  006556  AE10               	btfss	___aodiv@divisor+7,7,c
  5503  006558  D7F4               	goto	l2683
  5504  00655A                     u1350:
  5505  00655A  90D8               	bcf	status,0,c
  5506  00655C  3613               	rlcf	___aodiv@quotient,f,c
  5507  00655E  3614               	rlcf	___aodiv@quotient+1,f,c
  5508  006560  3615               	rlcf	___aodiv@quotient+2,f,c
  5509  006562  3616               	rlcf	___aodiv@quotient+3,f,c
  5510  006564  3617               	rlcf	___aodiv@quotient+4,f,c
  5511  006566  3618               	rlcf	___aodiv@quotient+5,f,c
  5512  006568  3619               	rlcf	___aodiv@quotient+6,f,c
  5513  00656A  361A               	rlcf	___aodiv@quotient+7,f,c
  5514  00656C  5009               	movf	___aodiv@divisor,w,c
  5515  00656E  5C01               	subwf	___aodiv@dividend,w,c
  5516  006570  500A               	movf	___aodiv@divisor+1,w,c
  5517  006572  5802               	subwfb	___aodiv@dividend+1,w,c
  5518  006574  500B               	movf	___aodiv@divisor+2,w,c
  5519  006576  5803               	subwfb	___aodiv@dividend+2,w,c
  5520  006578  500C               	movf	___aodiv@divisor+3,w,c
  5521  00657A  5804               	subwfb	___aodiv@dividend+3,w,c
  5522  00657C  500D               	movf	___aodiv@divisor+4,w,c
  5523  00657E  5805               	subwfb	___aodiv@dividend+4,w,c
  5524  006580  500E               	movf	___aodiv@divisor+5,w,c
  5525  006582  5806               	subwfb	___aodiv@dividend+5,w,c
  5526  006584  500F               	movf	___aodiv@divisor+6,w,c
  5527  006586  5807               	subwfb	___aodiv@dividend+6,w,c
  5528  006588  5010               	movf	___aodiv@divisor+7,w,c
  5529  00658A  5808               	subwfb	___aodiv@dividend+7,w,c
  5530  00658C  A0D8               	btfss	status,0,c
  5531  00658E  D011               	goto	l2695
  5532  006590  5009               	movf	___aodiv@divisor,w,c
  5533  006592  5E01               	subwf	___aodiv@dividend,f,c
  5534  006594  500A               	movf	___aodiv@divisor+1,w,c
  5535  006596  5A02               	subwfb	___aodiv@dividend+1,f,c
  5536  006598  500B               	movf	___aodiv@divisor+2,w,c
  5537  00659A  5A03               	subwfb	___aodiv@dividend+2,f,c
  5538  00659C  500C               	movf	___aodiv@divisor+3,w,c
  5539  00659E  5A04               	subwfb	___aodiv@dividend+3,f,c
  5540  0065A0  500D               	movf	___aodiv@divisor+4,w,c
  5541  0065A2  5A05               	subwfb	___aodiv@dividend+4,f,c
  5542  0065A4  500E               	movf	___aodiv@divisor+5,w,c
  5543  0065A6  5A06               	subwfb	___aodiv@dividend+5,f,c
  5544  0065A8  500F               	movf	___aodiv@divisor+6,w,c
  5545  0065AA  5A07               	subwfb	___aodiv@dividend+6,f,c
  5546  0065AC  5010               	movf	___aodiv@divisor+7,w,c
  5547  0065AE  5A08               	subwfb	___aodiv@dividend+7,f,c
  5548  0065B0  8013               	bsf	___aodiv@quotient,0,c
  5549  0065B2                     l2695:
  5550  0065B2  90D8               	bcf	status,0,c
  5551  0065B4  3210               	rrcf	___aodiv@divisor+7,f,c
  5552  0065B6  320F               	rrcf	___aodiv@divisor+6,f,c
  5553  0065B8  320E               	rrcf	___aodiv@divisor+5,f,c
  5554  0065BA  320D               	rrcf	___aodiv@divisor+4,f,c
  5555  0065BC  320C               	rrcf	___aodiv@divisor+3,f,c
  5556  0065BE  320B               	rrcf	___aodiv@divisor+2,f,c
  5557  0065C0  320A               	rrcf	___aodiv@divisor+1,f,c
  5558  0065C2  3209               	rrcf	___aodiv@divisor,f,c
  5559  0065C4  2E11               	decfsz	___aodiv@counter,f,c
  5560  0065C6  D7C9               	goto	u1350
  5561  0065C8                     l2699:
  5562  0065C8  5012               	movf	___aodiv@sign,w,c
  5563  0065CA  B4D8               	btfsc	status,2,c
  5564  0065CC  D010               	goto	l2703
  5565  0065CE  1E1A               	comf	___aodiv@quotient+7,f,c
  5566  0065D0  1E19               	comf	___aodiv@quotient+6,f,c
  5567  0065D2  1E18               	comf	___aodiv@quotient+5,f,c
  5568  0065D4  1E17               	comf	___aodiv@quotient+4,f,c
  5569  0065D6  1E16               	comf	___aodiv@quotient+3,f,c
  5570  0065D8  1E15               	comf	___aodiv@quotient+2,f,c
  5571  0065DA  1E14               	comf	___aodiv@quotient+1,f,c
  5572  0065DC  6C13               	negf	___aodiv@quotient,c
  5573  0065DE  0E00               	movlw	0
  5574  0065E0  2214               	addwfc	___aodiv@quotient+1,f,c
  5575  0065E2  2215               	addwfc	___aodiv@quotient+2,f,c
  5576  0065E4  2216               	addwfc	___aodiv@quotient+3,f,c
  5577  0065E6  2217               	addwfc	___aodiv@quotient+4,f,c
  5578  0065E8  2218               	addwfc	___aodiv@quotient+5,f,c
  5579  0065EA  2219               	addwfc	___aodiv@quotient+6,f,c
  5580  0065EC  221A               	addwfc	___aodiv@quotient+7,f,c
  5581  0065EE                     l2703:
  5582  0065EE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5583  0065F2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5584  0065F6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5585  0065FA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5586  0065FE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5587  006602  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5588  006606  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5589  00660A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5590  00660E  0012               	return		;funcret
  5591  006610                     __end_of___aodiv:
  5592                           	opt callstack 0
  5593                           
  5594 ;; *************** function _ctoa *****************
  5595 ;; Defined at:
  5596 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5599 ;;		 -> sprintf@f(6), 
  5600 ;;  c               1   29[COMRAM] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  w               2   30[COMRAM] int 
  5603 ;;  l               2    0        int 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  2   27[COMRAM] int 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5613 ;;      Params:         3       0       0       0       0       0       0       0       0
  5614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5616 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5617 ;;Total ram usage:        5 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    4
  5620 ;; This function calls:
  5621 ;;		_pad
  5622 ;; This function is called by:
  5623 ;;		_vfpfcnvrt
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text9
  5628  005550                     __ptext9:
  5629                           	opt callstack 0
  5630  005550                     _ctoa:
  5631                           	opt callstack 23
  5632                           
  5633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  5634                           
  5635                           ;incstack = 0
  5636  005550  0100               	movlb	0	; () banked
  5637  005552  516E               	movf	_width& (0+255),w,b
  5638  005554  116F               	iorwf	(_width+1)& (0+255),w,b
  5639  005556  A4D8               	btfss	status,2,c
  5640  005558  D005               	goto	l2747
  5641                           
  5642                           ; BSR set to: 0
  5643  00555A  C06E  F01F         	movff	_width,ctoa@w
  5644  00555E  C06F  F020         	movff	_width+1,ctoa@w+1
  5645  005562  D006               	goto	l2749
  5646  005564                     l2747:
  5647                           
  5648                           ; BSR set to: 0
  5649  005564  0EFF               	movlw	255
  5650  005566  256E               	addwf	_width& (0+255),w,b
  5651  005568  6E1F               	movwf	ctoa@w,c
  5652  00556A  0EFF               	movlw	255
  5653  00556C  216F               	addwfc	(_width+1)& (0+255),w,b
  5654  00556E  6E20               	movwf	ctoa@w+1,c
  5655  005570                     l2749:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  5659  005570  C01E  F072         	movff	ctoa@c,_dbuf
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  5663  005574  0E00               	movlw	0
  5664  005576  6F73               	movwf	(_dbuf+1)& (0+255),b
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  5668  005578  C01C  F011         	movff	ctoa@fp,pad@fp
  5669  00557C  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  5670  005580  0E72               	movlw	low _dbuf
  5671  005582  6E13               	movwf	pad@buf,c
  5672  005584  0E00               	movlw	high _dbuf
  5673  005586  6E14               	movwf	pad@buf+1,c
  5674  005588  C01F  F015         	movff	ctoa@w,pad@p
  5675  00558C  C020  F016         	movff	ctoa@w+1,pad@p+1
  5676  005590  ECE5  F02C         	call	_pad	;wreg free
  5677  005594  C011  F01C         	movff	?_pad,?_ctoa
  5678  005598  C012  F01D         	movff	?_pad+1,?_ctoa+1
  5679  00559C  0012               	return		;funcret
  5680  00559E                     __end_of_ctoa:
  5681                           	opt callstack 0
  5682                           
  5683 ;; *************** function _pad *****************
  5684 ;; Defined at:
  5685 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5688 ;;		 -> sprintf@f(6), 
  5689 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5690 ;;		 -> dbuf(32), 
  5691 ;;  p               2   20[COMRAM] int 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  w               2   25[COMRAM] int 
  5694 ;;  i               2   23[COMRAM] int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  2   16[COMRAM] int 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5704 ;;      Params:         6       0       0       0       0       0       0       0       0
  5705 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5706 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5707 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5708 ;;Total ram usage:       11 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    3
  5711 ;; This function calls:
  5712 ;;		_fputc
  5713 ;;		_fputs
  5714 ;;		_strlen
  5715 ;; This function is called by:
  5716 ;;		_ctoa
  5717 ;;		_dtoa
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text10
  5722  0059CA                     __ptext10:
  5723                           	opt callstack 0
  5724  0059CA                     _pad:
  5725                           	opt callstack 23
  5726                           
  5727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5728                           
  5729                           ;incstack = 0
  5730  0059CA  A05D               	btfss	_flags,0,c
  5731  0059CC  D00A               	goto	l2641
  5732                           
  5733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5734  0059CE  C013  F00A         	movff	pad@buf,fputs@s
  5735  0059D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5736  0059D6  C011  F00C         	movff	pad@fp,fputs@fp
  5737  0059DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5738  0059DE  EC8C  F02A         	call	_fputs	;wreg free
  5739  0059E2                     l2641:
  5740                           
  5741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5742  0059E2  BE16               	btfsc	pad@p+1,7,c
  5743  0059E4  D005               	goto	l2645
  5744  0059E6  C015  F01A         	movff	pad@p,pad@w
  5745  0059EA  C016  F01B         	movff	pad@p+1,pad@w+1
  5746  0059EE  D004               	goto	l257
  5747  0059F0                     l2645:
  5748  0059F0  0E00               	movlw	0
  5749  0059F2  6E1B               	movwf	pad@w+1,c
  5750  0059F4  0E00               	movlw	0
  5751  0059F6  6E1A               	movwf	pad@w,c
  5752  0059F8                     l257:
  5753                           
  5754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5755  0059F8  0E00               	movlw	0
  5756  0059FA  6E19               	movwf	pad@i+1,c
  5757  0059FC  0E00               	movlw	0
  5758  0059FE  6E18               	movwf	pad@i,c
  5759                           
  5760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5761  005A00  D00C               	goto	l2651
  5762  005A02                     l2647:
  5763                           
  5764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5765  005A02  0E00               	movlw	0
  5766  005A04  6E02               	movwf	fputc@c+1,c
  5767  005A06  0E20               	movlw	32
  5768  005A08  6E01               	movwf	fputc@c,c
  5769  005A0A  C011  F003         	movff	pad@fp,fputc@fp
  5770  005A0E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5771  005A12  EC30  F02D         	call	_fputc	;wreg free
  5772                           
  5773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5774  005A16  4A18               	infsnz	pad@i,f,c
  5775  005A18  2A19               	incf	pad@i+1,f,c
  5776  005A1A                     l2651:
  5777                           
  5778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5779  005A1A  501A               	movf	pad@w,w,c
  5780  005A1C  5C18               	subwf	pad@i,w,c
  5781  005A1E  5019               	movf	pad@i+1,w,c
  5782  005A20  0A80               	xorlw	128
  5783  005A22  6E17               	movwf	??_pad& (0+255),c
  5784  005A24  501B               	movf	pad@w+1,w,c
  5785  005A26  0A80               	xorlw	128
  5786  005A28  5817               	subwfb	??_pad& (0+255),w,c
  5787  005A2A  A0D8               	btfss	status,0,c
  5788  005A2C  D7EA               	goto	l2647
  5789                           
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5791  005A2E  B05D               	btfsc	_flags,0,c
  5792  005A30  D00A               	goto	l2655
  5793                           
  5794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5795  005A32  C013  F00A         	movff	pad@buf,fputs@s
  5796  005A36  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5797  005A3A  C011  F00C         	movff	pad@fp,fputs@fp
  5798  005A3E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5799  005A42  EC8C  F02A         	call	_fputs	;wreg free
  5800  005A46                     l2655:
  5801                           
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5803  005A46  C013  F001         	movff	pad@buf,strlen@s
  5804  005A4A  C014  F002         	movff	pad@buf+1,strlen@s+1
  5805  005A4E  EC5E  F02A         	call	_strlen	;wreg free
  5806  005A52  501A               	movf	pad@w,w,c
  5807  005A54  2401               	addwf	?_strlen,w,c
  5808  005A56  6E11               	movwf	?_pad,c
  5809  005A58  501B               	movf	pad@w+1,w,c
  5810  005A5A  2002               	addwfc	?_strlen+1,w,c
  5811  005A5C  6E12               	movwf	?_pad+1,c
  5812  005A5E  0012               	return		;funcret
  5813  005A60                     __end_of_pad:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _strlen *****************
  5817 ;; Defined at:
  5818 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5821 ;;		 -> dbuf(32), 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5824 ;;		 -> dbuf(32), 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  2    0[COMRAM] unsigned int 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5834 ;;      Params:         2       0       0       0       0       0       0       0       0
  5835 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5837 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5838 ;;Total ram usage:        4 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_pad
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text11
  5848  0054BC                     __ptext11:
  5849                           	opt callstack 0
  5850  0054BC                     _strlen:
  5851                           	opt callstack 25
  5852                           
  5853                           ;incstack = 0
  5854  0054BC  C001  F003         	movff	strlen@s,strlen@a
  5855  0054C0  C002  F004         	movff	strlen@s+1,strlen@a+1
  5856  0054C4  D002               	goto	l2631
  5857  0054C6                     l2629:
  5858  0054C6  4A01               	infsnz	strlen@s,f,c
  5859  0054C8  2A02               	incf	strlen@s+1,f,c
  5860  0054CA                     l2631:
  5861  0054CA  C001  FFD9         	movff	strlen@s,fsr2l
  5862  0054CE  C002  FFDA         	movff	strlen@s+1,fsr2h
  5863  0054D2  50DF               	movf	indf2,w,c
  5864  0054D4  A4D8               	btfss	status,2,c
  5865  0054D6  D7F7               	goto	l2629
  5866  0054D8  5003               	movf	strlen@a,w,c
  5867  0054DA  5C01               	subwf	strlen@s,w,c
  5868  0054DC  6E01               	movwf	?_strlen,c
  5869  0054DE  5004               	movf	strlen@a+1,w,c
  5870  0054E0  5802               	subwfb	strlen@s+1,w,c
  5871  0054E2  6E02               	movwf	?_strlen+1,c
  5872  0054E4  0012               	return		;funcret
  5873  0054E6                     __end_of_strlen:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function _fputs *****************
  5877 ;; Defined at:
  5878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5881 ;;		 -> dbuf(32), 
  5882 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5883 ;;		 -> sprintf@f(6), 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  i               2   14[COMRAM] int 
  5886 ;;  c               1   13[COMRAM] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  2    9[COMRAM] int 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5896 ;;      Params:         4       0       0       0       0       0       0       0       0
  5897 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5899 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5900 ;;Total ram usage:        7 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    2
  5903 ;; This function calls:
  5904 ;;		_fputc
  5905 ;; This function is called by:
  5906 ;;		_pad
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text12
  5911  005518                     __ptext12:
  5912                           	opt callstack 0
  5913  005518                     _fputs:
  5914                           	opt callstack 23
  5915                           
  5916                           ;incstack = 0
  5917  005518  0E00               	movlw	0
  5918  00551A  6E10               	movwf	fputs@i+1,c
  5919  00551C  0E00               	movlw	0
  5920  00551E  6E0F               	movwf	fputs@i,c
  5921  005520  D00B               	goto	l2625
  5922  005522                     l2621:
  5923  005522  C00E  F001         	movff	fputs@c,fputc@c
  5924  005526  6A02               	clrf	fputc@c+1,c
  5925  005528  C00C  F003         	movff	fputs@fp,fputc@fp
  5926  00552C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5927  005530  EC30  F02D         	call	_fputc	;wreg free
  5928  005534  4A0F               	infsnz	fputs@i,f,c
  5929  005536  2A10               	incf	fputs@i+1,f,c
  5930  005538                     l2625:
  5931  005538  500F               	movf	fputs@i,w,c
  5932  00553A  240A               	addwf	fputs@s,w,c
  5933  00553C  6ED9               	movwf	fsr2l,c
  5934  00553E  5010               	movf	fputs@i+1,w,c
  5935  005540  200B               	addwfc	fputs@s+1,w,c
  5936  005542  6EDA               	movwf	fsr2h,c
  5937  005544  50DF               	movf	indf2,w,c
  5938  005546  6E0E               	movwf	fputs@c,c
  5939  005548  500E               	movf	fputs@c,w,c
  5940  00554A  B4D8               	btfsc	status,2,c
  5941  00554C  0012               	return	
  5942  00554E  D7E9               	goto	l2621
  5943  005550                     __end_of_fputs:
  5944                           	opt callstack 0
  5945                           
  5946 ;; *************** function _fputc *****************
  5947 ;; Defined at:
  5948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  c               2    0[COMRAM] int 
  5951 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5952 ;;		 -> sprintf@f(6), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2    0[COMRAM] int 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5964 ;;      Params:         4       0       0       0       0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5966 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5967 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5968 ;;Total ram usage:        9 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    1
  5971 ;; This function calls:
  5972 ;;		_putch
  5973 ;; This function is called by:
  5974 ;;		_pad
  5975 ;;		_vfpfcnvrt
  5976 ;;		_fputs
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text13
  5981  005A60                     __ptext13:
  5982                           	opt callstack 0
  5983  005A60                     _fputc:
  5984                           	opt callstack 26
  5985                           
  5986                           ;incstack = 0
  5987  005A60  5003               	movf	fputc@fp,w,c
  5988  005A62  1004               	iorwf	fputc@fp+1,w,c
  5989  005A64  B4D8               	btfsc	status,2,c
  5990  005A66  D004               	goto	u1210
  5991  005A68  5003               	movf	fputc@fp,w,c
  5992  005A6A  1004               	iorwf	fputc@fp+1,w,c
  5993  005A6C  A4D8               	btfss	status,2,c
  5994  005A6E  D004               	goto	l2611
  5995  005A70                     u1210:
  5996  005A70  5001               	movf	fputc@c,w,c
  5997  005A72  EC42  F02A         	call	_putch
  5998  005A76  0012               	return	
  5999  005A78                     l2611:
  6000  005A78  EE20 F004          	lfsr	2,4
  6001  005A7C  5003               	movf	fputc@fp,w,c
  6002  005A7E  26D9               	addwf	fsr2l,f,c
  6003  005A80  5004               	movf	fputc@fp+1,w,c
  6004  005A82  22DA               	addwfc	fsr2h,f,c
  6005  005A84  50DE               	movf	postinc2,w,c
  6006  005A86  10DE               	iorwf	postinc2,w,c
  6007  005A88  B4D8               	btfsc	status,2,c
  6008  005A8A  D016               	goto	u1230
  6009  005A8C  EE20 F004          	lfsr	2,4
  6010  005A90  5003               	movf	fputc@fp,w,c
  6011  005A92  26D9               	addwf	fsr2l,f,c
  6012  005A94  5004               	movf	fputc@fp+1,w,c
  6013  005A96  22DA               	addwfc	fsr2h,f,c
  6014  005A98  EE10 F002          	lfsr	1,2
  6015  005A9C  5003               	movf	fputc@fp,w,c
  6016  005A9E  26E1               	addwf	fsr1l,f,c
  6017  005AA0  5004               	movf	fputc@fp+1,w,c
  6018  005AA2  22E2               	addwfc	fsr1h,f,c
  6019  005AA4  50DE               	movf	postinc2,w,c
  6020  005AA6  5CE6               	subwf	postinc1,w,c
  6021  005AA8  50E6               	movf	postinc1,w,c
  6022  005AAA  0A80               	xorlw	128
  6023  005AAC  6E09               	movwf	(??_fputc+4)& (0+255),c
  6024  005AAE  50DE               	movf	postinc2,w,c
  6025  005AB0  0A80               	xorlw	128
  6026  005AB2  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6027  005AB4  B0D8               	btfsc	status,0,c
  6028  005AB6  0012               	return	
  6029  005AB8                     u1230:
  6030  005AB8  EE20 F002          	lfsr	2,2
  6031  005ABC  5003               	movf	fputc@fp,w,c
  6032  005ABE  26D9               	addwf	fsr2l,f,c
  6033  005AC0  5004               	movf	fputc@fp+1,w,c
  6034  005AC2  22DA               	addwfc	fsr2h,f,c
  6035  005AC4  CFDE F005          	movff	postinc2,??_fputc
  6036  005AC8  CFDD F006          	movff	postdec2,??_fputc+1
  6037  005ACC  C003  FFD9         	movff	fputc@fp,fsr2l
  6038  005AD0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6039  005AD4  CFDE F007          	movff	postinc2,??_fputc+2
  6040  005AD8  CFDD F008          	movff	postdec2,??_fputc+3
  6041  005ADC  5005               	movf	??_fputc,w,c
  6042  005ADE  2407               	addwf	??_fputc+2,w,c
  6043  005AE0  6ED9               	movwf	fsr2l,c
  6044  005AE2  5006               	movf	??_fputc+1,w,c
  6045  005AE4  2008               	addwfc	??_fputc+3,w,c
  6046  005AE6  6EDA               	movwf	fsr2h,c
  6047  005AE8  C001  FFDF         	movff	fputc@c,indf2
  6048  005AEC  EE20 F002          	lfsr	2,2
  6049  005AF0  5003               	movf	fputc@fp,w,c
  6050  005AF2  26D9               	addwf	fsr2l,f,c
  6051  005AF4  5004               	movf	fputc@fp+1,w,c
  6052  005AF6  22DA               	addwfc	fsr2h,f,c
  6053  005AF8  2ADE               	incf	postinc2,f,c
  6054  005AFA  0E00               	movlw	0
  6055  005AFC  22DD               	addwfc	postdec2,f,c
  6056  005AFE  0012               	return		;funcret
  6057  005B00                     __end_of_fputc:
  6058                           	opt callstack 0
  6059                           
  6060 ;; *************** function _putch *****************
  6061 ;; Defined at:
  6062 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  c               1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  c               1    0[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         0       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6079 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:        0 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_fputc
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text14
  6090  005484                     __ptext14:
  6091                           	opt callstack 0
  6092  005484                     _putch:
  6093                           	opt callstack 26
  6094                           
  6095                           ;incstack = 0
  6096  005484  0012               	return		;funcret
  6097  005486                     __end_of_putch:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _opt_Wave_stepper *****************
  6101 ;; Defined at:
  6102 ;;		line 124 in file "./Prueba1.h"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  steps           4   10[COMRAM] long 
  6105 ;;  direttion       2   14[COMRAM] short 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6117 ;;      Params:         6       0       0       0       0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6120 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6121 ;;Total ram usage:        8 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    2
  6124 ;; This function calls:
  6125 ;;		_Lcd_Cmd
  6126 ;;		_Lcd_Out
  6127 ;;		_Wave_stepper
  6128 ;;		_Wave_stepper_izq
  6129 ;; This function is called by:
  6130 ;;		_main
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text15
  6135  005D08                     __ptext15:
  6136                           	opt callstack 0
  6137  005D08                     _opt_Wave_stepper:
  6138                           	opt callstack 28
  6139                           
  6140                           ;./Prueba1.h: 125:     if(direttion==1){contador=0;
  6141                           
  6142                           ;incstack = 0
  6143  005D08  040F               	decf	opt_Wave_stepper@direttion,w,c
  6144  005D0A  1010               	iorwf	opt_Wave_stepper@direttion+1,w,c
  6145  005D0C  A4D8               	btfss	status,2,c
  6146  005D0E  D024               	goto	l3389
  6147  005D10  0E00               	movlw	0
  6148  005D12  0100               	movlb	0	; () banked
  6149  005D14  6F68               	movwf	_contador& (0+255),b
  6150  005D16  0E00               	movlw	0
  6151  005D18  6F69               	movwf	(_contador+1)& (0+255),b
  6152  005D1A  0E00               	movlw	0
  6153  005D1C  6F6A               	movwf	(_contador+2)& (0+255),b
  6154  005D1E  0E00               	movlw	0
  6155  005D20  6F6B               	movwf	(_contador+3)& (0+255),b
  6156                           
  6157                           ;./Prueba1.h: 126:         while(steps>contador){
  6158  005D22  D002               	goto	l3385
  6159  005D24                     l3383:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;./Prueba1.h: 127:             Wave_stepper();
  6163  005D24  EC53  F02C         	call	_Wave_stepper	;wreg free
  6164  005D28                     l3385:
  6165                           
  6166                           ;./Prueba1.h: 126:         while(steps>contador){
  6167  005D28  500B               	movf	opt_Wave_stepper@steps,w,c
  6168  005D2A  0100               	movlb	0	; () banked
  6169  005D2C  5D68               	subwf	_contador& (0+255),w,b
  6170  005D2E  500C               	movf	opt_Wave_stepper@steps+1,w,c
  6171  005D30  5969               	subwfb	(_contador+1)& (0+255),w,b
  6172  005D32  500D               	movf	opt_Wave_stepper@steps+2,w,c
  6173  005D34  596A               	subwfb	(_contador+2)& (0+255),w,b
  6174  005D36  516B               	movf	(_contador+3)& (0+255),w,b
  6175  005D38  0A80               	xorlw	128
  6176  005D3A  6E11               	movwf	??_opt_Wave_stepper& (0+255),c
  6177  005D3C  500E               	movf	opt_Wave_stepper@steps+3,w,c
  6178  005D3E  0A80               	xorlw	128
  6179  005D40  5811               	subwfb	??_opt_Wave_stepper& (0+255),w,c
  6180  005D42  A0D8               	btfss	status,0,c
  6181  005D44  D7EF               	goto	l3383
  6182  005D46                     u1800:
  6183                           
  6184                           ; BSR set to: 0
  6185  005D46  0E00               	movlw	0
  6186  005D48  6F68               	movwf	_contador& (0+255),b
  6187  005D4A  0E00               	movlw	0
  6188  005D4C  6F69               	movwf	(_contador+1)& (0+255),b
  6189  005D4E  0E00               	movlw	0
  6190  005D50  6F6A               	movwf	(_contador+2)& (0+255),b
  6191  005D52  0E00               	movlw	0
  6192  005D54  6F6B               	movwf	(_contador+3)& (0+255),b
  6193                           
  6194                           ;./Prueba1.h: 130:     }
  6195  005D56  0012               	return	
  6196  005D58                     l3389:
  6197  005D58  0E02               	movlw	2
  6198  005D5A  180F               	xorwf	opt_Wave_stepper@direttion,w,c
  6199  005D5C  1010               	iorwf	opt_Wave_stepper@direttion+1,w,c
  6200  005D5E  A4D8               	btfss	status,2,c
  6201  005D60  D01C               	goto	l3399
  6202  005D62  0E00               	movlw	0
  6203  005D64  0100               	movlb	0	; () banked
  6204  005D66  6F68               	movwf	_contador& (0+255),b
  6205  005D68  0E00               	movlw	0
  6206  005D6A  6F69               	movwf	(_contador+1)& (0+255),b
  6207  005D6C  0E00               	movlw	0
  6208  005D6E  6F6A               	movwf	(_contador+2)& (0+255),b
  6209  005D70  0E00               	movlw	0
  6210  005D72  6F6B               	movwf	(_contador+3)& (0+255),b
  6211                           
  6212                           ;./Prueba1.h: 132:         while(steps>contador){
  6213  005D74  D002               	goto	l3395
  6214  005D76                     l3393:
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;./Prueba1.h: 133:             Wave_stepper_izq();
  6218  005D76  EC9C  F02C         	call	_Wave_stepper_izq	;wreg free
  6219  005D7A                     l3395:
  6220                           
  6221                           ;./Prueba1.h: 132:         while(steps>contador){
  6222  005D7A  500B               	movf	opt_Wave_stepper@steps,w,c
  6223  005D7C  0100               	movlb	0	; () banked
  6224  005D7E  5D68               	subwf	_contador& (0+255),w,b
  6225  005D80  500C               	movf	opt_Wave_stepper@steps+1,w,c
  6226  005D82  5969               	subwfb	(_contador+1)& (0+255),w,b
  6227  005D84  500D               	movf	opt_Wave_stepper@steps+2,w,c
  6228  005D86  596A               	subwfb	(_contador+2)& (0+255),w,b
  6229  005D88  516B               	movf	(_contador+3)& (0+255),w,b
  6230  005D8A  0A80               	xorlw	128
  6231  005D8C  6E11               	movwf	??_opt_Wave_stepper& (0+255),c
  6232  005D8E  500E               	movf	opt_Wave_stepper@steps+3,w,c
  6233  005D90  0A80               	xorlw	128
  6234  005D92  5811               	subwfb	??_opt_Wave_stepper& (0+255),w,c
  6235  005D94  B0D8               	btfsc	status,0,c
  6236  005D96  D7D7               	goto	u1800
  6237  005D98  D7EE               	goto	l3393
  6238  005D9A                     l3399:
  6239  005D9A  0E00               	movlw	0
  6240  005D9C  0100               	movlb	0	; () banked
  6241  005D9E  6F68               	movwf	_contador& (0+255),b
  6242  005DA0  0E00               	movlw	0
  6243  005DA2  6F69               	movwf	(_contador+1)& (0+255),b
  6244  005DA4  0E00               	movlw	0
  6245  005DA6  6F6A               	movwf	(_contador+2)& (0+255),b
  6246  005DA8  0E00               	movlw	0
  6247  005DAA  6F6B               	movwf	(_contador+3)& (0+255),b
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;./Prueba1.h: 138:         Lcd_Cmd(1);
  6251  005DAC  0E01               	movlw	1
  6252  005DAE  EC8F  F02F         	call	_Lcd_Cmd
  6253                           
  6254                           ;./Prueba1.h: 139:         _delay((unsigned long)((100)*(12000000/4000.0)));
  6255  005DB2  0E02               	movlw	2
  6256  005DB4  6E12               	movwf	(??_opt_Wave_stepper+1)& (0+255),c
  6257  005DB6  0E86               	movlw	134
  6258  005DB8  6E11               	movwf	??_opt_Wave_stepper& (0+255),c
  6259  005DBA  0E99               	movlw	153
  6260  005DBC                     u3047:
  6261  005DBC  2EE8               	decfsz	wreg,f,c
  6262  005DBE  D7FE               	bra	u3047
  6263  005DC0  2E11               	decfsz	??_opt_Wave_stepper& (0+255),f,c
  6264  005DC2  D7FC               	bra	u3047
  6265  005DC4  2E12               	decfsz	(??_opt_Wave_stepper+1)& (0+255),f,c
  6266  005DC6  D7FA               	bra	u3047
  6267  005DC8  F000               	nop	
  6268                           
  6269                           ;./Prueba1.h: 140:         Lcd_Out(1,4,"Opcion");
  6270  005DCA  0E04               	movlw	4
  6271  005DCC  6E04               	movwf	Lcd_Out@x,c
  6272  005DCE  0EE6               	movlw	low STR_1
  6273  005DD0  6E05               	movwf	Lcd_Out@buffer,c
  6274  005DD2  0E7F               	movlw	high STR_1
  6275  005DD4  6E06               	movwf	Lcd_Out@buffer+1,c
  6276  005DD6  0E01               	movlw	1
  6277  005DD8  EC86  F02B         	call	_Lcd_Out
  6278                           
  6279                           ;./Prueba1.h: 141:         Lcd_Out(2,2,"incorrecta");
  6280  005DDC  0E02               	movlw	2
  6281  005DDE  6E04               	movwf	Lcd_Out@x,c
  6282  005DE0  0E83               	movlw	low STR_2
  6283  005DE2  6E05               	movwf	Lcd_Out@buffer,c
  6284  005DE4  0E7F               	movlw	high STR_2
  6285  005DE6  6E06               	movwf	Lcd_Out@buffer+1,c
  6286  005DE8  0E02               	movlw	2
  6287  005DEA  EC86  F02B         	call	_Lcd_Out
  6288                           
  6289                           ;./Prueba1.h: 142:         _delay((unsigned long)((1000)*(12000000/4000.0)));
  6290  005DEE  0E10               	movlw	16
  6291  005DF0  6E12               	movwf	(??_opt_Wave_stepper+1)& (0+255),c
  6292  005DF2  0E39               	movlw	57
  6293  005DF4  6E11               	movwf	??_opt_Wave_stepper& (0+255),c
  6294  005DF6  0E0E               	movlw	14
  6295  005DF8                     u3057:
  6296  005DF8  2EE8               	decfsz	wreg,f,c
  6297  005DFA  D7FE               	bra	u3057
  6298  005DFC  2E11               	decfsz	??_opt_Wave_stepper& (0+255),f,c
  6299  005DFE  D7FC               	bra	u3057
  6300  005E00  2E12               	decfsz	(??_opt_Wave_stepper+1)& (0+255),f,c
  6301  005E02  D7FA               	bra	u3057
  6302                           
  6303                           ;./Prueba1.h: 143:         Lcd_Cmd(1);
  6304  005E04  0E01               	movlw	1
  6305  005E06  EC8F  F02F         	call	_Lcd_Cmd
  6306  005E0A  0012               	return		;funcret
  6307  005E0C                     __end_of_opt_Wave_stepper:
  6308                           	opt callstack 0
  6309                           
  6310 ;; *************** function _Wave_stepper_izq *****************
  6311 ;; Defined at:
  6312 ;;		line 74 in file "./Prueba1.h"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6329 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:        1 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_opt_Wave_stepper
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text16
  6340  005938                     __ptext16:
  6341                           	opt callstack 0
  6342  005938                     _Wave_stepper_izq:
  6343                           	opt callstack 29
  6344                           
  6345                           ;./Prueba1.h: 75:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  6346                           
  6347                           ;incstack = 0
  6348  005938  8080               	bsf	3968,0,c	;volatile
  6349  00593A  9280               	bcf	3968,1,c	;volatile
  6350  00593C  9480               	bcf	3968,2,c	;volatile
  6351  00593E  9680               	bcf	3968,3,c	;volatile
  6352                           
  6353                           ;./Prueba1.h: 76:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6354  005940  0E14               	movlw	20
  6355  005942  6E01               	movwf	??_Wave_stepper_izq& (0+255),c
  6356  005944  0E7A               	movlw	122
  6357  005946                     u3067:
  6358  005946  2EE8               	decfsz	wreg,f,c
  6359  005948  D7FE               	bra	u3067
  6360  00594A  2E01               	decfsz	??_Wave_stepper_izq& (0+255),f,c
  6361  00594C  D7FC               	bra	u3067
  6362  00594E  0E01               	movlw	1
  6363  005950  0100               	movlb	0	; () banked
  6364  005952  2768               	addwf	_contador& (0+255),f,b
  6365  005954  0E00               	movlw	0
  6366  005956  2369               	addwfc	(_contador+1)& (0+255),f,b
  6367  005958  236A               	addwfc	(_contador+2)& (0+255),f,b
  6368  00595A  236B               	addwfc	(_contador+3)& (0+255),f,b
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;./Prueba1.h: 77:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  6372  00595C  9080               	bcf	3968,0,c	;volatile
  6373                           
  6374                           ; BSR set to: 0
  6375  00595E  9280               	bcf	3968,1,c	;volatile
  6376                           
  6377                           ; BSR set to: 0
  6378  005960  9480               	bcf	3968,2,c	;volatile
  6379                           
  6380                           ; BSR set to: 0
  6381  005962  8680               	bsf	3968,3,c	;volatile
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;./Prueba1.h: 78:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6385  005964  0E14               	movlw	20
  6386  005966  6E01               	movwf	??_Wave_stepper_izq& (0+255),c
  6387  005968  0E7A               	movlw	122
  6388  00596A                     u3077:
  6389  00596A  2EE8               	decfsz	wreg,f,c
  6390  00596C  D7FE               	bra	u3077
  6391  00596E  2E01               	decfsz	??_Wave_stepper_izq& (0+255),f,c
  6392  005970  D7FC               	bra	u3077
  6393  005972  0E01               	movlw	1
  6394  005974  0100               	movlb	0	; () banked
  6395  005976  2768               	addwf	_contador& (0+255),f,b
  6396  005978  0E00               	movlw	0
  6397  00597A  2369               	addwfc	(_contador+1)& (0+255),f,b
  6398  00597C  236A               	addwfc	(_contador+2)& (0+255),f,b
  6399  00597E  236B               	addwfc	(_contador+3)& (0+255),f,b
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;./Prueba1.h: 79:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  6403  005980  9080               	bcf	3968,0,c	;volatile
  6404                           
  6405                           ; BSR set to: 0
  6406  005982  9280               	bcf	3968,1,c	;volatile
  6407                           
  6408                           ; BSR set to: 0
  6409  005984  8480               	bsf	3968,2,c	;volatile
  6410                           
  6411                           ; BSR set to: 0
  6412  005986  9680               	bcf	3968,3,c	;volatile
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;./Prueba1.h: 80:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6416  005988  0E14               	movlw	20
  6417  00598A  6E01               	movwf	??_Wave_stepper_izq& (0+255),c
  6418  00598C  0E7A               	movlw	122
  6419  00598E                     u3087:
  6420  00598E  2EE8               	decfsz	wreg,f,c
  6421  005990  D7FE               	bra	u3087
  6422  005992  2E01               	decfsz	??_Wave_stepper_izq& (0+255),f,c
  6423  005994  D7FC               	bra	u3087
  6424  005996  0E01               	movlw	1
  6425  005998  0100               	movlb	0	; () banked
  6426  00599A  2768               	addwf	_contador& (0+255),f,b
  6427  00599C  0E00               	movlw	0
  6428  00599E  2369               	addwfc	(_contador+1)& (0+255),f,b
  6429  0059A0  236A               	addwfc	(_contador+2)& (0+255),f,b
  6430  0059A2  236B               	addwfc	(_contador+3)& (0+255),f,b
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;./Prueba1.h: 81:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  6434  0059A4  9080               	bcf	3968,0,c	;volatile
  6435                           
  6436                           ; BSR set to: 0
  6437  0059A6  8280               	bsf	3968,1,c	;volatile
  6438                           
  6439                           ; BSR set to: 0
  6440  0059A8  9480               	bcf	3968,2,c	;volatile
  6441                           
  6442                           ; BSR set to: 0
  6443  0059AA  9680               	bcf	3968,3,c	;volatile
  6444                           
  6445                           ;./Prueba1.h: 82:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6446  0059AC  0E14               	movlw	20
  6447  0059AE  6E01               	movwf	??_Wave_stepper_izq& (0+255),c
  6448  0059B0  0E7A               	movlw	122
  6449  0059B2                     u3097:
  6450  0059B2  2EE8               	decfsz	wreg,f,c
  6451  0059B4  D7FE               	bra	u3097
  6452  0059B6  2E01               	decfsz	??_Wave_stepper_izq& (0+255),f,c
  6453  0059B8  D7FC               	bra	u3097
  6454  0059BA  0E01               	movlw	1
  6455  0059BC  0100               	movlb	0	; () banked
  6456  0059BE  2768               	addwf	_contador& (0+255),f,b
  6457  0059C0  0E00               	movlw	0
  6458  0059C2  2369               	addwfc	(_contador+1)& (0+255),f,b
  6459  0059C4  236A               	addwfc	(_contador+2)& (0+255),f,b
  6460  0059C6  236B               	addwfc	(_contador+3)& (0+255),f,b
  6461                           
  6462                           ; BSR set to: 0
  6463  0059C8  0012               	return		;funcret
  6464  0059CA                     __end_of_Wave_stepper_izq:
  6465                           	opt callstack 0
  6466                           
  6467 ;; *************** function _Wave_stepper *****************
  6468 ;; Defined at:
  6469 ;;		line 35 in file "./Prueba1.h"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6485 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6486 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_opt_Wave_stepper
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text17
  6497  0058A6                     __ptext17:
  6498                           	opt callstack 0
  6499  0058A6                     _Wave_stepper:
  6500                           	opt callstack 29
  6501                           
  6502                           ;./Prueba1.h: 36:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;incstack = 0
  6506  0058A6  8080               	bsf	3968,0,c	;volatile
  6507  0058A8  9280               	bcf	3968,1,c	;volatile
  6508  0058AA  9480               	bcf	3968,2,c	;volatile
  6509  0058AC  9680               	bcf	3968,3,c	;volatile
  6510                           
  6511                           ;./Prueba1.h: 37:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6512  0058AE  0E14               	movlw	20
  6513  0058B0  6E01               	movwf	??_Wave_stepper& (0+255),c
  6514  0058B2  0E7A               	movlw	122
  6515  0058B4                     u3107:
  6516  0058B4  2EE8               	decfsz	wreg,f,c
  6517  0058B6  D7FE               	bra	u3107
  6518  0058B8  2E01               	decfsz	??_Wave_stepper& (0+255),f,c
  6519  0058BA  D7FC               	bra	u3107
  6520  0058BC  0E01               	movlw	1
  6521  0058BE  0100               	movlb	0	; () banked
  6522  0058C0  2768               	addwf	_contador& (0+255),f,b
  6523  0058C2  0E00               	movlw	0
  6524  0058C4  2369               	addwfc	(_contador+1)& (0+255),f,b
  6525  0058C6  236A               	addwfc	(_contador+2)& (0+255),f,b
  6526  0058C8  236B               	addwfc	(_contador+3)& (0+255),f,b
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;./Prueba1.h: 38:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  6530  0058CA  9080               	bcf	3968,0,c	;volatile
  6531                           
  6532                           ; BSR set to: 0
  6533  0058CC  8280               	bsf	3968,1,c	;volatile
  6534                           
  6535                           ; BSR set to: 0
  6536  0058CE  9480               	bcf	3968,2,c	;volatile
  6537                           
  6538                           ; BSR set to: 0
  6539  0058D0  9680               	bcf	3968,3,c	;volatile
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;./Prueba1.h: 39:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6543  0058D2  0E14               	movlw	20
  6544  0058D4  6E01               	movwf	??_Wave_stepper& (0+255),c
  6545  0058D6  0E7A               	movlw	122
  6546  0058D8                     u3117:
  6547  0058D8  2EE8               	decfsz	wreg,f,c
  6548  0058DA  D7FE               	bra	u3117
  6549  0058DC  2E01               	decfsz	??_Wave_stepper& (0+255),f,c
  6550  0058DE  D7FC               	bra	u3117
  6551  0058E0  0E01               	movlw	1
  6552  0058E2  0100               	movlb	0	; () banked
  6553  0058E4  2768               	addwf	_contador& (0+255),f,b
  6554  0058E6  0E00               	movlw	0
  6555  0058E8  2369               	addwfc	(_contador+1)& (0+255),f,b
  6556  0058EA  236A               	addwfc	(_contador+2)& (0+255),f,b
  6557  0058EC  236B               	addwfc	(_contador+3)& (0+255),f,b
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;./Prueba1.h: 40:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  6561  0058EE  9080               	bcf	3968,0,c	;volatile
  6562                           
  6563                           ; BSR set to: 0
  6564  0058F0  9280               	bcf	3968,1,c	;volatile
  6565                           
  6566                           ; BSR set to: 0
  6567  0058F2  8480               	bsf	3968,2,c	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570  0058F4  9680               	bcf	3968,3,c	;volatile
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;./Prueba1.h: 41:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6574  0058F6  0E14               	movlw	20
  6575  0058F8  6E01               	movwf	??_Wave_stepper& (0+255),c
  6576  0058FA  0E7A               	movlw	122
  6577  0058FC                     u3127:
  6578  0058FC  2EE8               	decfsz	wreg,f,c
  6579  0058FE  D7FE               	bra	u3127
  6580  005900  2E01               	decfsz	??_Wave_stepper& (0+255),f,c
  6581  005902  D7FC               	bra	u3127
  6582  005904  0E01               	movlw	1
  6583  005906  0100               	movlb	0	; () banked
  6584  005908  2768               	addwf	_contador& (0+255),f,b
  6585  00590A  0E00               	movlw	0
  6586  00590C  2369               	addwfc	(_contador+1)& (0+255),f,b
  6587  00590E  236A               	addwfc	(_contador+2)& (0+255),f,b
  6588  005910  236B               	addwfc	(_contador+3)& (0+255),f,b
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;./Prueba1.h: 42:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  6592  005912  9080               	bcf	3968,0,c	;volatile
  6593                           
  6594                           ; BSR set to: 0
  6595  005914  9280               	bcf	3968,1,c	;volatile
  6596                           
  6597                           ; BSR set to: 0
  6598  005916  9480               	bcf	3968,2,c	;volatile
  6599                           
  6600                           ; BSR set to: 0
  6601  005918  8680               	bsf	3968,3,c	;volatile
  6602                           
  6603                           ;./Prueba1.h: 43:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6604  00591A  0E14               	movlw	20
  6605  00591C  6E01               	movwf	??_Wave_stepper& (0+255),c
  6606  00591E  0E7A               	movlw	122
  6607  005920                     u3137:
  6608  005920  2EE8               	decfsz	wreg,f,c
  6609  005922  D7FE               	bra	u3137
  6610  005924  2E01               	decfsz	??_Wave_stepper& (0+255),f,c
  6611  005926  D7FC               	bra	u3137
  6612  005928  0E01               	movlw	1
  6613  00592A  0100               	movlb	0	; () banked
  6614  00592C  2768               	addwf	_contador& (0+255),f,b
  6615  00592E  0E00               	movlw	0
  6616  005930  2369               	addwfc	(_contador+1)& (0+255),f,b
  6617  005932  236A               	addwfc	(_contador+2)& (0+255),f,b
  6618  005934  236B               	addwfc	(_contador+3)& (0+255),f,b
  6619                           
  6620                           ; BSR set to: 0
  6621  005936  0012               	return		;funcret
  6622  005938                     __end_of_Wave_stepper:
  6623                           	opt callstack 0
  6624                           
  6625 ;; *************** function _opt_Half_stepper *****************
  6626 ;; Defined at:
  6627 ;;		line 146 in file "./Prueba1.h"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  steps           4   10[COMRAM] long 
  6630 ;;  direttion       2   14[COMRAM] short 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6642 ;;      Params:         6       0       0       0       0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6644 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6645 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6646 ;;Total ram usage:        8 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    2
  6649 ;; This function calls:
  6650 ;;		_Half_stepper
  6651 ;;		_Half_stepper_izq
  6652 ;;		_Lcd_Cmd
  6653 ;;		_Lcd_Out
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text18
  6660  005C04                     __ptext18:
  6661                           	opt callstack 0
  6662  005C04                     _opt_Half_stepper:
  6663                           	opt callstack 28
  6664                           
  6665                           ;./Prueba1.h: 147:     if(direttion==1){contador=0;
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;incstack = 0
  6669  005C04  040F               	decf	opt_Half_stepper@direttion,w,c
  6670  005C06  1010               	iorwf	opt_Half_stepper@direttion+1,w,c
  6671  005C08  A4D8               	btfss	status,2,c
  6672  005C0A  D024               	goto	l3423
  6673  005C0C  0E00               	movlw	0
  6674  005C0E  0100               	movlb	0	; () banked
  6675  005C10  6F68               	movwf	_contador& (0+255),b
  6676  005C12  0E00               	movlw	0
  6677  005C14  6F69               	movwf	(_contador+1)& (0+255),b
  6678  005C16  0E00               	movlw	0
  6679  005C18  6F6A               	movwf	(_contador+2)& (0+255),b
  6680  005C1A  0E00               	movlw	0
  6681  005C1C  6F6B               	movwf	(_contador+3)& (0+255),b
  6682                           
  6683                           ;./Prueba1.h: 148:         while(steps>contador){
  6684  005C1E  D002               	goto	l3419
  6685  005C20                     l3417:
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;./Prueba1.h: 149:             Half_stepper();
  6689  005C20  EC1E  F030         	call	_Half_stepper	;wreg free
  6690  005C24                     l3419:
  6691                           
  6692                           ;./Prueba1.h: 148:         while(steps>contador){
  6693  005C24  500B               	movf	opt_Half_stepper@steps,w,c
  6694  005C26  0100               	movlb	0	; () banked
  6695  005C28  5D68               	subwf	_contador& (0+255),w,b
  6696  005C2A  500C               	movf	opt_Half_stepper@steps+1,w,c
  6697  005C2C  5969               	subwfb	(_contador+1)& (0+255),w,b
  6698  005C2E  500D               	movf	opt_Half_stepper@steps+2,w,c
  6699  005C30  596A               	subwfb	(_contador+2)& (0+255),w,b
  6700  005C32  516B               	movf	(_contador+3)& (0+255),w,b
  6701  005C34  0A80               	xorlw	128
  6702  005C36  6E11               	movwf	??_opt_Half_stepper& (0+255),c
  6703  005C38  500E               	movf	opt_Half_stepper@steps+3,w,c
  6704  005C3A  0A80               	xorlw	128
  6705  005C3C  5811               	subwfb	??_opt_Half_stepper& (0+255),w,c
  6706  005C3E  A0D8               	btfss	status,0,c
  6707  005C40  D7EF               	goto	l3417
  6708  005C42                     u1840:
  6709                           
  6710                           ; BSR set to: 0
  6711  005C42  0E00               	movlw	0
  6712  005C44  6F68               	movwf	_contador& (0+255),b
  6713  005C46  0E00               	movlw	0
  6714  005C48  6F69               	movwf	(_contador+1)& (0+255),b
  6715  005C4A  0E00               	movlw	0
  6716  005C4C  6F6A               	movwf	(_contador+2)& (0+255),b
  6717  005C4E  0E00               	movlw	0
  6718  005C50  6F6B               	movwf	(_contador+3)& (0+255),b
  6719                           
  6720                           ;./Prueba1.h: 152:     }
  6721  005C52  0012               	return	
  6722  005C54                     l3423:
  6723  005C54  0E02               	movlw	2
  6724  005C56  180F               	xorwf	opt_Half_stepper@direttion,w,c
  6725  005C58  1010               	iorwf	opt_Half_stepper@direttion+1,w,c
  6726  005C5A  A4D8               	btfss	status,2,c
  6727  005C5C  D01C               	goto	l3433
  6728  005C5E  0E00               	movlw	0
  6729  005C60  0100               	movlb	0	; () banked
  6730  005C62  6F68               	movwf	_contador& (0+255),b
  6731  005C64  0E00               	movlw	0
  6732  005C66  6F69               	movwf	(_contador+1)& (0+255),b
  6733  005C68  0E00               	movlw	0
  6734  005C6A  6F6A               	movwf	(_contador+2)& (0+255),b
  6735  005C6C  0E00               	movlw	0
  6736  005C6E  6F6B               	movwf	(_contador+3)& (0+255),b
  6737                           
  6738                           ;./Prueba1.h: 154:         while(steps>contador){
  6739  005C70  D002               	goto	l3429
  6740  005C72                     l3427:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;./Prueba1.h: 155:             Half_stepper_izq();
  6744  005C72  ECAF  F030         	call	_Half_stepper_izq	;wreg free
  6745  005C76                     l3429:
  6746                           
  6747                           ;./Prueba1.h: 154:         while(steps>contador){
  6748  005C76  500B               	movf	opt_Half_stepper@steps,w,c
  6749  005C78  0100               	movlb	0	; () banked
  6750  005C7A  5D68               	subwf	_contador& (0+255),w,b
  6751  005C7C  500C               	movf	opt_Half_stepper@steps+1,w,c
  6752  005C7E  5969               	subwfb	(_contador+1)& (0+255),w,b
  6753  005C80  500D               	movf	opt_Half_stepper@steps+2,w,c
  6754  005C82  596A               	subwfb	(_contador+2)& (0+255),w,b
  6755  005C84  516B               	movf	(_contador+3)& (0+255),w,b
  6756  005C86  0A80               	xorlw	128
  6757  005C88  6E11               	movwf	??_opt_Half_stepper& (0+255),c
  6758  005C8A  500E               	movf	opt_Half_stepper@steps+3,w,c
  6759  005C8C  0A80               	xorlw	128
  6760  005C8E  5811               	subwfb	??_opt_Half_stepper& (0+255),w,c
  6761  005C90  B0D8               	btfsc	status,0,c
  6762  005C92  D7D7               	goto	u1840
  6763  005C94  D7EE               	goto	l3427
  6764  005C96                     l3433:
  6765  005C96  0E00               	movlw	0
  6766  005C98  0100               	movlb	0	; () banked
  6767  005C9A  6F68               	movwf	_contador& (0+255),b
  6768  005C9C  0E00               	movlw	0
  6769  005C9E  6F69               	movwf	(_contador+1)& (0+255),b
  6770  005CA0  0E00               	movlw	0
  6771  005CA2  6F6A               	movwf	(_contador+2)& (0+255),b
  6772  005CA4  0E00               	movlw	0
  6773  005CA6  6F6B               	movwf	(_contador+3)& (0+255),b
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;./Prueba1.h: 160:         Lcd_Cmd(1);
  6777  005CA8  0E01               	movlw	1
  6778  005CAA  EC8F  F02F         	call	_Lcd_Cmd
  6779                           
  6780                           ;./Prueba1.h: 161:         _delay((unsigned long)((100)*(12000000/4000.0)));
  6781  005CAE  0E02               	movlw	2
  6782  005CB0  6E12               	movwf	(??_opt_Half_stepper+1)& (0+255),c
  6783  005CB2  0E86               	movlw	134
  6784  005CB4  6E11               	movwf	??_opt_Half_stepper& (0+255),c
  6785  005CB6  0E99               	movlw	153
  6786  005CB8                     u3147:
  6787  005CB8  2EE8               	decfsz	wreg,f,c
  6788  005CBA  D7FE               	bra	u3147
  6789  005CBC  2E11               	decfsz	??_opt_Half_stepper& (0+255),f,c
  6790  005CBE  D7FC               	bra	u3147
  6791  005CC0  2E12               	decfsz	(??_opt_Half_stepper+1)& (0+255),f,c
  6792  005CC2  D7FA               	bra	u3147
  6793  005CC4  F000               	nop	
  6794                           
  6795                           ;./Prueba1.h: 162:         Lcd_Out(1,4,"Opcion");
  6796  005CC6  0E04               	movlw	4
  6797  005CC8  6E04               	movwf	Lcd_Out@x,c
  6798  005CCA  0EE6               	movlw	low STR_1
  6799  005CCC  6E05               	movwf	Lcd_Out@buffer,c
  6800  005CCE  0E7F               	movlw	high STR_1
  6801  005CD0  6E06               	movwf	Lcd_Out@buffer+1,c
  6802  005CD2  0E01               	movlw	1
  6803  005CD4  EC86  F02B         	call	_Lcd_Out
  6804                           
  6805                           ;./Prueba1.h: 163:         Lcd_Out(2,2,"incorrecta");
  6806  005CD8  0E02               	movlw	2
  6807  005CDA  6E04               	movwf	Lcd_Out@x,c
  6808  005CDC  0E83               	movlw	low STR_2
  6809  005CDE  6E05               	movwf	Lcd_Out@buffer,c
  6810  005CE0  0E7F               	movlw	high STR_2
  6811  005CE2  6E06               	movwf	Lcd_Out@buffer+1,c
  6812  005CE4  0E02               	movlw	2
  6813  005CE6  EC86  F02B         	call	_Lcd_Out
  6814                           
  6815                           ;./Prueba1.h: 164:         _delay((unsigned long)((1000)*(12000000/4000.0)));
  6816  005CEA  0E10               	movlw	16
  6817  005CEC  6E12               	movwf	(??_opt_Half_stepper+1)& (0+255),c
  6818  005CEE  0E39               	movlw	57
  6819  005CF0  6E11               	movwf	??_opt_Half_stepper& (0+255),c
  6820  005CF2  0E0E               	movlw	14
  6821  005CF4                     u3157:
  6822  005CF4  2EE8               	decfsz	wreg,f,c
  6823  005CF6  D7FE               	bra	u3157
  6824  005CF8  2E11               	decfsz	??_opt_Half_stepper& (0+255),f,c
  6825  005CFA  D7FC               	bra	u3157
  6826  005CFC  2E12               	decfsz	(??_opt_Half_stepper+1)& (0+255),f,c
  6827  005CFE  D7FA               	bra	u3157
  6828                           
  6829                           ;./Prueba1.h: 165:         Lcd_Cmd(1);
  6830  005D00  0E01               	movlw	1
  6831  005D02  EC8F  F02F         	call	_Lcd_Cmd
  6832  005D06  0012               	return		;funcret
  6833  005D08                     __end_of_opt_Half_stepper:
  6834                           	opt callstack 0
  6835                           
  6836 ;; *************** function _Half_stepper_izq *****************
  6837 ;; Defined at:
  6838 ;;		line 84 in file "./Prueba1.h"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6854 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6856 ;;Total ram usage:        1 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_opt_Half_stepper
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text19
  6866  00615E                     __ptext19:
  6867                           	opt callstack 0
  6868  00615E                     _Half_stepper_izq:
  6869                           	opt callstack 29
  6870                           
  6871                           ;./Prueba1.h: 85:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  6872                           
  6873                           ;incstack = 0
  6874  00615E  8080               	bsf	3968,0,c	;volatile
  6875  006160  9280               	bcf	3968,1,c	;volatile
  6876  006162  9480               	bcf	3968,2,c	;volatile
  6877  006164  9680               	bcf	3968,3,c	;volatile
  6878                           
  6879                           ;./Prueba1.h: 86:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6880  006166  0E14               	movlw	20
  6881  006168  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  6882  00616A  0E7A               	movlw	122
  6883  00616C                     u3167:
  6884  00616C  2EE8               	decfsz	wreg,f,c
  6885  00616E  D7FE               	bra	u3167
  6886  006170  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  6887  006172  D7FC               	bra	u3167
  6888  006174  0E01               	movlw	1
  6889  006176  0100               	movlb	0	; () banked
  6890  006178  2768               	addwf	_contador& (0+255),f,b
  6891  00617A  0E00               	movlw	0
  6892  00617C  2369               	addwfc	(_contador+1)& (0+255),f,b
  6893  00617E  236A               	addwfc	(_contador+2)& (0+255),f,b
  6894  006180  236B               	addwfc	(_contador+3)& (0+255),f,b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;./Prueba1.h: 87:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  6898  006182  8080               	bsf	3968,0,c	;volatile
  6899                           
  6900                           ; BSR set to: 0
  6901  006184  9280               	bcf	3968,1,c	;volatile
  6902                           
  6903                           ; BSR set to: 0
  6904  006186  9480               	bcf	3968,2,c	;volatile
  6905                           
  6906                           ; BSR set to: 0
  6907  006188  8680               	bsf	3968,3,c	;volatile
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;./Prueba1.h: 88:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6911  00618A  0E14               	movlw	20
  6912  00618C  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  6913  00618E  0E7A               	movlw	122
  6914  006190                     u3177:
  6915  006190  2EE8               	decfsz	wreg,f,c
  6916  006192  D7FE               	bra	u3177
  6917  006194  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  6918  006196  D7FC               	bra	u3177
  6919  006198  0E01               	movlw	1
  6920  00619A  0100               	movlb	0	; () banked
  6921  00619C  2768               	addwf	_contador& (0+255),f,b
  6922  00619E  0E00               	movlw	0
  6923  0061A0  2369               	addwfc	(_contador+1)& (0+255),f,b
  6924  0061A2  236A               	addwfc	(_contador+2)& (0+255),f,b
  6925  0061A4  236B               	addwfc	(_contador+3)& (0+255),f,b
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;./Prueba1.h: 89:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  6929  0061A6  9080               	bcf	3968,0,c	;volatile
  6930                           
  6931                           ; BSR set to: 0
  6932  0061A8  9280               	bcf	3968,1,c	;volatile
  6933                           
  6934                           ; BSR set to: 0
  6935  0061AA  9480               	bcf	3968,2,c	;volatile
  6936                           
  6937                           ; BSR set to: 0
  6938  0061AC  8680               	bsf	3968,3,c	;volatile
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;./Prueba1.h: 90:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6942  0061AE  0E14               	movlw	20
  6943  0061B0  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  6944  0061B2  0E7A               	movlw	122
  6945  0061B4                     u3187:
  6946  0061B4  2EE8               	decfsz	wreg,f,c
  6947  0061B6  D7FE               	bra	u3187
  6948  0061B8  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  6949  0061BA  D7FC               	bra	u3187
  6950  0061BC  0E01               	movlw	1
  6951  0061BE  0100               	movlb	0	; () banked
  6952  0061C0  2768               	addwf	_contador& (0+255),f,b
  6953  0061C2  0E00               	movlw	0
  6954  0061C4  2369               	addwfc	(_contador+1)& (0+255),f,b
  6955  0061C6  236A               	addwfc	(_contador+2)& (0+255),f,b
  6956  0061C8  236B               	addwfc	(_contador+3)& (0+255),f,b
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;./Prueba1.h: 91:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=1
      +                          ;
  6960  0061CA  9080               	bcf	3968,0,c	;volatile
  6961                           
  6962                           ; BSR set to: 0
  6963  0061CC  9280               	bcf	3968,1,c	;volatile
  6964                           
  6965                           ; BSR set to: 0
  6966  0061CE  8480               	bsf	3968,2,c	;volatile
  6967                           
  6968                           ; BSR set to: 0
  6969  0061D0  8680               	bsf	3968,3,c	;volatile
  6970                           
  6971                           ;./Prueba1.h: 92:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  6972  0061D2  0E14               	movlw	20
  6973  0061D4  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  6974  0061D6  0E7A               	movlw	122
  6975  0061D8                     u3197:
  6976  0061D8  2EE8               	decfsz	wreg,f,c
  6977  0061DA  D7FE               	bra	u3197
  6978  0061DC  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  6979  0061DE  D7FC               	bra	u3197
  6980  0061E0  0E01               	movlw	1
  6981  0061E2  0100               	movlb	0	; () banked
  6982  0061E4  2768               	addwf	_contador& (0+255),f,b
  6983  0061E6  0E00               	movlw	0
  6984  0061E8  2369               	addwfc	(_contador+1)& (0+255),f,b
  6985  0061EA  236A               	addwfc	(_contador+2)& (0+255),f,b
  6986  0061EC  236B               	addwfc	(_contador+3)& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;./Prueba1.h: 93:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  6990  0061EE  9080               	bcf	3968,0,c	;volatile
  6991                           
  6992                           ; BSR set to: 0
  6993  0061F0  9280               	bcf	3968,1,c	;volatile
  6994                           
  6995                           ; BSR set to: 0
  6996  0061F2  8480               	bsf	3968,2,c	;volatile
  6997                           
  6998                           ; BSR set to: 0
  6999  0061F4  9680               	bcf	3968,3,c	;volatile
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;./Prueba1.h: 94:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7003  0061F6  0E14               	movlw	20
  7004  0061F8  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  7005  0061FA  0E7A               	movlw	122
  7006  0061FC                     u3207:
  7007  0061FC  2EE8               	decfsz	wreg,f,c
  7008  0061FE  D7FE               	bra	u3207
  7009  006200  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  7010  006202  D7FC               	bra	u3207
  7011  006204  0E01               	movlw	1
  7012  006206  0100               	movlb	0	; () banked
  7013  006208  2768               	addwf	_contador& (0+255),f,b
  7014  00620A  0E00               	movlw	0
  7015  00620C  2369               	addwfc	(_contador+1)& (0+255),f,b
  7016  00620E  236A               	addwfc	(_contador+2)& (0+255),f,b
  7017  006210  236B               	addwfc	(_contador+3)& (0+255),f,b
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;./Prueba1.h: 95:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  7021  006212  9080               	bcf	3968,0,c	;volatile
  7022                           
  7023                           ; BSR set to: 0
  7024  006214  8280               	bsf	3968,1,c	;volatile
  7025                           
  7026                           ; BSR set to: 0
  7027  006216  8480               	bsf	3968,2,c	;volatile
  7028                           
  7029                           ; BSR set to: 0
  7030  006218  9680               	bcf	3968,3,c	;volatile
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;./Prueba1.h: 96:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7034  00621A  0E14               	movlw	20
  7035  00621C  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  7036  00621E  0E7A               	movlw	122
  7037  006220                     u3217:
  7038  006220  2EE8               	decfsz	wreg,f,c
  7039  006222  D7FE               	bra	u3217
  7040  006224  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  7041  006226  D7FC               	bra	u3217
  7042  006228  0E01               	movlw	1
  7043  00622A  0100               	movlb	0	; () banked
  7044  00622C  2768               	addwf	_contador& (0+255),f,b
  7045  00622E  0E00               	movlw	0
  7046  006230  2369               	addwfc	(_contador+1)& (0+255),f,b
  7047  006232  236A               	addwfc	(_contador+2)& (0+255),f,b
  7048  006234  236B               	addwfc	(_contador+3)& (0+255),f,b
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;./Prueba1.h: 97:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7052  006236  9080               	bcf	3968,0,c	;volatile
  7053                           
  7054                           ; BSR set to: 0
  7055  006238  8280               	bsf	3968,1,c	;volatile
  7056                           
  7057                           ; BSR set to: 0
  7058  00623A  9480               	bcf	3968,2,c	;volatile
  7059                           
  7060                           ; BSR set to: 0
  7061  00623C  9680               	bcf	3968,3,c	;volatile
  7062                           
  7063                           ;./Prueba1.h: 98:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7064  00623E  0E14               	movlw	20
  7065  006240  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  7066  006242  0E7A               	movlw	122
  7067  006244                     u3227:
  7068  006244  2EE8               	decfsz	wreg,f,c
  7069  006246  D7FE               	bra	u3227
  7070  006248  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  7071  00624A  D7FC               	bra	u3227
  7072  00624C  0E01               	movlw	1
  7073  00624E  0100               	movlb	0	; () banked
  7074  006250  2768               	addwf	_contador& (0+255),f,b
  7075  006252  0E00               	movlw	0
  7076  006254  2369               	addwfc	(_contador+1)& (0+255),f,b
  7077  006256  236A               	addwfc	(_contador+2)& (0+255),f,b
  7078  006258  236B               	addwfc	(_contador+3)& (0+255),f,b
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;./Prueba1.h: 99:     PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7082  00625A  8080               	bsf	3968,0,c	;volatile
  7083                           
  7084                           ; BSR set to: 0
  7085  00625C  8280               	bsf	3968,1,c	;volatile
  7086                           
  7087                           ; BSR set to: 0
  7088  00625E  9480               	bcf	3968,2,c	;volatile
  7089                           
  7090                           ; BSR set to: 0
  7091  006260  9680               	bcf	3968,3,c	;volatile
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;./Prueba1.h: 100:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7095  006262  0E14               	movlw	20
  7096  006264  6E01               	movwf	??_Half_stepper_izq& (0+255),c
  7097  006266  0E7A               	movlw	122
  7098  006268                     u3237:
  7099  006268  2EE8               	decfsz	wreg,f,c
  7100  00626A  D7FE               	bra	u3237
  7101  00626C  2E01               	decfsz	??_Half_stepper_izq& (0+255),f,c
  7102  00626E  D7FC               	bra	u3237
  7103  006270  0E01               	movlw	1
  7104  006272  0100               	movlb	0	; () banked
  7105  006274  2768               	addwf	_contador& (0+255),f,b
  7106  006276  0E00               	movlw	0
  7107  006278  2369               	addwfc	(_contador+1)& (0+255),f,b
  7108  00627A  236A               	addwfc	(_contador+2)& (0+255),f,b
  7109  00627C  236B               	addwfc	(_contador+3)& (0+255),f,b
  7110                           
  7111                           ; BSR set to: 0
  7112  00627E  0012               	return		;funcret
  7113  006280                     __end_of_Half_stepper_izq:
  7114                           	opt callstack 0
  7115                           
  7116 ;; *************** function _Half_stepper *****************
  7117 ;; Defined at:
  7118 ;;		line 45 in file "./Prueba1.h"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      void 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7134 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7136 ;;Total ram usage:        1 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_opt_Half_stepper
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text20
  7146  00603C                     __ptext20:
  7147                           	opt callstack 0
  7148  00603C                     _Half_stepper:
  7149                           	opt callstack 29
  7150                           
  7151                           ;./Prueba1.h: 46:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;incstack = 0
  7155  00603C  8080               	bsf	3968,0,c	;volatile
  7156  00603E  9280               	bcf	3968,1,c	;volatile
  7157  006040  9480               	bcf	3968,2,c	;volatile
  7158  006042  9680               	bcf	3968,3,c	;volatile
  7159                           
  7160                           ;./Prueba1.h: 47:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7161  006044  0E14               	movlw	20
  7162  006046  6E01               	movwf	??_Half_stepper& (0+255),c
  7163  006048  0E7A               	movlw	122
  7164  00604A                     u3247:
  7165  00604A  2EE8               	decfsz	wreg,f,c
  7166  00604C  D7FE               	bra	u3247
  7167  00604E  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7168  006050  D7FC               	bra	u3247
  7169  006052  0E01               	movlw	1
  7170  006054  0100               	movlb	0	; () banked
  7171  006056  2768               	addwf	_contador& (0+255),f,b
  7172  006058  0E00               	movlw	0
  7173  00605A  2369               	addwfc	(_contador+1)& (0+255),f,b
  7174  00605C  236A               	addwfc	(_contador+2)& (0+255),f,b
  7175  00605E  236B               	addwfc	(_contador+3)& (0+255),f,b
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;./Prueba1.h: 48:     PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7179  006060  8080               	bsf	3968,0,c	;volatile
  7180                           
  7181                           ; BSR set to: 0
  7182  006062  8280               	bsf	3968,1,c	;volatile
  7183                           
  7184                           ; BSR set to: 0
  7185  006064  9480               	bcf	3968,2,c	;volatile
  7186                           
  7187                           ; BSR set to: 0
  7188  006066  9680               	bcf	3968,3,c	;volatile
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;./Prueba1.h: 49:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7192  006068  0E14               	movlw	20
  7193  00606A  6E01               	movwf	??_Half_stepper& (0+255),c
  7194  00606C  0E7A               	movlw	122
  7195  00606E                     u3257:
  7196  00606E  2EE8               	decfsz	wreg,f,c
  7197  006070  D7FE               	bra	u3257
  7198  006072  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7199  006074  D7FC               	bra	u3257
  7200  006076  0E01               	movlw	1
  7201  006078  0100               	movlb	0	; () banked
  7202  00607A  2768               	addwf	_contador& (0+255),f,b
  7203  00607C  0E00               	movlw	0
  7204  00607E  2369               	addwfc	(_contador+1)& (0+255),f,b
  7205  006080  236A               	addwfc	(_contador+2)& (0+255),f,b
  7206  006082  236B               	addwfc	(_contador+3)& (0+255),f,b
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;./Prueba1.h: 50:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7210  006084  9080               	bcf	3968,0,c	;volatile
  7211                           
  7212                           ; BSR set to: 0
  7213  006086  8280               	bsf	3968,1,c	;volatile
  7214                           
  7215                           ; BSR set to: 0
  7216  006088  9480               	bcf	3968,2,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219  00608A  9680               	bcf	3968,3,c	;volatile
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;./Prueba1.h: 51:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7223  00608C  0E14               	movlw	20
  7224  00608E  6E01               	movwf	??_Half_stepper& (0+255),c
  7225  006090  0E7A               	movlw	122
  7226  006092                     u3267:
  7227  006092  2EE8               	decfsz	wreg,f,c
  7228  006094  D7FE               	bra	u3267
  7229  006096  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7230  006098  D7FC               	bra	u3267
  7231  00609A  0E01               	movlw	1
  7232  00609C  0100               	movlb	0	; () banked
  7233  00609E  2768               	addwf	_contador& (0+255),f,b
  7234  0060A0  0E00               	movlw	0
  7235  0060A2  2369               	addwfc	(_contador+1)& (0+255),f,b
  7236  0060A4  236A               	addwfc	(_contador+2)& (0+255),f,b
  7237  0060A6  236B               	addwfc	(_contador+3)& (0+255),f,b
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;./Prueba1.h: 52:     PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  7241  0060A8  8080               	bsf	3968,0,c	;volatile
  7242                           
  7243                           ; BSR set to: 0
  7244  0060AA  8280               	bsf	3968,1,c	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247  0060AC  8480               	bsf	3968,2,c	;volatile
  7248                           
  7249                           ; BSR set to: 0
  7250  0060AE  9680               	bcf	3968,3,c	;volatile
  7251                           
  7252                           ;./Prueba1.h: 53:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7253  0060B0  0E14               	movlw	20
  7254  0060B2  6E01               	movwf	??_Half_stepper& (0+255),c
  7255  0060B4  0E7A               	movlw	122
  7256  0060B6                     u3277:
  7257  0060B6  2EE8               	decfsz	wreg,f,c
  7258  0060B8  D7FE               	bra	u3277
  7259  0060BA  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7260  0060BC  D7FC               	bra	u3277
  7261  0060BE  0E01               	movlw	1
  7262  0060C0  0100               	movlb	0	; () banked
  7263  0060C2  2768               	addwf	_contador& (0+255),f,b
  7264  0060C4  0E00               	movlw	0
  7265  0060C6  2369               	addwfc	(_contador+1)& (0+255),f,b
  7266  0060C8  236A               	addwfc	(_contador+2)& (0+255),f,b
  7267  0060CA  236B               	addwfc	(_contador+3)& (0+255),f,b
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;./Prueba1.h: 54:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  7271  0060CC  9080               	bcf	3968,0,c	;volatile
  7272                           
  7273                           ; BSR set to: 0
  7274  0060CE  9280               	bcf	3968,1,c	;volatile
  7275                           
  7276                           ; BSR set to: 0
  7277  0060D0  8480               	bsf	3968,2,c	;volatile
  7278                           
  7279                           ; BSR set to: 0
  7280  0060D2  9680               	bcf	3968,3,c	;volatile
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;./Prueba1.h: 55:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7284  0060D4  0E14               	movlw	20
  7285  0060D6  6E01               	movwf	??_Half_stepper& (0+255),c
  7286  0060D8  0E7A               	movlw	122
  7287  0060DA                     u3287:
  7288  0060DA  2EE8               	decfsz	wreg,f,c
  7289  0060DC  D7FE               	bra	u3287
  7290  0060DE  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7291  0060E0  D7FC               	bra	u3287
  7292  0060E2  0E01               	movlw	1
  7293  0060E4  0100               	movlb	0	; () banked
  7294  0060E6  2768               	addwf	_contador& (0+255),f,b
  7295  0060E8  0E00               	movlw	0
  7296  0060EA  2369               	addwfc	(_contador+1)& (0+255),f,b
  7297  0060EC  236A               	addwfc	(_contador+2)& (0+255),f,b
  7298  0060EE  236B               	addwfc	(_contador+3)& (0+255),f,b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;./Prueba1.h: 56:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=1
      +                          ;
  7302  0060F0  9080               	bcf	3968,0,c	;volatile
  7303                           
  7304                           ; BSR set to: 0
  7305  0060F2  9280               	bcf	3968,1,c	;volatile
  7306                           
  7307                           ; BSR set to: 0
  7308  0060F4  8480               	bsf	3968,2,c	;volatile
  7309                           
  7310                           ; BSR set to: 0
  7311  0060F6  8680               	bsf	3968,3,c	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;./Prueba1.h: 57:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7315  0060F8  0E14               	movlw	20
  7316  0060FA  6E01               	movwf	??_Half_stepper& (0+255),c
  7317  0060FC  0E7A               	movlw	122
  7318  0060FE                     u3297:
  7319  0060FE  2EE8               	decfsz	wreg,f,c
  7320  006100  D7FE               	bra	u3297
  7321  006102  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7322  006104  D7FC               	bra	u3297
  7323  006106  0E01               	movlw	1
  7324  006108  0100               	movlb	0	; () banked
  7325  00610A  2768               	addwf	_contador& (0+255),f,b
  7326  00610C  0E00               	movlw	0
  7327  00610E  2369               	addwfc	(_contador+1)& (0+255),f,b
  7328  006110  236A               	addwfc	(_contador+2)& (0+255),f,b
  7329  006112  236B               	addwfc	(_contador+3)& (0+255),f,b
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;./Prueba1.h: 58:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  7333  006114  9080               	bcf	3968,0,c	;volatile
  7334                           
  7335                           ; BSR set to: 0
  7336  006116  9280               	bcf	3968,1,c	;volatile
  7337                           
  7338                           ; BSR set to: 0
  7339  006118  9480               	bcf	3968,2,c	;volatile
  7340                           
  7341                           ; BSR set to: 0
  7342  00611A  8680               	bsf	3968,3,c	;volatile
  7343                           
  7344                           ;./Prueba1.h: 59:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7345  00611C  0E14               	movlw	20
  7346  00611E  6E01               	movwf	??_Half_stepper& (0+255),c
  7347  006120  0E7A               	movlw	122
  7348  006122                     u3307:
  7349  006122  2EE8               	decfsz	wreg,f,c
  7350  006124  D7FE               	bra	u3307
  7351  006126  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7352  006128  D7FC               	bra	u3307
  7353  00612A  0E01               	movlw	1
  7354  00612C  0100               	movlb	0	; () banked
  7355  00612E  2768               	addwf	_contador& (0+255),f,b
  7356  006130  0E00               	movlw	0
  7357  006132  2369               	addwfc	(_contador+1)& (0+255),f,b
  7358  006134  236A               	addwfc	(_contador+2)& (0+255),f,b
  7359  006136  236B               	addwfc	(_contador+3)& (0+255),f,b
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;./Prueba1.h: 60:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  7363  006138  8080               	bsf	3968,0,c	;volatile
  7364                           
  7365                           ; BSR set to: 0
  7366  00613A  9280               	bcf	3968,1,c	;volatile
  7367                           
  7368                           ; BSR set to: 0
  7369  00613C  9480               	bcf	3968,2,c	;volatile
  7370                           
  7371                           ; BSR set to: 0
  7372  00613E  8680               	bsf	3968,3,c	;volatile
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;./Prueba1.h: 61:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7376  006140  0E14               	movlw	20
  7377  006142  6E01               	movwf	??_Half_stepper& (0+255),c
  7378  006144  0E7A               	movlw	122
  7379  006146                     u3317:
  7380  006146  2EE8               	decfsz	wreg,f,c
  7381  006148  D7FE               	bra	u3317
  7382  00614A  2E01               	decfsz	??_Half_stepper& (0+255),f,c
  7383  00614C  D7FC               	bra	u3317
  7384  00614E  0E01               	movlw	1
  7385  006150  0100               	movlb	0	; () banked
  7386  006152  2768               	addwf	_contador& (0+255),f,b
  7387  006154  0E00               	movlw	0
  7388  006156  2369               	addwfc	(_contador+1)& (0+255),f,b
  7389  006158  236A               	addwfc	(_contador+2)& (0+255),f,b
  7390  00615A  236B               	addwfc	(_contador+3)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  00615C  0012               	return		;funcret
  7394  00615E                     __end_of_Half_stepper:
  7395                           	opt callstack 0
  7396                           
  7397 ;; *************** function _opt_Full_stepper *****************
  7398 ;; Defined at:
  7399 ;;		line 102 in file "./Prueba1.h"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  steps           4   10[COMRAM] long 
  7402 ;;  direttion       2   14[COMRAM] short 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7414 ;;      Params:         6       0       0       0       0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7416 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7417 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7418 ;;Total ram usage:        8 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    2
  7421 ;; This function calls:
  7422 ;;		_Full_stepper
  7423 ;;		_Full_stepper_izq
  7424 ;;		_Lcd_Cmd
  7425 ;;		_Lcd_Out
  7426 ;; This function is called by:
  7427 ;;		_main
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text21
  7432  005B00                     __ptext21:
  7433                           	opt callstack 0
  7434  005B00                     _opt_Full_stepper:
  7435                           	opt callstack 28
  7436                           
  7437                           ;./Prueba1.h: 103:     if(direttion==1){contador=0;
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;incstack = 0
  7441  005B00  040F               	decf	opt_Full_stepper@direttion,w,c
  7442  005B02  1010               	iorwf	opt_Full_stepper@direttion+1,w,c
  7443  005B04  A4D8               	btfss	status,2,c
  7444  005B06  D024               	goto	l3355
  7445  005B08  0E00               	movlw	0
  7446  005B0A  0100               	movlb	0	; () banked
  7447  005B0C  6F68               	movwf	_contador& (0+255),b
  7448  005B0E  0E00               	movlw	0
  7449  005B10  6F69               	movwf	(_contador+1)& (0+255),b
  7450  005B12  0E00               	movlw	0
  7451  005B14  6F6A               	movwf	(_contador+2)& (0+255),b
  7452  005B16  0E00               	movlw	0
  7453  005B18  6F6B               	movwf	(_contador+3)& (0+255),b
  7454                           
  7455                           ;./Prueba1.h: 104:         while(steps>contador){
  7456  005B1A  D002               	goto	l3351
  7457  005B1C                     l3349:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;./Prueba1.h: 105:             Full_stepper();
  7461  005B1C  ECC1  F02B         	call	_Full_stepper	;wreg free
  7462  005B20                     l3351:
  7463                           
  7464                           ;./Prueba1.h: 104:         while(steps>contador){
  7465  005B20  500B               	movf	opt_Full_stepper@steps,w,c
  7466  005B22  0100               	movlb	0	; () banked
  7467  005B24  5D68               	subwf	_contador& (0+255),w,b
  7468  005B26  500C               	movf	opt_Full_stepper@steps+1,w,c
  7469  005B28  5969               	subwfb	(_contador+1)& (0+255),w,b
  7470  005B2A  500D               	movf	opt_Full_stepper@steps+2,w,c
  7471  005B2C  596A               	subwfb	(_contador+2)& (0+255),w,b
  7472  005B2E  516B               	movf	(_contador+3)& (0+255),w,b
  7473  005B30  0A80               	xorlw	128
  7474  005B32  6E11               	movwf	??_opt_Full_stepper& (0+255),c
  7475  005B34  500E               	movf	opt_Full_stepper@steps+3,w,c
  7476  005B36  0A80               	xorlw	128
  7477  005B38  5811               	subwfb	??_opt_Full_stepper& (0+255),w,c
  7478  005B3A  A0D8               	btfss	status,0,c
  7479  005B3C  D7EF               	goto	l3349
  7480  005B3E                     u1760:
  7481                           
  7482                           ; BSR set to: 0
  7483  005B3E  0E00               	movlw	0
  7484  005B40  6F68               	movwf	_contador& (0+255),b
  7485  005B42  0E00               	movlw	0
  7486  005B44  6F69               	movwf	(_contador+1)& (0+255),b
  7487  005B46  0E00               	movlw	0
  7488  005B48  6F6A               	movwf	(_contador+2)& (0+255),b
  7489  005B4A  0E00               	movlw	0
  7490  005B4C  6F6B               	movwf	(_contador+3)& (0+255),b
  7491                           
  7492                           ;./Prueba1.h: 108:     }
  7493  005B4E  0012               	return	
  7494  005B50                     l3355:
  7495  005B50  0E02               	movlw	2
  7496  005B52  180F               	xorwf	opt_Full_stepper@direttion,w,c
  7497  005B54  1010               	iorwf	opt_Full_stepper@direttion+1,w,c
  7498  005B56  A4D8               	btfss	status,2,c
  7499  005B58  D01C               	goto	l3365
  7500  005B5A  0E00               	movlw	0
  7501  005B5C  0100               	movlb	0	; () banked
  7502  005B5E  6F68               	movwf	_contador& (0+255),b
  7503  005B60  0E00               	movlw	0
  7504  005B62  6F69               	movwf	(_contador+1)& (0+255),b
  7505  005B64  0E00               	movlw	0
  7506  005B66  6F6A               	movwf	(_contador+2)& (0+255),b
  7507  005B68  0E00               	movlw	0
  7508  005B6A  6F6B               	movwf	(_contador+3)& (0+255),b
  7509                           
  7510                           ;./Prueba1.h: 110:         while(steps>contador){
  7511  005B6C  D002               	goto	l3361
  7512  005B6E                     l3359:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;./Prueba1.h: 111:             Full_stepper_izq();
  7516  005B6E  EC0A  F02C         	call	_Full_stepper_izq	;wreg free
  7517  005B72                     l3361:
  7518                           
  7519                           ;./Prueba1.h: 110:         while(steps>contador){
  7520  005B72  500B               	movf	opt_Full_stepper@steps,w,c
  7521  005B74  0100               	movlb	0	; () banked
  7522  005B76  5D68               	subwf	_contador& (0+255),w,b
  7523  005B78  500C               	movf	opt_Full_stepper@steps+1,w,c
  7524  005B7A  5969               	subwfb	(_contador+1)& (0+255),w,b
  7525  005B7C  500D               	movf	opt_Full_stepper@steps+2,w,c
  7526  005B7E  596A               	subwfb	(_contador+2)& (0+255),w,b
  7527  005B80  516B               	movf	(_contador+3)& (0+255),w,b
  7528  005B82  0A80               	xorlw	128
  7529  005B84  6E11               	movwf	??_opt_Full_stepper& (0+255),c
  7530  005B86  500E               	movf	opt_Full_stepper@steps+3,w,c
  7531  005B88  0A80               	xorlw	128
  7532  005B8A  5811               	subwfb	??_opt_Full_stepper& (0+255),w,c
  7533  005B8C  B0D8               	btfsc	status,0,c
  7534  005B8E  D7D7               	goto	u1760
  7535  005B90  D7EE               	goto	l3359
  7536  005B92                     l3365:
  7537  005B92  0E00               	movlw	0
  7538  005B94  0100               	movlb	0	; () banked
  7539  005B96  6F68               	movwf	_contador& (0+255),b
  7540  005B98  0E00               	movlw	0
  7541  005B9A  6F69               	movwf	(_contador+1)& (0+255),b
  7542  005B9C  0E00               	movlw	0
  7543  005B9E  6F6A               	movwf	(_contador+2)& (0+255),b
  7544  005BA0  0E00               	movlw	0
  7545  005BA2  6F6B               	movwf	(_contador+3)& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;./Prueba1.h: 116:          Lcd_Cmd(1);
  7549  005BA4  0E01               	movlw	1
  7550  005BA6  EC8F  F02F         	call	_Lcd_Cmd
  7551                           
  7552                           ;./Prueba1.h: 117:         _delay((unsigned long)((100)*(12000000/4000.0)));
  7553  005BAA  0E02               	movlw	2
  7554  005BAC  6E12               	movwf	(??_opt_Full_stepper+1)& (0+255),c
  7555  005BAE  0E86               	movlw	134
  7556  005BB0  6E11               	movwf	??_opt_Full_stepper& (0+255),c
  7557  005BB2  0E99               	movlw	153
  7558  005BB4                     u3327:
  7559  005BB4  2EE8               	decfsz	wreg,f,c
  7560  005BB6  D7FE               	bra	u3327
  7561  005BB8  2E11               	decfsz	??_opt_Full_stepper& (0+255),f,c
  7562  005BBA  D7FC               	bra	u3327
  7563  005BBC  2E12               	decfsz	(??_opt_Full_stepper+1)& (0+255),f,c
  7564  005BBE  D7FA               	bra	u3327
  7565  005BC0  F000               	nop	
  7566                           
  7567                           ;./Prueba1.h: 118:         Lcd_Out(1,4,"Opcion");
  7568  005BC2  0E04               	movlw	4
  7569  005BC4  6E04               	movwf	Lcd_Out@x,c
  7570  005BC6  0EE6               	movlw	low STR_1
  7571  005BC8  6E05               	movwf	Lcd_Out@buffer,c
  7572  005BCA  0E7F               	movlw	high STR_1
  7573  005BCC  6E06               	movwf	Lcd_Out@buffer+1,c
  7574  005BCE  0E01               	movlw	1
  7575  005BD0  EC86  F02B         	call	_Lcd_Out
  7576                           
  7577                           ;./Prueba1.h: 119:         Lcd_Out(2,2,"incorrecta");
  7578  005BD4  0E02               	movlw	2
  7579  005BD6  6E04               	movwf	Lcd_Out@x,c
  7580  005BD8  0E83               	movlw	low STR_2
  7581  005BDA  6E05               	movwf	Lcd_Out@buffer,c
  7582  005BDC  0E7F               	movlw	high STR_2
  7583  005BDE  6E06               	movwf	Lcd_Out@buffer+1,c
  7584  005BE0  0E02               	movlw	2
  7585  005BE2  EC86  F02B         	call	_Lcd_Out
  7586                           
  7587                           ;./Prueba1.h: 120:         _delay((unsigned long)((1000)*(12000000/4000.0)));
  7588  005BE6  0E10               	movlw	16
  7589  005BE8  6E12               	movwf	(??_opt_Full_stepper+1)& (0+255),c
  7590  005BEA  0E39               	movlw	57
  7591  005BEC  6E11               	movwf	??_opt_Full_stepper& (0+255),c
  7592  005BEE  0E0E               	movlw	14
  7593  005BF0                     u3337:
  7594  005BF0  2EE8               	decfsz	wreg,f,c
  7595  005BF2  D7FE               	bra	u3337
  7596  005BF4  2E11               	decfsz	??_opt_Full_stepper& (0+255),f,c
  7597  005BF6  D7FC               	bra	u3337
  7598  005BF8  2E12               	decfsz	(??_opt_Full_stepper+1)& (0+255),f,c
  7599  005BFA  D7FA               	bra	u3337
  7600                           
  7601                           ;./Prueba1.h: 121:         Lcd_Cmd(1);
  7602  005BFC  0E01               	movlw	1
  7603  005BFE  EC8F  F02F         	call	_Lcd_Cmd
  7604  005C02  0012               	return		;funcret
  7605  005C04                     __end_of_opt_Full_stepper:
  7606                           	opt callstack 0
  7607                           
  7608 ;; *************** function _Lcd_Out *****************
  7609 ;; Defined at:
  7610 ;;		line 94 in file "./flex_lcd.h"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  y               1    wreg     unsigned char 
  7613 ;;  x               1    3[COMRAM] unsigned char 
  7614 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  7615 ;;		 -> STR_84(10), STR_83(14), STR_82(11), STR_81(5), 
  7616 ;;		 -> STR_80(14), STR_79(13), STR_78(14), STR_77(10), 
  7617 ;;		 -> STR_76(13), STR_74(7), STR_73(11), STR_72(16), 
  7618 ;;		 -> STR_71(11), STR_70(11), STR_69(14), STR_67(5), 
  7619 ;;		 -> STR_66(13), STR_65(16), STR_64(11), STR_63(16), 
  7620 ;;		 -> STR_62(14), STR_61(16), STR_60(11), STR_59(14), 
  7621 ;;		 -> STR_58(13), STR_57(14), STR_56(10), STR_55(13), 
  7622 ;;		 -> STR_53(7), STR_52(11), STR_51(16), STR_50(11), 
  7623 ;;		 -> STR_49(11), STR_48(14), STR_46(5), STR_45(13), 
  7624 ;;		 -> STR_44(16), STR_43(11), STR_42(16), STR_41(14), 
  7625 ;;		 -> STR_40(16), STR_39(11), STR_38(14), STR_37(13), 
  7626 ;;		 -> STR_36(14), STR_35(10), STR_34(13), STR_32(7), 
  7627 ;;		 -> STR_31(11), STR_30(16), STR_29(11), STR_28(11), 
  7628 ;;		 -> STR_27(14), STR_25(5), STR_24(13), STR_23(16), 
  7629 ;;		 -> STR_22(11), STR_21(16), STR_20(14), STR_19(16), 
  7630 ;;		 -> STR_18(11), STR_16(15), STR_15(16), STR_14(11), 
  7631 ;;		 -> STR_13(9), STR_12(14), STR_11(9), STR_10(14), 
  7632 ;;		 -> STR_9(11), STR_8(10), STR_7(11), STR_6(11), 
  7633 ;;		 -> STR_5(7), STR_4(11), STR_3(7), STR_2(11), 
  7634 ;;		 -> STR_1(7), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  y               1    8[COMRAM] unsigned char 
  7637 ;;  data            1    9[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7647 ;;      Params:         3       0       0       0       0       0       0       0       0
  7648 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7649 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7650 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7651 ;;Total ram usage:        7 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    1
  7654 ;; This function calls:
  7655 ;;		_Lcd_Chr_CP
  7656 ;;		_Lcd_Cmd
  7657 ;; This function is called by:
  7658 ;;		_opt_Full_stepper
  7659 ;;		_opt_Wave_stepper
  7660 ;;		_opt_Half_stepper
  7661 ;;		_main
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text22
  7666  00570C                     __ptext22:
  7667                           	opt callstack 0
  7668  00570C                     _Lcd_Out:
  7669                           	opt callstack 28
  7670                           
  7671                           ;incstack = 0
  7672                           ;Lcd_Out@y stored from wreg
  7673  00570C  6E09               	movwf	Lcd_Out@y,c
  7674                           
  7675                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  7676  00570E  D00D               	goto	l2927
  7677  005710                     l2917:
  7678  005710  5004               	movf	Lcd_Out@x,w,c
  7679  005712  0F80               	addlw	128
  7680  005714  D008               	goto	L7
  7681  005716                     l2919:
  7682  005716  5004               	movf	Lcd_Out@x,w,c
  7683  005718  0FC0               	addlw	192
  7684  00571A  D005               	goto	L7
  7685  00571C                     l2921:
  7686  00571C  5004               	movf	Lcd_Out@x,w,c
  7687  00571E  0F94               	addlw	148
  7688  005720  D002               	goto	L7
  7689  005722                     l2923:
  7690  005722  5004               	movf	Lcd_Out@x,w,c
  7691  005724  0FD4               	addlw	212
  7692  005726                     L7:
  7693  005726  6E0A               	movwf	Lcd_Out@data,c
  7694  005728  D014               	goto	l2929
  7695  00572A                     l2927:
  7696  00572A  5009               	movf	Lcd_Out@y,w,c
  7697  00572C  6E07               	movwf	??_Lcd_Out& (0+255),c
  7698  00572E  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
  7699                           
  7700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7701                           ; Switch size 1, requested type "simple"
  7702                           ; Number of cases is 1, Range of values is 0 to 0
  7703                           ; switch strategies available:
  7704                           ; Name         Instructions Cycles
  7705                           ; simple_byte            4     3 (average)
  7706                           ;	Chosen strategy is simple_byte
  7707  005730  5008               	movf	??_Lcd_Out+1,w,c
  7708  005732  0A00               	xorlw	0	; case 0
  7709  005734  A4D8               	btfss	status,2,c
  7710  005736  D00D               	goto	l2929
  7711                           
  7712                           ; Switch size 1, requested type "simple"
  7713                           ; Number of cases is 4, Range of values is 1 to 4
  7714                           ; switch strategies available:
  7715                           ; Name         Instructions Cycles
  7716                           ; simple_byte           13     7 (average)
  7717                           ;	Chosen strategy is simple_byte
  7718  005738  5007               	movf	??_Lcd_Out,w,c
  7719  00573A  0A01               	xorlw	1	; case 1
  7720  00573C  B4D8               	btfsc	status,2,c
  7721  00573E  D7E8               	goto	l2917
  7722  005740  0A03               	xorlw	3	; case 2
  7723  005742  B4D8               	btfsc	status,2,c
  7724  005744  D7E8               	goto	l2919
  7725  005746  0A01               	xorlw	1	; case 3
  7726  005748  B4D8               	btfsc	status,2,c
  7727  00574A  D7E8               	goto	l2921
  7728  00574C  0A07               	xorlw	7	; case 4
  7729  00574E  B4D8               	btfsc	status,2,c
  7730  005750  D7E8               	goto	l2923
  7731  005752                     l2929:
  7732                           
  7733                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  7734  005752  500A               	movf	Lcd_Out@data,w,c
  7735  005754  EC8F  F02F         	call	_Lcd_Cmd
  7736                           
  7737                           ;./flex_lcd.h: 106: while(*buffer)
  7738  005758  D00A               	goto	l2935
  7739  00575A                     l2931:
  7740                           
  7741                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  7742  00575A  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7743  00575E  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7744  005762                     	if	0	;tblptru may be non-zero
  7745  005762                     	endif
  7746  005762                     	if	0	;tblptru may be non-zero
  7747  005762                     	endif
  7748  005762  0008               	tblrd		*
  7749  005764  50F5               	movf	tablat,w,c
  7750  005766  EC40  F031         	call	_Lcd_Chr_CP
  7751                           
  7752                           ;./flex_lcd.h: 109:     buffer++;
  7753  00576A  4A05               	infsnz	Lcd_Out@buffer,f,c
  7754  00576C  2A06               	incf	Lcd_Out@buffer+1,f,c
  7755  00576E                     l2935:
  7756                           
  7757                           ;./flex_lcd.h: 106: while(*buffer)
  7758  00576E  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7759  005772  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7760  005776                     	if	0	;tblptru may be non-zero
  7761  005776                     	endif
  7762  005776                     	if	0	;tblptru may be non-zero
  7763  005776                     	endif
  7764  005776  0008               	tblrd		*
  7765  005778  50F5               	movf	tablat,w,c
  7766  00577A  0900               	iorlw	0
  7767  00577C  B4D8               	btfsc	status,2,c
  7768  00577E  0012               	return	
  7769  005780  D7EC               	goto	l2931
  7770  005782                     __end_of_Lcd_Out:
  7771                           	opt callstack 0
  7772                           
  7773 ;; *************** function _Full_stepper_izq *****************
  7774 ;; Defined at:
  7775 ;;		line 64 in file "./Prueba1.h"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;		None
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;		None
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7789 ;;      Params:         0       0       0       0       0       0       0       0       0
  7790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7791 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7792 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7793 ;;Total ram usage:        1 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_opt_Full_stepper
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text23
  7803  005814                     __ptext23:
  7804                           	opt callstack 0
  7805  005814                     _Full_stepper_izq:
  7806                           	opt callstack 29
  7807                           
  7808                           ;./Prueba1.h: 65:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  7809                           
  7810                           ;incstack = 0
  7811  005814  8080               	bsf	3968,0,c	;volatile
  7812  005816  9280               	bcf	3968,1,c	;volatile
  7813  005818  9480               	bcf	3968,2,c	;volatile
  7814  00581A  8680               	bsf	3968,3,c	;volatile
  7815                           
  7816                           ;./Prueba1.h: 66:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7817  00581C  0E14               	movlw	20
  7818  00581E  6E01               	movwf	??_Full_stepper_izq& (0+255),c
  7819  005820  0E7A               	movlw	122
  7820  005822                     u3347:
  7821  005822  2EE8               	decfsz	wreg,f,c
  7822  005824  D7FE               	bra	u3347
  7823  005826  2E01               	decfsz	??_Full_stepper_izq& (0+255),f,c
  7824  005828  D7FC               	bra	u3347
  7825  00582A  0E01               	movlw	1
  7826  00582C  0100               	movlb	0	; () banked
  7827  00582E  2768               	addwf	_contador& (0+255),f,b
  7828  005830  0E00               	movlw	0
  7829  005832  2369               	addwfc	(_contador+1)& (0+255),f,b
  7830  005834  236A               	addwfc	(_contador+2)& (0+255),f,b
  7831  005836  236B               	addwfc	(_contador+3)& (0+255),f,b
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;./Prueba1.h: 67:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=1
      +                          ;
  7835  005838  9080               	bcf	3968,0,c	;volatile
  7836                           
  7837                           ; BSR set to: 0
  7838  00583A  9280               	bcf	3968,1,c	;volatile
  7839                           
  7840                           ; BSR set to: 0
  7841  00583C  8480               	bsf	3968,2,c	;volatile
  7842                           
  7843                           ; BSR set to: 0
  7844  00583E  8680               	bsf	3968,3,c	;volatile
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;./Prueba1.h: 68:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7848  005840  0E14               	movlw	20
  7849  005842  6E01               	movwf	??_Full_stepper_izq& (0+255),c
  7850  005844  0E7A               	movlw	122
  7851  005846                     u3357:
  7852  005846  2EE8               	decfsz	wreg,f,c
  7853  005848  D7FE               	bra	u3357
  7854  00584A  2E01               	decfsz	??_Full_stepper_izq& (0+255),f,c
  7855  00584C  D7FC               	bra	u3357
  7856  00584E  0E01               	movlw	1
  7857  005850  0100               	movlb	0	; () banked
  7858  005852  2768               	addwf	_contador& (0+255),f,b
  7859  005854  0E00               	movlw	0
  7860  005856  2369               	addwfc	(_contador+1)& (0+255),f,b
  7861  005858  236A               	addwfc	(_contador+2)& (0+255),f,b
  7862  00585A  236B               	addwfc	(_contador+3)& (0+255),f,b
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;./Prueba1.h: 69:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  7866  00585C  9080               	bcf	3968,0,c	;volatile
  7867                           
  7868                           ; BSR set to: 0
  7869  00585E  8280               	bsf	3968,1,c	;volatile
  7870                           
  7871                           ; BSR set to: 0
  7872  005860  8480               	bsf	3968,2,c	;volatile
  7873                           
  7874                           ; BSR set to: 0
  7875  005862  9680               	bcf	3968,3,c	;volatile
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;./Prueba1.h: 70:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7879  005864  0E14               	movlw	20
  7880  005866  6E01               	movwf	??_Full_stepper_izq& (0+255),c
  7881  005868  0E7A               	movlw	122
  7882  00586A                     u3367:
  7883  00586A  2EE8               	decfsz	wreg,f,c
  7884  00586C  D7FE               	bra	u3367
  7885  00586E  2E01               	decfsz	??_Full_stepper_izq& (0+255),f,c
  7886  005870  D7FC               	bra	u3367
  7887  005872  0E01               	movlw	1
  7888  005874  0100               	movlb	0	; () banked
  7889  005876  2768               	addwf	_contador& (0+255),f,b
  7890  005878  0E00               	movlw	0
  7891  00587A  2369               	addwfc	(_contador+1)& (0+255),f,b
  7892  00587C  236A               	addwfc	(_contador+2)& (0+255),f,b
  7893  00587E  236B               	addwfc	(_contador+3)& (0+255),f,b
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;./Prueba1.h: 71:     PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7897  005880  8080               	bsf	3968,0,c	;volatile
  7898                           
  7899                           ; BSR set to: 0
  7900  005882  8280               	bsf	3968,1,c	;volatile
  7901                           
  7902                           ; BSR set to: 0
  7903  005884  9480               	bcf	3968,2,c	;volatile
  7904                           
  7905                           ; BSR set to: 0
  7906  005886  9680               	bcf	3968,3,c	;volatile
  7907                           
  7908                           ;./Prueba1.h: 72:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7909  005888  0E14               	movlw	20
  7910  00588A  6E01               	movwf	??_Full_stepper_izq& (0+255),c
  7911  00588C  0E7A               	movlw	122
  7912  00588E                     u3377:
  7913  00588E  2EE8               	decfsz	wreg,f,c
  7914  005890  D7FE               	bra	u3377
  7915  005892  2E01               	decfsz	??_Full_stepper_izq& (0+255),f,c
  7916  005894  D7FC               	bra	u3377
  7917  005896  0E01               	movlw	1
  7918  005898  0100               	movlb	0	; () banked
  7919  00589A  2768               	addwf	_contador& (0+255),f,b
  7920  00589C  0E00               	movlw	0
  7921  00589E  2369               	addwfc	(_contador+1)& (0+255),f,b
  7922  0058A0  236A               	addwfc	(_contador+2)& (0+255),f,b
  7923  0058A2  236B               	addwfc	(_contador+3)& (0+255),f,b
  7924                           
  7925                           ; BSR set to: 0
  7926  0058A4  0012               	return		;funcret
  7927  0058A6                     __end_of_Full_stepper_izq:
  7928                           	opt callstack 0
  7929                           
  7930 ;; *************** function _Full_stepper *****************
  7931 ;; Defined at:
  7932 ;;		line 25 in file "./Prueba1.h"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7949 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        1 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_opt_Full_stepper
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text24
  7960  005782                     __ptext24:
  7961                           	opt callstack 0
  7962  005782                     _Full_stepper:
  7963                           	opt callstack 29
  7964                           
  7965                           ;./Prueba1.h: 26:     PORTAbits.RA0=1; PORTAbits.RA1=1; PORTAbits.RA2=0; PORTAbits.RA3=0
      +                          ;
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;incstack = 0
  7969  005782  8080               	bsf	3968,0,c	;volatile
  7970  005784  8280               	bsf	3968,1,c	;volatile
  7971  005786  9480               	bcf	3968,2,c	;volatile
  7972  005788  9680               	bcf	3968,3,c	;volatile
  7973                           
  7974                           ;./Prueba1.h: 27:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  7975  00578A  0E14               	movlw	20
  7976  00578C  6E01               	movwf	??_Full_stepper& (0+255),c
  7977  00578E  0E7A               	movlw	122
  7978  005790                     u3387:
  7979  005790  2EE8               	decfsz	wreg,f,c
  7980  005792  D7FE               	bra	u3387
  7981  005794  2E01               	decfsz	??_Full_stepper& (0+255),f,c
  7982  005796  D7FC               	bra	u3387
  7983  005798  0E01               	movlw	1
  7984  00579A  0100               	movlb	0	; () banked
  7985  00579C  2768               	addwf	_contador& (0+255),f,b
  7986  00579E  0E00               	movlw	0
  7987  0057A0  2369               	addwfc	(_contador+1)& (0+255),f,b
  7988  0057A2  236A               	addwfc	(_contador+2)& (0+255),f,b
  7989  0057A4  236B               	addwfc	(_contador+3)& (0+255),f,b
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;./Prueba1.h: 28:     PORTAbits.RA0=0; PORTAbits.RA1=1; PORTAbits.RA2=1; PORTAbits.RA3=0
      +                          ;
  7993  0057A6  9080               	bcf	3968,0,c	;volatile
  7994                           
  7995                           ; BSR set to: 0
  7996  0057A8  8280               	bsf	3968,1,c	;volatile
  7997                           
  7998                           ; BSR set to: 0
  7999  0057AA  8480               	bsf	3968,2,c	;volatile
  8000                           
  8001                           ; BSR set to: 0
  8002  0057AC  9680               	bcf	3968,3,c	;volatile
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;./Prueba1.h: 29:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  8006  0057AE  0E14               	movlw	20
  8007  0057B0  6E01               	movwf	??_Full_stepper& (0+255),c
  8008  0057B2  0E7A               	movlw	122
  8009  0057B4                     u3397:
  8010  0057B4  2EE8               	decfsz	wreg,f,c
  8011  0057B6  D7FE               	bra	u3397
  8012  0057B8  2E01               	decfsz	??_Full_stepper& (0+255),f,c
  8013  0057BA  D7FC               	bra	u3397
  8014  0057BC  0E01               	movlw	1
  8015  0057BE  0100               	movlb	0	; () banked
  8016  0057C0  2768               	addwf	_contador& (0+255),f,b
  8017  0057C2  0E00               	movlw	0
  8018  0057C4  2369               	addwfc	(_contador+1)& (0+255),f,b
  8019  0057C6  236A               	addwfc	(_contador+2)& (0+255),f,b
  8020  0057C8  236B               	addwfc	(_contador+3)& (0+255),f,b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;./Prueba1.h: 30:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=1; PORTAbits.RA3=1
      +                          ;
  8024  0057CA  9080               	bcf	3968,0,c	;volatile
  8025                           
  8026                           ; BSR set to: 0
  8027  0057CC  9280               	bcf	3968,1,c	;volatile
  8028                           
  8029                           ; BSR set to: 0
  8030  0057CE  8480               	bsf	3968,2,c	;volatile
  8031                           
  8032                           ; BSR set to: 0
  8033  0057D0  8680               	bsf	3968,3,c	;volatile
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;./Prueba1.h: 31:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  8037  0057D2  0E14               	movlw	20
  8038  0057D4  6E01               	movwf	??_Full_stepper& (0+255),c
  8039  0057D6  0E7A               	movlw	122
  8040  0057D8                     u3407:
  8041  0057D8  2EE8               	decfsz	wreg,f,c
  8042  0057DA  D7FE               	bra	u3407
  8043  0057DC  2E01               	decfsz	??_Full_stepper& (0+255),f,c
  8044  0057DE  D7FC               	bra	u3407
  8045  0057E0  0E01               	movlw	1
  8046  0057E2  0100               	movlb	0	; () banked
  8047  0057E4  2768               	addwf	_contador& (0+255),f,b
  8048  0057E6  0E00               	movlw	0
  8049  0057E8  2369               	addwfc	(_contador+1)& (0+255),f,b
  8050  0057EA  236A               	addwfc	(_contador+2)& (0+255),f,b
  8051  0057EC  236B               	addwfc	(_contador+3)& (0+255),f,b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;./Prueba1.h: 32:     PORTAbits.RA0=1; PORTAbits.RA1=0; PORTAbits.RA2=0; PORTAbits.RA3=1
      +                          ;
  8055  0057EE  8080               	bsf	3968,0,c	;volatile
  8056                           
  8057                           ; BSR set to: 0
  8058  0057F0  9280               	bcf	3968,1,c	;volatile
  8059                           
  8060                           ; BSR set to: 0
  8061  0057F2  9480               	bcf	3968,2,c	;volatile
  8062                           
  8063                           ; BSR set to: 0
  8064  0057F4  8680               	bsf	3968,3,c	;volatile
  8065                           
  8066                           ;./Prueba1.h: 33:     _delay((unsigned long)((5)*(12000000/4000.0)));contador++;
  8067  0057F6  0E14               	movlw	20
  8068  0057F8  6E01               	movwf	??_Full_stepper& (0+255),c
  8069  0057FA  0E7A               	movlw	122
  8070  0057FC                     u3417:
  8071  0057FC  2EE8               	decfsz	wreg,f,c
  8072  0057FE  D7FE               	bra	u3417
  8073  005800  2E01               	decfsz	??_Full_stepper& (0+255),f,c
  8074  005802  D7FC               	bra	u3417
  8075  005804  0E01               	movlw	1
  8076  005806  0100               	movlb	0	; () banked
  8077  005808  2768               	addwf	_contador& (0+255),f,b
  8078  00580A  0E00               	movlw	0
  8079  00580C  2369               	addwfc	(_contador+1)& (0+255),f,b
  8080  00580E  236A               	addwfc	(_contador+2)& (0+255),f,b
  8081  005810  236B               	addwfc	(_contador+3)& (0+255),f,b
  8082                           
  8083                           ; BSR set to: 0
  8084  005812  0012               	return		;funcret
  8085  005814                     __end_of_Full_stepper:
  8086                           	opt callstack 0
  8087                           
  8088 ;; *************** function _initM *****************
  8089 ;; Defined at:
  8090 ;;		line 20 in file "./Prueba1.h"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;		None
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8108 ;;Total ram usage:        0 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text25
  8118  0054A0                     __ptext25:
  8119                           	opt callstack 0
  8120  0054A0                     _initM:
  8121                           	opt callstack 30
  8122                           
  8123                           ;./Prueba1.h: 21:     TRISA=0xF0;
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;incstack = 0
  8127  0054A0  0EF0               	movlw	240
  8128  0054A2  6E92               	movwf	3986,c	;volatile
  8129                           
  8130                           ;./Prueba1.h: 22:     PORTA=0x00;
  8131  0054A4  0E00               	movlw	0
  8132  0054A6  6E80               	movwf	3968,c	;volatile
  8133                           
  8134                           ;./Prueba1.h: 23:     contador=0;
  8135  0054A8  0E00               	movlw	0
  8136  0054AA  0100               	movlb	0	; () banked
  8137  0054AC  6F68               	movwf	_contador& (0+255),b
  8138  0054AE  0E00               	movlw	0
  8139  0054B0  6F69               	movwf	(_contador+1)& (0+255),b
  8140  0054B2  0E00               	movlw	0
  8141  0054B4  6F6A               	movwf	(_contador+2)& (0+255),b
  8142  0054B6  0E00               	movlw	0
  8143  0054B8  6F6B               	movwf	(_contador+3)& (0+255),b
  8144                           
  8145                           ; BSR set to: 0
  8146  0054BA  0012               	return		;funcret
  8147  0054BC                     __end_of_initM:
  8148                           	opt callstack 0
  8149                           
  8150 ;; *************** function ___lmul *****************
  8151 ;; Defined at:
  8152 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  multiplier      4    0[COMRAM] unsigned long 
  8155 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  product         4    8[COMRAM] unsigned long 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  4    0[COMRAM] unsigned long 
  8160 ;; Registers used:
  8161 ;;		wreg, status,2, status,0
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8167 ;;      Params:         8       0       0       0       0       0       0       0       0
  8168 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8170 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8171 ;;Total ram usage:       12 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; This function calls:
  8174 ;;		Nothing
  8175 ;; This function is called by:
  8176 ;;		_main
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text26
  8181  0055F0                     __ptext26:
  8182                           	opt callstack 0
  8183  0055F0                     ___lmul:
  8184                           	opt callstack 30
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;incstack = 0
  8188  0055F0  0E00               	movlw	0
  8189  0055F2  6E09               	movwf	___lmul@product,c
  8190  0055F4  0E00               	movlw	0
  8191  0055F6  6E0A               	movwf	___lmul@product+1,c
  8192  0055F8  0E00               	movlw	0
  8193  0055FA  6E0B               	movwf	___lmul@product+2,c
  8194  0055FC  0E00               	movlw	0
  8195  0055FE  6E0C               	movwf	___lmul@product+3,c
  8196  005600                     l3533:
  8197  005600  A001               	btfss	___lmul@multiplier,0,c
  8198  005602  D008               	goto	l3537
  8199  005604  5005               	movf	___lmul@multiplicand,w,c
  8200  005606  2609               	addwf	___lmul@product,f,c
  8201  005608  5006               	movf	___lmul@multiplicand+1,w,c
  8202  00560A  220A               	addwfc	___lmul@product+1,f,c
  8203  00560C  5007               	movf	___lmul@multiplicand+2,w,c
  8204  00560E  220B               	addwfc	___lmul@product+2,f,c
  8205  005610  5008               	movf	___lmul@multiplicand+3,w,c
  8206  005612  220C               	addwfc	___lmul@product+3,f,c
  8207  005614                     l3537:
  8208  005614  90D8               	bcf	status,0,c
  8209  005616  3605               	rlcf	___lmul@multiplicand,f,c
  8210  005618  3606               	rlcf	___lmul@multiplicand+1,f,c
  8211  00561A  3607               	rlcf	___lmul@multiplicand+2,f,c
  8212  00561C  3608               	rlcf	___lmul@multiplicand+3,f,c
  8213  00561E  90D8               	bcf	status,0,c
  8214  005620  3204               	rrcf	___lmul@multiplier+3,f,c
  8215  005622  3203               	rrcf	___lmul@multiplier+2,f,c
  8216  005624  3202               	rrcf	___lmul@multiplier+1,f,c
  8217  005626  3201               	rrcf	___lmul@multiplier,f,c
  8218  005628  5001               	movf	___lmul@multiplier,w,c
  8219  00562A  1002               	iorwf	___lmul@multiplier+1,w,c
  8220  00562C  1003               	iorwf	___lmul@multiplier+2,w,c
  8221  00562E  1004               	iorwf	___lmul@multiplier+3,w,c
  8222  005630  A4D8               	btfss	status,2,c
  8223  005632  D7E6               	goto	l3533
  8224  005634  C009  F001         	movff	___lmul@product,?___lmul
  8225  005638  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8226  00563C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8227  005640  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8228  005644  0012               	return		;funcret
  8229  005646                     __end_of___lmul:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _Lcd_Out2 *****************
  8233 ;; Defined at:
  8234 ;;		line 115 in file "./flex_lcd.h"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  y               1    wreg     unsigned char 
  8237 ;;  x               1    3[COMRAM] unsigned char 
  8238 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  8239 ;;		 -> palabra2(17), palabra1(17), palabra(17), 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  y               1    8[COMRAM] unsigned char 
  8242 ;;  data            1    9[COMRAM] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      void 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8252 ;;      Params:         3       0       0       0       0       0       0       0       0
  8253 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8255 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8256 ;;Total ram usage:        7 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    1
  8259 ;; This function calls:
  8260 ;;		_Lcd_Chr_CP
  8261 ;;		_Lcd_Cmd
  8262 ;; This function is called by:
  8263 ;;		_main
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text27
  8268  00569C                     __ptext27:
  8269                           	opt callstack 0
  8270  00569C                     _Lcd_Out2:
  8271                           	opt callstack 29
  8272                           
  8273                           ;incstack = 0
  8274                           ;Lcd_Out2@y stored from wreg
  8275  00569C  6E09               	movwf	Lcd_Out2@y,c
  8276                           
  8277                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  8278  00569E  D00D               	goto	l3329
  8279  0056A0                     l3319:
  8280  0056A0  5004               	movf	Lcd_Out2@x,w,c
  8281  0056A2  0F80               	addlw	128
  8282  0056A4  D008               	goto	L10
  8283  0056A6                     l3321:
  8284  0056A6  5004               	movf	Lcd_Out2@x,w,c
  8285  0056A8  0FC0               	addlw	192
  8286  0056AA  D005               	goto	L10
  8287  0056AC                     l3323:
  8288  0056AC  5004               	movf	Lcd_Out2@x,w,c
  8289  0056AE  0F94               	addlw	148
  8290  0056B0  D002               	goto	L10
  8291  0056B2                     l3325:
  8292  0056B2  5004               	movf	Lcd_Out2@x,w,c
  8293  0056B4  0FD4               	addlw	212
  8294  0056B6                     L10:
  8295  0056B6  6E0A               	movwf	Lcd_Out2@data,c
  8296  0056B8  D014               	goto	l3331
  8297  0056BA                     l3329:
  8298  0056BA  5009               	movf	Lcd_Out2@y,w,c
  8299  0056BC  6E07               	movwf	??_Lcd_Out2& (0+255),c
  8300  0056BE  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  8301                           
  8302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8303                           ; Switch size 1, requested type "simple"
  8304                           ; Number of cases is 1, Range of values is 0 to 0
  8305                           ; switch strategies available:
  8306                           ; Name         Instructions Cycles
  8307                           ; simple_byte            4     3 (average)
  8308                           ;	Chosen strategy is simple_byte
  8309  0056C0  5008               	movf	??_Lcd_Out2+1,w,c
  8310  0056C2  0A00               	xorlw	0	; case 0
  8311  0056C4  A4D8               	btfss	status,2,c
  8312  0056C6  D00D               	goto	l3331
  8313                           
  8314                           ; Switch size 1, requested type "simple"
  8315                           ; Number of cases is 4, Range of values is 1 to 4
  8316                           ; switch strategies available:
  8317                           ; Name         Instructions Cycles
  8318                           ; simple_byte           13     7 (average)
  8319                           ;	Chosen strategy is simple_byte
  8320  0056C8  5007               	movf	??_Lcd_Out2,w,c
  8321  0056CA  0A01               	xorlw	1	; case 1
  8322  0056CC  B4D8               	btfsc	status,2,c
  8323  0056CE  D7E8               	goto	l3319
  8324  0056D0  0A03               	xorlw	3	; case 2
  8325  0056D2  B4D8               	btfsc	status,2,c
  8326  0056D4  D7E8               	goto	l3321
  8327  0056D6  0A01               	xorlw	1	; case 3
  8328  0056D8  B4D8               	btfsc	status,2,c
  8329  0056DA  D7E8               	goto	l3323
  8330  0056DC  0A07               	xorlw	7	; case 4
  8331  0056DE  B4D8               	btfsc	status,2,c
  8332  0056E0  D7E8               	goto	l3325
  8333  0056E2                     l3331:
  8334                           
  8335                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  8336  0056E2  500A               	movf	Lcd_Out2@data,w,c
  8337  0056E4  EC8F  F02F         	call	_Lcd_Cmd
  8338                           
  8339                           ;./flex_lcd.h: 127: while(*buffer)
  8340  0056E8  D009               	goto	l3337
  8341  0056EA                     l3333:
  8342                           
  8343                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  8344  0056EA  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  8345  0056EE  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  8346  0056F2  50DF               	movf	indf2,w,c
  8347  0056F4  EC40  F031         	call	_Lcd_Chr_CP
  8348                           
  8349                           ;./flex_lcd.h: 130:     buffer++;
  8350  0056F8  4A05               	infsnz	Lcd_Out2@buffer,f,c
  8351  0056FA  2A06               	incf	Lcd_Out2@buffer+1,f,c
  8352  0056FC                     l3337:
  8353                           
  8354                           ;./flex_lcd.h: 127: while(*buffer)
  8355  0056FC  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  8356  005700  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  8357  005704  50DF               	movf	indf2,w,c
  8358  005706  B4D8               	btfsc	status,2,c
  8359  005708  0012               	return	
  8360  00570A  D7EF               	goto	l3333
  8361  00570C                     __end_of_Lcd_Out2:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _Lcd_Chr_CP *****************
  8365 ;; Defined at:
  8366 ;;		line 136 in file "./flex_lcd.h"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  data            1    wreg     unsigned char 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  data            1    2[COMRAM] unsigned char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0
  8381 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8382 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8383 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8384 ;;Total ram usage:        3 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_Lcd_Out
  8390 ;;		_Lcd_Out2
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text28
  8395  006280                     __ptext28:
  8396                           	opt callstack 0
  8397  006280                     _Lcd_Chr_CP:
  8398                           	opt callstack 28
  8399                           
  8400                           ;incstack = 0
  8401                           ;Lcd_Chr_CP@data stored from wreg
  8402  006280  6E03               	movwf	Lcd_Chr_CP@data,c
  8403                           
  8404                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  8405  006282  9A83               	bcf	3971,5,c	;volatile
  8406  006284  8883               	bsf	3971,4,c	;volatile
  8407                           
  8408                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  8409  006286  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  8410  006288  AE03               	btfss	Lcd_Chr_CP@data,7,c
  8411  00628A  D001               	bra	u1635
  8412  00628C  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  8413  00628E                     u1635:
  8414  00628E  0E01               	movlw	1
  8415  006290  1601               	andwf	??_Lcd_Chr_CP,f,c
  8416  006292  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8417  006294  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8418  006296  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8419  006298  5083               	movf	3971,w,c	;volatile
  8420  00629A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8421  00629C  0BF7               	andlw	-9
  8422  00629E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8423  0062A0  6E83               	movwf	3971,c	;volatile
  8424  0062A2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8425  0062A6  0E06               	movlw	6
  8426  0062A8  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  8427  0062AA                     u1645:
  8428  0062AA  90D8               	bcf	status,0,c
  8429  0062AC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8430  0062AE  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  8431  0062B0  D7FC               	goto	u1645
  8432  0062B2  0E01               	movlw	1
  8433  0062B4  1601               	andwf	??_Lcd_Chr_CP,f,c
  8434  0062B6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8435  0062B8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8436  0062BA  5083               	movf	3971,w,c	;volatile
  8437  0062BC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8438  0062BE  0BFB               	andlw	-5
  8439  0062C0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8440  0062C2  6E83               	movwf	3971,c	;volatile
  8441                           
  8442                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  8443  0062C4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8444  0062C8  0E05               	movlw	5
  8445  0062CA  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  8446  0062CC                     u1655:
  8447  0062CC  90D8               	bcf	status,0,c
  8448  0062CE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8449  0062D0  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  8450  0062D2  D7FC               	goto	u1655
  8451  0062D4  0E01               	movlw	1
  8452  0062D6  1601               	andwf	??_Lcd_Chr_CP,f,c
  8453  0062D8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8454  0062DA  5083               	movf	3971,w,c	;volatile
  8455  0062DC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8456  0062DE  0BFD               	andlw	-3
  8457  0062E0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8458  0062E2  6E83               	movwf	3971,c	;volatile
  8459  0062E4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8460  0062E8  3A01               	swapf	??_Lcd_Chr_CP,f,c
  8461  0062EA  0E0F               	movlw	15
  8462  0062EC  1601               	andwf	??_Lcd_Chr_CP,f,c
  8463  0062EE  0E01               	movlw	1
  8464  0062F0  1601               	andwf	??_Lcd_Chr_CP,f,c
  8465  0062F2  5083               	movf	3971,w,c	;volatile
  8466  0062F4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8467  0062F6  0BFE               	andlw	-2
  8468  0062F8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8469  0062FA  6E83               	movwf	3971,c	;volatile
  8470                           
  8471                           ;./flex_lcd.h: 140: _delay(10);
  8472  0062FC  0E03               	movlw	3
  8473  0062FE                     u3427:
  8474  0062FE  2EE8               	decfsz	wreg,f,c
  8475  006300  D7FE               	bra	u3427
  8476  006302  F000               	nop	
  8477                           
  8478                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  8479  006304  8A83               	bsf	3971,5,c	;volatile
  8480  006306  0E05               	movlw	5
  8481  006308                     u3437:
  8482  006308  2EE8               	decfsz	wreg,f,c
  8483  00630A  D7FE               	bra	u3437
  8484  00630C  9A83               	bcf	3971,5,c	;volatile
  8485                           
  8486                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  8487  00630E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8488  006312  90D8               	bcf	status,0,c
  8489  006314  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8490  006316  90D8               	bcf	status,0,c
  8491  006318  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8492  00631A  90D8               	bcf	status,0,c
  8493  00631C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8494  00631E  0E01               	movlw	1
  8495  006320  1601               	andwf	??_Lcd_Chr_CP,f,c
  8496  006322  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8497  006324  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8498  006326  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8499  006328  5083               	movf	3971,w,c	;volatile
  8500  00632A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8501  00632C  0BF7               	andlw	-9
  8502  00632E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8503  006330  6E83               	movwf	3971,c	;volatile
  8504  006332  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8505  006336  90D8               	bcf	status,0,c
  8506  006338  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8507  00633A  90D8               	bcf	status,0,c
  8508  00633C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8509  00633E  0E01               	movlw	1
  8510  006340  1601               	andwf	??_Lcd_Chr_CP,f,c
  8511  006342  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8512  006344  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8513  006346  5083               	movf	3971,w,c	;volatile
  8514  006348  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8515  00634A  0BFB               	andlw	-5
  8516  00634C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8517  00634E  6E83               	movwf	3971,c	;volatile
  8518                           
  8519                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  8520  006350  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8521  006354  90D8               	bcf	status,0,c
  8522  006356  3201               	rrcf	??_Lcd_Chr_CP,f,c
  8523  006358  0E01               	movlw	1
  8524  00635A  1601               	andwf	??_Lcd_Chr_CP,f,c
  8525  00635C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  8526  00635E  5083               	movf	3971,w,c	;volatile
  8527  006360  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8528  006362  0BFD               	andlw	-3
  8529  006364  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8530  006366  6E83               	movwf	3971,c	;volatile
  8531  006368  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8532  00636C  0E01               	movlw	1
  8533  00636E  1601               	andwf	??_Lcd_Chr_CP,f,c
  8534  006370  5083               	movf	3971,w,c	;volatile
  8535  006372  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8536  006374  0BFE               	andlw	-2
  8537  006376  1801               	xorwf	??_Lcd_Chr_CP,w,c
  8538  006378  6E83               	movwf	3971,c	;volatile
  8539                           
  8540                           ;./flex_lcd.h: 144: _delay(10);
  8541  00637A  0E03               	movlw	3
  8542  00637C                     u3447:
  8543  00637C  2EE8               	decfsz	wreg,f,c
  8544  00637E  D7FE               	bra	u3447
  8545  006380  F000               	nop	
  8546                           
  8547                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  8548  006382  8A83               	bsf	3971,5,c	;volatile
  8549  006384  0E05               	movlw	5
  8550  006386                     u3457:
  8551  006386  2EE8               	decfsz	wreg,f,c
  8552  006388  D7FE               	bra	u3457
  8553  00638A  9A83               	bcf	3971,5,c	;volatile
  8554                           
  8555                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(12000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(12000000/4000000.0)));
  8556  00638C  0E05               	movlw	5
  8557  00638E                     u3467:
  8558  00638E  2EE8               	decfsz	wreg,f,c
  8559  006390  D7FE               	bra	u3467
  8560  006392  0E16               	movlw	22
  8561  006394  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  8562  006396  0E6C               	movlw	108
  8563  006398                     u3477:
  8564  006398  2EE8               	decfsz	wreg,f,c
  8565  00639A  D7FE               	bra	u3477
  8566  00639C  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  8567  00639E  D7FC               	bra	u3477
  8568  0063A0  D000               	nop2	
  8569  0063A2  0012               	return		;funcret
  8570  0063A4                     __end_of_Lcd_Chr_CP:
  8571                           	opt callstack 0
  8572                           
  8573 ;; *************** function _Lcd_Init *****************
  8574 ;; Defined at:
  8575 ;;		line 52 in file "./flex_lcd.h"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  data            1    4[COMRAM] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0
  8590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8591 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8592 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8593 ;;Total ram usage:        2 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    1
  8596 ;; This function calls:
  8597 ;;		_Lcd_Cmd
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text29
  8604  005E0C                     __ptext29:
  8605                           	opt callstack 0
  8606  005E0C                     _Lcd_Init:
  8607                           	opt callstack 29
  8608                           
  8609                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  8610                           
  8611                           ;incstack = 0
  8612  005E0C  9695               	bcf	3989,3,c	;volatile
  8613                           
  8614                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  8615  005E0E  9495               	bcf	3989,2,c	;volatile
  8616                           
  8617                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  8618  005E10  9295               	bcf	3989,1,c	;volatile
  8619                           
  8620                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  8621  005E12  9095               	bcf	3989,0,c	;volatile
  8622                           
  8623                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  8624  005E14  9A95               	bcf	3989,5,c	;volatile
  8625                           
  8626                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  8627  005E16  9895               	bcf	3989,4,c	;volatile
  8628                           
  8629                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  8630  005E18  9683               	bcf	3971,3,c	;volatile
  8631                           
  8632                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  8633  005E1A  9483               	bcf	3971,2,c	;volatile
  8634                           
  8635                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  8636  005E1C  9283               	bcf	3971,1,c	;volatile
  8637                           
  8638                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  8639  005E1E  9083               	bcf	3971,0,c	;volatile
  8640                           
  8641                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
  8642  005E20  9A83               	bcf	3971,5,c	;volatile
  8643                           
  8644                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
  8645  005E22  9883               	bcf	3971,4,c	;volatile
  8646                           
  8647                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8648  005E24  0E16               	movlw	22
  8649  005E26  6E04               	movwf	??_Lcd_Init& (0+255),c
  8650  005E28  0E6C               	movlw	108
  8651  005E2A                     u3487:
  8652  005E2A  2EE8               	decfsz	wreg,f,c
  8653  005E2C  D7FE               	bra	u3487
  8654  005E2E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8655  005E30  D7FC               	bra	u3487
  8656  005E32  D000               	nop2	
  8657                           
  8658                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8659  005E34  0E16               	movlw	22
  8660  005E36  6E04               	movwf	??_Lcd_Init& (0+255),c
  8661  005E38  0E6C               	movlw	108
  8662  005E3A                     u3497:
  8663  005E3A  2EE8               	decfsz	wreg,f,c
  8664  005E3C  D7FE               	bra	u3497
  8665  005E3E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8666  005E40  D7FC               	bra	u3497
  8667  005E42  D000               	nop2	
  8668                           
  8669                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8670  005E44  0E16               	movlw	22
  8671  005E46  6E04               	movwf	??_Lcd_Init& (0+255),c
  8672  005E48  0E6C               	movlw	108
  8673  005E4A                     u3507:
  8674  005E4A  2EE8               	decfsz	wreg,f,c
  8675  005E4C  D7FE               	bra	u3507
  8676  005E4E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8677  005E50  D7FC               	bra	u3507
  8678  005E52  D000               	nop2	
  8679                           
  8680                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8681  005E54  0E16               	movlw	22
  8682  005E56  6E04               	movwf	??_Lcd_Init& (0+255),c
  8683  005E58  0E6C               	movlw	108
  8684  005E5A                     u3517:
  8685  005E5A  2EE8               	decfsz	wreg,f,c
  8686  005E5C  D7FE               	bra	u3517
  8687  005E5E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8688  005E60  D7FC               	bra	u3517
  8689  005E62  D000               	nop2	
  8690                           
  8691                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8692  005E64  0E16               	movlw	22
  8693  005E66  6E04               	movwf	??_Lcd_Init& (0+255),c
  8694  005E68  0E6C               	movlw	108
  8695  005E6A                     u3527:
  8696  005E6A  2EE8               	decfsz	wreg,f,c
  8697  005E6C  D7FE               	bra	u3527
  8698  005E6E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8699  005E70  D7FC               	bra	u3527
  8700  005E72  D000               	nop2	
  8701                           
  8702                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8703  005E74  0E16               	movlw	22
  8704  005E76  6E04               	movwf	??_Lcd_Init& (0+255),c
  8705  005E78  0E6C               	movlw	108
  8706  005E7A                     u3537:
  8707  005E7A  2EE8               	decfsz	wreg,f,c
  8708  005E7C  D7FE               	bra	u3537
  8709  005E7E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8710  005E80  D7FC               	bra	u3537
  8711  005E82  D000               	nop2	
  8712                           
  8713                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  8714  005E84  0E01               	movlw	1
  8715  005E86  6E05               	movwf	Lcd_Init@data,c
  8716  005E88                     l37:
  8717                           
  8718                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
  8719  005E88  9683               	bcf	3971,3,c	;volatile
  8720  005E8A  9483               	bcf	3971,2,c	;volatile
  8721  005E8C  8283               	bsf	3971,1,c	;volatile
  8722  005E8E  8083               	bsf	3971,0,c	;volatile
  8723  005E90  9A83               	bcf	3971,5,c	;volatile
  8724                           
  8725                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
  8726  005E92  9883               	bcf	3971,4,c	;volatile
  8727  005E94  9683               	bcf	3971,3,c	;volatile
  8728  005E96  9483               	bcf	3971,2,c	;volatile
  8729  005E98  8283               	bsf	3971,1,c	;volatile
  8730  005E9A  8083               	bsf	3971,0,c	;volatile
  8731                           
  8732                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  8733  005E9C  8A83               	bsf	3971,5,c	;volatile
  8734  005E9E  9883               	bcf	3971,4,c	;volatile
  8735                           
  8736                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8737  005EA0  0E05               	movlw	5
  8738  005EA2                     u3547:
  8739  005EA2  2EE8               	decfsz	wreg,f,c
  8740  005EA4  D7FE               	bra	u3547
  8741                           
  8742                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
  8743  005EA6  9683               	bcf	3971,3,c	;volatile
  8744  005EA8  9483               	bcf	3971,2,c	;volatile
  8745  005EAA  8283               	bsf	3971,1,c	;volatile
  8746  005EAC  8083               	bsf	3971,0,c	;volatile
  8747  005EAE  9A83               	bcf	3971,5,c	;volatile
  8748                           
  8749                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
  8750  005EB0  9883               	bcf	3971,4,c	;volatile
  8751                           
  8752                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8753  005EB2  0E16               	movlw	22
  8754  005EB4  6E04               	movwf	??_Lcd_Init& (0+255),c
  8755  005EB6  0E6C               	movlw	108
  8756  005EB8                     u3557:
  8757  005EB8  2EE8               	decfsz	wreg,f,c
  8758  005EBA  D7FE               	bra	u3557
  8759  005EBC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8760  005EBE  D7FC               	bra	u3557
  8761  005EC0  D000               	nop2	
  8762                           
  8763                           ;./flex_lcd.h: 81: }
  8764  005EC2  2A05               	incf	Lcd_Init@data,f,c
  8765  005EC4  0E03               	movlw	3
  8766  005EC6  6405               	cpfsgt	Lcd_Init@data,c
  8767  005EC8  D7DF               	goto	l37
  8768                           
  8769                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8770  005ECA  9683               	bcf	3971,3,c	;volatile
  8771  005ECC  9483               	bcf	3971,2,c	;volatile
  8772  005ECE  8283               	bsf	3971,1,c	;volatile
  8773  005ED0  9083               	bcf	3971,0,c	;volatile
  8774  005ED2  9A83               	bcf	3971,5,c	;volatile
  8775  005ED4  9883               	bcf	3971,4,c	;volatile
  8776                           
  8777                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  8778  005ED6  9683               	bcf	3971,3,c	;volatile
  8779  005ED8  9483               	bcf	3971,2,c	;volatile
  8780  005EDA  8283               	bsf	3971,1,c	;volatile
  8781  005EDC  9083               	bcf	3971,0,c	;volatile
  8782  005EDE  8A83               	bsf	3971,5,c	;volatile
  8783  005EE0  9883               	bcf	3971,4,c	;volatile
  8784                           
  8785                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(12000000/4000000.0)));
  8786  005EE2  0E05               	movlw	5
  8787  005EE4                     u3567:
  8788  005EE4  2EE8               	decfsz	wreg,f,c
  8789  005EE6  D7FE               	bra	u3567
  8790                           
  8791                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8792  005EE8  9683               	bcf	3971,3,c	;volatile
  8793  005EEA  9483               	bcf	3971,2,c	;volatile
  8794  005EEC  8283               	bsf	3971,1,c	;volatile
  8795  005EEE  9083               	bcf	3971,0,c	;volatile
  8796  005EF0  9A83               	bcf	3971,5,c	;volatile
  8797  005EF2  9883               	bcf	3971,4,c	;volatile
  8798                           
  8799                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8800  005EF4  0E16               	movlw	22
  8801  005EF6  6E04               	movwf	??_Lcd_Init& (0+255),c
  8802  005EF8  0E6C               	movlw	108
  8803  005EFA                     u3577:
  8804  005EFA  2EE8               	decfsz	wreg,f,c
  8805  005EFC  D7FE               	bra	u3577
  8806  005EFE  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8807  005F00  D7FC               	bra	u3577
  8808  005F02  D000               	nop2	
  8809  005F04  0E28               	movlw	40
  8810  005F06  EC8F  F02F         	call	_Lcd_Cmd
  8811  005F0A  0E10               	movlw	16
  8812  005F0C  EC8F  F02F         	call	_Lcd_Cmd
  8813  005F10  0E01               	movlw	1
  8814  005F12  EC8F  F02F         	call	_Lcd_Cmd
  8815  005F16  0E0F               	movlw	15
  8816  005F18  EC8F  F02F         	call	_Lcd_Cmd
  8817  005F1C  0012               	return		;funcret
  8818  005F1E                     __end_of_Lcd_Init:
  8819                           	opt callstack 0
  8820                           
  8821 ;; *************** function _Lcd_Cmd *****************
  8822 ;; Defined at:
  8823 ;;		line 150 in file "./flex_lcd.h"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  data            1    wreg     unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  data            1    2[COMRAM] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8837 ;;      Params:         0       0       0       0       0       0       0       0       0
  8838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8839 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8840 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8841 ;;Total ram usage:        3 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_Lcd_Init
  8847 ;;		_Lcd_Out
  8848 ;;		_Lcd_Out2
  8849 ;;		_opt_Full_stepper
  8850 ;;		_opt_Wave_stepper
  8851 ;;		_opt_Half_stepper
  8852 ;;		_main
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text30
  8857  005F1E                     __ptext30:
  8858                           	opt callstack 0
  8859  005F1E                     _Lcd_Cmd:
  8860                           	opt callstack 28
  8861                           
  8862                           ;incstack = 0
  8863                           ;Lcd_Cmd@data stored from wreg
  8864  005F1E  6E03               	movwf	Lcd_Cmd@data,c
  8865                           
  8866                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8867  005F20  9A83               	bcf	3971,5,c	;volatile
  8868  005F22  9883               	bcf	3971,4,c	;volatile
  8869                           
  8870                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  8871  005F24  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  8872  005F26  AE03               	btfss	Lcd_Cmd@data,7,c
  8873  005F28  D001               	bra	u1605
  8874  005F2A  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  8875  005F2C                     u1605:
  8876  005F2C  0E01               	movlw	1
  8877  005F2E  1601               	andwf	??_Lcd_Cmd,f,c
  8878  005F30  4601               	rlncf	??_Lcd_Cmd,f,c
  8879  005F32  4601               	rlncf	??_Lcd_Cmd,f,c
  8880  005F34  4601               	rlncf	??_Lcd_Cmd,f,c
  8881  005F36  5083               	movf	3971,w,c	;volatile
  8882  005F38  1801               	xorwf	??_Lcd_Cmd,w,c
  8883  005F3A  0BF7               	andlw	-9
  8884  005F3C  1801               	xorwf	??_Lcd_Cmd,w,c
  8885  005F3E  6E83               	movwf	3971,c	;volatile
  8886  005F40  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8887  005F44  0E06               	movlw	6
  8888  005F46  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  8889  005F48                     u1615:
  8890  005F48  90D8               	bcf	status,0,c
  8891  005F4A  3201               	rrcf	??_Lcd_Cmd,f,c
  8892  005F4C  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  8893  005F4E  D7FC               	goto	u1615
  8894  005F50  0E01               	movlw	1
  8895  005F52  1601               	andwf	??_Lcd_Cmd,f,c
  8896  005F54  4601               	rlncf	??_Lcd_Cmd,f,c
  8897  005F56  4601               	rlncf	??_Lcd_Cmd,f,c
  8898  005F58  5083               	movf	3971,w,c	;volatile
  8899  005F5A  1801               	xorwf	??_Lcd_Cmd,w,c
  8900  005F5C  0BFB               	andlw	-5
  8901  005F5E  1801               	xorwf	??_Lcd_Cmd,w,c
  8902  005F60  6E83               	movwf	3971,c	;volatile
  8903                           
  8904                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  8905  005F62  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8906  005F66  0E05               	movlw	5
  8907  005F68  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  8908  005F6A                     u1625:
  8909  005F6A  90D8               	bcf	status,0,c
  8910  005F6C  3201               	rrcf	??_Lcd_Cmd,f,c
  8911  005F6E  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  8912  005F70  D7FC               	goto	u1625
  8913  005F72  0E01               	movlw	1
  8914  005F74  1601               	andwf	??_Lcd_Cmd,f,c
  8915  005F76  4601               	rlncf	??_Lcd_Cmd,f,c
  8916  005F78  5083               	movf	3971,w,c	;volatile
  8917  005F7A  1801               	xorwf	??_Lcd_Cmd,w,c
  8918  005F7C  0BFD               	andlw	-3
  8919  005F7E  1801               	xorwf	??_Lcd_Cmd,w,c
  8920  005F80  6E83               	movwf	3971,c	;volatile
  8921  005F82  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8922  005F86  3A01               	swapf	??_Lcd_Cmd,f,c
  8923  005F88  0E0F               	movlw	15
  8924  005F8A  1601               	andwf	??_Lcd_Cmd,f,c
  8925  005F8C  0E01               	movlw	1
  8926  005F8E  1601               	andwf	??_Lcd_Cmd,f,c
  8927  005F90  5083               	movf	3971,w,c	;volatile
  8928  005F92  1801               	xorwf	??_Lcd_Cmd,w,c
  8929  005F94  0BFE               	andlw	-2
  8930  005F96  1801               	xorwf	??_Lcd_Cmd,w,c
  8931  005F98  6E83               	movwf	3971,c	;volatile
  8932                           
  8933                           ;./flex_lcd.h: 154: _delay(10);
  8934  005F9A  0E03               	movlw	3
  8935  005F9C                     u3587:
  8936  005F9C  2EE8               	decfsz	wreg,f,c
  8937  005F9E  D7FE               	bra	u3587
  8938  005FA0  F000               	nop	
  8939                           
  8940                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  8941  005FA2  8A83               	bsf	3971,5,c	;volatile
  8942  005FA4  0E05               	movlw	5
  8943  005FA6                     u3597:
  8944  005FA6  2EE8               	decfsz	wreg,f,c
  8945  005FA8  D7FE               	bra	u3597
  8946  005FAA  9A83               	bcf	3971,5,c	;volatile
  8947                           
  8948                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  8949  005FAC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8950  005FB0  90D8               	bcf	status,0,c
  8951  005FB2  3201               	rrcf	??_Lcd_Cmd,f,c
  8952  005FB4  90D8               	bcf	status,0,c
  8953  005FB6  3201               	rrcf	??_Lcd_Cmd,f,c
  8954  005FB8  90D8               	bcf	status,0,c
  8955  005FBA  3201               	rrcf	??_Lcd_Cmd,f,c
  8956  005FBC  0E01               	movlw	1
  8957  005FBE  1601               	andwf	??_Lcd_Cmd,f,c
  8958  005FC0  4601               	rlncf	??_Lcd_Cmd,f,c
  8959  005FC2  4601               	rlncf	??_Lcd_Cmd,f,c
  8960  005FC4  4601               	rlncf	??_Lcd_Cmd,f,c
  8961  005FC6  5083               	movf	3971,w,c	;volatile
  8962  005FC8  1801               	xorwf	??_Lcd_Cmd,w,c
  8963  005FCA  0BF7               	andlw	-9
  8964  005FCC  1801               	xorwf	??_Lcd_Cmd,w,c
  8965  005FCE  6E83               	movwf	3971,c	;volatile
  8966  005FD0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8967  005FD4  90D8               	bcf	status,0,c
  8968  005FD6  3201               	rrcf	??_Lcd_Cmd,f,c
  8969  005FD8  90D8               	bcf	status,0,c
  8970  005FDA  3201               	rrcf	??_Lcd_Cmd,f,c
  8971  005FDC  0E01               	movlw	1
  8972  005FDE  1601               	andwf	??_Lcd_Cmd,f,c
  8973  005FE0  4601               	rlncf	??_Lcd_Cmd,f,c
  8974  005FE2  4601               	rlncf	??_Lcd_Cmd,f,c
  8975  005FE4  5083               	movf	3971,w,c	;volatile
  8976  005FE6  1801               	xorwf	??_Lcd_Cmd,w,c
  8977  005FE8  0BFB               	andlw	-5
  8978  005FEA  1801               	xorwf	??_Lcd_Cmd,w,c
  8979  005FEC  6E83               	movwf	3971,c	;volatile
  8980                           
  8981                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  8982  005FEE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8983  005FF2  90D8               	bcf	status,0,c
  8984  005FF4  3201               	rrcf	??_Lcd_Cmd,f,c
  8985  005FF6  0E01               	movlw	1
  8986  005FF8  1601               	andwf	??_Lcd_Cmd,f,c
  8987  005FFA  4601               	rlncf	??_Lcd_Cmd,f,c
  8988  005FFC  5083               	movf	3971,w,c	;volatile
  8989  005FFE  1801               	xorwf	??_Lcd_Cmd,w,c
  8990  006000  0BFD               	andlw	-3
  8991  006002  1801               	xorwf	??_Lcd_Cmd,w,c
  8992  006004  6E83               	movwf	3971,c	;volatile
  8993  006006  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8994  00600A  0E01               	movlw	1
  8995  00600C  1601               	andwf	??_Lcd_Cmd,f,c
  8996  00600E  5083               	movf	3971,w,c	;volatile
  8997  006010  1801               	xorwf	??_Lcd_Cmd,w,c
  8998  006012  0BFE               	andlw	-2
  8999  006014  1801               	xorwf	??_Lcd_Cmd,w,c
  9000  006016  6E83               	movwf	3971,c	;volatile
  9001                           
  9002                           ;./flex_lcd.h: 158: _delay(10);
  9003  006018  0E03               	movlw	3
  9004  00601A                     u3607:
  9005  00601A  2EE8               	decfsz	wreg,f,c
  9006  00601C  D7FE               	bra	u3607
  9007  00601E  F000               	nop	
  9008                           
  9009                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  9010  006020  8A83               	bsf	3971,5,c	;volatile
  9011  006022  0E05               	movlw	5
  9012  006024                     u3617:
  9013  006024  2EE8               	decfsz	wreg,f,c
  9014  006026  D7FE               	bra	u3617
  9015  006028  9A83               	bcf	3971,5,c	;volatile
  9016                           
  9017                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9018  00602A  0E16               	movlw	22
  9019  00602C  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  9020  00602E  0E6C               	movlw	108
  9021  006030                     u3627:
  9022  006030  2EE8               	decfsz	wreg,f,c
  9023  006032  D7FE               	bra	u3627
  9024  006034  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  9025  006036  D7FC               	bra	u3627
  9026  006038  D000               	nop2	
  9027  00603A  0012               	return		;funcret
  9028  00603C                     __end_of_Lcd_Cmd:
  9029                           	opt callstack 0
  9030                           
  9031                           	psect	rparam
  9032  0000                     tosu	equ	0xFFF
  9033                           tosh	equ	0xFFE
  9034                           tosl	equ	0xFFD
  9035                           stkptr	equ	0xFFC
  9036                           pclatu	equ	0xFFB
  9037                           pclath	equ	0xFFA
  9038                           pcl	equ	0xFF9
  9039                           tblptru	equ	0xFF8
  9040                           tblptrh	equ	0xFF7
  9041                           tblptrl	equ	0xFF6
  9042                           tablat	equ	0xFF5
  9043                           prodh	equ	0xFF4
  9044                           prodl	equ	0xFF3
  9045                           indf0	equ	0xFEF
  9046                           postinc0	equ	0xFEE
  9047                           postdec0	equ	0xFED
  9048                           preinc0	equ	0xFEC
  9049                           plusw0	equ	0xFEB
  9050                           fsr0h	equ	0xFEA
  9051                           fsr0l	equ	0xFE9
  9052                           wreg	equ	0xFE8
  9053                           indf1	equ	0xFE7
  9054                           postinc1	equ	0xFE6
  9055                           postdec1	equ	0xFE5
  9056                           preinc1	equ	0xFE4
  9057                           plusw1	equ	0xFE3
  9058                           fsr1h	equ	0xFE2
  9059                           fsr1l	equ	0xFE1
  9060                           bsr	equ	0xFE0
  9061                           indf2	equ	0xFDF
  9062                           postinc2	equ	0xFDE
  9063                           postdec2	equ	0xFDD
  9064                           preinc2	equ	0xFDC
  9065                           plusw2	equ	0xFDB
  9066                           fsr2h	equ	0xFDA
  9067                           fsr2l	equ	0xFD9
  9068                           status	equ	0xFD8


Data Sizes:
    Strings     376
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      94
    BANK0           160     28     129
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_75(CODE[4]), STR_68(CODE[4]), STR_54(CODE[4]), STR_47(CODE[4]), 
		 -> STR_33(CODE[4]), STR_26(CODE[4]), STR_17(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra1(BANK0[17]), palabra(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra1(BANK0[17]), palabra(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S984_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra1(BANK0[17]), palabra(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra1(BANK0[17]), palabra(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_75(CODE[4]), STR_68(CODE[4]), STR_54(CODE[4]), STR_47(CODE[4]), 
		 -> STR_33(CODE[4]), STR_26(CODE[4]), STR_17(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_75(CODE[4]), STR_68(CODE[4]), STR_54(CODE[4]), STR_47(CODE[4]), 
		 -> STR_33(CODE[4]), STR_26(CODE[4]), STR_17(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra1(BANK0[17]), palabra(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_84(CODE[10]), STR_83(CODE[14]), STR_82(CODE[11]), STR_81(CODE[5]), 
		 -> STR_80(CODE[14]), STR_79(CODE[13]), STR_78(CODE[14]), STR_77(CODE[10]), 
		 -> STR_76(CODE[13]), STR_74(CODE[7]), STR_73(CODE[11]), STR_72(CODE[16]), 
		 -> STR_71(CODE[11]), STR_70(CODE[11]), STR_69(CODE[14]), STR_67(CODE[5]), 
		 -> STR_66(CODE[13]), STR_65(CODE[16]), STR_64(CODE[11]), STR_63(CODE[16]), 
		 -> STR_62(CODE[14]), STR_61(CODE[16]), STR_60(CODE[11]), STR_59(CODE[14]), 
		 -> STR_58(CODE[13]), STR_57(CODE[14]), STR_56(CODE[10]), STR_55(CODE[13]), 
		 -> STR_53(CODE[7]), STR_52(CODE[11]), STR_51(CODE[16]), STR_50(CODE[11]), 
		 -> STR_49(CODE[11]), STR_48(CODE[14]), STR_46(CODE[5]), STR_45(CODE[13]), 
		 -> STR_44(CODE[16]), STR_43(CODE[11]), STR_42(CODE[16]), STR_41(CODE[14]), 
		 -> STR_40(CODE[16]), STR_39(CODE[11]), STR_38(CODE[14]), STR_37(CODE[13]), 
		 -> STR_36(CODE[14]), STR_35(CODE[10]), STR_34(CODE[13]), STR_32(CODE[7]), 
		 -> STR_31(CODE[11]), STR_30(CODE[16]), STR_29(CODE[11]), STR_28(CODE[11]), 
		 -> STR_27(CODE[14]), STR_25(CODE[5]), STR_24(CODE[13]), STR_23(CODE[16]), 
		 -> STR_22(CODE[11]), STR_21(CODE[16]), STR_20(CODE[14]), STR_19(CODE[16]), 
		 -> STR_18(CODE[11]), STR_16(CODE[15]), STR_15(CODE[16]), STR_14(CODE[11]), 
		 -> STR_13(CODE[9]), STR_12(CODE[14]), STR_11(CODE[9]), STR_10(CODE[14]), 
		 -> STR_9(CODE[11]), STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[11]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _opt_Wave_stepper->_Lcd_Out
    _opt_Half_stepper->_Lcd_Out
    _opt_Full_stepper->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   64413
                                             88 COMRAM     4     4      0
                                             18 BANK0     10    10      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                             ___lmul
                              _initM
                   _opt_Full_stepper
                   _opt_Half_stepper
                   _opt_Wave_stepper
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   10869
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _opt_Wave_stepper                                     8     2      6   12656
                                             10 COMRAM     8     2      6
                            _Lcd_Cmd
                            _Lcd_Out
                       _Wave_stepper
                   _Wave_stepper_izq
 ---------------------------------------------------------------------------------
 (2) _Wave_stepper_izq                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Wave_stepper                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _opt_Half_stepper                                     8     2      6   12656
                                             10 COMRAM     8     2      6
                       _Half_stepper
                   _Half_stepper_izq
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (2) _Half_stepper_izq                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Half_stepper                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _opt_Full_stepper                                     8     2      6   12656
                                             10 COMRAM     8     2      6
                       _Full_stepper
                   _Full_stepper_izq
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3   12237
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Full_stepper_izq                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Full_stepper                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initM                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3    1597
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___lmul
   _initM
   _opt_Full_stepper
     _Full_stepper
     _Full_stepper_izq
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
   _opt_Half_stepper
     _Half_stepper
     _Half_stepper_izq
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
   _opt_Wave_stepper
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _Wave_stepper
     _Wave_stepper_izq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      81       5       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DF      20        0.0%
DATA                 0      0      DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 18 16:24:49 2019

        ?_Full_stepper_izq 0001                main@Dir_sel 00DC                         l37 5E88  
       ??_Full_stepper_izq 0001                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l210 677E                        l222 672A                        l214 6682  
                      l161 705E                        l218 66D6                        l192 7A3E  
                      l257 59F8                        l177 7550                        l275 69E8  
                      l277 69F0                        l988 550E               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000               __CFG_BOR$OFF 000000                        _abs 54E6  
                      _pad 59CA                        wreg 000FE8               __CFG_FOSC$HS 000000  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       ?_abs 0013  
                     l4013 7B14                       l4031 7C04                       l4015 7B2E  
                     l4103 7E5C                       l3321 56A6                       l3323 56AC  
                     l3331 56E2                       l2611 5A78                       l3333 56EA  
                     l3325 56B2                       l2621 5522                       l4061 7D08  
                     l3319 56A0                       l3351 5B20                       l3423 5C54  
                     l2631 54CA                       l2703 65EE                       l3337 56FC  
                     l3329 56BA                       l3361 5B72                       l3433 5C96  
                     l3417 5C20                       l2625 5538                       l2641 59E2  
                     l3257 565A                       l3513 676A                       l3505 6742  
                     l3355 5B50                       l3427 5C72                       l3419 5C24  
                     l2651 5A1A                       l2731 646A                       l2723 640E  
                     l2715 63D0                       l2811 6B74                       l3259 5680  
                     l4075 7D78                       l3533 5600                       l3365 5B92  
                     l3349 5B1C                       l3429 5C76                       l2629 54C6  
                     l2645 59F0                       l2725 6422                       l2901 6928  
                     l3517 6782                       l3509 6756                       l3461 665A  
                     l3605 6D54                       l3359 5B6E                       l3383 5D24  
                     l2655 5A46                       l2647 5A02                       l2671 64F4  
                     l2735 6480                       l2719 63F4                       l2815 6B8C  
                     l3631 6E16                       l3537 5614                       l2921 571C  
                     l3393 5D76                       l3385 5D28                       l3481 66C2  
                     l3473 669A                       l3465 666E                       l3457 6646  
                     l3617 6D8A                       l3609 6D62                       l2931 575A  
                     l2923 5722                       l3395 5D7A                       l2747 5564  
                     l2683 6542                       l2739 64A6                       l2763 69CA  
                     l2907 6940                       l3731 714E                       l3643 6E76  
                     l2917 5710                       l3389 5D58                       l2749 5570  
                     l2685 6556                       l2677 651C                       l2781 6A18  
                     l3493 6702                       l3477 66AE                       ?_pad 0011  
                     l2935 576E                       l2919 5716                       l2927 572A  
                     l3399 5D9A                       l2695 65B2                       l2791 6B10  
                     l2929 5752                       l2777 6A0A                       l2881 6830  
                     l3497 6716                       l3489 66EE                       l3841 7540  
                     l3729 7134                       l3649 6EA8                       l3585 6CE4  
                     l2699 65C8                       l2891 68E2                       l3827 74DC  
                     l3747 7224                       l3933 7888                       l3685 6FEA  
                     l3919 781A                       l3871 7626                       l3791 739A  
                     l2897 691E                       l3873 7640                       l3777 7328  
                     l3699 704E                       l3789 7394                       l3983 7A2E  
                     l3969 79CA                       l3889 7716                       STR_1 7FE6  
                     STR_2 7F83                       STR_3 7FE6                       STR_4 7F83  
                     STR_5 7FE6                       STR_6 7F83                       STR_7 7F99  
                     STR_8 7FAF                       STR_9 7F8E                       u1210 5A70  
                     u1300 54F4                       u2100 6E46                       u1230 5AB8  
                     u1410 6426                       u2130 700C                       u1331 6522  
                     u2220 74FE                       u1350 655A                       u1510 6A04  
                     u2310 79EC                       _LATB 000F8A                       u3007 7DD4  
                     u1520 6B1E                       u3017 7DF0                       u1450 699C  
                     u2170 7188                       u3107 58B4                       u3027 7E2C  
                     u1540 6B40                       u1460 699E                       u2260 767A  
                     u1605 5F2C                       u3117 58D8                       u1541 6B3E  
                     u3037 7E4A                       u1550 6B4E                       u2350 7B68  
                     u2190 724C                       u1615 5F48                       u3207 61FC  
                     u3127 58FC                       u3047 5DBC                       u2407 6C22  
                     u1800 5D46                       u1560 6B52                       u2280 773E  
                     u1625 5F6A                       u3217 6220                       u3137 5920  
                     u3057 5DF8                       u2417 6C40                       u1490 69DE  
                     u2370 7C2C                       u1635 628E                       u3307 6122  
                     u3227 6244                       u3147 5CB8                       u3067 5946  
                     u2507 6E96                       u2427 6C7C                       u1580 6B5E  
                     u1645 62AA                       u3317 6146                       u3237 6268  
                     u3157 5CF4                       u3077 596A                       u2517 6EEA  
                     u2437 6C9A                       u1655 62CC                       u3407 57D8  
                     u3327 5BB4                       u3247 604A                       u3167 616C  
                     u3087 598E                       u2607 7122                       u2527 6F06  
                     u2447 6CD6                       u1760 5B3E                       u1840 5C42  
                     u3417 57FC                       u3337 5BF0                       u3257 606E  
                     u3177 6190                       u3097 59B2                       u2617 713E  
                     u2537 6F42                       u2457 6D2A                       u1690 6864  
                     u3507 5E4A                       u3427 62FE                       u3347 5822  
                     u3267 6092                       u3187 61B4                       u2707 7450  
                     u2627 727C                       u2547 6F5E                       u2467 6D72  
                     u3517 5E5A                       u3437 6308                       u3357 5846  
                     u3277 60B6                       u3197 61D8                       u2717 748C  
                     u2637 72B8                       u2557 6F9A                       u2477 6D9A  
                     u2397 6BE6                       u3607 601A                       u3527 5E6A  
                     u3447 637C                       u3367 586A                       u3287 60DA  
                     u2807 77C8                       u2727 74A8                       u2647 72D6  
                     u2567 6FB6                       u2487 6DD6                       u3617 6024  
                     u3537 5E7A                       u3457 6386                       u3377 588E  
                     u3297 60FE                       u2817 7804                       u2737 7580  
                     u2657 7312                       u2577 708E                       u2497 6DF4  
                     u3627 6030                       u3547 5EA2                       u3467 638E  
                     u3387 5790                       u2907 7AAA                       u2827 784A  
                     u2747 75BC                       u2667 7358                       u2587 70CA  
                     u3557 5EB8                       u3477 6398                       u3397 57B4  
                     u2917 7AC6                       u2837 78CA                       u2757 75D8  
                     u2677 73DC                       u2597 70E6                       u3567 5EE4  
                     u3487 5E2A                       u2927 7B02                       u2847 78E6  
                     u2767 7614                       u2687 73F8                       u3577 5EFA  
                     u3497 5E3A                       u2937 7B1E                       u2857 7922  
                     u2777 7630                       u2697 7434                       u3587 5F9C  
                     u2947 7C5C                       u2867 793E                       u2787 776E  
                     u3597 5FA6                       u2957 7C98                       u2877 797A  
                     u2797 77AA                       u2967 7CB6                       u2887 7996  
                     u2977 7CF2                       u2897 7A6E                       u2987 7D38  
                     u2997 7D98               __CFG_PWRT$ON 000000                       abs@a 0013  
                     _dbuf 0072                       _ctoa 5550                       _main 6BB6  
                     _dtoa 6974                       _prec 0070                       _nout 006C  
                     pad@i 0018                       pad@p 0015                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001A                       fsr2l 000FD9                       start 0000  
            __CFG_IESO$OFF 000000       __end_of_Half_stepper 615E            __end_of_Lcd_Cmd 603C  
          __end_of_Lcd_Out 5782              __CFG_MCLRE$ON 000000               ___param_bank 000000  
             main@caracter 00D9                 _Lcd_Chr_CP 6280                      ??_abs 0015  
                    ??_pad 0017             Lcd_Out2@buffer 0005              __CFG_PLLDIV$1 000000  
          __end_of___aodiv 6610                      ?_ctoa 001C                      ?_main 0001  
                    ?_dtoa 001C            __end_of___aomod 64C8                      STR_10 7EFE  
                    STR_11 7FCD                      STR_12 7F0C                      STR_20 7EE2  
                    STR_13 7FD6                      STR_21 7E97                      STR_22 7F4C  
                    STR_30 7EA7                      STR_14 7F4C                      STR_23 7EA7  
                    STR_31 7F41                      STR_15 7EA7                      STR_40 7E87  
                    STR_32 7FDF                      STR_24 7F1A                      STR_16 7EB7  
                    STR_17 7FF8                      STR_41 7EE2                      STR_33 7FFB  
                    STR_25 7FED                      STR_50 7F4C                      STR_42 7E97  
                    STR_26 7FF7                      STR_18 7F78                      STR_34 7F27  
                    STR_43 7F4C                      STR_27 7EE2                      STR_51 7EA7  
                    STR_35 7FC3                      STR_19 7E87                      STR_52 7F41  
                    STR_44 7EA7                      STR_28 7FA4                      STR_60 7F6D  
                    STR_36 7EC6                      STR_29 7F4C                      STR_61 7E87  
                    STR_53 7FDF                      STR_45 7F1A                      STR_37 7F34  
                    STR_46 7FED                      STR_54 7FFB                      STR_62 7EE2  
                    STR_70 7FA4                      STR_38 7EF0                      STR_71 7F4C  
                    STR_47 7FF7                      STR_55 7F27                      STR_63 7E97  
                    STR_39 7F62                      STR_64 7F4C                      STR_48 7EE2  
                    STR_56 7FC3                      STR_80 7EF0                      STR_72 7EA7  
                    STR_57 7EC6                      STR_73 7F41                      STR_65 7EA7  
                    STR_49 7FA4                      STR_81 7FF2                      STR_74 7FDF  
                    STR_66 7F1A                      STR_58 7F34                      STR_82 7F57  
                    STR_67 7FED                      STR_75 7FFB                      STR_59 7EF0  
                    STR_83 7ED4                      STR_68 7FF7                      STR_76 7F27  
                    STR_84 7FB9                      STR_69 7EE2                      STR_77 7FC3  
                    STR_78 7EC6                      STR_79 7F34               vfpfcnvrt@fmt 0042  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTD 000F83  
            __CFG_USBDIV$1 000000                      _TRISA 000F92                      _TRISB 000F93  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
      ___lmul@multiplicand 0005              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _flags 005D  
                    _initM 54A0                      _fputc 5A60                      _fputs 5518  
                    _valor 0064                      pad@fp 0011                      _width 006E  
                    ctoa@c 001E                      _putch 5484                      ctoa@w 001F  
                    main@i 00D7                      dtoa@d 001E                      dtoa@i 003E  
                    dtoa@n 0036                      dtoa@p 0030                      dtoa@s 0034  
                    dtoa@w 0032            __end_of_teclado 678C                      tablat 000FF5  
                    status 000FD8            __end_of_sprintf 55F0             __CFG_ICPRT$OFF 000000  
            ?_Full_stepper 0001           __end_of_Lcd_Init 5F1E           __end_of_Lcd_Out2 570C  
          __initialization 5486               __end_of_ctoa 559E               __end_of_main 7E86  
             __end_of_dtoa 6BB6                     ??_ctoa 001F                     ??_main 0059  
                   ??_dtoa 0026              __activetblptr 000002            __CFG_CCP2MX$OFF 000000  
                   _ADCON1 000FC1                     ?_initM 0001                     ?_fputc 0001  
                   ?_fputs 000A           _Wave_stepper_izq 5938                     ?_putch 0001  
                ??_Lcd_Cmd 0001                  ??_Lcd_Out 0007          ?_opt_Full_stepper 000B  
__size_of_opt_Half_stepper 0104             ??_Full_stepper 0001         ??_opt_Full_stepper 0011  
           __CFG_XINST$OFF 000000               vfprintf@cfmt 0057                     ___lmul 55F0  
              ?_Lcd_Chr_CP 0001                  ??___aodiv 0011                  ??___aomod 0011  
           __CFG_STVREN$ON 000000   __end_of_opt_Wave_stepper 5E0C                     clear_0 548C  
                   pad@buf 0013                     ctoa@fp 001C                     dtoa@fp 001C  
                   _strlen 54BC                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_teclado 0001  
             __mediumconst 7E86                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001           __end_of_vfprintf 569C  
                ??_sprintf 0059      __size_of_Half_stepper 0122                 __accesstop 0060  
  __end_of__initialization 5496            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
        ?_Half_stepper_izq 0001             __pcstackCOMRAM 0001  opt_Full_stepper@direttion 000F  
       ??_Half_stepper_izq 0001              __end_of_initM 54BC              __end_of_fputc 5B00  
            __end_of_fputs 5550              __end_of_putch 5486  opt_Wave_stepper@direttion 000F  
             _Half_stepper 603C                  ?_Lcd_Init 0001  __size_of_Full_stepper_izq 0092  
                ?_Lcd_Out2 0004                    ??_initM 0001            __CFG_LPT1OSC$ON 000000  
                  ??_fputc 0005                    ??_fputs 000E        __size_of_Lcd_Chr_CP 0124  
                  ??_putch 0001                 __pbssBANK0 0060                    ?___lmul 0001  
           ___lmul@product 0009                    ?_strlen 0001       __end_of_Full_stepper 5814  
       __size_of_vfpfcnvrt 01E8                 ??_Lcd_Init 0004                 ??_Lcd_Out2 0007  
          __CFG_VREGEN$OFF 000000                    _Lcd_Cmd 5F1E                    _Lcd_Out 570C  
         _opt_Half_stepper 5C04                    __Hparam 0000                    __Lparam 0000  
                  ___aodiv 64C8                    ___aomod 63A4            __size_of___lmul 0056  
 __end_of_Wave_stepper_izq 59CA                  ?_vfprintf 0051                    __pcinit 5486  
                  __ramtop 0800              ?_Wave_stepper 0001                    __ptext0 6BB6  
                  __ptext1 6610                    __ptext2 559E                    __ptext3 5646  
                  __ptext4 678C                    __ptext5 6974                    __ptext6 54E6  
                  __ptext7 63A4                    __ptext8 64C8                    __ptext9 5550  
          __size_of_strlen 002A                    _palabra 00B4               __size_of_abs 0032  
             __size_of_pad 0096                    _teclado 6610                    main@dir 00DA  
                  _sprintf 559E       end_of_initialization 5496                    fputc@fp 0003  
            __Lmediumconst 7E86                    fputs@fp 000C          __end_of_vfpfcnvrt 6974  
             ??_Lcd_Chr_CP 0001                  Lcd_Out2@x 0004                  Lcd_Out2@y 0009  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 0057          ?_opt_Wave_stepper 000B  
           ??_Wave_stepper 0001                    strlen@a 0003                    strlen@s 0001  
__size_of_opt_Full_stepper 0104                  _PORTAbits 000F80                  _PORTBbits 000F81  
                _PORTDbits 000F83         ??_opt_Wave_stepper 0011                  _TRISDbits 000F95  
         _Full_stepper_izq 5814         __end_of_Lcd_Chr_CP 63A4      __size_of_Full_stepper 0092  
           __end_of___lmul 5646                vfpfcnvrt@ap 0044                vfpfcnvrt@fp 0040  
              vfpfcnvrt@ll 0048      opt_Wave_stepper@steps 000B             __end_of_strlen 54E6  
      start_initialization 5486  __size_of_Half_stepper_izq 0122                __end_of_abs 5518  
              __end_of_pad 5A60              Lcd_Out@buffer 0005          __size_of_Lcd_Init 0112  
        __size_of_Lcd_Out2 0070                  _Pasos_fun 0060               _Full_stepper 5782  
              vfprintf@fmt 0053                   ??___lmul 0009                   ??_strlen 0003  
 __end_of_opt_Half_stepper 5D08                __pbssCOMRAM 005D              __pcstackBANK0 00C5  
         ___aodiv@dividend 0001       __end_of_Wave_stepper 5938                   ?_Lcd_Cmd 0001  
                 ?_Lcd_Out 0004              __pmediumconst 7E86                   ?___aodiv 0001  
                 ?___aomod 0001           ___aodiv@quotient 0013          ?_Wave_stepper_izq 0001  
         _opt_Full_stepper 5B00         ??_Wave_stepper_izq 0001          __size_of_vfprintf 0056  
                 ?_teclado 0001                   ?_sprintf 00C5             __size_of_initM 001C  
           __size_of_fputc 00A0             __size_of_fputs 0038             __size_of_putch 0002  
 __end_of_Full_stepper_izq 58A6                   Lcd_Out@x 0004           __CFG_WDTPS$32768 000000  
                 Lcd_Out@y 0009                  _vfpfcnvrt 678C               Lcd_Init@data 0005  
         _Half_stepper_izq 615E                  main@pasos 00DD               Lcd_Out2@data 000A  
                 _Lcd_Init 5E0C                   _Lcd_Out2 569C                 vfpfcnvrt@c 0050  
        ___lmul@multiplier 0001                _INTCON2bits 000FF1  __size_of_opt_Wave_stepper 0104  
         __size_of_Lcd_Cmd 011E           __size_of_Lcd_Out 0076                   __Hrparam 0000  
               vfprintf@ap 0055                   __Lrparam 0000                 vfprintf@fp 0051  
         __size_of___aodiv 0148           __size_of___aomod 0124                 ?_vfpfcnvrt 0040  
          ___aodiv@divisor 0009            ___aodiv@counter 0011                 sprintf@fmt 00C7  
            ?_Half_stepper 0001             Lcd_Chr_CP@data 0003                   _dtoa$523 002E  
         __size_of_teclado 017C      __size_of_Wave_stepper 0092                   __ptext10 59CA  
                 __ptext11 54BC                   __ptext20 603C                   __ptext12 5518  
                 __ptext21 5B00                   __ptext13 5A60                   __ptext30 5F1E  
                 __ptext22 570C                   __ptext14 5484                   __ptext23 5814  
                 __ptext15 5D08                   __ptext24 5782                   __ptext16 5938  
                 __ptext25 54A0                   __ptext17 58A6                   __ptext26 55F0  
                 __ptext18 5C04                   __ptext27 569C                   __ptext19 615E  
                 __ptext28 6280                   __ptext29 5E0C                   _contador 0068  
         __size_of_sprintf 0052                   _palabra1 00A3                   _palabra2 0092  
              Lcd_Cmd@data 0003              __size_of_ctoa 004E              __size_of_main 12D0  
            __size_of_dtoa 0242      opt_Full_stepper@steps 000B                   _vfprintf 5646  
             _Wave_stepper 58A6           ___aomod@dividend 0001      __CFG_CPUDIV$OSC1_PLL2 000000  
        ?_opt_Half_stepper 000B             ??_Half_stepper 0001                Lcd_Out@data 000A  
       ??_opt_Half_stepper 0011      opt_Half_stepper@steps 000B                  sprintf@ap 00CF  
 __end_of_opt_Full_stepper 5C04  opt_Half_stepper@direttion 000F            ___aomod@divisor 0009  
              ??_vfpfcnvrt 0046            ___aomod@counter 0011                   sprintf@f 00D1  
                 sprintf@s 00C5  __size_of_Wave_stepper_izq 0092           _opt_Wave_stepper 5D08  
             ___aodiv@sign 0012               ___aomod@sign 0012   __end_of_Half_stepper_izq 6280  
