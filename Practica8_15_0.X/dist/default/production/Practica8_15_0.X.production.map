Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Practica8_15_0.X.production.sym \
  --cmf=dist/default/production\Practica8_15_0.X.production.cmf -z \
  -Q18F4550 -oC:\Users\Emmanuel\AppData\Local\Temp\sa8c.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Practica8_15_0.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0E1h-07FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Emmanuel\AppData\Local\Temp\sa8c.o \
  dist/default/production\Practica8_15_0.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Emmanuel\AppData\Local\Temp\sa8c.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Practica8_15_0.X.production.o
                mediumconst                        7E86     7E86      17A     3F43       0
                text30                             5F1E     5F1E      11E     2F8F       0
                text29                             5E0C     5E0C      112     2F06       0
                text28                             6280     6280      124     3140       0
                text27                             569C     569C       70     2B4E       0
                text26                             55F0     55F0       56     2AF8       0
                text25                             54A0     54A0       1C     2A50       0
                text24                             5782     5782       92     2BC1       0
                text23                             5814     5814       92     2C0A       0
                text22                             570C     570C       76     2B86       0
                text21                             5B00     5B00      104     2D80       0
                text20                             603C     603C      122     301E       0
                text19                             615E     615E      122     30AF       0
                text18                             5C04     5C04      104     2E02       0
                text17                             58A6     58A6       92     2C53       0
                text16                             5938     5938       92     2C9C       0
                text15                             5D08     5D08      104     2E84       0
                text14                             5484     5484        2     2A42       0
                text13                             5A60     5A60       A0     2D30       0
                text12                             5518     5518       38     2A8C       0
                text11                             54BC     54BC       2A     2A5E       0
                text10                             59CA     59CA       96     2CE5       0
                text9                              5550     5550       4E     2AA8       0
                text8                              64C8     64C8      148     3264       0
                text7                              63A4     63A4      124     31D2       0
                text6                              54E6     54E6       32     2A73       0
                text5                              6974     6974      242     34BA       0
                text4                              678C     678C      1E8     33C6       0
                text3                              5646     5646       56     2B23       0
                text2                              559E     559E       52     2ACF       0
                text1                              6610     6610      17C     3308       0
                text0                              6BB6     6BB6     12D0     35DB       0
                cstackCOMRAM                          1        1       5C        1       1
                cstackBANK0                          C5       C5       1C       60       1
                bssBANK0                             60       60       65       60       1
                bssCOMRAM                            5D       5D        2        1       1
                cinit                              5486     5486       1A     2A43       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text30                             5F1E     5F1E      11E         0
                text29                             5E0C     5E0C      112         0
                text28                             6280     6280      124         0
                text27                             569C     569C       70         0
                text26                             55F0     55F0       56         0
                text25                             54A0     54A0       1C         0
                text24                             5782     5782       92         0
                text23                             5814     5814       92         0
                text22                             570C     570C       76         0
                text21                             5B00     5B00      104         0
                text20                             603C     603C      122         0
                text19                             615E     615E      122         0
                text18                             5C04     5C04      104         0
                text17                             58A6     58A6       92         0
                text16                             5938     5938       92         0
                text15                             5D08     5D08      104         0
                text14                             5484     5484        2         0
                text13                             5A60     5A60       A0         0
                text12                             5518     5518       38         0
                text11                             54BC     54BC       2A         0
                text10                             59CA     59CA       96         0
                text9                              5550     5550       4E         0
                text8                              64C8     64C8      148         0
                text7                              63A4     63A4      124         0
                text6                              54E6     54E6       32         0
                text5                              6974     6974      242         0
                text4                              678C     678C      1E8         0
                text3                              5646     5646       56         0
                text2                              559E     559E       52         0
                text1                              6610     6610      17C         0
                text0                              6BB6     6BB6     12D0         0
                cinit                              5486     5486       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7E86     7E86      17A         0

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5C         1
                bssCOMRAM                            5D       5D        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          C5       C5       1C         1
                bssBANK0                             60       60       65         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005E  00005F         1       1  COMRAM  
                bssBANK0                       000060  000081  0000E1        60       1  BANK0   
                text14                         005484  000002  005486      2A42       0  CODE    
                cinit                          005486  00001A  0054A0      2A43       0  CODE    
                text25                         0054A0  00001C  0054BC      2A50       0  CODE    
                text11                         0054BC  00002A  0054E6      2A5E       0  CODE    
                text6                          0054E6  000032  005518      2A73       0  CODE    
                text12                         005518  000038  005550      2A8C       0  CODE    
                text9                          005550  00004E  00559E      2AA8       0  CODE    
                text2                          00559E  000052  0055F0      2ACF       0  CODE    
                text26                         0055F0  000056  005646      2AF8       0  CODE    
                text3                          005646  000056  00569C      2B23       0  CODE    
                text27                         00569C  000070  00570C      2B4E       0  CODE    
                text22                         00570C  000076  005782      2B86       0  CODE    
                text24                         005782  000092  005814      2BC1       0  CODE    
                text23                         005814  000092  0058A6      2C0A       0  CODE    
                text17                         0058A6  000092  005938      2C53       0  CODE    
                text16                         005938  000092  0059CA      2C9C       0  CODE    
                text10                         0059CA  000096  005A60      2CE5       0  CODE    
                text13                         005A60  0000A0  005B00      2D30       0  CODE    
                text21                         005B00  000104  005C04      2D80       0  CODE    
                text18                         005C04  000104  005D08      2E02       0  CODE    
                text15                         005D08  000104  005E0C      2E84       0  CODE    
                text29                         005E0C  000112  005F1E      2F06       0  CODE    
                text30                         005F1E  00011E  00603C      2F8F       0  CODE    
                text20                         00603C  000122  00615E      301E       0  CODE    
                text19                         00615E  000122  006280      30AF       0  CODE    
                text28                         006280  000124  0063A4      3140       0  CODE    
                text7                          0063A4  000124  0064C8      31D2       0  CODE    
                text8                          0064C8  000148  006610      3264       0  CODE    
                text1                          006610  00017C  00678C      3308       0  CODE    
                text4                          00678C  0001E8  006974      33C6       0  CODE    
                text5                          006974  000242  006BB6      34BA       0  CODE    
                text0                          006BB6  0012D0  007E86      35DB       0  CODE    
                mediumconst                    007E86  00017A  008000      3F43       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000E1-0000FF               1F
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00005F-00005F                1
                         0000E1-0007FF              71F
        CODE             000004-005483             5480
        COMRAM           00005F-00005F                1
        CONST            000004-005483             5480
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-005483             4C84
        RAM              0000E1-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-005483              100
        STACK            0000E1-0007FF              71F

                                  Symbol Table

?___aodiv                  cstackCOMRAM 000001
?___aomod                  cstackCOMRAM 000001
?___lmul                   cstackCOMRAM 000001
?_abs                      cstackCOMRAM 000013
?_ctoa                     cstackCOMRAM 00001C
?_dtoa                     cstackCOMRAM 00001C
?_pad                      cstackCOMRAM 000011
?_sprintf                  cstackBANK0  0000C5
?_strlen                   cstackCOMRAM 000001
?_vfpfcnvrt                cstackCOMRAM 000040
?_vfprintf                 cstackCOMRAM 000051
Lcd_Chr_CP@data            cstackCOMRAM 000003
Lcd_Cmd@data               cstackCOMRAM 000003
Lcd_Init@data              cstackCOMRAM 000005
Lcd_Out2@buffer            cstackCOMRAM 000005
Lcd_Out2@data              cstackCOMRAM 00000A
Lcd_Out2@x                 cstackCOMRAM 000004
Lcd_Out2@y                 cstackCOMRAM 000009
Lcd_Out@buffer             cstackCOMRAM 000005
Lcd_Out@data               cstackCOMRAM 00000A
Lcd_Out@x                  cstackCOMRAM 000004
Lcd_Out@y                  cstackCOMRAM 000009
_ADCON1                    (abs)        000FC1
_Full_stepper              text24       005782
_Full_stepper_izq          text23       005814
_Half_stepper              text20       00603C
_Half_stepper_izq          text19       00615E
_INTCON2bits               (abs)        000FF1
_LATB                      (abs)        000F8A
_Lcd_Chr_CP                text28       006280
_Lcd_Cmd                   text30       005F1E
_Lcd_Init                  text29       005E0C
_Lcd_Out                   text22       00570C
_Lcd_Out2                  text27       00569C
_PORTA                     (abs)        000F80
_PORTAbits                 (abs)        000F80
_PORTB                     (abs)        000F81
_PORTBbits                 (abs)        000F81
_PORTD                     (abs)        000F83
_PORTDbits                 (abs)        000F83
_Pasos_fun                 bssBANK0     000060
_TRISA                     (abs)        000F92
_TRISB                     (abs)        000F93
_TRISDbits                 (abs)        000F95
_Wave_stepper              text17       0058A6
_Wave_stepper_izq          text16       005938
__CFG_BOR$OFF              (abs)        000000
__CFG_BORV$3               (abs)        000000
__CFG_CCP2MX$OFF           (abs)        000000
__CFG_CP0$OFF              (abs)        000000
__CFG_CP1$OFF              (abs)        000000
__CFG_CP2$OFF              (abs)        000000
__CFG_CP3$OFF              (abs)        000000
__CFG_CPB$OFF              (abs)        000000
__CFG_CPD$OFF              (abs)        000000
__CFG_CPUDIV$OSC1_PLL2     (abs)        000000
__CFG_EBTR0$OFF            (abs)        000000
__CFG_EBTR1$OFF            (abs)        000000
__CFG_EBTR2$OFF            (abs)        000000
__CFG_EBTR3$OFF            (abs)        000000
__CFG_EBTRB$OFF            (abs)        000000
__CFG_FCMEN$OFF            (abs)        000000
__CFG_FOSC$HS              (abs)        000000
__CFG_ICPRT$OFF            (abs)        000000
__CFG_IESO$OFF             (abs)        000000
__CFG_LPT1OSC$ON           (abs)        000000
__CFG_LVP$OFF              (abs)        000000
__CFG_MCLRE$ON             (abs)        000000
__CFG_PBADEN$OFF           (abs)        000000
__CFG_PLLDIV$1             (abs)        000000
__CFG_PWRT$ON              (abs)        000000
__CFG_STVREN$ON            (abs)        000000
__CFG_USBDIV$1             (abs)        000000
__CFG_VREGEN$OFF           (abs)        000000
__CFG_WDT$OFF              (abs)        000000
__CFG_WDTPS$32768          (abs)        000000
__CFG_WRT0$OFF             (abs)        000000
__CFG_WRT1$OFF             (abs)        000000
__CFG_WRT2$OFF             (abs)        000000
__CFG_WRT3$OFF             (abs)        000000
__CFG_WRTB$OFF             (abs)        000000
__CFG_WRTC$OFF             (abs)        000000
__CFG_WRTD$OFF             (abs)        000000
__CFG_XINST$OFF            (abs)        000000
__HRAM                     (abs)        000000
__Habs1                    abs1         000000
__Hbank0                   bank0        000000
__Hbank1                   bank1        000000
__Hbank2                   bank2        000000
__Hbank3                   bank3        000000
__Hbank4                   bank4        000000
__Hbank5                   bank5        000000
__Hbank6                   bank6        000000
__Hbank7                   bank7        000000
__Hbigbss                  bigbss       000000
__Hbigdata                 bigdata      000000
__Hbigram                  bigram       000000
__Hbss                     bss          000000
__HbssBANK0                bssBANK0     000000
__HbssCOMRAM               bssCOMRAM    000000
__Hcinit                   cinit        000000
__Hclrtext                 clrtext      000000
__Hcomram                  comram       000000
__Hconfig                  config       30000E
__Hconst                   const        000000
__HcstackBANK0             cstackBANK0  000000
__HcstackCOMRAM            cstackCOMRAM 000000
__Hdata                    data         000000
__Heeprom_data             eeprom_data  000000
__Hfarbss                  farbss       000000
__Hfardata                 fardata      000000
__Hibigdata                ibigdata     000000
__Hidata                   idata        000000
__Hidloc                   idloc        200008
__Hifardata                ifardata     000000
__Hinit                    init         000004
__Hintcode                 intcode      000000
__Hintcode_body            intcode_body 000000
__Hintcodelo               intcodelo    000000
__Hintentry                intentry     000000
__Hintret                  intret       000000
__Hintsave_regs            intsave_regs 000000
__Hirdata                  irdata       000000
__Hmediumconst             mediumconst  008000
__HnvFARRAM                nvFARRAM     000000
__Hnvbit                   nvbit        000000
__Hnvrram                  nvrram       000000
__Hparam                   rparam       000000
__Hpowerup                 powerup      000000
__Hram                     ram          000000
__Hramtop                  ramtop       000800
__Hrbit                    rbit         000000
__Hrbss                    rbss         000000
__Hrdata                   rdata        000000
__Hreset_vec               reset_vec    000000
__Hrparam                  rparam       000000
__Hsfr                     sfr          000000
__Hsmallconst              smallconst   000000
__Hspace_0                 (abs)        30000E
__Hspace_1                 (abs)        0000E1
__Hspace_2                 (abs)        000000
__Hstack                   stack        000000
__Hstruct                  struct       000000
__Htemp                    temp         000000
__Htext                    text         000000
__Htext0                   text0        000000
__Htext1                   text1        000000
__Htext10                  text10       000000
__Htext11                  text11       000000
__Htext12                  text12       000000
__Htext13                  text13       000000
__Htext14                  text14       000000
__Htext15                  text15       000000
__Htext16                  text16       000000
__Htext17                  text17       000000
__Htext18                  text18       000000
__Htext19                  text19       000000
__Htext2                   text2        000000
__Htext20                  text20       000000
__Htext21                  text21       000000
__Htext22                  text22       000000
__Htext23                  text23       000000
__Htext24                  text24       000000
__Htext25                  text25       000000
__Htext26                  text26       000000
__Htext27                  text27       000000
__Htext28                  text28       000000
__Htext29                  text29       000000
__Htext3                   text3        000000
__Htext30                  text30       000000
__Htext4                   text4        000000
__Htext5                   text5        000000
__Htext6                   text6        000000
__Htext7                   text7        000000
__Htext8                   text8        000000
__Htext9                   text9        000000
__LRAM                     (abs)        000001
__Labs1                    abs1         000000
__Lbank0                   bank0        000000
__Lbank1                   bank1        000000
__Lbank2                   bank2        000000
__Lbank3                   bank3        000000
__Lbank4                   bank4        000000
__Lbank5                   bank5        000000
__Lbank6                   bank6        000000
__Lbank7                   bank7        000000
__Lbigbss                  bigbss       000000
__Lbigdata                 bigdata      000000
__Lbigram                  bigram       000000
__Lbss                     bss          000000
__LbssBANK0                bssBANK0     000000
__LbssCOMRAM               bssCOMRAM    000000
__Lcinit                   cinit        000000
__Lclrtext                 clrtext      000000
__Lcomram                  comram       000000
__Lconfig                  config       300000
__Lconst                   const        000000
__LcstackBANK0             cstackBANK0  000000
__LcstackCOMRAM            cstackCOMRAM 000000
__Ldata                    data         000000
__Leeprom_data             eeprom_data  000000
__Lfarbss                  farbss       000000
__Lfardata                 fardata      000000
__Libigdata                ibigdata     000000
__Lidata                   idata        000000
__Lidloc                   idloc        200000
__Lifardata                ifardata     000000
__Linit                    init         000000
__Lintcode                 intcode      000000
__Lintcode_body            intcode_body 000000
__Lintcodelo               intcodelo    000000
__Lintentry                intentry     000000
__Lintret                  intret       000000
__Lintsave_regs            intsave_regs 000000
__Lirdata                  irdata       000000
__Lmediumconst             mediumconst  007E86
__LnvFARRAM                nvFARRAM     000000
__Lnvbit                   nvbit        000000
__Lnvrram                  nvrram       000000
__Lparam                   rparam       000000
__Lpowerup                 powerup      000000
__Lram                     ram          000000
__Lramtop                  ramtop       000800
__Lrbit                    rbit         000000
__Lrbss                    rbss         000000
__Lrdata                   rdata        000000
__Lreset_vec               reset_vec    000000
__Lrparam                  rparam       000000
__Lsfr                     sfr          000000
__Lsmallconst              smallconst   000000
__Lspace_0                 (abs)        000000
__Lspace_1                 (abs)        000000
__Lspace_2                 (abs)        000000
__Lstack                   stack        000000
__Lstruct                  struct       000000
__Ltemp                    temp         000000
__Ltext                    text         000000
__Ltext0                   text0        000000
__Ltext1                   text1        000000
__Ltext10                  text10       000000
__Ltext11                  text11       000000
__Ltext12                  text12       000000
__Ltext13                  text13       000000
__Ltext14                  text14       000000
__Ltext15                  text15       000000
__Ltext16                  text16       000000
__Ltext17                  text17       000000
__Ltext18                  text18       000000
__Ltext19                  text19       000000
__Ltext2                   text2        000000
__Ltext20                  text20       000000
__Ltext21                  text21       000000
__Ltext22                  text22       000000
__Ltext23                  text23       000000
__Ltext24                  text24       000000
__Ltext25                  text25       000000
__Ltext26                  text26       000000
__Ltext27                  text27       000000
__Ltext28                  text28       000000
__Ltext29                  text29       000000
__Ltext3                   text3        000000
__Ltext30                  text30       000000
__Ltext4                   text4        000000
__Ltext5                   text5        000000
__Ltext6                   text6        000000
__Ltext7                   text7        000000
__Ltext8                   text8        000000
__Ltext9                   text9        000000
__S0                       (abs)        30000E
__S1                       (abs)        0000E1
__S2                       (abs)        000000
___aodiv                   text8        0064C8
___aodiv@counter           cstackCOMRAM 000011
___aodiv@dividend          cstackCOMRAM 000001
___aodiv@divisor           cstackCOMRAM 000009
___aodiv@quotient          cstackCOMRAM 000013
___aodiv@sign              cstackCOMRAM 000012
___aomod                   text7        0063A4
___aomod@counter           cstackCOMRAM 000011
___aomod@dividend          cstackCOMRAM 000001
___aomod@divisor           cstackCOMRAM 000009
___aomod@sign              cstackCOMRAM 000012
___inthi_sp                stack        000000
___intlo_sp                stack        000000
___lmul                    text26       0055F0
___lmul@multiplicand       cstackCOMRAM 000005
___lmul@multiplier         cstackCOMRAM 000001
___lmul@product            cstackCOMRAM 000009
___param_bank              (abs)        000000
___rparam_used             (abs)        000001
___sp                      stack        000000
__accesstop                (abs)        000060
__activetblptr             (abs)        000002
__end_of_Full_stepper      text24       005814
__end_of_Full_stepper_izq  text23       0058A6
__end_of_Half_stepper      text20       00615E
__end_of_Half_stepper_izq  text19       006280
__end_of_Lcd_Chr_CP        text28       0063A4
__end_of_Lcd_Cmd           text30       00603C
__end_of_Lcd_Init          text29       005F1E
__end_of_Lcd_Out           text22       005782
__end_of_Lcd_Out2          text27       00570C
__end_of_Wave_stepper      text17       005938
__end_of_Wave_stepper_izq  text16       0059CA
__end_of___aodiv           text8        006610
__end_of___aomod           text7        0064C8
__end_of___lmul            text26       005646
__end_of__initialization   cinit        005496
__end_of_abs               text6        005518
__end_of_ctoa              text9        00559E
__end_of_dtoa              text5        006BB6
__end_of_fputc             text13       005B00
__end_of_fputs             text12       005550
__end_of_initM             text25       0054BC
__end_of_main              text0        007E86
__end_of_opt_Full_stepper  text21       005C04
__end_of_opt_Half_stepper  text18       005D08
__end_of_opt_Wave_stepper  text15       005E0C
__end_of_pad               text10       005A60
__end_of_putch             text14       005486
__end_of_sprintf           text2        0055F0
__end_of_strlen            text11       0054E6
__end_of_teclado           text1        00678C
__end_of_vfpfcnvrt         text4        006974
__end_of_vfprintf          text3        00569C
__initialization           cinit        005486
__mediumconst              mediumconst  007E86
__pbssBANK0                bssBANK0     000060
__pbssCOMRAM               bssCOMRAM    00005D
__pcinit                   cinit        005486
__pcstackBANK0             cstackBANK0  0000C5
__pcstackCOMRAM            cstackCOMRAM 000001
__pmediumconst             mediumconst  007E86
__ptext0                   text0        006BB6
__ptext1                   text1        006610
__ptext10                  text10       0059CA
__ptext11                  text11       0054BC
__ptext12                  text12       005518
__ptext13                  text13       005A60
__ptext14                  text14       005484
__ptext15                  text15       005D08
__ptext16                  text16       005938
__ptext17                  text17       0058A6
__ptext18                  text18       005C04
__ptext19                  text19       00615E
__ptext2                   text2        00559E
__ptext20                  text20       00603C
__ptext21                  text21       005B00
__ptext22                  text22       00570C
__ptext23                  text23       005814
__ptext24                  text24       005782
__ptext25                  text25       0054A0
__ptext26                  text26       0055F0
__ptext27                  text27       00569C
__ptext28                  text28       006280
__ptext29                  text29       005E0C
__ptext3                   text3        005646
__ptext30                  text30       005F1E
__ptext4                   text4        00678C
__ptext5                   text5        006974
__ptext6                   text6        0054E6
__ptext7                   text7        0063A4
__ptext8                   text8        0064C8
__ptext9                   text9        005550
__ramtop                   ramtop       000800
__size_of_Full_stepper     (abs)        000000
__size_of_Full_stepper_izq (abs)        000000
__size_of_Half_stepper     (abs)        000000
__size_of_Half_stepper_izq (abs)        000000
__size_of_Lcd_Chr_CP       (abs)        000000
__size_of_Lcd_Cmd          (abs)        000000
__size_of_Lcd_Init         (abs)        000000
__size_of_Lcd_Out          (abs)        000000
__size_of_Lcd_Out2         (abs)        000000
__size_of_Wave_stepper     (abs)        000000
__size_of_Wave_stepper_izq (abs)        000000
__size_of___aodiv          (abs)        000000
__size_of___aomod          (abs)        000000
__size_of___lmul           (abs)        000000
__size_of_abs              (abs)        000000
__size_of_ctoa             (abs)        000000
__size_of_dtoa             (abs)        000000
__size_of_fputc            (abs)        000000
__size_of_fputs            (abs)        000000
__size_of_initM            (abs)        000000
__size_of_main             (abs)        000000
__size_of_opt_Full_stepper (abs)        000000
__size_of_opt_Half_stepper (abs)        000000
__size_of_opt_Wave_stepper (abs)        000000
__size_of_pad              (abs)        000000
__size_of_putch            (abs)        000000
__size_of_sprintf          (abs)        000000
__size_of_strlen           (abs)        000000
__size_of_teclado          (abs)        000000
__size_of_vfpfcnvrt        (abs)        000000
__size_of_vfprintf         (abs)        000000
__smallconst               smallconst   000000
_abs                       text6        0054E6
_contador                  bssBANK0     000068
_ctoa                      text9        005550
_dbuf                      bssBANK0     000072
_dtoa                      text5        006974
_dtoa$523                  cstackCOMRAM 00002E
_flags                     bssCOMRAM    00005D
_fputc                     text13       005A60
_fputs                     text12       005518
_initM                     text25       0054A0
_main                      text0        006BB6
_nout                      bssBANK0     00006C
_opt_Full_stepper          text21       005B00
_opt_Half_stepper          text18       005C04
_opt_Wave_stepper          text15       005D08
_pad                       text10       0059CA
_palabra                   bssBANK0     0000B4
_palabra1                  bssBANK0     0000A3
_palabra2                  bssBANK0     000092
_prec                      bssBANK0     000070
_putch                     text14       005484
_sprintf                   text2        00559E
_strlen                    text11       0054BC
_teclado                   text1        006610
_valor                     bssBANK0     000064
_vfpfcnvrt                 text4        00678C
_vfprintf                  text3        005646
_width                     bssBANK0     00006E
abs@a                      cstackCOMRAM 000013
ctoa@c                     cstackCOMRAM 00001E
ctoa@fp                    cstackCOMRAM 00001C
ctoa@w                     cstackCOMRAM 00001F
dtoa@d                     cstackCOMRAM 00001E
dtoa@fp                    cstackCOMRAM 00001C
dtoa@i                     cstackCOMRAM 00003E
dtoa@n                     cstackCOMRAM 000036
dtoa@p                     cstackCOMRAM 000030
dtoa@s                     cstackCOMRAM 000034
dtoa@w                     cstackCOMRAM 000032
end_of_initialization      cinit        005496
fputc@c                    cstackCOMRAM 000001
fputc@fp                   cstackCOMRAM 000003
fputs@c                    cstackCOMRAM 00000E
fputs@fp                   cstackCOMRAM 00000C
fputs@i                    cstackCOMRAM 00000F
fputs@s                    cstackCOMRAM 00000A
intlevel0                  text         000000
intlevel1                  text         000000
intlevel2                  text         000000
intlevel3                  text         000000
main@Dir_sel               cstackBANK0  0000DC
main@caracter              cstackBANK0  0000D9
main@dir                   cstackBANK0  0000DA
main@i                     cstackBANK0  0000D7
main@pasos                 cstackBANK0  0000DD
opt_Full_stepper@direttion cstackCOMRAM 00000F
opt_Full_stepper@steps     cstackCOMRAM 00000B
opt_Half_stepper@direttion cstackCOMRAM 00000F
opt_Half_stepper@steps     cstackCOMRAM 00000B
opt_Wave_stepper@direttion cstackCOMRAM 00000F
opt_Wave_stepper@steps     cstackCOMRAM 00000B
pad@buf                    cstackCOMRAM 000013
pad@fp                     cstackCOMRAM 000011
pad@i                      cstackCOMRAM 000018
pad@p                      cstackCOMRAM 000015
pad@w                      cstackCOMRAM 00001A
sprintf@ap                 cstackBANK0  0000CF
sprintf@f                  cstackBANK0  0000D1
sprintf@fmt                cstackBANK0  0000C7
sprintf@s                  cstackBANK0  0000C5
stackhi                    (abs)        0007FF
stacklo                    (abs)        0000E1
start                      init         000000
start_initialization       cinit        005486
strlen@a                   cstackCOMRAM 000003
strlen@s                   cstackCOMRAM 000001
vfpfcnvrt@ap               cstackCOMRAM 000044
vfpfcnvrt@c                cstackCOMRAM 000050
vfpfcnvrt@fmt              cstackCOMRAM 000042
vfpfcnvrt@fp               cstackCOMRAM 000040
vfpfcnvrt@ll               cstackCOMRAM 000048
vfprintf@ap                cstackCOMRAM 000055
vfprintf@cfmt              cstackCOMRAM 000057
vfprintf@fmt               cstackCOMRAM 000053
vfprintf@fp                cstackCOMRAM 000051


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 19 in file "Practica8_15_03_19.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   18[BANK0 ] int 
  pasos           4   24[BANK0 ] long 
  dir             2   21[BANK0 ] short 
  Dir_sel         1   23[BANK0 ] unsigned char 
  caracter        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0      10       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         4      10       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Out
		_Lcd_Out2
		___lmul
		_initM
		_opt_Full_stepper
		_opt_Half_stepper
		_opt_Wave_stepper
		_sprintf
		_teclado
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _teclado *****************
 Defined at:
		line 324 in file "Practica8_15_03_19.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
 Parameters:    Size  Location     Type
  s               2    0[BANK0 ] PTR unsigned char 
		 -> palabra2(17), palabra1(17), palabra(17), 
  fmt             2    2[BANK0 ] PTR const unsigned char 
		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
		 -> STR_33(4), STR_26(4), STR_17(3), 
 Auto vars:     Size  Location     Type
  f               6   12[BANK0 ] struct _IO_FILE
  ap              2   10[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  ret             2    0        int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       8       0       0       0       0       0       0       0
      Locals:         0      10       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      18       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vfprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vfprintf *****************
 Defined at:
		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   80[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   82[COMRAM] PTR const unsigned char 
		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
		 -> STR_33(4), STR_26(4), STR_17(3), 
  ap              2   84[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  cfmt            2   86[COMRAM] PTR unsigned char 
		 -> STR_75(4), STR_68(4), STR_54(4), STR_47(4), 
		 -> STR_33(4), STR_26(4), STR_17(3), 
 Return value:  Size  Location     Type
                  2   80[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_vfpfcnvrt
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _vfpfcnvrt *****************
 Defined at:
		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   63[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   65[COMRAM] PTR PTR unsigned char 
		 -> vfprintf@cfmt(2), 
  ap              2   67[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  ll              8   71[COMRAM] long long 
  llu             8    0        unsigned long long 
  f               4    0        unsigned long long 
  vp              3    0        PTR void 
  ct              3    0        unsigned char [3]
  cp              3    0        PTR unsigned char 
  i               2    0        int 
  done            2    0        int 
  c               1   79[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   63[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         9       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        17       0       0       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ctoa
		_dtoa
		_fputc
 This function is called by:
		_vfprintf
 This function uses a non-reentrant model


 *************** function _dtoa *****************
 Defined at:
		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   27[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  d               8   29[COMRAM] long long 
 Auto vars:     Size  Location     Type
  n               8   53[COMRAM] long long 
  i               2   61[COMRAM] int 
  s               2   51[COMRAM] int 
  w               2   49[COMRAM] int 
  p               2   47[COMRAM] int 
 Return value:  Size  Location     Type
                  2   27[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        10       0       0       0       0       0       0       0       0
      Locals:        18       0       0       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0       0       0
      Totals:        36       0       0       0       0       0       0       0       0
Total ram usage:       36 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___aodiv
		___aomod
		_abs
		_pad
 This function is called by:
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _abs *****************
 Defined at:
		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 Parameters:    Size  Location     Type
  a               2   18[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   18[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function ___aomod *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] long long 
  divisor         8    8[COMRAM] long long 
 Auto vars:     Size  Location     Type
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] long long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        16       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function ___aodiv *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] long long 
  divisor         8    8[COMRAM] long long 
 Auto vars:     Size  Location     Type
  quotient        8   18[COMRAM] long long 
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        16       0       0       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        26       0       0       0       0       0       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function _ctoa *****************
 Defined at:
		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   27[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  c               1   29[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  w               2   30[COMRAM] int 
  l               2    0        int 
 Return value:  Size  Location     Type
                  2   27[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_pad
 This function is called by:
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _pad *****************
 Defined at:
		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   16[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  buf             2   18[COMRAM] PTR unsigned char 
		 -> dbuf(32), 
  p               2   20[COMRAM] int 
 Auto vars:     Size  Location     Type
  w               2   25[COMRAM] int 
  i               2   23[COMRAM] int 
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fputc
		_fputs
		_strlen
 This function is called by:
		_ctoa
		_dtoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Auto vars:     Size  Location     Type
  a               2    2[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputs *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 Parameters:    Size  Location     Type
  s               2    9[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
  fp              2   11[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
  i               2   14[COMRAM] int 
  c               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_fputc
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputc *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 Parameters:    Size  Location     Type
  c               2    0[COMRAM] int 
  fp              2    2[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_putch
 This function is called by:
		_pad
		_vfpfcnvrt
		_fputs
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fputc
 This function uses a non-reentrant model


 *************** function _opt_Wave_stepper *****************
 Defined at:
		line 124 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
  steps           4   10[COMRAM] long 
  direttion       2   14[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Out
		_Wave_stepper
		_Wave_stepper_izq
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Wave_stepper_izq *****************
 Defined at:
		line 74 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Wave_stepper
 This function uses a non-reentrant model


 *************** function _Wave_stepper *****************
 Defined at:
		line 35 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Wave_stepper
 This function uses a non-reentrant model


 *************** function _opt_Half_stepper *****************
 Defined at:
		line 146 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
  steps           4   10[COMRAM] long 
  direttion       2   14[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Half_stepper
		_Half_stepper_izq
		_Lcd_Cmd
		_Lcd_Out
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Half_stepper_izq *****************
 Defined at:
		line 84 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Half_stepper
 This function uses a non-reentrant model


 *************** function _Half_stepper *****************
 Defined at:
		line 45 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Half_stepper
 This function uses a non-reentrant model


 *************** function _opt_Full_stepper *****************
 Defined at:
		line 102 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
  steps           4   10[COMRAM] long 
  direttion       2   14[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Full_stepper
		_Full_stepper_izq
		_Lcd_Cmd
		_Lcd_Out
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Out *****************
 Defined at:
		line 94 in file "./flex_lcd.h"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
  x               1    3[COMRAM] unsigned char 
  buffer          2    4[COMRAM] PTR const unsigned char 
		 -> STR_84(10), STR_83(14), STR_82(11), STR_81(5), 
		 -> STR_80(14), STR_79(13), STR_78(14), STR_77(10), 
		 -> STR_76(13), STR_74(7), STR_73(11), STR_72(16), 
		 -> STR_71(11), STR_70(11), STR_69(14), STR_67(5), 
		 -> STR_66(13), STR_65(16), STR_64(11), STR_63(16), 
		 -> STR_62(14), STR_61(16), STR_60(11), STR_59(14), 
		 -> STR_58(13), STR_57(14), STR_56(10), STR_55(13), 
		 -> STR_53(7), STR_52(11), STR_51(16), STR_50(11), 
		 -> STR_49(11), STR_48(14), STR_46(5), STR_45(13), 
		 -> STR_44(16), STR_43(11), STR_42(16), STR_41(14), 
		 -> STR_40(16), STR_39(11), STR_38(14), STR_37(13), 
		 -> STR_36(14), STR_35(10), STR_34(13), STR_32(7), 
		 -> STR_31(11), STR_30(16), STR_29(11), STR_28(11), 
		 -> STR_27(14), STR_25(5), STR_24(13), STR_23(16), 
		 -> STR_22(11), STR_21(16), STR_20(14), STR_19(16), 
		 -> STR_18(11), STR_16(15), STR_15(16), STR_14(11), 
		 -> STR_13(9), STR_12(14), STR_11(9), STR_10(14), 
		 -> STR_9(11), STR_8(10), STR_7(11), STR_6(11), 
		 -> STR_5(7), STR_4(11), STR_3(7), STR_2(11), 
		 -> STR_1(7), 
 Auto vars:     Size  Location     Type
  y               1    8[COMRAM] unsigned char 
  data            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Chr_CP
		_Lcd_Cmd
 This function is called by:
		_opt_Full_stepper
		_opt_Wave_stepper
		_opt_Half_stepper
		_main
 This function uses a non-reentrant model


 *************** function _Full_stepper_izq *****************
 Defined at:
		line 64 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Full_stepper
 This function uses a non-reentrant model


 *************** function _Full_stepper *****************
 Defined at:
		line 25 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_opt_Full_stepper
 This function uses a non-reentrant model


 *************** function _initM *****************
 Defined at:
		line 20 in file "./Prueba1.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMRAM] unsigned long 
  multiplicand    4    4[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    8[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Out2 *****************
 Defined at:
		line 115 in file "./flex_lcd.h"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
  x               1    3[COMRAM] unsigned char 
  buffer          2    4[COMRAM] PTR unsigned char 
		 -> palabra2(17), palabra1(17), palabra(17), 
 Auto vars:     Size  Location     Type
  y               1    8[COMRAM] unsigned char 
  data            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Chr_CP
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Chr_CP *****************
 Defined at:
		line 136 in file "./flex_lcd.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Out
		_Lcd_Out2
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 52 in file "./flex_lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 150 in file "./flex_lcd.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Init
		_Lcd_Out
		_Lcd_Out2
		_opt_Full_stepper
		_opt_Wave_stepper
		_opt_Half_stepper
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c
		___lmul        		CODE           	55F0	0000	87

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c estimated size: 87

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c
		_putch         		CODE           	5484	0000	3

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c estimated size: 3

./flex_lcd.h
		_Lcd_Init      		CODE           	5E0C	0000	275
		_Lcd_Out       		CODE           	570C	0000	119
		_Lcd_Out2      		CODE           	569C	0000	113
		_Lcd_Chr_CP    		CODE           	6280	0000	293
		_Lcd_Cmd       		CODE           	5F1E	0000	287

./flex_lcd.h estimated size: 1087

Practica8_15_03_19.c
		_main          		CODE           	6BB6	0000	4817
		_teclado       		CODE           	6610	0000	381

Practica8_15_03_19.c estimated size: 5198

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c
		_fputc         		CODE           	5A60	0000	161

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c estimated size: 161

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c
		___aodiv       		CODE           	64C8	0000	329

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c estimated size: 329

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	54BC	0000	43

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c estimated size: 43

./Prueba1.h
		_Full_stepper  		CODE           	5782	0000	147
		_opt_Half_stepper		CODE           	5C04	0000	261
		_Half_stepper  		CODE           	603C	0000	291
		_Full_stepper_izq		CODE           	5814	0000	147
		_Half_stepper_izq		CODE           	615E	0000	291
		_initM         		CODE           	54A0	0000	29
		_opt_Wave_stepper		CODE           	5D08	0000	261
		_opt_Full_stepper		CODE           	5B00	0000	261
		_Wave_stepper  		CODE           	58A6	0000	147
		_Wave_stepper_izq		CODE           	5938	0000	147

./Prueba1.h estimated size: 1982

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
		_vfpfcnvrt     		CODE           	678C	0000	489
		_pad           		CODE           	59CA	0000	151
		_ctoa          		CODE           	5550	0000	79
		_dtoa          		CODE           	6974	0000	579
		_vfprintf      		CODE           	5646	0000	87

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c estimated size: 1385

shared
		__initialization		CODE           	5486	0000	17

shared estimated size: 17

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c
		_sprintf       		CODE           	559E	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c estimated size: 83

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c
		_abs           		CODE           	54E6	0000	51

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c estimated size: 51

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c
		_fputs         		CODE           	5518	0000	57

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c estimated size: 57

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c
		___aomod       		CODE           	63A4	0000	293

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c estimated size: 293

