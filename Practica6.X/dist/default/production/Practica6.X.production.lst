

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 04 22:07:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	nvBANK0
    73  0000E7                     __pnvBANK0:
    74                           	opt callstack 0
    75  0000E7                     _saldo:
    76                           	opt callstack 0
    77  0000E7                     	ds	4
    78  0000EB                     _pasword:
    79                           	opt callstack 0
    80  0000EB                     	ds	2
    81  0000                     _LATB	set	3978
    82  0000                     _PORTBbits	set	3969
    83  0000                     _PORTB	set	3969
    84  0000                     _PORTD	set	3971
    85  0000                     _TRISB	set	3987
    86  0000                     _INTCON2bits	set	4081
    87  0000                     _ADCON1	set	4033
    88  0000                     _PORTDbits	set	3971
    89  0000                     _TRISDbits	set	3989
    90                           
    91                           	psect	mediumconst
    92  007D2E                     __pmediumconst:
    93                           	opt callstack 0
    94  007D2E  00                 	db	0
    95  007D2F                     STR_20:
    96  007D2F  53                 	db	83	;'S'
    97  007D30  6F                 	db	111	;'o'
    98  007D31  6C                 	db	108	;'l'
    99  007D32  6F                 	db	111	;'o'
   100  007D33  20                 	db	32
   101  007D34  70                 	db	112	;'p'
   102  007D35  6F                 	db	111	;'o'
   103  007D36  64                 	db	100	;'d'
   104  007D37  72                 	db	114	;'r'
   105  007D38  61                 	db	97	;'a'
   106  007D39  20                 	db	32
   107  007D3A  64                 	db	100	;'d'
   108  007D3B  65                 	db	101	;'e'
   109  007D3C  70                 	db	112	;'p'
   110  007D3D  6F                 	db	111	;'o'
   111  007D3E  73                 	db	115	;'s'
   112  007D3F  69                 	db	105	;'i'
   113  007D40  74                 	db	116	;'t'
   114  007D41  61                 	db	97	;'a'
   115  007D42  72                 	db	114	;'r'
   116  007D43  20                 	db	32
   117  007D44  6D                 	db	109	;'m'
   118  007D45  61                 	db	97	;'a'
   119  007D46  78                 	db	120	;'x'
   120  007D47  69                 	db	105	;'i'
   121  007D48  6D                 	db	109	;'m'
   122  007D49  6F                 	db	111	;'o'
   123  007D4A  20                 	db	32
   124  007D4B  39                 	db	57	;'9'
   125  007D4C  30                 	db	48	;'0'
   126  007D4D  30                 	db	48	;'0'
   127  007D4E  30                 	db	48	;'0'
   128  007D4F  20                 	db	32
   129  007D50  70                 	db	112	;'p'
   130  007D51  65                 	db	101	;'e'
   131  007D52  73                 	db	115	;'s'
   132  007D53  6F                 	db	111	;'o'
   133  007D54  73                 	db	115	;'s'
   134  007D55  00                 	db	0
   135  007D56                     STR_31:
   136  007D56  53                 	db	83	;'S'
   137  007D57  6F                 	db	111	;'o'
   138  007D58  6C                 	db	108	;'l'
   139  007D59  6F                 	db	111	;'o'
   140  007D5A  20                 	db	32
   141  007D5B  70                 	db	112	;'p'
   142  007D5C  6F                 	db	111	;'o'
   143  007D5D  64                 	db	100	;'d'
   144  007D5E  72                 	db	114	;'r'
   145  007D5F  61                 	db	97	;'a'
   146  007D60  20                 	db	32
   147  007D61  72                 	db	114	;'r'
   148  007D62  65                 	db	101	;'e'
   149  007D63  74                 	db	116	;'t'
   150  007D64  69                 	db	105	;'i'
   151  007D65  72                 	db	114	;'r'
   152  007D66  61                 	db	97	;'a'
   153  007D67  72                 	db	114	;'r'
   154  007D68  20                 	db	32
   155  007D69  6D                 	db	109	;'m'
   156  007D6A  61                 	db	97	;'a'
   157  007D6B  78                 	db	120	;'x'
   158  007D6C  69                 	db	105	;'i'
   159  007D6D  6D                 	db	109	;'m'
   160  007D6E  6F                 	db	111	;'o'
   161  007D6F  20                 	db	32
   162  007D70  39                 	db	57	;'9'
   163  007D71  30                 	db	48	;'0'
   164  007D72  30                 	db	48	;'0'
   165  007D73  30                 	db	48	;'0'
   166  007D74  20                 	db	32
   167  007D75  70                 	db	112	;'p'
   168  007D76  65                 	db	101	;'e'
   169  007D77  73                 	db	115	;'s'
   170  007D78  6F                 	db	111	;'o'
   171  007D79  73                 	db	115	;'s'
   172  007D7A  00                 	db	0
   173  007D7B                     STR_21:
   174  007D7B  50                 	db	80	;'P'
   175  007D7C  72                 	db	114	;'r'
   176  007D7D  65                 	db	101	;'e'
   177  007D7E  73                 	db	115	;'s'
   178  007D7F  69                 	db	105	;'i'
   179  007D80  6F                 	db	111	;'o'
   180  007D81  6E                 	db	110	;'n'
   181  007D82  61                 	db	97	;'a'
   182  007D83  20                 	db	32
   183  007D84  2A                 	db	42
   184  007D85  20                 	db	32
   185  007D86  63                 	db	99	;'c'
   186  007D87  75                 	db	117	;'u'
   187  007D88  61                 	db	97	;'a'
   188  007D89  6E                 	db	110	;'n'
   189  007D8A  64                 	db	100	;'d'
   190  007D8B  6F                 	db	111	;'o'
   191  007D8C  20                 	db	32
   192  007D8D  74                 	db	116	;'t'
   193  007D8E  65                 	db	101	;'e'
   194  007D8F  72                 	db	114	;'r'
   195  007D90  6D                 	db	109	;'m'
   196  007D91  69                 	db	105	;'i'
   197  007D92  6E                 	db	110	;'n'
   198  007D93  65                 	db	101	;'e'
   199  007D94  00                 	db	0
   200  007D95                     STR_32:
   201  007D95  50                 	db	80	;'P'
   202  007D96  72                 	db	114	;'r'
   203  007D97  65                 	db	101	;'e'
   204  007D98  73                 	db	115	;'s'
   205  007D99  69                 	db	105	;'i'
   206  007D9A  6F                 	db	111	;'o'
   207  007D9B  6E                 	db	110	;'n'
   208  007D9C  65                 	db	101	;'e'
   209  007D9D  20                 	db	32
   210  007D9E  2A                 	db	42
   211  007D9F  20                 	db	32
   212  007DA0  63                 	db	99	;'c'
   213  007DA1  75                 	db	117	;'u'
   214  007DA2  61                 	db	97	;'a'
   215  007DA3  6E                 	db	110	;'n'
   216  007DA4  64                 	db	100	;'d'
   217  007DA5  6F                 	db	111	;'o'
   218  007DA6  20                 	db	32
   219  007DA7  74                 	db	116	;'t'
   220  007DA8  65                 	db	101	;'e'
   221  007DA9  72                 	db	114	;'r'
   222  007DAA  6D                 	db	109	;'m'
   223  007DAB  69                 	db	105	;'i'
   224  007DAC  6E                 	db	110	;'n'
   225  007DAD  65                 	db	101	;'e'
   226  007DAE  00                 	db	0
   227  007DAF                     STR_44:
   228  007DAF  41                 	db	65	;'A'
   229  007DB0  6C                 	db	108	;'l'
   230  007DB1  20                 	db	32
   231  007DB2  66                 	db	102	;'f'
   232  007DB3  69                 	db	105	;'i'
   233  007DB4  6E                 	db	110	;'n'
   234  007DB5  2C                 	db	44
   235  007DB6  20                 	db	32
   236  007DB7  79                 	db	121	;'y'
   237  007DB8  61                 	db	97	;'a'
   238  007DB9  20                 	db	32
   239  007DBA  65                 	db	101	;'e'
   240  007DBB  72                 	db	114	;'r'
   241  007DBC  61                 	db	97	;'a'
   242  007DBD  20                 	db	32
   243  007DBE  74                 	db	116	;'t'
   244  007DBF  69                 	db	105	;'i'
   245  007DC0  65                 	db	101	;'e'
   246  007DC1  6D                 	db	109	;'m'
   247  007DC2  70                 	db	112	;'p'
   248  007DC3  6F                 	db	111	;'o'
   249  007DC4  00                 	db	0
   250  007DC5                     STR_45:
   251  007DC5  59                 	db	89	;'Y'
   252  007DC6  61                 	db	97	;'a'
   253  007DC7  20                 	db	32
   254  007DC8  73                 	db	115	;'s'
   255  007DC9  65                 	db	101	;'e'
   256  007DCA  20                 	db	32
   257  007DCB  68                 	db	104	;'h'
   258  007DCC  61                 	db	97	;'a'
   259  007DCD  62                 	db	98	;'b'
   260  007DCE  69                 	db	105	;'i'
   261  007DCF  61                 	db	97	;'a'
   262  007DD0  20                 	db	32
   263  007DD1  74                 	db	116	;'t'
   264  007DD2  61                 	db	97	;'a'
   265  007DD3  72                 	db	114	;'r'
   266  007DD4  64                 	db	100	;'d'
   267  007DD5  61                 	db	97	;'a'
   268  007DD6  64                 	db	100	;'d'
   269  007DD7  6F                 	db	111	;'o'
   270  007DD8  00                 	db	0
   271  007DD9                     STR_40:
   272  007DD9  53                 	db	83	;'S'
   273  007DDA  61                 	db	97	;'a'
   274  007DDB  6C                 	db	108	;'l'
   275  007DDC  64                 	db	100	;'d'
   276  007DDD  6F                 	db	111	;'o'
   277  007DDE  20                 	db	32
   278  007DDF  69                 	db	105	;'i'
   279  007DE0  6E                 	db	110	;'n'
   280  007DE1  73                 	db	115	;'s'
   281  007DE2  75                 	db	117	;'u'
   282  007DE3  66                 	db	102	;'f'
   283  007DE4  69                 	db	105	;'i'
   284  007DE5  63                 	db	99	;'c'
   285  007DE6  69                 	db	105	;'i'
   286  007DE7  65                 	db	101	;'e'
   287  007DE8  6E                 	db	110	;'n'
   288  007DE9  74                 	db	116	;'t'
   289  007DEA  65                 	db	101	;'e'
   290  007DEB  00                 	db	0
   291  007DEC                     STR_58:
   292  007DEC  50                 	db	80	;'P'
   293  007DED  75                 	db	117	;'u'
   294  007DEE  65                 	db	101	;'e'
   295  007DEF  73                 	db	115	;'s'
   296  007DF0  20                 	db	32
   297  007DF1  79                 	db	121	;'y'
   298  007DF2  61                 	db	97	;'a'
   299  007DF3  20                 	db	32
   300  007DF4  65                 	db	101	;'e'
   301  007DF5  73                 	db	115	;'s'
   302  007DF6  74                 	db	116	;'t'
   303  007DF7  61                 	db	97	;'a'
   304  007DF8  20                 	db	32
   305  007DF9  76                 	db	118	;'v'
   306  007DFA  69                 	db	105	;'i'
   307  007DFB  65                 	db	101	;'e'
   308  007DFC  6A                 	db	106	;'j'
   309  007DFD  6F                 	db	111	;'o'
   310  007DFE  00                 	db	0
   311  007DFF                     STR_6:
   312  007DFF  2A                 	db	42
   313  007E00  2A                 	db	42
   314  007E01  2A                 	db	42
   315  007E02  2A                 	db	42
   316  007E03  2A                 	db	42
   317  007E04  2A                 	db	42
   318  007E05  2A                 	db	42
   319  007E06  2A                 	db	42
   320  007E07  2A                 	db	42
   321  007E08  2A                 	db	42
   322  007E09  2A                 	db	42
   323  007E0A  2A                 	db	42
   324  007E0B  2A                 	db	42
   325  007E0C  2A                 	db	42
   326  007E0D  2A                 	db	42
   327  007E0E  2A                 	db	42
   328  007E0F  00                 	db	0
   329  007E10                     STR_29:
   330  007E10  53                 	db	83	;'S'
   331  007E11  61                 	db	97	;'a'
   332  007E12  6C                 	db	108	;'l'
   333  007E13  64                 	db	100	;'d'
   334  007E14  6F                 	db	111	;'o'
   335  007E15  20                 	db	32
   336  007E16  64                 	db	100	;'d'
   337  007E17  65                 	db	101	;'e'
   338  007E18  70                 	db	112	;'p'
   339  007E19  6F                 	db	111	;'o'
   340  007E1A  73                 	db	115	;'s'
   341  007E1B  69                 	db	105	;'i'
   342  007E1C  74                 	db	116	;'t'
   343  007E1D  61                 	db	97	;'a'
   344  007E1E  64                 	db	100	;'d'
   345  007E1F  6F                 	db	111	;'o'
   346  007E20  00                 	db	0
   347  007E21                     STR_56:
   348  007E21  43                 	db	67	;'C'
   349  007E22  61                 	db	97	;'a'
   350  007E23  6D                 	db	109	;'m'
   351  007E24  62                 	db	98	;'b'
   352  007E25  69                 	db	105	;'i'
   353  007E26  6F                 	db	111	;'o'
   354  007E27  20                 	db	32
   355  007E28  72                 	db	114	;'r'
   356  007E29  65                 	db	101	;'e'
   357  007E2A  61                 	db	97	;'a'
   358  007E2B  6C                 	db	108	;'l'
   359  007E2C  69                 	db	105	;'i'
   360  007E2D  7A                 	db	122	;'z'
   361  007E2E  61                 	db	97	;'a'
   362  007E2F  64                 	db	100	;'d'
   363  007E30  6F                 	db	111	;'o'
   364  007E31  00                 	db	0
   365  007E32                     STR_54:
   366  007E32  49                 	db	73	;'I'
   367  007E33  6E                 	db	110	;'n'
   368  007E34  74                 	db	116	;'t'
   369  007E35  65                 	db	101	;'e'
   370  007E36  6E                 	db	110	;'n'
   371  007E37  74                 	db	116	;'t'
   372  007E38  65                 	db	101	;'e'
   373  007E39  20                 	db	32
   374  007E3A  6F                 	db	111	;'o'
   375  007E3B  74                 	db	116	;'t'
   376  007E3C  72                 	db	114	;'r'
   377  007E3D  61                 	db	97	;'a'
   378  007E3E  20                 	db	32
   379  007E3F  76                 	db	118	;'v'
   380  007E40  65                 	db	101	;'e'
   381  007E41  7A                 	db	122	;'z'
   382  007E42  00                 	db	0
   383  007E43                     STR_7:
   384  007E43  49                 	db	73	;'I'
   385  007E44  6E                 	db	110	;'n'
   386  007E45  67                 	db	103	;'g'
   387  007E46  72                 	db	114	;'r'
   388  007E47  65                 	db	101	;'e'
   389  007E48  73                 	db	115	;'s'
   390  007E49  61                 	db	97	;'a'
   391  007E4A  20                 	db	32
   392  007E4B  74                 	db	116	;'t'
   393  007E4C  75                 	db	117	;'u'
   394  007E4D  20                 	db	32
   395  007E4E  70                 	db	112	;'p'
   396  007E4F  69                 	db	105	;'i'
   397  007E50  6E                 	db	110	;'n'
   398  007E51  3A                 	db	58	;':'
   399  007E52  00                 	db	0
   400  007E53                     STR_15:
   401  007E53  4C                 	db	76	;'L'
   402  007E54  69                 	db	105	;'i'
   403  007E55  73                 	db	115	;'s'
   404  007E56  74                 	db	116	;'t'
   405  007E57  6F                 	db	111	;'o'
   406  007E58  2C                 	db	44
   407  007E59  20                 	db	32
   408  007E5A  70                 	db	112	;'p'
   409  007E5B  72                 	db	114	;'r'
   410  007E5C  65                 	db	101	;'e'
   411  007E5D  73                 	db	115	;'s'
   412  007E5E  69                 	db	105	;'i'
   413  007E5F  6F                 	db	111	;'o'
   414  007E60  6E                 	db	110	;'n'
   415  007E61  65                 	db	101	;'e'
   416  007E62  00                 	db	0
   417  007E63                     STR_25:
   418  007E63  44                 	db	68	;'D'
   419  007E64  65                 	db	101	;'e'
   420  007E65  70                 	db	112	;'p'
   421  007E66  6F                 	db	111	;'o'
   422  007E67  73                 	db	115	;'s'
   423  007E68  69                 	db	105	;'i'
   424  007E69  74                 	db	116	;'t'
   425  007E6A  6F                 	db	111	;'o'
   426  007E6B  20                 	db	32
   427  007E6C  6D                 	db	109	;'m'
   428  007E6D  61                 	db	97	;'a'
   429  007E6E  78                 	db	120	;'x'
   430  007E6F  69                 	db	105	;'i'
   431  007E70  6D                 	db	109	;'m'
   432  007E71  6F                 	db	111	;'o'
   433  007E72  00                 	db	0
   434  007E73                     STR_67:
   435  007E73  44                 	db	68	;'D'
   436  007E74  3A                 	db	58	;':'
   437  007E75  43                 	db	67	;'C'
   438  007E76  61                 	db	97	;'a'
   439  007E77  6D                 	db	109	;'m'
   440  007E78  62                 	db	98	;'b'
   441  007E79  69                 	db	105	;'i'
   442  007E7A  6F                 	db	111	;'o'
   443  007E7B  20                 	db	32
   444  007E7C  64                 	db	100	;'d'
   445  007E7D  65                 	db	101	;'e'
   446  007E7E  20                 	db	32
   447  007E7F  6E                 	db	110	;'n'
   448  007E80  69                 	db	105	;'i'
   449  007E81  70                 	db	112	;'p'
   450  007E82  00                 	db	0
   451  007E83                     STR_13:
   452  007E83  50                 	db	80	;'P'
   453  007E84  69                 	db	105	;'i'
   454  007E85  65                 	db	101	;'e'
   455  007E86  6E                 	db	110	;'n'
   456  007E87  73                 	db	115	;'s'
   457  007E88  65                 	db	101	;'e'
   458  007E89  20                 	db	32
   459  007E8A  75                 	db	117	;'u'
   460  007E8B  6E                 	db	110	;'n'
   461  007E8C  20                 	db	32
   462  007E8D  70                 	db	112	;'p'
   463  007E8E  6F                 	db	111	;'o'
   464  007E8F  63                 	db	99	;'c'
   465  007E90  6F                 	db	111	;'o'
   466  007E91  00                 	db	0
   467  007E92                     STR_42:
   468  007E92  53                 	db	83	;'S'
   469  007E93  61                 	db	97	;'a'
   470  007E94  6C                 	db	108	;'l'
   471  007E95  64                 	db	100	;'d'
   472  007E96  6F                 	db	111	;'o'
   473  007E97  20                 	db	32
   474  007E98  72                 	db	114	;'r'
   475  007E99  65                 	db	101	;'e'
   476  007E9A  74                 	db	116	;'t'
   477  007E9B  69                 	db	105	;'i'
   478  007E9C  72                 	db	114	;'r'
   479  007E9D  61                 	db	97	;'a'
   480  007E9E  64                 	db	100	;'d'
   481  007E9F  6F                 	db	111	;'o'
   482  007EA0  00                 	db	0
   483  007EA1                     STR_10:
   484  007EA1  50                 	db	80	;'P'
   485  007EA2  69                 	db	105	;'i'
   486  007EA3  6E                 	db	110	;'n'
   487  007EA4  20                 	db	32
   488  007EA5  69                 	db	105	;'i'
   489  007EA6  6E                 	db	110	;'n'
   490  007EA7  63                 	db	99	;'c'
   491  007EA8  6F                 	db	111	;'o'
   492  007EA9  72                 	db	114	;'r'
   493  007EAA  72                 	db	114	;'r'
   494  007EAB  65                 	db	101	;'e'
   495  007EAC  63                 	db	99	;'c'
   496  007EAD  74                 	db	116	;'t'
   497  007EAE  6F                 	db	111	;'o'
   498  007EAF  00                 	db	0
   499  007EB0                     STR_11:
   500  007EB0  4E                 	db	78	;'N'
   501  007EB1  6F                 	db	111	;'o'
   502  007EB2  20                 	db	32
   503  007EB3  72                 	db	114	;'r'
   504  007EB4  65                 	db	101	;'e'
   505  007EB5  63                 	db	99	;'c'
   506  007EB6  75                 	db	117	;'u'
   507  007EB7  65                 	db	101	;'e'
   508  007EB8  72                 	db	114	;'r'
   509  007EB9  64                 	db	100	;'d'
   510  007EBA  61                 	db	97	;'a'
   511  007EBB  20                 	db	32
   512  007EBC  73                 	db	115	;'s'
   513  007EBD  75                 	db	117	;'u'
   514  007EBE  00                 	db	0
   515  007EBF                     STR_27:
   516  007EBF  49                 	db	73	;'I'
   517  007EC0  6E                 	db	110	;'n'
   518  007EC1  74                 	db	116	;'t'
   519  007EC2  65                 	db	101	;'e'
   520  007EC3  6E                 	db	110	;'n'
   521  007EC4  74                 	db	116	;'t'
   522  007EC5  61                 	db	97	;'a'
   523  007EC6  6C                 	db	108	;'l'
   524  007EC7  6F                 	db	111	;'o'
   525  007EC8  20                 	db	32
   526  007EC9  64                 	db	100	;'d'
   527  007ECA  65                 	db	101	;'e'
   528  007ECB  20                 	db	32
   529  007ECC  00                 	db	0
   530  007ECD                     STR_3:
   531  007ECD  45                 	db	69	;'E'
   532  007ECE  53                 	db	83	;'S'
   533  007ECF  54                 	db	84	;'T'
   534  007ED0  45                 	db	69	;'E'
   535  007ED1  20                 	db	32
   536  007ED2  53                 	db	83	;'S'
   537  007ED3  55                 	db	85	;'U'
   538  007ED4  20                 	db	32
   539  007ED5  42                 	db	66	;'B'
   540  007ED6  41                 	db	65	;'A'
   541  007ED7  4E                 	db	78	;'N'
   542  007ED8  43                 	db	67	;'C'
   543  007ED9  4F                 	db	79	;'O'
   544  007EDA  00                 	db	0
   545  007EDB                     STR_43:
   546  007EDB  43                 	db	67	;'C'
   547  007EDC  61                 	db	97	;'a'
   548  007EDD  6D                 	db	109	;'m'
   549  007EDE  62                 	db	98	;'b'
   550  007EDF  69                 	db	105	;'i'
   551  007EE0  6F                 	db	111	;'o'
   552  007EE1  20                 	db	32
   553  007EE2  64                 	db	100	;'d'
   554  007EE3  65                 	db	101	;'e'
   555  007EE4  20                 	db	32
   556  007EE5  4E                 	db	78	;'N'
   557  007EE6  49                 	db	73	;'I'
   558  007EE7  50                 	db	80	;'P'
   559  007EE8  00                 	db	0
   560  007EE9                     STR_53:
   561  007EE9  50                 	db	80	;'P'
   562  007EEA  49                 	db	73	;'I'
   563  007EEB  4E                 	db	78	;'N'
   564  007EEC  20                 	db	32
   565  007EED  6E                 	db	110	;'n'
   566  007EEE  6F                 	db	111	;'o'
   567  007EEF  20                 	db	32
   568  007EF0  76                 	db	118	;'v'
   569  007EF1  61                 	db	97	;'a'
   570  007EF2  6C                 	db	108	;'l'
   571  007EF3  69                 	db	105	;'i'
   572  007EF4  64                 	db	100	;'d'
   573  007EF5  6F                 	db	111	;'o'
   574  007EF6  00                 	db	0
   575  007EF7                     STR_36:
   576  007EF7  52                 	db	82	;'R'
   577  007EF8  65                 	db	101	;'e'
   578  007EF9  74                 	db	116	;'t'
   579  007EFA  69                 	db	105	;'i'
   580  007EFB  72                 	db	114	;'r'
   581  007EFC  6F                 	db	111	;'o'
   582  007EFD  20                 	db	32
   583  007EFE  6D                 	db	109	;'m'
   584  007EFF  61                 	db	97	;'a'
   585  007F00  78                 	db	120	;'x'
   586  007F01  69                 	db	105	;'i'
   587  007F02  6D                 	db	109	;'m'
   588  007F03  6F                 	db	111	;'o'
   589  007F04  00                 	db	0
   590  007F05                     STR_17:
   591  007F05  53                 	db	83	;'S'
   592  007F06  75                 	db	117	;'u'
   593  007F07  20                 	db	32
   594  007F08  73                 	db	115	;'s'
   595  007F09  61                 	db	97	;'a'
   596  007F0A  6C                 	db	108	;'l'
   597  007F0B  64                 	db	100	;'d'
   598  007F0C  6F                 	db	111	;'o'
   599  007F0D  20                 	db	32
   600  007F0E  65                 	db	101	;'e'
   601  007F0F  73                 	db	115	;'s'
   602  007F10  3A                 	db	58	;':'
   603  007F11  00                 	db	0
   604  007F12                     STR_63:
   605  007F12  64                 	db	100	;'d'
   606  007F13  69                 	db	105	;'i'
   607  007F14  73                 	db	115	;'s'
   608  007F15  70                 	db	112	;'p'
   609  007F16  6F                 	db	111	;'o'
   610  007F17  6E                 	db	110	;'n'
   611  007F18  69                 	db	105	;'i'
   612  007F19  62                 	db	98	;'b'
   613  007F1A  6C                 	db	108	;'l'
   614  007F1B  65                 	db	101	;'e'
   615  007F1C  73                 	db	115	;'s'
   616  007F1D  3A                 	db	58	;':'
   617  007F1E  00                 	db	0
   618  007F1F                     STR_4:
   619  007F1F  4A                 	db	74	;'J'
   620  007F20  57                 	db	87	;'W'
   621  007F21  20                 	db	32
   622  007F22  52                 	db	82	;'R'
   623  007F23  45                 	db	69	;'E'
   624  007F24  44                 	db	68	;'D'
   625  007F25  20                 	db	32
   626  007F26  4C                 	db	76	;'L'
   627  007F27  41                 	db	65	;'A'
   628  007F28  42                 	db	66	;'B'
   629  007F29  45                 	db	69	;'E'
   630  007F2A  4C                 	db	76	;'L'
   631  007F2B  00                 	db	0
   632  007F2C                     STR_5:
   633  007F2C  48                 	db	72	;'H'
   634  007F2D  6F                 	db	111	;'o'
   635  007F2E  6C                 	db	108	;'l'
   636  007F2F  61                 	db	97	;'a'
   637  007F30  2C                 	db	44
   638  007F31  20                 	db	32
   639  007F32  48                 	db	72	;'H'
   640  007F33  75                 	db	117	;'u'
   641  007F34  6D                 	db	109	;'m'
   642  007F35  61                 	db	97	;'a'
   643  007F36  6E                 	db	110	;'n'
   644  007F37  6F                 	db	111	;'o'
   645  007F38  00                 	db	0
   646  007F39                     STR_28:
   647  007F39  6E                 	db	110	;'n'
   648  007F3A  75                 	db	117	;'u'
   649  007F3B  65                 	db	101	;'e'
   650  007F3C  76                 	db	118	;'v'
   651  007F3D  6F                 	db	111	;'o'
   652  007F3E  20                 	db	32
   653  007F3F  68                 	db	104	;'h'
   654  007F40  75                 	db	117	;'u'
   655  007F41  6D                 	db	109	;'m'
   656  007F42  61                 	db	97	;'a'
   657  007F43  6E                 	db	110	;'n'
   658  007F44  6F                 	db	111	;'o'
   659  007F45  00                 	db	0
   660  007F46                     STR_9:
   661  007F46  50                 	db	80	;'P'
   662  007F47  69                 	db	105	;'i'
   663  007F48  6E                 	db	110	;'n'
   664  007F49  20                 	db	32
   665  007F4A  43                 	db	67	;'C'
   666  007F4B  6F                 	db	111	;'o'
   667  007F4C  72                 	db	114	;'r'
   668  007F4D  72                 	db	114	;'r'
   669  007F4E  65                 	db	101	;'e'
   670  007F4F  63                 	db	99	;'c'
   671  007F50  74                 	db	116	;'t'
   672  007F51  6F                 	db	111	;'o'
   673  007F52  00                 	db	0
   674  007F53                     STR_57:
   675  007F53  66                 	db	102	;'f'
   676  007F54  65                 	db	101	;'e'
   677  007F55  6C                 	db	108	;'l'
   678  007F56  69                 	db	105	;'i'
   679  007F57  63                 	db	99	;'c'
   680  007F58  69                 	db	105	;'i'
   681  007F59  64                 	db	100	;'d'
   682  007F5A  61                 	db	97	;'a'
   683  007F5B  64                 	db	100	;'d'
   684  007F5C  65                 	db	101	;'e'
   685  007F5D  73                 	db	115	;'s'
   686  007F5E  00                 	db	0
   687  007F5F                     STR_62:
   688  007F5F  4F                 	db	79	;'O'
   689  007F60  70                 	db	112	;'p'
   690  007F61  65                 	db	101	;'e'
   691  007F62  72                 	db	114	;'r'
   692  007F63  61                 	db	97	;'a'
   693  007F64  63                 	db	99	;'c'
   694  007F65  69                 	db	105	;'i'
   695  007F66  6F                 	db	111	;'o'
   696  007F67  6E                 	db	110	;'n'
   697  007F68  65                 	db	101	;'e'
   698  007F69  73                 	db	115	;'s'
   699  007F6A  00                 	db	0
   700  007F6B                     STR_64:
   701  007F6B  41                 	db	65	;'A'
   702  007F6C  3A                 	db	58	;':'
   703  007F6D  43                 	db	67	;'C'
   704  007F6E  6F                 	db	111	;'o'
   705  007F6F  6E                 	db	110	;'n'
   706  007F70  73                 	db	115	;'s'
   707  007F71  75                 	db	117	;'u'
   708  007F72  6C                 	db	108	;'l'
   709  007F73  74                 	db	116	;'t'
   710  007F74  61                 	db	97	;'a'
   711  007F75  00                 	db	0
   712  007F76                     STR_1:
   713  007F76  42                 	db	66	;'B'
   714  007F77  69                 	db	105	;'i'
   715  007F78  65                 	db	101	;'e'
   716  007F79  6E                 	db	110	;'n'
   717  007F7A  76                 	db	118	;'v'
   718  007F7B  65                 	db	101	;'e'
   719  007F7C  6E                 	db	110	;'n'
   720  007F7D  69                 	db	105	;'i'
   721  007F7E  64                 	db	100	;'d'
   722  007F7F  6F                 	db	111	;'o'
   723  007F80  00                 	db	0
   724  007F81                     STR_65:
   725  007F81  42                 	db	66	;'B'
   726  007F82  3A                 	db	58	;':'
   727  007F83  44                 	db	68	;'D'
   728  007F84  65                 	db	101	;'e'
   729  007F85  70                 	db	112	;'p'
   730  007F86  6F                 	db	111	;'o'
   731  007F87  73                 	db	115	;'s'
   732  007F88  69                 	db	105	;'i'
   733  007F89  74                 	db	116	;'t'
   734  007F8A  6F                 	db	111	;'o'
   735  007F8B  00                 	db	0
   736  007F8C                     STR_22:
   737  007F8C  49                 	db	73	;'I'
   738  007F8D  6E                 	db	110	;'n'
   739  007F8E  67                 	db	103	;'g'
   740  007F8F  72                 	db	114	;'r'
   741  007F90  65                 	db	101	;'e'
   742  007F91  73                 	db	115	;'s'
   743  007F92  65                 	db	101	;'e'
   744  007F93  20                 	db	32
   745  007F94  73                 	db	115	;'s'
   746  007F95  75                 	db	117	;'u'
   747  007F96  00                 	db	0
   748  007F97                     STR_23:
   749  007F97  44                 	db	68	;'D'
   750  007F98  65                 	db	101	;'e'
   751  007F99  70                 	db	112	;'p'
   752  007F9A  6F                 	db	111	;'o'
   753  007F9B  73                 	db	115	;'s'
   754  007F9C  69                 	db	105	;'i'
   755  007F9D  74                 	db	116	;'t'
   756  007F9E  6F                 	db	111	;'o'
   757  007F9F  3A                 	db	58	;':'
   758  007FA0  00                 	db	0
   759  007FA1                     STR_26:
   760  007FA1  61                 	db	97	;'a'
   761  007FA2  6C                 	db	108	;'l'
   762  007FA3  63                 	db	99	;'c'
   763  007FA4  61                 	db	97	;'a'
   764  007FA5  6E                 	db	110	;'n'
   765  007FA6  7A                 	db	122	;'z'
   766  007FA7  61                 	db	97	;'a'
   767  007FA8  64                 	db	100	;'d'
   768  007FA9  6F                 	db	111	;'o'
   769  007FAA  00                 	db	0
   770  007FAB                     STR_41:
   771  007FAB  50                 	db	80	;'P'
   772  007FAC  6F                 	db	111	;'o'
   773  007FAD  62                 	db	98	;'b'
   774  007FAE  72                 	db	114	;'r'
   775  007FAF  65                 	db	101	;'e'
   776  007FB0  20                 	db	32
   777  007FB1  58                 	db	88	;'X'
   778  007FB2  44                 	db	68	;'D'
   779  007FB3  00                 	db	0
   780  007FB4                     STR_66:
   781  007FB4  43                 	db	67	;'C'
   782  007FB5  3A                 	db	58	;':'
   783  007FB6  52                 	db	82	;'R'
   784  007FB7  65                 	db	101	;'e'
   785  007FB8  74                 	db	116	;'t'
   786  007FB9  69                 	db	105	;'i'
   787  007FBA  72                 	db	114	;'r'
   788  007FBB  6F                 	db	111	;'o'
   789  007FBC  00                 	db	0
   790  007FBD                     STR_34:
   791  007FBD  52                 	db	82	;'R'
   792  007FBE  65                 	db	101	;'e'
   793  007FBF  74                 	db	116	;'t'
   794  007FC0  69                 	db	105	;'i'
   795  007FC1  72                 	db	114	;'r'
   796  007FC2  6F                 	db	111	;'o'
   797  007FC3  3A                 	db	58	;':'
   798  007FC4  00                 	db	0
   799  007FC5                     STR_12:
   800  007FC5  70                 	db	112	;'p'
   801  007FC6  69                 	db	105	;'i'
   802  007FC7  6E                 	db	110	;'n'
   803  007FC8  20                 	db	32
   804  007FC9  58                 	db	88	;'X'
   805  007FCA  27                 	db	39
   806  007FCB  43                 	db	67	;'C'
   807  007FCC  00                 	db	0
   808  007FCD                     STR_68:
   809  007FCD  23                 	db	35
   810  007FCE  3A                 	db	58	;':'
   811  007FCF  53                 	db	83	;'S'
   812  007FD0  61                 	db	97	;'a'
   813  007FD1  6C                 	db	108	;'l'
   814  007FD2  69                 	db	105	;'i'
   815  007FD3  72                 	db	114	;'r'
   816  007FD4  00                 	db	0
   817  007FD5                     STR_59:
   818  007FD5  65                 	db	101	;'e'
   819  007FD6  6C                 	db	108	;'l'
   820  007FD7  20                 	db	32
   821  007FD8  4E                 	db	78	;'N'
   822  007FD9  49                 	db	73	;'I'
   823  007FDA  50                 	db	80	;'P'
   824  007FDB  00                 	db	0
   825  007FDC                     STR_18:
   826  007FDC  20                 	db	32
   827  007FDD  20                 	db	32
   828  007FDE  24                 	db	36
   829  007FDF  25                 	db	37
   830  007FE0  64                 	db	100	;'d'
   831  007FE1  00                 	db	0
   832  007FE2                     STR_47:
   833  007FE2  56                 	db	86	;'V'
   834  007FE3  69                 	db	105	;'i'
   835  007FE4  65                 	db	101	;'e'
   836  007FE5  6A                 	db	106	;'j'
   837  007FE6  6F                 	db	111	;'o'
   838  007FE7  00                 	db	0
   839  007FE8                     STR_50:
   840  007FE8  4E                 	db	78	;'N'
   841  007FE9  75                 	db	117	;'u'
   842  007FEA  65                 	db	101	;'e'
   843  007FEB  76                 	db	118	;'v'
   844  007FEC  6F                 	db	111	;'o'
   845  007FED  00                 	db	0
   846  007FEE                     STR_48:
   847  007FEE  4E                 	db	78	;'N'
   848  007FEF  49                 	db	73	;'I'
   849  007FF0  50                 	db	80	;'P'
   850  007FF1  3A                 	db	58	;':'
   851  007FF2  00                 	db	0
   852  007FF3                     STR_16:
   853  007FF3  20                 	db	32
   854  007FF4  23                 	db	35
   855  007FF5  20                 	db	32
   856  007FF6  00                 	db	0
   857  007FF7                     STR_14:
   858  007FF7  58                 	db	88	;'X'
   859  007FF8  27                 	db	39
   860  007FF9  56                 	db	86	;'V'
   861  007FFA  00                 	db	0
   862  007FFB                     STR_2:
   863  007FFB  41                 	db	65	;'A'
   864  007FFC  3A                 	db	58	;':'
   865  007FFD  00                 	db	0
   866  0000                     
   867                           ; #config settings
   868  007FFE  00                 	db	0	; dummy byte at the end
   869  0000                     
   870                           	psect	cinit
   871  00568E                     __pcinit:
   872                           	opt callstack 0
   873  00568E                     start_initialization:
   874                           	opt callstack 0
   875  00568E                     __initialization:
   876                           	opt callstack 0
   877                           
   878                           ; Clear objects allocated to BANK0 (107 bytes)
   879  00568E  EE00  F060         	lfsr	0,__pbssBANK0
   880  005692  0E6B               	movlw	107
   881  005694                     clear_0:
   882  005694  6AEE               	clrf	postinc0,c
   883  005696  06E8               	decf	wreg,f,c
   884  005698  E1FD               	bnz	clear_0
   885  00569A                     end_of_initialization:
   886                           	opt callstack 0
   887  00569A                     __end_of__initialization:
   888                           	opt callstack 0
   889  00569A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   890  00569C  6EF8               	movwf	tblptru,c
   891  00569E  0100               	movlb	0
   892  0056A0  EFD2  F033         	goto	_main	;jump to C main() function
   893                           
   894                           	psect	bssBANK0
   895  000060                     __pbssBANK0:
   896                           	opt callstack 0
   897  000060                     _valor:
   898                           	opt callstack 0
   899  000060                     	ds	4
   900  000064                     _sum1:
   901                           	opt callstack 0
   902  000064                     	ds	4
   903  000068                     _pin1:
   904                           	opt callstack 0
   905  000068                     	ds	4
   906  00006C                     _nout:
   907                           	opt callstack 0
   908  00006C                     	ds	2
   909  00006E                     _width:
   910                           	opt callstack 0
   911  00006E                     	ds	2
   912  000070                     _prec:
   913                           	opt callstack 0
   914  000070                     	ds	2
   915  000072                     _flags:
   916                           	opt callstack 0
   917  000072                     	ds	2
   918  000074                     _paso:
   919                           	opt callstack 0
   920  000074                     	ds	2
   921  000076                     _cambio:
   922                           	opt callstack 0
   923  000076                     	ds	2
   924  000078                     _dbuf:
   925                           	opt callstack 0
   926  000078                     	ds	32
   927  000098                     _palabra2:
   928                           	opt callstack 0
   929  000098                     	ds	17
   930  0000A9                     _palabra1:
   931                           	opt callstack 0
   932  0000A9                     	ds	17
   933  0000BA                     _palabra:
   934                           	opt callstack 0
   935  0000BA                     	ds	17
   936                           
   937                           	psect	cstackBANK0
   938  0000CB                     __pcstackBANK0:
   939                           	opt callstack 0
   940  0000CB                     	ds	2
   941  0000CD                     sprintf@ap:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x2
   945  0000CD                     	ds	2
   946  0000CF                     sprintf@f:
   947                           	opt callstack 0
   948                           
   949                           ; 6 bytes @ 0x4
   950  0000CF                     	ds	6
   951  0000D5                     ??_correcto:
   952                           
   953                           ; 1 bytes @ 0xA
   954  0000D5                     	ds	4
   955  0000D9                     correcto@deposito:
   956                           	opt callstack 0
   957                           
   958                           ; 4 bytes @ 0xE
   959  0000D9                     	ds	4
   960  0000DD                     correcto@i:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x12
   964  0000DD                     	ds	2
   965  0000DF                     ??_main:
   966                           
   967                           ; 1 bytes @ 0x14
   968  0000DF                     	ds	4
   969  0000E3                     main@show:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x18
   973  0000E3                     	ds	2
   974  0000E5                     main@opt:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x1A
   978  0000E5                     	ds	2
   979                           
   980                           	psect	cstackCOMRAM
   981  000001                     __pcstackCOMRAM:
   982                           	opt callstack 0
   983  000001                     ??_Lcd_Cmd:
   984  000001                     ??_Lcd_Chr_CP:
   985  000001                     ?_strlen:
   986                           	opt callstack 0
   987  000001                     ?___lmul:
   988                           	opt callstack 0
   989  000001                     ?___aodiv:
   990                           	opt callstack 0
   991  000001                     ?___aomod:
   992                           	opt callstack 0
   993  000001                     fputc@c:
   994                           	opt callstack 0
   995  000001                     strlen@s:
   996                           	opt callstack 0
   997  000001                     ___lmul@multiplier:
   998                           	opt callstack 0
   999  000001                     ___aodiv@dividend:
  1000                           	opt callstack 0
  1001  000001                     ___aomod@dividend:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x0
  1005  000001                     	ds	2
  1006  000003                     Lcd_Chr_CP@data:
  1007                           	opt callstack 0
  1008  000003                     Lcd_Cmd@data:
  1009                           	opt callstack 0
  1010  000003                     fputc@fp:
  1011                           	opt callstack 0
  1012  000003                     strlen@a:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2
  1016  000003                     	ds	1
  1017  000004                     ??_Lcd_Init:
  1018  000004                     Lcd_Out@x:
  1019                           	opt callstack 0
  1020  000004                     Lcd_Out2@x:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x3
  1024  000004                     	ds	1
  1025  000005                     ??_fputc:
  1026  000005                     Lcd_Init@data:
  1027                           	opt callstack 0
  1028  000005                     Lcd_Out@buffer:
  1029                           	opt callstack 0
  1030  000005                     Lcd_Out2@buffer:
  1031                           	opt callstack 0
  1032  000005                     ___lmul@multiplicand:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x4
  1036  000005                     	ds	2
  1037  000007                     ??_Lcd_Out:
  1038  000007                     ??_Lcd_Out2:
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  000007                     	ds	2
  1042  000009                     Lcd_Out@y:
  1043                           	opt callstack 0
  1044  000009                     Lcd_Out2@y:
  1045                           	opt callstack 0
  1046  000009                     ___lmul@product:
  1047                           	opt callstack 0
  1048  000009                     ___aodiv@divisor:
  1049                           	opt callstack 0
  1050  000009                     ___aomod@divisor:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 8 bytes @ 0x8
  1054  000009                     	ds	1
  1055  00000A                     Lcd_Out@data:
  1056                           	opt callstack 0
  1057  00000A                     Lcd_Out2@data:
  1058                           	opt callstack 0
  1059  00000A                     fputs@s:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x9
  1063  00000A                     	ds	1
  1064  00000B                     ??_incorrecto:
  1065  00000B                     ??_letrero:
  1066                           
  1067                           ; 1 bytes @ 0xA
  1068  00000B                     	ds	1
  1069  00000C                     fputs@fp:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xB
  1073  00000C                     	ds	2
  1074  00000E                     fputs@c:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 1 bytes @ 0xD
  1078  00000E                     	ds	1
  1079  00000F                     fputs@i:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0xE
  1083  00000F                     	ds	2
  1084  000011                     ?_pad:
  1085                           	opt callstack 0
  1086  000011                     ___aodiv@counter:
  1087                           	opt callstack 0
  1088  000011                     ___aomod@counter:
  1089                           	opt callstack 0
  1090  000011                     pad@fp:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x10
  1094  000011                     	ds	1
  1095  000012                     ___aodiv@sign:
  1096                           	opt callstack 0
  1097  000012                     ___aomod@sign:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x11
  1101  000012                     	ds	1
  1102  000013                     ?_abs:
  1103                           	opt callstack 0
  1104  000013                     pad@buf:
  1105                           	opt callstack 0
  1106  000013                     abs@a:
  1107                           	opt callstack 0
  1108  000013                     ___aodiv@quotient:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 8 bytes @ 0x12
  1112  000013                     	ds	2
  1113  000015                     ??_abs:
  1114  000015                     pad@p:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x14
  1118  000015                     	ds	2
  1119  000017                     ??_pad:
  1120                           
  1121                           ; 1 bytes @ 0x16
  1122  000017                     	ds	1
  1123  000018                     pad@i:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x17
  1127  000018                     	ds	2
  1128  00001A                     pad@w:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x19
  1132  00001A                     	ds	2
  1133  00001C                     ?_dtoa:
  1134                           	opt callstack 0
  1135  00001C                     dtoa@fp:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1B
  1139  00001C                     	ds	2
  1140  00001E                     dtoa@d:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x1D
  1144  00001E                     	ds	8
  1145  000026                     ??_dtoa:
  1146                           
  1147                           ; 1 bytes @ 0x25
  1148  000026                     	ds	8
  1149  00002E                     _dtoa$423:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x2D
  1153  00002E                     	ds	2
  1154  000030                     dtoa@p:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x2F
  1158  000030                     	ds	2
  1159  000032                     dtoa@w:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x31
  1163  000032                     	ds	2
  1164  000034                     dtoa@s:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x33
  1168  000034                     	ds	2
  1169  000036                     dtoa@n:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 8 bytes @ 0x35
  1173  000036                     	ds	8
  1174  00003E                     dtoa@i:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x3D
  1178  00003E                     	ds	2
  1179  000040                     ?_vfpfcnvrt:
  1180                           	opt callstack 0
  1181  000040                     vfpfcnvrt@fp:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x3F
  1185  000040                     	ds	2
  1186  000042                     vfpfcnvrt@fmt:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x41
  1190  000042                     	ds	2
  1191  000044                     vfpfcnvrt@ap:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x43
  1195  000044                     	ds	2
  1196  000046                     ??_vfpfcnvrt:
  1197                           
  1198                           ; 1 bytes @ 0x45
  1199  000046                     	ds	2
  1200  000048                     vfpfcnvrt@ll:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 8 bytes @ 0x47
  1204  000048                     	ds	8
  1205  000050                     ?_vfprintf:
  1206                           	opt callstack 0
  1207  000050                     vfprintf@fp:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x4F
  1211  000050                     	ds	2
  1212  000052                     vfprintf@fmt:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x51
  1216  000052                     	ds	2
  1217  000054                     vfprintf@ap:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x53
  1221  000054                     	ds	2
  1222  000056                     vfprintf@cfmt:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x55
  1226  000056                     	ds	2
  1227  000058                     ?_sprintf:
  1228                           	opt callstack 0
  1229  000058                     sprintf@s:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x57
  1233  000058                     	ds	2
  1234  00005A                     sprintf@fmt:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x59
  1238  00005A                     	ds	6
  1239  000060                     
  1240                           ; 1 bytes @ 0x5F
  1241 ;;
  1242 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1243 ;;
  1244 ;; *************** function _main *****************
  1245 ;; Defined at:
  1246 ;;		line 30 in file "Practica6_03_03_19.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  opt             2   26[BANK0 ] short 
  1251 ;;  show            2   24[BANK0 ] short 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1264 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        8 bytes
  1266 ;; Hardware stack levels required when called:    9
  1267 ;; This function calls:
  1268 ;;		_Lcd_Cmd
  1269 ;;		_Lcd_Init
  1270 ;;		_Lcd_Out
  1271 ;;		___lmul
  1272 ;;		_correcto
  1273 ;;		_incorrecto
  1274 ;;		_teclado
  1275 ;; This function is called by:
  1276 ;;		Startup code after reset
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text0
  1281  0067A4                     __ptext0:
  1282                           	opt callstack 0
  1283  0067A4                     _main:
  1284                           	opt callstack 22
  1285                           
  1286                           ;incstack = 0
  1287  0067A4  0E00               	movlw	0
  1288  0067A6  0100               	movlb	0	; () banked
  1289  0067A8  6FE6               	movwf	(main@opt+1)& (0+255),b
  1290  0067AA  0E00               	movlw	0
  1291  0067AC  6FE5               	movwf	main@opt& (0+255),b
  1292                           
  1293                           ;Practica6_03_03_19.c: 32:     ADCON1=0x0F;
  1294  0067AE  0E0F               	movlw	15
  1295  0067B0  6EC1               	movwf	4033,c	;volatile
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;Practica6_03_03_19.c: 33:     INTCON2bits.RBPU=0;
  1299  0067B2  9EF1               	bcf	4081,7,c	;volatile
  1300                           
  1301                           ;Practica6_03_03_19.c: 34:     TRISB=0xF0;
  1302  0067B4  0EF0               	movlw	240
  1303  0067B6  6E93               	movwf	3987,c	;volatile
  1304                           
  1305                           ;Practica6_03_03_19.c: 35:     PORTD=0x00;
  1306  0067B8  0E00               	movlw	0
  1307  0067BA  6E83               	movwf	3971,c	;volatile
  1308                           
  1309                           ;Practica6_03_03_19.c: 36:     saldo=10000;
  1310  0067BC  0E10               	movlw	16
  1311  0067BE  6FE7               	movwf	_saldo& (0+255),b
  1312  0067C0  0E27               	movlw	39
  1313  0067C2  6FE8               	movwf	(_saldo+1)& (0+255),b
  1314  0067C4  0E00               	movlw	0
  1315  0067C6  6FE9               	movwf	(_saldo+2)& (0+255),b
  1316  0067C8  0E00               	movlw	0
  1317  0067CA  6FEA               	movwf	(_saldo+3)& (0+255),b
  1318                           
  1319                           ;Practica6_03_03_19.c: 37:     pasword=123;
  1320  0067CC  0E00               	movlw	0
  1321  0067CE  6FEC               	movwf	(_pasword+1)& (0+255),b
  1322  0067D0  0E7B               	movlw	123
  1323  0067D2  6FEB               	movwf	_pasword& (0+255),b
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;Practica6_03_03_19.c: 38:     Lcd_Init();
  1327  0067D4  ECAB  F02D         	call	_Lcd_Init	;wreg free
  1328                           
  1329                           ;Practica6_03_03_19.c: 39:     Lcd_Cmd(1);
  1330  0067D8  0E01               	movlw	1
  1331  0067DA  EC2E  F02E         	call	_Lcd_Cmd
  1332                           
  1333                           ;Practica6_03_03_19.c: 40:     Lcd_Cmd(12);
  1334  0067DE  0E0C               	movlw	12
  1335  0067E0  EC2E  F02E         	call	_Lcd_Cmd
  1336                           
  1337                           ;Practica6_03_03_19.c: 41:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1338  0067E4  0E02               	movlw	2
  1339  0067E6  0100               	movlb	0	; () banked
  1340  0067E8  6FE0               	movwf	(??_main+1)& (0+255),b
  1341  0067EA  0E04               	movlw	4
  1342  0067EC  6FDF               	movwf	??_main& (0+255),b
  1343  0067EE  0EBA               	movlw	186
  1344  0067F0                     u2297:
  1345  0067F0  2EE8               	decfsz	wreg,f,c
  1346  0067F2  D7FE               	bra	u2297
  1347  0067F4  2FDF               	decfsz	??_main& (0+255),f,b
  1348  0067F6  D7FC               	bra	u2297
  1349  0067F8  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1350  0067FA  D7FA               	bra	u2297
  1351  0067FC  F000               	nop	
  1352  0067FE                     l3530:
  1353                           
  1354                           ;Practica6_03_03_19.c: 43:     Lcd_Out(1,3,"Bienvenido");
  1355  0067FE  0E03               	movlw	3
  1356  006800  6E04               	movwf	Lcd_Out@x,c
  1357  006802  0E76               	movlw	low STR_1
  1358  006804  6E05               	movwf	Lcd_Out@buffer,c
  1359  006806  0E7F               	movlw	high STR_1
  1360  006808  6E06               	movwf	Lcd_Out@buffer+1,c
  1361  00680A  0E01               	movlw	1
  1362  00680C  EC53  F02C         	call	_Lcd_Out
  1363                           
  1364                           ;Practica6_03_03_19.c: 44:     Lcd_Out(2,7,"A:");
  1365  006810  0E07               	movlw	7
  1366  006812  6E04               	movwf	Lcd_Out@x,c
  1367  006814  0EFB               	movlw	low STR_2
  1368  006816  6E05               	movwf	Lcd_Out@buffer,c
  1369  006818  0E7F               	movlw	high STR_2
  1370  00681A  6E06               	movwf	Lcd_Out@buffer+1,c
  1371  00681C  0E02               	movlw	2
  1372  00681E  EC53  F02C         	call	_Lcd_Out
  1373                           
  1374                           ;Practica6_03_03_19.c: 45:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1375  006822  0E15               	movlw	21
  1376  006824  0100               	movlb	0	; () banked
  1377  006826  6FE0               	movwf	(??_main+1)& (0+255),b
  1378  006828  0E4B               	movlw	75
  1379  00682A  6FDF               	movwf	??_main& (0+255),b
  1380  00682C  0EBE               	movlw	190
  1381  00682E                     u2307:
  1382  00682E  2EE8               	decfsz	wreg,f,c
  1383  006830  D7FE               	bra	u2307
  1384  006832  2FDF               	decfsz	??_main& (0+255),f,b
  1385  006834  D7FC               	bra	u2307
  1386  006836  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1387  006838  D7FA               	bra	u2307
  1388  00683A  F000               	nop	
  1389                           
  1390                           ;Practica6_03_03_19.c: 46:     Lcd_Cmd(1);
  1391  00683C  0E01               	movlw	1
  1392  00683E  EC2E  F02E         	call	_Lcd_Cmd
  1393                           
  1394                           ;Practica6_03_03_19.c: 47:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1395  006842  0E02               	movlw	2
  1396  006844  0100               	movlb	0	; () banked
  1397  006846  6FE0               	movwf	(??_main+1)& (0+255),b
  1398  006848  0E04               	movlw	4
  1399  00684A  6FDF               	movwf	??_main& (0+255),b
  1400  00684C  0EBA               	movlw	186
  1401  00684E                     u2317:
  1402  00684E  2EE8               	decfsz	wreg,f,c
  1403  006850  D7FE               	bra	u2317
  1404  006852  2FDF               	decfsz	??_main& (0+255),f,b
  1405  006854  D7FC               	bra	u2317
  1406  006856  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1407  006858  D7FA               	bra	u2317
  1408  00685A  F000               	nop	
  1409                           
  1410                           ;Practica6_03_03_19.c: 48:     Lcd_Out(1,2,"ESTE SU BANCO");
  1411  00685C  0E02               	movlw	2
  1412  00685E  6E04               	movwf	Lcd_Out@x,c
  1413  006860  0ECD               	movlw	low STR_3
  1414  006862  6E05               	movwf	Lcd_Out@buffer,c
  1415  006864  0E7E               	movlw	high STR_3
  1416  006866  6E06               	movwf	Lcd_Out@buffer+1,c
  1417  006868  0E01               	movlw	1
  1418  00686A  EC53  F02C         	call	_Lcd_Out
  1419                           
  1420                           ;Practica6_03_03_19.c: 49:     Lcd_Out(2,2,"JW RED LABEL");
  1421  00686E  0E02               	movlw	2
  1422  006870  6E04               	movwf	Lcd_Out@x,c
  1423  006872  0E1F               	movlw	low STR_4
  1424  006874  6E05               	movwf	Lcd_Out@buffer,c
  1425  006876  0E7F               	movlw	high STR_4
  1426  006878  6E06               	movwf	Lcd_Out@buffer+1,c
  1427  00687A  0E02               	movlw	2
  1428  00687C  EC53  F02C         	call	_Lcd_Out
  1429                           
  1430                           ;Practica6_03_03_19.c: 50:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1431  006880  0E15               	movlw	21
  1432  006882  0100               	movlb	0	; () banked
  1433  006884  6FE0               	movwf	(??_main+1)& (0+255),b
  1434  006886  0E4B               	movlw	75
  1435  006888  6FDF               	movwf	??_main& (0+255),b
  1436  00688A  0EBE               	movlw	190
  1437  00688C                     u2327:
  1438  00688C  2EE8               	decfsz	wreg,f,c
  1439  00688E  D7FE               	bra	u2327
  1440  006890  2FDF               	decfsz	??_main& (0+255),f,b
  1441  006892  D7FC               	bra	u2327
  1442  006894  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1443  006896  D7FA               	bra	u2327
  1444  006898  F000               	nop	
  1445                           
  1446                           ;Practica6_03_03_19.c: 51:     Lcd_Cmd(1);
  1447  00689A  0E01               	movlw	1
  1448  00689C  EC2E  F02E         	call	_Lcd_Cmd
  1449                           
  1450                           ;Practica6_03_03_19.c: 52:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1451  0068A0  0E03               	movlw	3
  1452  0068A2  0100               	movlb	0	; () banked
  1453  0068A4  6FE0               	movwf	(??_main+1)& (0+255),b
  1454  0068A6  0E08               	movlw	8
  1455  0068A8  6FDF               	movwf	??_main& (0+255),b
  1456  0068AA  0E77               	movlw	119
  1457  0068AC                     u2337:
  1458  0068AC  2EE8               	decfsz	wreg,f,c
  1459  0068AE  D7FE               	bra	u2337
  1460  0068B0  2FDF               	decfsz	??_main& (0+255),f,b
  1461  0068B2  D7FC               	bra	u2337
  1462  0068B4  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1463  0068B6  D7FA               	bra	u2337
  1464                           
  1465                           ;Practica6_03_03_19.c: 53:     Lcd_Out(1,3,"Hola, Humano");
  1466  0068B8  0E03               	movlw	3
  1467  0068BA  6E04               	movwf	Lcd_Out@x,c
  1468  0068BC  0E2C               	movlw	low STR_5
  1469  0068BE  6E05               	movwf	Lcd_Out@buffer,c
  1470  0068C0  0E7F               	movlw	high STR_5
  1471  0068C2  6E06               	movwf	Lcd_Out@buffer+1,c
  1472  0068C4  0E01               	movlw	1
  1473  0068C6  EC53  F02C         	call	_Lcd_Out
  1474                           
  1475                           ;Practica6_03_03_19.c: 54:     Lcd_Out(2,1,"****************");
  1476  0068CA  0E01               	movlw	1
  1477  0068CC  6E04               	movwf	Lcd_Out@x,c
  1478  0068CE  0EFF               	movlw	low STR_6
  1479  0068D0  6E05               	movwf	Lcd_Out@buffer,c
  1480  0068D2  0E7D               	movlw	high STR_6
  1481  0068D4  6E06               	movwf	Lcd_Out@buffer+1,c
  1482  0068D6  0E02               	movlw	2
  1483  0068D8  EC53  F02C         	call	_Lcd_Out
  1484                           
  1485                           ;Practica6_03_03_19.c: 55:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1486  0068DC  0E15               	movlw	21
  1487  0068DE  0100               	movlb	0	; () banked
  1488  0068E0  6FE0               	movwf	(??_main+1)& (0+255),b
  1489  0068E2  0E4B               	movlw	75
  1490  0068E4  6FDF               	movwf	??_main& (0+255),b
  1491  0068E6  0EBE               	movlw	190
  1492  0068E8                     u2347:
  1493  0068E8  2EE8               	decfsz	wreg,f,c
  1494  0068EA  D7FE               	bra	u2347
  1495  0068EC  2FDF               	decfsz	??_main& (0+255),f,b
  1496  0068EE  D7FC               	bra	u2347
  1497  0068F0  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1498  0068F2  D7FA               	bra	u2347
  1499  0068F4  F000               	nop	
  1500                           
  1501                           ;Practica6_03_03_19.c: 56:     Lcd_Cmd(1);
  1502  0068F6  0E01               	movlw	1
  1503  0068F8  EC2E  F02E         	call	_Lcd_Cmd
  1504  0068FC                     l3558:
  1505                           
  1506                           ;Practica6_03_03_19.c: 57:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1507  0068FC  0E03               	movlw	3
  1508  0068FE  0100               	movlb	0	; () banked
  1509  006900  6FE0               	movwf	(??_main+1)& (0+255),b
  1510  006902  0E08               	movlw	8
  1511  006904  6FDF               	movwf	??_main& (0+255),b
  1512  006906  0E77               	movlw	119
  1513  006908                     u2357:
  1514  006908  2EE8               	decfsz	wreg,f,c
  1515  00690A  D7FE               	bra	u2357
  1516  00690C  2FDF               	decfsz	??_main& (0+255),f,b
  1517  00690E  D7FC               	bra	u2357
  1518  006910  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1519  006912  D7FA               	bra	u2357
  1520  006914  0E00               	movlw	0
  1521  006916  0100               	movlb	0	; () banked
  1522  006918  6FE4               	movwf	(main@show+1)& (0+255),b
  1523  00691A  0E01               	movlw	1
  1524  00691C  6FE3               	movwf	main@show& (0+255),b
  1525                           
  1526                           ;Practica6_03_03_19.c: 59:         while (valor != '*'){
  1527  00691E  D05B               	goto	l3578
  1528  006920                     l3562:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;Practica6_03_03_19.c: 60:             teclado();
  1532  006920  EC30  F031         	call	_teclado	;wreg free
  1533                           
  1534                           ;Practica6_03_03_19.c: 61:             Lcd_Out(1, 1,"Ingresa tu pin:");
  1535  006924  0E01               	movlw	1
  1536  006926  6E04               	movwf	Lcd_Out@x,c
  1537  006928  0E43               	movlw	low STR_7
  1538  00692A  6E05               	movwf	Lcd_Out@buffer,c
  1539  00692C  0E7E               	movlw	high STR_7
  1540  00692E  6E06               	movwf	Lcd_Out@buffer+1,c
  1541  006930  0E01               	movlw	1
  1542  006932  EC53  F02C         	call	_Lcd_Out
  1543                           
  1544                           ;Practica6_03_03_19.c: 62:             if ((valor >= '0')&&(valor <= '9')){
  1545  006936  0100               	movlb	0	; () banked
  1546  006938  5163               	movf	(_valor+3)& (0+255),w,b
  1547  00693A  1162               	iorwf	(_valor+2)& (0+255),w,b
  1548  00693C  1161               	iorwf	(_valor+1)& (0+255),w,b
  1549  00693E  E104               	bnz	u2210
  1550  006940  0E30               	movlw	48
  1551  006942  5D60               	subwf	_valor& (0+255),w,b
  1552  006944  A0D8               	btfss	status,0,c
  1553  006946  D03F               	goto	l3576
  1554  006948                     u2210:
  1555                           
  1556                           ; BSR set to: 0
  1557  006948  5163               	movf	(_valor+3)& (0+255),w,b
  1558  00694A  1162               	iorwf	(_valor+2)& (0+255),w,b
  1559  00694C  1161               	iorwf	(_valor+1)& (0+255),w,b
  1560  00694E  E13B               	bnz	l3576
  1561  006950  0E3A               	movlw	58
  1562  006952  5D60               	subwf	_valor& (0+255),w,b
  1563  006954  B0D8               	btfsc	status,0,c
  1564  006956  D037               	goto	l3576
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;Practica6_03_03_19.c: 63:                 sum1 = sum1*10 + (valor - 48);
  1568  006958  C064  F001         	movff	_sum1,___lmul@multiplier
  1569  00695C  C065  F002         	movff	_sum1+1,___lmul@multiplier+1
  1570  006960  C066  F003         	movff	_sum1+2,___lmul@multiplier+2
  1571  006964  C067  F004         	movff	_sum1+3,___lmul@multiplier+3
  1572  006968  0E0A               	movlw	10
  1573  00696A  6E05               	movwf	___lmul@multiplicand,c
  1574  00696C  0E00               	movlw	0
  1575  00696E  6E06               	movwf	___lmul@multiplicand+1,c
  1576  006970  0E00               	movlw	0
  1577  006972  6E07               	movwf	___lmul@multiplicand+2,c
  1578  006974  0E00               	movlw	0
  1579  006976  6E08               	movwf	___lmul@multiplicand+3,c
  1580  006978  ECC5  F02B         	call	___lmul	;wreg free
  1581  00697C  0100               	movlb	0	; () banked
  1582  00697E  5160               	movf	_valor& (0+255),w,b
  1583  006980  2401               	addwf	?___lmul,w,c
  1584  006982  6FDF               	movwf	??_main& (0+255),b
  1585  006984  5161               	movf	(_valor+1)& (0+255),w,b
  1586  006986  2002               	addwfc	?___lmul+1,w,c
  1587  006988  6FE0               	movwf	(??_main+1)& (0+255),b
  1588  00698A  5162               	movf	(_valor+2)& (0+255),w,b
  1589  00698C  2003               	addwfc	?___lmul+2,w,c
  1590  00698E  6FE1               	movwf	(??_main+2)& (0+255),b
  1591  006990  5163               	movf	(_valor+3)& (0+255),w,b
  1592  006992  2004               	addwfc	?___lmul+3,w,c
  1593  006994  6FE2               	movwf	(??_main+3)& (0+255),b
  1594  006996  0ED0               	movlw	208
  1595  006998  25DF               	addwf	??_main& (0+255),w,b
  1596  00699A  6F64               	movwf	_sum1& (0+255),b
  1597  00699C  0EFF               	movlw	255
  1598  00699E  21E0               	addwfc	(??_main+1)& (0+255),w,b
  1599  0069A0  6F65               	movwf	(_sum1+1)& (0+255),b
  1600  0069A2  0EFF               	movlw	255
  1601  0069A4  21E1               	addwfc	(??_main+2)& (0+255),w,b
  1602  0069A6  6F66               	movwf	(_sum1+2)& (0+255),b
  1603  0069A8  0EFF               	movlw	255
  1604  0069AA  21E2               	addwfc	(??_main+3)& (0+255),w,b
  1605  0069AC  6F67               	movwf	(_sum1+3)& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;Practica6_03_03_19.c: 64:                  Lcd_Out(2,show,"*");
  1609  0069AE  C0E3  F004         	movff	main@show,Lcd_Out@x
  1610  0069B2  0E0E               	movlw	low (STR_6+15)
  1611  0069B4  6E05               	movwf	Lcd_Out@buffer,c
  1612  0069B6  0E7E               	movlw	high (STR_6+15)
  1613  0069B8  6E06               	movwf	Lcd_Out@buffer+1,c
  1614  0069BA  0E02               	movlw	2
  1615  0069BC  EC53  F02C         	call	_Lcd_Out
  1616                           
  1617                           ;Practica6_03_03_19.c: 65:                  show++;
  1618  0069C0  0100               	movlb	0	; () banked
  1619  0069C2  4BE3               	infsnz	main@show& (0+255),f,b
  1620  0069C4  2BE4               	incf	(main@show+1)& (0+255),f,b
  1621  0069C6                     l3576:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;Practica6_03_03_19.c: 67:             pin1=sum1;
  1625  0069C6  C064  F068         	movff	_sum1,_pin1
  1626  0069CA  C065  F069         	movff	_sum1+1,_pin1+1
  1627  0069CE  C066  F06A         	movff	_sum1+2,_pin1+2
  1628  0069D2  C067  F06B         	movff	_sum1+3,_pin1+3
  1629  0069D6                     l3578:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;Practica6_03_03_19.c: 59:         while (valor != '*'){
  1633  0069D6  0E2A               	movlw	42
  1634  0069D8  1960               	xorwf	_valor& (0+255),w,b
  1635  0069DA  1161               	iorwf	(_valor+1)& (0+255),w,b
  1636  0069DC  1162               	iorwf	(_valor+2)& (0+255),w,b
  1637  0069DE  1163               	iorwf	(_valor+3)& (0+255),w,b
  1638  0069E0  A4D8               	btfss	status,2,c
  1639  0069E2  D79E               	goto	l3562
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;Practica6_03_03_19.c: 69:         if(pin1==pasword && valor!=0){
  1643  0069E4  51EB               	movf	_pasword& (0+255),w,b
  1644  0069E6  6FDF               	movwf	??_main& (0+255),b
  1645  0069E8  51EC               	movf	(_pasword+1)& (0+255),w,b
  1646  0069EA  6FE0               	movwf	(??_main+1)& (0+255),b
  1647  0069EC  6BE1               	clrf	(??_main+2)& (0+255),b
  1648  0069EE  6BE2               	clrf	(??_main+3)& (0+255),b
  1649  0069F0  5168               	movf	_pin1& (0+255),w,b
  1650  0069F2  19DF               	xorwf	??_main& (0+255),w,b
  1651  0069F4  E159               	bnz	l3602
  1652  0069F6  5169               	movf	(_pin1+1)& (0+255),w,b
  1653  0069F8  19E0               	xorwf	(??_main+1)& (0+255),w,b
  1654  0069FA  E156               	bnz	l3602
  1655  0069FC  516A               	movf	(_pin1+2)& (0+255),w,b
  1656  0069FE  19E1               	xorwf	(??_main+2)& (0+255),w,b
  1657  006A00  E153               	bnz	l3602
  1658  006A02  516B               	movf	(_pin1+3)& (0+255),w,b
  1659  006A04  19E2               	xorwf	(??_main+3)& (0+255),w,b
  1660  006A06  A4D8               	btfss	status,2,c
  1661  006A08  D04F               	goto	l3602
  1662                           
  1663                           ; BSR set to: 0
  1664  006A0A  5160               	movf	_valor& (0+255),w,b
  1665  006A0C  1161               	iorwf	(_valor+1)& (0+255),w,b
  1666  006A0E  1162               	iorwf	(_valor+2)& (0+255),w,b
  1667  006A10  1163               	iorwf	(_valor+3)& (0+255),w,b
  1668  006A12  B4D8               	btfsc	status,2,c
  1669  006A14  D049               	goto	l3602
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;Practica6_03_03_19.c: 70:             Lcd_Cmd(1);
  1673  006A16  0E01               	movlw	1
  1674  006A18  EC2E  F02E         	call	_Lcd_Cmd
  1675                           
  1676                           ;Practica6_03_03_19.c: 71:             _delay((unsigned long)((200)*(8000000/4000.0)));
  1677  006A1C  0E03               	movlw	3
  1678  006A1E  0100               	movlb	0	; () banked
  1679  006A20  6FE0               	movwf	(??_main+1)& (0+255),b
  1680  006A22  0E08               	movlw	8
  1681  006A24  6FDF               	movwf	??_main& (0+255),b
  1682  006A26  0E77               	movlw	119
  1683  006A28                     u2367:
  1684  006A28  2EE8               	decfsz	wreg,f,c
  1685  006A2A  D7FE               	bra	u2367
  1686  006A2C  2FDF               	decfsz	??_main& (0+255),f,b
  1687  006A2E  D7FC               	bra	u2367
  1688  006A30  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1689  006A32  D7FA               	bra	u2367
  1690                           
  1691                           ;Practica6_03_03_19.c: 72:             valor=0;
  1692  006A34  0E00               	movlw	0
  1693  006A36  0100               	movlb	0	; () banked
  1694  006A38  6F60               	movwf	_valor& (0+255),b
  1695  006A3A  0E00               	movlw	0
  1696  006A3C  6F61               	movwf	(_valor+1)& (0+255),b
  1697  006A3E  0E00               	movlw	0
  1698  006A40  6F62               	movwf	(_valor+2)& (0+255),b
  1699  006A42  0E00               	movlw	0
  1700  006A44  6F63               	movwf	(_valor+3)& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;Practica6_03_03_19.c: 73:             sum1=0;
  1704  006A46  0E00               	movlw	0
  1705  006A48  6F64               	movwf	_sum1& (0+255),b
  1706  006A4A  0E00               	movlw	0
  1707  006A4C  6F65               	movwf	(_sum1+1)& (0+255),b
  1708  006A4E  0E00               	movlw	0
  1709  006A50  6F66               	movwf	(_sum1+2)& (0+255),b
  1710  006A52  0E00               	movlw	0
  1711  006A54  6F67               	movwf	(_sum1+3)& (0+255),b
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;Practica6_03_03_19.c: 74:             Lcd_Out(1,1,"Pin Correcto");
  1715  006A56  0E01               	movlw	1
  1716  006A58  6E04               	movwf	Lcd_Out@x,c
  1717  006A5A  0E46               	movlw	low STR_9
  1718  006A5C  6E05               	movwf	Lcd_Out@buffer,c
  1719  006A5E  0E7F               	movlw	high STR_9
  1720  006A60  6E06               	movwf	Lcd_Out@buffer+1,c
  1721  006A62  0E01               	movlw	1
  1722  006A64  EC53  F02C         	call	_Lcd_Out
  1723                           
  1724                           ;Practica6_03_03_19.c: 75:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1725  006A68  0E0B               	movlw	11
  1726  006A6A  0100               	movlb	0	; () banked
  1727  006A6C  6FE0               	movwf	(??_main+1)& (0+255),b
  1728  006A6E  0E26               	movlw	38
  1729  006A70  6FDF               	movwf	??_main& (0+255),b
  1730  006A72  0E5D               	movlw	93
  1731  006A74                     u2377:
  1732  006A74  2EE8               	decfsz	wreg,f,c
  1733  006A76  D7FE               	bra	u2377
  1734  006A78  2FDF               	decfsz	??_main& (0+255),f,b
  1735  006A7A  D7FC               	bra	u2377
  1736  006A7C  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1737  006A7E  D7FA               	bra	u2377
  1738  006A80  D000               	nop2	
  1739                           
  1740                           ;Practica6_03_03_19.c: 76:             Lcd_Cmd(1);
  1741  006A82  0E01               	movlw	1
  1742  006A84  EC2E  F02E         	call	_Lcd_Cmd
  1743                           
  1744                           ;Practica6_03_03_19.c: 77:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1745  006A88  0E02               	movlw	2
  1746  006A8A  0100               	movlb	0	; () banked
  1747  006A8C  6FE0               	movwf	(??_main+1)& (0+255),b
  1748  006A8E  0E04               	movlw	4
  1749  006A90  6FDF               	movwf	??_main& (0+255),b
  1750  006A92  0EBA               	movlw	186
  1751  006A94                     u2387:
  1752  006A94  2EE8               	decfsz	wreg,f,c
  1753  006A96  D7FE               	bra	u2387
  1754  006A98  2FDF               	decfsz	??_main& (0+255),f,b
  1755  006A9A  D7FC               	bra	u2387
  1756  006A9C  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1757  006A9E  D7FA               	bra	u2387
  1758  006AA0  F000               	nop	
  1759                           
  1760                           ;Practica6_03_03_19.c: 78:             correcto();
  1761  006AA2  ECEB  F035         	call	_correcto	;wreg free
  1762                           
  1763                           ;Practica6_03_03_19.c: 80:         }else if(valor=='*' && paso==1){
  1764  006AA6  D093               	goto	l3646
  1765  006AA8                     l3602:
  1766                           
  1767                           ; BSR set to: 0
  1768  006AA8  0E2A               	movlw	42
  1769  006AAA  1960               	xorwf	_valor& (0+255),w,b
  1770  006AAC  1161               	iorwf	(_valor+1)& (0+255),w,b
  1771  006AAE  1162               	iorwf	(_valor+2)& (0+255),w,b
  1772  006AB0  1163               	iorwf	(_valor+3)& (0+255),w,b
  1773  006AB2  A4D8               	btfss	status,2,c
  1774  006AB4  D02A               	goto	l3618
  1775                           
  1776                           ; BSR set to: 0
  1777  006AB6  0574               	decf	_paso& (0+255),w,b
  1778  006AB8  1175               	iorwf	(_paso+1)& (0+255),w,b
  1779  006ABA  A4D8               	btfss	status,2,c
  1780  006ABC  D026               	goto	l3618
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;Practica6_03_03_19.c: 81:             Lcd_Cmd(1);
  1784  006ABE  0E01               	movlw	1
  1785  006AC0  EC2E  F02E         	call	_Lcd_Cmd
  1786                           
  1787                           ;Practica6_03_03_19.c: 82:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1788  006AC4  0E02               	movlw	2
  1789  006AC6  0100               	movlb	0	; () banked
  1790  006AC8  6FE0               	movwf	(??_main+1)& (0+255),b
  1791  006ACA  0E04               	movlw	4
  1792  006ACC  6FDF               	movwf	??_main& (0+255),b
  1793  006ACE  0EBA               	movlw	186
  1794  006AD0                     u2397:
  1795  006AD0  2EE8               	decfsz	wreg,f,c
  1796  006AD2  D7FE               	bra	u2397
  1797  006AD4  2FDF               	decfsz	??_main& (0+255),f,b
  1798  006AD6  D7FC               	bra	u2397
  1799  006AD8  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1800  006ADA  D7FA               	bra	u2397
  1801  006ADC  F000               	nop	
  1802                           
  1803                           ;Practica6_03_03_19.c: 83:             pin1=0;
  1804  006ADE  0E00               	movlw	0
  1805  006AE0  0100               	movlb	0	; () banked
  1806  006AE2  6F68               	movwf	_pin1& (0+255),b
  1807  006AE4  0E00               	movlw	0
  1808  006AE6  6F69               	movwf	(_pin1+1)& (0+255),b
  1809  006AE8  0E00               	movlw	0
  1810  006AEA  6F6A               	movwf	(_pin1+2)& (0+255),b
  1811  006AEC  0E00               	movlw	0
  1812  006AEE  6F6B               	movwf	(_pin1+3)& (0+255),b
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;Practica6_03_03_19.c: 84:             valor=0;
  1816  006AF0  0E00               	movlw	0
  1817  006AF2  6F60               	movwf	_valor& (0+255),b
  1818  006AF4  0E00               	movlw	0
  1819  006AF6  6F61               	movwf	(_valor+1)& (0+255),b
  1820  006AF8  0E00               	movlw	0
  1821  006AFA  6F62               	movwf	(_valor+2)& (0+255),b
  1822  006AFC  0E00               	movlw	0
  1823  006AFE  6F63               	movwf	(_valor+3)& (0+255),b
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;Practica6_03_03_19.c: 85:             paso=0;
  1827  006B00  0E00               	movlw	0
  1828  006B02  6F75               	movwf	(_paso+1)& (0+255),b
  1829  006B04  0E00               	movlw	0
  1830  006B06  6F74               	movwf	_paso& (0+255),b
  1831                           
  1832                           ;Practica6_03_03_19.c: 86:             goto inicio;
  1833  006B08  D67A               	goto	l3530
  1834  006B0A                     l3618:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;Practica6_03_03_19.c: 89:             Lcd_Cmd(1);
  1838  006B0A  0E01               	movlw	1
  1839  006B0C  EC2E  F02E         	call	_Lcd_Cmd
  1840                           
  1841                           ;Practica6_03_03_19.c: 90:             _delay((unsigned long)((200)*(8000000/4000.0)));
  1842  006B10  0E03               	movlw	3
  1843  006B12  0100               	movlb	0	; () banked
  1844  006B14  6FE0               	movwf	(??_main+1)& (0+255),b
  1845  006B16  0E08               	movlw	8
  1846  006B18  6FDF               	movwf	??_main& (0+255),b
  1847  006B1A  0E77               	movlw	119
  1848  006B1C                     u2407:
  1849  006B1C  2EE8               	decfsz	wreg,f,c
  1850  006B1E  D7FE               	bra	u2407
  1851  006B20  2FDF               	decfsz	??_main& (0+255),f,b
  1852  006B22  D7FC               	bra	u2407
  1853  006B24  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1854  006B26  D7FA               	bra	u2407
  1855                           
  1856                           ;Practica6_03_03_19.c: 91:             Lcd_Out(1,1,"Pin incorrecto");
  1857  006B28  0E01               	movlw	1
  1858  006B2A  6E04               	movwf	Lcd_Out@x,c
  1859  006B2C  0EA1               	movlw	low STR_10
  1860  006B2E  6E05               	movwf	Lcd_Out@buffer,c
  1861  006B30  0E7E               	movlw	high STR_10
  1862  006B32  6E06               	movwf	Lcd_Out@buffer+1,c
  1863  006B34  0E01               	movlw	1
  1864  006B36  EC53  F02C         	call	_Lcd_Out
  1865                           
  1866                           ;Practica6_03_03_19.c: 92:             valor=0;
  1867  006B3A  0E00               	movlw	0
  1868  006B3C  0100               	movlb	0	; () banked
  1869  006B3E  6F60               	movwf	_valor& (0+255),b
  1870  006B40  0E00               	movlw	0
  1871  006B42  6F61               	movwf	(_valor+1)& (0+255),b
  1872  006B44  0E00               	movlw	0
  1873  006B46  6F62               	movwf	(_valor+2)& (0+255),b
  1874  006B48  0E00               	movlw	0
  1875  006B4A  6F63               	movwf	(_valor+3)& (0+255),b
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;Practica6_03_03_19.c: 93:             sum1=0;
  1879  006B4C  0E00               	movlw	0
  1880  006B4E  6F64               	movwf	_sum1& (0+255),b
  1881  006B50  0E00               	movlw	0
  1882  006B52  6F65               	movwf	(_sum1+1)& (0+255),b
  1883  006B54  0E00               	movlw	0
  1884  006B56  6F66               	movwf	(_sum1+2)& (0+255),b
  1885  006B58  0E00               	movlw	0
  1886  006B5A  6F67               	movwf	(_sum1+3)& (0+255),b
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;Practica6_03_03_19.c: 94:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1890  006B5C  0E0B               	movlw	11
  1891  006B5E  0100               	movlb	0	; () banked
  1892  006B60  6FE0               	movwf	(??_main+1)& (0+255),b
  1893  006B62  0E26               	movlw	38
  1894  006B64  6FDF               	movwf	??_main& (0+255),b
  1895  006B66  0E5D               	movlw	93
  1896  006B68                     u2417:
  1897  006B68  2EE8               	decfsz	wreg,f,c
  1898  006B6A  D7FE               	bra	u2417
  1899  006B6C  2FDF               	decfsz	??_main& (0+255),f,b
  1900  006B6E  D7FC               	bra	u2417
  1901  006B70  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1902  006B72  D7FA               	bra	u2417
  1903  006B74  D000               	nop2	
  1904                           
  1905                           ;Practica6_03_03_19.c: 95:             Lcd_Cmd(1);
  1906  006B76  0E01               	movlw	1
  1907  006B78  EC2E  F02E         	call	_Lcd_Cmd
  1908                           
  1909                           ;Practica6_03_03_19.c: 96:             _delay((unsigned long)((200)*(8000000/4000.0)));
  1910  006B7C  0E03               	movlw	3
  1911  006B7E  0100               	movlb	0	; () banked
  1912  006B80  6FE0               	movwf	(??_main+1)& (0+255),b
  1913  006B82  0E08               	movlw	8
  1914  006B84  6FDF               	movwf	??_main& (0+255),b
  1915  006B86  0E77               	movlw	119
  1916  006B88                     u2427:
  1917  006B88  2EE8               	decfsz	wreg,f,c
  1918  006B8A  D7FE               	bra	u2427
  1919  006B8C  2FDF               	decfsz	??_main& (0+255),f,b
  1920  006B8E  D7FC               	bra	u2427
  1921  006B90  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1922  006B92  D7FA               	bra	u2427
  1923                           
  1924                           ;Practica6_03_03_19.c: 97:             opt++;
  1925  006B94  0100               	movlb	0	; () banked
  1926  006B96  4BE5               	infsnz	main@opt& (0+255),f,b
  1927  006B98  2BE6               	incf	(main@opt+1)& (0+255),f,b
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Practica6_03_03_19.c: 98:             if(opt==3){
  1931  006B9A  0E03               	movlw	3
  1932  006B9C  19E5               	xorwf	main@opt& (0+255),w,b
  1933  006B9E  11E6               	iorwf	(main@opt+1)& (0+255),w,b
  1934  006BA0  A4D8               	btfss	status,2,c
  1935  006BA2  D006               	goto	l3642
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;Practica6_03_03_19.c: 99:                 opt=0;
  1939  006BA4  0E00               	movlw	0
  1940  006BA6  6FE6               	movwf	(main@opt+1)& (0+255),b
  1941  006BA8  0E00               	movlw	0
  1942  006BAA  6FE5               	movwf	main@opt& (0+255),b
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;Practica6_03_03_19.c: 100:                 incorrecto();
  1946  006BAC  EC2B  F02D         	call	_incorrecto	;wreg free
  1947  006BB0                     l3642:
  1948                           
  1949                           ;Practica6_03_03_19.c: 102:             Lcd_Cmd(1);
  1950  006BB0  0E01               	movlw	1
  1951  006BB2  EC2E  F02E         	call	_Lcd_Cmd
  1952                           
  1953                           ;Practica6_03_03_19.c: 103:             _delay((unsigned long)((200)*(8000000/4000.0)));
  1954  006BB6  0E03               	movlw	3
  1955  006BB8  0100               	movlb	0	; () banked
  1956  006BBA  6FE0               	movwf	(??_main+1)& (0+255),b
  1957  006BBC  0E08               	movlw	8
  1958  006BBE  6FDF               	movwf	??_main& (0+255),b
  1959  006BC0  0E77               	movlw	119
  1960  006BC2                     u2437:
  1961  006BC2  2EE8               	decfsz	wreg,f,c
  1962  006BC4  D7FE               	bra	u2437
  1963  006BC6  2FDF               	decfsz	??_main& (0+255),f,b
  1964  006BC8  D7FC               	bra	u2437
  1965  006BCA  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1966  006BCC  D7FA               	bra	u2437
  1967  006BCE                     l3646:
  1968                           
  1969                           ;Practica6_03_03_19.c: 105:         Lcd_Cmd(1);
  1970  006BCE  0E01               	movlw	1
  1971  006BD0  EC2E  F02E         	call	_Lcd_Cmd
  1972  006BD4  D693               	goto	l3558
  1973  006BD6                     __end_of_main:
  1974                           	opt callstack 0
  1975                           
  1976 ;; *************** function _incorrecto *****************
  1977 ;; Defined at:
  1978 ;;		line 139 in file "Practica6_03_03_19.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		_Lcd_Cmd
  2001 ;;		_Lcd_Out
  2002 ;;		_teclado
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text1
  2009  005A56                     __ptext1:
  2010                           	opt callstack 0
  2011  005A56                     _incorrecto:
  2012                           	opt callstack 28
  2013                           
  2014                           ;Practica6_03_03_19.c: 140:     Lcd_Out(1, 1,"No recuerda su");
  2015                           
  2016                           ;incstack = 0
  2017  005A56  0E01               	movlw	1
  2018  005A58  6E04               	movwf	Lcd_Out@x,c
  2019  005A5A  0EB0               	movlw	low STR_11
  2020  005A5C  6E05               	movwf	Lcd_Out@buffer,c
  2021  005A5E  0E7E               	movlw	high STR_11
  2022  005A60  6E06               	movwf	Lcd_Out@buffer+1,c
  2023  005A62  0E01               	movlw	1
  2024  005A64  EC53  F02C         	call	_Lcd_Out
  2025                           
  2026                           ;Practica6_03_03_19.c: 141:     Lcd_Out(2,4,"pin X'C");
  2027  005A68  0E04               	movlw	4
  2028  005A6A  6E04               	movwf	Lcd_Out@x,c
  2029  005A6C  0EC5               	movlw	low STR_12
  2030  005A6E  6E05               	movwf	Lcd_Out@buffer,c
  2031  005A70  0E7F               	movlw	high STR_12
  2032  005A72  6E06               	movwf	Lcd_Out@buffer+1,c
  2033  005A74  0E02               	movlw	2
  2034  005A76  EC53  F02C         	call	_Lcd_Out
  2035                           
  2036                           ;Practica6_03_03_19.c: 142:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  2037  005A7A  0E1F               	movlw	31
  2038  005A7C  6E0C               	movwf	(??_incorrecto+1)& (0+255),c
  2039  005A7E  0E71               	movlw	113
  2040  005A80  6E0B               	movwf	??_incorrecto& (0+255),c
  2041  005A82  0E1E               	movlw	30
  2042  005A84                     u2447:
  2043  005A84  2EE8               	decfsz	wreg,f,c
  2044  005A86  D7FE               	bra	u2447
  2045  005A88  2E0B               	decfsz	??_incorrecto& (0+255),f,c
  2046  005A8A  D7FC               	bra	u2447
  2047  005A8C  2E0C               	decfsz	(??_incorrecto+1)& (0+255),f,c
  2048  005A8E  D7FA               	bra	u2447
  2049  005A90  D000               	nop2	
  2050                           
  2051                           ;Practica6_03_03_19.c: 143:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2052  005A92  0E02               	movlw	2
  2053  005A94  6E0C               	movwf	(??_incorrecto+1)& (0+255),c
  2054  005A96  0E04               	movlw	4
  2055  005A98  6E0B               	movwf	??_incorrecto& (0+255),c
  2056  005A9A  0EBA               	movlw	186
  2057  005A9C                     u2457:
  2058  005A9C  2EE8               	decfsz	wreg,f,c
  2059  005A9E  D7FE               	bra	u2457
  2060  005AA0  2E0B               	decfsz	??_incorrecto& (0+255),f,c
  2061  005AA2  D7FC               	bra	u2457
  2062  005AA4  2E0C               	decfsz	(??_incorrecto+1)& (0+255),f,c
  2063  005AA6  D7FA               	bra	u2457
  2064  005AA8  D000               	nop2	
  2065                           
  2066                           ;Practica6_03_03_19.c: 144:     Lcd_Cmd(1);
  2067  005AAA  0E01               	movlw	1
  2068  005AAC  EC2E  F02E         	call	_Lcd_Cmd
  2069                           
  2070                           ;Practica6_03_03_19.c: 145:     Lcd_Out(1, 1,"Piense un poco");
  2071  005AB0  0E01               	movlw	1
  2072  005AB2  6E04               	movwf	Lcd_Out@x,c
  2073  005AB4  0E83               	movlw	low STR_13
  2074  005AB6  6E05               	movwf	Lcd_Out@buffer,c
  2075  005AB8  0E7E               	movlw	high STR_13
  2076  005ABA  6E06               	movwf	Lcd_Out@buffer+1,c
  2077  005ABC  0E01               	movlw	1
  2078  005ABE  EC53  F02C         	call	_Lcd_Out
  2079                           
  2080                           ;Practica6_03_03_19.c: 146:     Lcd_Out(2,5,"X'V");
  2081  005AC2  0E05               	movlw	5
  2082  005AC4  6E04               	movwf	Lcd_Out@x,c
  2083  005AC6  0EF7               	movlw	low STR_14
  2084  005AC8  6E05               	movwf	Lcd_Out@buffer,c
  2085  005ACA  0E7F               	movlw	high STR_14
  2086  005ACC  6E06               	movwf	Lcd_Out@buffer+1,c
  2087  005ACE  0E02               	movlw	2
  2088  005AD0  EC53  F02C         	call	_Lcd_Out
  2089                           
  2090                           ;Practica6_03_03_19.c: 147:      _delay((unsigned long)((3000)*(8000000/4000.0)));
  2091  005AD4  0E1F               	movlw	31
  2092  005AD6  6E0C               	movwf	(??_incorrecto+1)& (0+255),c
  2093  005AD8  0E71               	movlw	113
  2094  005ADA  6E0B               	movwf	??_incorrecto& (0+255),c
  2095  005ADC  0E1E               	movlw	30
  2096  005ADE                     u2467:
  2097  005ADE  2EE8               	decfsz	wreg,f,c
  2098  005AE0  D7FE               	bra	u2467
  2099  005AE2  2E0B               	decfsz	??_incorrecto& (0+255),f,c
  2100  005AE4  D7FC               	bra	u2467
  2101  005AE6  2E0C               	decfsz	(??_incorrecto+1)& (0+255),f,c
  2102  005AE8  D7FA               	bra	u2467
  2103  005AEA  D000               	nop2	
  2104                           
  2105                           ;Practica6_03_03_19.c: 148:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2106  005AEC  0E02               	movlw	2
  2107  005AEE  6E0C               	movwf	(??_incorrecto+1)& (0+255),c
  2108  005AF0  0E04               	movlw	4
  2109  005AF2  6E0B               	movwf	??_incorrecto& (0+255),c
  2110  005AF4  0EBA               	movlw	186
  2111  005AF6                     u2477:
  2112  005AF6  2EE8               	decfsz	wreg,f,c
  2113  005AF8  D7FE               	bra	u2477
  2114  005AFA  2E0B               	decfsz	??_incorrecto& (0+255),f,c
  2115  005AFC  D7FC               	bra	u2477
  2116  005AFE  2E0C               	decfsz	(??_incorrecto+1)& (0+255),f,c
  2117  005B00  D7FA               	bra	u2477
  2118  005B02  D000               	nop2	
  2119                           
  2120                           ;Practica6_03_03_19.c: 149:     Lcd_Cmd(1);
  2121  005B04  0E01               	movlw	1
  2122  005B06  EC2E  F02E         	call	_Lcd_Cmd
  2123                           
  2124                           ;Practica6_03_03_19.c: 150:     Lcd_Out(1, 1,"Listo, presione");
  2125  005B0A  0E01               	movlw	1
  2126  005B0C  6E04               	movwf	Lcd_Out@x,c
  2127  005B0E  0E53               	movlw	low STR_15
  2128  005B10  6E05               	movwf	Lcd_Out@buffer,c
  2129  005B12  0E7E               	movlw	high STR_15
  2130  005B14  6E06               	movwf	Lcd_Out@buffer+1,c
  2131  005B16  0E01               	movlw	1
  2132  005B18  EC53  F02C         	call	_Lcd_Out
  2133                           
  2134                           ;Practica6_03_03_19.c: 151:     Lcd_Out(2,5," # ");
  2135  005B1C  0E05               	movlw	5
  2136  005B1E  6E04               	movwf	Lcd_Out@x,c
  2137  005B20  0EF3               	movlw	low STR_16
  2138  005B22  6E05               	movwf	Lcd_Out@buffer,c
  2139  005B24  0E7F               	movlw	high STR_16
  2140  005B26  6E06               	movwf	Lcd_Out@buffer+1,c
  2141  005B28  0E02               	movlw	2
  2142  005B2A  EC53  F02C         	call	_Lcd_Out
  2143                           
  2144                           ;Practica6_03_03_19.c: 152:     while (valor != '#'){
  2145  005B2E  D002               	goto	l3514
  2146  005B30                     l3512:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;Practica6_03_03_19.c: 153:         teclado();
  2150  005B30  EC30  F031         	call	_teclado	;wreg free
  2151  005B34                     l3514:
  2152                           
  2153                           ;Practica6_03_03_19.c: 152:     while (valor != '#'){
  2154  005B34  0E23               	movlw	35
  2155  005B36  0100               	movlb	0	; () banked
  2156  005B38  1960               	xorwf	_valor& (0+255),w,b
  2157  005B3A  1161               	iorwf	(_valor+1)& (0+255),w,b
  2158  005B3C  1162               	iorwf	(_valor+2)& (0+255),w,b
  2159  005B3E  1163               	iorwf	(_valor+3)& (0+255),w,b
  2160  005B40  A4D8               	btfss	status,2,c
  2161  005B42  D7F6               	goto	l3512
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;Practica6_03_03_19.c: 155:     valor=0;
  2165  005B44  0E00               	movlw	0
  2166  005B46  6F60               	movwf	_valor& (0+255),b
  2167  005B48  0E00               	movlw	0
  2168  005B4A  6F61               	movwf	(_valor+1)& (0+255),b
  2169  005B4C  0E00               	movlw	0
  2170  005B4E  6F62               	movwf	(_valor+2)& (0+255),b
  2171  005B50  0E00               	movlw	0
  2172  005B52  6F63               	movwf	(_valor+3)& (0+255),b
  2173                           
  2174                           ; BSR set to: 0
  2175  005B54  0012               	return		;funcret
  2176  005B56                     __end_of_incorrecto:
  2177                           	opt callstack 0
  2178                           
  2179 ;; *************** function _correcto *****************
  2180 ;; Defined at:
  2181 ;;		line 157 in file "Practica6_03_03_19.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  deposito        4   14[BANK0 ] long 
  2186 ;;  i               2   18[BANK0 ] int 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2198 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2199 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2200 ;;Total ram usage:       10 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    8
  2203 ;; This function calls:
  2204 ;;		_Lcd_Cmd
  2205 ;;		_Lcd_Out
  2206 ;;		_Lcd_Out2
  2207 ;;		___lmul
  2208 ;;		_letrero
  2209 ;;		_sprintf
  2210 ;;		_teclado
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text2
  2217  006BD6                     __ptext2:
  2218                           	opt callstack 0
  2219  006BD6                     _correcto:
  2220                           	opt callstack 22
  2221                           
  2222                           ;Practica6_03_03_19.c: 161:     valor=0;
  2223                           
  2224                           ;Practica6_03_03_19.c: 160:     Operacion:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;incstack = 0
  2228  006BD6  0E00               	movlw	0
  2229  006BD8  0100               	movlb	0	; () banked
  2230  006BDA  6F60               	movwf	_valor& (0+255),b
  2231  006BDC  0E00               	movlw	0
  2232  006BDE  6F61               	movwf	(_valor+1)& (0+255),b
  2233  006BE0  0E00               	movlw	0
  2234  006BE2  6F62               	movwf	(_valor+2)& (0+255),b
  2235  006BE4  0E00               	movlw	0
  2236  006BE6  6F63               	movwf	(_valor+3)& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;Practica6_03_03_19.c: 162:     letrero();
  2240  006BE8  EC88  F030         	call	_letrero	;wreg free
  2241                           
  2242                           ;Practica6_03_03_19.c: 163:     while(valor!='*'){
  2243  006BEC  EF8D  F03E         	goto	l3480
  2244  006BF0                     l2910:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;Practica6_03_03_19.c: 164:         teclado();
  2248  006BF0  EC30  F031         	call	_teclado	;wreg free
  2249                           
  2250                           ;Practica6_03_03_19.c: 165:         switch(valor){
  2251  006BF4  EF63  F03E         	goto	l3478
  2252  006BF8                     l2912:
  2253                           
  2254                           ; BSR set to: 0
  2255  006BF8  0E00               	movlw	0
  2256  006BFA  6F60               	movwf	_valor& (0+255),b
  2257  006BFC  0E00               	movlw	0
  2258  006BFE  6F61               	movwf	(_valor+1)& (0+255),b
  2259  006C00  0E00               	movlw	0
  2260  006C02  6F62               	movwf	(_valor+2)& (0+255),b
  2261  006C04  0E00               	movlw	0
  2262  006C06  6F63               	movwf	(_valor+3)& (0+255),b
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;Practica6_03_03_19.c: 167:                 Lcd_Cmd(1);
  2266  006C08  0E01               	movlw	1
  2267  006C0A  EC2E  F02E         	call	_Lcd_Cmd
  2268                           
  2269                           ;Practica6_03_03_19.c: 168:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2270  006C0E  0E02               	movlw	2
  2271  006C10  0100               	movlb	0	; () banked
  2272  006C12  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2273  006C14  0E04               	movlw	4
  2274  006C16  6FD5               	movwf	??_correcto& (0+255),b
  2275  006C18  0EBA               	movlw	186
  2276  006C1A                     u2487:
  2277  006C1A  2EE8               	decfsz	wreg,f,c
  2278  006C1C  D7FE               	bra	u2487
  2279  006C1E  2FD5               	decfsz	??_correcto& (0+255),f,b
  2280  006C20  D7FC               	bra	u2487
  2281  006C22  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2282  006C24  D7FA               	bra	u2487
  2283  006C26  F000               	nop	
  2284                           
  2285                           ;Practica6_03_03_19.c: 169:                 Lcd_Out(1, 1,"Su saldo es:");
  2286  006C28  0E01               	movlw	1
  2287  006C2A  6E04               	movwf	Lcd_Out@x,c
  2288  006C2C  0E05               	movlw	low STR_17
  2289  006C2E  6E05               	movwf	Lcd_Out@buffer,c
  2290  006C30  0E7F               	movlw	high STR_17
  2291  006C32  6E06               	movwf	Lcd_Out@buffer+1,c
  2292  006C34  0E01               	movlw	1
  2293  006C36  EC53  F02C         	call	_Lcd_Out
  2294                           
  2295                           ;Practica6_03_03_19.c: 170:                 sprintf(palabra1,"  $%d",saldo);
  2296  006C3A  0EA9               	movlw	low _palabra1
  2297  006C3C  6E58               	movwf	sprintf@s,c
  2298  006C3E  0E00               	movlw	high _palabra1
  2299  006C40  6E59               	movwf	sprintf@s+1,c
  2300  006C42  0EDC               	movlw	low STR_18
  2301  006C44  6E5A               	movwf	sprintf@fmt,c
  2302  006C46  0E7F               	movlw	high STR_18
  2303  006C48  6E5B               	movwf	sprintf@fmt+1,c
  2304  006C4A  C0E7  F05C         	movff	_saldo,?_sprintf+4
  2305  006C4E  C0E8  F05D         	movff	_saldo+1,?_sprintf+5
  2306  006C52  C0E9  F05E         	movff	_saldo+2,?_sprintf+6
  2307  006C56  C0EA  F05F         	movff	_saldo+3,?_sprintf+7
  2308  006C5A  EC9C  F02B         	call	_sprintf	;wreg free
  2309                           
  2310                           ;Practica6_03_03_19.c: 171:                 Lcd_Out2(2,1,palabra1);
  2311  006C5E  0E01               	movlw	1
  2312  006C60  6E04               	movwf	Lcd_Out2@x,c
  2313  006C62  0EA9               	movlw	low _palabra1
  2314  006C64  6E05               	movwf	Lcd_Out2@buffer,c
  2315  006C66  0E00               	movlw	high _palabra1
  2316  006C68  6E06               	movwf	Lcd_Out2@buffer+1,c
  2317  006C6A  0E02               	movlw	2
  2318  006C6C  EC1B  F02C         	call	_Lcd_Out2
  2319                           
  2320                           ;Practica6_03_03_19.c: 172:                 _delay((unsigned long)((3000)*(8000000/4000.
      +                          0)));
  2321  006C70  0E1F               	movlw	31
  2322  006C72  0100               	movlb	0	; () banked
  2323  006C74  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2324  006C76  0E71               	movlw	113
  2325  006C78  6FD5               	movwf	??_correcto& (0+255),b
  2326  006C7A  0E1E               	movlw	30
  2327  006C7C                     u2497:
  2328  006C7C  2EE8               	decfsz	wreg,f,c
  2329  006C7E  D7FE               	bra	u2497
  2330  006C80  2FD5               	decfsz	??_correcto& (0+255),f,b
  2331  006C82  D7FC               	bra	u2497
  2332  006C84  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2333  006C86  D7FA               	bra	u2497
  2334  006C88  F000               	nop	
  2335                           
  2336                           ;Practica6_03_03_19.c: 173:                 Lcd_Cmd(1);
  2337  006C8A  0E01               	movlw	1
  2338  006C8C  EC2E  F02E         	call	_Lcd_Cmd
  2339                           
  2340                           ;Practica6_03_03_19.c: 174:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2341  006C90  0E02               	movlw	2
  2342  006C92  0100               	movlb	0	; () banked
  2343  006C94  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2344  006C96  0E04               	movlw	4
  2345  006C98  6FD5               	movwf	??_correcto& (0+255),b
  2346  006C9A  0EBA               	movlw	186
  2347  006C9C                     u2507:
  2348  006C9C  2EE8               	decfsz	wreg,f,c
  2349  006C9E  D7FE               	bra	u2507
  2350  006CA0  2FD5               	decfsz	??_correcto& (0+255),f,b
  2351  006CA2  D7FC               	bra	u2507
  2352  006CA4  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2353  006CA6  D7FA               	bra	u2507
  2354  006CA8  F000               	nop	
  2355                           
  2356                           ;Practica6_03_03_19.c: 175:                 Lcd_Cmd(1);
  2357  006CAA  0E01               	movlw	1
  2358  006CAC  EC2E  F02E         	call	_Lcd_Cmd
  2359  006CB0                     l2932:
  2360                           
  2361                           ;Practica6_03_03_19.c: 176:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2362  006CB0  0E02               	movlw	2
  2363  006CB2  0100               	movlb	0	; () banked
  2364  006CB4  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2365  006CB6  0E04               	movlw	4
  2366  006CB8  6FD5               	movwf	??_correcto& (0+255),b
  2367  006CBA  0EBA               	movlw	186
  2368  006CBC                     u2517:
  2369  006CBC  2EE8               	decfsz	wreg,f,c
  2370  006CBE  D7FE               	bra	u2517
  2371  006CC0  2FD5               	decfsz	??_correcto& (0+255),f,b
  2372  006CC2  D7FC               	bra	u2517
  2373  006CC4  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2374  006CC6  D7FA               	bra	u2517
  2375  006CC8  F000               	nop	
  2376                           
  2377                           ;Practica6_03_03_19.c: 177:                 letrero();
  2378  006CCA  EC88  F030         	call	_letrero	;wreg free
  2379                           
  2380                           ;Practica6_03_03_19.c: 178:                 teclado();
  2381  006CCE  EC30  F031         	call	_teclado	;wreg free
  2382                           
  2383                           ;Practica6_03_03_19.c: 180:                 break;
  2384  006CD2  EF8D  F03E         	goto	l3480
  2385  006CD6                     l2938:
  2386                           
  2387                           ; BSR set to: 0
  2388  006CD6  0E00               	movlw	0
  2389  006CD8  6FD9               	movwf	correcto@deposito& (0+255),b
  2390  006CDA  0E00               	movlw	0
  2391  006CDC  6FDA               	movwf	(correcto@deposito+1)& (0+255),b
  2392  006CDE  0E00               	movlw	0
  2393  006CE0  6FDB               	movwf	(correcto@deposito+2)& (0+255),b
  2394  006CE2  0E00               	movlw	0
  2395  006CE4  6FDC               	movwf	(correcto@deposito+3)& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;Practica6_03_03_19.c: 183:                 Lcd_Cmd(1);
  2399  006CE6  0E01               	movlw	1
  2400  006CE8  EC2E  F02E         	call	_Lcd_Cmd
  2401                           
  2402                           ;Practica6_03_03_19.c: 184:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2403  006CEC  0E02               	movlw	2
  2404  006CEE  0100               	movlb	0	; () banked
  2405  006CF0  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2406  006CF2  0E04               	movlw	4
  2407  006CF4  6FD5               	movwf	??_correcto& (0+255),b
  2408  006CF6  0EBA               	movlw	186
  2409  006CF8                     u2527:
  2410  006CF8  2EE8               	decfsz	wreg,f,c
  2411  006CFA  D7FE               	bra	u2527
  2412  006CFC  2FD5               	decfsz	??_correcto& (0+255),f,b
  2413  006CFE  D7FC               	bra	u2527
  2414  006D00  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2415  006D02  D7FA               	bra	u2527
  2416  006D04  F000               	nop	
  2417                           
  2418                           ;Practica6_03_03_19.c: 185:                 Lcd_Out(1,5,"Deposito");
  2419  006D06  0E05               	movlw	5
  2420  006D08  6E04               	movwf	Lcd_Out@x,c
  2421  006D0A  0E83               	movlw	low (STR_65+2)
  2422  006D0C  6E05               	movwf	Lcd_Out@buffer,c
  2423  006D0E  0E7F               	movlw	high (STR_65+2)
  2424  006D10  6E06               	movwf	Lcd_Out@buffer+1,c
  2425  006D12  0E01               	movlw	1
  2426  006D14  EC53  F02C         	call	_Lcd_Out
  2427                           
  2428                           ;Practica6_03_03_19.c: 186:                 for(i=16;i>0;i--){
  2429  006D18  0E00               	movlw	0
  2430  006D1A  0100               	movlb	0	; () banked
  2431  006D1C  6FDE               	movwf	(correcto@i+1)& (0+255),b
  2432  006D1E  0E10               	movlw	16
  2433  006D20  6FDD               	movwf	correcto@i& (0+255),b
  2434  006D22                     l2948:
  2435                           
  2436                           ; BSR set to: 0
  2437  006D22  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  2438  006D24  D01A               	goto	l2960
  2439  006D26  51DE               	movf	(correcto@i+1)& (0+255),w,b
  2440  006D28  E103               	bnz	l2952
  2441  006D2A  05DD               	decf	correcto@i& (0+255),w,b
  2442  006D2C  A0D8               	btfss	status,0,c
  2443  006D2E  D015               	goto	l2960
  2444  006D30                     l2952:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;Practica6_03_03_19.c: 187:                     Lcd_Cmd(24);
  2448  006D30  0E18               	movlw	24
  2449  006D32  EC2E  F02E         	call	_Lcd_Cmd
  2450                           
  2451                           ;Practica6_03_03_19.c: 188:                     _delay((unsigned long)((300)*(8000000/40
      +                          00.0)));
  2452  006D36  0E04               	movlw	4
  2453  006D38  0100               	movlb	0	; () banked
  2454  006D3A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2455  006D3C  0E0C               	movlw	12
  2456  006D3E  6FD5               	movwf	??_correcto& (0+255),b
  2457  006D40  0E33               	movlw	51
  2458  006D42                     u2537:
  2459  006D42  2EE8               	decfsz	wreg,f,c
  2460  006D44  D7FE               	bra	u2537
  2461  006D46  2FD5               	decfsz	??_correcto& (0+255),f,b
  2462  006D48  D7FC               	bra	u2537
  2463  006D4A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2464  006D4C  D7FA               	bra	u2537
  2465  006D4E  D000               	nop2	
  2466                           
  2467                           ;Practica6_03_03_19.c: 189:                 }
  2468  006D50  0100               	movlb	0	; () banked
  2469  006D52  07DD               	decf	correcto@i& (0+255),f,b
  2470  006D54  A0D8               	btfss	status,0,c
  2471  006D56  07DE               	decf	(correcto@i+1)& (0+255),f,b
  2472  006D58  D7E4               	goto	l2948
  2473  006D5A                     l2960:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;Practica6_03_03_19.c: 190:                 Lcd_Cmd(1);
  2477  006D5A  0E01               	movlw	1
  2478  006D5C  EC2E  F02E         	call	_Lcd_Cmd
  2479                           
  2480                           ;Practica6_03_03_19.c: 191:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2481  006D60  0E02               	movlw	2
  2482  006D62  0100               	movlb	0	; () banked
  2483  006D64  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2484  006D66  0E04               	movlw	4
  2485  006D68  6FD5               	movwf	??_correcto& (0+255),b
  2486  006D6A  0EBA               	movlw	186
  2487  006D6C                     u2547:
  2488  006D6C  2EE8               	decfsz	wreg,f,c
  2489  006D6E  D7FE               	bra	u2547
  2490  006D70  2FD5               	decfsz	??_correcto& (0+255),f,b
  2491  006D72  D7FC               	bra	u2547
  2492  006D74  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2493  006D76  D7FA               	bra	u2547
  2494  006D78  F000               	nop	
  2495                           
  2496                           ;Practica6_03_03_19.c: 192:                 Lcd_Out(1,1,"Solo podra depositar maximo 900
      +                          0 pesos");
  2497  006D7A  0E01               	movlw	1
  2498  006D7C  6E04               	movwf	Lcd_Out@x,c
  2499  006D7E  0E2F               	movlw	low STR_20
  2500  006D80  6E05               	movwf	Lcd_Out@buffer,c
  2501  006D82  0E7D               	movlw	high STR_20
  2502  006D84  6E06               	movwf	Lcd_Out@buffer+1,c
  2503  006D86  0E01               	movlw	1
  2504  006D88  EC53  F02C         	call	_Lcd_Out
  2505                           
  2506                           ;Practica6_03_03_19.c: 193:                 for(i=38;i>0;i--){
  2507  006D8C  0E00               	movlw	0
  2508  006D8E  0100               	movlb	0	; () banked
  2509  006D90  6FDE               	movwf	(correcto@i+1)& (0+255),b
  2510  006D92  0E26               	movlw	38
  2511  006D94  6FDD               	movwf	correcto@i& (0+255),b
  2512  006D96                     l2968:
  2513                           
  2514                           ; BSR set to: 0
  2515  006D96  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  2516  006D98  D019               	goto	l2980
  2517  006D9A  51DE               	movf	(correcto@i+1)& (0+255),w,b
  2518  006D9C  E103               	bnz	l2972
  2519  006D9E  05DD               	decf	correcto@i& (0+255),w,b
  2520  006DA0  A0D8               	btfss	status,0,c
  2521  006DA2  D014               	goto	l2980
  2522  006DA4                     l2972:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;Practica6_03_03_19.c: 194:                     Lcd_Cmd(24);
  2526  006DA4  0E18               	movlw	24
  2527  006DA6  EC2E  F02E         	call	_Lcd_Cmd
  2528                           
  2529                           ;Practica6_03_03_19.c: 195:                     _delay((unsigned long)((200)*(8000000/40
      +                          00.0)));
  2530  006DAA  0E03               	movlw	3
  2531  006DAC  0100               	movlb	0	; () banked
  2532  006DAE  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2533  006DB0  0E08               	movlw	8
  2534  006DB2  6FD5               	movwf	??_correcto& (0+255),b
  2535  006DB4  0E77               	movlw	119
  2536  006DB6                     u2557:
  2537  006DB6  2EE8               	decfsz	wreg,f,c
  2538  006DB8  D7FE               	bra	u2557
  2539  006DBA  2FD5               	decfsz	??_correcto& (0+255),f,b
  2540  006DBC  D7FC               	bra	u2557
  2541  006DBE  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2542  006DC0  D7FA               	bra	u2557
  2543                           
  2544                           ;Practica6_03_03_19.c: 196:                 }
  2545  006DC2  0100               	movlb	0	; () banked
  2546  006DC4  07DD               	decf	correcto@i& (0+255),f,b
  2547  006DC6  A0D8               	btfss	status,0,c
  2548  006DC8  07DE               	decf	(correcto@i+1)& (0+255),f,b
  2549  006DCA  D7E5               	goto	l2968
  2550  006DCC                     l2980:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;Practica6_03_03_19.c: 197:                 Lcd_Cmd(1);
  2554  006DCC  0E01               	movlw	1
  2555  006DCE  EC2E  F02E         	call	_Lcd_Cmd
  2556                           
  2557                           ;Practica6_03_03_19.c: 198:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2558  006DD2  0E02               	movlw	2
  2559  006DD4  0100               	movlb	0	; () banked
  2560  006DD6  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2561  006DD8  0E04               	movlw	4
  2562  006DDA  6FD5               	movwf	??_correcto& (0+255),b
  2563  006DDC  0EBA               	movlw	186
  2564  006DDE                     u2567:
  2565  006DDE  2EE8               	decfsz	wreg,f,c
  2566  006DE0  D7FE               	bra	u2567
  2567  006DE2  2FD5               	decfsz	??_correcto& (0+255),f,b
  2568  006DE4  D7FC               	bra	u2567
  2569  006DE6  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2570  006DE8  D7FA               	bra	u2567
  2571  006DEA  F000               	nop	
  2572                           
  2573                           ;Practica6_03_03_19.c: 199:                 Lcd_Out(1,1,"Presiona * cuando termine");
  2574  006DEC  0E01               	movlw	1
  2575  006DEE  6E04               	movwf	Lcd_Out@x,c
  2576  006DF0  0E7B               	movlw	low STR_21
  2577  006DF2  6E05               	movwf	Lcd_Out@buffer,c
  2578  006DF4  0E7D               	movlw	high STR_21
  2579  006DF6  6E06               	movwf	Lcd_Out@buffer+1,c
  2580  006DF8  0E01               	movlw	1
  2581  006DFA  EC53  F02C         	call	_Lcd_Out
  2582                           
  2583                           ;Practica6_03_03_19.c: 200:                 for(i=26;i>0;i--){
  2584  006DFE  0E00               	movlw	0
  2585  006E00  0100               	movlb	0	; () banked
  2586  006E02  6FDE               	movwf	(correcto@i+1)& (0+255),b
  2587  006E04  0E1A               	movlw	26
  2588  006E06  6FDD               	movwf	correcto@i& (0+255),b
  2589  006E08                     l2988:
  2590                           
  2591                           ; BSR set to: 0
  2592  006E08  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  2593  006E0A  D019               	goto	l3000
  2594  006E0C  51DE               	movf	(correcto@i+1)& (0+255),w,b
  2595  006E0E  E103               	bnz	l2992
  2596  006E10  05DD               	decf	correcto@i& (0+255),w,b
  2597  006E12  A0D8               	btfss	status,0,c
  2598  006E14  D014               	goto	l3000
  2599  006E16                     l2992:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;Practica6_03_03_19.c: 201:                     Lcd_Cmd(24);
  2603  006E16  0E18               	movlw	24
  2604  006E18  EC2E  F02E         	call	_Lcd_Cmd
  2605                           
  2606                           ;Practica6_03_03_19.c: 202:                     _delay((unsigned long)((200)*(8000000/40
      +                          00.0)));
  2607  006E1C  0E03               	movlw	3
  2608  006E1E  0100               	movlb	0	; () banked
  2609  006E20  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2610  006E22  0E08               	movlw	8
  2611  006E24  6FD5               	movwf	??_correcto& (0+255),b
  2612  006E26  0E77               	movlw	119
  2613  006E28                     u2577:
  2614  006E28  2EE8               	decfsz	wreg,f,c
  2615  006E2A  D7FE               	bra	u2577
  2616  006E2C  2FD5               	decfsz	??_correcto& (0+255),f,b
  2617  006E2E  D7FC               	bra	u2577
  2618  006E30  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2619  006E32  D7FA               	bra	u2577
  2620                           
  2621                           ;Practica6_03_03_19.c: 203:                 }
  2622  006E34  0100               	movlb	0	; () banked
  2623  006E36  07DD               	decf	correcto@i& (0+255),f,b
  2624  006E38  A0D8               	btfss	status,0,c
  2625  006E3A  07DE               	decf	(correcto@i+1)& (0+255),f,b
  2626  006E3C  D7E5               	goto	l2988
  2627  006E3E                     l3000:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;Practica6_03_03_19.c: 204:                 Lcd_Cmd(1);
  2631  006E3E  0E01               	movlw	1
  2632  006E40  EC2E  F02E         	call	_Lcd_Cmd
  2633                           
  2634                           ;Practica6_03_03_19.c: 205:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2635  006E44  0E02               	movlw	2
  2636  006E46  0100               	movlb	0	; () banked
  2637  006E48  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2638  006E4A  0E04               	movlw	4
  2639  006E4C  6FD5               	movwf	??_correcto& (0+255),b
  2640  006E4E  0EBA               	movlw	186
  2641  006E50                     u2587:
  2642  006E50  2EE8               	decfsz	wreg,f,c
  2643  006E52  D7FE               	bra	u2587
  2644  006E54  2FD5               	decfsz	??_correcto& (0+255),f,b
  2645  006E56  D7FC               	bra	u2587
  2646  006E58  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2647  006E5A  D7FA               	bra	u2587
  2648  006E5C  F000               	nop	
  2649                           
  2650                           ;Practica6_03_03_19.c: 206:                 sum1=0;
  2651  006E5E  0E00               	movlw	0
  2652  006E60  0100               	movlb	0	; () banked
  2653  006E62  6F64               	movwf	_sum1& (0+255),b
  2654  006E64  0E00               	movlw	0
  2655  006E66  6F65               	movwf	(_sum1+1)& (0+255),b
  2656  006E68  0E00               	movlw	0
  2657  006E6A  6F66               	movwf	(_sum1+2)& (0+255),b
  2658  006E6C  0E00               	movlw	0
  2659  006E6E  6F67               	movwf	(_sum1+3)& (0+255),b
  2660                           
  2661                           ;Practica6_03_03_19.c: 207:                 while(valor!='*'){
  2662  006E70  D0F5               	goto	l3052
  2663  006E72                     l3006:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;Practica6_03_03_19.c: 208:                     teclado();
  2667  006E72  EC30  F031         	call	_teclado	;wreg free
  2668                           
  2669                           ;Practica6_03_03_19.c: 209:                     Lcd_Out(1, 1,"Ingrese su");
  2670  006E76  0E01               	movlw	1
  2671  006E78  6E04               	movwf	Lcd_Out@x,c
  2672  006E7A  0E8C               	movlw	low STR_22
  2673  006E7C  6E05               	movwf	Lcd_Out@buffer,c
  2674  006E7E  0E7F               	movlw	high STR_22
  2675  006E80  6E06               	movwf	Lcd_Out@buffer+1,c
  2676  006E82  0E01               	movlw	1
  2677  006E84  EC53  F02C         	call	_Lcd_Out
  2678                           
  2679                           ;Practica6_03_03_19.c: 210:                     Lcd_Out(2,1,"Deposito:");
  2680  006E88  0E01               	movlw	1
  2681  006E8A  6E04               	movwf	Lcd_Out@x,c
  2682  006E8C  0E97               	movlw	low STR_23
  2683  006E8E  6E05               	movwf	Lcd_Out@buffer,c
  2684  006E90  0E7F               	movlw	high STR_23
  2685  006E92  6E06               	movwf	Lcd_Out@buffer+1,c
  2686  006E94  0E02               	movlw	2
  2687  006E96  EC53  F02C         	call	_Lcd_Out
  2688                           
  2689                           ;Practica6_03_03_19.c: 211:                     if ((valor >= '0')&&(valor <= '9')){
  2690  006E9A  0100               	movlb	0	; () banked
  2691  006E9C  5163               	movf	(_valor+3)& (0+255),w,b
  2692  006E9E  1162               	iorwf	(_valor+2)& (0+255),w,b
  2693  006EA0  1161               	iorwf	(_valor+1)& (0+255),w,b
  2694  006EA2  E104               	bnz	u1910
  2695  006EA4  0E30               	movlw	48
  2696  006EA6  5D60               	subwf	_valor& (0+255),w,b
  2697  006EA8  A0D8               	btfss	status,0,c
  2698  006EAA  D04E               	goto	l3022
  2699  006EAC                     u1910:
  2700                           
  2701                           ; BSR set to: 0
  2702  006EAC  5163               	movf	(_valor+3)& (0+255),w,b
  2703  006EAE  1162               	iorwf	(_valor+2)& (0+255),w,b
  2704  006EB0  1161               	iorwf	(_valor+1)& (0+255),w,b
  2705  006EB2  E14A               	bnz	l3022
  2706  006EB4  0E3A               	movlw	58
  2707  006EB6  5D60               	subwf	_valor& (0+255),w,b
  2708  006EB8  B0D8               	btfsc	status,0,c
  2709  006EBA  D046               	goto	l3022
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;Practica6_03_03_19.c: 212:                         sum1 = sum1*10 + (valor - 48);
  2713  006EBC  C064  F001         	movff	_sum1,___lmul@multiplier
  2714  006EC0  C065  F002         	movff	_sum1+1,___lmul@multiplier+1
  2715  006EC4  C066  F003         	movff	_sum1+2,___lmul@multiplier+2
  2716  006EC8  C067  F004         	movff	_sum1+3,___lmul@multiplier+3
  2717  006ECC  0E0A               	movlw	10
  2718  006ECE  6E05               	movwf	___lmul@multiplicand,c
  2719  006ED0  0E00               	movlw	0
  2720  006ED2  6E06               	movwf	___lmul@multiplicand+1,c
  2721  006ED4  0E00               	movlw	0
  2722  006ED6  6E07               	movwf	___lmul@multiplicand+2,c
  2723  006ED8  0E00               	movlw	0
  2724  006EDA  6E08               	movwf	___lmul@multiplicand+3,c
  2725  006EDC  ECC5  F02B         	call	___lmul	;wreg free
  2726  006EE0  0100               	movlb	0	; () banked
  2727  006EE2  5160               	movf	_valor& (0+255),w,b
  2728  006EE4  2401               	addwf	?___lmul,w,c
  2729  006EE6  6FD5               	movwf	??_correcto& (0+255),b
  2730  006EE8  5161               	movf	(_valor+1)& (0+255),w,b
  2731  006EEA  2002               	addwfc	?___lmul+1,w,c
  2732  006EEC  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2733  006EEE  5162               	movf	(_valor+2)& (0+255),w,b
  2734  006EF0  2003               	addwfc	?___lmul+2,w,c
  2735  006EF2  6FD7               	movwf	(??_correcto+2)& (0+255),b
  2736  006EF4  5163               	movf	(_valor+3)& (0+255),w,b
  2737  006EF6  2004               	addwfc	?___lmul+3,w,c
  2738  006EF8  6FD8               	movwf	(??_correcto+3)& (0+255),b
  2739  006EFA  0ED0               	movlw	208
  2740  006EFC  25D5               	addwf	??_correcto& (0+255),w,b
  2741  006EFE  6F64               	movwf	_sum1& (0+255),b
  2742  006F00  0EFF               	movlw	255
  2743  006F02  21D6               	addwfc	(??_correcto+1)& (0+255),w,b
  2744  006F04  6F65               	movwf	(_sum1+1)& (0+255),b
  2745  006F06  0EFF               	movlw	255
  2746  006F08  21D7               	addwfc	(??_correcto+2)& (0+255),w,b
  2747  006F0A  6F66               	movwf	(_sum1+2)& (0+255),b
  2748  006F0C  0EFF               	movlw	255
  2749  006F0E  21D8               	addwfc	(??_correcto+3)& (0+255),w,b
  2750  006F10  6F67               	movwf	(_sum1+3)& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;Practica6_03_03_19.c: 213:                         sprintf(palabra,"$%d",sum1);
  2754  006F12  0EBA               	movlw	low _palabra
  2755  006F14  6E58               	movwf	sprintf@s,c
  2756  006F16  0E00               	movlw	high _palabra
  2757  006F18  6E59               	movwf	sprintf@s+1,c
  2758  006F1A  0EDE               	movlw	low (STR_18+2)
  2759  006F1C  6E5A               	movwf	sprintf@fmt,c
  2760  006F1E  0E7F               	movlw	high (STR_18+2)
  2761  006F20  6E5B               	movwf	sprintf@fmt+1,c
  2762  006F22  C064  F05C         	movff	_sum1,?_sprintf+4
  2763  006F26  C065  F05D         	movff	_sum1+1,?_sprintf+5
  2764  006F2A  C066  F05E         	movff	_sum1+2,?_sprintf+6
  2765  006F2E  C067  F05F         	movff	_sum1+3,?_sprintf+7
  2766  006F32  EC9C  F02B         	call	_sprintf	;wreg free
  2767                           
  2768                           ;Practica6_03_03_19.c: 214:                         Lcd_Out2(2,10,palabra);
  2769  006F36  0E0A               	movlw	10
  2770  006F38  6E04               	movwf	Lcd_Out2@x,c
  2771  006F3A  0EBA               	movlw	low _palabra
  2772  006F3C  6E05               	movwf	Lcd_Out2@buffer,c
  2773  006F3E  0E00               	movlw	high _palabra
  2774  006F40  6E06               	movwf	Lcd_Out2@buffer+1,c
  2775  006F42  0E02               	movlw	2
  2776  006F44  EC1B  F02C         	call	_Lcd_Out2
  2777  006F48                     l3022:
  2778                           
  2779                           ;Practica6_03_03_19.c: 216:                     deposito=sum1;
  2780  006F48  C064  F0D9         	movff	_sum1,correcto@deposito
  2781  006F4C  C065  F0DA         	movff	_sum1+1,correcto@deposito+1
  2782  006F50  C066  F0DB         	movff	_sum1+2,correcto@deposito+2
  2783  006F54  C067  F0DC         	movff	_sum1+3,correcto@deposito+3
  2784                           
  2785                           ;Practica6_03_03_19.c: 217:                     if(deposito>9000){
  2786  006F58  0100               	movlb	0	; () banked
  2787  006F5A  BFDC               	btfsc	(correcto@deposito+3)& (0+255),7,b
  2788  006F5C  D07F               	goto	l3052
  2789  006F5E  51DC               	movf	(correcto@deposito+3)& (0+255),w,b
  2790  006F60  11DB               	iorwf	(correcto@deposito+2)& (0+255),w,b
  2791  006F62  E106               	bnz	u1930
  2792  006F64  0E29               	movlw	41
  2793  006F66  5DD9               	subwf	correcto@deposito& (0+255),w,b
  2794  006F68  0E23               	movlw	35
  2795  006F6A  59DA               	subwfb	(correcto@deposito+1)& (0+255),w,b
  2796  006F6C  A0D8               	btfss	status,0,c
  2797  006F6E  D076               	goto	l3052
  2798  006F70                     u1930:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;Practica6_03_03_19.c: 218:                         sum1=0;
  2802  006F70  0E00               	movlw	0
  2803  006F72  6F64               	movwf	_sum1& (0+255),b
  2804  006F74  0E00               	movlw	0
  2805  006F76  6F65               	movwf	(_sum1+1)& (0+255),b
  2806  006F78  0E00               	movlw	0
  2807  006F7A  6F66               	movwf	(_sum1+2)& (0+255),b
  2808  006F7C  0E00               	movlw	0
  2809  006F7E  6F67               	movwf	(_sum1+3)& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;Practica6_03_03_19.c: 219:                         Lcd_Cmd(1);
  2813  006F80  0E01               	movlw	1
  2814  006F82  EC2E  F02E         	call	_Lcd_Cmd
  2815                           
  2816                           ;Practica6_03_03_19.c: 220:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  2817  006F86  0E02               	movlw	2
  2818  006F88  0100               	movlb	0	; () banked
  2819  006F8A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2820  006F8C  0E04               	movlw	4
  2821  006F8E  6FD5               	movwf	??_correcto& (0+255),b
  2822  006F90  0EBA               	movlw	186
  2823  006F92                     u2597:
  2824  006F92  2EE8               	decfsz	wreg,f,c
  2825  006F94  D7FE               	bra	u2597
  2826  006F96  2FD5               	decfsz	??_correcto& (0+255),f,b
  2827  006F98  D7FC               	bra	u2597
  2828  006F9A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2829  006F9C  D7FA               	bra	u2597
  2830  006F9E  F000               	nop	
  2831                           
  2832                           ;Practica6_03_03_19.c: 221:                         Lcd_Out(1,1,"Deposito maximo");
  2833  006FA0  0E01               	movlw	1
  2834  006FA2  6E04               	movwf	Lcd_Out@x,c
  2835  006FA4  0E63               	movlw	low STR_25
  2836  006FA6  6E05               	movwf	Lcd_Out@buffer,c
  2837  006FA8  0E7E               	movlw	high STR_25
  2838  006FAA  6E06               	movwf	Lcd_Out@buffer+1,c
  2839  006FAC  0E01               	movlw	1
  2840  006FAE  EC53  F02C         	call	_Lcd_Out
  2841                           
  2842                           ;Practica6_03_03_19.c: 222:                         Lcd_Out(2,1,"alcanzado");
  2843  006FB2  0E01               	movlw	1
  2844  006FB4  6E04               	movwf	Lcd_Out@x,c
  2845  006FB6  0EA1               	movlw	low STR_26
  2846  006FB8  6E05               	movwf	Lcd_Out@buffer,c
  2847  006FBA  0E7F               	movlw	high STR_26
  2848  006FBC  6E06               	movwf	Lcd_Out@buffer+1,c
  2849  006FBE  0E02               	movlw	2
  2850  006FC0  EC53  F02C         	call	_Lcd_Out
  2851                           
  2852                           ;Practica6_03_03_19.c: 223:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  2853  006FC4  0E15               	movlw	21
  2854  006FC6  0100               	movlb	0	; () banked
  2855  006FC8  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2856  006FCA  0E4B               	movlw	75
  2857  006FCC  6FD5               	movwf	??_correcto& (0+255),b
  2858  006FCE  0EBE               	movlw	190
  2859  006FD0                     u2607:
  2860  006FD0  2EE8               	decfsz	wreg,f,c
  2861  006FD2  D7FE               	bra	u2607
  2862  006FD4  2FD5               	decfsz	??_correcto& (0+255),f,b
  2863  006FD6  D7FC               	bra	u2607
  2864  006FD8  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2865  006FDA  D7FA               	bra	u2607
  2866  006FDC  F000               	nop	
  2867                           
  2868                           ;Practica6_03_03_19.c: 224:                         Lcd_Cmd(1);
  2869  006FDE  0E01               	movlw	1
  2870  006FE0  EC2E  F02E         	call	_Lcd_Cmd
  2871                           
  2872                           ;Practica6_03_03_19.c: 225:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  2873  006FE4  0E02               	movlw	2
  2874  006FE6  0100               	movlb	0	; () banked
  2875  006FE8  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2876  006FEA  0E04               	movlw	4
  2877  006FEC  6FD5               	movwf	??_correcto& (0+255),b
  2878  006FEE  0EBA               	movlw	186
  2879  006FF0                     u2617:
  2880  006FF0  2EE8               	decfsz	wreg,f,c
  2881  006FF2  D7FE               	bra	u2617
  2882  006FF4  2FD5               	decfsz	??_correcto& (0+255),f,b
  2883  006FF6  D7FC               	bra	u2617
  2884  006FF8  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2885  006FFA  D7FA               	bra	u2617
  2886  006FFC  F000               	nop	
  2887                           
  2888                           ;Practica6_03_03_19.c: 226:                         Lcd_Out(1,1,"Intentalo de ");
  2889  006FFE  0E01               	movlw	1
  2890  007000  6E04               	movwf	Lcd_Out@x,c
  2891  007002  0EBF               	movlw	low STR_27
  2892  007004  6E05               	movwf	Lcd_Out@buffer,c
  2893  007006  0E7E               	movlw	high STR_27
  2894  007008  6E06               	movwf	Lcd_Out@buffer+1,c
  2895  00700A  0E01               	movlw	1
  2896  00700C  EC53  F02C         	call	_Lcd_Out
  2897                           
  2898                           ;Practica6_03_03_19.c: 227:                         Lcd_Out(2,1,"nuevo humano");
  2899  007010  0E01               	movlw	1
  2900  007012  6E04               	movwf	Lcd_Out@x,c
  2901  007014  0E39               	movlw	low STR_28
  2902  007016  6E05               	movwf	Lcd_Out@buffer,c
  2903  007018  0E7F               	movlw	high STR_28
  2904  00701A  6E06               	movwf	Lcd_Out@buffer+1,c
  2905  00701C  0E02               	movlw	2
  2906  00701E  EC53  F02C         	call	_Lcd_Out
  2907                           
  2908                           ;Practica6_03_03_19.c: 228:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  2909  007022  0E15               	movlw	21
  2910  007024  0100               	movlb	0	; () banked
  2911  007026  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2912  007028  0E4B               	movlw	75
  2913  00702A  6FD5               	movwf	??_correcto& (0+255),b
  2914  00702C  0EBE               	movlw	190
  2915  00702E                     u2627:
  2916  00702E  2EE8               	decfsz	wreg,f,c
  2917  007030  D7FE               	bra	u2627
  2918  007032  2FD5               	decfsz	??_correcto& (0+255),f,b
  2919  007034  D7FC               	bra	u2627
  2920  007036  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2921  007038  D7FA               	bra	u2627
  2922  00703A  F000               	nop	
  2923                           
  2924                           ;Practica6_03_03_19.c: 229:                         Lcd_Cmd(1);
  2925  00703C  0E01               	movlw	1
  2926  00703E  EC2E  F02E         	call	_Lcd_Cmd
  2927                           
  2928                           ;Practica6_03_03_19.c: 230:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  2929  007042  0E02               	movlw	2
  2930  007044  0100               	movlb	0	; () banked
  2931  007046  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2932  007048  0E04               	movlw	4
  2933  00704A  6FD5               	movwf	??_correcto& (0+255),b
  2934  00704C  0EBA               	movlw	186
  2935  00704E                     u2637:
  2936  00704E  2EE8               	decfsz	wreg,f,c
  2937  007050  D7FE               	bra	u2637
  2938  007052  2FD5               	decfsz	??_correcto& (0+255),f,b
  2939  007054  D7FC               	bra	u2637
  2940  007056  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2941  007058  D7FA               	bra	u2637
  2942  00705A  F000               	nop	
  2943  00705C                     l3052:
  2944                           
  2945                           ;Practica6_03_03_19.c: 207:                 while(valor!='*'){
  2946  00705C  0E2A               	movlw	42
  2947  00705E  0100               	movlb	0	; () banked
  2948  007060  1960               	xorwf	_valor& (0+255),w,b
  2949  007062  1161               	iorwf	(_valor+1)& (0+255),w,b
  2950  007064  1162               	iorwf	(_valor+2)& (0+255),w,b
  2951  007066  1163               	iorwf	(_valor+3)& (0+255),w,b
  2952  007068  A4D8               	btfss	status,2,c
  2953  00706A  D703               	goto	l3006
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;Practica6_03_03_19.c: 233:                 Lcd_Cmd(1);
  2957  00706C  0E01               	movlw	1
  2958  00706E  EC2E  F02E         	call	_Lcd_Cmd
  2959                           
  2960                           ;Practica6_03_03_19.c: 234:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  2961  007072  0E02               	movlw	2
  2962  007074  0100               	movlb	0	; () banked
  2963  007076  6FD6               	movwf	(??_correcto+1)& (0+255),b
  2964  007078  0E04               	movlw	4
  2965  00707A  6FD5               	movwf	??_correcto& (0+255),b
  2966  00707C  0EBA               	movlw	186
  2967  00707E                     u2647:
  2968  00707E  2EE8               	decfsz	wreg,f,c
  2969  007080  D7FE               	bra	u2647
  2970  007082  2FD5               	decfsz	??_correcto& (0+255),f,b
  2971  007084  D7FC               	bra	u2647
  2972  007086  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  2973  007088  D7FA               	bra	u2647
  2974  00708A  F000               	nop	
  2975                           
  2976                           ;Practica6_03_03_19.c: 235:                 valor=0;
  2977  00708C  0E00               	movlw	0
  2978  00708E  0100               	movlb	0	; () banked
  2979  007090  6F60               	movwf	_valor& (0+255),b
  2980  007092  0E00               	movlw	0
  2981  007094  6F61               	movwf	(_valor+1)& (0+255),b
  2982  007096  0E00               	movlw	0
  2983  007098  6F62               	movwf	(_valor+2)& (0+255),b
  2984  00709A  0E00               	movlw	0
  2985  00709C  6F63               	movwf	(_valor+3)& (0+255),b
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;Practica6_03_03_19.c: 236:                 saldo=saldo+deposito;
  2989  00709E  51D9               	movf	correcto@deposito& (0+255),w,b
  2990  0070A0  25E7               	addwf	_saldo& (0+255),w,b
  2991  0070A2  6FE7               	movwf	_saldo& (0+255),b
  2992  0070A4  51DA               	movf	(correcto@deposito+1)& (0+255),w,b
  2993  0070A6  21E8               	addwfc	(_saldo+1)& (0+255),w,b
  2994  0070A8  6FE8               	movwf	(_saldo+1)& (0+255),b
  2995  0070AA  51DB               	movf	(correcto@deposito+2)& (0+255),w,b
  2996  0070AC  21E9               	addwfc	(_saldo+2)& (0+255),w,b
  2997  0070AE  6FE9               	movwf	(_saldo+2)& (0+255),b
  2998  0070B0  51DC               	movf	(correcto@deposito+3)& (0+255),w,b
  2999  0070B2  21EA               	addwfc	(_saldo+3)& (0+255),w,b
  3000  0070B4  6FEA               	movwf	(_saldo+3)& (0+255),b
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;Practica6_03_03_19.c: 237:                 Lcd_Out(1,1,"Saldo depositado");
  3004  0070B6  0E01               	movlw	1
  3005  0070B8  6E04               	movwf	Lcd_Out@x,c
  3006  0070BA  0E10               	movlw	low STR_29
  3007  0070BC  6E05               	movwf	Lcd_Out@buffer,c
  3008  0070BE  0E7E               	movlw	high STR_29
  3009  0070C0  6E06               	movwf	Lcd_Out@buffer+1,c
  3010  0070C2  0E01               	movlw	1
  3011  0070C4  EC53  F02C         	call	_Lcd_Out
  3012                           
  3013                           ;Practica6_03_03_19.c: 238:                 _delay((unsigned long)((1000)*(8000000/4000.
      +                          0)));
  3014  0070C8  0E0B               	movlw	11
  3015  0070CA  0100               	movlb	0	; () banked
  3016  0070CC  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3017  0070CE  0E26               	movlw	38
  3018  0070D0  6FD5               	movwf	??_correcto& (0+255),b
  3019  0070D2  0E5D               	movlw	93
  3020  0070D4                     u2657:
  3021  0070D4  2EE8               	decfsz	wreg,f,c
  3022  0070D6  D7FE               	bra	u2657
  3023  0070D8  2FD5               	decfsz	??_correcto& (0+255),f,b
  3024  0070DA  D7FC               	bra	u2657
  3025  0070DC  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3026  0070DE  D7FA               	bra	u2657
  3027  0070E0  D000               	nop2	
  3028                           
  3029                           ;Practica6_03_03_19.c: 239:                 Lcd_Cmd(1);
  3030  0070E2  0E01               	movlw	1
  3031  0070E4  EC2E  F02E         	call	_Lcd_Cmd
  3032  0070E8  D5E3               	goto	l2932
  3033  0070EA                     l3074:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;Practica6_03_03_19.c: 246:                 deposito=0;
  3037  0070EA  0E00               	movlw	0
  3038  0070EC  6FD9               	movwf	correcto@deposito& (0+255),b
  3039  0070EE  0E00               	movlw	0
  3040  0070F0  6FDA               	movwf	(correcto@deposito+1)& (0+255),b
  3041  0070F2  0E00               	movlw	0
  3042  0070F4  6FDB               	movwf	(correcto@deposito+2)& (0+255),b
  3043  0070F6  0E00               	movlw	0
  3044  0070F8  6FDC               	movwf	(correcto@deposito+3)& (0+255),b
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;Practica6_03_03_19.c: 247:                 Lcd_Cmd(1);
  3048  0070FA  0E01               	movlw	1
  3049  0070FC  EC2E  F02E         	call	_Lcd_Cmd
  3050                           
  3051                           ;Practica6_03_03_19.c: 248:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3052  007100  0E02               	movlw	2
  3053  007102  0100               	movlb	0	; () banked
  3054  007104  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3055  007106  0E04               	movlw	4
  3056  007108  6FD5               	movwf	??_correcto& (0+255),b
  3057  00710A  0EBA               	movlw	186
  3058  00710C                     u2667:
  3059  00710C  2EE8               	decfsz	wreg,f,c
  3060  00710E  D7FE               	bra	u2667
  3061  007110  2FD5               	decfsz	??_correcto& (0+255),f,b
  3062  007112  D7FC               	bra	u2667
  3063  007114  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3064  007116  D7FA               	bra	u2667
  3065  007118  F000               	nop	
  3066                           
  3067                           ;Practica6_03_03_19.c: 249:                 Lcd_Out(1,5,"Retiro");
  3068  00711A  0E05               	movlw	5
  3069  00711C  6E04               	movwf	Lcd_Out@x,c
  3070  00711E  0EB6               	movlw	low (STR_66+2)
  3071  007120  6E05               	movwf	Lcd_Out@buffer,c
  3072  007122  0E7F               	movlw	high (STR_66+2)
  3073  007124  6E06               	movwf	Lcd_Out@buffer+1,c
  3074  007126  0E01               	movlw	1
  3075  007128  EC53  F02C         	call	_Lcd_Out
  3076                           
  3077                           ;Practica6_03_03_19.c: 250:                 for(i=12;i>0;i--){
  3078  00712C  0E00               	movlw	0
  3079  00712E  0100               	movlb	0	; () banked
  3080  007130  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3081  007132  0E0C               	movlw	12
  3082  007134  6FDD               	movwf	correcto@i& (0+255),b
  3083  007136                     l3084:
  3084                           
  3085                           ; BSR set to: 0
  3086  007136  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  3087  007138  D01A               	goto	l3096
  3088  00713A  51DE               	movf	(correcto@i+1)& (0+255),w,b
  3089  00713C  E103               	bnz	l3088
  3090  00713E  05DD               	decf	correcto@i& (0+255),w,b
  3091  007140  A0D8               	btfss	status,0,c
  3092  007142  D015               	goto	l3096
  3093  007144                     l3088:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;Practica6_03_03_19.c: 251:                     Lcd_Cmd(24);
  3097  007144  0E18               	movlw	24
  3098  007146  EC2E  F02E         	call	_Lcd_Cmd
  3099                           
  3100                           ;Practica6_03_03_19.c: 252:                     _delay((unsigned long)((300)*(8000000/40
      +                          00.0)));
  3101  00714A  0E04               	movlw	4
  3102  00714C  0100               	movlb	0	; () banked
  3103  00714E  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3104  007150  0E0C               	movlw	12
  3105  007152  6FD5               	movwf	??_correcto& (0+255),b
  3106  007154  0E33               	movlw	51
  3107  007156                     u2677:
  3108  007156  2EE8               	decfsz	wreg,f,c
  3109  007158  D7FE               	bra	u2677
  3110  00715A  2FD5               	decfsz	??_correcto& (0+255),f,b
  3111  00715C  D7FC               	bra	u2677
  3112  00715E  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3113  007160  D7FA               	bra	u2677
  3114  007162  D000               	nop2	
  3115                           
  3116                           ;Practica6_03_03_19.c: 253:                 }
  3117  007164  0100               	movlb	0	; () banked
  3118  007166  07DD               	decf	correcto@i& (0+255),f,b
  3119  007168  A0D8               	btfss	status,0,c
  3120  00716A  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3121  00716C  D7E4               	goto	l3084
  3122  00716E                     l3096:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;Practica6_03_03_19.c: 254:                  Lcd_Cmd(1);
  3126  00716E  0E01               	movlw	1
  3127  007170  EC2E  F02E         	call	_Lcd_Cmd
  3128                           
  3129                           ;Practica6_03_03_19.c: 255:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3130  007174  0E02               	movlw	2
  3131  007176  0100               	movlb	0	; () banked
  3132  007178  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3133  00717A  0E04               	movlw	4
  3134  00717C  6FD5               	movwf	??_correcto& (0+255),b
  3135  00717E  0EBA               	movlw	186
  3136  007180                     u2687:
  3137  007180  2EE8               	decfsz	wreg,f,c
  3138  007182  D7FE               	bra	u2687
  3139  007184  2FD5               	decfsz	??_correcto& (0+255),f,b
  3140  007186  D7FC               	bra	u2687
  3141  007188  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3142  00718A  D7FA               	bra	u2687
  3143  00718C  F000               	nop	
  3144                           
  3145                           ;Practica6_03_03_19.c: 256:                 Lcd_Out(1,1,"Solo podra retirar maximo 9000 
      +                          pesos");
  3146  00718E  0E01               	movlw	1
  3147  007190  6E04               	movwf	Lcd_Out@x,c
  3148  007192  0E56               	movlw	low STR_31
  3149  007194  6E05               	movwf	Lcd_Out@buffer,c
  3150  007196  0E7D               	movlw	high STR_31
  3151  007198  6E06               	movwf	Lcd_Out@buffer+1,c
  3152  00719A  0E01               	movlw	1
  3153  00719C  EC53  F02C         	call	_Lcd_Out
  3154                           
  3155                           ;Practica6_03_03_19.c: 257:                 for(i=36;i>0;i--){
  3156  0071A0  0E00               	movlw	0
  3157  0071A2  0100               	movlb	0	; () banked
  3158  0071A4  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3159  0071A6  0E24               	movlw	36
  3160  0071A8  6FDD               	movwf	correcto@i& (0+255),b
  3161  0071AA                     l3104:
  3162                           
  3163                           ; BSR set to: 0
  3164  0071AA  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  3165  0071AC  D019               	goto	l3116
  3166  0071AE  51DE               	movf	(correcto@i+1)& (0+255),w,b
  3167  0071B0  E103               	bnz	l3108
  3168  0071B2  05DD               	decf	correcto@i& (0+255),w,b
  3169  0071B4  A0D8               	btfss	status,0,c
  3170  0071B6  D014               	goto	l3116
  3171  0071B8                     l3108:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;Practica6_03_03_19.c: 258:                     Lcd_Cmd(24);
  3175  0071B8  0E18               	movlw	24
  3176  0071BA  EC2E  F02E         	call	_Lcd_Cmd
  3177                           
  3178                           ;Practica6_03_03_19.c: 259:                     _delay((unsigned long)((200)*(8000000/40
      +                          00.0)));
  3179  0071BE  0E03               	movlw	3
  3180  0071C0  0100               	movlb	0	; () banked
  3181  0071C2  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3182  0071C4  0E08               	movlw	8
  3183  0071C6  6FD5               	movwf	??_correcto& (0+255),b
  3184  0071C8  0E77               	movlw	119
  3185  0071CA                     u2697:
  3186  0071CA  2EE8               	decfsz	wreg,f,c
  3187  0071CC  D7FE               	bra	u2697
  3188  0071CE  2FD5               	decfsz	??_correcto& (0+255),f,b
  3189  0071D0  D7FC               	bra	u2697
  3190  0071D2  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3191  0071D4  D7FA               	bra	u2697
  3192                           
  3193                           ;Practica6_03_03_19.c: 260:                 }
  3194  0071D6  0100               	movlb	0	; () banked
  3195  0071D8  07DD               	decf	correcto@i& (0+255),f,b
  3196  0071DA  A0D8               	btfss	status,0,c
  3197  0071DC  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3198  0071DE  D7E5               	goto	l3104
  3199  0071E0                     l3116:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;Practica6_03_03_19.c: 261:                 Lcd_Cmd(1);
  3203  0071E0  0E01               	movlw	1
  3204  0071E2  EC2E  F02E         	call	_Lcd_Cmd
  3205                           
  3206                           ;Practica6_03_03_19.c: 262:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3207  0071E6  0E02               	movlw	2
  3208  0071E8  0100               	movlb	0	; () banked
  3209  0071EA  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3210  0071EC  0E04               	movlw	4
  3211  0071EE  6FD5               	movwf	??_correcto& (0+255),b
  3212  0071F0  0EBA               	movlw	186
  3213  0071F2                     u2707:
  3214  0071F2  2EE8               	decfsz	wreg,f,c
  3215  0071F4  D7FE               	bra	u2707
  3216  0071F6  2FD5               	decfsz	??_correcto& (0+255),f,b
  3217  0071F8  D7FC               	bra	u2707
  3218  0071FA  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3219  0071FC  D7FA               	bra	u2707
  3220  0071FE  F000               	nop	
  3221                           
  3222                           ;Practica6_03_03_19.c: 263:                 Lcd_Out(1,1,"Presione * cuando termine");
  3223  007200  0E01               	movlw	1
  3224  007202  6E04               	movwf	Lcd_Out@x,c
  3225  007204  0E95               	movlw	low STR_32
  3226  007206  6E05               	movwf	Lcd_Out@buffer,c
  3227  007208  0E7D               	movlw	high STR_32
  3228  00720A  6E06               	movwf	Lcd_Out@buffer+1,c
  3229  00720C  0E01               	movlw	1
  3230  00720E  EC53  F02C         	call	_Lcd_Out
  3231                           
  3232                           ;Practica6_03_03_19.c: 264:                 for(i=26;i>0;i--){
  3233  007212  0E00               	movlw	0
  3234  007214  0100               	movlb	0	; () banked
  3235  007216  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3236  007218  0E1A               	movlw	26
  3237  00721A  6FDD               	movwf	correcto@i& (0+255),b
  3238  00721C                     l3124:
  3239                           
  3240                           ; BSR set to: 0
  3241  00721C  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  3242  00721E  D019               	goto	l3136
  3243  007220  51DE               	movf	(correcto@i+1)& (0+255),w,b
  3244  007222  E103               	bnz	l3128
  3245  007224  05DD               	decf	correcto@i& (0+255),w,b
  3246  007226  A0D8               	btfss	status,0,c
  3247  007228  D014               	goto	l3136
  3248  00722A                     l3128:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;Practica6_03_03_19.c: 265:                     Lcd_Cmd(24);
  3252  00722A  0E18               	movlw	24
  3253  00722C  EC2E  F02E         	call	_Lcd_Cmd
  3254                           
  3255                           ;Practica6_03_03_19.c: 266:                     _delay((unsigned long)((200)*(8000000/40
      +                          00.0)));
  3256  007230  0E03               	movlw	3
  3257  007232  0100               	movlb	0	; () banked
  3258  007234  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3259  007236  0E08               	movlw	8
  3260  007238  6FD5               	movwf	??_correcto& (0+255),b
  3261  00723A  0E77               	movlw	119
  3262  00723C                     u2717:
  3263  00723C  2EE8               	decfsz	wreg,f,c
  3264  00723E  D7FE               	bra	u2717
  3265  007240  2FD5               	decfsz	??_correcto& (0+255),f,b
  3266  007242  D7FC               	bra	u2717
  3267  007244  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3268  007246  D7FA               	bra	u2717
  3269                           
  3270                           ;Practica6_03_03_19.c: 267:                 }
  3271  007248  0100               	movlb	0	; () banked
  3272  00724A  07DD               	decf	correcto@i& (0+255),f,b
  3273  00724C  A0D8               	btfss	status,0,c
  3274  00724E  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3275  007250  D7E5               	goto	l3124
  3276  007252                     l3136:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;Practica6_03_03_19.c: 268:                 Lcd_Cmd(1);
  3280  007252  0E01               	movlw	1
  3281  007254  EC2E  F02E         	call	_Lcd_Cmd
  3282                           
  3283                           ;Practica6_03_03_19.c: 269:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3284  007258  0E02               	movlw	2
  3285  00725A  0100               	movlb	0	; () banked
  3286  00725C  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3287  00725E  0E04               	movlw	4
  3288  007260  6FD5               	movwf	??_correcto& (0+255),b
  3289  007262  0EBA               	movlw	186
  3290  007264                     u2727:
  3291  007264  2EE8               	decfsz	wreg,f,c
  3292  007266  D7FE               	bra	u2727
  3293  007268  2FD5               	decfsz	??_correcto& (0+255),f,b
  3294  00726A  D7FC               	bra	u2727
  3295  00726C  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3296  00726E  D7FA               	bra	u2727
  3297  007270  F000               	nop	
  3298                           
  3299                           ;Practica6_03_03_19.c: 270:                 sum1=0;
  3300  007272  0E00               	movlw	0
  3301  007274  0100               	movlb	0	; () banked
  3302  007276  6F64               	movwf	_sum1& (0+255),b
  3303  007278  0E00               	movlw	0
  3304  00727A  6F65               	movwf	(_sum1+1)& (0+255),b
  3305  00727C  0E00               	movlw	0
  3306  00727E  6F66               	movwf	(_sum1+2)& (0+255),b
  3307  007280  0E00               	movlw	0
  3308  007282  6F67               	movwf	(_sum1+3)& (0+255),b
  3309                           
  3310                           ;Practica6_03_03_19.c: 271:                 while(valor!='*'){
  3311  007284  D0F5               	goto	l3188
  3312  007286                     l3142:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;Practica6_03_03_19.c: 272:                     teclado();
  3316  007286  EC30  F031         	call	_teclado	;wreg free
  3317                           
  3318                           ;Practica6_03_03_19.c: 273:                     Lcd_Out(1, 1,"Ingrese su");
  3319  00728A  0E01               	movlw	1
  3320  00728C  6E04               	movwf	Lcd_Out@x,c
  3321  00728E  0E8C               	movlw	low STR_22
  3322  007290  6E05               	movwf	Lcd_Out@buffer,c
  3323  007292  0E7F               	movlw	high STR_22
  3324  007294  6E06               	movwf	Lcd_Out@buffer+1,c
  3325  007296  0E01               	movlw	1
  3326  007298  EC53  F02C         	call	_Lcd_Out
  3327                           
  3328                           ;Practica6_03_03_19.c: 274:                     Lcd_Out(2,1,"Retiro:");
  3329  00729C  0E01               	movlw	1
  3330  00729E  6E04               	movwf	Lcd_Out@x,c
  3331  0072A0  0EBD               	movlw	low STR_34
  3332  0072A2  6E05               	movwf	Lcd_Out@buffer,c
  3333  0072A4  0E7F               	movlw	high STR_34
  3334  0072A6  6E06               	movwf	Lcd_Out@buffer+1,c
  3335  0072A8  0E02               	movlw	2
  3336  0072AA  EC53  F02C         	call	_Lcd_Out
  3337                           
  3338                           ;Practica6_03_03_19.c: 275:                     if ((valor >= '0')&&(valor <= '9')){
  3339  0072AE  0100               	movlb	0	; () banked
  3340  0072B0  5163               	movf	(_valor+3)& (0+255),w,b
  3341  0072B2  1162               	iorwf	(_valor+2)& (0+255),w,b
  3342  0072B4  1161               	iorwf	(_valor+1)& (0+255),w,b
  3343  0072B6  E104               	bnz	u1980
  3344  0072B8  0E30               	movlw	48
  3345  0072BA  5D60               	subwf	_valor& (0+255),w,b
  3346  0072BC  A0D8               	btfss	status,0,c
  3347  0072BE  D04E               	goto	l3158
  3348  0072C0                     u1980:
  3349                           
  3350                           ; BSR set to: 0
  3351  0072C0  5163               	movf	(_valor+3)& (0+255),w,b
  3352  0072C2  1162               	iorwf	(_valor+2)& (0+255),w,b
  3353  0072C4  1161               	iorwf	(_valor+1)& (0+255),w,b
  3354  0072C6  E14A               	bnz	l3158
  3355  0072C8  0E3A               	movlw	58
  3356  0072CA  5D60               	subwf	_valor& (0+255),w,b
  3357  0072CC  B0D8               	btfsc	status,0,c
  3358  0072CE  D046               	goto	l3158
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;Practica6_03_03_19.c: 276:                         sum1 = sum1*10 + (valor - 48);
  3362  0072D0  C064  F001         	movff	_sum1,___lmul@multiplier
  3363  0072D4  C065  F002         	movff	_sum1+1,___lmul@multiplier+1
  3364  0072D8  C066  F003         	movff	_sum1+2,___lmul@multiplier+2
  3365  0072DC  C067  F004         	movff	_sum1+3,___lmul@multiplier+3
  3366  0072E0  0E0A               	movlw	10
  3367  0072E2  6E05               	movwf	___lmul@multiplicand,c
  3368  0072E4  0E00               	movlw	0
  3369  0072E6  6E06               	movwf	___lmul@multiplicand+1,c
  3370  0072E8  0E00               	movlw	0
  3371  0072EA  6E07               	movwf	___lmul@multiplicand+2,c
  3372  0072EC  0E00               	movlw	0
  3373  0072EE  6E08               	movwf	___lmul@multiplicand+3,c
  3374  0072F0  ECC5  F02B         	call	___lmul	;wreg free
  3375  0072F4  0100               	movlb	0	; () banked
  3376  0072F6  5160               	movf	_valor& (0+255),w,b
  3377  0072F8  2401               	addwf	?___lmul,w,c
  3378  0072FA  6FD5               	movwf	??_correcto& (0+255),b
  3379  0072FC  5161               	movf	(_valor+1)& (0+255),w,b
  3380  0072FE  2002               	addwfc	?___lmul+1,w,c
  3381  007300  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3382  007302  5162               	movf	(_valor+2)& (0+255),w,b
  3383  007304  2003               	addwfc	?___lmul+2,w,c
  3384  007306  6FD7               	movwf	(??_correcto+2)& (0+255),b
  3385  007308  5163               	movf	(_valor+3)& (0+255),w,b
  3386  00730A  2004               	addwfc	?___lmul+3,w,c
  3387  00730C  6FD8               	movwf	(??_correcto+3)& (0+255),b
  3388  00730E  0ED0               	movlw	208
  3389  007310  25D5               	addwf	??_correcto& (0+255),w,b
  3390  007312  6F64               	movwf	_sum1& (0+255),b
  3391  007314  0EFF               	movlw	255
  3392  007316  21D6               	addwfc	(??_correcto+1)& (0+255),w,b
  3393  007318  6F65               	movwf	(_sum1+1)& (0+255),b
  3394  00731A  0EFF               	movlw	255
  3395  00731C  21D7               	addwfc	(??_correcto+2)& (0+255),w,b
  3396  00731E  6F66               	movwf	(_sum1+2)& (0+255),b
  3397  007320  0EFF               	movlw	255
  3398  007322  21D8               	addwfc	(??_correcto+3)& (0+255),w,b
  3399  007324  6F67               	movwf	(_sum1+3)& (0+255),b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;Practica6_03_03_19.c: 277:                         sprintf(palabra1,"$%d",sum1);
  3403  007326  0EA9               	movlw	low _palabra1
  3404  007328  6E58               	movwf	sprintf@s,c
  3405  00732A  0E00               	movlw	high _palabra1
  3406  00732C  6E59               	movwf	sprintf@s+1,c
  3407  00732E  0EDE               	movlw	low (STR_18+2)
  3408  007330  6E5A               	movwf	sprintf@fmt,c
  3409  007332  0E7F               	movlw	high (STR_18+2)
  3410  007334  6E5B               	movwf	sprintf@fmt+1,c
  3411  007336  C064  F05C         	movff	_sum1,?_sprintf+4
  3412  00733A  C065  F05D         	movff	_sum1+1,?_sprintf+5
  3413  00733E  C066  F05E         	movff	_sum1+2,?_sprintf+6
  3414  007342  C067  F05F         	movff	_sum1+3,?_sprintf+7
  3415  007346  EC9C  F02B         	call	_sprintf	;wreg free
  3416                           
  3417                           ;Practica6_03_03_19.c: 278:                         Lcd_Out2(2,10,palabra1);
  3418  00734A  0E0A               	movlw	10
  3419  00734C  6E04               	movwf	Lcd_Out2@x,c
  3420  00734E  0EA9               	movlw	low _palabra1
  3421  007350  6E05               	movwf	Lcd_Out2@buffer,c
  3422  007352  0E00               	movlw	high _palabra1
  3423  007354  6E06               	movwf	Lcd_Out2@buffer+1,c
  3424  007356  0E02               	movlw	2
  3425  007358  EC1B  F02C         	call	_Lcd_Out2
  3426  00735C                     l3158:
  3427                           
  3428                           ;Practica6_03_03_19.c: 280:                     deposito=sum1;
  3429  00735C  C064  F0D9         	movff	_sum1,correcto@deposito
  3430  007360  C065  F0DA         	movff	_sum1+1,correcto@deposito+1
  3431  007364  C066  F0DB         	movff	_sum1+2,correcto@deposito+2
  3432  007368  C067  F0DC         	movff	_sum1+3,correcto@deposito+3
  3433                           
  3434                           ;Practica6_03_03_19.c: 281:                     if(deposito>9000){
  3435  00736C  0100               	movlb	0	; () banked
  3436  00736E  BFDC               	btfsc	(correcto@deposito+3)& (0+255),7,b
  3437  007370  D07F               	goto	l3188
  3438  007372  51DC               	movf	(correcto@deposito+3)& (0+255),w,b
  3439  007374  11DB               	iorwf	(correcto@deposito+2)& (0+255),w,b
  3440  007376  E106               	bnz	u2000
  3441  007378  0E29               	movlw	41
  3442  00737A  5DD9               	subwf	correcto@deposito& (0+255),w,b
  3443  00737C  0E23               	movlw	35
  3444  00737E  59DA               	subwfb	(correcto@deposito+1)& (0+255),w,b
  3445  007380  A0D8               	btfss	status,0,c
  3446  007382  D076               	goto	l3188
  3447  007384                     u2000:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;Practica6_03_03_19.c: 282:                         sum1=0;
  3451  007384  0E00               	movlw	0
  3452  007386  6F64               	movwf	_sum1& (0+255),b
  3453  007388  0E00               	movlw	0
  3454  00738A  6F65               	movwf	(_sum1+1)& (0+255),b
  3455  00738C  0E00               	movlw	0
  3456  00738E  6F66               	movwf	(_sum1+2)& (0+255),b
  3457  007390  0E00               	movlw	0
  3458  007392  6F67               	movwf	(_sum1+3)& (0+255),b
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;Practica6_03_03_19.c: 283:                         Lcd_Cmd(1);
  3462  007394  0E01               	movlw	1
  3463  007396  EC2E  F02E         	call	_Lcd_Cmd
  3464                           
  3465                           ;Practica6_03_03_19.c: 284:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  3466  00739A  0E02               	movlw	2
  3467  00739C  0100               	movlb	0	; () banked
  3468  00739E  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3469  0073A0  0E04               	movlw	4
  3470  0073A2  6FD5               	movwf	??_correcto& (0+255),b
  3471  0073A4  0EBA               	movlw	186
  3472  0073A6                     u2737:
  3473  0073A6  2EE8               	decfsz	wreg,f,c
  3474  0073A8  D7FE               	bra	u2737
  3475  0073AA  2FD5               	decfsz	??_correcto& (0+255),f,b
  3476  0073AC  D7FC               	bra	u2737
  3477  0073AE  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3478  0073B0  D7FA               	bra	u2737
  3479  0073B2  F000               	nop	
  3480                           
  3481                           ;Practica6_03_03_19.c: 285:                         Lcd_Out(1,1,"Retiro maximo");
  3482  0073B4  0E01               	movlw	1
  3483  0073B6  6E04               	movwf	Lcd_Out@x,c
  3484  0073B8  0EF7               	movlw	low STR_36
  3485  0073BA  6E05               	movwf	Lcd_Out@buffer,c
  3486  0073BC  0E7E               	movlw	high STR_36
  3487  0073BE  6E06               	movwf	Lcd_Out@buffer+1,c
  3488  0073C0  0E01               	movlw	1
  3489  0073C2  EC53  F02C         	call	_Lcd_Out
  3490                           
  3491                           ;Practica6_03_03_19.c: 286:                         Lcd_Out(2,1,"alcanzado");
  3492  0073C6  0E01               	movlw	1
  3493  0073C8  6E04               	movwf	Lcd_Out@x,c
  3494  0073CA  0EA1               	movlw	low STR_26
  3495  0073CC  6E05               	movwf	Lcd_Out@buffer,c
  3496  0073CE  0E7F               	movlw	high STR_26
  3497  0073D0  6E06               	movwf	Lcd_Out@buffer+1,c
  3498  0073D2  0E02               	movlw	2
  3499  0073D4  EC53  F02C         	call	_Lcd_Out
  3500                           
  3501                           ;Practica6_03_03_19.c: 287:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  3502  0073D8  0E15               	movlw	21
  3503  0073DA  0100               	movlb	0	; () banked
  3504  0073DC  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3505  0073DE  0E4B               	movlw	75
  3506  0073E0  6FD5               	movwf	??_correcto& (0+255),b
  3507  0073E2  0EBE               	movlw	190
  3508  0073E4                     u2747:
  3509  0073E4  2EE8               	decfsz	wreg,f,c
  3510  0073E6  D7FE               	bra	u2747
  3511  0073E8  2FD5               	decfsz	??_correcto& (0+255),f,b
  3512  0073EA  D7FC               	bra	u2747
  3513  0073EC  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3514  0073EE  D7FA               	bra	u2747
  3515  0073F0  F000               	nop	
  3516                           
  3517                           ;Practica6_03_03_19.c: 288:                         Lcd_Cmd(1);
  3518  0073F2  0E01               	movlw	1
  3519  0073F4  EC2E  F02E         	call	_Lcd_Cmd
  3520                           
  3521                           ;Practica6_03_03_19.c: 289:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  3522  0073F8  0E02               	movlw	2
  3523  0073FA  0100               	movlb	0	; () banked
  3524  0073FC  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3525  0073FE  0E04               	movlw	4
  3526  007400  6FD5               	movwf	??_correcto& (0+255),b
  3527  007402  0EBA               	movlw	186
  3528  007404                     u2757:
  3529  007404  2EE8               	decfsz	wreg,f,c
  3530  007406  D7FE               	bra	u2757
  3531  007408  2FD5               	decfsz	??_correcto& (0+255),f,b
  3532  00740A  D7FC               	bra	u2757
  3533  00740C  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3534  00740E  D7FA               	bra	u2757
  3535  007410  F000               	nop	
  3536                           
  3537                           ;Practica6_03_03_19.c: 290:                         Lcd_Out(1,1,"Intentalo de ");
  3538  007412  0E01               	movlw	1
  3539  007414  6E04               	movwf	Lcd_Out@x,c
  3540  007416  0EBF               	movlw	low STR_27
  3541  007418  6E05               	movwf	Lcd_Out@buffer,c
  3542  00741A  0E7E               	movlw	high STR_27
  3543  00741C  6E06               	movwf	Lcd_Out@buffer+1,c
  3544  00741E  0E01               	movlw	1
  3545  007420  EC53  F02C         	call	_Lcd_Out
  3546                           
  3547                           ;Practica6_03_03_19.c: 291:                         Lcd_Out(2,1,"nuevo humano");
  3548  007424  0E01               	movlw	1
  3549  007426  6E04               	movwf	Lcd_Out@x,c
  3550  007428  0E39               	movlw	low STR_28
  3551  00742A  6E05               	movwf	Lcd_Out@buffer,c
  3552  00742C  0E7F               	movlw	high STR_28
  3553  00742E  6E06               	movwf	Lcd_Out@buffer+1,c
  3554  007430  0E02               	movlw	2
  3555  007432  EC53  F02C         	call	_Lcd_Out
  3556                           
  3557                           ;Practica6_03_03_19.c: 292:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  3558  007436  0E15               	movlw	21
  3559  007438  0100               	movlb	0	; () banked
  3560  00743A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3561  00743C  0E4B               	movlw	75
  3562  00743E  6FD5               	movwf	??_correcto& (0+255),b
  3563  007440  0EBE               	movlw	190
  3564  007442                     u2767:
  3565  007442  2EE8               	decfsz	wreg,f,c
  3566  007444  D7FE               	bra	u2767
  3567  007446  2FD5               	decfsz	??_correcto& (0+255),f,b
  3568  007448  D7FC               	bra	u2767
  3569  00744A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3570  00744C  D7FA               	bra	u2767
  3571  00744E  F000               	nop	
  3572                           
  3573                           ;Practica6_03_03_19.c: 293:                         Lcd_Cmd(1);
  3574  007450  0E01               	movlw	1
  3575  007452  EC2E  F02E         	call	_Lcd_Cmd
  3576                           
  3577                           ;Practica6_03_03_19.c: 294:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  3578  007456  0E02               	movlw	2
  3579  007458  0100               	movlb	0	; () banked
  3580  00745A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3581  00745C  0E04               	movlw	4
  3582  00745E  6FD5               	movwf	??_correcto& (0+255),b
  3583  007460  0EBA               	movlw	186
  3584  007462                     u2777:
  3585  007462  2EE8               	decfsz	wreg,f,c
  3586  007464  D7FE               	bra	u2777
  3587  007466  2FD5               	decfsz	??_correcto& (0+255),f,b
  3588  007468  D7FC               	bra	u2777
  3589  00746A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3590  00746C  D7FA               	bra	u2777
  3591  00746E  F000               	nop	
  3592  007470                     l3188:
  3593                           
  3594                           ;Practica6_03_03_19.c: 271:                 while(valor!='*'){
  3595  007470  0E2A               	movlw	42
  3596  007472  0100               	movlb	0	; () banked
  3597  007474  1960               	xorwf	_valor& (0+255),w,b
  3598  007476  1161               	iorwf	(_valor+1)& (0+255),w,b
  3599  007478  1162               	iorwf	(_valor+2)& (0+255),w,b
  3600  00747A  1163               	iorwf	(_valor+3)& (0+255),w,b
  3601  00747C  A4D8               	btfss	status,2,c
  3602  00747E  D703               	goto	l3142
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;Practica6_03_03_19.c: 297:                 Lcd_Cmd(1);
  3606  007480  0E01               	movlw	1
  3607  007482  EC2E  F02E         	call	_Lcd_Cmd
  3608                           
  3609                           ;Practica6_03_03_19.c: 298:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3610  007486  0E02               	movlw	2
  3611  007488  0100               	movlb	0	; () banked
  3612  00748A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3613  00748C  0E04               	movlw	4
  3614  00748E  6FD5               	movwf	??_correcto& (0+255),b
  3615  007490  0EBA               	movlw	186
  3616  007492                     u2787:
  3617  007492  2EE8               	decfsz	wreg,f,c
  3618  007494  D7FE               	bra	u2787
  3619  007496  2FD5               	decfsz	??_correcto& (0+255),f,b
  3620  007498  D7FC               	bra	u2787
  3621  00749A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3622  00749C  D7FA               	bra	u2787
  3623  00749E  F000               	nop	
  3624                           
  3625                           ;Practica6_03_03_19.c: 299:                 valor=0;
  3626  0074A0  0E00               	movlw	0
  3627  0074A2  0100               	movlb	0	; () banked
  3628  0074A4  6F60               	movwf	_valor& (0+255),b
  3629  0074A6  0E00               	movlw	0
  3630  0074A8  6F61               	movwf	(_valor+1)& (0+255),b
  3631  0074AA  0E00               	movlw	0
  3632  0074AC  6F62               	movwf	(_valor+2)& (0+255),b
  3633  0074AE  0E00               	movlw	0
  3634  0074B0  6F63               	movwf	(_valor+3)& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;Practica6_03_03_19.c: 301:                 if(deposito>saldo){
  3638  0074B2  51D9               	movf	correcto@deposito& (0+255),w,b
  3639  0074B4  5DE7               	subwf	_saldo& (0+255),w,b
  3640  0074B6  51DA               	movf	(correcto@deposito+1)& (0+255),w,b
  3641  0074B8  59E8               	subwfb	(_saldo+1)& (0+255),w,b
  3642  0074BA  51DB               	movf	(correcto@deposito+2)& (0+255),w,b
  3643  0074BC  59E9               	subwfb	(_saldo+2)& (0+255),w,b
  3644  0074BE  51EA               	movf	(_saldo+3)& (0+255),w,b
  3645  0074C0  0A80               	xorlw	128
  3646  0074C2  6FD5               	movwf	??_correcto& (0+255),b
  3647  0074C4  51DC               	movf	(correcto@deposito+3)& (0+255),w,b
  3648  0074C6  0A80               	xorlw	128
  3649  0074C8  59D5               	subwfb	??_correcto& (0+255),w,b
  3650  0074CA  B0D8               	btfsc	status,0,c
  3651  0074CC  D03E               	goto	l3222
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;Practica6_03_03_19.c: 302:                     for(i=18;i<0;i--){
  3655  0074CE  0E00               	movlw	0
  3656  0074D0  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3657  0074D2  0E12               	movlw	18
  3658  0074D4  6FDD               	movwf	correcto@i& (0+255),b
  3659  0074D6                     l3200:
  3660                           
  3661                           ; BSR set to: 0
  3662  0074D6  AFDE               	btfss	(correcto@i+1)& (0+255),7,b
  3663  0074D8  D01A               	goto	l3212
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;Practica6_03_03_19.c: 303:                         Lcd_Out(1,1,"Saldo insuficiente");
  3667  0074DA  0E01               	movlw	1
  3668  0074DC  6E04               	movwf	Lcd_Out@x,c
  3669  0074DE  0ED9               	movlw	low STR_40
  3670  0074E0  6E05               	movwf	Lcd_Out@buffer,c
  3671  0074E2  0E7D               	movlw	high STR_40
  3672  0074E4  6E06               	movwf	Lcd_Out@buffer+1,c
  3673  0074E6  0E01               	movlw	1
  3674  0074E8  EC53  F02C         	call	_Lcd_Out
  3675                           
  3676                           ;Practica6_03_03_19.c: 304:                         _delay((unsigned long)((200)*(800000
      +                          0/4000.0)));
  3677  0074EC  0E03               	movlw	3
  3678  0074EE  0100               	movlb	0	; () banked
  3679  0074F0  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3680  0074F2  0E08               	movlw	8
  3681  0074F4  6FD5               	movwf	??_correcto& (0+255),b
  3682  0074F6  0E77               	movlw	119
  3683  0074F8                     u2797:
  3684  0074F8  2EE8               	decfsz	wreg,f,c
  3685  0074FA  D7FE               	bra	u2797
  3686  0074FC  2FD5               	decfsz	??_correcto& (0+255),f,b
  3687  0074FE  D7FC               	bra	u2797
  3688  007500  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3689  007502  D7FA               	bra	u2797
  3690                           
  3691                           ;Practica6_03_03_19.c: 305:                     }
  3692  007504  0100               	movlb	0	; () banked
  3693  007506  07DD               	decf	correcto@i& (0+255),f,b
  3694  007508  A0D8               	btfss	status,0,c
  3695  00750A  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3696  00750C  D7E4               	goto	l3200
  3697  00750E                     l3212:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;Practica6_03_03_19.c: 306:                     Lcd_Out(2,4,"Pobre XD");
  3701  00750E  0E04               	movlw	4
  3702  007510  6E04               	movwf	Lcd_Out@x,c
  3703  007512  0EAB               	movlw	low STR_41
  3704  007514  6E05               	movwf	Lcd_Out@buffer,c
  3705  007516  0E7F               	movlw	high STR_41
  3706  007518  6E06               	movwf	Lcd_Out@buffer+1,c
  3707  00751A  0E02               	movlw	2
  3708  00751C  EC53  F02C         	call	_Lcd_Out
  3709                           
  3710                           ;Practica6_03_03_19.c: 307:                     Lcd_Cmd(1);
  3711  007520  0E01               	movlw	1
  3712  007522  EC2E  F02E         	call	_Lcd_Cmd
  3713                           
  3714                           ;Practica6_03_03_19.c: 308:                     _delay((unsigned long)((100)*(8000000/40
      +                          00.0)));
  3715  007526  0E02               	movlw	2
  3716  007528  0100               	movlb	0	; () banked
  3717  00752A  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3718  00752C  0E04               	movlw	4
  3719  00752E  6FD5               	movwf	??_correcto& (0+255),b
  3720  007530  0EBA               	movlw	186
  3721  007532                     u2807:
  3722  007532  2EE8               	decfsz	wreg,f,c
  3723  007534  D7FE               	bra	u2807
  3724  007536  2FD5               	decfsz	??_correcto& (0+255),f,b
  3725  007538  D7FC               	bra	u2807
  3726  00753A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3727  00753C  D7FA               	bra	u2807
  3728  00753E  F000               	nop	
  3729                           
  3730                           ;Practica6_03_03_19.c: 309:                     letrero();
  3731  007540  EC88  F030         	call	_letrero	;wreg free
  3732                           
  3733                           ;Practica6_03_03_19.c: 310:                     teclado();
  3734  007544  EC30  F031         	call	_teclado	;wreg free
  3735                           
  3736                           ;Practica6_03_03_19.c: 311:                 }else{
  3737  007548  D032               	goto	l3232
  3738  00754A                     l3222:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;Practica6_03_03_19.c: 312:                     saldo=saldo-deposito;
  3742  00754A  51D9               	movf	correcto@deposito& (0+255),w,b
  3743  00754C  5DE7               	subwf	_saldo& (0+255),w,b
  3744  00754E  6FE7               	movwf	_saldo& (0+255),b
  3745  007550  51DA               	movf	(correcto@deposito+1)& (0+255),w,b
  3746  007552  59E8               	subwfb	(_saldo+1)& (0+255),w,b
  3747  007554  6FE8               	movwf	(_saldo+1)& (0+255),b
  3748  007556  51DB               	movf	(correcto@deposito+2)& (0+255),w,b
  3749  007558  59E9               	subwfb	(_saldo+2)& (0+255),w,b
  3750  00755A  6FE9               	movwf	(_saldo+2)& (0+255),b
  3751  00755C  51DC               	movf	(correcto@deposito+3)& (0+255),w,b
  3752  00755E  59EA               	subwfb	(_saldo+3)& (0+255),w,b
  3753  007560  6FEA               	movwf	(_saldo+3)& (0+255),b
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;Practica6_03_03_19.c: 313:                 Lcd_Out(1,1,"Saldo retirado");
  3757  007562  0E01               	movlw	1
  3758  007564  6E04               	movwf	Lcd_Out@x,c
  3759  007566  0E92               	movlw	low STR_42
  3760  007568  6E05               	movwf	Lcd_Out@buffer,c
  3761  00756A  0E7E               	movlw	high STR_42
  3762  00756C  6E06               	movwf	Lcd_Out@buffer+1,c
  3763  00756E  0E01               	movlw	1
  3764  007570  EC53  F02C         	call	_Lcd_Out
  3765                           
  3766                           ;Practica6_03_03_19.c: 314:                 _delay((unsigned long)((1000)*(8000000/4000.
      +                          0)));
  3767  007574  0E0B               	movlw	11
  3768  007576  0100               	movlb	0	; () banked
  3769  007578  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3770  00757A  0E26               	movlw	38
  3771  00757C  6FD5               	movwf	??_correcto& (0+255),b
  3772  00757E  0E5D               	movlw	93
  3773  007580                     u2817:
  3774  007580  2EE8               	decfsz	wreg,f,c
  3775  007582  D7FE               	bra	u2817
  3776  007584  2FD5               	decfsz	??_correcto& (0+255),f,b
  3777  007586  D7FC               	bra	u2817
  3778  007588  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3779  00758A  D7FA               	bra	u2817
  3780  00758C  D000               	nop2	
  3781                           
  3782                           ;Practica6_03_03_19.c: 315:                 Lcd_Cmd(1);
  3783  00758E  0E01               	movlw	1
  3784  007590  EC2E  F02E         	call	_Lcd_Cmd
  3785                           
  3786                           ;Practica6_03_03_19.c: 316:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3787  007594  0E02               	movlw	2
  3788  007596  0100               	movlb	0	; () banked
  3789  007598  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3790  00759A  0E04               	movlw	4
  3791  00759C  6FD5               	movwf	??_correcto& (0+255),b
  3792  00759E  0EBA               	movlw	186
  3793  0075A0                     u2827:
  3794  0075A0  2EE8               	decfsz	wreg,f,c
  3795  0075A2  D7FE               	bra	u2827
  3796  0075A4  2FD5               	decfsz	??_correcto& (0+255),f,b
  3797  0075A6  D7FC               	bra	u2827
  3798  0075A8  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3799  0075AA  D7FA               	bra	u2827
  3800  0075AC  F000               	nop	
  3801  0075AE                     l3232:
  3802                           
  3803                           ;Practica6_03_03_19.c: 318:                 Lcd_Cmd(1);
  3804  0075AE  0E01               	movlw	1
  3805  0075B0  EC2E  F02E         	call	_Lcd_Cmd
  3806  0075B4  EF58  F036         	goto	l2932
  3807  0075B8                     l3240:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;Practica6_03_03_19.c: 325:                 Lcd_Cmd(1);
  3811  0075B8  0E01               	movlw	1
  3812  0075BA  EC2E  F02E         	call	_Lcd_Cmd
  3813                           
  3814                           ;Practica6_03_03_19.c: 326:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3815  0075BE  0E02               	movlw	2
  3816  0075C0  0100               	movlb	0	; () banked
  3817  0075C2  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3818  0075C4  0E04               	movlw	4
  3819  0075C6  6FD5               	movwf	??_correcto& (0+255),b
  3820  0075C8  0EBA               	movlw	186
  3821  0075CA                     u2837:
  3822  0075CA  2EE8               	decfsz	wreg,f,c
  3823  0075CC  D7FE               	bra	u2837
  3824  0075CE  2FD5               	decfsz	??_correcto& (0+255),f,b
  3825  0075D0  D7FC               	bra	u2837
  3826  0075D2  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3827  0075D4  D7FA               	bra	u2837
  3828  0075D6  F000               	nop	
  3829                           
  3830                           ;Practica6_03_03_19.c: 327:                 Lcd_Out(1,3,"Cambio de NIP");
  3831  0075D8  0E03               	movlw	3
  3832  0075DA  6E04               	movwf	Lcd_Out@x,c
  3833  0075DC  0EDB               	movlw	low STR_43
  3834  0075DE  6E05               	movwf	Lcd_Out@buffer,c
  3835  0075E0  0E7E               	movlw	high STR_43
  3836  0075E2  6E06               	movwf	Lcd_Out@buffer+1,c
  3837  0075E4  0E01               	movlw	1
  3838  0075E6  EC53  F02C         	call	_Lcd_Out
  3839                           
  3840                           ;Practica6_03_03_19.c: 328:                 for(i=17;i>0;i--){
  3841  0075EA  0E00               	movlw	0
  3842  0075EC  0100               	movlb	0	; () banked
  3843  0075EE  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3844  0075F0  0E11               	movlw	17
  3845  0075F2  6FDD               	movwf	correcto@i& (0+255),b
  3846  0075F4                     l3248:
  3847                           
  3848                           ; BSR set to: 0
  3849  0075F4  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  3850  0075F6  D01A               	goto	l3260
  3851  0075F8  51DE               	movf	(correcto@i+1)& (0+255),w,b
  3852  0075FA  E103               	bnz	l3252
  3853  0075FC  05DD               	decf	correcto@i& (0+255),w,b
  3854  0075FE  A0D8               	btfss	status,0,c
  3855  007600  D015               	goto	l3260
  3856  007602                     l3252:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;Practica6_03_03_19.c: 329:                     Lcd_Cmd(24);
  3860  007602  0E18               	movlw	24
  3861  007604  EC2E  F02E         	call	_Lcd_Cmd
  3862                           
  3863                           ;Practica6_03_03_19.c: 330:                     _delay((unsigned long)((300)*(8000000/40
      +                          00.0)));
  3864  007608  0E04               	movlw	4
  3865  00760A  0100               	movlb	0	; () banked
  3866  00760C  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3867  00760E  0E0C               	movlw	12
  3868  007610  6FD5               	movwf	??_correcto& (0+255),b
  3869  007612  0E33               	movlw	51
  3870  007614                     u2847:
  3871  007614  2EE8               	decfsz	wreg,f,c
  3872  007616  D7FE               	bra	u2847
  3873  007618  2FD5               	decfsz	??_correcto& (0+255),f,b
  3874  00761A  D7FC               	bra	u2847
  3875  00761C  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3876  00761E  D7FA               	bra	u2847
  3877  007620  D000               	nop2	
  3878                           
  3879                           ;Practica6_03_03_19.c: 331:                 }
  3880  007622  0100               	movlb	0	; () banked
  3881  007624  07DD               	decf	correcto@i& (0+255),f,b
  3882  007626  A0D8               	btfss	status,0,c
  3883  007628  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3884  00762A  D7E4               	goto	l3248
  3885  00762C                     l3260:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;Practica6_03_03_19.c: 332:                 Lcd_Cmd(1);
  3889  00762C  0E01               	movlw	1
  3890  00762E  EC2E  F02E         	call	_Lcd_Cmd
  3891                           
  3892                           ;Practica6_03_03_19.c: 333:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3893  007632  0E02               	movlw	2
  3894  007634  0100               	movlb	0	; () banked
  3895  007636  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3896  007638  0E04               	movlw	4
  3897  00763A  6FD5               	movwf	??_correcto& (0+255),b
  3898  00763C  0EBA               	movlw	186
  3899  00763E                     u2857:
  3900  00763E  2EE8               	decfsz	wreg,f,c
  3901  007640  D7FE               	bra	u2857
  3902  007642  2FD5               	decfsz	??_correcto& (0+255),f,b
  3903  007644  D7FC               	bra	u2857
  3904  007646  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3905  007648  D7FA               	bra	u2857
  3906  00764A  F000               	nop	
  3907                           
  3908                           ;Practica6_03_03_19.c: 334:                 Lcd_Out(1,1,"Al fin, ya era tiempo");
  3909  00764C  0E01               	movlw	1
  3910  00764E  6E04               	movwf	Lcd_Out@x,c
  3911  007650  0EAF               	movlw	low STR_44
  3912  007652  6E05               	movwf	Lcd_Out@buffer,c
  3913  007654  0E7D               	movlw	high STR_44
  3914  007656  6E06               	movwf	Lcd_Out@buffer+1,c
  3915  007658  0E01               	movlw	1
  3916  00765A  EC53  F02C         	call	_Lcd_Out
  3917                           
  3918                           ;Practica6_03_03_19.c: 335:                 Lcd_Out(2,1,"Ya se habia tardado");
  3919  00765E  0E01               	movlw	1
  3920  007660  6E04               	movwf	Lcd_Out@x,c
  3921  007662  0EC5               	movlw	low STR_45
  3922  007664  6E05               	movwf	Lcd_Out@buffer,c
  3923  007666  0E7D               	movlw	high STR_45
  3924  007668  6E06               	movwf	Lcd_Out@buffer+1,c
  3925  00766A  0E02               	movlw	2
  3926  00766C  EC53  F02C         	call	_Lcd_Out
  3927                           
  3928                           ;Practica6_03_03_19.c: 336:                 for(i=22;i>0;i--){
  3929  007670  0E00               	movlw	0
  3930  007672  0100               	movlb	0	; () banked
  3931  007674  6FDE               	movwf	(correcto@i+1)& (0+255),b
  3932  007676  0E16               	movlw	22
  3933  007678  6FDD               	movwf	correcto@i& (0+255),b
  3934  00767A                     l3270:
  3935                           
  3936                           ; BSR set to: 0
  3937  00767A  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  3938  00767C  D01A               	goto	l3282
  3939  00767E  51DE               	movf	(correcto@i+1)& (0+255),w,b
  3940  007680  E103               	bnz	l3274
  3941  007682  05DD               	decf	correcto@i& (0+255),w,b
  3942  007684  A0D8               	btfss	status,0,c
  3943  007686  D015               	goto	l3282
  3944  007688                     l3274:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;Practica6_03_03_19.c: 337:                     Lcd_Cmd(24);
  3948  007688  0E18               	movlw	24
  3949  00768A  EC2E  F02E         	call	_Lcd_Cmd
  3950                           
  3951                           ;Practica6_03_03_19.c: 338:                     _delay((unsigned long)((350)*(8000000/40
      +                          00.0)));
  3952  00768E  0E04               	movlw	4
  3953  007690  0100               	movlb	0	; () banked
  3954  007692  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3955  007694  0E8E               	movlw	142
  3956  007696  6FD5               	movwf	??_correcto& (0+255),b
  3957  007698  0E12               	movlw	18
  3958  00769A                     u2867:
  3959  00769A  2EE8               	decfsz	wreg,f,c
  3960  00769C  D7FE               	bra	u2867
  3961  00769E  2FD5               	decfsz	??_correcto& (0+255),f,b
  3962  0076A0  D7FC               	bra	u2867
  3963  0076A2  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3964  0076A4  D7FA               	bra	u2867
  3965  0076A6  F000               	nop	
  3966                           
  3967                           ;Practica6_03_03_19.c: 339:                 }
  3968  0076A8  0100               	movlb	0	; () banked
  3969  0076AA  07DD               	decf	correcto@i& (0+255),f,b
  3970  0076AC  A0D8               	btfss	status,0,c
  3971  0076AE  07DE               	decf	(correcto@i+1)& (0+255),f,b
  3972  0076B0  D7E4               	goto	l3270
  3973  0076B2                     l3282:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Practica6_03_03_19.c: 340:                 Lcd_Cmd(1);
  3977  0076B2  0E01               	movlw	1
  3978  0076B4  EC2E  F02E         	call	_Lcd_Cmd
  3979                           
  3980                           ;Practica6_03_03_19.c: 341:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  3981  0076B8  0E02               	movlw	2
  3982  0076BA  0100               	movlb	0	; () banked
  3983  0076BC  6FD6               	movwf	(??_correcto+1)& (0+255),b
  3984  0076BE  0E04               	movlw	4
  3985  0076C0  6FD5               	movwf	??_correcto& (0+255),b
  3986  0076C2  0EBA               	movlw	186
  3987  0076C4                     u2877:
  3988  0076C4  2EE8               	decfsz	wreg,f,c
  3989  0076C6  D7FE               	bra	u2877
  3990  0076C8  2FD5               	decfsz	??_correcto& (0+255),f,b
  3991  0076CA  D7FC               	bra	u2877
  3992  0076CC  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  3993  0076CE  D7FA               	bra	u2877
  3994  0076D0  F000               	nop	
  3995                           
  3996                           ;Practica6_03_03_19.c: 342:                 Lcd_Out(1,1,"Presione * cuando termine");
  3997  0076D2  0E01               	movlw	1
  3998  0076D4  6E04               	movwf	Lcd_Out@x,c
  3999  0076D6  0E95               	movlw	low STR_32
  4000  0076D8  6E05               	movwf	Lcd_Out@buffer,c
  4001  0076DA  0E7D               	movlw	high STR_32
  4002  0076DC  6E06               	movwf	Lcd_Out@buffer+1,c
  4003  0076DE  0E01               	movlw	1
  4004  0076E0  EC53  F02C         	call	_Lcd_Out
  4005                           
  4006                           ;Practica6_03_03_19.c: 343:                 for(i=26;i>0;i--){
  4007  0076E4  0E00               	movlw	0
  4008  0076E6  0100               	movlb	0	; () banked
  4009  0076E8  6FDE               	movwf	(correcto@i+1)& (0+255),b
  4010  0076EA  0E1A               	movlw	26
  4011  0076EC  6FDD               	movwf	correcto@i& (0+255),b
  4012  0076EE                     l3290:
  4013                           
  4014                           ; BSR set to: 0
  4015  0076EE  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  4016  0076F0  D019               	goto	l3302
  4017  0076F2  51DE               	movf	(correcto@i+1)& (0+255),w,b
  4018  0076F4  E103               	bnz	l3294
  4019  0076F6  05DD               	decf	correcto@i& (0+255),w,b
  4020  0076F8  A0D8               	btfss	status,0,c
  4021  0076FA  D014               	goto	l3302
  4022  0076FC                     l3294:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;Practica6_03_03_19.c: 344:                     Lcd_Cmd(24);
  4026  0076FC  0E18               	movlw	24
  4027  0076FE  EC2E  F02E         	call	_Lcd_Cmd
  4028                           
  4029                           ;Practica6_03_03_19.c: 345:                     _delay((unsigned long)((200)*(8000000/40
      +                          00.0)));
  4030  007702  0E03               	movlw	3
  4031  007704  0100               	movlb	0	; () banked
  4032  007706  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4033  007708  0E08               	movlw	8
  4034  00770A  6FD5               	movwf	??_correcto& (0+255),b
  4035  00770C  0E77               	movlw	119
  4036  00770E                     u2887:
  4037  00770E  2EE8               	decfsz	wreg,f,c
  4038  007710  D7FE               	bra	u2887
  4039  007712  2FD5               	decfsz	??_correcto& (0+255),f,b
  4040  007714  D7FC               	bra	u2887
  4041  007716  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4042  007718  D7FA               	bra	u2887
  4043                           
  4044                           ;Practica6_03_03_19.c: 346:                 }
  4045  00771A  0100               	movlb	0	; () banked
  4046  00771C  07DD               	decf	correcto@i& (0+255),f,b
  4047  00771E  A0D8               	btfss	status,0,c
  4048  007720  07DE               	decf	(correcto@i+1)& (0+255),f,b
  4049  007722  D7E5               	goto	l3290
  4050  007724                     l3302:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;Practica6_03_03_19.c: 347:                 Lcd_Cmd(1);
  4054  007724  0E01               	movlw	1
  4055  007726  EC2E  F02E         	call	_Lcd_Cmd
  4056  00772A                     l3304:
  4057                           
  4058                           ;Practica6_03_03_19.c: 348:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  4059  00772A  0E02               	movlw	2
  4060  00772C  0100               	movlb	0	; () banked
  4061  00772E  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4062  007730  0E04               	movlw	4
  4063  007732  6FD5               	movwf	??_correcto& (0+255),b
  4064  007734  0EBA               	movlw	186
  4065  007736                     u2897:
  4066  007736  2EE8               	decfsz	wreg,f,c
  4067  007738  D7FE               	bra	u2897
  4068  00773A  2FD5               	decfsz	??_correcto& (0+255),f,b
  4069  00773C  D7FC               	bra	u2897
  4070  00773E  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4071  007740  D7FA               	bra	u2897
  4072  007742  F000               	nop	
  4073                           
  4074                           ;Practica6_03_03_19.c: 350:                 sum1=0;
  4075  007744  0E00               	movlw	0
  4076  007746  0100               	movlb	0	; () banked
  4077  007748  6F64               	movwf	_sum1& (0+255),b
  4078  00774A  0E00               	movlw	0
  4079  00774C  6F65               	movwf	(_sum1+1)& (0+255),b
  4080  00774E  0E00               	movlw	0
  4081  007750  6F66               	movwf	(_sum1+2)& (0+255),b
  4082  007752  0E00               	movlw	0
  4083  007754  6F67               	movwf	(_sum1+3)& (0+255),b
  4084                           
  4085                           ;Practica6_03_03_19.c: 351:                 while(valor!='*'){
  4086  007756  D073               	goto	l3326
  4087  007758                     l3308:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;Practica6_03_03_19.c: 352:                     teclado();
  4091  007758  EC30  F031         	call	_teclado	;wreg free
  4092                           
  4093                           ;Practica6_03_03_19.c: 353:                     Lcd_Out(1, 1,"Viejo");
  4094  00775C  0E01               	movlw	1
  4095  00775E  6E04               	movwf	Lcd_Out@x,c
  4096  007760  0EE2               	movlw	low STR_47
  4097  007762  6E05               	movwf	Lcd_Out@buffer,c
  4098  007764  0E7F               	movlw	high STR_47
  4099  007766  6E06               	movwf	Lcd_Out@buffer+1,c
  4100  007768  0E01               	movlw	1
  4101  00776A  EC53  F02C         	call	_Lcd_Out
  4102                           
  4103                           ;Practica6_03_03_19.c: 354:                     Lcd_Out(2,1,"NIP:");
  4104  00776E  0E01               	movlw	1
  4105  007770  6E04               	movwf	Lcd_Out@x,c
  4106  007772  0EEE               	movlw	low STR_48
  4107  007774  6E05               	movwf	Lcd_Out@buffer,c
  4108  007776  0E7F               	movlw	high STR_48
  4109  007778  6E06               	movwf	Lcd_Out@buffer+1,c
  4110  00777A  0E02               	movlw	2
  4111  00777C  EC53  F02C         	call	_Lcd_Out
  4112                           
  4113                           ;Practica6_03_03_19.c: 355:                     if ((valor >= '0')&&(valor <= '9')){
  4114  007780  0100               	movlb	0	; () banked
  4115  007782  5163               	movf	(_valor+3)& (0+255),w,b
  4116  007784  1162               	iorwf	(_valor+2)& (0+255),w,b
  4117  007786  1161               	iorwf	(_valor+1)& (0+255),w,b
  4118  007788  E104               	bnz	u2070
  4119  00778A  0E30               	movlw	48
  4120  00778C  5D60               	subwf	_valor& (0+255),w,b
  4121  00778E  A0D8               	btfss	status,0,c
  4122  007790  D04E               	goto	l3324
  4123  007792                     u2070:
  4124                           
  4125                           ; BSR set to: 0
  4126  007792  5163               	movf	(_valor+3)& (0+255),w,b
  4127  007794  1162               	iorwf	(_valor+2)& (0+255),w,b
  4128  007796  1161               	iorwf	(_valor+1)& (0+255),w,b
  4129  007798  E14A               	bnz	l3324
  4130  00779A  0E3A               	movlw	58
  4131  00779C  5D60               	subwf	_valor& (0+255),w,b
  4132  00779E  B0D8               	btfsc	status,0,c
  4133  0077A0  D046               	goto	l3324
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;Practica6_03_03_19.c: 356:                         sum1 = sum1*10 + (valor - 48);
  4137  0077A2  C064  F001         	movff	_sum1,___lmul@multiplier
  4138  0077A6  C065  F002         	movff	_sum1+1,___lmul@multiplier+1
  4139  0077AA  C066  F003         	movff	_sum1+2,___lmul@multiplier+2
  4140  0077AE  C067  F004         	movff	_sum1+3,___lmul@multiplier+3
  4141  0077B2  0E0A               	movlw	10
  4142  0077B4  6E05               	movwf	___lmul@multiplicand,c
  4143  0077B6  0E00               	movlw	0
  4144  0077B8  6E06               	movwf	___lmul@multiplicand+1,c
  4145  0077BA  0E00               	movlw	0
  4146  0077BC  6E07               	movwf	___lmul@multiplicand+2,c
  4147  0077BE  0E00               	movlw	0
  4148  0077C0  6E08               	movwf	___lmul@multiplicand+3,c
  4149  0077C2  ECC5  F02B         	call	___lmul	;wreg free
  4150  0077C6  0100               	movlb	0	; () banked
  4151  0077C8  5160               	movf	_valor& (0+255),w,b
  4152  0077CA  2401               	addwf	?___lmul,w,c
  4153  0077CC  6FD5               	movwf	??_correcto& (0+255),b
  4154  0077CE  5161               	movf	(_valor+1)& (0+255),w,b
  4155  0077D0  2002               	addwfc	?___lmul+1,w,c
  4156  0077D2  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4157  0077D4  5162               	movf	(_valor+2)& (0+255),w,b
  4158  0077D6  2003               	addwfc	?___lmul+2,w,c
  4159  0077D8  6FD7               	movwf	(??_correcto+2)& (0+255),b
  4160  0077DA  5163               	movf	(_valor+3)& (0+255),w,b
  4161  0077DC  2004               	addwfc	?___lmul+3,w,c
  4162  0077DE  6FD8               	movwf	(??_correcto+3)& (0+255),b
  4163  0077E0  0ED0               	movlw	208
  4164  0077E2  25D5               	addwf	??_correcto& (0+255),w,b
  4165  0077E4  6F64               	movwf	_sum1& (0+255),b
  4166  0077E6  0EFF               	movlw	255
  4167  0077E8  21D6               	addwfc	(??_correcto+1)& (0+255),w,b
  4168  0077EA  6F65               	movwf	(_sum1+1)& (0+255),b
  4169  0077EC  0EFF               	movlw	255
  4170  0077EE  21D7               	addwfc	(??_correcto+2)& (0+255),w,b
  4171  0077F0  6F66               	movwf	(_sum1+2)& (0+255),b
  4172  0077F2  0EFF               	movlw	255
  4173  0077F4  21D8               	addwfc	(??_correcto+3)& (0+255),w,b
  4174  0077F6  6F67               	movwf	(_sum1+3)& (0+255),b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;Practica6_03_03_19.c: 357:                         sprintf(palabra1,"%d",sum1);
  4178  0077F8  0EA9               	movlw	low _palabra1
  4179  0077FA  6E58               	movwf	sprintf@s,c
  4180  0077FC  0E00               	movlw	high _palabra1
  4181  0077FE  6E59               	movwf	sprintf@s+1,c
  4182  007800  0EDF               	movlw	low (STR_18+3)
  4183  007802  6E5A               	movwf	sprintf@fmt,c
  4184  007804  0E7F               	movlw	high (STR_18+3)
  4185  007806  6E5B               	movwf	sprintf@fmt+1,c
  4186  007808  C064  F05C         	movff	_sum1,?_sprintf+4
  4187  00780C  C065  F05D         	movff	_sum1+1,?_sprintf+5
  4188  007810  C066  F05E         	movff	_sum1+2,?_sprintf+6
  4189  007814  C067  F05F         	movff	_sum1+3,?_sprintf+7
  4190  007818  EC9C  F02B         	call	_sprintf	;wreg free
  4191                           
  4192                           ;Practica6_03_03_19.c: 358:                         Lcd_Out2(2,5,palabra1);
  4193  00781C  0E05               	movlw	5
  4194  00781E  6E04               	movwf	Lcd_Out2@x,c
  4195  007820  0EA9               	movlw	low _palabra1
  4196  007822  6E05               	movwf	Lcd_Out2@buffer,c
  4197  007824  0E00               	movlw	high _palabra1
  4198  007826  6E06               	movwf	Lcd_Out2@buffer+1,c
  4199  007828  0E02               	movlw	2
  4200  00782A  EC1B  F02C         	call	_Lcd_Out2
  4201  00782E                     l3324:
  4202                           
  4203                           ;Practica6_03_03_19.c: 360:                     pin1=sum1;
  4204  00782E  C064  F068         	movff	_sum1,_pin1
  4205  007832  C065  F069         	movff	_sum1+1,_pin1+1
  4206  007836  C066  F06A         	movff	_sum1+2,_pin1+2
  4207  00783A  C067  F06B         	movff	_sum1+3,_pin1+3
  4208  00783E                     l3326:
  4209                           
  4210                           ;Practica6_03_03_19.c: 351:                 while(valor!='*'){
  4211  00783E  0E2A               	movlw	42
  4212  007840  0100               	movlb	0	; () banked
  4213  007842  1960               	xorwf	_valor& (0+255),w,b
  4214  007844  1161               	iorwf	(_valor+1)& (0+255),w,b
  4215  007846  1162               	iorwf	(_valor+2)& (0+255),w,b
  4216  007848  1163               	iorwf	(_valor+3)& (0+255),w,b
  4217  00784A  A4D8               	btfss	status,2,c
  4218  00784C  D785               	goto	l3308
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;Practica6_03_03_19.c: 362:                 Lcd_Cmd(1);
  4222  00784E  0E01               	movlw	1
  4223  007850  EC2E  F02E         	call	_Lcd_Cmd
  4224                           
  4225                           ;Practica6_03_03_19.c: 363:                 _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
  4226  007854  0E02               	movlw	2
  4227  007856  0100               	movlb	0	; () banked
  4228  007858  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4229  00785A  0E04               	movlw	4
  4230  00785C  6FD5               	movwf	??_correcto& (0+255),b
  4231  00785E  0EBA               	movlw	186
  4232  007860                     u2907:
  4233  007860  2EE8               	decfsz	wreg,f,c
  4234  007862  D7FE               	bra	u2907
  4235  007864  2FD5               	decfsz	??_correcto& (0+255),f,b
  4236  007866  D7FC               	bra	u2907
  4237  007868  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4238  00786A  D7FA               	bra	u2907
  4239  00786C  F000               	nop	
  4240                           
  4241                           ;Practica6_03_03_19.c: 364:                 if(pin1==pasword && valor!=0){
  4242  00786E  0100               	movlb	0	; () banked
  4243  007870  51EB               	movf	_pasword& (0+255),w,b
  4244  007872  6FD5               	movwf	??_correcto& (0+255),b
  4245  007874  51EC               	movf	(_pasword+1)& (0+255),w,b
  4246  007876  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4247  007878  6BD7               	clrf	(??_correcto+2)& (0+255),b
  4248  00787A  6BD8               	clrf	(??_correcto+3)& (0+255),b
  4249  00787C  5168               	movf	_pin1& (0+255),w,b
  4250  00787E  19D5               	xorwf	??_correcto& (0+255),w,b
  4251  007880  E109               	bnz	u2101
  4252  007882  5169               	movf	(_pin1+1)& (0+255),w,b
  4253  007884  19D6               	xorwf	(??_correcto+1)& (0+255),w,b
  4254  007886  E106               	bnz	u2101
  4255  007888  516A               	movf	(_pin1+2)& (0+255),w,b
  4256  00788A  19D7               	xorwf	(??_correcto+2)& (0+255),w,b
  4257  00788C  E103               	bnz	u2101
  4258  00788E  516B               	movf	(_pin1+3)& (0+255),w,b
  4259  007890  19D8               	xorwf	(??_correcto+3)& (0+255),w,b
  4260  007892  A4D8               	btfss	status,2,c
  4261  007894                     u2101:
  4262  007894  D180               	goto	l3434
  4263                           
  4264                           ; BSR set to: 0
  4265  007896  5160               	movf	_valor& (0+255),w,b
  4266  007898  1161               	iorwf	(_valor+1)& (0+255),w,b
  4267  00789A  1162               	iorwf	(_valor+2)& (0+255),w,b
  4268  00789C  1163               	iorwf	(_valor+3)& (0+255),w,b
  4269  00789E  B4D8               	btfsc	status,2,c
  4270  0078A0  D17A               	goto	l3434
  4271  0078A2                     u2110:
  4272                           
  4273                           ;Practica6_03_03_19.c: 366:                     valor=0;
  4274  0078A2  0E00               	movlw	0
  4275  0078A4  0100               	movlb	0	; () banked
  4276  0078A6  6F60               	movwf	_valor& (0+255),b
  4277  0078A8  0E00               	movlw	0
  4278  0078AA  6F61               	movwf	(_valor+1)& (0+255),b
  4279  0078AC  0E00               	movlw	0
  4280  0078AE  6F62               	movwf	(_valor+2)& (0+255),b
  4281  0078B0  0E00               	movlw	0
  4282  0078B2  6F63               	movwf	(_valor+3)& (0+255),b
  4283                           
  4284                           ;Practica6_03_03_19.c: 367:                     sum1=0;
  4285  0078B4  0E00               	movlw	0
  4286  0078B6  6F64               	movwf	_sum1& (0+255),b
  4287  0078B8  0E00               	movlw	0
  4288  0078BA  6F65               	movwf	(_sum1+1)& (0+255),b
  4289  0078BC  0E00               	movlw	0
  4290  0078BE  6F66               	movwf	(_sum1+2)& (0+255),b
  4291  0078C0  0E00               	movlw	0
  4292  0078C2  6F67               	movwf	(_sum1+3)& (0+255),b
  4293                           
  4294                           ;Practica6_03_03_19.c: 368:                     while(valor!='*'){
  4295  0078C4  D06F               	goto	l3356
  4296  0078C6                     l3338:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;Practica6_03_03_19.c: 369:                         teclado();
  4300  0078C6  EC30  F031         	call	_teclado	;wreg free
  4301                           
  4302                           ;Practica6_03_03_19.c: 370:                         Lcd_Out(1, 1,"Nuevo");
  4303  0078CA  0E01               	movlw	1
  4304  0078CC  6E04               	movwf	Lcd_Out@x,c
  4305  0078CE  0EE8               	movlw	low STR_50
  4306  0078D0  6E05               	movwf	Lcd_Out@buffer,c
  4307  0078D2  0E7F               	movlw	high STR_50
  4308  0078D4  6E06               	movwf	Lcd_Out@buffer+1,c
  4309  0078D6  0E01               	movlw	1
  4310  0078D8  EC53  F02C         	call	_Lcd_Out
  4311                           
  4312                           ;Practica6_03_03_19.c: 371:                         Lcd_Out(2,1,"NIP:");
  4313  0078DC  0E01               	movlw	1
  4314  0078DE  6E04               	movwf	Lcd_Out@x,c
  4315  0078E0  0EEE               	movlw	low STR_48
  4316  0078E2  6E05               	movwf	Lcd_Out@buffer,c
  4317  0078E4  0E7F               	movlw	high STR_48
  4318  0078E6  6E06               	movwf	Lcd_Out@buffer+1,c
  4319  0078E8  0E02               	movlw	2
  4320  0078EA  EC53  F02C         	call	_Lcd_Out
  4321                           
  4322                           ;Practica6_03_03_19.c: 372:                         if ((valor >= '0')&&(valor <= '9')){
  4323  0078EE  0100               	movlb	0	; () banked
  4324  0078F0  5163               	movf	(_valor+3)& (0+255),w,b
  4325  0078F2  1162               	iorwf	(_valor+2)& (0+255),w,b
  4326  0078F4  1161               	iorwf	(_valor+1)& (0+255),w,b
  4327  0078F6  E104               	bnz	u2120
  4328  0078F8  0E30               	movlw	48
  4329  0078FA  5D60               	subwf	_valor& (0+255),w,b
  4330  0078FC  A0D8               	btfss	status,0,c
  4331  0078FE  D04E               	goto	l3354
  4332  007900                     u2120:
  4333                           
  4334                           ; BSR set to: 0
  4335  007900  5163               	movf	(_valor+3)& (0+255),w,b
  4336  007902  1162               	iorwf	(_valor+2)& (0+255),w,b
  4337  007904  1161               	iorwf	(_valor+1)& (0+255),w,b
  4338  007906  E14A               	bnz	l3354
  4339  007908  0E3A               	movlw	58
  4340  00790A  5D60               	subwf	_valor& (0+255),w,b
  4341  00790C  B0D8               	btfsc	status,0,c
  4342  00790E  D046               	goto	l3354
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;Practica6_03_03_19.c: 373:                             sum1 = sum1*10 + (valor - 48);
  4346  007910  C064  F001         	movff	_sum1,___lmul@multiplier
  4347  007914  C065  F002         	movff	_sum1+1,___lmul@multiplier+1
  4348  007918  C066  F003         	movff	_sum1+2,___lmul@multiplier+2
  4349  00791C  C067  F004         	movff	_sum1+3,___lmul@multiplier+3
  4350  007920  0E0A               	movlw	10
  4351  007922  6E05               	movwf	___lmul@multiplicand,c
  4352  007924  0E00               	movlw	0
  4353  007926  6E06               	movwf	___lmul@multiplicand+1,c
  4354  007928  0E00               	movlw	0
  4355  00792A  6E07               	movwf	___lmul@multiplicand+2,c
  4356  00792C  0E00               	movlw	0
  4357  00792E  6E08               	movwf	___lmul@multiplicand+3,c
  4358  007930  ECC5  F02B         	call	___lmul	;wreg free
  4359  007934  0100               	movlb	0	; () banked
  4360  007936  5160               	movf	_valor& (0+255),w,b
  4361  007938  2401               	addwf	?___lmul,w,c
  4362  00793A  6FD5               	movwf	??_correcto& (0+255),b
  4363  00793C  5161               	movf	(_valor+1)& (0+255),w,b
  4364  00793E  2002               	addwfc	?___lmul+1,w,c
  4365  007940  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4366  007942  5162               	movf	(_valor+2)& (0+255),w,b
  4367  007944  2003               	addwfc	?___lmul+2,w,c
  4368  007946  6FD7               	movwf	(??_correcto+2)& (0+255),b
  4369  007948  5163               	movf	(_valor+3)& (0+255),w,b
  4370  00794A  2004               	addwfc	?___lmul+3,w,c
  4371  00794C  6FD8               	movwf	(??_correcto+3)& (0+255),b
  4372  00794E  0ED0               	movlw	208
  4373  007950  25D5               	addwf	??_correcto& (0+255),w,b
  4374  007952  6F64               	movwf	_sum1& (0+255),b
  4375  007954  0EFF               	movlw	255
  4376  007956  21D6               	addwfc	(??_correcto+1)& (0+255),w,b
  4377  007958  6F65               	movwf	(_sum1+1)& (0+255),b
  4378  00795A  0EFF               	movlw	255
  4379  00795C  21D7               	addwfc	(??_correcto+2)& (0+255),w,b
  4380  00795E  6F66               	movwf	(_sum1+2)& (0+255),b
  4381  007960  0EFF               	movlw	255
  4382  007962  21D8               	addwfc	(??_correcto+3)& (0+255),w,b
  4383  007964  6F67               	movwf	(_sum1+3)& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;Practica6_03_03_19.c: 374:                             sprintf(palabra2,"%d",sum1);
  4387  007966  0E98               	movlw	low _palabra2
  4388  007968  6E58               	movwf	sprintf@s,c
  4389  00796A  0E00               	movlw	high _palabra2
  4390  00796C  6E59               	movwf	sprintf@s+1,c
  4391  00796E  0EDF               	movlw	low (STR_18+3)
  4392  007970  6E5A               	movwf	sprintf@fmt,c
  4393  007972  0E7F               	movlw	high (STR_18+3)
  4394  007974  6E5B               	movwf	sprintf@fmt+1,c
  4395  007976  C064  F05C         	movff	_sum1,?_sprintf+4
  4396  00797A  C065  F05D         	movff	_sum1+1,?_sprintf+5
  4397  00797E  C066  F05E         	movff	_sum1+2,?_sprintf+6
  4398  007982  C067  F05F         	movff	_sum1+3,?_sprintf+7
  4399  007986  EC9C  F02B         	call	_sprintf	;wreg free
  4400                           
  4401                           ;Practica6_03_03_19.c: 375:                             Lcd_Out2(2,5,palabra2);
  4402  00798A  0E05               	movlw	5
  4403  00798C  6E04               	movwf	Lcd_Out2@x,c
  4404  00798E  0E98               	movlw	low _palabra2
  4405  007990  6E05               	movwf	Lcd_Out2@buffer,c
  4406  007992  0E00               	movlw	high _palabra2
  4407  007994  6E06               	movwf	Lcd_Out2@buffer+1,c
  4408  007996  0E02               	movlw	2
  4409  007998  EC1B  F02C         	call	_Lcd_Out2
  4410  00799C                     l3354:
  4411                           
  4412                           ;Practica6_03_03_19.c: 377:                         cambio=sum1;
  4413  00799C  C064  F076         	movff	_sum1,_cambio
  4414  0079A0  C065  F077         	movff	_sum1+1,_cambio+1
  4415  0079A4                     l3356:
  4416                           
  4417                           ;Practica6_03_03_19.c: 368:                     while(valor!='*'){
  4418  0079A4  0E2A               	movlw	42
  4419  0079A6  0100               	movlb	0	; () banked
  4420  0079A8  1960               	xorwf	_valor& (0+255),w,b
  4421  0079AA  1161               	iorwf	(_valor+1)& (0+255),w,b
  4422  0079AC  1162               	iorwf	(_valor+2)& (0+255),w,b
  4423  0079AE  1163               	iorwf	(_valor+3)& (0+255),w,b
  4424  0079B0  A4D8               	btfss	status,2,c
  4425  0079B2  D789               	goto	l3338
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;Practica6_03_03_19.c: 379:                     if(cambio>9999){
  4429  0079B4  0E10               	movlw	16
  4430  0079B6  5D76               	subwf	_cambio& (0+255),w,b
  4431  0079B8  0E27               	movlw	39
  4432  0079BA  5977               	subwfb	(_cambio+1)& (0+255),w,b
  4433  0079BC  A0D8               	btfss	status,0,c
  4434  0079BE  D07A               	goto	l3394
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;Practica6_03_03_19.c: 380:                         Lcd_Cmd(1);
  4438  0079C0  0E01               	movlw	1
  4439  0079C2  EC2E  F02E         	call	_Lcd_Cmd
  4440                           
  4441                           ;Practica6_03_03_19.c: 381:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  4442  0079C6  0E02               	movlw	2
  4443  0079C8  0100               	movlb	0	; () banked
  4444  0079CA  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4445  0079CC  0E04               	movlw	4
  4446  0079CE  6FD5               	movwf	??_correcto& (0+255),b
  4447  0079D0  0EBA               	movlw	186
  4448  0079D2                     u2917:
  4449  0079D2  2EE8               	decfsz	wreg,f,c
  4450  0079D4  D7FE               	bra	u2917
  4451  0079D6  2FD5               	decfsz	??_correcto& (0+255),f,b
  4452  0079D8  D7FC               	bra	u2917
  4453  0079DA  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4454  0079DC  D7FA               	bra	u2917
  4455  0079DE  F000               	nop	
  4456                           
  4457                           ;Practica6_03_03_19.c: 382:                         Lcd_Out(1, 1,"PIN no valido");
  4458  0079E0  0E01               	movlw	1
  4459  0079E2  6E04               	movwf	Lcd_Out@x,c
  4460  0079E4  0EE9               	movlw	low STR_53
  4461  0079E6  6E05               	movwf	Lcd_Out@buffer,c
  4462  0079E8  0E7E               	movlw	high STR_53
  4463  0079EA  6E06               	movwf	Lcd_Out@buffer+1,c
  4464  0079EC  0E01               	movlw	1
  4465  0079EE  EC53  F02C         	call	_Lcd_Out
  4466                           
  4467                           ;Practica6_03_03_19.c: 383:                         for(i=14;i>0;i--){
  4468  0079F2  0E00               	movlw	0
  4469  0079F4  0100               	movlb	0	; () banked
  4470  0079F6  6FDE               	movwf	(correcto@i+1)& (0+255),b
  4471  0079F8  0E0E               	movlw	14
  4472  0079FA  6FDD               	movwf	correcto@i& (0+255),b
  4473  0079FC                     l3368:
  4474                           
  4475                           ; BSR set to: 0
  4476  0079FC  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  4477  0079FE  D01A               	goto	l3380
  4478  007A00  51DE               	movf	(correcto@i+1)& (0+255),w,b
  4479  007A02  E103               	bnz	l3372
  4480  007A04  05DD               	decf	correcto@i& (0+255),w,b
  4481  007A06  A0D8               	btfss	status,0,c
  4482  007A08  D015               	goto	l3380
  4483  007A0A                     l3372:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;Practica6_03_03_19.c: 384:                             Lcd_Cmd(24);
  4487  007A0A  0E18               	movlw	24
  4488  007A0C  EC2E  F02E         	call	_Lcd_Cmd
  4489                           
  4490                           ;Practica6_03_03_19.c: 385:                             _delay((unsigned long)((350)*(80
      +                          00000/4000.0)));
  4491  007A10  0E04               	movlw	4
  4492  007A12  0100               	movlb	0	; () banked
  4493  007A14  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4494  007A16  0E8E               	movlw	142
  4495  007A18  6FD5               	movwf	??_correcto& (0+255),b
  4496  007A1A  0E12               	movlw	18
  4497  007A1C                     u2927:
  4498  007A1C  2EE8               	decfsz	wreg,f,c
  4499  007A1E  D7FE               	bra	u2927
  4500  007A20  2FD5               	decfsz	??_correcto& (0+255),f,b
  4501  007A22  D7FC               	bra	u2927
  4502  007A24  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4503  007A26  D7FA               	bra	u2927
  4504  007A28  F000               	nop	
  4505                           
  4506                           ;Practica6_03_03_19.c: 386:                         }
  4507  007A2A  0100               	movlb	0	; () banked
  4508  007A2C  07DD               	decf	correcto@i& (0+255),f,b
  4509  007A2E  A0D8               	btfss	status,0,c
  4510  007A30  07DE               	decf	(correcto@i+1)& (0+255),f,b
  4511  007A32  D7E4               	goto	l3368
  4512  007A34                     l3380:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;Practica6_03_03_19.c: 387:                         Lcd_Cmd(1);
  4516  007A34  0E01               	movlw	1
  4517  007A36  EC2E  F02E         	call	_Lcd_Cmd
  4518                           
  4519                           ;Practica6_03_03_19.c: 388:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  4520  007A3A  0E02               	movlw	2
  4521  007A3C  0100               	movlb	0	; () banked
  4522  007A3E  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4523  007A40  0E04               	movlw	4
  4524  007A42  6FD5               	movwf	??_correcto& (0+255),b
  4525  007A44  0EBA               	movlw	186
  4526  007A46                     u2937:
  4527  007A46  2EE8               	decfsz	wreg,f,c
  4528  007A48  D7FE               	bra	u2937
  4529  007A4A  2FD5               	decfsz	??_correcto& (0+255),f,b
  4530  007A4C  D7FC               	bra	u2937
  4531  007A4E  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4532  007A50  D7FA               	bra	u2937
  4533  007A52  F000               	nop	
  4534                           
  4535                           ;Practica6_03_03_19.c: 389:                         Lcd_Out(1, 1,"Intente otra vez");
  4536  007A54  0E01               	movlw	1
  4537  007A56  6E04               	movwf	Lcd_Out@x,c
  4538  007A58  0E32               	movlw	low STR_54
  4539  007A5A  6E05               	movwf	Lcd_Out@buffer,c
  4540  007A5C  0E7E               	movlw	high STR_54
  4541  007A5E  6E06               	movwf	Lcd_Out@buffer+1,c
  4542  007A60  0E01               	movlw	1
  4543  007A62  EC53  F02C         	call	_Lcd_Out
  4544                           
  4545                           ;Practica6_03_03_19.c: 390:                         Lcd_Out(2,5,"Humano");
  4546  007A66  0E05               	movlw	5
  4547  007A68  6E04               	movwf	Lcd_Out@x,c
  4548  007A6A  0E32               	movlw	low (STR_5+6)
  4549  007A6C  6E05               	movwf	Lcd_Out@buffer,c
  4550  007A6E  0E7F               	movlw	high (STR_5+6)
  4551  007A70  6E06               	movwf	Lcd_Out@buffer+1,c
  4552  007A72  0E02               	movlw	2
  4553  007A74  EC53  F02C         	call	_Lcd_Out
  4554                           
  4555                           ;Practica6_03_03_19.c: 391:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  4556  007A78  0E15               	movlw	21
  4557  007A7A  0100               	movlb	0	; () banked
  4558  007A7C  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4559  007A7E  0E4B               	movlw	75
  4560  007A80  6FD5               	movwf	??_correcto& (0+255),b
  4561  007A82  0EBE               	movlw	190
  4562  007A84                     u2947:
  4563  007A84  2EE8               	decfsz	wreg,f,c
  4564  007A86  D7FE               	bra	u2947
  4565  007A88  2FD5               	decfsz	??_correcto& (0+255),f,b
  4566  007A8A  D7FC               	bra	u2947
  4567  007A8C  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4568  007A8E  D7FA               	bra	u2947
  4569  007A90  F000               	nop	
  4570                           
  4571                           ;Practica6_03_03_19.c: 392:                         Lcd_Cmd(1);
  4572  007A92  0E01               	movlw	1
  4573  007A94  EC2E  F02E         	call	_Lcd_Cmd
  4574                           
  4575                           ;Practica6_03_03_19.c: 393:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  4576  007A98  0E02               	movlw	2
  4577  007A9A  0100               	movlb	0	; () banked
  4578  007A9C  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4579  007A9E  0E04               	movlw	4
  4580  007AA0  6FD5               	movwf	??_correcto& (0+255),b
  4581  007AA2  0EBA               	movlw	186
  4582  007AA4                     u2957:
  4583  007AA4  2EE8               	decfsz	wreg,f,c
  4584  007AA6  D7FE               	bra	u2957
  4585  007AA8  2FD5               	decfsz	??_correcto& (0+255),f,b
  4586  007AAA  D7FC               	bra	u2957
  4587  007AAC  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4588  007AAE  D7FA               	bra	u2957
  4589  007AB0  F000               	nop	
  4590                           
  4591                           ;Practica6_03_03_19.c: 394:                         goto mayor;
  4592  007AB2  D6F7               	goto	u2110
  4593  007AB4                     l3394:
  4594                           
  4595                           ; BSR set to: 0
  4596  007AB4  0E00               	movlw	0
  4597  007AB6  6F60               	movwf	_valor& (0+255),b
  4598  007AB8  0E00               	movlw	0
  4599  007ABA  6F61               	movwf	(_valor+1)& (0+255),b
  4600  007ABC  0E00               	movlw	0
  4601  007ABE  6F62               	movwf	(_valor+2)& (0+255),b
  4602  007AC0  0E00               	movlw	0
  4603  007AC2  6F63               	movwf	(_valor+3)& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;Practica6_03_03_19.c: 396:                         pasword=cambio;
  4607  007AC4  C076  F0EB         	movff	_cambio,_pasword
  4608  007AC8  C077  F0EC         	movff	_cambio+1,_pasword+1
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;Practica6_03_03_19.c: 397:                         Lcd_Cmd(1);
  4612  007ACC  0E01               	movlw	1
  4613  007ACE  EC2E  F02E         	call	_Lcd_Cmd
  4614                           
  4615                           ;Practica6_03_03_19.c: 398:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  4616  007AD2  0E02               	movlw	2
  4617  007AD4  0100               	movlb	0	; () banked
  4618  007AD6  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4619  007AD8  0E04               	movlw	4
  4620  007ADA  6FD5               	movwf	??_correcto& (0+255),b
  4621  007ADC  0EBA               	movlw	186
  4622  007ADE                     u2967:
  4623  007ADE  2EE8               	decfsz	wreg,f,c
  4624  007AE0  D7FE               	bra	u2967
  4625  007AE2  2FD5               	decfsz	??_correcto& (0+255),f,b
  4626  007AE4  D7FC               	bra	u2967
  4627  007AE6  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4628  007AE8  D7FA               	bra	u2967
  4629  007AEA  F000               	nop	
  4630                           
  4631                           ;Practica6_03_03_19.c: 399:                         Lcd_Out(1, 1,"Cambio realizado");
  4632  007AEC  0E01               	movlw	1
  4633  007AEE  6E04               	movwf	Lcd_Out@x,c
  4634  007AF0  0E21               	movlw	low STR_56
  4635  007AF2  6E05               	movwf	Lcd_Out@buffer,c
  4636  007AF4  0E7E               	movlw	high STR_56
  4637  007AF6  6E06               	movwf	Lcd_Out@buffer+1,c
  4638  007AF8  0E01               	movlw	1
  4639  007AFA  EC53  F02C         	call	_Lcd_Out
  4640                           
  4641                           ;Practica6_03_03_19.c: 400:                         for(i=17;i>0;i--){
  4642  007AFE  0E00               	movlw	0
  4643  007B00  0100               	movlb	0	; () banked
  4644  007B02  6FDE               	movwf	(correcto@i+1)& (0+255),b
  4645  007B04  0E11               	movlw	17
  4646  007B06  6FDD               	movwf	correcto@i& (0+255),b
  4647  007B08                     l3406:
  4648                           
  4649                           ; BSR set to: 0
  4650  007B08  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  4651  007B0A  D01A               	goto	l3418
  4652  007B0C  51DE               	movf	(correcto@i+1)& (0+255),w,b
  4653  007B0E  E103               	bnz	l3410
  4654  007B10  05DD               	decf	correcto@i& (0+255),w,b
  4655  007B12  A0D8               	btfss	status,0,c
  4656  007B14  D015               	goto	l3418
  4657  007B16                     l3410:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;Practica6_03_03_19.c: 401:                             Lcd_Cmd(24);
  4661  007B16  0E18               	movlw	24
  4662  007B18  EC2E  F02E         	call	_Lcd_Cmd
  4663                           
  4664                           ;Practica6_03_03_19.c: 402:                             _delay((unsigned long)((350)*(80
      +                          00000/4000.0)));
  4665  007B1C  0E04               	movlw	4
  4666  007B1E  0100               	movlb	0	; () banked
  4667  007B20  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4668  007B22  0E8E               	movlw	142
  4669  007B24  6FD5               	movwf	??_correcto& (0+255),b
  4670  007B26  0E12               	movlw	18
  4671  007B28                     u2977:
  4672  007B28  2EE8               	decfsz	wreg,f,c
  4673  007B2A  D7FE               	bra	u2977
  4674  007B2C  2FD5               	decfsz	??_correcto& (0+255),f,b
  4675  007B2E  D7FC               	bra	u2977
  4676  007B30  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4677  007B32  D7FA               	bra	u2977
  4678  007B34  F000               	nop	
  4679                           
  4680                           ;Practica6_03_03_19.c: 403:                         }
  4681  007B36  0100               	movlb	0	; () banked
  4682  007B38  07DD               	decf	correcto@i& (0+255),f,b
  4683  007B3A  A0D8               	btfss	status,0,c
  4684  007B3C  07DE               	decf	(correcto@i+1)& (0+255),f,b
  4685  007B3E  D7E4               	goto	l3406
  4686  007B40                     l3418:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;Practica6_03_03_19.c: 404:                         Lcd_Out(2,1,"felicidades");
  4690  007B40  0E01               	movlw	1
  4691  007B42  6E04               	movwf	Lcd_Out@x,c
  4692  007B44  0E53               	movlw	low STR_57
  4693  007B46  6E05               	movwf	Lcd_Out@buffer,c
  4694  007B48  0E7F               	movlw	high STR_57
  4695  007B4A  6E06               	movwf	Lcd_Out@buffer+1,c
  4696  007B4C  0E02               	movlw	2
  4697  007B4E  EC53  F02C         	call	_Lcd_Out
  4698                           
  4699                           ;Practica6_03_03_19.c: 405:                         _delay((unsigned long)((2000)*(80000
      +                          00/4000.0)));
  4700  007B52  0E15               	movlw	21
  4701  007B54  0100               	movlb	0	; () banked
  4702  007B56  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4703  007B58  0E4B               	movlw	75
  4704  007B5A  6FD5               	movwf	??_correcto& (0+255),b
  4705  007B5C  0EBE               	movlw	190
  4706  007B5E                     u2987:
  4707  007B5E  2EE8               	decfsz	wreg,f,c
  4708  007B60  D7FE               	bra	u2987
  4709  007B62  2FD5               	decfsz	??_correcto& (0+255),f,b
  4710  007B64  D7FC               	bra	u2987
  4711  007B66  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4712  007B68  D7FA               	bra	u2987
  4713  007B6A  F000               	nop	
  4714                           
  4715                           ;Practica6_03_03_19.c: 406:                         Lcd_Cmd(1);
  4716  007B6C  0E01               	movlw	1
  4717  007B6E  EC2E  F02E         	call	_Lcd_Cmd
  4718                           
  4719                           ;Practica6_03_03_19.c: 407:                         _delay((unsigned long)((100)*(800000
      +                          0/4000.0)));
  4720  007B72  0E02               	movlw	2
  4721  007B74  0100               	movlb	0	; () banked
  4722  007B76  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4723  007B78  0E04               	movlw	4
  4724  007B7A  6FD5               	movwf	??_correcto& (0+255),b
  4725  007B7C  0EBA               	movlw	186
  4726  007B7E                     u2997:
  4727  007B7E  2EE8               	decfsz	wreg,f,c
  4728  007B80  D7FE               	bra	u2997
  4729  007B82  2FD5               	decfsz	??_correcto& (0+255),f,b
  4730  007B84  D7FC               	bra	u2997
  4731  007B86  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4732  007B88  D7FA               	bra	u2997
  4733  007B8A  F000               	nop	
  4734                           
  4735                           ;Practica6_03_03_19.c: 408:                         Lcd_Cmd(1);
  4736  007B8C  0E01               	movlw	1
  4737  007B8E  EC2E  F02E         	call	_Lcd_Cmd
  4738  007B92  EF58  F036         	goto	l2932
  4739  007B96                     l3434:
  4740                           
  4741                           ; BSR set to: 0
  4742  007B96  0E00               	movlw	0
  4743  007B98  6F60               	movwf	_valor& (0+255),b
  4744  007B9A  0E00               	movlw	0
  4745  007B9C  6F61               	movwf	(_valor+1)& (0+255),b
  4746  007B9E  0E00               	movlw	0
  4747  007BA0  6F62               	movwf	(_valor+2)& (0+255),b
  4748  007BA2  0E00               	movlw	0
  4749  007BA4  6F63               	movwf	(_valor+3)& (0+255),b
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;Practica6_03_03_19.c: 414:                     Lcd_Cmd(1);
  4753  007BA6  0E01               	movlw	1
  4754  007BA8  EC2E  F02E         	call	_Lcd_Cmd
  4755                           
  4756                           ;Practica6_03_03_19.c: 415:                     _delay((unsigned long)((100)*(8000000/40
      +                          00.0)));
  4757  007BAC  0E02               	movlw	2
  4758  007BAE  0100               	movlb	0	; () banked
  4759  007BB0  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4760  007BB2  0E04               	movlw	4
  4761  007BB4  6FD5               	movwf	??_correcto& (0+255),b
  4762  007BB6  0EBA               	movlw	186
  4763  007BB8                     u3007:
  4764  007BB8  2EE8               	decfsz	wreg,f,c
  4765  007BBA  D7FE               	bra	u3007
  4766  007BBC  2FD5               	decfsz	??_correcto& (0+255),f,b
  4767  007BBE  D7FC               	bra	u3007
  4768  007BC0  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4769  007BC2  D7FA               	bra	u3007
  4770  007BC4  F000               	nop	
  4771                           
  4772                           ;Practica6_03_03_19.c: 416:                     Lcd_Out(1, 1,"Pues ya esta viejo");
  4773  007BC6  0E01               	movlw	1
  4774  007BC8  6E04               	movwf	Lcd_Out@x,c
  4775  007BCA  0EEC               	movlw	low STR_58
  4776  007BCC  6E05               	movwf	Lcd_Out@buffer,c
  4777  007BCE  0E7D               	movlw	high STR_58
  4778  007BD0  6E06               	movwf	Lcd_Out@buffer+1,c
  4779  007BD2  0E01               	movlw	1
  4780  007BD4  EC53  F02C         	call	_Lcd_Out
  4781                           
  4782                           ;Practica6_03_03_19.c: 417:                     for(i=17;i>0;i--){
  4783  007BD8  0E00               	movlw	0
  4784  007BDA  0100               	movlb	0	; () banked
  4785  007BDC  6FDE               	movwf	(correcto@i+1)& (0+255),b
  4786  007BDE  0E11               	movlw	17
  4787  007BE0  6FDD               	movwf	correcto@i& (0+255),b
  4788  007BE2                     l3444:
  4789                           
  4790                           ; BSR set to: 0
  4791  007BE2  BFDE               	btfsc	(correcto@i+1)& (0+255),7,b
  4792  007BE4  D01A               	goto	l3456
  4793  007BE6  51DE               	movf	(correcto@i+1)& (0+255),w,b
  4794  007BE8  E103               	bnz	l3448
  4795  007BEA  05DD               	decf	correcto@i& (0+255),w,b
  4796  007BEC  A0D8               	btfss	status,0,c
  4797  007BEE  D015               	goto	l3456
  4798  007BF0                     l3448:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;Practica6_03_03_19.c: 418:                         Lcd_Cmd(24);
  4802  007BF0  0E18               	movlw	24
  4803  007BF2  EC2E  F02E         	call	_Lcd_Cmd
  4804                           
  4805                           ;Practica6_03_03_19.c: 419:                         _delay((unsigned long)((350)*(800000
      +                          0/4000.0)));
  4806  007BF6  0E04               	movlw	4
  4807  007BF8  0100               	movlb	0	; () banked
  4808  007BFA  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4809  007BFC  0E8E               	movlw	142
  4810  007BFE  6FD5               	movwf	??_correcto& (0+255),b
  4811  007C00  0E12               	movlw	18
  4812  007C02                     u3017:
  4813  007C02  2EE8               	decfsz	wreg,f,c
  4814  007C04  D7FE               	bra	u3017
  4815  007C06  2FD5               	decfsz	??_correcto& (0+255),f,b
  4816  007C08  D7FC               	bra	u3017
  4817  007C0A  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4818  007C0C  D7FA               	bra	u3017
  4819  007C0E  F000               	nop	
  4820                           
  4821                           ;Practica6_03_03_19.c: 420:                     }
  4822  007C10  0100               	movlb	0	; () banked
  4823  007C12  07DD               	decf	correcto@i& (0+255),f,b
  4824  007C14  A0D8               	btfss	status,0,c
  4825  007C16  07DE               	decf	(correcto@i+1)& (0+255),f,b
  4826  007C18  D7E4               	goto	l3444
  4827  007C1A                     l3456:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;Practica6_03_03_19.c: 421:                     Lcd_Out(2,1,"el NIP");
  4831  007C1A  0E01               	movlw	1
  4832  007C1C  6E04               	movwf	Lcd_Out@x,c
  4833  007C1E  0ED5               	movlw	low STR_59
  4834  007C20  6E05               	movwf	Lcd_Out@buffer,c
  4835  007C22  0E7F               	movlw	high STR_59
  4836  007C24  6E06               	movwf	Lcd_Out@buffer+1,c
  4837  007C26  0E02               	movlw	2
  4838  007C28  EC53  F02C         	call	_Lcd_Out
  4839                           
  4840                           ;Practica6_03_03_19.c: 422:                     _delay((unsigned long)((1000)*(8000000/4
      +                          000.0)));
  4841  007C2C  0E0B               	movlw	11
  4842  007C2E  0100               	movlb	0	; () banked
  4843  007C30  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4844  007C32  0E26               	movlw	38
  4845  007C34  6FD5               	movwf	??_correcto& (0+255),b
  4846  007C36  0E5D               	movlw	93
  4847  007C38                     u3027:
  4848  007C38  2EE8               	decfsz	wreg,f,c
  4849  007C3A  D7FE               	bra	u3027
  4850  007C3C  2FD5               	decfsz	??_correcto& (0+255),f,b
  4851  007C3E  D7FC               	bra	u3027
  4852  007C40  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4853  007C42  D7FA               	bra	u3027
  4854  007C44  D000               	nop2	
  4855                           
  4856                           ;Practica6_03_03_19.c: 423:                     Lcd_Cmd(1);
  4857  007C46  0E01               	movlw	1
  4858  007C48  EC2E  F02E         	call	_Lcd_Cmd
  4859                           
  4860                           ;Practica6_03_03_19.c: 424:                     _delay((unsigned long)((100)*(8000000/40
      +                          00.0)));
  4861  007C4C  0E02               	movlw	2
  4862  007C4E  0100               	movlb	0	; () banked
  4863  007C50  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4864  007C52  0E04               	movlw	4
  4865  007C54  6FD5               	movwf	??_correcto& (0+255),b
  4866  007C56  0EBA               	movlw	186
  4867  007C58                     u3037:
  4868  007C58  2EE8               	decfsz	wreg,f,c
  4869  007C5A  D7FE               	bra	u3037
  4870  007C5C  2FD5               	decfsz	??_correcto& (0+255),f,b
  4871  007C5E  D7FC               	bra	u3037
  4872  007C60  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4873  007C62  D7FA               	bra	u3037
  4874  007C64  F000               	nop	
  4875                           
  4876                           ;Practica6_03_03_19.c: 425:                     Lcd_Out(1, 1,"Intente otra vez");
  4877  007C66  0E01               	movlw	1
  4878  007C68  6E04               	movwf	Lcd_Out@x,c
  4879  007C6A  0E32               	movlw	low STR_54
  4880  007C6C  6E05               	movwf	Lcd_Out@buffer,c
  4881  007C6E  0E7E               	movlw	high STR_54
  4882  007C70  6E06               	movwf	Lcd_Out@buffer+1,c
  4883  007C72  0E01               	movlw	1
  4884  007C74  EC53  F02C         	call	_Lcd_Out
  4885                           
  4886                           ;Practica6_03_03_19.c: 426:                     Lcd_Out(2,5,"Humano");
  4887  007C78  0E05               	movlw	5
  4888  007C7A  6E04               	movwf	Lcd_Out@x,c
  4889  007C7C  0E32               	movlw	low (STR_5+6)
  4890  007C7E  6E05               	movwf	Lcd_Out@buffer,c
  4891  007C80  0E7F               	movlw	high (STR_5+6)
  4892  007C82  6E06               	movwf	Lcd_Out@buffer+1,c
  4893  007C84  0E02               	movlw	2
  4894  007C86  EC53  F02C         	call	_Lcd_Out
  4895                           
  4896                           ;Practica6_03_03_19.c: 427:                     _delay((unsigned long)((2000)*(8000000/4
      +                          000.0)));
  4897  007C8A  0E15               	movlw	21
  4898  007C8C  0100               	movlb	0	; () banked
  4899  007C8E  6FD6               	movwf	(??_correcto+1)& (0+255),b
  4900  007C90  0E4B               	movlw	75
  4901  007C92  6FD5               	movwf	??_correcto& (0+255),b
  4902  007C94  0EBE               	movlw	190
  4903  007C96                     u3047:
  4904  007C96  2EE8               	decfsz	wreg,f,c
  4905  007C98  D7FE               	bra	u3047
  4906  007C9A  2FD5               	decfsz	??_correcto& (0+255),f,b
  4907  007C9C  D7FC               	bra	u3047
  4908  007C9E  2FD6               	decfsz	(??_correcto+1)& (0+255),f,b
  4909  007CA0  D7FA               	bra	u3047
  4910  007CA2  F000               	nop	
  4911                           
  4912                           ;Practica6_03_03_19.c: 428:                     Lcd_Cmd(1);
  4913  007CA4  0E01               	movlw	1
  4914  007CA6  EC2E  F02E         	call	_Lcd_Cmd
  4915  007CAA  D53F               	goto	l3304
  4916  007CAC                     l3474:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;Practica6_03_03_19.c: 435:                 valor='*';
  4920  007CAC  0E2A               	movlw	42
  4921  007CAE  6F60               	movwf	_valor& (0+255),b
  4922  007CB0  0E00               	movlw	0
  4923  007CB2  6F61               	movwf	(_valor+1)& (0+255),b
  4924  007CB4  0E00               	movlw	0
  4925  007CB6  6F62               	movwf	(_valor+2)& (0+255),b
  4926  007CB8  0E00               	movlw	0
  4927  007CBA  6F63               	movwf	(_valor+3)& (0+255),b
  4928                           
  4929                           ;Practica6_03_03_19.c: 436:                 paso=1;
  4930  007CBC  0E00               	movlw	0
  4931  007CBE  6F75               	movwf	(_paso+1)& (0+255),b
  4932  007CC0  0E01               	movlw	1
  4933  007CC2  6F74               	movwf	_paso& (0+255),b
  4934                           
  4935                           ;Practica6_03_03_19.c: 437:                 break;
  4936  007CC4  D02A               	goto	l3480
  4937  007CC6                     l3478:
  4938  007CC6  C060  F0D5         	movff	_valor,??_correcto
  4939  007CCA  C061  F0D6         	movff	_valor+1,??_correcto+1
  4940  007CCE  C062  F0D7         	movff	_valor+2,??_correcto+2
  4941  007CD2  C063  F0D8         	movff	_valor+3,??_correcto+3
  4942                           
  4943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4944                           ; Switch size 1, requested type "simple"
  4945                           ; Number of cases is 1, Range of values is 0 to 0
  4946                           ; switch strategies available:
  4947                           ; Name         Instructions Cycles
  4948                           ; simple_byte            4     3 (average)
  4949                           ;	Chosen strategy is simple_byte
  4950  007CD6  0100               	movlb	0	; () banked
  4951  007CD8  51D8               	movf	(??_correcto+3)& (0+255),w,b
  4952  007CDA  0A00               	xorlw	0	; case 0
  4953  007CDC  B4D8               	btfsc	status,2,c
  4954  007CDE  D019               	goto	l3752
  4955  007CE0  D01C               	goto	l3480
  4956  007CE2                     l3750:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4960                           ; Switch size 1, requested type "simple"
  4961                           ; Number of cases is 1, Range of values is 0 to 0
  4962                           ; switch strategies available:
  4963                           ; Name         Instructions Cycles
  4964                           ; simple_byte            4     3 (average)
  4965                           ;	Chosen strategy is simple_byte
  4966  007CE2  51D6               	movf	(??_correcto+1)& (0+255),w,b
  4967  007CE4  0A00               	xorlw	0	; case 0
  4968  007CE6  A4D8               	btfss	status,2,c
  4969  007CE8  D018               	goto	l3480
  4970                           
  4971                           ; BSR set to: 0
  4972                           ; Switch size 1, requested type "simple"
  4973                           ; Number of cases is 5, Range of values is 35 to 68
  4974                           ; switch strategies available:
  4975                           ; Name         Instructions Cycles
  4976                           ; simple_byte           16     9 (average)
  4977                           ;	Chosen strategy is simple_byte
  4978  007CEA  51D5               	movf	??_correcto& (0+255),w,b
  4979  007CEC  0A23               	xorlw	35	; case 35
  4980  007CEE  B4D8               	btfsc	status,2,c
  4981  007CF0  D7DD               	goto	l3474
  4982  007CF2  0A62               	xorlw	98	; case 65
  4983  007CF4  B4D8               	btfsc	status,2,c
  4984  007CF6  EFFC  F035         	goto	l2912
  4985  007CFA  0A03               	xorlw	3	; case 66
  4986  007CFC  B4D8               	btfsc	status,2,c
  4987  007CFE  EF6B  F036         	goto	l2938
  4988  007D02  0A01               	xorlw	1	; case 67
  4989  007D04  B4D8               	btfsc	status,2,c
  4990  007D06  EF75  F038         	goto	l3074
  4991  007D0A  0A07               	xorlw	7	; case 68
  4992  007D0C  B4D8               	btfsc	status,2,c
  4993  007D0E  D454               	goto	l3240
  4994  007D10  D004               	goto	l3480
  4995  007D12                     l3752:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ; Switch size 1, requested type "simple"
  4999                           ; Number of cases is 1, Range of values is 0 to 0
  5000                           ; switch strategies available:
  5001                           ; Name         Instructions Cycles
  5002                           ; simple_byte            4     3 (average)
  5003                           ;	Chosen strategy is simple_byte
  5004  007D12  51D7               	movf	(??_correcto+2)& (0+255),w,b
  5005  007D14  0A00               	xorlw	0	; case 0
  5006  007D16  B4D8               	btfsc	status,2,c
  5007  007D18  D7E4               	goto	l3750
  5008  007D1A                     l3480:
  5009                           
  5010                           ;Practica6_03_03_19.c: 163:     while(valor!='*'){
  5011  007D1A  0E2A               	movlw	42
  5012  007D1C  0100               	movlb	0	; () banked
  5013  007D1E  1960               	xorwf	_valor& (0+255),w,b
  5014  007D20  1161               	iorwf	(_valor+1)& (0+255),w,b
  5015  007D22  1162               	iorwf	(_valor+2)& (0+255),w,b
  5016  007D24  1163               	iorwf	(_valor+3)& (0+255),w,b
  5017  007D26  B4D8               	btfsc	status,2,c
  5018  007D28  0012               	return	
  5019  007D2A  EFF8  F035         	goto	l2910
  5020  007D2E                     __end_of_correcto:
  5021                           	opt callstack 0
  5022                           
  5023 ;; *************** function _teclado *****************
  5024 ;; Defined at:
  5025 ;;		line 110 in file "Practica6_03_03_19.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_main
  5049 ;;		_incorrecto
  5050 ;;		_correcto
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text3
  5055  006260                     __ptext3:
  5056                           	opt callstack 0
  5057  006260                     _teclado:
  5058                           	opt callstack 30
  5059                           
  5060                           ;Practica6_03_03_19.c: 111:     valor=0;
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;incstack = 0
  5064  006260  0E00               	movlw	0
  5065  006262  0100               	movlb	0	; () banked
  5066  006264  6F60               	movwf	_valor& (0+255),b
  5067  006266  0E00               	movlw	0
  5068  006268  6F61               	movwf	(_valor+1)& (0+255),b
  5069  00626A  0E00               	movlw	0
  5070  00626C  6F62               	movwf	(_valor+2)& (0+255),b
  5071  00626E  0E00               	movlw	0
  5072  006270  6F63               	movwf	(_valor+3)& (0+255),b
  5073                           
  5074                           ;Practica6_03_03_19.c: 112:     PORTB=0xF0;
  5075  006272  0EF0               	movlw	240
  5076  006274  6E81               	movwf	3969,c	;volatile
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;Practica6_03_03_19.c: 113:     if(PORTB != 0xF0){
  5080  006276  0EF0               	movlw	240
  5081  006278  1881               	xorwf	3969,w,c	;volatile
  5082  00627A  B4D8               	btfsc	status,2,c
  5083  00627C  D0A8               	goto	l112
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;Practica6_03_03_19.c: 114:         PORTB=0xFE;
  5087  00627E  0EFE               	movlw	254
  5088  006280  6E81               	movwf	3969,c	;volatile
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;Practica6_03_03_19.c: 115:             if(PORTBbits.RB4==0){valor = '*';}
  5092  006282  B881               	btfsc	3969,4,c	;volatile
  5093  006284  D008               	goto	l2732
  5094                           
  5095                           ; BSR set to: 0
  5096  006286  0E2A               	movlw	42
  5097  006288  6F60               	movwf	_valor& (0+255),b
  5098  00628A  0E00               	movlw	0
  5099  00628C  6F61               	movwf	(_valor+1)& (0+255),b
  5100  00628E  0E00               	movlw	0
  5101  006290  6F62               	movwf	(_valor+2)& (0+255),b
  5102  006292  0E00               	movlw	0
  5103  006294  6F63               	movwf	(_valor+3)& (0+255),b
  5104  006296                     l2732:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;Practica6_03_03_19.c: 116:             if(PORTBbits.RB5==0){valor = '0';}
  5108  006296  BA81               	btfsc	3969,5,c	;volatile
  5109  006298  D008               	goto	l2736
  5110                           
  5111                           ; BSR set to: 0
  5112  00629A  0E30               	movlw	48
  5113  00629C  6F60               	movwf	_valor& (0+255),b
  5114  00629E  0E00               	movlw	0
  5115  0062A0  6F61               	movwf	(_valor+1)& (0+255),b
  5116  0062A2  0E00               	movlw	0
  5117  0062A4  6F62               	movwf	(_valor+2)& (0+255),b
  5118  0062A6  0E00               	movlw	0
  5119  0062A8  6F63               	movwf	(_valor+3)& (0+255),b
  5120  0062AA                     l2736:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;Practica6_03_03_19.c: 117:             if(PORTBbits.RB6==0){valor = '#';}
  5124  0062AA  BC81               	btfsc	3969,6,c	;volatile
  5125  0062AC  D008               	goto	l2740
  5126                           
  5127                           ; BSR set to: 0
  5128  0062AE  0E23               	movlw	35
  5129  0062B0  6F60               	movwf	_valor& (0+255),b
  5130  0062B2  0E00               	movlw	0
  5131  0062B4  6F61               	movwf	(_valor+1)& (0+255),b
  5132  0062B6  0E00               	movlw	0
  5133  0062B8  6F62               	movwf	(_valor+2)& (0+255),b
  5134  0062BA  0E00               	movlw	0
  5135  0062BC  6F63               	movwf	(_valor+3)& (0+255),b
  5136  0062BE                     l2740:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;Practica6_03_03_19.c: 118:             if(PORTBbits.RB7==0){valor = 'D';}
  5140  0062BE  BE81               	btfsc	3969,7,c	;volatile
  5141  0062C0  D008               	goto	l116
  5142                           
  5143                           ; BSR set to: 0
  5144  0062C2  0E44               	movlw	68
  5145  0062C4  6F60               	movwf	_valor& (0+255),b
  5146  0062C6  0E00               	movlw	0
  5147  0062C8  6F61               	movwf	(_valor+1)& (0+255),b
  5148  0062CA  0E00               	movlw	0
  5149  0062CC  6F62               	movwf	(_valor+2)& (0+255),b
  5150  0062CE  0E00               	movlw	0
  5151  0062D0  6F63               	movwf	(_valor+3)& (0+255),b
  5152  0062D2                     l116:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;Practica6_03_03_19.c: 119:         PORTB=0xFD;
  5156  0062D2  0EFD               	movlw	253
  5157  0062D4  6E81               	movwf	3969,c	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;Practica6_03_03_19.c: 120:             if(PORTBbits.RB4==0){valor = '7';}
  5161  0062D6  B881               	btfsc	3969,4,c	;volatile
  5162  0062D8  D008               	goto	l2748
  5163                           
  5164                           ; BSR set to: 0
  5165  0062DA  0E37               	movlw	55
  5166  0062DC  6F60               	movwf	_valor& (0+255),b
  5167  0062DE  0E00               	movlw	0
  5168  0062E0  6F61               	movwf	(_valor+1)& (0+255),b
  5169  0062E2  0E00               	movlw	0
  5170  0062E4  6F62               	movwf	(_valor+2)& (0+255),b
  5171  0062E6  0E00               	movlw	0
  5172  0062E8  6F63               	movwf	(_valor+3)& (0+255),b
  5173  0062EA                     l2748:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;Practica6_03_03_19.c: 121:             if(PORTBbits.RB5==0){valor = '8';}
  5177  0062EA  BA81               	btfsc	3969,5,c	;volatile
  5178  0062EC  D008               	goto	l2752
  5179                           
  5180                           ; BSR set to: 0
  5181  0062EE  0E38               	movlw	56
  5182  0062F0  6F60               	movwf	_valor& (0+255),b
  5183  0062F2  0E00               	movlw	0
  5184  0062F4  6F61               	movwf	(_valor+1)& (0+255),b
  5185  0062F6  0E00               	movlw	0
  5186  0062F8  6F62               	movwf	(_valor+2)& (0+255),b
  5187  0062FA  0E00               	movlw	0
  5188  0062FC  6F63               	movwf	(_valor+3)& (0+255),b
  5189  0062FE                     l2752:
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;Practica6_03_03_19.c: 122:             if(PORTBbits.RB6==0){valor = '9';}
  5193  0062FE  BC81               	btfsc	3969,6,c	;volatile
  5194  006300  D008               	goto	l2756
  5195                           
  5196                           ; BSR set to: 0
  5197  006302  0E39               	movlw	57
  5198  006304  6F60               	movwf	_valor& (0+255),b
  5199  006306  0E00               	movlw	0
  5200  006308  6F61               	movwf	(_valor+1)& (0+255),b
  5201  00630A  0E00               	movlw	0
  5202  00630C  6F62               	movwf	(_valor+2)& (0+255),b
  5203  00630E  0E00               	movlw	0
  5204  006310  6F63               	movwf	(_valor+3)& (0+255),b
  5205  006312                     l2756:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;Practica6_03_03_19.c: 123:             if(PORTBbits.RB7==0){valor = 'C';}
  5209  006312  BE81               	btfsc	3969,7,c	;volatile
  5210  006314  D008               	goto	l120
  5211                           
  5212                           ; BSR set to: 0
  5213  006316  0E43               	movlw	67
  5214  006318  6F60               	movwf	_valor& (0+255),b
  5215  00631A  0E00               	movlw	0
  5216  00631C  6F61               	movwf	(_valor+1)& (0+255),b
  5217  00631E  0E00               	movlw	0
  5218  006320  6F62               	movwf	(_valor+2)& (0+255),b
  5219  006322  0E00               	movlw	0
  5220  006324  6F63               	movwf	(_valor+3)& (0+255),b
  5221  006326                     l120:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;Practica6_03_03_19.c: 124:         PORTB=0xFB;
  5225  006326  0EFB               	movlw	251
  5226  006328  6E81               	movwf	3969,c	;volatile
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;Practica6_03_03_19.c: 125:             if(PORTBbits.RB4==0){valor = '4';}
  5230  00632A  B881               	btfsc	3969,4,c	;volatile
  5231  00632C  D008               	goto	l2764
  5232                           
  5233                           ; BSR set to: 0
  5234  00632E  0E34               	movlw	52
  5235  006330  6F60               	movwf	_valor& (0+255),b
  5236  006332  0E00               	movlw	0
  5237  006334  6F61               	movwf	(_valor+1)& (0+255),b
  5238  006336  0E00               	movlw	0
  5239  006338  6F62               	movwf	(_valor+2)& (0+255),b
  5240  00633A  0E00               	movlw	0
  5241  00633C  6F63               	movwf	(_valor+3)& (0+255),b
  5242  00633E                     l2764:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;Practica6_03_03_19.c: 126:             if(PORTBbits.RB5==0){valor = '5';}
  5246  00633E  BA81               	btfsc	3969,5,c	;volatile
  5247  006340  D008               	goto	l2768
  5248                           
  5249                           ; BSR set to: 0
  5250  006342  0E35               	movlw	53
  5251  006344  6F60               	movwf	_valor& (0+255),b
  5252  006346  0E00               	movlw	0
  5253  006348  6F61               	movwf	(_valor+1)& (0+255),b
  5254  00634A  0E00               	movlw	0
  5255  00634C  6F62               	movwf	(_valor+2)& (0+255),b
  5256  00634E  0E00               	movlw	0
  5257  006350  6F63               	movwf	(_valor+3)& (0+255),b
  5258  006352                     l2768:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;Practica6_03_03_19.c: 127:             if(PORTBbits.RB6==0){valor = '6';}
  5262  006352  BC81               	btfsc	3969,6,c	;volatile
  5263  006354  D008               	goto	l2772
  5264                           
  5265                           ; BSR set to: 0
  5266  006356  0E36               	movlw	54
  5267  006358  6F60               	movwf	_valor& (0+255),b
  5268  00635A  0E00               	movlw	0
  5269  00635C  6F61               	movwf	(_valor+1)& (0+255),b
  5270  00635E  0E00               	movlw	0
  5271  006360  6F62               	movwf	(_valor+2)& (0+255),b
  5272  006362  0E00               	movlw	0
  5273  006364  6F63               	movwf	(_valor+3)& (0+255),b
  5274  006366                     l2772:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;Practica6_03_03_19.c: 128:             if(PORTBbits.RB7==0){valor = 'B';}
  5278  006366  BE81               	btfsc	3969,7,c	;volatile
  5279  006368  D008               	goto	l124
  5280                           
  5281                           ; BSR set to: 0
  5282  00636A  0E42               	movlw	66
  5283  00636C  6F60               	movwf	_valor& (0+255),b
  5284  00636E  0E00               	movlw	0
  5285  006370  6F61               	movwf	(_valor+1)& (0+255),b
  5286  006372  0E00               	movlw	0
  5287  006374  6F62               	movwf	(_valor+2)& (0+255),b
  5288  006376  0E00               	movlw	0
  5289  006378  6F63               	movwf	(_valor+3)& (0+255),b
  5290  00637A                     l124:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;Practica6_03_03_19.c: 129:         PORTB=0xF7;
  5294  00637A  0EF7               	movlw	247
  5295  00637C  6E81               	movwf	3969,c	;volatile
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;Practica6_03_03_19.c: 130:             if(PORTBbits.RB4==0){valor = '1';}
  5299  00637E  B881               	btfsc	3969,4,c	;volatile
  5300  006380  D008               	goto	l2780
  5301                           
  5302                           ; BSR set to: 0
  5303  006382  0E31               	movlw	49
  5304  006384  6F60               	movwf	_valor& (0+255),b
  5305  006386  0E00               	movlw	0
  5306  006388  6F61               	movwf	(_valor+1)& (0+255),b
  5307  00638A  0E00               	movlw	0
  5308  00638C  6F62               	movwf	(_valor+2)& (0+255),b
  5309  00638E  0E00               	movlw	0
  5310  006390  6F63               	movwf	(_valor+3)& (0+255),b
  5311  006392                     l2780:
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;Practica6_03_03_19.c: 131:             if(PORTBbits.RB5==0){valor = '2';}
  5315  006392  BA81               	btfsc	3969,5,c	;volatile
  5316  006394  D008               	goto	l2784
  5317                           
  5318                           ; BSR set to: 0
  5319  006396  0E32               	movlw	50
  5320  006398  6F60               	movwf	_valor& (0+255),b
  5321  00639A  0E00               	movlw	0
  5322  00639C  6F61               	movwf	(_valor+1)& (0+255),b
  5323  00639E  0E00               	movlw	0
  5324  0063A0  6F62               	movwf	(_valor+2)& (0+255),b
  5325  0063A2  0E00               	movlw	0
  5326  0063A4  6F63               	movwf	(_valor+3)& (0+255),b
  5327  0063A6                     l2784:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;Practica6_03_03_19.c: 132:             if(PORTBbits.RB6==0){valor = '3';}
  5331  0063A6  BC81               	btfsc	3969,6,c	;volatile
  5332  0063A8  D008               	goto	l2788
  5333                           
  5334                           ; BSR set to: 0
  5335  0063AA  0E33               	movlw	51
  5336  0063AC  6F60               	movwf	_valor& (0+255),b
  5337  0063AE  0E00               	movlw	0
  5338  0063B0  6F61               	movwf	(_valor+1)& (0+255),b
  5339  0063B2  0E00               	movlw	0
  5340  0063B4  6F62               	movwf	(_valor+2)& (0+255),b
  5341  0063B6  0E00               	movlw	0
  5342  0063B8  6F63               	movwf	(_valor+3)& (0+255),b
  5343  0063BA                     l2788:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;Practica6_03_03_19.c: 133:             if(PORTBbits.RB7==0){valor = 'A';}
  5347  0063BA  BE81               	btfsc	3969,7,c	;volatile
  5348  0063BC  D008               	goto	l112
  5349                           
  5350                           ; BSR set to: 0
  5351  0063BE  0E41               	movlw	65
  5352  0063C0  6F60               	movwf	_valor& (0+255),b
  5353  0063C2  0E00               	movlw	0
  5354  0063C4  6F61               	movwf	(_valor+1)& (0+255),b
  5355  0063C6  0E00               	movlw	0
  5356  0063C8  6F62               	movwf	(_valor+2)& (0+255),b
  5357  0063CA  0E00               	movlw	0
  5358  0063CC  6F63               	movwf	(_valor+3)& (0+255),b
  5359  0063CE                     l112:
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;Practica6_03_03_19.c: 135:     LATB = 0xF0;
  5363  0063CE  0EF0               	movlw	240
  5364  0063D0  6E8A               	movwf	3978,c	;volatile
  5365  0063D2                     l2792:
  5366  0063D2  0EF0               	movlw	240
  5367  0063D4  1881               	xorwf	3969,w,c	;volatile
  5368  0063D6  B4D8               	btfsc	status,2,c
  5369  0063D8  0012               	return	
  5370  0063DA  D7FB               	goto	l2792
  5371  0063DC                     __end_of_teclado:
  5372                           	opt callstack 0
  5373                           
  5374 ;; *************** function _sprintf *****************
  5375 ;; Defined at:
  5376 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  s               2   87[COMRAM] PTR unsigned char 
  5379 ;;		 -> palabra2(17), palabra(17), palabra1(17), 
  5380 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  5381 ;;		 -> STR_52(3), STR_49(3), STR_35(4), STR_24(4), 
  5382 ;;		 -> STR_18(6), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  f               6    4[BANK0 ] struct _IO_FILE
  5385 ;;  ap              2    2[BANK0 ] PTR void [1]
  5386 ;;		 -> ?_sprintf(2), 
  5387 ;;  ret             2    0        int 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2   87[COMRAM] int 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5397 ;;      Params:         8       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         8      10       0       0       0       0       0       0       0
  5401 ;;Total ram usage:       18 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    7
  5404 ;; This function calls:
  5405 ;;		_vfprintf
  5406 ;; This function is called by:
  5407 ;;		_correcto
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text4
  5412  005738                     __ptext4:
  5413                           	opt callstack 0
  5414  005738                     _sprintf:
  5415                           	opt callstack 22
  5416                           
  5417                           ;incstack = 0
  5418  005738  0E5C               	movlw	low (?_sprintf+4)
  5419  00573A  0100               	movlb	0	; () banked
  5420  00573C  6FCD               	movwf	sprintf@ap& (0+255),b
  5421  00573E  0E00               	movlw	high (?_sprintf+4)
  5422  005740  6FCE               	movwf	(sprintf@ap+1)& (0+255),b
  5423  005742  C058  F0CF         	movff	sprintf@s,sprintf@f
  5424  005746  C059  F0D0         	movff	sprintf@s+1,sprintf@f+1
  5425                           
  5426                           ; BSR set to: 0
  5427  00574A  0E00               	movlw	0
  5428  00574C  6FD2               	movwf	(sprintf@f+3)& (0+255),b
  5429  00574E  0E00               	movlw	0
  5430  005750  6FD1               	movwf	(sprintf@f+2)& (0+255),b
  5431                           
  5432                           ; BSR set to: 0
  5433  005752  0E00               	movlw	0
  5434  005754  6FD4               	movwf	(sprintf@f+5)& (0+255),b
  5435  005756  0E00               	movlw	0
  5436  005758  6FD3               	movwf	(sprintf@f+4)& (0+255),b
  5437                           
  5438                           ; BSR set to: 0
  5439  00575A  0ECF               	movlw	low sprintf@f
  5440  00575C  6E50               	movwf	vfprintf@fp,c
  5441  00575E  0E00               	movlw	high sprintf@f
  5442  005760  6E51               	movwf	vfprintf@fp+1,c
  5443  005762  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  5444  005766  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5445  00576A  0ECD               	movlw	low sprintf@ap
  5446  00576C  6E54               	movwf	vfprintf@ap,c
  5447  00576E  0E00               	movlw	high sprintf@ap
  5448  005770  6E55               	movwf	vfprintf@ap+1,c
  5449  005772  ECF0  F02B         	call	_vfprintf	;wreg free
  5450  005776  0100               	movlb	0	; () banked
  5451  005778  51D1               	movf	(sprintf@f+2)& (0+255),w,b
  5452  00577A  2458               	addwf	sprintf@s,w,c
  5453  00577C  6ED9               	movwf	fsr2l,c
  5454  00577E  51D2               	movf	(sprintf@f+3)& (0+255),w,b
  5455  005780  2059               	addwfc	sprintf@s+1,w,c
  5456  005782  6EDA               	movwf	fsr2h,c
  5457  005784  0E00               	movlw	0
  5458  005786  6EDF               	movwf	indf2,c
  5459                           
  5460                           ; BSR set to: 0
  5461  005788  0012               	return		;funcret
  5462  00578A                     __end_of_sprintf:
  5463                           	opt callstack 0
  5464                           
  5465 ;; *************** function _vfprintf *****************
  5466 ;; Defined at:
  5467 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5470 ;;		 -> sprintf@f(6), 
  5471 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5472 ;;		 -> STR_52(3), STR_49(3), STR_35(4), STR_24(4), 
  5473 ;;		 -> STR_18(6), 
  5474 ;;  ap              2   83[COMRAM] PTR PTR void 
  5475 ;;		 -> sprintf@ap(2), 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5478 ;;		 -> STR_52(3), STR_49(3), STR_35(4), STR_24(4), 
  5479 ;;		 -> STR_18(6), 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2   79[COMRAM] int 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5489 ;;      Params:         6       0       0       0       0       0       0       0       0
  5490 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5492 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:        8 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    6
  5496 ;; This function calls:
  5497 ;;		_vfpfcnvrt
  5498 ;; This function is called by:
  5499 ;;		_sprintf
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text5
  5504  0057E0                     __ptext5:
  5505                           	opt callstack 0
  5506  0057E0                     _vfprintf:
  5507                           	opt callstack 22
  5508                           
  5509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;incstack = 0
  5513  0057E0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5514  0057E4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5515                           
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5517  0057E8  0E00               	movlw	0
  5518  0057EA  0100               	movlb	0	; () banked
  5519  0057EC  6F6D               	movwf	(_nout+1)& (0+255),b
  5520  0057EE  0E00               	movlw	0
  5521  0057F0  6F6C               	movwf	_nout& (0+255),b
  5522                           
  5523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5524  0057F2  D013               	goto	l2694
  5525  0057F4                     l2692:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5529  0057F4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5530  0057F8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5531  0057FC  0E56               	movlw	low vfprintf@cfmt
  5532  0057FE  6E42               	movwf	vfpfcnvrt@fmt,c
  5533  005800  0E00               	movlw	high vfprintf@cfmt
  5534  005802  6E43               	movwf	vfpfcnvrt@fmt+1,c
  5535  005804  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5536  005808  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5537  00580C  ECEE  F031         	call	_vfpfcnvrt	;wreg free
  5538  005810  5040               	movf	?_vfpfcnvrt,w,c
  5539  005812  0100               	movlb	0	; () banked
  5540  005814  276C               	addwf	_nout& (0+255),f,b
  5541  005816  5041               	movf	?_vfpfcnvrt+1,w,c
  5542  005818  236D               	addwfc	(_nout+1)& (0+255),f,b
  5543  00581A                     l2694:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5547  00581A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5548  00581E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5549  005822                     	if	0	;tblptru may be non-zero
  5550  005822                     	endif
  5551  005822                     	if	0	;tblptru may be non-zero
  5552  005822                     	endif
  5553  005822  0008               	tblrd		*
  5554  005824  50F5               	movf	tablat,w,c
  5555  005826  0900               	iorlw	0
  5556  005828  A4D8               	btfss	status,2,c
  5557  00582A  D7E4               	goto	l2692
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5561  00582C  C06C  F050         	movff	_nout,?_vfprintf
  5562  005830  C06D  F051         	movff	_nout+1,?_vfprintf+1
  5563                           
  5564                           ; BSR set to: 0
  5565  005834  0012               	return		;funcret
  5566  005836                     __end_of_vfprintf:
  5567                           	opt callstack 0
  5568                           
  5569 ;; *************** function _vfpfcnvrt *****************
  5570 ;; Defined at:
  5571 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5574 ;;		 -> sprintf@f(6), 
  5575 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5576 ;;		 -> vfprintf@cfmt(2), 
  5577 ;;  ap              2   67[COMRAM] PTR PTR void 
  5578 ;;		 -> sprintf@ap(2), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  ll              8   71[COMRAM] long long 
  5581 ;;  llu             8    0        unsigned long long 
  5582 ;;  f               4    0        unsigned long long 
  5583 ;;  vp              3    0        PTR void 
  5584 ;;  ct              3    0        unsigned char [3]
  5585 ;;  cp              3    0        PTR unsigned char 
  5586 ;;  i               2    0        int 
  5587 ;;  done            2    0        int 
  5588 ;;  c               1    0        unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2   63[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5598 ;;      Params:         6       0       0       0       0       0       0       0       0
  5599 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5600 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5601 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5602 ;;Total ram usage:       16 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    5
  5605 ;; This function calls:
  5606 ;;		_dtoa
  5607 ;;		_fputc
  5608 ;; This function is called by:
  5609 ;;		_vfprintf
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text6
  5614  0063DC                     __ptext6:
  5615                           	opt callstack 0
  5616  0063DC                     _vfpfcnvrt:
  5617                           	opt callstack 22
  5618                           
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;incstack = 0
  5623  0063DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5624  0063E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5625  0063E4  CFDE FFF6          	movff	postinc2,tblptrl
  5626  0063E8  CFDD FFF7          	movff	postdec2,tblptrh
  5627  0063EC                     	if	0	;tblptru may be non-zero
  5628  0063EC                     	endif
  5629  0063EC                     	if	0	;tblptru may be non-zero
  5630  0063EC                     	endif
  5631  0063EC  0008               	tblrd		*
  5632  0063EE  50F5               	movf	tablat,w,c
  5633  0063F0  0A25               	xorlw	37
  5634  0063F2  A4D8               	btfss	status,2,c
  5635  0063F4  D09A               	goto	l2654
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5638  0063F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5639  0063FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5640  0063FE  2ADE               	incf	postinc2,f,c
  5641  006400  0E00               	movlw	0
  5642  006402  22DD               	addwfc	postdec2,f,c
  5643                           
  5644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5645  006404  0E00               	movlw	0
  5646  006406  0100               	movlb	0	; () banked
  5647  006408  6F6F               	movwf	(_width+1)& (0+255),b
  5648  00640A  0E00               	movlw	0
  5649  00640C  6F6E               	movwf	_width& (0+255),b
  5650  00640E  C06E  F072         	movff	_width,_flags
  5651  006412  C06F  F073         	movff	_width+1,_flags+1
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5655  006416  6970               	setf	_prec& (0+255),b
  5656  006418  6971               	setf	(_prec+1)& (0+255),b
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5660  00641A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  00641E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  006422  CFDE FFF6          	movff	postinc2,tblptrl
  5663  006426  CFDD FFF7          	movff	postdec2,tblptrh
  5664  00642A                     	if	0	;tblptru may be non-zero
  5665  00642A                     	endif
  5666  00642A                     	if	0	;tblptru may be non-zero
  5667  00642A                     	endif
  5668  00642A  0008               	tblrd		*
  5669  00642C  50F5               	movf	tablat,w,c
  5670  00642E  0A64               	xorlw	100
  5671  006430  B4D8               	btfsc	status,2,c
  5672  006432  D00D               	goto	u1620
  5673                           
  5674                           ; BSR set to: 0
  5675  006434  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5676  006438  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5677  00643C  CFDE FFF6          	movff	postinc2,tblptrl
  5678  006440  CFDD FFF7          	movff	postdec2,tblptrh
  5679  006444                     	if	0	;tblptru may be non-zero
  5680  006444                     	endif
  5681  006444                     	if	0	;tblptru may be non-zero
  5682  006444                     	endif
  5683  006444  0008               	tblrd		*
  5684  006446  50F5               	movf	tablat,w,c
  5685  006448  0A69               	xorlw	105
  5686  00644A  A4D8               	btfss	status,2,c
  5687  00644C  D03F               	goto	l2638
  5688  00644E                     u1620:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5692  00644E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5693  006452  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5694  006456  2ADE               	incf	postinc2,f,c
  5695  006458  0E00               	movlw	0
  5696  00645A  22DD               	addwfc	postdec2,f,c
  5697                           
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5699  00645C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5700  006460  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5701  006464  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5702  006468  0E02               	movlw	2
  5703  00646A  26DE               	addwf	postinc2,f,c
  5704  00646C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5705  006470  0E00               	movlw	0
  5706  006472  22DD               	addwfc	postdec2,f,c
  5707  006474  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5708  006478  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5709  00647C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5710  006480  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5711  006484  0E00               	movlw	0
  5712  006486  BE49               	btfsc	vfpfcnvrt@ll+1,7,c
  5713  006488  0EFF               	movlw	-1
  5714  00648A  6E4A               	movwf	vfpfcnvrt@ll+2,c
  5715  00648C  6E4B               	movwf	vfpfcnvrt@ll+3,c
  5716  00648E  6E4C               	movwf	vfpfcnvrt@ll+4,c
  5717  006490  6E4D               	movwf	vfpfcnvrt@ll+5,c
  5718  006492  6E4E               	movwf	vfpfcnvrt@ll+6,c
  5719  006494  6E4F               	movwf	vfpfcnvrt@ll+7,c
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5723  006496  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5724  00649A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5725  00649E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5726  0064A2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5727  0064A6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5728  0064AA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5729  0064AE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5730  0064B2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5731  0064B6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5732  0064BA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5733  0064BE  ECAF  F032         	call	_dtoa	;wreg free
  5734  0064C2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5735  0064C6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5736  0064CA  0012               	return	
  5737  0064CC                     l2638:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5741  0064CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5742  0064D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5743  0064D4  CFDE FFF6          	movff	postinc2,tblptrl
  5744  0064D8  CFDD FFF7          	movff	postdec2,tblptrh
  5745  0064DC                     	if	0	;tblptru may be non-zero
  5746  0064DC                     	endif
  5747  0064DC                     	if	0	;tblptru may be non-zero
  5748  0064DC                     	endif
  5749  0064DC  0008               	tblrd		*
  5750  0064DE  50F5               	movf	tablat,w,c
  5751  0064E0  0A25               	xorlw	37
  5752  0064E2  A4D8               	btfss	status,2,c
  5753  0064E4  D016               	goto	l2648
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5757  0064E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5758  0064EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5759  0064EE  2ADE               	incf	postinc2,f,c
  5760  0064F0  0E00               	movlw	0
  5761  0064F2  22DD               	addwfc	postdec2,f,c
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5765  0064F4  0E00               	movlw	0
  5766  0064F6  6E02               	movwf	fputc@c+1,c
  5767  0064F8  0E25               	movlw	37
  5768  0064FA  6E01               	movwf	fputc@c,c
  5769  0064FC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5770  006500  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5771  006504  ECDB  F02C         	call	_fputc	;wreg free
  5772  006508                     l2644:
  5773                           
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5775  006508  0E00               	movlw	0
  5776  00650A  6E41               	movwf	?_vfpfcnvrt+1,c
  5777  00650C  0E01               	movlw	1
  5778  00650E  6E40               	movwf	?_vfpfcnvrt,c
  5779  006510  0012               	return	
  5780  006512                     l2648:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5784  006512  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5785  006516  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5786  00651A  2ADE               	incf	postinc2,f,c
  5787  00651C  0E00               	movlw	0
  5788  00651E  22DD               	addwfc	postdec2,f,c
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5792  006520  0E00               	movlw	0
  5793  006522  6E41               	movwf	?_vfpfcnvrt+1,c
  5794  006524  0E00               	movlw	0
  5795  006526  6E40               	movwf	?_vfpfcnvrt,c
  5796  006528  0012               	return	
  5797  00652A                     l2654:
  5798                           
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5800  00652A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5801  00652E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5802  006532  CFDE FFF6          	movff	postinc2,tblptrl
  5803  006536  CFDD FFF7          	movff	postdec2,tblptrh
  5804  00653A                     	if	0	;tblptru may be non-zero
  5805  00653A                     	endif
  5806  00653A                     	if	0	;tblptru may be non-zero
  5807  00653A                     	endif
  5808  00653A  0008               	tblrd		*
  5809  00653C  50F5               	movf	tablat,w,c
  5810  00653E  6E01               	movwf	fputc@c,c
  5811  006540  6A02               	clrf	fputc@c+1,c
  5812  006542  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5813  006546  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5814  00654A  ECDB  F02C         	call	_fputc	;wreg free
  5815                           
  5816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5817  00654E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5818  006552  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5819  006556  2ADE               	incf	postinc2,f,c
  5820  006558  0E00               	movlw	0
  5821  00655A  22DD               	addwfc	postdec2,f,c
  5822  00655C  D7D5               	goto	l2644
  5823  00655E                     __end_of_vfpfcnvrt:
  5824                           	opt callstack 0
  5825                           
  5826 ;; *************** function _dtoa *****************
  5827 ;; Defined at:
  5828 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5831 ;;		 -> sprintf@f(6), 
  5832 ;;  d               8   29[COMRAM] long long 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  n               8   53[COMRAM] long long 
  5835 ;;  i               2   61[COMRAM] int 
  5836 ;;  s               2   51[COMRAM] int 
  5837 ;;  w               2   49[COMRAM] int 
  5838 ;;  p               2   47[COMRAM] int 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2   27[COMRAM] int 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5848 ;;      Params:        10       0       0       0       0       0       0       0       0
  5849 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5850 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5851 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5852 ;;Total ram usage:       36 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    4
  5855 ;; This function calls:
  5856 ;;		___aodiv
  5857 ;;		___aomod
  5858 ;;		_abs
  5859 ;;		_pad
  5860 ;; This function is called by:
  5861 ;;		_vfpfcnvrt
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text7
  5866  00655E                     __ptext7:
  5867                           	opt callstack 0
  5868  00655E                     _dtoa:
  5869                           	opt callstack 22
  5870                           
  5871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5872                           
  5873                           ;incstack = 0
  5874  00655E  C01E  F036         	movff	dtoa@d,dtoa@n
  5875  006562  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5876  006566  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5877  00656A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5878  00656E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5879  006572  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5880  006576  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5881  00657A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5882                           
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5884  00657E  AE3D               	btfss	dtoa@n+7,7,c
  5885  006580  D002               	goto	u1390
  5886  006582  0E01               	movlw	1
  5887  006584  D001               	goto	u1400
  5888  006586                     u1390:
  5889  006586  0E00               	movlw	0
  5890  006588                     u1400:
  5891  006588  6E34               	movwf	dtoa@s,c
  5892  00658A  6A35               	clrf	dtoa@s+1,c
  5893                           
  5894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5895  00658C  5034               	movf	dtoa@s,w,c
  5896  00658E  1035               	iorwf	dtoa@s+1,w,c
  5897  006590  B4D8               	btfsc	status,2,c
  5898  006592  D010               	goto	l2518
  5899                           
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5901  006594  1E3D               	comf	dtoa@n+7,f,c
  5902  006596  1E3C               	comf	dtoa@n+6,f,c
  5903  006598  1E3B               	comf	dtoa@n+5,f,c
  5904  00659A  1E3A               	comf	dtoa@n+4,f,c
  5905  00659C  1E39               	comf	dtoa@n+3,f,c
  5906  00659E  1E38               	comf	dtoa@n+2,f,c
  5907  0065A0  1E37               	comf	dtoa@n+1,f,c
  5908  0065A2  6C36               	negf	dtoa@n,c
  5909  0065A4  0E00               	movlw	0
  5910  0065A6  2237               	addwfc	dtoa@n+1,f,c
  5911  0065A8  2238               	addwfc	dtoa@n+2,f,c
  5912  0065AA  2239               	addwfc	dtoa@n+3,f,c
  5913  0065AC  223A               	addwfc	dtoa@n+4,f,c
  5914  0065AE  223B               	addwfc	dtoa@n+5,f,c
  5915  0065B0  223C               	addwfc	dtoa@n+6,f,c
  5916  0065B2  223D               	addwfc	dtoa@n+7,f,c
  5917  0065B4                     l2518:
  5918                           
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5920  0065B4  0100               	movlb	0	; () banked
  5921  0065B6  AF71               	btfss	(_prec+1)& (0+255),7,b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5925  0065B8  9372               	bcf	_flags& (0+255),1,b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5929  0065BA  BF71               	btfsc	(_prec+1)& (0+255),7,b
  5930  0065BC  D005               	goto	u1430
  5931  0065BE  5171               	movf	(_prec+1)& (0+255),w,b
  5932  0065C0  E108               	bnz	l245
  5933  0065C2  0570               	decf	_prec& (0+255),w,b
  5934  0065C4  B0D8               	btfsc	status,0,c
  5935  0065C6  D005               	goto	l245
  5936  0065C8                     u1430:
  5937                           
  5938                           ; BSR set to: 0
  5939  0065C8  0E00               	movlw	0
  5940  0065CA  6E31               	movwf	dtoa@p+1,c
  5941  0065CC  0E01               	movlw	1
  5942  0065CE  6E30               	movwf	dtoa@p,c
  5943  0065D0  D004               	goto	l247
  5944  0065D2                     l245:
  5945                           
  5946                           ; BSR set to: 0
  5947  0065D2  C070  F030         	movff	_prec,dtoa@p
  5948  0065D6  C071  F031         	movff	_prec+1,dtoa@p+1
  5949  0065DA                     l247:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5953  0065DA  C06E  F032         	movff	_width,dtoa@w
  5954  0065DE  C06F  F033         	movff	_width+1,dtoa@w+1
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5958  0065E2  5034               	movf	dtoa@s,w,c
  5959  0065E4  1035               	iorwf	dtoa@s+1,w,c
  5960  0065E6  A4D8               	btfss	status,2,c
  5961  0065E8  D002               	goto	u1450
  5962                           
  5963                           ; BSR set to: 0
  5964  0065EA  A572               	btfss	_flags& (0+255),2,b
  5965  0065EC  D003               	goto	l2532
  5966  0065EE                     u1450:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5970  0065EE  0632               	decf	dtoa@w,f,c
  5971  0065F0  A0D8               	btfss	status,0,c
  5972  0065F2  0633               	decf	dtoa@w+1,f,c
  5973  0065F4                     l2532:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5977  0065F4  0E00               	movlw	0
  5978  0065F6  6E3F               	movwf	dtoa@i+1,c
  5979  0065F8  0E1F               	movlw	31
  5980  0065FA  6E3E               	movwf	dtoa@i,c
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5984  0065FC  0E00               	movlw	0
  5985  0065FE  6F97               	movwf	(_dbuf+31)& (0+255),b
  5986                           
  5987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5988  006600  D07C               	goto	l2546
  5989  006602                     l2536:
  5990                           
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5992  006602  063E               	decf	dtoa@i,f,c
  5993  006604  A0D8               	btfss	status,0,c
  5994  006606  063F               	decf	dtoa@i+1,f,c
  5995                           
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5997  006608  0E78               	movlw	low _dbuf
  5998  00660A  243E               	addwf	dtoa@i,w,c
  5999  00660C  6ED9               	movwf	fsr2l,c
  6000  00660E  0E00               	movlw	high _dbuf
  6001  006610  203F               	addwfc	dtoa@i+1,w,c
  6002  006612  6EDA               	movwf	fsr2h,c
  6003  006614  C036  F001         	movff	dtoa@n,___aomod@dividend
  6004  006618  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6005  00661C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6006  006620  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6007  006624  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6008  006628  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6009  00662C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6010  006630  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6011  006634  0E0A               	movlw	10
  6012  006636  6E09               	movwf	___aomod@divisor,c
  6013  006638  0E00               	movlw	0
  6014  00663A  6E0A               	movwf	___aomod@divisor+1,c
  6015  00663C  0E00               	movlw	0
  6016  00663E  6E0B               	movwf	___aomod@divisor+2,c
  6017  006640  0E00               	movlw	0
  6018  006642  6E0C               	movwf	___aomod@divisor+3,c
  6019  006644  0E00               	movlw	0
  6020  006646  6E0D               	movwf	___aomod@divisor+4,c
  6021  006648  0E00               	movlw	0
  6022  00664A  6E0E               	movwf	___aomod@divisor+5,c
  6023  00664C  0E00               	movlw	0
  6024  00664E  6E0F               	movwf	___aomod@divisor+6,c
  6025  006650  0E00               	movlw	0
  6026  006652  6E10               	movwf	___aomod@divisor+7,c
  6027  006654  ECBE  F02E         	call	___aomod	;wreg free
  6028  006658  C001  F026         	movff	?___aomod,??_dtoa
  6029  00665C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6030  006660  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6031  006664  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6032  006668  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6033  00666C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6034  006670  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6035  006674  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6036  006678  C026  F013         	movff	??_dtoa,abs@a
  6037  00667C  C028  F014         	movff	??_dtoa+2,abs@a+1
  6038  006680  EC67  F02B         	call	_abs	;wreg free
  6039  006684  5013               	movf	?_abs,w,c
  6040  006686  0F30               	addlw	48
  6041  006688  6EDF               	movwf	indf2,c
  6042                           
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6044  00668A  0630               	decf	dtoa@p,f,c
  6045  00668C  A0D8               	btfss	status,0,c
  6046  00668E  0631               	decf	dtoa@p+1,f,c
  6047                           
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6049  006690  0632               	decf	dtoa@w,f,c
  6050  006692  A0D8               	btfss	status,0,c
  6051  006694  0633               	decf	dtoa@w+1,f,c
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6054  006696  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6055  00669A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6056  00669E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6057  0066A2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6058  0066A6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6059  0066AA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6060  0066AE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6061  0066B2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6062  0066B6  0E0A               	movlw	10
  6063  0066B8  6E09               	movwf	___aodiv@divisor,c
  6064  0066BA  0E00               	movlw	0
  6065  0066BC  6E0A               	movwf	___aodiv@divisor+1,c
  6066  0066BE  0E00               	movlw	0
  6067  0066C0  6E0B               	movwf	___aodiv@divisor+2,c
  6068  0066C2  0E00               	movlw	0
  6069  0066C4  6E0C               	movwf	___aodiv@divisor+3,c
  6070  0066C6  0E00               	movlw	0
  6071  0066C8  6E0D               	movwf	___aodiv@divisor+4,c
  6072  0066CA  0E00               	movlw	0
  6073  0066CC  6E0E               	movwf	___aodiv@divisor+5,c
  6074  0066CE  0E00               	movlw	0
  6075  0066D0  6E0F               	movwf	___aodiv@divisor+6,c
  6076  0066D2  0E00               	movlw	0
  6077  0066D4  6E10               	movwf	___aodiv@divisor+7,c
  6078  0066D6  ECE4  F02F         	call	___aodiv	;wreg free
  6079  0066DA  C001  F036         	movff	?___aodiv,dtoa@n
  6080  0066DE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6081  0066E2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6082  0066E6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6083  0066EA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6084  0066EE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6085  0066F2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6086  0066F6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6087  0066FA                     l2546:
  6088                           
  6089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6090  0066FA  BE3F               	btfsc	dtoa@i+1,7,c
  6091  0066FC  D020               	goto	u1500
  6092  0066FE  503F               	movf	dtoa@i+1,w,c
  6093  006700  E103               	bnz	u1460
  6094  006702  043E               	decf	dtoa@i,w,c
  6095  006704  A0D8               	btfss	status,0,c
  6096  006706  D01B               	goto	u1500
  6097  006708                     u1460:
  6098  006708  5036               	movf	dtoa@n,w,c
  6099  00670A  1037               	iorwf	dtoa@n+1,w,c
  6100  00670C  1038               	iorwf	dtoa@n+2,w,c
  6101  00670E  1039               	iorwf	dtoa@n+3,w,c
  6102  006710  103A               	iorwf	dtoa@n+4,w,c
  6103  006712  103B               	iorwf	dtoa@n+5,w,c
  6104  006714  103C               	iorwf	dtoa@n+6,w,c
  6105  006716  103D               	iorwf	dtoa@n+7,w,c
  6106  006718  A4D8               	btfss	status,2,c
  6107  00671A  D773               	goto	l2536
  6108  00671C  BE31               	btfsc	dtoa@p+1,7,c
  6109  00671E  D005               	goto	u1480
  6110  006720  5031               	movf	dtoa@p+1,w,c
  6111  006722  E102               	bnz	u1481
  6112  006724  0430               	decf	dtoa@p,w,c
  6113  006726  B0D8               	btfsc	status,0,c
  6114  006728                     u1481:
  6115  006728  D76C               	goto	l2536
  6116  00672A                     u1480:
  6117  00672A  BE33               	btfsc	dtoa@w+1,7,c
  6118  00672C  D008               	goto	u1500
  6119  00672E  5033               	movf	dtoa@w+1,w,c
  6120  006730  E103               	bnz	u1490
  6121  006732  0432               	decf	dtoa@w,w,c
  6122  006734  A0D8               	btfss	status,0,c
  6123  006736  D003               	goto	u1500
  6124  006738                     u1490:
  6125  006738  0100               	movlb	0	; () banked
  6126  00673A  B372               	btfsc	_flags& (0+255),1,b
  6127  00673C  D762               	goto	l2536
  6128  00673E                     u1500:
  6129                           
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6131  00673E  5034               	movf	dtoa@s,w,c
  6132  006740  1035               	iorwf	dtoa@s+1,w,c
  6133  006742  A4D8               	btfss	status,2,c
  6134  006744  D003               	goto	u1520
  6135  006746  0100               	movlb	0	; () banked
  6136  006748  A572               	btfss	_flags& (0+255),2,b
  6137  00674A  D017               	goto	l2570
  6138  00674C                     u1520:
  6139                           
  6140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6141  00674C  063E               	decf	dtoa@i,f,c
  6142  00674E  A0D8               	btfss	status,0,c
  6143  006750  063F               	decf	dtoa@i+1,f,c
  6144                           
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6146  006752  5034               	movf	dtoa@s,w,c
  6147  006754  1035               	iorwf	dtoa@s+1,w,c
  6148  006756  A4D8               	btfss	status,2,c
  6149  006758  D004               	goto	l2566
  6150  00675A  0E00               	movlw	0
  6151  00675C  6E2F               	movwf	_dtoa$423+1,c
  6152  00675E  0E2B               	movlw	43
  6153  006760  D003               	goto	L1
  6154  006762                     l2566:
  6155  006762  0E00               	movlw	0
  6156  006764  6E2F               	movwf	_dtoa$423+1,c
  6157  006766  0E2D               	movlw	45
  6158  006768                     L1:
  6159  006768  6E2E               	movwf	_dtoa$423,c
  6160  00676A  0E78               	movlw	low _dbuf
  6161  00676C  243E               	addwf	dtoa@i,w,c
  6162  00676E  6ED9               	movwf	fsr2l,c
  6163  006770  0E00               	movlw	high _dbuf
  6164  006772  203F               	addwfc	dtoa@i+1,w,c
  6165  006774  6EDA               	movwf	fsr2h,c
  6166  006776  C02E  FFDF         	movff	_dtoa$423,indf2
  6167  00677A                     l2570:
  6168                           
  6169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6170  00677A  C01C  F011         	movff	dtoa@fp,pad@fp
  6171  00677E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6172  006782  0E78               	movlw	low _dbuf
  6173  006784  243E               	addwf	dtoa@i,w,c
  6174  006786  6E13               	movwf	pad@buf,c
  6175  006788  0E00               	movlw	high _dbuf
  6176  00678A  203F               	addwfc	dtoa@i+1,w,c
  6177  00678C  6E14               	movwf	pad@buf+1,c
  6178  00678E  C032  F015         	movff	dtoa@w,pad@p
  6179  006792  C033  F016         	movff	dtoa@w+1,pad@p+1
  6180  006796  EC8E  F02C         	call	_pad	;wreg free
  6181  00679A  C011  F01C         	movff	?_pad,?_dtoa
  6182  00679E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6183  0067A2  0012               	return		;funcret
  6184  0067A4                     __end_of_dtoa:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function _pad *****************
  6188 ;; Defined at:
  6189 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6192 ;;		 -> sprintf@f(6), 
  6193 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6194 ;;		 -> dbuf(32), 
  6195 ;;  p               2   20[COMRAM] int 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  w               2   25[COMRAM] int 
  6198 ;;  i               2   23[COMRAM] int 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  2   16[COMRAM] int 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6208 ;;      Params:         6       0       0       0       0       0       0       0       0
  6209 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6210 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6211 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6212 ;;Total ram usage:       11 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    3
  6215 ;; This function calls:
  6216 ;;		_fputc
  6217 ;;		_fputs
  6218 ;;		_strlen
  6219 ;; This function is called by:
  6220 ;;		_dtoa
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text8
  6225  00591C                     __ptext8:
  6226                           	opt callstack 0
  6227  00591C                     _pad:
  6228                           	opt callstack 22
  6229                           
  6230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6231                           
  6232                           ;incstack = 0
  6233  00591C  0100               	movlb	0	; () banked
  6234  00591E  A172               	btfss	_flags& (0+255),0,b
  6235  005920  D00A               	goto	l2410
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6239  005922  C013  F00A         	movff	pad@buf,fputs@s
  6240  005926  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6241  00592A  C011  F00C         	movff	pad@fp,fputs@fp
  6242  00592E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6243  005932  EC80  F02B         	call	_fputs	;wreg free
  6244  005936                     l2410:
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6247  005936  BE16               	btfsc	pad@p+1,7,c
  6248  005938  D005               	goto	l2414
  6249  00593A  C015  F01A         	movff	pad@p,pad@w
  6250  00593E  C016  F01B         	movff	pad@p+1,pad@w+1
  6251  005942  D004               	goto	l234
  6252  005944                     l2414:
  6253  005944  0E00               	movlw	0
  6254  005946  6E1B               	movwf	pad@w+1,c
  6255  005948  0E00               	movlw	0
  6256  00594A  6E1A               	movwf	pad@w,c
  6257  00594C                     l234:
  6258                           
  6259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6260  00594C  0E00               	movlw	0
  6261  00594E  6E19               	movwf	pad@i+1,c
  6262  005950  0E00               	movlw	0
  6263  005952  6E18               	movwf	pad@i,c
  6264                           
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6266  005954  D00C               	goto	l2420
  6267  005956                     l2416:
  6268                           
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6270  005956  0E00               	movlw	0
  6271  005958  6E02               	movwf	fputc@c+1,c
  6272  00595A  0E20               	movlw	32
  6273  00595C  6E01               	movwf	fputc@c,c
  6274  00595E  C011  F003         	movff	pad@fp,fputc@fp
  6275  005962  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6276  005966  ECDB  F02C         	call	_fputc	;wreg free
  6277                           
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6279  00596A  4A18               	infsnz	pad@i,f,c
  6280  00596C  2A19               	incf	pad@i+1,f,c
  6281  00596E                     l2420:
  6282                           
  6283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6284  00596E  501A               	movf	pad@w,w,c
  6285  005970  5C18               	subwf	pad@i,w,c
  6286  005972  5019               	movf	pad@i+1,w,c
  6287  005974  0A80               	xorlw	128
  6288  005976  6E17               	movwf	??_pad& (0+255),c
  6289  005978  501B               	movf	pad@w+1,w,c
  6290  00597A  0A80               	xorlw	128
  6291  00597C  5817               	subwfb	??_pad& (0+255),w,c
  6292  00597E  A0D8               	btfss	status,0,c
  6293  005980  D7EA               	goto	l2416
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6296  005982  0100               	movlb	0	; () banked
  6297  005984  B172               	btfsc	_flags& (0+255),0,b
  6298  005986  D00A               	goto	l2424
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6302  005988  C013  F00A         	movff	pad@buf,fputs@s
  6303  00598C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6304  005990  C011  F00C         	movff	pad@fp,fputs@fp
  6305  005994  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6306  005998  EC80  F02B         	call	_fputs	;wreg free
  6307  00599C                     l2424:
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6310  00599C  C013  F001         	movff	pad@buf,strlen@s
  6311  0059A0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6312  0059A4  EC52  F02B         	call	_strlen	;wreg free
  6313  0059A8  501A               	movf	pad@w,w,c
  6314  0059AA  2401               	addwf	?_strlen,w,c
  6315  0059AC  6E11               	movwf	?_pad,c
  6316  0059AE  501B               	movf	pad@w+1,w,c
  6317  0059B0  2002               	addwfc	?_strlen+1,w,c
  6318  0059B2  6E12               	movwf	?_pad+1,c
  6319  0059B4  0012               	return		;funcret
  6320  0059B6                     __end_of_pad:
  6321                           	opt callstack 0
  6322                           
  6323 ;; *************** function _strlen *****************
  6324 ;; Defined at:
  6325 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6328 ;;		 -> dbuf(32), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6331 ;;		 -> dbuf(32), 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2    0[COMRAM] unsigned int 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6341 ;;      Params:         2       0       0       0       0       0       0       0       0
  6342 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6344 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6345 ;;Total ram usage:        4 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_pad
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text9
  6355  0056A4                     __ptext9:
  6356                           	opt callstack 0
  6357  0056A4                     _strlen:
  6358                           	opt callstack 24
  6359                           
  6360                           ;incstack = 0
  6361  0056A4  C001  F003         	movff	strlen@s,strlen@a
  6362  0056A8  C002  F004         	movff	strlen@s+1,strlen@a+1
  6363  0056AC  D002               	goto	l2400
  6364  0056AE                     l2398:
  6365  0056AE  4A01               	infsnz	strlen@s,f,c
  6366  0056B0  2A02               	incf	strlen@s+1,f,c
  6367  0056B2                     l2400:
  6368  0056B2  C001  FFD9         	movff	strlen@s,fsr2l
  6369  0056B6  C002  FFDA         	movff	strlen@s+1,fsr2h
  6370  0056BA  50DF               	movf	indf2,w,c
  6371  0056BC  A4D8               	btfss	status,2,c
  6372  0056BE  D7F7               	goto	l2398
  6373  0056C0  5003               	movf	strlen@a,w,c
  6374  0056C2  5C01               	subwf	strlen@s,w,c
  6375  0056C4  6E01               	movwf	?_strlen,c
  6376  0056C6  5004               	movf	strlen@a+1,w,c
  6377  0056C8  5802               	subwfb	strlen@s+1,w,c
  6378  0056CA  6E02               	movwf	?_strlen+1,c
  6379  0056CC  0012               	return		;funcret
  6380  0056CE                     __end_of_strlen:
  6381                           	opt callstack 0
  6382                           
  6383 ;; *************** function _fputs *****************
  6384 ;; Defined at:
  6385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6388 ;;		 -> dbuf(32), 
  6389 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6390 ;;		 -> sprintf@f(6), 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  i               2   14[COMRAM] int 
  6393 ;;  c               1   13[COMRAM] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  2    9[COMRAM] int 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6403 ;;      Params:         4       0       0       0       0       0       0       0       0
  6404 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6406 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        7 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    2
  6410 ;; This function calls:
  6411 ;;		_fputc
  6412 ;; This function is called by:
  6413 ;;		_pad
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text10
  6418  005700                     __ptext10:
  6419                           	opt callstack 0
  6420  005700                     _fputs:
  6421                           	opt callstack 22
  6422                           
  6423                           ;incstack = 0
  6424  005700  0E00               	movlw	0
  6425  005702  6E10               	movwf	fputs@i+1,c
  6426  005704  0E00               	movlw	0
  6427  005706  6E0F               	movwf	fputs@i,c
  6428  005708  D00B               	goto	l2394
  6429  00570A                     l2390:
  6430  00570A  C00E  F001         	movff	fputs@c,fputc@c
  6431  00570E  6A02               	clrf	fputc@c+1,c
  6432  005710  C00C  F003         	movff	fputs@fp,fputc@fp
  6433  005714  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6434  005718  ECDB  F02C         	call	_fputc	;wreg free
  6435  00571C  4A0F               	infsnz	fputs@i,f,c
  6436  00571E  2A10               	incf	fputs@i+1,f,c
  6437  005720                     l2394:
  6438  005720  500F               	movf	fputs@i,w,c
  6439  005722  240A               	addwf	fputs@s,w,c
  6440  005724  6ED9               	movwf	fsr2l,c
  6441  005726  5010               	movf	fputs@i+1,w,c
  6442  005728  200B               	addwfc	fputs@s+1,w,c
  6443  00572A  6EDA               	movwf	fsr2h,c
  6444  00572C  50DF               	movf	indf2,w,c
  6445  00572E  6E0E               	movwf	fputs@c,c
  6446  005730  500E               	movf	fputs@c,w,c
  6447  005732  B4D8               	btfsc	status,2,c
  6448  005734  0012               	return	
  6449  005736  D7E9               	goto	l2390
  6450  005738                     __end_of_fputs:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function _fputc *****************
  6454 ;; Defined at:
  6455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  c               2    0[COMRAM] int 
  6458 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6459 ;;		 -> sprintf@f(6), 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  2    0[COMRAM] int 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6471 ;;      Params:         4       0       0       0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6473 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6474 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6475 ;;Total ram usage:        9 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    1
  6478 ;; This function calls:
  6479 ;;		_putch
  6480 ;; This function is called by:
  6481 ;;		_pad
  6482 ;;		_vfpfcnvrt
  6483 ;;		_fputs
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text11
  6488  0059B6                     __ptext11:
  6489                           	opt callstack 0
  6490  0059B6                     _fputc:
  6491                           	opt callstack 25
  6492                           
  6493                           ;incstack = 0
  6494  0059B6  5003               	movf	fputc@fp,w,c
  6495  0059B8  1004               	iorwf	fputc@fp+1,w,c
  6496  0059BA  B4D8               	btfsc	status,2,c
  6497  0059BC  D004               	goto	u1160
  6498  0059BE  5003               	movf	fputc@fp,w,c
  6499  0059C0  1004               	iorwf	fputc@fp+1,w,c
  6500  0059C2  A4D8               	btfss	status,2,c
  6501  0059C4  D004               	goto	l2380
  6502  0059C6                     u1160:
  6503  0059C6  5001               	movf	fputc@c,w,c
  6504  0059C8  EC46  F02B         	call	_putch
  6505  0059CC  0012               	return	
  6506  0059CE                     l2380:
  6507  0059CE  EE20 F004          	lfsr	2,4
  6508  0059D2  5003               	movf	fputc@fp,w,c
  6509  0059D4  26D9               	addwf	fsr2l,f,c
  6510  0059D6  5004               	movf	fputc@fp+1,w,c
  6511  0059D8  22DA               	addwfc	fsr2h,f,c
  6512  0059DA  50DE               	movf	postinc2,w,c
  6513  0059DC  10DE               	iorwf	postinc2,w,c
  6514  0059DE  B4D8               	btfsc	status,2,c
  6515  0059E0  D016               	goto	u1180
  6516  0059E2  EE20 F004          	lfsr	2,4
  6517  0059E6  5003               	movf	fputc@fp,w,c
  6518  0059E8  26D9               	addwf	fsr2l,f,c
  6519  0059EA  5004               	movf	fputc@fp+1,w,c
  6520  0059EC  22DA               	addwfc	fsr2h,f,c
  6521  0059EE  EE10 F002          	lfsr	1,2
  6522  0059F2  5003               	movf	fputc@fp,w,c
  6523  0059F4  26E1               	addwf	fsr1l,f,c
  6524  0059F6  5004               	movf	fputc@fp+1,w,c
  6525  0059F8  22E2               	addwfc	fsr1h,f,c
  6526  0059FA  50DE               	movf	postinc2,w,c
  6527  0059FC  5CE6               	subwf	postinc1,w,c
  6528  0059FE  50E6               	movf	postinc1,w,c
  6529  005A00  0A80               	xorlw	128
  6530  005A02  6E09               	movwf	(??_fputc+4)& (0+255),c
  6531  005A04  50DE               	movf	postinc2,w,c
  6532  005A06  0A80               	xorlw	128
  6533  005A08  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6534  005A0A  B0D8               	btfsc	status,0,c
  6535  005A0C  0012               	return	
  6536  005A0E                     u1180:
  6537  005A0E  EE20 F002          	lfsr	2,2
  6538  005A12  5003               	movf	fputc@fp,w,c
  6539  005A14  26D9               	addwf	fsr2l,f,c
  6540  005A16  5004               	movf	fputc@fp+1,w,c
  6541  005A18  22DA               	addwfc	fsr2h,f,c
  6542  005A1A  CFDE F005          	movff	postinc2,??_fputc
  6543  005A1E  CFDD F006          	movff	postdec2,??_fputc+1
  6544  005A22  C003  FFD9         	movff	fputc@fp,fsr2l
  6545  005A26  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6546  005A2A  CFDE F007          	movff	postinc2,??_fputc+2
  6547  005A2E  CFDD F008          	movff	postdec2,??_fputc+3
  6548  005A32  5005               	movf	??_fputc,w,c
  6549  005A34  2407               	addwf	??_fputc+2,w,c
  6550  005A36  6ED9               	movwf	fsr2l,c
  6551  005A38  5006               	movf	??_fputc+1,w,c
  6552  005A3A  2008               	addwfc	??_fputc+3,w,c
  6553  005A3C  6EDA               	movwf	fsr2h,c
  6554  005A3E  C001  FFDF         	movff	fputc@c,indf2
  6555  005A42  EE20 F002          	lfsr	2,2
  6556  005A46  5003               	movf	fputc@fp,w,c
  6557  005A48  26D9               	addwf	fsr2l,f,c
  6558  005A4A  5004               	movf	fputc@fp+1,w,c
  6559  005A4C  22DA               	addwfc	fsr2h,f,c
  6560  005A4E  2ADE               	incf	postinc2,f,c
  6561  005A50  0E00               	movlw	0
  6562  005A52  22DD               	addwfc	postdec2,f,c
  6563  005A54  0012               	return		;funcret
  6564  005A56                     __end_of_fputc:
  6565                           	opt callstack 0
  6566                           
  6567 ;; *************** function _putch *****************
  6568 ;; Defined at:
  6569 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  c               1    wreg     unsigned char 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  c               1    0[COMRAM] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_fputc
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text12
  6597  00568C                     __ptext12:
  6598                           	opt callstack 0
  6599  00568C                     _putch:
  6600                           	opt callstack 25
  6601                           
  6602                           ;incstack = 0
  6603  00568C  0012               	return		;funcret
  6604  00568E                     __end_of_putch:
  6605                           	opt callstack 0
  6606                           
  6607 ;; *************** function _abs *****************
  6608 ;; Defined at:
  6609 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  a               2   18[COMRAM] int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2   18[COMRAM] int 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6623 ;;      Params:         2       0       0       0       0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6625 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6626 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_dtoa
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text13
  6637  0056CE                     __ptext13:
  6638                           	opt callstack 0
  6639  0056CE                     _abs:
  6640                           	opt callstack 25
  6641                           
  6642                           ;incstack = 0
  6643  0056CE  BE14               	btfsc	abs@a+1,7,c
  6644  0056D0  D005               	goto	u1250
  6645  0056D2  5014               	movf	abs@a+1,w,c
  6646  0056D4  E110               	bnz	l957
  6647  0056D6  0413               	decf	abs@a,w,c
  6648  0056D8  B0D8               	btfsc	status,0,c
  6649  0056DA  D00D               	goto	l957
  6650  0056DC                     u1250:
  6651  0056DC  C013  F015         	movff	abs@a,??_abs
  6652  0056E0  C014  F016         	movff	abs@a+1,??_abs+1
  6653  0056E4  1E15               	comf	??_abs,f,c
  6654  0056E6  1E16               	comf	??_abs+1,f,c
  6655  0056E8  4A15               	infsnz	??_abs,f,c
  6656  0056EA  2A16               	incf	??_abs+1,f,c
  6657  0056EC  C015  F013         	movff	??_abs,?_abs
  6658  0056F0  C016  F014         	movff	??_abs+1,?_abs+1
  6659  0056F4  0012               	return	
  6660  0056F6                     l957:
  6661  0056F6  C013  F013         	movff	abs@a,?_abs
  6662  0056FA  C014  F014         	movff	abs@a+1,?_abs+1
  6663  0056FE  0012               	return		;funcret
  6664  005700                     __end_of_abs:
  6665                           	opt callstack 0
  6666                           
  6667 ;; *************** function ___aomod *****************
  6668 ;; Defined at:
  6669 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  dividend        8    0[COMRAM] long long 
  6672 ;;  divisor         8    8[COMRAM] long long 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  sign            1   17[COMRAM] unsigned char 
  6675 ;;  counter         1   16[COMRAM] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  8    0[COMRAM] long long 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6685 ;;      Params:        16       0       0       0       0       0       0       0       0
  6686 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6688 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6689 ;;Total ram usage:       18 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_dtoa
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text14
  6699  005D7C                     __ptext14:
  6700                           	opt callstack 0
  6701  005D7C                     ___aomod:
  6702                           	opt callstack 25
  6703                           
  6704                           ;incstack = 0
  6705  005D7C  0E00               	movlw	0
  6706  005D7E  6E12               	movwf	___aomod@sign,c
  6707  005D80  AE08               	btfss	___aomod@dividend+7,7,c
  6708  005D82  D012               	goto	l2484
  6709  005D84  1E08               	comf	___aomod@dividend+7,f,c
  6710  005D86  1E07               	comf	___aomod@dividend+6,f,c
  6711  005D88  1E06               	comf	___aomod@dividend+5,f,c
  6712  005D8A  1E05               	comf	___aomod@dividend+4,f,c
  6713  005D8C  1E04               	comf	___aomod@dividend+3,f,c
  6714  005D8E  1E03               	comf	___aomod@dividend+2,f,c
  6715  005D90  1E02               	comf	___aomod@dividend+1,f,c
  6716  005D92  6C01               	negf	___aomod@dividend,c
  6717  005D94  0E00               	movlw	0
  6718  005D96  2202               	addwfc	___aomod@dividend+1,f,c
  6719  005D98  2203               	addwfc	___aomod@dividend+2,f,c
  6720  005D9A  2204               	addwfc	___aomod@dividend+3,f,c
  6721  005D9C  2205               	addwfc	___aomod@dividend+4,f,c
  6722  005D9E  2206               	addwfc	___aomod@dividend+5,f,c
  6723  005DA0  2207               	addwfc	___aomod@dividend+6,f,c
  6724  005DA2  2208               	addwfc	___aomod@dividend+7,f,c
  6725  005DA4  0E01               	movlw	1
  6726  005DA6  6E12               	movwf	___aomod@sign,c
  6727  005DA8                     l2484:
  6728  005DA8  AE10               	btfss	___aomod@divisor+7,7,c
  6729  005DAA  D010               	goto	l2488
  6730  005DAC  1E10               	comf	___aomod@divisor+7,f,c
  6731  005DAE  1E0F               	comf	___aomod@divisor+6,f,c
  6732  005DB0  1E0E               	comf	___aomod@divisor+5,f,c
  6733  005DB2  1E0D               	comf	___aomod@divisor+4,f,c
  6734  005DB4  1E0C               	comf	___aomod@divisor+3,f,c
  6735  005DB6  1E0B               	comf	___aomod@divisor+2,f,c
  6736  005DB8  1E0A               	comf	___aomod@divisor+1,f,c
  6737  005DBA  6C09               	negf	___aomod@divisor,c
  6738  005DBC  0E00               	movlw	0
  6739  005DBE  220A               	addwfc	___aomod@divisor+1,f,c
  6740  005DC0  220B               	addwfc	___aomod@divisor+2,f,c
  6741  005DC2  220C               	addwfc	___aomod@divisor+3,f,c
  6742  005DC4  220D               	addwfc	___aomod@divisor+4,f,c
  6743  005DC6  220E               	addwfc	___aomod@divisor+5,f,c
  6744  005DC8  220F               	addwfc	___aomod@divisor+6,f,c
  6745  005DCA  2210               	addwfc	___aomod@divisor+7,f,c
  6746  005DCC                     l2488:
  6747  005DCC  5009               	movf	___aomod@divisor,w,c
  6748  005DCE  100A               	iorwf	___aomod@divisor+1,w,c
  6749  005DD0  100B               	iorwf	___aomod@divisor+2,w,c
  6750  005DD2  100C               	iorwf	___aomod@divisor+3,w,c
  6751  005DD4  100D               	iorwf	___aomod@divisor+4,w,c
  6752  005DD6  100E               	iorwf	___aomod@divisor+5,w,c
  6753  005DD8  100F               	iorwf	___aomod@divisor+6,w,c
  6754  005DDA  1010               	iorwf	___aomod@divisor+7,w,c
  6755  005DDC  B4D8               	btfsc	status,2,c
  6756  005DDE  D03C               	goto	l2504
  6757  005DE0  0E01               	movlw	1
  6758  005DE2  6E11               	movwf	___aomod@counter,c
  6759  005DE4  D00A               	goto	l2494
  6760  005DE6                     l2492:
  6761  005DE6  90D8               	bcf	status,0,c
  6762  005DE8  3609               	rlcf	___aomod@divisor,f,c
  6763  005DEA  360A               	rlcf	___aomod@divisor+1,f,c
  6764  005DEC  360B               	rlcf	___aomod@divisor+2,f,c
  6765  005DEE  360C               	rlcf	___aomod@divisor+3,f,c
  6766  005DF0  360D               	rlcf	___aomod@divisor+4,f,c
  6767  005DF2  360E               	rlcf	___aomod@divisor+5,f,c
  6768  005DF4  360F               	rlcf	___aomod@divisor+6,f,c
  6769  005DF6  3610               	rlcf	___aomod@divisor+7,f,c
  6770  005DF8  2A11               	incf	___aomod@counter,f,c
  6771  005DFA                     l2494:
  6772  005DFA  AE10               	btfss	___aomod@divisor+7,7,c
  6773  005DFC  D7F4               	goto	l2492
  6774  005DFE                     u1360:
  6775  005DFE  5009               	movf	___aomod@divisor,w,c
  6776  005E00  5C01               	subwf	___aomod@dividend,w,c
  6777  005E02  500A               	movf	___aomod@divisor+1,w,c
  6778  005E04  5802               	subwfb	___aomod@dividend+1,w,c
  6779  005E06  500B               	movf	___aomod@divisor+2,w,c
  6780  005E08  5803               	subwfb	___aomod@dividend+2,w,c
  6781  005E0A  500C               	movf	___aomod@divisor+3,w,c
  6782  005E0C  5804               	subwfb	___aomod@dividend+3,w,c
  6783  005E0E  500D               	movf	___aomod@divisor+4,w,c
  6784  005E10  5805               	subwfb	___aomod@dividend+4,w,c
  6785  005E12  500E               	movf	___aomod@divisor+5,w,c
  6786  005E14  5806               	subwfb	___aomod@dividend+5,w,c
  6787  005E16  500F               	movf	___aomod@divisor+6,w,c
  6788  005E18  5807               	subwfb	___aomod@dividend+6,w,c
  6789  005E1A  5010               	movf	___aomod@divisor+7,w,c
  6790  005E1C  5808               	subwfb	___aomod@dividend+7,w,c
  6791  005E1E  A0D8               	btfss	status,0,c
  6792  005E20  D010               	goto	l2500
  6793  005E22  5009               	movf	___aomod@divisor,w,c
  6794  005E24  5E01               	subwf	___aomod@dividend,f,c
  6795  005E26  500A               	movf	___aomod@divisor+1,w,c
  6796  005E28  5A02               	subwfb	___aomod@dividend+1,f,c
  6797  005E2A  500B               	movf	___aomod@divisor+2,w,c
  6798  005E2C  5A03               	subwfb	___aomod@dividend+2,f,c
  6799  005E2E  500C               	movf	___aomod@divisor+3,w,c
  6800  005E30  5A04               	subwfb	___aomod@dividend+3,f,c
  6801  005E32  500D               	movf	___aomod@divisor+4,w,c
  6802  005E34  5A05               	subwfb	___aomod@dividend+4,f,c
  6803  005E36  500E               	movf	___aomod@divisor+5,w,c
  6804  005E38  5A06               	subwfb	___aomod@dividend+5,f,c
  6805  005E3A  500F               	movf	___aomod@divisor+6,w,c
  6806  005E3C  5A07               	subwfb	___aomod@dividend+6,f,c
  6807  005E3E  5010               	movf	___aomod@divisor+7,w,c
  6808  005E40  5A08               	subwfb	___aomod@dividend+7,f,c
  6809  005E42                     l2500:
  6810  005E42  90D8               	bcf	status,0,c
  6811  005E44  3210               	rrcf	___aomod@divisor+7,f,c
  6812  005E46  320F               	rrcf	___aomod@divisor+6,f,c
  6813  005E48  320E               	rrcf	___aomod@divisor+5,f,c
  6814  005E4A  320D               	rrcf	___aomod@divisor+4,f,c
  6815  005E4C  320C               	rrcf	___aomod@divisor+3,f,c
  6816  005E4E  320B               	rrcf	___aomod@divisor+2,f,c
  6817  005E50  320A               	rrcf	___aomod@divisor+1,f,c
  6818  005E52  3209               	rrcf	___aomod@divisor,f,c
  6819  005E54  2E11               	decfsz	___aomod@counter,f,c
  6820  005E56  D7D3               	goto	u1360
  6821  005E58                     l2504:
  6822  005E58  5012               	movf	___aomod@sign,w,c
  6823  005E5A  B4D8               	btfsc	status,2,c
  6824  005E5C  D010               	goto	l2508
  6825  005E5E  1E08               	comf	___aomod@dividend+7,f,c
  6826  005E60  1E07               	comf	___aomod@dividend+6,f,c
  6827  005E62  1E06               	comf	___aomod@dividend+5,f,c
  6828  005E64  1E05               	comf	___aomod@dividend+4,f,c
  6829  005E66  1E04               	comf	___aomod@dividend+3,f,c
  6830  005E68  1E03               	comf	___aomod@dividend+2,f,c
  6831  005E6A  1E02               	comf	___aomod@dividend+1,f,c
  6832  005E6C  6C01               	negf	___aomod@dividend,c
  6833  005E6E  0E00               	movlw	0
  6834  005E70  2202               	addwfc	___aomod@dividend+1,f,c
  6835  005E72  2203               	addwfc	___aomod@dividend+2,f,c
  6836  005E74  2204               	addwfc	___aomod@dividend+3,f,c
  6837  005E76  2205               	addwfc	___aomod@dividend+4,f,c
  6838  005E78  2206               	addwfc	___aomod@dividend+5,f,c
  6839  005E7A  2207               	addwfc	___aomod@dividend+6,f,c
  6840  005E7C  2208               	addwfc	___aomod@dividend+7,f,c
  6841  005E7E                     l2508:
  6842  005E7E  C001  F001         	movff	___aomod@dividend,?___aomod
  6843  005E82  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6844  005E86  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6845  005E8A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6846  005E8E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6847  005E92  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6848  005E96  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6849  005E9A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6850  005E9E  0012               	return		;funcret
  6851  005EA0                     __end_of___aomod:
  6852                           	opt callstack 0
  6853                           
  6854 ;; *************** function ___aodiv *****************
  6855 ;; Defined at:
  6856 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  dividend        8    0[COMRAM] long long 
  6859 ;;  divisor         8    8[COMRAM] long long 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  quotient        8   18[COMRAM] long long 
  6862 ;;  sign            1   17[COMRAM] unsigned char 
  6863 ;;  counter         1   16[COMRAM] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  8    0[COMRAM] long long 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6873 ;;      Params:        16       0       0       0       0       0       0       0       0
  6874 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6876 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6877 ;;Total ram usage:       26 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_dtoa
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text15
  6887  005FC8                     __ptext15:
  6888                           	opt callstack 0
  6889  005FC8                     ___aodiv:
  6890                           	opt callstack 25
  6891                           
  6892                           ;incstack = 0
  6893  005FC8  0E00               	movlw	0
  6894  005FCA  6E12               	movwf	___aodiv@sign,c
  6895  005FCC  AE10               	btfss	___aodiv@divisor+7,7,c
  6896  005FCE  D012               	goto	l2440
  6897  005FD0  1E10               	comf	___aodiv@divisor+7,f,c
  6898  005FD2  1E0F               	comf	___aodiv@divisor+6,f,c
  6899  005FD4  1E0E               	comf	___aodiv@divisor+5,f,c
  6900  005FD6  1E0D               	comf	___aodiv@divisor+4,f,c
  6901  005FD8  1E0C               	comf	___aodiv@divisor+3,f,c
  6902  005FDA  1E0B               	comf	___aodiv@divisor+2,f,c
  6903  005FDC  1E0A               	comf	___aodiv@divisor+1,f,c
  6904  005FDE  6C09               	negf	___aodiv@divisor,c
  6905  005FE0  0E00               	movlw	0
  6906  005FE2  220A               	addwfc	___aodiv@divisor+1,f,c
  6907  005FE4  220B               	addwfc	___aodiv@divisor+2,f,c
  6908  005FE6  220C               	addwfc	___aodiv@divisor+3,f,c
  6909  005FE8  220D               	addwfc	___aodiv@divisor+4,f,c
  6910  005FEA  220E               	addwfc	___aodiv@divisor+5,f,c
  6911  005FEC  220F               	addwfc	___aodiv@divisor+6,f,c
  6912  005FEE  2210               	addwfc	___aodiv@divisor+7,f,c
  6913  005FF0  0E01               	movlw	1
  6914  005FF2  6E12               	movwf	___aodiv@sign,c
  6915  005FF4                     l2440:
  6916  005FF4  AE08               	btfss	___aodiv@dividend+7,7,c
  6917  005FF6  D012               	goto	l2446
  6918  005FF8  1E08               	comf	___aodiv@dividend+7,f,c
  6919  005FFA  1E07               	comf	___aodiv@dividend+6,f,c
  6920  005FFC  1E06               	comf	___aodiv@dividend+5,f,c
  6921  005FFE  1E05               	comf	___aodiv@dividend+4,f,c
  6922  006000  1E04               	comf	___aodiv@dividend+3,f,c
  6923  006002  1E03               	comf	___aodiv@dividend+2,f,c
  6924  006004  1E02               	comf	___aodiv@dividend+1,f,c
  6925  006006  6C01               	negf	___aodiv@dividend,c
  6926  006008  0E00               	movlw	0
  6927  00600A  2202               	addwfc	___aodiv@dividend+1,f,c
  6928  00600C  2203               	addwfc	___aodiv@dividend+2,f,c
  6929  00600E  2204               	addwfc	___aodiv@dividend+3,f,c
  6930  006010  2205               	addwfc	___aodiv@dividend+4,f,c
  6931  006012  2206               	addwfc	___aodiv@dividend+5,f,c
  6932  006014  2207               	addwfc	___aodiv@dividend+6,f,c
  6933  006016  2208               	addwfc	___aodiv@dividend+7,f,c
  6934  006018  0E01               	movlw	1
  6935  00601A  1A12               	xorwf	___aodiv@sign,f,c
  6936  00601C                     l2446:
  6937  00601C  EE20  F013         	lfsr	2,___aodiv@quotient
  6938  006020  0E07               	movlw	7
  6939  006022                     u1281:
  6940  006022  6ADE               	clrf	postinc2,c
  6941  006024  06E8               	decf	wreg,f,c
  6942  006026  E2FD               	bc	u1281
  6943  006028  5009               	movf	___aodiv@divisor,w,c
  6944  00602A  100A               	iorwf	___aodiv@divisor+1,w,c
  6945  00602C  100B               	iorwf	___aodiv@divisor+2,w,c
  6946  00602E  100C               	iorwf	___aodiv@divisor+3,w,c
  6947  006030  100D               	iorwf	___aodiv@divisor+4,w,c
  6948  006032  100E               	iorwf	___aodiv@divisor+5,w,c
  6949  006034  100F               	iorwf	___aodiv@divisor+6,w,c
  6950  006036  1010               	iorwf	___aodiv@divisor+7,w,c
  6951  006038  B4D8               	btfsc	status,2,c
  6952  00603A  D046               	goto	l2468
  6953  00603C  0E01               	movlw	1
  6954  00603E  6E11               	movwf	___aodiv@counter,c
  6955  006040  D00A               	goto	l2454
  6956  006042                     l2452:
  6957  006042  90D8               	bcf	status,0,c
  6958  006044  3609               	rlcf	___aodiv@divisor,f,c
  6959  006046  360A               	rlcf	___aodiv@divisor+1,f,c
  6960  006048  360B               	rlcf	___aodiv@divisor+2,f,c
  6961  00604A  360C               	rlcf	___aodiv@divisor+3,f,c
  6962  00604C  360D               	rlcf	___aodiv@divisor+4,f,c
  6963  00604E  360E               	rlcf	___aodiv@divisor+5,f,c
  6964  006050  360F               	rlcf	___aodiv@divisor+6,f,c
  6965  006052  3610               	rlcf	___aodiv@divisor+7,f,c
  6966  006054  2A11               	incf	___aodiv@counter,f,c
  6967  006056                     l2454:
  6968  006056  AE10               	btfss	___aodiv@divisor+7,7,c
  6969  006058  D7F4               	goto	l2452
  6970  00605A                     u1300:
  6971  00605A  90D8               	bcf	status,0,c
  6972  00605C  3613               	rlcf	___aodiv@quotient,f,c
  6973  00605E  3614               	rlcf	___aodiv@quotient+1,f,c
  6974  006060  3615               	rlcf	___aodiv@quotient+2,f,c
  6975  006062  3616               	rlcf	___aodiv@quotient+3,f,c
  6976  006064  3617               	rlcf	___aodiv@quotient+4,f,c
  6977  006066  3618               	rlcf	___aodiv@quotient+5,f,c
  6978  006068  3619               	rlcf	___aodiv@quotient+6,f,c
  6979  00606A  361A               	rlcf	___aodiv@quotient+7,f,c
  6980  00606C  5009               	movf	___aodiv@divisor,w,c
  6981  00606E  5C01               	subwf	___aodiv@dividend,w,c
  6982  006070  500A               	movf	___aodiv@divisor+1,w,c
  6983  006072  5802               	subwfb	___aodiv@dividend+1,w,c
  6984  006074  500B               	movf	___aodiv@divisor+2,w,c
  6985  006076  5803               	subwfb	___aodiv@dividend+2,w,c
  6986  006078  500C               	movf	___aodiv@divisor+3,w,c
  6987  00607A  5804               	subwfb	___aodiv@dividend+3,w,c
  6988  00607C  500D               	movf	___aodiv@divisor+4,w,c
  6989  00607E  5805               	subwfb	___aodiv@dividend+4,w,c
  6990  006080  500E               	movf	___aodiv@divisor+5,w,c
  6991  006082  5806               	subwfb	___aodiv@dividend+5,w,c
  6992  006084  500F               	movf	___aodiv@divisor+6,w,c
  6993  006086  5807               	subwfb	___aodiv@dividend+6,w,c
  6994  006088  5010               	movf	___aodiv@divisor+7,w,c
  6995  00608A  5808               	subwfb	___aodiv@dividend+7,w,c
  6996  00608C  A0D8               	btfss	status,0,c
  6997  00608E  D011               	goto	l2464
  6998  006090  5009               	movf	___aodiv@divisor,w,c
  6999  006092  5E01               	subwf	___aodiv@dividend,f,c
  7000  006094  500A               	movf	___aodiv@divisor+1,w,c
  7001  006096  5A02               	subwfb	___aodiv@dividend+1,f,c
  7002  006098  500B               	movf	___aodiv@divisor+2,w,c
  7003  00609A  5A03               	subwfb	___aodiv@dividend+2,f,c
  7004  00609C  500C               	movf	___aodiv@divisor+3,w,c
  7005  00609E  5A04               	subwfb	___aodiv@dividend+3,f,c
  7006  0060A0  500D               	movf	___aodiv@divisor+4,w,c
  7007  0060A2  5A05               	subwfb	___aodiv@dividend+4,f,c
  7008  0060A4  500E               	movf	___aodiv@divisor+5,w,c
  7009  0060A6  5A06               	subwfb	___aodiv@dividend+5,f,c
  7010  0060A8  500F               	movf	___aodiv@divisor+6,w,c
  7011  0060AA  5A07               	subwfb	___aodiv@dividend+6,f,c
  7012  0060AC  5010               	movf	___aodiv@divisor+7,w,c
  7013  0060AE  5A08               	subwfb	___aodiv@dividend+7,f,c
  7014  0060B0  8013               	bsf	___aodiv@quotient,0,c
  7015  0060B2                     l2464:
  7016  0060B2  90D8               	bcf	status,0,c
  7017  0060B4  3210               	rrcf	___aodiv@divisor+7,f,c
  7018  0060B6  320F               	rrcf	___aodiv@divisor+6,f,c
  7019  0060B8  320E               	rrcf	___aodiv@divisor+5,f,c
  7020  0060BA  320D               	rrcf	___aodiv@divisor+4,f,c
  7021  0060BC  320C               	rrcf	___aodiv@divisor+3,f,c
  7022  0060BE  320B               	rrcf	___aodiv@divisor+2,f,c
  7023  0060C0  320A               	rrcf	___aodiv@divisor+1,f,c
  7024  0060C2  3209               	rrcf	___aodiv@divisor,f,c
  7025  0060C4  2E11               	decfsz	___aodiv@counter,f,c
  7026  0060C6  D7C9               	goto	u1300
  7027  0060C8                     l2468:
  7028  0060C8  5012               	movf	___aodiv@sign,w,c
  7029  0060CA  B4D8               	btfsc	status,2,c
  7030  0060CC  D010               	goto	l2472
  7031  0060CE  1E1A               	comf	___aodiv@quotient+7,f,c
  7032  0060D0  1E19               	comf	___aodiv@quotient+6,f,c
  7033  0060D2  1E18               	comf	___aodiv@quotient+5,f,c
  7034  0060D4  1E17               	comf	___aodiv@quotient+4,f,c
  7035  0060D6  1E16               	comf	___aodiv@quotient+3,f,c
  7036  0060D8  1E15               	comf	___aodiv@quotient+2,f,c
  7037  0060DA  1E14               	comf	___aodiv@quotient+1,f,c
  7038  0060DC  6C13               	negf	___aodiv@quotient,c
  7039  0060DE  0E00               	movlw	0
  7040  0060E0  2214               	addwfc	___aodiv@quotient+1,f,c
  7041  0060E2  2215               	addwfc	___aodiv@quotient+2,f,c
  7042  0060E4  2216               	addwfc	___aodiv@quotient+3,f,c
  7043  0060E6  2217               	addwfc	___aodiv@quotient+4,f,c
  7044  0060E8  2218               	addwfc	___aodiv@quotient+5,f,c
  7045  0060EA  2219               	addwfc	___aodiv@quotient+6,f,c
  7046  0060EC  221A               	addwfc	___aodiv@quotient+7,f,c
  7047  0060EE                     l2472:
  7048  0060EE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7049  0060F2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7050  0060F6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7051  0060FA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7052  0060FE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7053  006102  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7054  006106  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7055  00610A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7056  00610E  0012               	return		;funcret
  7057  006110                     __end_of___aodiv:
  7058                           	opt callstack 0
  7059                           
  7060 ;; *************** function _letrero *****************
  7061 ;; Defined at:
  7062 ;;		line 442 in file "Practica6_03_03_19.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7078 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7079 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7080 ;;Total ram usage:        2 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    2
  7083 ;; This function calls:
  7084 ;;		_Lcd_Cmd
  7085 ;;		_Lcd_Out
  7086 ;; This function is called by:
  7087 ;;		_correcto
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text16
  7092  006110                     __ptext16:
  7093                           	opt callstack 0
  7094  006110                     _letrero:
  7095                           	opt callstack 27
  7096                           
  7097                           ;Practica6_03_03_19.c: 443:  Lcd_Out(1, 1,"Operaciones");
  7098                           
  7099                           ;incstack = 0
  7100  006110  0E01               	movlw	1
  7101  006112  6E04               	movwf	Lcd_Out@x,c
  7102  006114  0E5F               	movlw	low STR_62
  7103  006116  6E05               	movwf	Lcd_Out@buffer,c
  7104  006118  0E7F               	movlw	high STR_62
  7105  00611A  6E06               	movwf	Lcd_Out@buffer+1,c
  7106  00611C  0E01               	movlw	1
  7107  00611E  EC53  F02C         	call	_Lcd_Out
  7108                           
  7109                           ;Practica6_03_03_19.c: 444:     Lcd_Out(2,4,"disponibles:");
  7110  006122  0E04               	movlw	4
  7111  006124  6E04               	movwf	Lcd_Out@x,c
  7112  006126  0E12               	movlw	low STR_63
  7113  006128  6E05               	movwf	Lcd_Out@buffer,c
  7114  00612A  0E7F               	movlw	high STR_63
  7115  00612C  6E06               	movwf	Lcd_Out@buffer+1,c
  7116  00612E  0E02               	movlw	2
  7117  006130  EC53  F02C         	call	_Lcd_Out
  7118                           
  7119                           ;Practica6_03_03_19.c: 445:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  7120  006134  0E15               	movlw	21
  7121  006136  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7122  006138  0E4B               	movlw	75
  7123  00613A  6E0B               	movwf	??_letrero& (0+255),c
  7124  00613C  0EBE               	movlw	190
  7125  00613E                     u3057:
  7126  00613E  2EE8               	decfsz	wreg,f,c
  7127  006140  D7FE               	bra	u3057
  7128  006142  2E0B               	decfsz	??_letrero& (0+255),f,c
  7129  006144  D7FC               	bra	u3057
  7130  006146  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7131  006148  D7FA               	bra	u3057
  7132  00614A  D000               	nop2	
  7133                           
  7134                           ;Practica6_03_03_19.c: 446:     _delay((unsigned long)((100)*(8000000/4000.0)));
  7135  00614C  0E02               	movlw	2
  7136  00614E  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7137  006150  0E04               	movlw	4
  7138  006152  6E0B               	movwf	??_letrero& (0+255),c
  7139  006154  0EBA               	movlw	186
  7140  006156                     u3067:
  7141  006156  2EE8               	decfsz	wreg,f,c
  7142  006158  D7FE               	bra	u3067
  7143  00615A  2E0B               	decfsz	??_letrero& (0+255),f,c
  7144  00615C  D7FC               	bra	u3067
  7145  00615E  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7146  006160  D7FA               	bra	u3067
  7147  006162  D000               	nop2	
  7148                           
  7149                           ;Practica6_03_03_19.c: 447:     Lcd_Cmd(1);
  7150  006164  0E01               	movlw	1
  7151  006166  EC2E  F02E         	call	_Lcd_Cmd
  7152                           
  7153                           ;Practica6_03_03_19.c: 448:     _delay((unsigned long)((100)*(8000000/4000.0)));
  7154  00616A  0E02               	movlw	2
  7155  00616C  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7156  00616E  0E04               	movlw	4
  7157  006170  6E0B               	movwf	??_letrero& (0+255),c
  7158  006172  0EBA               	movlw	186
  7159  006174                     u3077:
  7160  006174  2EE8               	decfsz	wreg,f,c
  7161  006176  D7FE               	bra	u3077
  7162  006178  2E0B               	decfsz	??_letrero& (0+255),f,c
  7163  00617A  D7FC               	bra	u3077
  7164  00617C  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7165  00617E  D7FA               	bra	u3077
  7166  006180  D000               	nop2	
  7167                           
  7168                           ;Practica6_03_03_19.c: 449:     Lcd_Out(1, 1,"A:Consulta");
  7169  006182  0E01               	movlw	1
  7170  006184  6E04               	movwf	Lcd_Out@x,c
  7171  006186  0E6B               	movlw	low STR_64
  7172  006188  6E05               	movwf	Lcd_Out@buffer,c
  7173  00618A  0E7F               	movlw	high STR_64
  7174  00618C  6E06               	movwf	Lcd_Out@buffer+1,c
  7175  00618E  0E01               	movlw	1
  7176  006190  EC53  F02C         	call	_Lcd_Out
  7177                           
  7178                           ;Practica6_03_03_19.c: 450:     Lcd_Out(2,1,"B:Deposito");
  7179  006194  0E01               	movlw	1
  7180  006196  6E04               	movwf	Lcd_Out@x,c
  7181  006198  0E81               	movlw	low STR_65
  7182  00619A  6E05               	movwf	Lcd_Out@buffer,c
  7183  00619C  0E7F               	movlw	high STR_65
  7184  00619E  6E06               	movwf	Lcd_Out@buffer+1,c
  7185  0061A0  0E02               	movlw	2
  7186  0061A2  EC53  F02C         	call	_Lcd_Out
  7187                           
  7188                           ;Practica6_03_03_19.c: 451:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  7189  0061A6  0E15               	movlw	21
  7190  0061A8  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7191  0061AA  0E4B               	movlw	75
  7192  0061AC  6E0B               	movwf	??_letrero& (0+255),c
  7193  0061AE  0EBE               	movlw	190
  7194  0061B0                     u3087:
  7195  0061B0  2EE8               	decfsz	wreg,f,c
  7196  0061B2  D7FE               	bra	u3087
  7197  0061B4  2E0B               	decfsz	??_letrero& (0+255),f,c
  7198  0061B6  D7FC               	bra	u3087
  7199  0061B8  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7200  0061BA  D7FA               	bra	u3087
  7201  0061BC  D000               	nop2	
  7202                           
  7203                           ;Practica6_03_03_19.c: 452:     Lcd_Cmd(1);
  7204  0061BE  0E01               	movlw	1
  7205  0061C0  EC2E  F02E         	call	_Lcd_Cmd
  7206                           
  7207                           ;Practica6_03_03_19.c: 453:     _delay((unsigned long)((100)*(8000000/4000.0)));
  7208  0061C4  0E02               	movlw	2
  7209  0061C6  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7210  0061C8  0E04               	movlw	4
  7211  0061CA  6E0B               	movwf	??_letrero& (0+255),c
  7212  0061CC  0EBA               	movlw	186
  7213  0061CE                     u3097:
  7214  0061CE  2EE8               	decfsz	wreg,f,c
  7215  0061D0  D7FE               	bra	u3097
  7216  0061D2  2E0B               	decfsz	??_letrero& (0+255),f,c
  7217  0061D4  D7FC               	bra	u3097
  7218  0061D6  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7219  0061D8  D7FA               	bra	u3097
  7220  0061DA  D000               	nop2	
  7221                           
  7222                           ;Practica6_03_03_19.c: 454:     Lcd_Out(1,1,"C:Retiro");
  7223  0061DC  0E01               	movlw	1
  7224  0061DE  6E04               	movwf	Lcd_Out@x,c
  7225  0061E0  0EB4               	movlw	low STR_66
  7226  0061E2  6E05               	movwf	Lcd_Out@buffer,c
  7227  0061E4  0E7F               	movlw	high STR_66
  7228  0061E6  6E06               	movwf	Lcd_Out@buffer+1,c
  7229  0061E8  0E01               	movlw	1
  7230  0061EA  EC53  F02C         	call	_Lcd_Out
  7231                           
  7232                           ;Practica6_03_03_19.c: 455:     Lcd_Out(2,1,"D:Cambio de nip");
  7233  0061EE  0E01               	movlw	1
  7234  0061F0  6E04               	movwf	Lcd_Out@x,c
  7235  0061F2  0E73               	movlw	low STR_67
  7236  0061F4  6E05               	movwf	Lcd_Out@buffer,c
  7237  0061F6  0E7E               	movlw	high STR_67
  7238  0061F8  6E06               	movwf	Lcd_Out@buffer+1,c
  7239  0061FA  0E02               	movlw	2
  7240  0061FC  EC53  F02C         	call	_Lcd_Out
  7241                           
  7242                           ;Practica6_03_03_19.c: 456:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  7243  006200  0E15               	movlw	21
  7244  006202  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7245  006204  0E4B               	movlw	75
  7246  006206  6E0B               	movwf	??_letrero& (0+255),c
  7247  006208  0EBE               	movlw	190
  7248  00620A                     u3107:
  7249  00620A  2EE8               	decfsz	wreg,f,c
  7250  00620C  D7FE               	bra	u3107
  7251  00620E  2E0B               	decfsz	??_letrero& (0+255),f,c
  7252  006210  D7FC               	bra	u3107
  7253  006212  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7254  006214  D7FA               	bra	u3107
  7255  006216  D000               	nop2	
  7256                           
  7257                           ;Practica6_03_03_19.c: 457:     Lcd_Cmd(1);
  7258  006218  0E01               	movlw	1
  7259  00621A  EC2E  F02E         	call	_Lcd_Cmd
  7260                           
  7261                           ;Practica6_03_03_19.c: 458:     _delay((unsigned long)((100)*(8000000/4000.0)));
  7262  00621E  0E02               	movlw	2
  7263  006220  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7264  006222  0E04               	movlw	4
  7265  006224  6E0B               	movwf	??_letrero& (0+255),c
  7266  006226  0EBA               	movlw	186
  7267  006228                     u3117:
  7268  006228  2EE8               	decfsz	wreg,f,c
  7269  00622A  D7FE               	bra	u3117
  7270  00622C  2E0B               	decfsz	??_letrero& (0+255),f,c
  7271  00622E  D7FC               	bra	u3117
  7272  006230  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7273  006232  D7FA               	bra	u3117
  7274  006234  D000               	nop2	
  7275                           
  7276                           ;Practica6_03_03_19.c: 459:     Lcd_Out(1,1,"#:Salir");
  7277  006236  0E01               	movlw	1
  7278  006238  6E04               	movwf	Lcd_Out@x,c
  7279  00623A  0ECD               	movlw	low STR_68
  7280  00623C  6E05               	movwf	Lcd_Out@buffer,c
  7281  00623E  0E7F               	movlw	high STR_68
  7282  006240  6E06               	movwf	Lcd_Out@buffer+1,c
  7283  006242  0E01               	movlw	1
  7284  006244  EC53  F02C         	call	_Lcd_Out
  7285                           
  7286                           ;Practica6_03_03_19.c: 460:     _delay((unsigned long)((500)*(8000000/4000.0)));
  7287  006248  0E06               	movlw	6
  7288  00624A  6E0C               	movwf	(??_letrero+1)& (0+255),c
  7289  00624C  0E13               	movlw	19
  7290  00624E  6E0B               	movwf	??_letrero& (0+255),c
  7291  006250  0EAE               	movlw	174
  7292  006252                     u3127:
  7293  006252  2EE8               	decfsz	wreg,f,c
  7294  006254  D7FE               	bra	u3127
  7295  006256  2E0B               	decfsz	??_letrero& (0+255),f,c
  7296  006258  D7FC               	bra	u3127
  7297  00625A  2E0C               	decfsz	(??_letrero+1)& (0+255),f,c
  7298  00625C  D7FA               	bra	u3127
  7299  00625E  0012               	return		;funcret
  7300  006260                     __end_of_letrero:
  7301                           	opt callstack 0
  7302                           
  7303 ;; *************** function _Lcd_Out *****************
  7304 ;; Defined at:
  7305 ;;		line 94 in file "./flex_lcd.h"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  y               1    wreg     unsigned char 
  7308 ;;  x               1    3[COMRAM] unsigned char 
  7309 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  7310 ;;		 -> STR_68(8), STR_67(16), STR_66(9), STR_65(11), 
  7311 ;;		 -> STR_64(11), STR_63(13), STR_62(12), STR_61(7), 
  7312 ;;		 -> STR_60(17), STR_59(7), STR_58(19), STR_57(12), 
  7313 ;;		 -> STR_56(17), STR_55(7), STR_54(17), STR_53(14), 
  7314 ;;		 -> STR_51(5), STR_50(6), STR_48(5), STR_47(6), 
  7315 ;;		 -> STR_46(26), STR_45(20), STR_44(22), STR_43(14), 
  7316 ;;		 -> STR_42(15), STR_41(9), STR_40(19), STR_39(13), 
  7317 ;;		 -> STR_38(14), STR_37(10), STR_36(14), STR_34(8), 
  7318 ;;		 -> STR_33(11), STR_32(26), STR_31(37), STR_30(7), 
  7319 ;;		 -> STR_29(17), STR_28(13), STR_27(14), STR_26(10), 
  7320 ;;		 -> STR_25(16), STR_23(10), STR_22(11), STR_21(26), 
  7321 ;;		 -> STR_20(39), STR_19(9), STR_17(13), STR_16(4), 
  7322 ;;		 -> STR_15(16), STR_14(4), STR_13(15), STR_12(8), 
  7323 ;;		 -> STR_11(15), STR_10(15), STR_9(13), STR_8(2), 
  7324 ;;		 -> STR_7(16), STR_6(17), STR_5(13), STR_4(13), 
  7325 ;;		 -> STR_3(14), STR_2(3), STR_1(11), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  y               1    8[COMRAM] unsigned char 
  7328 ;;  data            1    9[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7338 ;;      Params:         3       0       0       0       0       0       0       0       0
  7339 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7340 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7341 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        7 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    1
  7345 ;; This function calls:
  7346 ;;		_Lcd_Chr_CP
  7347 ;;		_Lcd_Cmd
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;;		_incorrecto
  7351 ;;		_correcto
  7352 ;;		_letrero
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text17
  7357  0058A6                     __ptext17:
  7358                           	opt callstack 0
  7359  0058A6                     _Lcd_Out:
  7360                           	opt callstack 28
  7361                           
  7362                           ;incstack = 0
  7363                           ;Lcd_Out@y stored from wreg
  7364  0058A6  6E09               	movwf	Lcd_Out@y,c
  7365                           
  7366                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  7367  0058A8  D00D               	goto	l2674
  7368  0058AA                     l2664:
  7369  0058AA  5004               	movf	Lcd_Out@x,w,c
  7370  0058AC  0F80               	addlw	128
  7371  0058AE  D008               	goto	L4
  7372  0058B0                     l2666:
  7373  0058B0  5004               	movf	Lcd_Out@x,w,c
  7374  0058B2  0FC0               	addlw	192
  7375  0058B4  D005               	goto	L4
  7376  0058B6                     l2668:
  7377  0058B6  5004               	movf	Lcd_Out@x,w,c
  7378  0058B8  0F94               	addlw	148
  7379  0058BA  D002               	goto	L4
  7380  0058BC                     l2670:
  7381  0058BC  5004               	movf	Lcd_Out@x,w,c
  7382  0058BE  0FD4               	addlw	212
  7383  0058C0                     L4:
  7384  0058C0  6E0A               	movwf	Lcd_Out@data,c
  7385  0058C2  D014               	goto	l2676
  7386  0058C4                     l2674:
  7387  0058C4  5009               	movf	Lcd_Out@y,w,c
  7388  0058C6  6E07               	movwf	??_Lcd_Out& (0+255),c
  7389  0058C8  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
  7390                           
  7391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7392                           ; Switch size 1, requested type "simple"
  7393                           ; Number of cases is 1, Range of values is 0 to 0
  7394                           ; switch strategies available:
  7395                           ; Name         Instructions Cycles
  7396                           ; simple_byte            4     3 (average)
  7397                           ;	Chosen strategy is simple_byte
  7398  0058CA  5008               	movf	??_Lcd_Out+1,w,c
  7399  0058CC  0A00               	xorlw	0	; case 0
  7400  0058CE  A4D8               	btfss	status,2,c
  7401  0058D0  D00D               	goto	l2676
  7402                           
  7403                           ; Switch size 1, requested type "simple"
  7404                           ; Number of cases is 4, Range of values is 1 to 4
  7405                           ; switch strategies available:
  7406                           ; Name         Instructions Cycles
  7407                           ; simple_byte           13     7 (average)
  7408                           ;	Chosen strategy is simple_byte
  7409  0058D2  5007               	movf	??_Lcd_Out,w,c
  7410  0058D4  0A01               	xorlw	1	; case 1
  7411  0058D6  B4D8               	btfsc	status,2,c
  7412  0058D8  D7E8               	goto	l2664
  7413  0058DA  0A03               	xorlw	3	; case 2
  7414  0058DC  B4D8               	btfsc	status,2,c
  7415  0058DE  D7E8               	goto	l2666
  7416  0058E0  0A01               	xorlw	1	; case 3
  7417  0058E2  B4D8               	btfsc	status,2,c
  7418  0058E4  D7E8               	goto	l2668
  7419  0058E6  0A07               	xorlw	7	; case 4
  7420  0058E8  B4D8               	btfsc	status,2,c
  7421  0058EA  D7E8               	goto	l2670
  7422  0058EC                     l2676:
  7423                           
  7424                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  7425  0058EC  500A               	movf	Lcd_Out@data,w,c
  7426  0058EE  EC2E  F02E         	call	_Lcd_Cmd
  7427                           
  7428                           ;./flex_lcd.h: 106: while(*buffer)
  7429  0058F2  D00A               	goto	l2682
  7430  0058F4                     l2678:
  7431                           
  7432                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  7433  0058F4  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7434  0058F8  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7435  0058FC                     	if	0	;tblptru may be non-zero
  7436  0058FC                     	endif
  7437  0058FC                     	if	0	;tblptru may be non-zero
  7438  0058FC                     	endif
  7439  0058FC  0008               	tblrd		*
  7440  0058FE  50F5               	movf	tablat,w,c
  7441  005900  EC50  F02F         	call	_Lcd_Chr_CP
  7442                           
  7443                           ;./flex_lcd.h: 109:     buffer++;
  7444  005904  4A05               	infsnz	Lcd_Out@buffer,f,c
  7445  005906  2A06               	incf	Lcd_Out@buffer+1,f,c
  7446  005908                     l2682:
  7447                           
  7448                           ;./flex_lcd.h: 106: while(*buffer)
  7449  005908  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7450  00590C  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7451  005910                     	if	0	;tblptru may be non-zero
  7452  005910                     	endif
  7453  005910                     	if	0	;tblptru may be non-zero
  7454  005910                     	endif
  7455  005910  0008               	tblrd		*
  7456  005912  50F5               	movf	tablat,w,c
  7457  005914  0900               	iorlw	0
  7458  005916  B4D8               	btfsc	status,2,c
  7459  005918  0012               	return	
  7460  00591A  D7EC               	goto	l2678
  7461  00591C                     __end_of_Lcd_Out:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function ___lmul *****************
  7465 ;; Defined at:
  7466 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  multiplier      4    0[COMRAM] unsigned long 
  7469 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  product         4    8[COMRAM] unsigned long 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  4    0[COMRAM] unsigned long 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7481 ;;      Params:         8       0       0       0       0       0       0       0       0
  7482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7484 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7485 ;;Total ram usage:       12 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_main
  7491 ;;		_correcto
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text18
  7496  00578A                     __ptext18:
  7497                           	opt callstack 0
  7498  00578A                     ___lmul:
  7499                           	opt callstack 29
  7500                           
  7501                           ;incstack = 0
  7502  00578A  0E00               	movlw	0
  7503  00578C  6E09               	movwf	___lmul@product,c
  7504  00578E  0E00               	movlw	0
  7505  005790  6E0A               	movwf	___lmul@product+1,c
  7506  005792  0E00               	movlw	0
  7507  005794  6E0B               	movwf	___lmul@product+2,c
  7508  005796  0E00               	movlw	0
  7509  005798  6E0C               	movwf	___lmul@product+3,c
  7510  00579A                     l2842:
  7511  00579A  A001               	btfss	___lmul@multiplier,0,c
  7512  00579C  D008               	goto	l2846
  7513  00579E  5005               	movf	___lmul@multiplicand,w,c
  7514  0057A0  2609               	addwf	___lmul@product,f,c
  7515  0057A2  5006               	movf	___lmul@multiplicand+1,w,c
  7516  0057A4  220A               	addwfc	___lmul@product+1,f,c
  7517  0057A6  5007               	movf	___lmul@multiplicand+2,w,c
  7518  0057A8  220B               	addwfc	___lmul@product+2,f,c
  7519  0057AA  5008               	movf	___lmul@multiplicand+3,w,c
  7520  0057AC  220C               	addwfc	___lmul@product+3,f,c
  7521  0057AE                     l2846:
  7522  0057AE  90D8               	bcf	status,0,c
  7523  0057B0  3605               	rlcf	___lmul@multiplicand,f,c
  7524  0057B2  3606               	rlcf	___lmul@multiplicand+1,f,c
  7525  0057B4  3607               	rlcf	___lmul@multiplicand+2,f,c
  7526  0057B6  3608               	rlcf	___lmul@multiplicand+3,f,c
  7527  0057B8  90D8               	bcf	status,0,c
  7528  0057BA  3204               	rrcf	___lmul@multiplier+3,f,c
  7529  0057BC  3203               	rrcf	___lmul@multiplier+2,f,c
  7530  0057BE  3202               	rrcf	___lmul@multiplier+1,f,c
  7531  0057C0  3201               	rrcf	___lmul@multiplier,f,c
  7532  0057C2  5001               	movf	___lmul@multiplier,w,c
  7533  0057C4  1002               	iorwf	___lmul@multiplier+1,w,c
  7534  0057C6  1003               	iorwf	___lmul@multiplier+2,w,c
  7535  0057C8  1004               	iorwf	___lmul@multiplier+3,w,c
  7536  0057CA  A4D8               	btfss	status,2,c
  7537  0057CC  D7E6               	goto	l2842
  7538  0057CE  C009  F001         	movff	___lmul@product,?___lmul
  7539  0057D2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7540  0057D6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7541  0057DA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7542  0057DE  0012               	return		;funcret
  7543  0057E0                     __end_of___lmul:
  7544                           	opt callstack 0
  7545                           
  7546 ;; *************** function _Lcd_Out2 *****************
  7547 ;; Defined at:
  7548 ;;		line 115 in file "./flex_lcd.h"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  y               1    wreg     unsigned char 
  7551 ;;  x               1    3[COMRAM] unsigned char 
  7552 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  7553 ;;		 -> palabra2(17), palabra(17), palabra1(17), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  y               1    8[COMRAM] unsigned char 
  7556 ;;  data            1    9[COMRAM] unsigned char 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1    wreg      void 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7566 ;;      Params:         3       0       0       0       0       0       0       0       0
  7567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7568 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7569 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7570 ;;Total ram usage:        7 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    1
  7573 ;; This function calls:
  7574 ;;		_Lcd_Chr_CP
  7575 ;;		_Lcd_Cmd
  7576 ;; This function is called by:
  7577 ;;		_correcto
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text19
  7582  005836                     __ptext19:
  7583                           	opt callstack 0
  7584  005836                     _Lcd_Out2:
  7585                           	opt callstack 28
  7586                           
  7587                           ;incstack = 0
  7588                           ;Lcd_Out2@y stored from wreg
  7589  005836  6E09               	movwf	Lcd_Out2@y,c
  7590                           
  7591                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  7592  005838  D00D               	goto	l2708
  7593  00583A                     l2698:
  7594  00583A  5004               	movf	Lcd_Out2@x,w,c
  7595  00583C  0F80               	addlw	128
  7596  00583E  D008               	goto	L7
  7597  005840                     l2700:
  7598  005840  5004               	movf	Lcd_Out2@x,w,c
  7599  005842  0FC0               	addlw	192
  7600  005844  D005               	goto	L7
  7601  005846                     l2702:
  7602  005846  5004               	movf	Lcd_Out2@x,w,c
  7603  005848  0F94               	addlw	148
  7604  00584A  D002               	goto	L7
  7605  00584C                     l2704:
  7606  00584C  5004               	movf	Lcd_Out2@x,w,c
  7607  00584E  0FD4               	addlw	212
  7608  005850                     L7:
  7609  005850  6E0A               	movwf	Lcd_Out2@data,c
  7610  005852  D014               	goto	l2710
  7611  005854                     l2708:
  7612  005854  5009               	movf	Lcd_Out2@y,w,c
  7613  005856  6E07               	movwf	??_Lcd_Out2& (0+255),c
  7614  005858  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  7615                           
  7616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7617                           ; Switch size 1, requested type "simple"
  7618                           ; Number of cases is 1, Range of values is 0 to 0
  7619                           ; switch strategies available:
  7620                           ; Name         Instructions Cycles
  7621                           ; simple_byte            4     3 (average)
  7622                           ;	Chosen strategy is simple_byte
  7623  00585A  5008               	movf	??_Lcd_Out2+1,w,c
  7624  00585C  0A00               	xorlw	0	; case 0
  7625  00585E  A4D8               	btfss	status,2,c
  7626  005860  D00D               	goto	l2710
  7627                           
  7628                           ; Switch size 1, requested type "simple"
  7629                           ; Number of cases is 4, Range of values is 1 to 4
  7630                           ; switch strategies available:
  7631                           ; Name         Instructions Cycles
  7632                           ; simple_byte           13     7 (average)
  7633                           ;	Chosen strategy is simple_byte
  7634  005862  5007               	movf	??_Lcd_Out2,w,c
  7635  005864  0A01               	xorlw	1	; case 1
  7636  005866  B4D8               	btfsc	status,2,c
  7637  005868  D7E8               	goto	l2698
  7638  00586A  0A03               	xorlw	3	; case 2
  7639  00586C  B4D8               	btfsc	status,2,c
  7640  00586E  D7E8               	goto	l2700
  7641  005870  0A01               	xorlw	1	; case 3
  7642  005872  B4D8               	btfsc	status,2,c
  7643  005874  D7E8               	goto	l2702
  7644  005876  0A07               	xorlw	7	; case 4
  7645  005878  B4D8               	btfsc	status,2,c
  7646  00587A  D7E8               	goto	l2704
  7647  00587C                     l2710:
  7648                           
  7649                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  7650  00587C  500A               	movf	Lcd_Out2@data,w,c
  7651  00587E  EC2E  F02E         	call	_Lcd_Cmd
  7652                           
  7653                           ;./flex_lcd.h: 127: while(*buffer)
  7654  005882  D009               	goto	l2716
  7655  005884                     l2712:
  7656                           
  7657                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  7658  005884  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  7659  005888  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  7660  00588C  50DF               	movf	indf2,w,c
  7661  00588E  EC50  F02F         	call	_Lcd_Chr_CP
  7662                           
  7663                           ;./flex_lcd.h: 130:     buffer++;
  7664  005892  4A05               	infsnz	Lcd_Out2@buffer,f,c
  7665  005894  2A06               	incf	Lcd_Out2@buffer+1,f,c
  7666  005896                     l2716:
  7667                           
  7668                           ;./flex_lcd.h: 127: while(*buffer)
  7669  005896  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  7670  00589A  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  7671  00589E  50DF               	movf	indf2,w,c
  7672  0058A0  B4D8               	btfsc	status,2,c
  7673  0058A2  0012               	return	
  7674  0058A4  D7EF               	goto	l2712
  7675  0058A6                     __end_of_Lcd_Out2:
  7676                           	opt callstack 0
  7677                           
  7678 ;; *************** function _Lcd_Chr_CP *****************
  7679 ;; Defined at:
  7680 ;;		line 136 in file "./flex_lcd.h"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  data            1    wreg     unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  data            1    2[COMRAM] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0
  7695 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7696 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7697 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7698 ;;Total ram usage:        3 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_Lcd_Out
  7704 ;;		_Lcd_Out2
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text20
  7709  005EA0                     __ptext20:
  7710                           	opt callstack 0
  7711  005EA0                     _Lcd_Chr_CP:
  7712                           	opt callstack 28
  7713                           
  7714                           ;incstack = 0
  7715                           ;Lcd_Chr_CP@data stored from wreg
  7716  005EA0  6E03               	movwf	Lcd_Chr_CP@data,c
  7717                           
  7718                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  7719  005EA2  9A83               	bcf	3971,5,c	;volatile
  7720  005EA4  8883               	bsf	3971,4,c	;volatile
  7721                           
  7722                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  7723  005EA6  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  7724  005EA8  AE03               	btfss	Lcd_Chr_CP@data,7,c
  7725  005EAA  D001               	bra	u1575
  7726  005EAC  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  7727  005EAE                     u1575:
  7728  005EAE  0E01               	movlw	1
  7729  005EB0  1601               	andwf	??_Lcd_Chr_CP,f,c
  7730  005EB2  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7731  005EB4  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7732  005EB6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7733  005EB8  5083               	movf	3971,w,c	;volatile
  7734  005EBA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7735  005EBC  0BF7               	andlw	-9
  7736  005EBE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7737  005EC0  6E83               	movwf	3971,c	;volatile
  7738  005EC2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7739  005EC6  0E06               	movlw	6
  7740  005EC8  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  7741  005ECA                     u1585:
  7742  005ECA  90D8               	bcf	status,0,c
  7743  005ECC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7744  005ECE  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  7745  005ED0  D7FC               	goto	u1585
  7746  005ED2  0E01               	movlw	1
  7747  005ED4  1601               	andwf	??_Lcd_Chr_CP,f,c
  7748  005ED6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7749  005ED8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7750  005EDA  5083               	movf	3971,w,c	;volatile
  7751  005EDC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7752  005EDE  0BFB               	andlw	-5
  7753  005EE0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7754  005EE2  6E83               	movwf	3971,c	;volatile
  7755                           
  7756                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  7757  005EE4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7758  005EE8  0E05               	movlw	5
  7759  005EEA  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  7760  005EEC                     u1595:
  7761  005EEC  90D8               	bcf	status,0,c
  7762  005EEE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7763  005EF0  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  7764  005EF2  D7FC               	goto	u1595
  7765  005EF4  0E01               	movlw	1
  7766  005EF6  1601               	andwf	??_Lcd_Chr_CP,f,c
  7767  005EF8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7768  005EFA  5083               	movf	3971,w,c	;volatile
  7769  005EFC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7770  005EFE  0BFD               	andlw	-3
  7771  005F00  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7772  005F02  6E83               	movwf	3971,c	;volatile
  7773  005F04  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7774  005F08  3A01               	swapf	??_Lcd_Chr_CP,f,c
  7775  005F0A  0E0F               	movlw	15
  7776  005F0C  1601               	andwf	??_Lcd_Chr_CP,f,c
  7777  005F0E  0E01               	movlw	1
  7778  005F10  1601               	andwf	??_Lcd_Chr_CP,f,c
  7779  005F12  5083               	movf	3971,w,c	;volatile
  7780  005F14  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7781  005F16  0BFE               	andlw	-2
  7782  005F18  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7783  005F1A  6E83               	movwf	3971,c	;volatile
  7784                           
  7785                           ;./flex_lcd.h: 140: _delay(10);
  7786  005F1C  0E03               	movlw	3
  7787  005F1E                     u3137:
  7788  005F1E  2EE8               	decfsz	wreg,f,c
  7789  005F20  D7FE               	bra	u3137
  7790  005F22  F000               	nop	
  7791                           
  7792                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  7793  005F24  8A83               	bsf	3971,5,c	;volatile
  7794  005F26  0E03               	movlw	3
  7795  005F28                     u3147:
  7796  005F28  2EE8               	decfsz	wreg,f,c
  7797  005F2A  D7FE               	bra	u3147
  7798  005F2C  F000               	nop	
  7799  005F2E  9A83               	bcf	3971,5,c	;volatile
  7800                           
  7801                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  7802  005F30  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7803  005F34  90D8               	bcf	status,0,c
  7804  005F36  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7805  005F38  90D8               	bcf	status,0,c
  7806  005F3A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7807  005F3C  90D8               	bcf	status,0,c
  7808  005F3E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7809  005F40  0E01               	movlw	1
  7810  005F42  1601               	andwf	??_Lcd_Chr_CP,f,c
  7811  005F44  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7812  005F46  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7813  005F48  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7814  005F4A  5083               	movf	3971,w,c	;volatile
  7815  005F4C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7816  005F4E  0BF7               	andlw	-9
  7817  005F50  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7818  005F52  6E83               	movwf	3971,c	;volatile
  7819  005F54  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7820  005F58  90D8               	bcf	status,0,c
  7821  005F5A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7822  005F5C  90D8               	bcf	status,0,c
  7823  005F5E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7824  005F60  0E01               	movlw	1
  7825  005F62  1601               	andwf	??_Lcd_Chr_CP,f,c
  7826  005F64  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7827  005F66  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7828  005F68  5083               	movf	3971,w,c	;volatile
  7829  005F6A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7830  005F6C  0BFB               	andlw	-5
  7831  005F6E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7832  005F70  6E83               	movwf	3971,c	;volatile
  7833                           
  7834                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  7835  005F72  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7836  005F76  90D8               	bcf	status,0,c
  7837  005F78  3201               	rrcf	??_Lcd_Chr_CP,f,c
  7838  005F7A  0E01               	movlw	1
  7839  005F7C  1601               	andwf	??_Lcd_Chr_CP,f,c
  7840  005F7E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  7841  005F80  5083               	movf	3971,w,c	;volatile
  7842  005F82  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7843  005F84  0BFD               	andlw	-3
  7844  005F86  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7845  005F88  6E83               	movwf	3971,c	;volatile
  7846  005F8A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7847  005F8E  0E01               	movlw	1
  7848  005F90  1601               	andwf	??_Lcd_Chr_CP,f,c
  7849  005F92  5083               	movf	3971,w,c	;volatile
  7850  005F94  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7851  005F96  0BFE               	andlw	-2
  7852  005F98  1801               	xorwf	??_Lcd_Chr_CP,w,c
  7853  005F9A  6E83               	movwf	3971,c	;volatile
  7854                           
  7855                           ;./flex_lcd.h: 144: _delay(10);
  7856  005F9C  0E03               	movlw	3
  7857  005F9E                     u3157:
  7858  005F9E  2EE8               	decfsz	wreg,f,c
  7859  005FA0  D7FE               	bra	u3157
  7860  005FA2  F000               	nop	
  7861                           
  7862                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  7863  005FA4  8A83               	bsf	3971,5,c	;volatile
  7864  005FA6  0E03               	movlw	3
  7865  005FA8                     u3167:
  7866  005FA8  2EE8               	decfsz	wreg,f,c
  7867  005FAA  D7FE               	bra	u3167
  7868  005FAC  F000               	nop	
  7869  005FAE  9A83               	bcf	3971,5,c	;volatile
  7870                           
  7871                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(8000000/4000000.0)));
  7872  005FB0  0E03               	movlw	3
  7873  005FB2                     u3177:
  7874  005FB2  2EE8               	decfsz	wreg,f,c
  7875  005FB4  D7FE               	bra	u3177
  7876  005FB6  F000               	nop	
  7877  005FB8  0E0F               	movlw	15
  7878  005FBA  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  7879  005FBC  0E48               	movlw	72
  7880  005FBE                     u3187:
  7881  005FBE  2EE8               	decfsz	wreg,f,c
  7882  005FC0  D7FE               	bra	u3187
  7883  005FC2  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  7884  005FC4  D7FC               	bra	u3187
  7885  005FC6  0012               	return		;funcret
  7886  005FC8                     __end_of_Lcd_Chr_CP:
  7887                           	opt callstack 0
  7888                           
  7889 ;; *************** function _Lcd_Init *****************
  7890 ;; Defined at:
  7891 ;;		line 52 in file "./flex_lcd.h"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  data            1    4[COMRAM] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0
  7906 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7907 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7908 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7909 ;;Total ram usage:        2 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    1
  7912 ;; This function calls:
  7913 ;;		_Lcd_Cmd
  7914 ;; This function is called by:
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text21
  7920  005B56                     __ptext21:
  7921                           	opt callstack 0
  7922  005B56                     _Lcd_Init:
  7923                           	opt callstack 29
  7924                           
  7925                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  7926                           
  7927                           ;incstack = 0
  7928  005B56  9695               	bcf	3989,3,c	;volatile
  7929                           
  7930                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  7931  005B58  9495               	bcf	3989,2,c	;volatile
  7932                           
  7933                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  7934  005B5A  9295               	bcf	3989,1,c	;volatile
  7935                           
  7936                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  7937  005B5C  9095               	bcf	3989,0,c	;volatile
  7938                           
  7939                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  7940  005B5E  9A95               	bcf	3989,5,c	;volatile
  7941                           
  7942                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  7943  005B60  9895               	bcf	3989,4,c	;volatile
  7944                           
  7945                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  7946  005B62  9683               	bcf	3971,3,c	;volatile
  7947                           
  7948                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  7949  005B64  9483               	bcf	3971,2,c	;volatile
  7950                           
  7951                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  7952  005B66  9283               	bcf	3971,1,c	;volatile
  7953                           
  7954                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  7955  005B68  9083               	bcf	3971,0,c	;volatile
  7956                           
  7957                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
  7958  005B6A  9A83               	bcf	3971,5,c	;volatile
  7959                           
  7960                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
  7961  005B6C  9883               	bcf	3971,4,c	;volatile
  7962                           
  7963                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7964  005B6E  0E0F               	movlw	15
  7965  005B70  6E04               	movwf	??_Lcd_Init& (0+255),c
  7966  005B72  0E48               	movlw	72
  7967  005B74                     u3197:
  7968  005B74  2EE8               	decfsz	wreg,f,c
  7969  005B76  D7FE               	bra	u3197
  7970  005B78  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7971  005B7A  D7FC               	bra	u3197
  7972                           
  7973                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7974  005B7C  0E0F               	movlw	15
  7975  005B7E  6E04               	movwf	??_Lcd_Init& (0+255),c
  7976  005B80  0E48               	movlw	72
  7977  005B82                     u3207:
  7978  005B82  2EE8               	decfsz	wreg,f,c
  7979  005B84  D7FE               	bra	u3207
  7980  005B86  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7981  005B88  D7FC               	bra	u3207
  7982                           
  7983                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7984  005B8A  0E0F               	movlw	15
  7985  005B8C  6E04               	movwf	??_Lcd_Init& (0+255),c
  7986  005B8E  0E48               	movlw	72
  7987  005B90                     u3217:
  7988  005B90  2EE8               	decfsz	wreg,f,c
  7989  005B92  D7FE               	bra	u3217
  7990  005B94  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7991  005B96  D7FC               	bra	u3217
  7992                           
  7993                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7994  005B98  0E0F               	movlw	15
  7995  005B9A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7996  005B9C  0E48               	movlw	72
  7997  005B9E                     u3227:
  7998  005B9E  2EE8               	decfsz	wreg,f,c
  7999  005BA0  D7FE               	bra	u3227
  8000  005BA2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8001  005BA4  D7FC               	bra	u3227
  8002                           
  8003                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8004  005BA6  0E0F               	movlw	15
  8005  005BA8  6E04               	movwf	??_Lcd_Init& (0+255),c
  8006  005BAA  0E48               	movlw	72
  8007  005BAC                     u3237:
  8008  005BAC  2EE8               	decfsz	wreg,f,c
  8009  005BAE  D7FE               	bra	u3237
  8010  005BB0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8011  005BB2  D7FC               	bra	u3237
  8012                           
  8013                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8014  005BB4  0E0F               	movlw	15
  8015  005BB6  6E04               	movwf	??_Lcd_Init& (0+255),c
  8016  005BB8  0E48               	movlw	72
  8017  005BBA                     u3247:
  8018  005BBA  2EE8               	decfsz	wreg,f,c
  8019  005BBC  D7FE               	bra	u3247
  8020  005BBE  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8021  005BC0  D7FC               	bra	u3247
  8022                           
  8023                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  8024  005BC2  0E01               	movlw	1
  8025  005BC4  6E05               	movwf	Lcd_Init@data,c
  8026  005BC6                     l37:
  8027                           
  8028                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
  8029  005BC6  9683               	bcf	3971,3,c	;volatile
  8030  005BC8  9483               	bcf	3971,2,c	;volatile
  8031  005BCA  8283               	bsf	3971,1,c	;volatile
  8032  005BCC  8083               	bsf	3971,0,c	;volatile
  8033  005BCE  9A83               	bcf	3971,5,c	;volatile
  8034                           
  8035                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
  8036  005BD0  9883               	bcf	3971,4,c	;volatile
  8037  005BD2  9683               	bcf	3971,3,c	;volatile
  8038  005BD4  9483               	bcf	3971,2,c	;volatile
  8039  005BD6  8283               	bsf	3971,1,c	;volatile
  8040  005BD8  8083               	bsf	3971,0,c	;volatile
  8041                           
  8042                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  8043  005BDA  8A83               	bsf	3971,5,c	;volatile
  8044  005BDC  9883               	bcf	3971,4,c	;volatile
  8045                           
  8046                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8047  005BDE  0E03               	movlw	3
  8048  005BE0                     u3257:
  8049  005BE0  2EE8               	decfsz	wreg,f,c
  8050  005BE2  D7FE               	bra	u3257
  8051  005BE4  F000               	nop	
  8052                           
  8053                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
  8054  005BE6  9683               	bcf	3971,3,c	;volatile
  8055  005BE8  9483               	bcf	3971,2,c	;volatile
  8056  005BEA  8283               	bsf	3971,1,c	;volatile
  8057  005BEC  8083               	bsf	3971,0,c	;volatile
  8058  005BEE  9A83               	bcf	3971,5,c	;volatile
  8059                           
  8060                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
  8061  005BF0  9883               	bcf	3971,4,c	;volatile
  8062                           
  8063                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8064  005BF2  0E0F               	movlw	15
  8065  005BF4  6E04               	movwf	??_Lcd_Init& (0+255),c
  8066  005BF6  0E48               	movlw	72
  8067  005BF8                     u3267:
  8068  005BF8  2EE8               	decfsz	wreg,f,c
  8069  005BFA  D7FE               	bra	u3267
  8070  005BFC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8071  005BFE  D7FC               	bra	u3267
  8072                           
  8073                           ;./flex_lcd.h: 81: }
  8074  005C00  2A05               	incf	Lcd_Init@data,f,c
  8075  005C02  0E03               	movlw	3
  8076  005C04  6405               	cpfsgt	Lcd_Init@data,c
  8077  005C06  D7DF               	goto	l37
  8078                           
  8079                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8080  005C08  9683               	bcf	3971,3,c	;volatile
  8081  005C0A  9483               	bcf	3971,2,c	;volatile
  8082  005C0C  8283               	bsf	3971,1,c	;volatile
  8083  005C0E  9083               	bcf	3971,0,c	;volatile
  8084  005C10  9A83               	bcf	3971,5,c	;volatile
  8085  005C12  9883               	bcf	3971,4,c	;volatile
  8086                           
  8087                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  8088  005C14  9683               	bcf	3971,3,c	;volatile
  8089  005C16  9483               	bcf	3971,2,c	;volatile
  8090  005C18  8283               	bsf	3971,1,c	;volatile
  8091  005C1A  9083               	bcf	3971,0,c	;volatile
  8092  005C1C  8A83               	bsf	3971,5,c	;volatile
  8093  005C1E  9883               	bcf	3971,4,c	;volatile
  8094                           
  8095                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000/4000000.0)));
  8096  005C20  0E03               	movlw	3
  8097  005C22                     u3277:
  8098  005C22  2EE8               	decfsz	wreg,f,c
  8099  005C24  D7FE               	bra	u3277
  8100  005C26  F000               	nop	
  8101                           
  8102                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8103  005C28  9683               	bcf	3971,3,c	;volatile
  8104  005C2A  9483               	bcf	3971,2,c	;volatile
  8105  005C2C  8283               	bsf	3971,1,c	;volatile
  8106  005C2E  9083               	bcf	3971,0,c	;volatile
  8107  005C30  9A83               	bcf	3971,5,c	;volatile
  8108  005C32  9883               	bcf	3971,4,c	;volatile
  8109                           
  8110                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8111  005C34  0E0F               	movlw	15
  8112  005C36  6E04               	movwf	??_Lcd_Init& (0+255),c
  8113  005C38  0E48               	movlw	72
  8114  005C3A                     u3287:
  8115  005C3A  2EE8               	decfsz	wreg,f,c
  8116  005C3C  D7FE               	bra	u3287
  8117  005C3E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  8118  005C40  D7FC               	bra	u3287
  8119  005C42  0E28               	movlw	40
  8120  005C44  EC2E  F02E         	call	_Lcd_Cmd
  8121  005C48  0E10               	movlw	16
  8122  005C4A  EC2E  F02E         	call	_Lcd_Cmd
  8123  005C4E  0E01               	movlw	1
  8124  005C50  EC2E  F02E         	call	_Lcd_Cmd
  8125  005C54  0E0F               	movlw	15
  8126  005C56  EC2E  F02E         	call	_Lcd_Cmd
  8127  005C5A  0012               	return		;funcret
  8128  005C5C                     __end_of_Lcd_Init:
  8129                           	opt callstack 0
  8130                           
  8131 ;; *************** function _Lcd_Cmd *****************
  8132 ;; Defined at:
  8133 ;;		line 150 in file "./flex_lcd.h"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  data            1    wreg     unsigned char 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  data            1    2[COMRAM] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8147 ;;      Params:         0       0       0       0       0       0       0       0       0
  8148 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8149 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8150 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8151 ;;Total ram usage:        3 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_Lcd_Init
  8157 ;;		_Lcd_Out
  8158 ;;		_Lcd_Out2
  8159 ;;		_main
  8160 ;;		_incorrecto
  8161 ;;		_correcto
  8162 ;;		_letrero
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text22
  8167  005C5C                     __ptext22:
  8168                           	opt callstack 0
  8169  005C5C                     _Lcd_Cmd:
  8170                           	opt callstack 28
  8171                           
  8172                           ;incstack = 0
  8173                           ;Lcd_Cmd@data stored from wreg
  8174  005C5C  6E03               	movwf	Lcd_Cmd@data,c
  8175                           
  8176                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  8177  005C5E  9A83               	bcf	3971,5,c	;volatile
  8178  005C60  9883               	bcf	3971,4,c	;volatile
  8179                           
  8180                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  8181  005C62  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  8182  005C64  AE03               	btfss	Lcd_Cmd@data,7,c
  8183  005C66  D001               	bra	u1545
  8184  005C68  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  8185  005C6A                     u1545:
  8186  005C6A  0E01               	movlw	1
  8187  005C6C  1601               	andwf	??_Lcd_Cmd,f,c
  8188  005C6E  4601               	rlncf	??_Lcd_Cmd,f,c
  8189  005C70  4601               	rlncf	??_Lcd_Cmd,f,c
  8190  005C72  4601               	rlncf	??_Lcd_Cmd,f,c
  8191  005C74  5083               	movf	3971,w,c	;volatile
  8192  005C76  1801               	xorwf	??_Lcd_Cmd,w,c
  8193  005C78  0BF7               	andlw	-9
  8194  005C7A  1801               	xorwf	??_Lcd_Cmd,w,c
  8195  005C7C  6E83               	movwf	3971,c	;volatile
  8196  005C7E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8197  005C82  0E06               	movlw	6
  8198  005C84  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  8199  005C86                     u1555:
  8200  005C86  90D8               	bcf	status,0,c
  8201  005C88  3201               	rrcf	??_Lcd_Cmd,f,c
  8202  005C8A  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  8203  005C8C  D7FC               	goto	u1555
  8204  005C8E  0E01               	movlw	1
  8205  005C90  1601               	andwf	??_Lcd_Cmd,f,c
  8206  005C92  4601               	rlncf	??_Lcd_Cmd,f,c
  8207  005C94  4601               	rlncf	??_Lcd_Cmd,f,c
  8208  005C96  5083               	movf	3971,w,c	;volatile
  8209  005C98  1801               	xorwf	??_Lcd_Cmd,w,c
  8210  005C9A  0BFB               	andlw	-5
  8211  005C9C  1801               	xorwf	??_Lcd_Cmd,w,c
  8212  005C9E  6E83               	movwf	3971,c	;volatile
  8213                           
  8214                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  8215  005CA0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8216  005CA4  0E05               	movlw	5
  8217  005CA6  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  8218  005CA8                     u1565:
  8219  005CA8  90D8               	bcf	status,0,c
  8220  005CAA  3201               	rrcf	??_Lcd_Cmd,f,c
  8221  005CAC  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  8222  005CAE  D7FC               	goto	u1565
  8223  005CB0  0E01               	movlw	1
  8224  005CB2  1601               	andwf	??_Lcd_Cmd,f,c
  8225  005CB4  4601               	rlncf	??_Lcd_Cmd,f,c
  8226  005CB6  5083               	movf	3971,w,c	;volatile
  8227  005CB8  1801               	xorwf	??_Lcd_Cmd,w,c
  8228  005CBA  0BFD               	andlw	-3
  8229  005CBC  1801               	xorwf	??_Lcd_Cmd,w,c
  8230  005CBE  6E83               	movwf	3971,c	;volatile
  8231  005CC0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8232  005CC4  3A01               	swapf	??_Lcd_Cmd,f,c
  8233  005CC6  0E0F               	movlw	15
  8234  005CC8  1601               	andwf	??_Lcd_Cmd,f,c
  8235  005CCA  0E01               	movlw	1
  8236  005CCC  1601               	andwf	??_Lcd_Cmd,f,c
  8237  005CCE  5083               	movf	3971,w,c	;volatile
  8238  005CD0  1801               	xorwf	??_Lcd_Cmd,w,c
  8239  005CD2  0BFE               	andlw	-2
  8240  005CD4  1801               	xorwf	??_Lcd_Cmd,w,c
  8241  005CD6  6E83               	movwf	3971,c	;volatile
  8242                           
  8243                           ;./flex_lcd.h: 154: _delay(10);
  8244  005CD8  0E03               	movlw	3
  8245  005CDA                     u3297:
  8246  005CDA  2EE8               	decfsz	wreg,f,c
  8247  005CDC  D7FE               	bra	u3297
  8248  005CDE  F000               	nop	
  8249                           
  8250                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  8251  005CE0  8A83               	bsf	3971,5,c	;volatile
  8252  005CE2  0E03               	movlw	3
  8253  005CE4                     u3307:
  8254  005CE4  2EE8               	decfsz	wreg,f,c
  8255  005CE6  D7FE               	bra	u3307
  8256  005CE8  F000               	nop	
  8257  005CEA  9A83               	bcf	3971,5,c	;volatile
  8258                           
  8259                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  8260  005CEC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8261  005CF0  90D8               	bcf	status,0,c
  8262  005CF2  3201               	rrcf	??_Lcd_Cmd,f,c
  8263  005CF4  90D8               	bcf	status,0,c
  8264  005CF6  3201               	rrcf	??_Lcd_Cmd,f,c
  8265  005CF8  90D8               	bcf	status,0,c
  8266  005CFA  3201               	rrcf	??_Lcd_Cmd,f,c
  8267  005CFC  0E01               	movlw	1
  8268  005CFE  1601               	andwf	??_Lcd_Cmd,f,c
  8269  005D00  4601               	rlncf	??_Lcd_Cmd,f,c
  8270  005D02  4601               	rlncf	??_Lcd_Cmd,f,c
  8271  005D04  4601               	rlncf	??_Lcd_Cmd,f,c
  8272  005D06  5083               	movf	3971,w,c	;volatile
  8273  005D08  1801               	xorwf	??_Lcd_Cmd,w,c
  8274  005D0A  0BF7               	andlw	-9
  8275  005D0C  1801               	xorwf	??_Lcd_Cmd,w,c
  8276  005D0E  6E83               	movwf	3971,c	;volatile
  8277  005D10  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8278  005D14  90D8               	bcf	status,0,c
  8279  005D16  3201               	rrcf	??_Lcd_Cmd,f,c
  8280  005D18  90D8               	bcf	status,0,c
  8281  005D1A  3201               	rrcf	??_Lcd_Cmd,f,c
  8282  005D1C  0E01               	movlw	1
  8283  005D1E  1601               	andwf	??_Lcd_Cmd,f,c
  8284  005D20  4601               	rlncf	??_Lcd_Cmd,f,c
  8285  005D22  4601               	rlncf	??_Lcd_Cmd,f,c
  8286  005D24  5083               	movf	3971,w,c	;volatile
  8287  005D26  1801               	xorwf	??_Lcd_Cmd,w,c
  8288  005D28  0BFB               	andlw	-5
  8289  005D2A  1801               	xorwf	??_Lcd_Cmd,w,c
  8290  005D2C  6E83               	movwf	3971,c	;volatile
  8291                           
  8292                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  8293  005D2E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8294  005D32  90D8               	bcf	status,0,c
  8295  005D34  3201               	rrcf	??_Lcd_Cmd,f,c
  8296  005D36  0E01               	movlw	1
  8297  005D38  1601               	andwf	??_Lcd_Cmd,f,c
  8298  005D3A  4601               	rlncf	??_Lcd_Cmd,f,c
  8299  005D3C  5083               	movf	3971,w,c	;volatile
  8300  005D3E  1801               	xorwf	??_Lcd_Cmd,w,c
  8301  005D40  0BFD               	andlw	-3
  8302  005D42  1801               	xorwf	??_Lcd_Cmd,w,c
  8303  005D44  6E83               	movwf	3971,c	;volatile
  8304  005D46  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8305  005D4A  0E01               	movlw	1
  8306  005D4C  1601               	andwf	??_Lcd_Cmd,f,c
  8307  005D4E  5083               	movf	3971,w,c	;volatile
  8308  005D50  1801               	xorwf	??_Lcd_Cmd,w,c
  8309  005D52  0BFE               	andlw	-2
  8310  005D54  1801               	xorwf	??_Lcd_Cmd,w,c
  8311  005D56  6E83               	movwf	3971,c	;volatile
  8312                           
  8313                           ;./flex_lcd.h: 158: _delay(10);
  8314  005D58  0E03               	movlw	3
  8315  005D5A                     u3317:
  8316  005D5A  2EE8               	decfsz	wreg,f,c
  8317  005D5C  D7FE               	bra	u3317
  8318  005D5E  F000               	nop	
  8319                           
  8320                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  8321  005D60  8A83               	bsf	3971,5,c	;volatile
  8322  005D62  0E03               	movlw	3
  8323  005D64                     u3327:
  8324  005D64  2EE8               	decfsz	wreg,f,c
  8325  005D66  D7FE               	bra	u3327
  8326  005D68  F000               	nop	
  8327  005D6A  9A83               	bcf	3971,5,c	;volatile
  8328                           
  8329                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8330  005D6C  0E0F               	movlw	15
  8331  005D6E  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  8332  005D70  0E48               	movlw	72
  8333  005D72                     u3337:
  8334  005D72  2EE8               	decfsz	wreg,f,c
  8335  005D74  D7FE               	bra	u3337
  8336  005D76  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  8337  005D78  D7FC               	bra	u3337
  8338  005D7A  0012               	return		;funcret
  8339  005D7C                     __end_of_Lcd_Cmd:
  8340                           	opt callstack 0
  8341                           
  8342                           	psect	rparam
  8343  0000                     tosu	equ	0xFFF
  8344                           tosh	equ	0xFFE
  8345                           tosl	equ	0xFFD
  8346                           stkptr	equ	0xFFC
  8347                           pclatu	equ	0xFFB
  8348                           pclath	equ	0xFFA
  8349                           pcl	equ	0xFF9
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           indf0	equ	0xFEF
  8357                           postinc0	equ	0xFEE
  8358                           postdec0	equ	0xFED
  8359                           preinc0	equ	0xFEC
  8360                           plusw0	equ	0xFEB
  8361                           fsr0h	equ	0xFEA
  8362                           fsr0l	equ	0xFE9
  8363                           wreg	equ	0xFE8
  8364                           indf1	equ	0xFE7
  8365                           postinc1	equ	0xFE6
  8366                           postdec1	equ	0xFE5
  8367                           preinc1	equ	0xFE4
  8368                           plusw1	equ	0xFE3
  8369                           fsr1h	equ	0xFE2
  8370                           fsr1l	equ	0xFE1
  8371                           bsr	equ	0xFE0
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           postdec2	equ	0xFDD
  8375                           preinc2	equ	0xFDC
  8376                           plusw2	equ	0xFDB
  8377                           fsr2h	equ	0xFDA
  8378                           fsr2l	equ	0xFD9
  8379                           status	equ	0xFD8


Data Sizes:
    Strings     719
    Constant    0
    Data        0
    BSS         107
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     28     141
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_52(CODE[3]), STR_49(CODE[3]), STR_35(CODE[4]), STR_24(CODE[4]), 
		 -> STR_18(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra(BANK0[17]), palabra1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra(BANK0[17]), palabra1(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S884_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra(BANK0[17]), palabra1(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra(BANK0[17]), palabra1(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_52(CODE[3]), STR_49(CODE[3]), STR_35(CODE[4]), STR_24(CODE[4]), 
		 -> STR_18(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_52(CODE[3]), STR_49(CODE[3]), STR_35(CODE[4]), STR_24(CODE[4]), 
		 -> STR_18(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra2(BANK0[17]), palabra(BANK0[17]), palabra1(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_68(CODE[8]), STR_67(CODE[16]), STR_66(CODE[9]), STR_65(CODE[11]), 
		 -> STR_64(CODE[11]), STR_63(CODE[13]), STR_62(CODE[12]), STR_61(CODE[7]), 
		 -> STR_60(CODE[17]), STR_59(CODE[7]), STR_58(CODE[19]), STR_57(CODE[12]), 
		 -> STR_56(CODE[17]), STR_55(CODE[7]), STR_54(CODE[17]), STR_53(CODE[14]), 
		 -> STR_51(CODE[5]), STR_50(CODE[6]), STR_48(CODE[5]), STR_47(CODE[6]), 
		 -> STR_46(CODE[26]), STR_45(CODE[20]), STR_44(CODE[22]), STR_43(CODE[14]), 
		 -> STR_42(CODE[15]), STR_41(CODE[9]), STR_40(CODE[19]), STR_39(CODE[13]), 
		 -> STR_38(CODE[14]), STR_37(CODE[10]), STR_36(CODE[14]), STR_34(CODE[8]), 
		 -> STR_33(CODE[11]), STR_32(CODE[26]), STR_31(CODE[37]), STR_30(CODE[7]), 
		 -> STR_29(CODE[17]), STR_28(CODE[13]), STR_27(CODE[14]), STR_26(CODE[10]), 
		 -> STR_25(CODE[16]), STR_23(CODE[10]), STR_22(CODE[11]), STR_21(CODE[26]), 
		 -> STR_20(CODE[39]), STR_19(CODE[9]), STR_17(CODE[13]), STR_16(CODE[4]), 
		 -> STR_15(CODE[16]), STR_14(CODE[4]), STR_13(CODE[15]), STR_12(CODE[8]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[13]), STR_8(CODE[2]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[13]), STR_4(CODE[13]), 
		 -> STR_3(CODE[14]), STR_2(CODE[3]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _incorrecto->_Lcd_Out
    _correcto->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _letrero->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_correcto
    _correcto->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   52530
                                             20 BANK0      8     8      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                             ___lmul
                           _correcto
                         _incorrecto
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _incorrecto                                           2     2      0   10285
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _correcto                                            10    10      0   30618
                                             10 BANK0     10    10      0
                            _Lcd_Cmd
                            _Lcd_Out
                           _Lcd_Out2
                             ___lmul
                            _letrero
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    7064
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _letrero                                              2     2      0   10285
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3   10109
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             7     4      3    1293
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___lmul
   _correcto
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     ___lmul
     _letrero
       _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _teclado
   _incorrecto
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _teclado
   _teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      8D       5       88.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EC      20        0.0%
DATA                 0      0      EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 04 22:07:52 2019

                     l37 5BC6              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l120 6326                      l112 63CE                      l124 637A  
                    l116 62D2                      l234 594C                      l245 65D2  
                    l247 65DA                      l957 56F6             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      _abs 56CE  
                    _pad 591C                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     ?_abs 0013  
                   l3000 6E3E                     l3022 6F48                     l3006 6E72  
                   l2400 56B2                     l3200 74D6                     l3104 71AA  
                   l2410 5936                     l2500 5E42                     l2420 596E  
                   l3212 750E                     l3124 721C                     l3116 71E0  
                   l3108 71B8                     l3052 705C                     l2414 5944  
                   l3302 7724                     l3222 754A                     l3142 7286  
                   l2440 5FF4                     l2504 5E58                     l2424 599C  
                   l2416 5956                     l3304 772A                     l3240 75B8  
                   l3232 75AE                     l3136 7252                     l3128 722A  
                   l3410 7B16                     l3074 70EA                     l2700 5840  
                   l2452 6042                     l2508 5E7E                     l2380 59CE  
                   l2532 65F4                     l3324 782E                     l3308 7758  
                   l3260 762C                     l3252 7602                     l3084 7136  
                   l2702 5846                     l2710 587C                     l2454 6056  
                   l2446 601C                     l2390 570A                     l2518 65B4  
                   l3406 7B08                     l3326 783E                     l3270 767A  
                   l3158 735C                     l2712 5884                     l2704 584C  
                   l2472 60EE                     l2464 60B2                     l2536 6602  
                   l3248 75F4                     l3096 716E                     l3088 7144  
                   l3512 5B30                     l2394 5720                     l2570 677A  
                   l2546 66FA                     l3418 7B40                     l3354 799C  
                   l3338 78C6                     l3434 7B96                     l3290 76EE  
                   l3282 76B2                     l3274 7688                     l3514 5B34  
                   l3602 6AA8                     l3530 67FE                     l2716 5896  
                   l2708 5854                     l2468 60C8                     l2492 5DE6  
                   l2484 5DA8                     l2644 6508                     l2740 62BE  
                   l2732 6296                     l3444 7BE2                     l3380 7A34  
                   l3372 7A0A                     l3356 79A4                     l3188 7470  
                   l2670 58BC                     l2494 5DFA                     l2398 56AE  
                   l2566 6762                     l2638 64CC                     l2654 652A  
                   l3294 76FC                     l2910 6BF0                     l2664 58AA  
                   l2488 5DCC                     l2648 6512                     l2752 62FE  
                   l2736 62AA                     l3456 7C1A                     l3448 7BF0  
                   l3368 79FC                     l2912 6BF8                     l3480 7D1A  
                   l2842 579A                     l2682 5908                     l2666 58B0  
                   l2674 58C4                     l3474 7CAC                     l3394 7AB4  
                   l3642 6BB0                     l3618 6B0A                     l3562 6920  
                   l2668 58B6                     l2676 58EC                     l2692 57F4  
                   l2780 6392                     l2772 6366                     l2764 633E  
                   l2756 6312                     l2748 62EA                     l2932 6CB0  
                   l2846 57AE                     l2678 58F4                     l2694 581A  
                   l3750 7CE2                     l3478 7CC6                     l3646 6BCE  
                   l3558 68FC                     ?_pad 0011                     l2792 63D2  
                   l2784 63A6                     l2768 6352                     l3752 7D12  
                   l2960 6D5A                     l2952 6D30                     l3576 69C6  
                   l2698 583A                     l2938 6CD6                     l3578 69D6  
                   l2788 63BA                     l2980 6DCC                     l2972 6DA4  
                   l2948 6D22                     l2992 6E16                     l2968 6D96  
                   l2988 6E08                     STR_1 7F76                     STR_2 7FFB  
                   STR_3 7ECD                     STR_4 7F1F                     STR_5 7F2C  
                   STR_6 7DFF                     STR_7 7E43                     STR_8 7E0E  
                   STR_9 7F46                     u2000 7384                     u1300 605A  
                   u2101 7894                     u2110 78A2                     u1160 59C6  
                   u1400 6588                     u2120 7900                     u1250 56DC  
                   u2210 6948                     u1180 5A0E                     u1500 673E  
                   u1430 65C8                     u2070 7792                     _LATB 000F8A  
                   u3007 7BB8                     u1360 5DFE                     u1520 674C  
                   u1281 6022                     u3017 7C02                     u1450 65EE  
                   u3107 620A                     u3027 7C38                     u2307 682E  
                   u1460 6708                     u1620 644E                     u3117 6228  
                   u3037 7C58                     u2317 684E                     u1390 6586  
                   u3207 5B82                     u3127 6252                     u3047 7C96  
                   u2407 6B1C                     u2327 688C                     u1480 672A  
                   u1545 5C6A                     u3217 5B90                     u3137 5F1E  
                   u3057 613E                     u1481 6728                     u2417 6B68  
                   u2337 68AC                     u1490 6738                     u3307 5CE4  
                   u1555 5C86                     u3227 5B9E                     u3147 5F28  
                   u3067 6156                     u2507 6C9C                     u2427 6B88  
                   u2347 68E8                     u3317 5D5A                     u1565 5CA8  
                   u3237 5BAC                     u3157 5F9E                     u3077 6174  
                   u2517 6CBC                     u2437 6BC2                     u2357 6908  
                   u1910 6EAC                     u3327 5D64                     u3247 5BBA  
                   u3167 5FA8                     u1575 5EAE                     u3087 61B0  
                   u2607 6FD0                     u2527 6CF8                     u2447 5A84  
                   u2367 6A28                     u3337 5D72                     u3257 5BE0  
                   u3177 5FB2                     u1585 5ECA                     u3097 61CE  
                   u2617 6FF0                     u2537 6D42                     u2457 5A9C  
                   u2377 6A74                     u2297 67F0                     u1930 6F70  
                   u3267 5BF8                     u3187 5FBE                     u1595 5EEC  
                   u2707 71F2                     u2627 702E                     u2547 6D6C  
                   u2467 5ADE                     u2387 6A94                     u3277 5C22  
                   u3197 5B74                     u2717 723C                     u2637 704E  
                   u2557 6DB6                     u2477 5AF6                     u2397 6AD0  
                   u3287 5C3A                     u2807 7532                     u2727 7264  
                   u2647 707E                     u2567 6DDE                     u2487 6C1A  
                   u3297 5CDA                     u2817 7580                     u2737 73A6  
                   u2657 70D4                     u2577 6E28                     u2497 6C7C  
                   u2907 7860                     u2827 75A0                     u2747 73E4  
                   u2667 710C                     u2587 6E50                     u1980 72C0  
                   u2917 79D2                     u2837 75CA                     u2757 7404  
                   u2677 7156                     u2597 6F92                     u2927 7A1C  
                   u2847 7614                     u2767 7442                     u2687 7180  
                   u2937 7A46                     u2857 763E                     u2777 7462  
                   u2697 71CA                     u2947 7A84                     u2867 769A  
                   u2787 7492                     u2957 7AA4                     u2877 76C4  
                   u2797 74F8                     u2967 7ADE                     u2887 770E  
                   u2977 7B28                     u2897 7736                     u2987 7B5E  
                   u2997 7B7E             __CFG_PWRT$ON 000000                     abs@a 0013  
                   _dbuf 0078                     _main 67A4                     _dtoa 655E  
                   _pin1 0068                     _paso 0074                     _prec 0070  
                   _sum1 0064                     _nout 006C                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_Lcd_Cmd 5D7C          __end_of_Lcd_Out 591C            __CFG_MCLRE$ON 000000  
           ___param_bank 000000               _Lcd_Chr_CP 5EA0                    ??_abs 0015  
                  ??_pad 0017           Lcd_Out2@buffer 0005            __CFG_PLLDIV$1 000000  
        __end_of___aodiv 6110                    ?_main 0001                    ?_dtoa 001C  
        __end_of___aomod 5EA0                    STR_10 7EA1                    STR_11 7EB0  
                  STR_12 7FC5                    STR_20 7D2F                    STR_13 7E83  
                  STR_21 7D7B                    STR_30 7FB6                    STR_14 7FF7  
                  STR_22 7F8C                    STR_23 7F97                    STR_15 7E53  
                  STR_31 7D56                    STR_24 7FDE                    STR_16 7FF3  
                  STR_40 7DD9                    STR_32 7D95                    STR_33 7F8C  
                  STR_41 7FAB                    STR_17 7F05                    STR_25 7E63  
                  STR_50 7FE8                    STR_18 7FDC                    STR_34 7FBD  
                  STR_26 7FA1                    STR_42 7E92                    STR_51 7FEE  
                  STR_35 7FDE                    STR_19 7F83                    STR_43 7EDB  
                  STR_27 7EBF                    STR_52 7FDF                    STR_60 7E32  
                  STR_28 7F39                    STR_36 7EF7                    STR_44 7DAF  
                  STR_37 7FA1                    STR_61 7F32                    STR_53 7EE9  
                  STR_29 7E10                    STR_45 7DC5                    STR_38 7EBF  
                  STR_46 7D95                    STR_62 7F5F                    STR_54 7E32  
                  STR_55 7F32                    STR_39 7F39                    STR_47 7FE2  
                  STR_63 7F12                    STR_48 7FEE                    STR_64 7F6B  
                  STR_56 7E21                    STR_49 7FDF                    STR_65 7F81  
                  STR_57 7F53                    STR_66 7FB4                    STR_58 7DEC  
                  STR_59 7FD5                    STR_67 7E73                    STR_68 7FCD  
           vfpfcnvrt@fmt 0042                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 0072                    _fputc 59B6  
                  _fputs 5700                    _saldo 00E7          __end_of_letrero 6260  
                  _valor 0060                    pad@fp 0011                    _width 006E  
                  _putch 568C                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032          __end_of_teclado 63DC                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 578A           __CFG_ICPRT$OFF 000000  
       __end_of_Lcd_Init 5C5C         __end_of_Lcd_Out2 58A6          __initialization 568E  
           __end_of_main 6BD6             __end_of_dtoa 67A4                   ??_main 00DF  
                 ??_dtoa 0026            __activetblptr 000002          __CFG_CCP2MX$OFF 000000  
                 _ADCON1 000FC1                   ?_fputc 0001                   ?_fputs 000A  
                 ?_putch 0001                ??_Lcd_Cmd 0001                ??_Lcd_Out 0007  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 0056                   ___lmul 578A  
            ?_Lcd_Chr_CP 0001                ??___aodiv 0011                ??___aomod 0011  
                 _cambio 0076         __end_of_correcto 7D2E           __CFG_STVREN$ON 000000  
                 clear_0 5694                   pad@buf 0013                   dtoa@fp 001C  
                 _strlen 56A4                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_letrero 000B  
              ??_teclado 0001             __mediumconst 7D2E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 5836                ??_sprintf 0060               __accesstop 0060  
__end_of__initialization 569A          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 5A56            __end_of_fputs 5738  
          __end_of_putch 568E                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
        __CFG_LPT1OSC$ON 000000                  ??_fputc 0005                  ??_fputs 000E  
    __size_of_Lcd_Chr_CP 0128                  ??_putch 0001               __pbssBANK0 0060  
                ?___lmul 0001           ___lmul@product 0009                  ?_strlen 0001  
     __size_of_vfpfcnvrt 0182               ??_Lcd_Init 0004               ??_Lcd_Out2 0007  
              ?_correcto 0001          __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 5C5C  
                _Lcd_Out 58A6                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 5FC8                  ___aomod 5D7C               _incorrecto 5A56  
        __size_of___lmul 0056                ?_vfprintf 0050                  __pcinit 568E  
                __ramtop 0800                  __ptext0 67A4                  __ptext1 5A56  
                __ptext2 6BD6                  __ptext3 6260                  __ptext4 5738  
                __ptext5 57E0                  __ptext6 63DC                  __ptext7 655E  
                __ptext8 591C                  __ptext9 56A4          __size_of_strlen 002A  
                _palabra 00BA             __size_of_abs 0032             __size_of_pad 009A  
                _letrero 6110                  _teclado 6260                  _pasword 00EB  
                _sprintf 5738                  main@opt 00E5     end_of_initialization 569A  
             ??_correcto 00D5                  fputc@fp 0003            __Lmediumconst 7D2E  
                fputs@fp 000C        __end_of_vfpfcnvrt 655E             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0009                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0056                  strlen@a 0003                  strlen@s 0001  
              _PORTBbits 000F81                _PORTDbits 000F83         correcto@deposito 00D9  
              _TRISDbits 000F95       __end_of_Lcd_Chr_CP 5FC8              ?_incorrecto 0001  
         __end_of___lmul 57E0              vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040  
            vfpfcnvrt@ll 0048           __end_of_strlen 56CE      start_initialization 568E  
            __end_of_abs 5700              __end_of_pad 59B6            Lcd_Out@buffer 0005  
      __size_of_Lcd_Init 0106        __size_of_Lcd_Out2 0070              vfprintf@fmt 0052  
               ??___lmul 0009                 ??_strlen 0003            __pcstackBANK0 00CB  
       ___aodiv@dividend 0001      __size_of_incorrecto 0100                 ?_Lcd_Cmd 0001  
               ?_Lcd_Out 0004        __size_of_correcto 1158                __pnvBANK0 00E7  
          __pmediumconst 7D2E                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013        __size_of_vfprintf 0056                 ?_letrero 0001  
               ?_teclado 0001                 ?_sprintf 0058           __size_of_fputc 00A0  
         __size_of_fputs 0038           __size_of_putch 0002                 Lcd_Out@x 0004  
       __CFG_WDTPS$32768 000000                 Lcd_Out@y 0009                _vfpfcnvrt 63DC  
           Lcd_Init@data 0005             Lcd_Out2@data 000A                 _Lcd_Init 5B56  
               _Lcd_Out2 5836        ___lmul@multiplier 0001              _INTCON2bits 000FF1  
              correcto@i 00DD         __size_of_Lcd_Cmd 0120         __size_of_Lcd_Out 0076  
               __Hrparam 0000               vfprintf@ap 0054                 __Lrparam 0000  
             vfprintf@fp 0050             ??_incorrecto 000B         __size_of___aodiv 0148  
       __size_of___aomod 0124               ?_vfpfcnvrt 0040          ___aodiv@divisor 0009  
        ___aodiv@counter 0011               sprintf@fmt 005A           Lcd_Chr_CP@data 0003  
               _dtoa$423 002E         __size_of_letrero 0150         __size_of_teclado 017C  
               __ptext10 5700                 __ptext11 59B6                 __ptext20 5EA0  
               __ptext12 568C                 __ptext21 5B56                 __ptext13 56CE  
               __ptext22 5C5C                 __ptext14 5D7C                 __ptext15 5FC8  
               __ptext16 6110                 __ptext17 58A6                 __ptext18 578A  
               __ptext19 5836         __size_of_sprintf 0052                 _correcto 6BD6  
     __end_of_incorrecto 5B56                 _palabra1 00A9                 _palabra2 0098  
            Lcd_Cmd@data 0003            __size_of_main 0432            __size_of_dtoa 0246  
               _vfprintf 57E0                 main@show 00E3         ___aomod@dividend 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000              Lcd_Out@data 000A                sprintf@ap 00CD  
        ___aomod@divisor 0009              ??_vfpfcnvrt 0046          ___aomod@counter 0011  
               sprintf@f 00CF                 sprintf@s 0058             ___aodiv@sign 0012  
           ___aomod@sign 0012  
