

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 17 00:33:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  0000EE                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _numero
    59  0000EE  007E               	dw	126
    60  0000F0  0030               	dw	48
    61  0000F2  006D               	dw	109
    62  0000F4  0079               	dw	121
    63  0000F6  003B               	dw	59
    64  0000F8  005B               	dw	91
    65  0000FA  005F               	dw	95
    66  0000FC  0071               	dw	113
    67  0000FE  00FF               	dw	255
    68  000100  00F3               	dw	243
    69                           
    70                           ;initializer for _cont1
    71  000102  0009               	dw	9
    72  0000                     _TMR0	set	4054
    73  0000                     _PORTD	set	3971
    74  0000                     _T0CONbits	set	4053
    75  0000                     _INTCONbits	set	4082
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TRISAbits	set	3986
    78  0000                     _TRISD	set	3989
    79  0000                     _ADCON1	set	4033
    80                           
    81                           ; #config settings
    82  0000                     
    83                           	psect	cinit
    84  000088                     __pcinit:
    85                           	opt callstack 0
    86  000088                     start_initialization:
    87                           	opt callstack 0
    88  000088                     __initialization:
    89                           	opt callstack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (22 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93  000088  0EEE               	movlw	low __pidataCOMRAM
    94  00008A  6EF6               	movwf	tblptrl,c
    95  00008C  0E00               	movlw	high __pidataCOMRAM
    96  00008E  6EF7               	movwf	tblptrh,c
    97  000090  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98  000092  6EF8               	movwf	tblptru,c
    99  000094  EE00  F001         	lfsr	0,__pdataCOMRAM
   100  000098  EE10 F016          	lfsr	1,22
   101  00009C                     copy_data0:
   102  00009C  0009               	tblrd		*+
   103  00009E  CFF5 FFEE          	movff	tablat,postinc0
   104  0000A2  50E5               	movf	postdec1,w,c
   105  0000A4  50E1               	movf	fsr1l,w,c
   106  0000A6  E1FA               	bnz	copy_data0
   107                           
   108                           ; Clear objects allocated to COMRAM (4 bytes)
   109  0000A8  6A1A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   110  0000AA  6A19               	clrf	(__pbssCOMRAM+2)& (0+255),c
   111  0000AC  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112  0000AE  6A17               	clrf	__pbssCOMRAM& (0+255),c
   113  0000B0                     end_of_initialization:
   114                           	opt callstack 0
   115  0000B0                     __end_of__initialization:
   116                           	opt callstack 0
   117  0000B0  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  0000B2  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  0000B4  0100               	movlb	0
   120  0000B6  EF82  F000         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	bssCOMRAM
   123  000017                     __pbssCOMRAM:
   124                           	opt callstack 0
   125  000017                     _cont:
   126                           	opt callstack 0
   127  000017                     	ds	4
   128                           
   129                           	psect	dataCOMRAM
   130  000001                     __pdataCOMRAM:
   131                           	opt callstack 0
   132  000001                     _numero:
   133                           	opt callstack 0
   134  000001                     	ds	20
   135  000015                     _cont1:
   136                           	opt callstack 0
   137  000015                     	ds	2
   138                           
   139                           	psect	cstackCOMRAM
   140  00001B                     __pcstackCOMRAM:
   141                           	opt callstack 0
   142  00001B                     ??_tcInt:
   143                           
   144                           ; 1 bytes @ 0x0
   145  00001B                     	ds	2
   146  00001D                     
   147                           ; 1 bytes @ 0x2
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 39 in file "Practica4.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called:    2
   173 ;; This function calls:
   174 ;;		_puertos
   175 ;;		_timer
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  000104                     __ptext0:
   183                           	opt callstack 0
   184  000104                     _main:
   185                           	opt callstack 29
   186                           
   187                           ;Practica4.c: 40:     puertos();
   188                           
   189                           ;incstack = 0
   190  000104  EC6A  F000         	call	_puertos	;wreg free
   191                           
   192                           ;Practica4.c: 41:     timer();
   193  000108  EC5D  F000         	call	_timer	;wreg free
   194                           
   195                           ;Practica4.c: 42:     TMR0=60;
   196  00010C  0E00               	movlw	0
   197  00010E  6ED7               	movwf	4055,c	;volatile
   198  000110  0E3C               	movlw	60
   199  000112  6ED6               	movwf	4054,c	;volatile
   200                           
   201                           ;Practica4.c: 43:     PORTD=0;
   202  000114  0E00               	movlw	0
   203  000116  6E83               	movwf	3971,c	;volatile
   204  000118                     l33:
   205  000118  D7FF               	goto	l33
   206  00011A                     __end_of_main:
   207                           	opt callstack 0
   208                           
   209 ;; *************** function _timer *****************
   210 ;; Defined at:
   211 ;;		line 23 in file "Practica4.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   225 ;;      Params:         0       0       0       0       0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels used:    1
   231 ;; Hardware stack levels required when called:    1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text1
   240  0000BA                     __ptext1:
   241                           	opt callstack 0
   242  0000BA                     _timer:
   243                           	opt callstack 29
   244                           
   245                           ;Practica4.c: 24:     INTCONbits.GIE=0;
   246                           
   247                           ;incstack = 0
   248  0000BA  9EF2               	bcf	4082,7,c	;volatile
   249                           
   250                           ;Practica4.c: 25:     T0CONbits.T08BIT=1;
   251  0000BC  8CD5               	bsf	4053,6,c	;volatile
   252                           
   253                           ;Practica4.c: 26:     T0CONbits.T0CS=0;
   254  0000BE  9AD5               	bcf	4053,5,c	;volatile
   255                           
   256                           ;Practica4.c: 27:     T0CONbits.T0SE=0;
   257  0000C0  98D5               	bcf	4053,4,c	;volatile
   258                           
   259                           ;Practica4.c: 28:     T0CONbits.T0PS=0b111;
   260  0000C2  0E07               	movlw	7
   261  0000C4  12D5               	iorwf	4053,f,c	;volatile
   262                           
   263                           ;Practica4.c: 29:     T0CONbits.TMR0ON=1;
   264  0000C6  8ED5               	bsf	4053,7,c	;volatile
   265                           
   266                           ;Practica4.c: 30:     T0CONbits.PSA=0;
   267  0000C8  96D5               	bcf	4053,3,c	;volatile
   268                           
   269                           ;Practica4.c: 31:     INTCONbits.TMR0IE=1;
   270  0000CA  8AF2               	bsf	4082,5,c	;volatile
   271                           
   272                           ;Practica4.c: 32:     INTCONbits.TMR0IF=0;
   273  0000CC  94F2               	bcf	4082,2,c	;volatile
   274                           
   275                           ;Practica4.c: 33:     INTCONbits.PEIE=1;
   276  0000CE  8CF2               	bsf	4082,6,c	;volatile
   277                           
   278                           ;Practica4.c: 34:     INTCONbits.GIE=1;
   279  0000D0  8EF2               	bsf	4082,7,c	;volatile
   280  0000D2  0012               	return		;funcret
   281  0000D4                     __end_of_timer:
   282                           	opt callstack 0
   283                           
   284 ;; *************** function _puertos *****************
   285 ;; Defined at:
   286 ;;		line 11 in file "Practica4.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   300 ;;      Params:         0       0       0       0       0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0
   303 ;;      Totals:         0       0       0       0       0       0       0       0       0
   304 ;;Total ram usage:        0 bytes
   305 ;; Hardware stack levels used:    1
   306 ;; Hardware stack levels required when called:    1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text2
   315  0000D4                     __ptext2:
   316                           	opt callstack 0
   317  0000D4                     _puertos:
   318                           	opt callstack 29
   319                           
   320                           ;Practica4.c: 12:     ADCON1=0x0F;
   321                           
   322                           ;incstack = 0
   323  0000D4  0E0F               	movlw	15
   324  0000D6  6EC1               	movwf	4033,c	;volatile
   325                           
   326                           ;Practica4.c: 13:     TRISD=0x00;
   327  0000D8  0E00               	movlw	0
   328  0000DA  6E95               	movwf	3989,c	;volatile
   329                           
   330                           ;Practica4.c: 14:     TRISAbits.RA0=0;
   331  0000DC  9092               	bcf	3986,0,c	;volatile
   332                           
   333                           ;Practica4.c: 15:     TRISAbits.RA1=0;
   334  0000DE  9292               	bcf	3986,1,c	;volatile
   335                           
   336                           ;Practica4.c: 16:     TRISAbits.RA2=0;
   337  0000E0  9492               	bcf	3986,2,c	;volatile
   338                           
   339                           ;Practica4.c: 17:     TRISAbits.RA3=0;
   340  0000E2  9692               	bcf	3986,3,c	;volatile
   341                           
   342                           ;Practica4.c: 18:     TRISBbits.RB0=1;
   343  0000E4  8093               	bsf	3987,0,c	;volatile
   344                           
   345                           ;Practica4.c: 19:     TRISBbits.RB1=1;
   346  0000E6  8293               	bsf	3987,1,c	;volatile
   347                           
   348                           ;Practica4.c: 20:     TRISBbits.RB2=1;
   349  0000E8  8493               	bsf	3987,2,c	;volatile
   350                           
   351                           ;Practica4.c: 21:     TRISBbits.RB3=1;
   352  0000EA  8693               	bsf	3987,3,c	;volatile
   353  0000EC  0012               	return		;funcret
   354  0000EE                     __end_of_puertos:
   355                           	opt callstack 0
   356                           
   357 ;; *************** function _tcInt *****************
   358 ;; Defined at:
   359 ;;		line 47 in file "Practica4.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   373 ;;      Params:         0       0       0       0       0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0       0       0       0       0
   375 ;;      Temps:          2       0       0       0       0       0       0       0       0
   376 ;;      Totals:         2       0       0       0       0       0       0       0       0
   377 ;;Total ram usage:        2 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		Interrupt level 2
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	intcode
   387  000008                     __pintcode:
   388                           	opt callstack 0
   389  000008                     _tcInt:
   390                           	opt callstack 29
   391                           
   392                           ;incstack = 0
   393  000008  821D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   394  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   395                           
   396                           	psect	intcode_body
   397  000012                     __pintcode_body:
   398                           	opt callstack 29
   399  000012                     int_func:
   400                           	opt callstack 29
   401  000012  0006               	pop		; remove dummy address from shadow register refresh
   402  000014  CFD9 F01B          	movff	fsr2l,??_tcInt
   403  000018  CFDA F01C          	movff	fsr2h,??_tcInt+1
   404                           
   405                           ;Practica4.c: 48:     if(INTCONbits.TMR0IF==1){
   406  00001C  A4F2               	btfss	4082,2,c	;volatile
   407  00001E  D02E               	goto	i2l44
   408                           
   409                           ;Practica4.c: 50:         TMR0=60;
   410  000020  0E00               	movlw	0
   411  000022  6ED7               	movwf	4055,c	;volatile
   412  000024  0E3C               	movlw	60
   413  000026  6ED6               	movwf	4054,c	;volatile
   414                           
   415                           ;Practica4.c: 51:         INTCONbits.TMR0IF=0;
   416  000028  94F2               	bcf	4082,2,c	;volatile
   417                           
   418                           ;Practica4.c: 52:         cont++;
   419  00002A  0E01               	movlw	1
   420  00002C  2617               	addwf	_cont,f,c
   421  00002E  0E00               	movlw	0
   422  000030  2218               	addwfc	_cont+1,f,c
   423  000032  2219               	addwfc	_cont+2,f,c
   424  000034  221A               	addwfc	_cont+3,f,c
   425                           
   426                           ;Practica4.c: 53:         if(cont==40){
   427  000036  0E28               	movlw	40
   428  000038  1817               	xorwf	_cont,w,c
   429  00003A  1018               	iorwf	_cont+1,w,c
   430  00003C  1019               	iorwf	_cont+2,w,c
   431  00003E  101A               	iorwf	_cont+3,w,c
   432  000040  A4D8               	btfss	status,2,c
   433  000042  D01C               	goto	i2l44
   434                           
   435                           ;Practica4.c: 54:             PORTD=numero[cont1];
   436  000044  90D8               	bcf	status,0,c
   437  000046  3415               	rlcf	_cont1,w,c
   438  000048  6ED9               	movwf	fsr2l,c
   439  00004A  3416               	rlcf	_cont1+1,w,c
   440  00004C  6EDA               	movwf	fsr2h,c
   441  00004E  0E01               	movlw	low _numero
   442  000050  26D9               	addwf	fsr2l,f,c
   443  000052  0E00               	movlw	high _numero
   444  000054  22DA               	addwfc	fsr2h,f,c
   445  000056  50DF               	movf	indf2,w,c
   446  000058  6E83               	movwf	3971,c	;volatile
   447                           
   448                           ;Practica4.c: 55:             cont1--;
   449  00005A  0615               	decf	_cont1,f,c
   450  00005C  A0D8               	btfss	status,0,c
   451  00005E  0616               	decf	_cont1+1,f,c
   452                           
   453                           ;Practica4.c: 56:             if(cont1<0){
   454  000060  AE16               	btfss	_cont1+1,7,c
   455  000062  D004               	goto	i2l43
   456                           
   457                           ;Practica4.c: 57:                 cont1=9;
   458  000064  0E00               	movlw	0
   459  000066  6E16               	movwf	_cont1+1,c
   460  000068  0E09               	movlw	9
   461  00006A  6E15               	movwf	_cont1,c
   462  00006C                     i2l43:
   463                           
   464                           ;Practica4.c: 60:             cont=0;
   465  00006C  0E00               	movlw	0
   466  00006E  6E17               	movwf	_cont,c
   467  000070  0E00               	movlw	0
   468  000072  6E18               	movwf	_cont+1,c
   469  000074  0E00               	movlw	0
   470  000076  6E19               	movwf	_cont+2,c
   471  000078  0E00               	movlw	0
   472  00007A  6E1A               	movwf	_cont+3,c
   473  00007C                     i2l44:
   474  00007C  C01C  FFDA         	movff	??_tcInt+1,fsr2h
   475  000080  C01B  FFD9         	movff	??_tcInt,fsr2l
   476  000084  921D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   477  000086  0011               	retfie		f
   478  000088                     __end_of_tcInt:
   479                           	opt callstack 0
   480  0000                     
   481                           	psect	rparam
   482  0000                     
   483                           	psect	temp
   484  00001D                     btemp:
   485                           	opt callstack 0
   486  00001D                     	ds	1
   487  0000                     int$flags	set	btemp
   488  0000                     wtemp8	set	btemp+1
   489  0000                     ttemp5	set	btemp+1
   490  0000                     ttemp6	set	btemp+4
   491  0000                     ttemp7	set	btemp+8
   492                           tosu	equ	0xFFF
   493                           tosh	equ	0xFFE
   494                           tosl	equ	0xFFD
   495                           stkptr	equ	0xFFC
   496                           pclatu	equ	0xFFB
   497                           pclath	equ	0xFFA
   498                           pcl	equ	0xFF9
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           prodh	equ	0xFF4
   504                           prodl	equ	0xFF3
   505                           indf0	equ	0xFEF
   506                           postinc0	equ	0xFEE
   507                           postdec0	equ	0xFED
   508                           preinc0	equ	0xFEC
   509                           plusw0	equ	0xFEB
   510                           fsr0h	equ	0xFEA
   511                           fsr0l	equ	0xFE9
   512                           wreg	equ	0xFE8
   513                           indf1	equ	0xFE7
   514                           postinc1	equ	0xFE6
   515                           postdec1	equ	0xFE5
   516                           preinc1	equ	0xFE4
   517                           plusw1	equ	0xFE3
   518                           fsr1h	equ	0xFE2
   519                           fsr1l	equ	0xFE1
   520                           bsr	equ	0xFE0
   521                           indf2	equ	0xFDF
   522                           postinc2	equ	0xFDE
   523                           postdec2	equ	0xFDD
   524                           preinc2	equ	0xFDC
   525                           plusw2	equ	0xFDB
   526                           fsr2h	equ	0xFDA
   527                           fsr2l	equ	0xFD9
   528                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _tcInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tcInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tcInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tcInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tcInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tcInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _puertos
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _puertos                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tcInt                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _puertos
   _timer

 _tcInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2      1C       1       29.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      20        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 17 00:33:40 2019

                     l33 0118              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   i2l43 006C                     i2l44 007C                     _TMR0 000FD6  
           __CFG_PWRT$ON 000000                     _cont 0017                     _main 0104  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 001D                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000                    ?_main 001B                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _cont1 0015                    _tcInt 0008                    _timer 00BA  
                  tablat 000FF5          __end_of_puertos 00EE                    ttemp5 001E  
                  ttemp6 0021                    ttemp7 0025                    status 000FD8  
                  wtemp8 001E           __CFG_ICPRT$OFF 000000          __initialization 0088  
           __end_of_main 011A                   ??_main 001D            __activetblptr 000000  
        __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1                   ?_tcInt 001B  
                 ?_timer 001B           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _numero 0001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_puertos 001D  
             __accesstop 0060  __end_of__initialization 00B0          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 001B            __end_of_tcInt 0088  
          __end_of_timer 00D4                  ??_tcInt 001B          __CFG_LPT1OSC$ON 000000  
                ??_timer 001D          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0088                  __ramtop 0800  
                __ptext0 0104                  __ptext1 00BA                  __ptext2 00D4  
              _T0CONbits 000FD5                  _puertos 00D4           __pintcode_body 0012  
   end_of_initialization 00B0                  int_func 0012                  postdec1 000FE5  
                postinc0 000FEE                _TRISAbits 000F92                _TRISBbits 000F93  
          __pidataCOMRAM 00EE      start_initialization 0088              __pbssCOMRAM 0017  
              __pintcode 0008                 ?_puertos 001B           __size_of_tcInt 0080  
         __size_of_timer 001A         __CFG_WDTPS$32768 000000                copy_data0 009C  
               __Hrparam 0000                 __Lrparam 0000         __size_of_puertos 001A  
          __size_of_main 0016                 int$flags 001D    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000  
