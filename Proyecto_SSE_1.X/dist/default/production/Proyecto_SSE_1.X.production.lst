

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 20 00:19:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _TMR0	set	4054
    94  0000                     _ADRES	set	4035
    95  0000                     _LATCbits	set	3979
    96  0000                     _TRISCbits	set	3988
    97  0000                     _PORTBbits	set	3969
    98  0000                     _LATD	set	3980
    99  0000                     _TRISBbits	set	3987
   100  0000                     _T0CONbits	set	4053
   101  0000                     _INTCONbits	set	4082
   102  0000                     _ADCON0bits	set	4034
   103  0000                     _LATA	set	3977
   104  0000                     _TRISA	set	3986
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _ADCON1bits	set	4033
   107  0000                     _PORTDbits	set	3971
   108  0000                     _TRISDbits	set	3989
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	opt callstack 0
   113  000800  00                 	db	0
   114  000801                     STR_2:
   115  000801  54                 	db	84	;'T'
   116  000802  65                 	db	101	;'e'
   117  000803  6D                 	db	109	;'m'
   118  000804  70                 	db	112	;'p'
   119  000805  65                 	db	101	;'e'
   120  000806  72                 	db	114	;'r'
   121  000807  61                 	db	97	;'a'
   122  000808  74                 	db	116	;'t'
   123  000809  75                 	db	117	;'u'
   124  00080A  72                 	db	114	;'r'
   125  00080B  61                 	db	97	;'a'
   126  00080C  3A                 	db	58	;':'
   127  00080D  00                 	db	0
   128  00080E                     STR_1:
   129  00080E  25                 	db	37
   130  00080F  2E                 	db	46
   131  000810  33                 	db	51	;'3'
   132  000811  66                 	db	102	;'f'
   133  000812  00                 	db	0
   134  000813                     STR_3:
   135  000813  49                 	db	73	;'I'
   136  000814  4E                 	db	78	;'N'
   137  000815  46                 	db	70	;'F'
   138  000816  00                 	db	0
   139  000817                     STR_7:
   140  000817  4E                 	db	78	;'N'
   141  000818  41                 	db	65	;'A'
   142  000819  4E                 	db	78	;'N'
   143  00081A  00                 	db	0
   144  00081B                     STR_4:
   145  00081B  69                 	db	105	;'i'
   146  00081C  6E                 	db	110	;'n'
   147  00081D  66                 	db	102	;'f'
   148  00081E  00                 	db	0
   149  00081F                     STR_8:
   150  00081F  6E                 	db	110	;'n'
   151  000820  61                 	db	97	;'a'
   152  000821  6E                 	db	110	;'n'
   153  000822  00                 	db	0
   154  000823                     STR_11:
   155  000823  6C                 	db	108	;'l'
   156  000824  66                 	db	102	;'f'
   157  000825  00                 	db	0
   158  0000                     
   159                           ; #config settings
   160  000826  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           	psect	cinit
   163  0033BE                     __pcinit:
   164                           	opt callstack 0
   165  0033BE                     start_initialization:
   166                           	opt callstack 0
   167  0033BE                     __initialization:
   168                           	opt callstack 0
   169                           
   170                           ; Clear objects allocated to BANK1 (210 bytes)
   171  0033BE  EE01  F000         	lfsr	0,__pbssBANK1
   172  0033C2  0ED2               	movlw	210
   173  0033C4                     clear_0:
   174  0033C4  6AEE               	clrf	postinc0,c
   175  0033C6  06E8               	decf	wreg,f,c
   176  0033C8  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to BANK0 (33 bytes)
   179  0033CA  EE00  F0DA         	lfsr	0,__pbssBANK0
   180  0033CE  0E21               	movlw	33
   181  0033D0                     clear_1:
   182  0033D0  6AEE               	clrf	postinc0,c
   183  0033D2  06E8               	decf	wreg,f,c
   184  0033D4  E1FD               	bnz	clear_1
   185                           
   186                           ; Clear objects allocated to COMRAM (12 bytes)
   187  0033D6  EE00  F046         	lfsr	0,__pbssCOMRAM
   188  0033DA  0E0C               	movlw	12
   189  0033DC                     clear_2:
   190  0033DC  6AEE               	clrf	postinc0,c
   191  0033DE  06E8               	decf	wreg,f,c
   192  0033E0  E1FD               	bnz	clear_2
   193  0033E2                     end_of_initialization:
   194                           	opt callstack 0
   195  0033E2                     __end_of__initialization:
   196                           	opt callstack 0
   197  0033E2  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  0033E4  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  0033E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  0033E8  6EF8               	movwf	tblptru,c
   201  0033EA  0100               	movlb	0
   202  0033EC  EFFB  F00F         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205  000046                     __pbssCOMRAM:
   206                           	opt callstack 0
   207  000046                     ___fpclassifyf@F463:
   208                           	opt callstack 0
   209  000046                     	ds	4
   210  00004A                     _width:
   211                           	opt callstack 0
   212  00004A                     	ds	2
   213  00004C                     _prec:
   214                           	opt callstack 0
   215  00004C                     	ds	2
   216  00004E                     _flags:
   217                           	opt callstack 0
   218  00004E                     	ds	2
   219  000050                     _valor:
   220                           	opt callstack 0
   221  000050                     	ds	2
   222                           
   223                           	psect	bssBANK0
   224  0000DA                     __pbssBANK0:
   225                           	opt callstack 0
   226  0000DA                     floorf@F524:
   227                           	opt callstack 0
   228  0000DA                     	ds	4
   229  0000DE                     _Promedio:
   230                           	opt callstack 0
   231  0000DE                     	ds	4
   232  0000E2                     _x:
   233                           	opt callstack 0
   234  0000E2                     	ds	4
   235  0000E6                     _nout:
   236                           	opt callstack 0
   237  0000E6                     	ds	2
   238  0000E8                     _u:
   239                           	opt callstack 0
   240  0000E8                     	ds	2
   241  0000EA                     _Prom:
   242                           	opt callstack 0
   243  0000EA                     	ds	17
   244                           
   245                           	psect	bssBANK1
   246  000100                     __pbssBANK1:
   247                           	opt callstack 0
   248  000100                     _Tp:
   249                           	opt callstack 0
   250  000100                     	ds	48
   251  000130                     _ADC:
   252                           	opt callstack 0
   253  000130                     	ds	48
   254  000160                     _ADCS:
   255                           	opt callstack 0
   256  000160                     	ds	17
   257  000171                     _palabra:
   258                           	opt callstack 0
   259  000171                     	ds	17
   260  000182                     _dbuf:
   261                           	opt callstack 0
   262  000182                     	ds	80
   263                           
   264                           	psect	cstackBANK1
   265  0001D2                     __pcstackBANK1:
   266                           	opt callstack 0
   267  0001D2                     	ds	2
   268  0001D4                     sprintf@ap:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x2
   272  0001D4                     	ds	2
   273  0001D6                     sprintf@f:
   274                           	opt callstack 0
   275                           
   276                           ; 6 bytes @ 0x4
   277  0001D6                     	ds	6
   278                           
   279                           	psect	cstackBANK0
   280  000060                     __pcstackBANK0:
   281                           	opt callstack 0
   282  000060                     ??_floorf:
   283  000060                     ??_ADC_Channel:
   284                           
   285                           ; 1 bytes @ 0x0
   286  000060                     	ds	6
   287  000066                     floorf@m:
   288                           	opt callstack 0
   289                           
   290                           ; 4 bytes @ 0x6
   291  000066                     	ds	4
   292  00006A                     floorf@e:
   293                           	opt callstack 0
   294                           
   295                           ; 2 bytes @ 0xA
   296  00006A                     	ds	2
   297  00006C                     floorf@u:
   298                           	opt callstack 0
   299                           
   300                           ; 4 bytes @ 0xC
   301  00006C                     	ds	4
   302  000070                     ?_efgtoa:
   303                           	opt callstack 0
   304  000070                     efgtoa@fp:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x10
   308  000070                     	ds	2
   309  000072                     efgtoa@f:
   310                           	opt callstack 0
   311                           
   312                           ; 4 bytes @ 0x12
   313  000072                     	ds	4
   314  000076                     efgtoa@c:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0x16
   318  000076                     	ds	1
   319  000077                     ??_efgtoa:
   320                           
   321                           ; 1 bytes @ 0x17
   322  000077                     	ds	5
   323  00007C                     efgtoa@ou:
   324                           	opt callstack 0
   325                           
   326                           ; 4 bytes @ 0x1C
   327  00007C                     	ds	4
   328  000080                     _efgtoa$722:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x20
   332  000080                     	ds	2
   333  000082                     _efgtoa$723:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x22
   337  000082                     	ds	2
   338  000084                     _efgtoa$728:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x24
   342  000084                     	ds	2
   343  000086                     _efgtoa$732:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x26
   347  000086                     	ds	2
   348  000088                     _efgtoa$733:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x28
   352  000088                     	ds	2
   353  00008A                     _efgtoa$734:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x2A
   357  00008A                     	ds	2
   358  00008C                     efgtoa@t:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x2C
   362  00008C                     	ds	2
   363  00008E                     efgtoa@pp:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x2E
   367  00008E                     	ds	2
   368  000090                     efgtoa@m:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x30
   372  000090                     	ds	2
   373  000092                     efgtoa@ne:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x32
   377  000092                     	ds	2
   378  000094                     efgtoa@d:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x34
   382  000094                     	ds	2
   383  000096                     efgtoa@sign:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x36
   387  000096                     	ds	2
   388  000098                     efgtoa@p:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x38
   392  000098                     	ds	2
   393  00009A                     efgtoa@nmode:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x3A
   397  00009A                     	ds	1
   398  00009B                     efgtoa@w:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x3B
   402  00009B                     	ds	2
   403  00009D                     efgtoa@mode:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x3D
   407  00009D                     	ds	1
   408  00009E                     efgtoa@h:
   409                           	opt callstack 0
   410                           
   411                           ; 4 bytes @ 0x3E
   412  00009E                     	ds	4
   413  0000A2                     efgtoa@l:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x42
   417  0000A2                     	ds	4
   418  0000A6                     efgtoa@i:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x46
   422  0000A6                     	ds	2
   423  0000A8                     efgtoa@g:
   424                           	opt callstack 0
   425                           
   426                           ; 4 bytes @ 0x48
   427  0000A8                     	ds	4
   428  0000AC                     efgtoa@e:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x4C
   432  0000AC                     	ds	2
   433  0000AE                     efgtoa@n:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x4E
   437  0000AE                     	ds	2
   438  0000B0                     efgtoa@u:
   439                           	opt callstack 0
   440                           
   441                           ; 4 bytes @ 0x50
   442  0000B0                     	ds	4
   443  0000B4                     ?_vfpfcnvrt:
   444                           	opt callstack 0
   445  0000B4                     vfpfcnvrt@fp:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x54
   449  0000B4                     	ds	2
   450  0000B6                     vfpfcnvrt@fmt:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x56
   454  0000B6                     	ds	2
   455  0000B8                     vfpfcnvrt@ap:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x58
   459  0000B8                     	ds	2
   460  0000BA                     ??_vfpfcnvrt:
   461                           
   462                           ; 1 bytes @ 0x5A
   463  0000BA                     	ds	4
   464  0000BE                     _vfpfcnvrt$748:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x5E
   468  0000BE                     	ds	2
   469  0000C0                     _vfpfcnvrt$752:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x60
   473  0000C0                     	ds	2
   474  0000C2                     vfpfcnvrt@f:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x62
   478  0000C2                     	ds	4
   479  0000C6                     vfpfcnvrt@ct:
   480                           	opt callstack 0
   481                           
   482                           ; 3 bytes @ 0x66
   483  0000C6                     	ds	3
   484  0000C9                     vfpfcnvrt@c:
   485                           	opt callstack 0
   486                           
   487                           ; 1 bytes @ 0x69
   488  0000C9                     	ds	1
   489  0000CA                     ?_vfprintf:
   490                           	opt callstack 0
   491  0000CA                     vfprintf@fp:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x6A
   495  0000CA                     	ds	2
   496  0000CC                     vfprintf@fmt:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x6C
   500  0000CC                     	ds	2
   501  0000CE                     vfprintf@ap:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x6E
   505  0000CE                     	ds	2
   506  0000D0                     ?_sprintf:
   507                           	opt callstack 0
   508  0000D0                     sprintf@s:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x70
   512  0000D0                     	ds	2
   513  0000D2                     sprintf@fmt:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x72
   517  0000D2                     	ds	6
   518  0000D8                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x78
   521  0000D8                     	ds	2
   522                           
   523                           	psect	cstackCOMRAM
   524  000001                     __pcstackCOMRAM:
   525                           	opt callstack 0
   526  000001                     i2___flge@ff1:
   527                           	opt callstack 0
   528                           
   529                           ; 4 bytes @ 0x0
   530  000001                     	ds	4
   531  000005                     i2___flge@ff2:
   532                           	opt callstack 0
   533                           
   534                           ; 4 bytes @ 0x4
   535  000005                     	ds	4
   536  000009                     ??i2___flge:
   537                           
   538                           ; 1 bytes @ 0x8
   539  000009                     	ds	4
   540  00000D                     ??_isr:
   541                           
   542                           ; 1 bytes @ 0xC
   543  00000D                     	ds	1
   544  00000E                     ??_Lcd_Cmd:
   545  00000E                     ??_Lcd_Chr_CP:
   546  00000E                     ?_strlen:
   547                           	opt callstack 0
   548  00000E                     ?___fpclassifyf:
   549                           	opt callstack 0
   550  00000E                     ?_isupper:
   551                           	opt callstack 0
   552  00000E                     ?_isdigit:
   553                           	opt callstack 0
   554  00000E                     ?_strncmp:
   555                           	opt callstack 0
   556  00000E                     ?_isspace:
   557                           	opt callstack 0
   558  00000E                     ?___wmul:
   559                           	opt callstack 0
   560  00000E                     ?___awdiv:
   561                           	opt callstack 0
   562  00000E                     ?___awmod:
   563                           	opt callstack 0
   564  00000E                     ?___fladd:
   565                           	opt callstack 0
   566  00000E                     ?___flmul:
   567                           	opt callstack 0
   568  00000E                     ?___flneg:
   569                           	opt callstack 0
   570  00000E                     ?___fltol:
   571                           	opt callstack 0
   572  00000E                     ?___xxtofl:
   573                           	opt callstack 0
   574  00000E                     ADC_Init@entradas:
   575                           	opt callstack 0
   576  00000E                     ___wmul@multiplier:
   577                           	opt callstack 0
   578  00000E                     ___awdiv@dividend:
   579                           	opt callstack 0
   580  00000E                     ___awmod@dividend:
   581                           	opt callstack 0
   582  00000E                     isdigit@c:
   583                           	opt callstack 0
   584  00000E                     isspace@c:
   585                           	opt callstack 0
   586  00000E                     isupper@c:
   587                           	opt callstack 0
   588  00000E                     fputc@c:
   589                           	opt callstack 0
   590  00000E                     strcpy@dest:
   591                           	opt callstack 0
   592  00000E                     strlen@s:
   593                           	opt callstack 0
   594  00000E                     strncmp@_l:
   595                           	opt callstack 0
   596  00000E                     ___fleq@ff1:
   597                           	opt callstack 0
   598  00000E                     ___flneg@f1:
   599                           	opt callstack 0
   600  00000E                     ___fltol@f1:
   601                           	opt callstack 0
   602  00000E                     ___fladd@b:
   603                           	opt callstack 0
   604  00000E                     ___flmul@b:
   605                           	opt callstack 0
   606  00000E                     ___xxtofl@val:
   607                           	opt callstack 0
   608  00000E                     ___fpclassifyf@x:
   609                           	opt callstack 0
   610                           
   611                           ; 4 bytes @ 0xD
   612  00000E                     	ds	2
   613  000010                     ??_isupper:
   614  000010                     ??_isdigit:
   615  000010                     ??_isspace:
   616  000010                     ??_ADC_Init:
   617  000010                     Lcd_Chr_CP@data:
   618                           	opt callstack 0
   619  000010                     Lcd_Cmd@data:
   620                           	opt callstack 0
   621  000010                     ___wmul@multiplicand:
   622                           	opt callstack 0
   623  000010                     ___awdiv@divisor:
   624                           	opt callstack 0
   625  000010                     ___awmod@divisor:
   626                           	opt callstack 0
   627  000010                     fputc@fp:
   628                           	opt callstack 0
   629  000010                     strcpy@src:
   630                           	opt callstack 0
   631  000010                     strlen@a:
   632                           	opt callstack 0
   633  000010                     strncmp@_r:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0xF
   637  000010                     	ds	1
   638  000011                     ??_Lcd_Init:
   639  000011                     Lcd_Out@x:
   640                           	opt callstack 0
   641  000011                     Lcd_Out2@x:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0x10
   645  000011                     	ds	1
   646  000012                     ??_fputc:
   647  000012                     ??___fpclassifyf:
   648  000012                     ??_strcpy:
   649  000012                     ??___fltol:
   650  000012                     ??___xxtofl:
   651  000012                     Lcd_Init@data:
   652                           	opt callstack 0
   653  000012                     ___awdiv@counter:
   654                           	opt callstack 0
   655  000012                     ___awmod@counter:
   656                           	opt callstack 0
   657  000012                     Lcd_Out@buffer:
   658                           	opt callstack 0
   659  000012                     Lcd_Out2@buffer:
   660                           	opt callstack 0
   661  000012                     ADC_Init@valor:
   662                           	opt callstack 0
   663  000012                     ___wmul@product:
   664                           	opt callstack 0
   665  000012                     strncmp@n:
   666                           	opt callstack 0
   667  000012                     ___fleq@ff2:
   668                           	opt callstack 0
   669  000012                     ___fladd@a:
   670                           	opt callstack 0
   671  000012                     ___flmul@a:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0x11
   675  000012                     	ds	1
   676  000013                     ___awdiv@sign:
   677                           	opt callstack 0
   678  000013                     ___awmod@sign:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x12
   682  000013                     	ds	1
   683  000014                     ??_strncmp:
   684  000014                     ??_Lcd_Out:
   685  000014                     ??_Lcd_Out2:
   686  000014                     ?_tolower:
   687                           	opt callstack 0
   688  000014                     _isspace$1254:
   689                           	opt callstack 0
   690  000014                     ___awdiv@quotient:
   691                           	opt callstack 0
   692  000014                     strcpy@s:
   693                           	opt callstack 0
   694  000014                     tolower@c:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x13
   698  000014                     	ds	1
   699  000015                     ?_atoi:
   700                           	opt callstack 0
   701  000015                     atoi@s:
   702                           	opt callstack 0
   703  000015                     strncmp@l:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000015                     	ds	1
   708  000016                     ??_tolower:
   709  000016                     ??___fladd:
   710  000016                     ??___flmul:
   711  000016                     ??___fleq:
   712  000016                     Lcd_Out@y:
   713                           	opt callstack 0
   714  000016                     Lcd_Out2@y:
   715                           	opt callstack 0
   716  000016                     ___fltol@sign1:
   717                           	opt callstack 0
   718  000016                     ___xxtofl@sign:
   719                           	opt callstack 0
   720  000016                     ___fpclassifyf@e:
   721                           	opt callstack 0
   722  000016                     strcpy@d:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x15
   726  000016                     	ds	1
   727  000017                     ??_atoi:
   728  000017                     Lcd_Out@data:
   729                           	opt callstack 0
   730  000017                     Lcd_Out2@data:
   731                           	opt callstack 0
   732  000017                     ___fltol@exp1:
   733                           	opt callstack 0
   734  000017                     ___xxtofl@exp:
   735                           	opt callstack 0
   736  000017                     fputs@s:
   737                           	opt callstack 0
   738  000017                     strncmp@r:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x16
   742  000017                     	ds	1
   743  000018                     ___xxtofl@arg:
   744                           	opt callstack 0
   745  000018                     ___fpclassifyf@u:
   746                           	opt callstack 0
   747                           
   748                           ; 4 bytes @ 0x17
   749  000018                     	ds	1
   750  000019                     fputs@fp:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x18
   754  000019                     	ds	1
   755  00001A                     ___fladd@signs:
   756                           	opt callstack 0
   757  00001A                     ___flmul@sign:
   758                           	opt callstack 0
   759  00001A                     _tolower$1339:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x19
   763  00001A                     	ds	1
   764  00001B                     ___fladd@aexp:
   765                           	opt callstack 0
   766  00001B                     ___flmul@aexp:
   767                           	opt callstack 0
   768  00001B                     fputs@c:
   769                           	opt callstack 0
   770  00001B                     atoi@neg:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x1A
   774  00001B                     	ds	1
   775  00001C                     ___fladd@bexp:
   776                           	opt callstack 0
   777  00001C                     fputs@i:
   778                           	opt callstack 0
   779  00001C                     ___flmul@grs:
   780                           	opt callstack 0
   781                           
   782                           ; 4 bytes @ 0x1B
   783  00001C                     	ds	1
   784  00001D                     ___fladd@grs:
   785                           	opt callstack 0
   786  00001D                     _atoi$1223:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x1C
   790  00001D                     	ds	1
   791  00001E                     ?_pad:
   792                           	opt callstack 0
   793  00001E                     pad@fp:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x1D
   797  00001E                     	ds	1
   798  00001F                     _atoi$1225:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x1E
   802  00001F                     	ds	1
   803  000020                     ___flmul@bexp:
   804                           	opt callstack 0
   805  000020                     pad@buf:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x1F
   809  000020                     	ds	1
   810  000021                     _atoi$1224:
   811                           	opt callstack 0
   812  000021                     ___flmul@prod:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x20
   816  000021                     	ds	1
   817  000022                     pad@p:
   818                           	opt callstack 0
   819  000022                     atoi@n:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x21
   823  000022                     	ds	2
   824  000024                     ??_pad:
   825                           
   826                           ; 1 bytes @ 0x23
   827  000024                     	ds	1
   828  000025                     pad@i:
   829                           	opt callstack 0
   830  000025                     ___flmul@temp:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x24
   834  000025                     	ds	2
   835  000027                     ?___fldiv:
   836                           	opt callstack 0
   837  000027                     ?___flsub:
   838                           	opt callstack 0
   839  000027                     pad@w:
   840                           	opt callstack 0
   841  000027                     ___flge@ff1:
   842                           	opt callstack 0
   843  000027                     ___flsub@b:
   844                           	opt callstack 0
   845  000027                     ___fldiv@b:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x26
   849  000027                     	ds	4
   850  00002B                     ___flge@ff2:
   851                           	opt callstack 0
   852  00002B                     ___flsub@a:
   853                           	opt callstack 0
   854  00002B                     ___fldiv@a:
   855                           	opt callstack 0
   856                           
   857                           ; 4 bytes @ 0x2A
   858  00002B                     	ds	4
   859  00002F                     ??___fldiv:
   860  00002F                     ??___flge:
   861                           
   862                           ; 1 bytes @ 0x2E
   863  00002F                     	ds	4
   864  000033                     ___fldiv@rem:
   865                           	opt callstack 0
   866                           
   867                           ; 4 bytes @ 0x32
   868  000033                     	ds	4
   869  000037                     ___fldiv@sign:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0x36
   873  000037                     	ds	1
   874  000038                     ___fldiv@new_exp:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x37
   878  000038                     	ds	2
   879  00003A                     ___fldiv@grs:
   880                           	opt callstack 0
   881                           
   882                           ; 4 bytes @ 0x39
   883  00003A                     	ds	4
   884  00003E                     ___fldiv@bexp:
   885                           	opt callstack 0
   886                           
   887                           ; 1 bytes @ 0x3D
   888  00003E                     	ds	1
   889  00003F                     ___fldiv@aexp:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x3E
   893  00003F                     	ds	1
   894  000040                     ?_floorf:
   895                           	opt callstack 0
   896  000040                     ?_ADC_Channel:
   897                           	opt callstack 0
   898  000040                     ADC_Channel@Puerto:
   899                           	opt callstack 0
   900  000040                     floorf@x:
   901                           	opt callstack 0
   902                           
   903                           ; 4 bytes @ 0x3F
   904  000040                     	ds	4
   905  000044                     vfprintf@cfmt:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x43
   909  000044                     	ds	2
   910  000046                     
   911                           ; 1 bytes @ 0x45
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 20 in file "Proyecto_SSE_1.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   931 ;;      Params:         0       0       0       0       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       2       0       0       0       0       0       0       0
   934 ;;      Totals:         0       2       0       0       0       0       0       0       0
   935 ;;Total ram usage:        2 bytes
   936 ;; Hardware stack levels required when called:   10
   937 ;; This function calls:
   938 ;;		_ADC_Channel
   939 ;;		_ADC_Init
   940 ;;		_Lcd_Cmd
   941 ;;		_Lcd_Init
   942 ;;		_Lcd_Out
   943 ;;		_Lcd_Out2
   944 ;;		_Servo_init
   945 ;;		___fladd
   946 ;;		___fldiv
   947 ;;		_sprintf
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text0
   954  001FF6                     __ptext0:
   955                           	opt callstack 0
   956  001FF6                     _main:
   957                           	opt callstack 21
   958                           
   959                           ;Proyecto_SSE_1.c: 21:     TRISBbits.RB0 = 1;
   960                           
   961                           ;incstack = 0
   962  001FF6  8093               	bsf	3987,0,c	;volatile
   963                           
   964                           ;Proyecto_SSE_1.c: 22:     Lcd_Init();
   965  001FF8  EC66  F014         	call	_Lcd_Init	;wreg free
   966                           
   967                           ;Proyecto_SSE_1.c: 23:     Lcd_Cmd(1);
   968  001FFC  0E01               	movlw	1
   969  001FFE  ECD7  F013         	call	_Lcd_Cmd
   970                           
   971                           ;Proyecto_SSE_1.c: 24:     Lcd_Cmd(12);
   972  002002  0E0C               	movlw	12
   973  002004  ECD7  F013         	call	_Lcd_Cmd
   974                           
   975                           ;Proyecto_SSE_1.c: 25:     _delay((unsigned long)((100)*(12000000/4000.0)));
   976  002008  0E02               	movlw	2
   977  00200A  0100               	movlb	0	; () banked
   978  00200C  6FD9               	movwf	(??_main+1)& (0+255),b
   979  00200E  0E86               	movlw	134
   980  002010  6FD8               	movwf	??_main& (0+255),b
   981  002012  0E99               	movlw	153
   982  002014                     u7467:
   983  002014  2EE8               	decfsz	wreg,f,c
   984  002016  D7FE               	bra	u7467
   985  002018  2FD8               	decfsz	??_main& (0+255),f,b
   986  00201A  D7FC               	bra	u7467
   987  00201C  2FD9               	decfsz	(??_main+1)& (0+255),f,b
   988  00201E  D7FA               	bra	u7467
   989                           
   990                           ;Proyecto_SSE_1.c: 26:     LATD = 0x00;
   991  002020  0E00               	movlw	0
   992  002022  6E8C               	movwf	3980,c	;volatile
   993                           
   994                           ;Proyecto_SSE_1.c: 27:     PORTBbits.RB0 = 0;
   995  002024  9081               	bcf	3969,0,c	;volatile
   996                           
   997                           ;Proyecto_SSE_1.c: 28:     Servo_init();
   998  002026  EC67  F01A         	call	_Servo_init	;wreg free
   999                           
  1000                           ;Proyecto_SSE_1.c: 29:     ADC_Init(2);
  1001  00202A  0E00               	movlw	0
  1002  00202C  6E0F               	movwf	ADC_Init@entradas+1,c
  1003  00202E  0E02               	movlw	2
  1004  002030  6E0E               	movwf	ADC_Init@entradas,c
  1005  002032  EC30  F018         	call	_ADC_Init	;wreg free
  1006                           
  1007                           ;Proyecto_SSE_1.c: 30:     TRISCbits.TRISC0=0;
  1008  002036  9094               	bcf	3988,0,c	;volatile
  1009                           
  1010                           ;Proyecto_SSE_1.c: 31:     TRISCbits.TRISC1=0;
  1011  002038  9294               	bcf	3988,1,c	;volatile
  1012                           
  1013                           ;Proyecto_SSE_1.c: 32:     LATCbits.LATC0=0;
  1014  00203A  908B               	bcf	3979,0,c	;volatile
  1015                           
  1016                           ;Proyecto_SSE_1.c: 33:     LATCbits.LATC1=0;
  1017  00203C  928B               	bcf	3979,1,c	;volatile
  1018                           
  1019                           ;Proyecto_SSE_1.c: 34:     Promedio=0.0;
  1020  00203E  0E00               	movlw	0
  1021  002040  0100               	movlb	0	; () banked
  1022  002042  6FDE               	movwf	_Promedio& (0+255),b
  1023  002044  0E00               	movlw	0
  1024  002046  6FDF               	movwf	(_Promedio+1)& (0+255),b
  1025  002048  0E00               	movlw	0
  1026  00204A  6FE0               	movwf	(_Promedio+2)& (0+255),b
  1027  00204C  0E00               	movlw	0
  1028  00204E  6FE1               	movwf	(_Promedio+3)& (0+255),b
  1029  002050                     l5858:
  1030                           
  1031                           ;Proyecto_SSE_1.c: 36:          for(u=0;u<=1;u++){
  1032  002050  0E00               	movlw	0
  1033  002052  0100               	movlb	0	; () banked
  1034  002054  6FE9               	movwf	(_u+1)& (0+255),b
  1035  002056  0E00               	movlw	0
  1036  002058  6FE8               	movwf	_u& (0+255),b
  1037  00205A                     l5864:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;Proyecto_SSE_1.c: 37:             Tp[u]=ADC_Channel(u);
  1041  00205A  C0E8  F040         	movff	_u,ADC_Channel@Puerto
  1042  00205E  C0E9  F041         	movff	_u+1,ADC_Channel@Puerto+1
  1043  002062  ECC9  F010         	call	_ADC_Channel	;wreg free
  1044  002066  0E00               	movlw	low _Tp
  1045  002068  0100               	movlb	0	; () banked
  1046  00206A  6FD8               	movwf	??_main& (0+255),b
  1047  00206C  0E01               	movlw	high _Tp
  1048  00206E  6FD9               	movwf	(??_main+1)& (0+255),b
  1049  002070  90D8               	bcf	status,0,c
  1050  002072  35E8               	rlcf	_u& (0+255),w,b
  1051  002074  6ED9               	movwf	fsr2l,c
  1052  002076  35E9               	rlcf	(_u+1)& (0+255),w,b
  1053  002078  6EDA               	movwf	fsr2h,c
  1054  00207A  90D8               	bcf	status,0,c
  1055  00207C  36D9               	rlcf	fsr2l,f,c
  1056  00207E  36DA               	rlcf	fsr2h,f,c
  1057  002080  51D8               	movf	??_main& (0+255),w,b
  1058  002082  26D9               	addwf	fsr2l,f,c
  1059  002084  51D9               	movf	(??_main+1)& (0+255),w,b
  1060  002086  22DA               	addwfc	fsr2h,f,c
  1061  002088  C040  FFDE         	movff	?_ADC_Channel,postinc2
  1062  00208C  C041  FFDE         	movff	?_ADC_Channel+1,postinc2
  1063  002090  C042  FFDE         	movff	?_ADC_Channel+2,postinc2
  1064  002094  C043  FFDE         	movff	?_ADC_Channel+3,postinc2
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;Proyecto_SSE_1.c: 38:             Promedio=Promedio+Tp[u];
  1068  002098  0E00               	movlw	low _Tp
  1069  00209A  6FD8               	movwf	??_main& (0+255),b
  1070  00209C  0E01               	movlw	high _Tp
  1071  00209E  6FD9               	movwf	(??_main+1)& (0+255),b
  1072  0020A0  90D8               	bcf	status,0,c
  1073  0020A2  35E8               	rlcf	_u& (0+255),w,b
  1074  0020A4  6ED9               	movwf	fsr2l,c
  1075  0020A6  35E9               	rlcf	(_u+1)& (0+255),w,b
  1076  0020A8  6EDA               	movwf	fsr2h,c
  1077  0020AA  90D8               	bcf	status,0,c
  1078  0020AC  36D9               	rlcf	fsr2l,f,c
  1079  0020AE  36DA               	rlcf	fsr2h,f,c
  1080  0020B0  51D8               	movf	??_main& (0+255),w,b
  1081  0020B2  26D9               	addwf	fsr2l,f,c
  1082  0020B4  51D9               	movf	(??_main+1)& (0+255),w,b
  1083  0020B6  22DA               	addwfc	fsr2h,f,c
  1084  0020B8  CFDE F00E          	movff	postinc2,___fladd@b
  1085  0020BC  CFDE F00F          	movff	postinc2,___fladd@b+1
  1086  0020C0  CFDE F010          	movff	postinc2,___fladd@b+2
  1087  0020C4  CFDE F011          	movff	postinc2,___fladd@b+3
  1088  0020C8  C0DE  F012         	movff	_Promedio,___fladd@a
  1089  0020CC  C0DF  F013         	movff	_Promedio+1,___fladd@a+1
  1090  0020D0  C0E0  F014         	movff	_Promedio+2,___fladd@a+2
  1091  0020D4  C0E1  F015         	movff	_Promedio+3,___fladd@a+3
  1092  0020D8  EC54  F00C         	call	___fladd	;wreg free
  1093  0020DC  C00E  F0DE         	movff	?___fladd,_Promedio
  1094  0020E0  C00F  F0DF         	movff	?___fladd+1,_Promedio+1
  1095  0020E4  C010  F0E0         	movff	?___fladd+2,_Promedio+2
  1096  0020E8  C011  F0E1         	movff	?___fladd+3,_Promedio+3
  1097                           
  1098                           ;Proyecto_SSE_1.c: 39:             _delay((unsigned long)((3)*(12000000/4000.0)));
  1099  0020EC  0E0C               	movlw	12
  1100  0020EE  0100               	movlb	0	; () banked
  1101  0020F0  6FD8               	movwf	??_main& (0+255),b
  1102  0020F2  0EAF               	movlw	175
  1103  0020F4                     u7477:
  1104  0020F4  2EE8               	decfsz	wreg,f,c
  1105  0020F6  D7FE               	bra	u7477
  1106  0020F8  2FD8               	decfsz	??_main& (0+255),f,b
  1107  0020FA  D7FC               	bra	u7477
  1108                           
  1109                           ;Proyecto_SSE_1.c: 40:         }
  1110  0020FC  0100               	movlb	0	; () banked
  1111  0020FE  4BE8               	infsnz	_u& (0+255),f,b
  1112  002100  2BE9               	incf	(_u+1)& (0+255),f,b
  1113                           
  1114                           ; BSR set to: 0
  1115  002102  BFE9               	btfsc	(_u+1)& (0+255),7,b
  1116  002104  D7AA               	goto	l5864
  1117  002106  51E9               	movf	(_u+1)& (0+255),w,b
  1118  002108  E104               	bnz	u7450
  1119  00210A  0E02               	movlw	2
  1120  00210C  5DE8               	subwf	_u& (0+255),w,b
  1121  00210E  A0D8               	btfss	status,0,c
  1122  002110  D7A4               	goto	l5864
  1123  002112                     u7450:
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;Proyecto_SSE_1.c: 41:         Promedio=Promedio/3.0;
  1127  002112  C0DE  F027         	movff	_Promedio,___fldiv@b
  1128  002116  C0DF  F028         	movff	_Promedio+1,___fldiv@b+1
  1129  00211A  C0E0  F029         	movff	_Promedio+2,___fldiv@b+2
  1130  00211E  C0E1  F02A         	movff	_Promedio+3,___fldiv@b+3
  1131  002122  0E00               	movlw	0
  1132  002124  6E2B               	movwf	___fldiv@a,c
  1133  002126  0E00               	movlw	0
  1134  002128  6E2C               	movwf	___fldiv@a+1,c
  1135  00212A  0E40               	movlw	64
  1136  00212C  6E2D               	movwf	___fldiv@a+2,c
  1137  00212E  0E40               	movlw	64
  1138  002130  6E2E               	movwf	___fldiv@a+3,c
  1139  002132  ECDA  F00D         	call	___fldiv	;wreg free
  1140  002136  C027  F0DE         	movff	?___fldiv,_Promedio
  1141  00213A  C028  F0DF         	movff	?___fldiv+1,_Promedio+1
  1142  00213E  C029  F0E0         	movff	?___fldiv+2,_Promedio+2
  1143  002142  C02A  F0E1         	movff	?___fldiv+3,_Promedio+3
  1144                           
  1145                           ;Proyecto_SSE_1.c: 42:         sprintf(Prom,"%.3f",Promedio);
  1146  002146  0EEA               	movlw	low _Prom
  1147  002148  0100               	movlb	0	; () banked
  1148  00214A  6FD0               	movwf	sprintf@s& (0+255),b
  1149  00214C  0E00               	movlw	high _Prom
  1150  00214E  6FD1               	movwf	(sprintf@s+1)& (0+255),b
  1151  002150  0E0E               	movlw	low STR_1
  1152  002152  6FD2               	movwf	sprintf@fmt& (0+255),b
  1153  002154  0E08               	movlw	high STR_1
  1154  002156  6FD3               	movwf	(sprintf@fmt+1)& (0+255),b
  1155  002158  C0DE  F0D4         	movff	_Promedio,?_sprintf+4
  1156  00215C  C0DF  F0D5         	movff	_Promedio+1,?_sprintf+5
  1157  002160  C0E0  F0D6         	movff	_Promedio+2,?_sprintf+6
  1158  002164  C0E1  F0D7         	movff	_Promedio+3,?_sprintf+7
  1159  002168  ECDA  F018         	call	_sprintf	;wreg free
  1160                           
  1161                           ;Proyecto_SSE_1.c: 43:         Lcd_Out(1,1,"Temperatura:");
  1162  00216C  0E01               	movlw	1
  1163  00216E  6E11               	movwf	Lcd_Out@x,c
  1164  002170  0E01               	movlw	low STR_2
  1165  002172  6E12               	movwf	Lcd_Out@buffer,c
  1166  002174  0E08               	movlw	high STR_2
  1167  002176  6E13               	movwf	Lcd_Out@buffer+1,c
  1168  002178  0E01               	movlw	1
  1169  00217A  ECF5  F017         	call	_Lcd_Out
  1170                           
  1171                           ;Proyecto_SSE_1.c: 44:         Lcd_Out2(2,1,Prom);
  1172  00217E  0E01               	movlw	1
  1173  002180  6E11               	movwf	Lcd_Out2@x,c
  1174  002182  0EEA               	movlw	low _Prom
  1175  002184  6E12               	movwf	Lcd_Out2@buffer,c
  1176  002186  0E00               	movlw	high _Prom
  1177  002188  6E13               	movwf	Lcd_Out2@buffer+1,c
  1178  00218A  0E02               	movlw	2
  1179  00218C  ECA2  F018         	call	_Lcd_Out2
  1180  002190  D75F               	goto	l5858
  1181  002192                     __end_of_main:
  1182                           	opt callstack 0
  1183                           
  1184 ;; *************** function _sprintf *****************
  1185 ;; Defined at:
  1186 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  s               2  112[BANK0 ] PTR unsigned char 
  1189 ;;		 -> Prom(17), 
  1190 ;;  fmt             2  114[BANK0 ] PTR const unsigned char 
  1191 ;;		 -> STR_1(5), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  f               6    4[BANK1 ] struct _IO_FILE
  1194 ;;  ap              2    2[BANK1 ] PTR void [1]
  1195 ;;		 -> ?_sprintf(2), 
  1196 ;;  ret             2    0        int 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2  112[BANK0 ] int 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         0       8       0       0       0       0       0       0       0
  1207 ;;      Locals:         0       0      10       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         0       8      10       0       0       0       0       0       0
  1210 ;;Total ram usage:       18 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    9
  1213 ;; This function calls:
  1214 ;;		_vfprintf
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text1
  1221  0031B4                     __ptext1:
  1222                           	opt callstack 0
  1223  0031B4                     _sprintf:
  1224                           	opt callstack 21
  1225                           
  1226                           ;incstack = 0
  1227  0031B4  0ED4               	movlw	low (?_sprintf+4)
  1228  0031B6  0101               	movlb	1	; () banked
  1229  0031B8  6FD4               	movwf	sprintf@ap& (0+255),b
  1230  0031BA  0E00               	movlw	high (?_sprintf+4)
  1231  0031BC  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  1232  0031BE  C0D0  F1D6         	movff	sprintf@s,sprintf@f
  1233  0031C2  C0D1  F1D7         	movff	sprintf@s+1,sprintf@f+1
  1234                           
  1235                           ; BSR set to: 1
  1236  0031C6  0E00               	movlw	0
  1237  0031C8  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  1238  0031CA  0E00               	movlw	0
  1239  0031CC  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  1240                           
  1241                           ; BSR set to: 1
  1242  0031CE  0E00               	movlw	0
  1243  0031D0  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  1244  0031D2  0E00               	movlw	0
  1245  0031D4  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  1246                           
  1247                           ; BSR set to: 1
  1248  0031D6  0ED6               	movlw	low sprintf@f
  1249  0031D8  0100               	movlb	0	; () banked
  1250  0031DA  6FCA               	movwf	vfprintf@fp& (0+255),b
  1251  0031DC  0E01               	movlw	high sprintf@f
  1252  0031DE  6FCB               	movwf	(vfprintf@fp+1)& (0+255),b
  1253  0031E0  C0D2  F0CC         	movff	sprintf@fmt,vfprintf@fmt
  1254  0031E4  C0D3  F0CD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1255  0031E8  0ED4               	movlw	low sprintf@ap
  1256  0031EA  6FCE               	movwf	vfprintf@ap& (0+255),b
  1257  0031EC  0E01               	movlw	high sprintf@ap
  1258  0031EE  6FCF               	movwf	(vfprintf@ap+1)& (0+255),b
  1259  0031F0  EC07  F019         	call	_vfprintf	;wreg free
  1260  0031F4  0101               	movlb	1	; () banked
  1261  0031F6  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  1262  0031F8  0100               	movlb	0	; () banked
  1263  0031FA  25D0               	addwf	sprintf@s& (0+255),w,b
  1264  0031FC  6ED9               	movwf	fsr2l,c
  1265  0031FE  0101               	movlb	1	; () banked
  1266  003200  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  1267  003202  0100               	movlb	0	; () banked
  1268  003204  21D1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1269  003206  6EDA               	movwf	fsr2h,c
  1270  003208  0E00               	movlw	0
  1271  00320A  6EDF               	movwf	indf2,c
  1272                           
  1273                           ; BSR set to: 0
  1274  00320C  0012               	return		;funcret
  1275  00320E                     __end_of_sprintf:
  1276                           	opt callstack 0
  1277                           
  1278 ;; *************** function _vfprintf *****************
  1279 ;; Defined at:
  1280 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  fp              2  106[BANK0 ] PTR struct _IO_FILE
  1283 ;;		 -> sprintf@f(6), 
  1284 ;;  fmt             2  108[BANK0 ] PTR const unsigned char 
  1285 ;;		 -> STR_1(5), 
  1286 ;;  ap              2  110[BANK0 ] PTR PTR void 
  1287 ;;		 -> sprintf@ap(2), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  cfmt            2   67[COMRAM] PTR unsigned char 
  1290 ;;		 -> STR_1(5), 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2  106[BANK0 ] int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1300 ;;      Params:         0       6       0       0       0       0       0       0       0
  1301 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1303 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1304 ;;Total ram usage:        8 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    8
  1307 ;; This function calls:
  1308 ;;		_vfpfcnvrt
  1309 ;; This function is called by:
  1310 ;;		_sprintf
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text2
  1315  00320E                     __ptext2:
  1316                           	opt callstack 0
  1317  00320E                     _vfprintf:
  1318                           	opt callstack 21
  1319                           
  1320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;incstack = 0
  1324  00320E  C0CC  F044         	movff	vfprintf@fmt,vfprintf@cfmt
  1325  003212  C0CD  F045         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1326                           
  1327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1328  003216  0E00               	movlw	0
  1329  003218  0100               	movlb	0	; () banked
  1330  00321A  6FE7               	movwf	(_nout+1)& (0+255),b
  1331  00321C  0E00               	movlw	0
  1332  00321E  6FE6               	movwf	_nout& (0+255),b
  1333                           
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1335  003220  D013               	goto	l5800
  1336  003222                     l5798:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1340  003222  C0CA  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1341  003226  C0CB  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1342  00322A  0E44               	movlw	low vfprintf@cfmt
  1343  00322C  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1344  00322E  0E00               	movlw	high vfprintf@cfmt
  1345  003230  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1346  003232  C0CE  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1347  003236  C0CF  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1348  00323A  ECD3  F008         	call	_vfpfcnvrt	;wreg free
  1349  00323E  0100               	movlb	0	; () banked
  1350  003240  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  1351  003242  27E6               	addwf	_nout& (0+255),f,b
  1352  003244  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1353  003246  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1354  003248                     l5800:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1358  003248  C044  FFF6         	movff	vfprintf@cfmt,tblptrl
  1359  00324C  C045  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1360  003250                     	if	0	;tblptru may be non-zero
  1361  003250                     	endif
  1362  003250                     	if	0	;tblptru may be non-zero
  1363  003250                     	endif
  1364  003250  0008               	tblrd		*
  1365  003252  50F5               	movf	tablat,w,c
  1366  003254  0900               	iorlw	0
  1367  003256  A4D8               	btfss	status,2,c
  1368  003258  D7E4               	goto	l5798
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1372  00325A  C0E6  F0CA         	movff	_nout,?_vfprintf
  1373  00325E  C0E7  F0CB         	movff	_nout+1,?_vfprintf+1
  1374                           
  1375                           ; BSR set to: 0
  1376  003262  0012               	return		;funcret
  1377  003264                     __end_of_vfprintf:
  1378                           	opt callstack 0
  1379                           
  1380 ;; *************** function _vfpfcnvrt *****************
  1381 ;; Defined at:
  1382 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1385 ;;		 -> sprintf@f(6), 
  1386 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
  1387 ;;		 -> vfprintf@cfmt(2), 
  1388 ;;  ap              2   88[BANK0 ] PTR PTR void 
  1389 ;;		 -> sprintf@ap(2), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  llu             8    0        unsigned long long 
  1392 ;;  ll              8    0        long long 
  1393 ;;  f               4   98[BANK0 ] long long 
  1394 ;;  ct              3  102[BANK0 ] unsigned char [3]
  1395 ;;  vp              3    0        PTR void 
  1396 ;;  cp              3    0        PTR unsigned char 
  1397 ;;  i               2    0        int 
  1398 ;;  done            2    0        int 
  1399 ;;  c               1  105[BANK0 ] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2   84[BANK0 ] int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1409 ;;      Params:         0       6       0       0       0       0       0       0       0
  1410 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1411 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1412 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1413 ;;Total ram usage:       22 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    7
  1416 ;; This function calls:
  1417 ;;		_atoi
  1418 ;;		_efgtoa
  1419 ;;		_fputc
  1420 ;;		_isdigit
  1421 ;;		_isupper
  1422 ;;		_strncmp
  1423 ;;		_tolower
  1424 ;; This function is called by:
  1425 ;;		_vfprintf
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text3
  1430  0011A6                     __ptext3:
  1431                           	opt callstack 0
  1432  0011A6                     _vfpfcnvrt:
  1433                           	opt callstack 21
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;incstack = 0
  1439  0011A6  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1440  0011AA  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1441  0011AE  CFDE FFF6          	movff	postinc2,tblptrl
  1442  0011B2  CFDD FFF7          	movff	postdec2,tblptrh
  1443  0011B6                     	if	0	;tblptru may be non-zero
  1444  0011B6                     	endif
  1445  0011B6                     	if	0	;tblptru may be non-zero
  1446  0011B6                     	endif
  1447  0011B6  0008               	tblrd		*
  1448  0011B8  50F5               	movf	tablat,w,c
  1449  0011BA  0A25               	xorlw	37
  1450  0011BC  A4D8               	btfss	status,2,c
  1451  0011BE  D1B1               	goto	l5786
  1452                           
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1454  0011C0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1455  0011C4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1456  0011C8  2ADE               	incf	postinc2,f,c
  1457  0011CA  0E00               	movlw	0
  1458  0011CC  22DD               	addwfc	postdec2,f,c
  1459                           
  1460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1461  0011CE  0E00               	movlw	0
  1462  0011D0  6E4B               	movwf	_width+1,c
  1463  0011D2  0E00               	movlw	0
  1464  0011D4  6E4A               	movwf	_width,c
  1465  0011D6  C04A  F04E         	movff	_width,_flags
  1466  0011DA  C04B  F04F         	movff	_width+1,_flags+1
  1467                           
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1469  0011DE  684C               	setf	_prec,c
  1470  0011E0  684D               	setf	_prec+1,c
  1471                           
  1472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1473  0011E2  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1474  0011E6  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1475  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  1476  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  1477  0011F2                     	if	0	;tblptru may be non-zero
  1478  0011F2                     	endif
  1479  0011F2                     	if	0	;tblptru may be non-zero
  1480  0011F2                     	endif
  1481  0011F2  0008               	tblrd		*
  1482  0011F4  50F5               	movf	tablat,w,c
  1483  0011F6  0A2E               	xorlw	46
  1484  0011F8  A4D8               	btfss	status,2,c
  1485  0011FA  D06E               	goto	u7330
  1486                           
  1487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1488  0011FC  0E00               	movlw	0
  1489  0011FE  6E4D               	movwf	_prec+1,c
  1490  001200  0E00               	movlw	0
  1491  001202  6E4C               	movwf	_prec,c
  1492                           
  1493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1494  001204  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495  001208  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496  00120C  2ADE               	incf	postinc2,f,c
  1497  00120E  0E00               	movlw	0
  1498  001210  22DD               	addwfc	postdec2,f,c
  1499                           
  1500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1501  001212  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502  001216  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503  00121A  CFDE FFF6          	movff	postinc2,tblptrl
  1504  00121E  CFDD FFF7          	movff	postdec2,tblptrh
  1505  001222                     	if	0	;tblptru may be non-zero
  1506  001222                     	endif
  1507  001222                     	if	0	;tblptru may be non-zero
  1508  001222                     	endif
  1509  001222  0008               	tblrd		*
  1510  001224  50F5               	movf	tablat,w,c
  1511  001226  0A2A               	xorlw	42
  1512  001228  A4D8               	btfss	status,2,c
  1513  00122A  D01C               	goto	l5722
  1514                           
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1516  00122C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517  001230  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518  001234  2ADE               	incf	postinc2,f,c
  1519  001236  0E00               	movlw	0
  1520  001238  22DD               	addwfc	postdec2,f,c
  1521                           
  1522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1523  00123A  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1524  00123E  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1525  001242  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1526  001246  0E02               	movlw	2
  1527  001248  26DE               	addwf	postinc2,f,c
  1528  00124A  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1529  00124E  0E00               	movlw	0
  1530  001250  22DD               	addwfc	postdec2,f,c
  1531  001252  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1532  001256  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1533  00125A  CFDE F04C          	movff	postinc2,_prec
  1534  00125E  CFDD F04D          	movff	postdec2,_prec+1
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1537  001262  D03A               	goto	u7330
  1538  001264                     l5722:
  1539                           
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1541  001264  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1542  001268  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1543  00126C  CFDE F015          	movff	postinc2,atoi@s
  1544  001270  CFDD F016          	movff	postdec2,atoi@s+1
  1545  001274  EC72  F011         	call	_atoi	;wreg free
  1546  001278  C015  F04C         	movff	?_atoi,_prec
  1547  00127C  C016  F04D         	movff	?_atoi+1,_prec+1
  1548                           
  1549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1550  001280  D007               	goto	l5726
  1551  001282                     l5724:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1555  001282  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1556  001286  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1557  00128A  2ADE               	incf	postinc2,f,c
  1558  00128C  0E00               	movlw	0
  1559  00128E  22DD               	addwfc	postdec2,f,c
  1560  001290                     l5726:
  1561  001290  0ED0               	movlw	208
  1562  001292  0100               	movlb	0	; () banked
  1563  001294  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  1564  001296  0EFF               	movlw	255
  1565  001298  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1566  00129A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1567  00129E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1568  0012A2  CFDE FFF6          	movff	postinc2,tblptrl
  1569  0012A6  CFDD FFF7          	movff	postdec2,tblptrh
  1570  0012AA                     	if	0	;tblptru may be non-zero
  1571  0012AA                     	endif
  1572  0012AA                     	if	0	;tblptru may be non-zero
  1573  0012AA                     	endif
  1574  0012AA  0008               	tblrd		*
  1575  0012AC  50F5               	movf	tablat,w,c
  1576  0012AE  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1577  0012B0  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1578  0012B2  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  1579  0012B4  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1580  0012B6  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1581  0012B8  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1582  0012BA  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1583  0012BC  E106               	bnz	u7310
  1584  0012BE  0E0A               	movlw	10
  1585  0012C0  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1586  0012C2  B0D8               	btfsc	status,0,c
  1587  0012C4  D002               	goto	u7310
  1588  0012C6  0E01               	movlw	1
  1589  0012C8  D001               	goto	u7320
  1590  0012CA                     u7310:
  1591  0012CA  0E00               	movlw	0
  1592  0012CC                     u7320:
  1593  0012CC  6FBE               	movwf	_vfpfcnvrt$748& (0+255),b
  1594  0012CE  6BBF               	clrf	(_vfpfcnvrt$748+1)& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597  0012D0  51BE               	movf	_vfpfcnvrt$748& (0+255),w,b
  1598  0012D2  11BF               	iorwf	(_vfpfcnvrt$748+1)& (0+255),w,b
  1599  0012D4  A4D8               	btfss	status,2,c
  1600  0012D6  D7D5               	goto	l5724
  1601  0012D8                     u7330:
  1602                           
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1604  0012D8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  0012DC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  0012E0  CFDE FFF6          	movff	postinc2,tblptrl
  1607  0012E4  CFDD FFF7          	movff	postdec2,tblptrh
  1608  0012E8                     	if	0	;tblptru may be non-zero
  1609  0012E8                     	endif
  1610  0012E8                     	if	0	;tblptru may be non-zero
  1611  0012E8                     	endif
  1612  0012E8  0008               	tblrd		*
  1613  0012EA  50F5               	movf	tablat,w,c
  1614  0012EC  6E14               	movwf	tolower@c,c
  1615  0012EE  6A15               	clrf	tolower@c+1,c
  1616  0012F0  EC5B  F019         	call	_tolower	;wreg free
  1617  0012F4  5014               	movf	?_tolower,w,c
  1618  0012F6  0100               	movlb	0	; () banked
  1619  0012F8  6FC6               	movwf	vfpfcnvrt@ct& (0+255),b
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1623  0012FA  51C6               	movf	vfpfcnvrt@ct& (0+255),w,b
  1624  0012FC  B4D8               	btfsc	status,2,c
  1625  0012FE  D035               	goto	l5742
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1629  001300  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1630  001304  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1631  001308  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1632  00130C  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1633  001310  0E01               	movlw	1
  1634  001312  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1635  001314  0E00               	movlw	0
  1636  001316  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1637  001318  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1638  00131C  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1639  001320                     	if	0	;tblptru may be non-zero
  1640  001320                     	endif
  1641  001320                     	if	0	;tblptru may be non-zero
  1642  001320                     	endif
  1643  001320  0008               	tblrd		*
  1644  001322  50F5               	movf	tablat,w,c
  1645  001324  6E14               	movwf	tolower@c,c
  1646  001326  6A15               	clrf	tolower@c+1,c
  1647  001328  EC5B  F019         	call	_tolower	;wreg free
  1648  00132C  5014               	movf	?_tolower,w,c
  1649  00132E  0100               	movlb	0	; () banked
  1650  001330  6FC7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1654  001332  51C7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1655  001334  B4D8               	btfsc	status,2,c
  1656  001336  D019               	goto	l5742
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1660  001338  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1661  00133C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1662  001340  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1663  001344  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1664  001348  0E02               	movlw	2
  1665  00134A  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1666  00134C  0E00               	movlw	0
  1667  00134E  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1668  001350  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1669  001354  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1670  001358                     	if	0	;tblptru may be non-zero
  1671  001358                     	endif
  1672  001358                     	if	0	;tblptru may be non-zero
  1673  001358                     	endif
  1674  001358  0008               	tblrd		*
  1675  00135A  50F5               	movf	tablat,w,c
  1676  00135C  6E14               	movwf	tolower@c,c
  1677  00135E  6A15               	clrf	tolower@c+1,c
  1678  001360  EC5B  F019         	call	_tolower	;wreg free
  1679  001364  5014               	movf	?_tolower,w,c
  1680  001366  0100               	movlb	0	; () banked
  1681  001368  6FC8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1682  00136A                     l5742:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1686  00136A  0E66               	movlw	102
  1687  00136C  19C6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1688  00136E  A4D8               	btfss	status,2,c
  1689  001370  D03F               	goto	l5754
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1693  001372  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694  001376  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695  00137A  CFDE FFF6          	movff	postinc2,tblptrl
  1696  00137E  CFDD FFF7          	movff	postdec2,tblptrh
  1697  001382                     	if	0	;tblptru may be non-zero
  1698  001382                     	endif
  1699  001382                     	if	0	;tblptru may be non-zero
  1700  001382                     	endif
  1701  001382  0008               	tblrd		*
  1702  001384  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1706  001388  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1707  00138C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1708  001390  2ADE               	incf	postinc2,f,c
  1709  001392  0E00               	movlw	0
  1710  001394  22DD               	addwfc	postdec2,f,c
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1714  001396  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1715  00139A  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1716  00139E  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1717  0013A2  0E04               	movlw	4
  1718  0013A4  26DE               	addwf	postinc2,f,c
  1719  0013A6  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1720  0013AA  0E00               	movlw	0
  1721  0013AC  22DD               	addwfc	postdec2,f,c
  1722  0013AE  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1723  0013B2  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1724  0013B6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f
  1725  0013BA  CFDE F0C3          	movff	postinc2,vfpfcnvrt@f+1
  1726  0013BE  CFDE F0C4          	movff	postinc2,vfpfcnvrt@f+2
  1727  0013C2  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f+3
  1728  0013C6                     l5750:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1732  0013C6  C0B4  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  1733  0013CA  C0B5  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1734  0013CE  C0C2  F072         	movff	vfpfcnvrt@f,efgtoa@f
  1735  0013D2  C0C3  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1736  0013D6  C0C4  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1737  0013DA  C0C5  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1738  0013DE  C0C9  F076         	movff	vfpfcnvrt@c,efgtoa@c
  1739  0013E2  EC14  F004         	call	_efgtoa	;wreg free
  1740  0013E6  C070  F0B4         	movff	?_efgtoa,?_vfpfcnvrt
  1741  0013EA  C071  F0B5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1742  0013EE  0012               	return	
  1743  0013F0                     l5754:
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1747  0013F0  0EC6               	movlw	low vfpfcnvrt@ct
  1748  0013F2  6E0E               	movwf	strncmp@_l,c
  1749  0013F4  0E00               	movlw	high vfpfcnvrt@ct
  1750  0013F6  6E0F               	movwf	strncmp@_l+1,c
  1751  0013F8  0E23               	movlw	low STR_11
  1752  0013FA  6E10               	movwf	strncmp@_r,c
  1753  0013FC  0E08               	movlw	high STR_11
  1754  0013FE  6E11               	movwf	strncmp@_r+1,c
  1755  001400  0E00               	movlw	0
  1756  001402  6E13               	movwf	strncmp@n+1,c
  1757  001404  0E02               	movlw	2
  1758  001406  6E12               	movwf	strncmp@n,c
  1759  001408  EC82  F016         	call	_strncmp	;wreg free
  1760  00140C  500E               	movf	?_strncmp,w,c
  1761  00140E  100F               	iorwf	?_strncmp+1,w,c
  1762  001410  A4D8               	btfss	status,2,c
  1763  001412  D056               	goto	l5770
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1766  001414  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1767  001418  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1768  00141C  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1769  001420  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1770  001424  0E01               	movlw	1
  1771  001426  0100               	movlb	0	; () banked
  1772  001428  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1773  00142A  0E00               	movlw	0
  1774  00142C  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1775  00142E  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1776  001432  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1777  001436                     	if	0	;tblptru may be non-zero
  1778  001436                     	endif
  1779  001436                     	if	0	;tblptru may be non-zero
  1780  001436                     	endif
  1781  001436  0008               	tblrd		*
  1782  001438  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  1783  00143C  0EBF               	movlw	191
  1784  00143E  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  1785  001440  0EFF               	movlw	255
  1786  001442  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1787  001444  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  001448  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  00144C  CFDE FFF6          	movff	postinc2,tblptrl
  1790  001450  CFDD FFF7          	movff	postdec2,tblptrh
  1791  001454                     	if	0	;tblptru may be non-zero
  1792  001454                     	endif
  1793  001454                     	if	0	;tblptru may be non-zero
  1794  001454                     	endif
  1795  001454  0008               	tblrd		*
  1796  001456  50F5               	movf	tablat,w,c
  1797  001458  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1798  00145A  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1799  00145C  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  1800  00145E  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1801  001460  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1802  001462  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1803  001464  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1804  001466  E106               	bnz	u7380
  1805  001468  0E1A               	movlw	26
  1806  00146A  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1807  00146C  B0D8               	btfsc	status,0,c
  1808  00146E  D002               	goto	u7380
  1809  001470  0E01               	movlw	1
  1810  001472  D001               	goto	u7390
  1811  001474                     u7380:
  1812  001474  0E00               	movlw	0
  1813  001476                     u7390:
  1814  001476  6FC0               	movwf	_vfpfcnvrt$752& (0+255),b
  1815  001478  6BC1               	clrf	(_vfpfcnvrt$752+1)& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818  00147A  51C0               	movf	_vfpfcnvrt$752& (0+255),w,b
  1819  00147C  11C1               	iorwf	(_vfpfcnvrt$752+1)& (0+255),w,b
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1823                           
  1824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1828  00147E  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1829  001482  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1830  001486  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1831  00148A  0E04               	movlw	4
  1832  00148C  26DE               	addwf	postinc2,f,c
  1833  00148E  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1834  001492  0E00               	movlw	0
  1835  001494  22DD               	addwfc	postdec2,f,c
  1836  001496  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1837  00149A  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1838  00149E  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f
  1839  0014A2  CFDE F0C3          	movff	postinc2,vfpfcnvrt@f+1
  1840  0014A6  CFDE F0C4          	movff	postinc2,vfpfcnvrt@f+2
  1841  0014AA  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f+3
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1845                           
  1846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  1847  0014AE  0E02               	movlw	2
  1848  0014B0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1849  0014B4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1850  0014B8  26DE               	addwf	postinc2,f,c
  1851  0014BA  0E00               	movlw	0
  1852  0014BC  22DD               	addwfc	postdec2,f,c
  1853  0014BE  D783               	goto	l5750
  1854  0014C0                     l5770:
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1857  0014C0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  0014C4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  0014C8  CFDE FFF6          	movff	postinc2,tblptrl
  1860  0014CC  CFDD FFF7          	movff	postdec2,tblptrh
  1861  0014D0                     	if	0	;tblptru may be non-zero
  1862  0014D0                     	endif
  1863  0014D0                     	if	0	;tblptru may be non-zero
  1864  0014D0                     	endif
  1865  0014D0  0008               	tblrd		*
  1866  0014D2  50F5               	movf	tablat,w,c
  1867  0014D4  0A25               	xorlw	37
  1868  0014D6  A4D8               	btfss	status,2,c
  1869  0014D8  D017               	goto	l5780
  1870                           
  1871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1872  0014DA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1873  0014DE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1874  0014E2  2ADE               	incf	postinc2,f,c
  1875  0014E4  0E00               	movlw	0
  1876  0014E6  22DD               	addwfc	postdec2,f,c
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1879  0014E8  0E00               	movlw	0
  1880  0014EA  6E0F               	movwf	fputc@c+1,c
  1881  0014EC  0E25               	movlw	37
  1882  0014EE  6E0E               	movwf	fputc@c,c
  1883  0014F0  C0B4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1884  0014F4  C0B5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1885  0014F8  ECD3  F016         	call	_fputc	;wreg free
  1886  0014FC                     l5776:
  1887                           
  1888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1889  0014FC  0E00               	movlw	0
  1890  0014FE  0100               	movlb	0	; () banked
  1891  001500  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1892  001502  0E01               	movlw	1
  1893  001504  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  1894  001506  0012               	return	
  1895  001508                     l5780:
  1896                           
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1898  001508  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  00150C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  001510  2ADE               	incf	postinc2,f,c
  1901  001512  0E00               	movlw	0
  1902  001514  22DD               	addwfc	postdec2,f,c
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1905  001516  0E00               	movlw	0
  1906  001518  0100               	movlb	0	; () banked
  1907  00151A  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1908  00151C  0E00               	movlw	0
  1909  00151E  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  1910  001520  0012               	return	
  1911  001522                     l5786:
  1912                           
  1913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1914  001522  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1915  001526  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1916  00152A  CFDE FFF6          	movff	postinc2,tblptrl
  1917  00152E  CFDD FFF7          	movff	postdec2,tblptrh
  1918  001532                     	if	0	;tblptru may be non-zero
  1919  001532                     	endif
  1920  001532                     	if	0	;tblptru may be non-zero
  1921  001532                     	endif
  1922  001532  0008               	tblrd		*
  1923  001534  50F5               	movf	tablat,w,c
  1924  001536  6E0E               	movwf	fputc@c,c
  1925  001538  6A0F               	clrf	fputc@c+1,c
  1926  00153A  C0B4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1927  00153E  C0B5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1928  001542  ECD3  F016         	call	_fputc	;wreg free
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1931  001546  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1932  00154A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1933  00154E  2ADE               	incf	postinc2,f,c
  1934  001550  0E00               	movlw	0
  1935  001552  22DD               	addwfc	postdec2,f,c
  1936  001554  D7D3               	goto	l5776
  1937  001556                     __end_of_vfpfcnvrt:
  1938                           	opt callstack 0
  1939                           
  1940 ;; *************** function _strncmp *****************
  1941 ;; Defined at:
  1942 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  _l              2   13[COMRAM] PTR const unsigned char 
  1945 ;;		 -> vfpfcnvrt@ct(3), 
  1946 ;;  _r              2   15[COMRAM] PTR const unsigned char 
  1947 ;;		 -> STR_13(3), 
  1948 ;;  n               2   17[COMRAM] unsigned int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  r               2   22[COMRAM] PTR const unsigned char 
  1951 ;;		 -> STR_13(3), 
  1952 ;;  l               2   20[COMRAM] PTR const unsigned char 
  1953 ;;		 -> vfpfcnvrt@ct(3), 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2   13[COMRAM] int 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1963 ;;      Params:         6       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1966 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:       11 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    2
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_vfpfcnvrt
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text4
  1978  002D04                     __ptext4:
  1979                           	opt callstack 0
  1980  002D04                     _strncmp:
  1981                           	opt callstack 25
  1982                           
  1983                           ;incstack = 0
  1984  002D04  C00E  F015         	movff	strncmp@_l,strncmp@l
  1985  002D08  C00F  F016         	movff	strncmp@_l+1,strncmp@l+1
  1986  002D0C  C010  F017         	movff	strncmp@_r,strncmp@r
  1987  002D10  C011  F018         	movff	strncmp@_r+1,strncmp@r+1
  1988  002D14  0612               	decf	strncmp@n,f,c
  1989  002D16  A0D8               	btfss	status,0,c
  1990  002D18  0613               	decf	strncmp@n+1,f,c
  1991  002D1A  2812               	incf	strncmp@n,w,c
  1992  002D1C  E10F               	bnz	l5692
  1993  002D1E  2813               	incf	strncmp@n+1,w,c
  1994  002D20  A4D8               	btfss	status,2,c
  1995  002D22  D00C               	goto	l5692
  1996  002D24  0E00               	movlw	0
  1997  002D26  6E0F               	movwf	?_strncmp+1,c
  1998  002D28  0E00               	movlw	0
  1999  002D2A  6E0E               	movwf	?_strncmp,c
  2000  002D2C  0012               	return	
  2001  002D2E                     l5690:
  2002  002D2E  4A15               	infsnz	strncmp@l,f,c
  2003  002D30  2A16               	incf	strncmp@l+1,f,c
  2004  002D32  4A17               	infsnz	strncmp@r,f,c
  2005  002D34  2A18               	incf	strncmp@r+1,f,c
  2006  002D36  0612               	decf	strncmp@n,f,c
  2007  002D38  A0D8               	btfss	status,0,c
  2008  002D3A  0613               	decf	strncmp@n+1,f,c
  2009  002D3C                     l5692:
  2010  002D3C  C015  FFD9         	movff	strncmp@l,fsr2l
  2011  002D40  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2012  002D44  50DF               	movf	indf2,w,c
  2013  002D46  B4D8               	btfsc	status,2,c
  2014  002D48  D01C               	goto	u7270
  2015  002D4A  C017  FFF6         	movff	strncmp@r,tblptrl
  2016  002D4E  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2017  002D52                     	if	0	;tblptru may be non-zero
  2018  002D52                     	endif
  2019  002D52                     	if	0	;tblptru may be non-zero
  2020  002D52                     	endif
  2021  002D52  0008               	tblrd		*
  2022  002D54  50F5               	movf	tablat,w,c
  2023  002D56  0900               	iorlw	0
  2024  002D58  B4D8               	btfsc	status,2,c
  2025  002D5A  D013               	goto	u7270
  2026  002D5C  5012               	movf	strncmp@n,w,c
  2027  002D5E  1013               	iorwf	strncmp@n+1,w,c
  2028  002D60  B4D8               	btfsc	status,2,c
  2029  002D62  D00F               	goto	u7270
  2030  002D64  C015  FFD9         	movff	strncmp@l,fsr2l
  2031  002D68  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2032  002D6C  50DF               	movf	indf2,w,c
  2033  002D6E  6E14               	movwf	??_strncmp& (0+255),c
  2034  002D70  C017  FFF6         	movff	strncmp@r,tblptrl
  2035  002D74  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2036  002D78                     	if	0	;tblptru may be non-zero
  2037  002D78                     	endif
  2038  002D78                     	if	0	;tblptru may be non-zero
  2039  002D78                     	endif
  2040  002D78  0008               	tblrd		*
  2041  002D7A  50F5               	movf	tablat,w,c
  2042  002D7C  1814               	xorwf	??_strncmp,w,c
  2043  002D7E  B4D8               	btfsc	status,2,c
  2044  002D80  D7D6               	goto	l5690
  2045  002D82                     u7270:
  2046  002D82  C015  FFD9         	movff	strncmp@l,fsr2l
  2047  002D86  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2048  002D8A  50DF               	movf	indf2,w,c
  2049  002D8C  6E14               	movwf	??_strncmp& (0+255),c
  2050  002D8E  C017  FFF6         	movff	strncmp@r,tblptrl
  2051  002D92  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2052  002D96                     	if	0	;tblptru may be non-zero
  2053  002D96                     	endif
  2054  002D96                     	if	0	;tblptru may be non-zero
  2055  002D96                     	endif
  2056  002D96  0008               	tblrd		*
  2057  002D98  50F5               	movf	tablat,w,c
  2058  002D9A  5C14               	subwf	??_strncmp,w,c
  2059  002D9C  6E0E               	movwf	?_strncmp,c
  2060  002D9E  6A0F               	clrf	?_strncmp+1,c
  2061  002DA0  A0D8               	btfss	status,0,c
  2062  002DA2  060F               	decf	?_strncmp+1,f,c
  2063  002DA4  0012               	return		;funcret
  2064  002DA6                     __end_of_strncmp:
  2065                           	opt callstack 0
  2066                           
  2067 ;; *************** function _efgtoa *****************
  2068 ;; Defined at:
  2069 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2072 ;;		 -> sprintf@f(6), 
  2073 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2074 ;;  c               1   22[BANK0 ] unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  u               4   80[BANK0 ] unsigned char 
  2077 ;;  g               4   72[BANK0 ] unsigned char 
  2078 ;;  l               4   66[BANK0 ] unsigned char 
  2079 ;;  h               4   62[BANK0 ] unsigned char 
  2080 ;;  ou              4   28[BANK0 ] unsigned char 
  2081 ;;  n               2   78[BANK0 ] int 
  2082 ;;  e               2   76[BANK0 ] int 
  2083 ;;  i               2   70[BANK0 ] int 
  2084 ;;  w               2   59[BANK0 ] int 
  2085 ;;  p               2   56[BANK0 ] int 
  2086 ;;  sign            2   54[BANK0 ] int 
  2087 ;;  d               2   52[BANK0 ] int 
  2088 ;;  ne              2   50[BANK0 ] int 
  2089 ;;  m               2   48[BANK0 ] int 
  2090 ;;  pp              2   46[BANK0 ] int 
  2091 ;;  t               2   44[BANK0 ] int 
  2092 ;;  mode            1   61[BANK0 ] unsigned char 
  2093 ;;  nmode           1   58[BANK0 ] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2   16[BANK0 ] int 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         0       7       0       0       0       0       0       0       0
  2104 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2106 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2107 ;;Total ram usage:       68 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    6
  2110 ;; This function calls:
  2111 ;;		___awdiv
  2112 ;;		___awmod
  2113 ;;		___fladd
  2114 ;;		___fldiv
  2115 ;;		___fleq
  2116 ;;		___flge
  2117 ;;		___flmul
  2118 ;;		___flneg
  2119 ;;		___flsub
  2120 ;;		___fltol
  2121 ;;		___fpclassifyf
  2122 ;;		_floorf
  2123 ;;		_isupper
  2124 ;;		_pad
  2125 ;;		_strcpy
  2126 ;;		_tolower
  2127 ;; This function is called by:
  2128 ;;		_vfpfcnvrt
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text5
  2133  000828                     __ptext5:
  2134                           	opt callstack 0
  2135  000828                     _efgtoa:
  2136                           	opt callstack 21
  2137                           
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2139                           
  2140                           ;incstack = 0
  2141  000828  0E00               	movlw	0
  2142  00082A  0100               	movlb	0	; () banked
  2143  00082C  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  2144  00082E  0E00               	movlw	0
  2145  000830  6F96               	movwf	efgtoa@sign& (0+255),b
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2149  000832  C072  F0A8         	movff	efgtoa@f,efgtoa@g
  2150  000836  C073  F0A9         	movff	efgtoa@f+1,efgtoa@g+1
  2151  00083A  C074  F0AA         	movff	efgtoa@f+2,efgtoa@g+2
  2152  00083E  C075  F0AB         	movff	efgtoa@f+3,efgtoa@g+3
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2156  000842  AFAB               	btfss	(efgtoa@g+3)& (0+255),7,b
  2157  000844  D016               	goto	l5354
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2161  000846  0E00               	movlw	0
  2162  000848  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  2163  00084A  0E01               	movlw	1
  2164  00084C  6F96               	movwf	efgtoa@sign& (0+255),b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2168  00084E  C0A8  F00E         	movff	efgtoa@g,___flneg@f1
  2169  000852  C0A9  F00F         	movff	efgtoa@g+1,___flneg@f1+1
  2170  000856  C0AA  F010         	movff	efgtoa@g+2,___flneg@f1+2
  2171  00085A  C0AB  F011         	movff	efgtoa@g+3,___flneg@f1+3
  2172  00085E  EC28  F01A         	call	___flneg	;wreg free
  2173  000862  C00E  F0A8         	movff	?___flneg,efgtoa@g
  2174  000866  C00F  F0A9         	movff	?___flneg+1,efgtoa@g+1
  2175  00086A  C010  F0AA         	movff	?___flneg+2,efgtoa@g+2
  2176  00086E  C011  F0AB         	movff	?___flneg+3,efgtoa@g+3
  2177  000872                     l5354:
  2178                           
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2180  000872  0E00               	movlw	0
  2181  000874  0100               	movlb	0	; () banked
  2182  000876  6FAF               	movwf	(efgtoa@n+1)& (0+255),b
  2183  000878  0E00               	movlw	0
  2184  00087A  6FAE               	movwf	efgtoa@n& (0+255),b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2188  00087C  C04A  F09B         	movff	_width,efgtoa@w
  2189  000880  C04B  F09C         	movff	_width+1,efgtoa@w+1
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2193  000884  5196               	movf	efgtoa@sign& (0+255),w,b
  2194  000886  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2195  000888  A4D8               	btfss	status,2,c
  2196  00088A  D002               	goto	u6660
  2197                           
  2198                           ; BSR set to: 0
  2199  00088C  A44E               	btfss	_flags,2,c
  2200  00088E  D013               	goto	l5374
  2201  000890                     u6660:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2205  000890  5196               	movf	efgtoa@sign& (0+255),w,b
  2206  000892  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2207  000894  A4D8               	btfss	status,2,c
  2208  000896  D004               	goto	l5366
  2209                           
  2210                           ; BSR set to: 0
  2211  000898  0E00               	movlw	0
  2212  00089A  6F81               	movwf	(_efgtoa$722+1)& (0+255),b
  2213  00089C  0E2B               	movlw	43
  2214  00089E  D003               	goto	L1
  2215  0008A0                     l5366:
  2216                           
  2217                           ; BSR set to: 0
  2218  0008A0  0E00               	movlw	0
  2219  0008A2  6F81               	movwf	(_efgtoa$722+1)& (0+255),b
  2220  0008A4  0E2D               	movlw	45
  2221  0008A6                     L1:
  2222  0008A6  6F80               	movwf	_efgtoa$722& (0+255),b
  2223                           
  2224                           ; BSR set to: 0
  2225  0008A8  C080  F182         	movff	_efgtoa$722,_dbuf
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2229  0008AC  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  2230  0008AE  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2234  0008B0  079B               	decf	efgtoa@w& (0+255),f,b
  2235  0008B2  A0D8               	btfss	status,0,c
  2236  0008B4  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  2237  0008B6                     l5374:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2241  0008B6  C0A8  F00E         	movff	efgtoa@g,___fpclassifyf@x
  2242  0008BA  C0A9  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2243  0008BE  C0AA  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2244  0008C2  C0AB  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2245  0008C6  ECBF  F015         	call	___fpclassifyf	;wreg free
  2246  0008CA  040E               	decf	?___fpclassifyf,w,c
  2247  0008CC  100F               	iorwf	?___fpclassifyf+1,w,c
  2248  0008CE  A4D8               	btfss	status,2,c
  2249  0008D0  D04C               	goto	l5392
  2250  0008D2  0EBF               	movlw	191
  2251  0008D4  0100               	movlb	0	; () banked
  2252  0008D6  6F77               	movwf	??_efgtoa& (0+255),b
  2253  0008D8  0EFF               	movlw	255
  2254  0008DA  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2255  0008DC  5176               	movf	efgtoa@c& (0+255),w,b
  2256  0008DE  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2257  0008E0  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2258  0008E2  5177               	movf	??_efgtoa& (0+255),w,b
  2259  0008E4  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2260  0008E6  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2261  0008E8  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2262  0008EA  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2263  0008EC  E106               	bnz	u6690
  2264  0008EE  0E1A               	movlw	26
  2265  0008F0  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2266  0008F2  B0D8               	btfsc	status,0,c
  2267  0008F4  D002               	goto	u6690
  2268  0008F6  0E01               	movlw	1
  2269  0008F8  D001               	goto	u6700
  2270  0008FA                     u6690:
  2271  0008FA  0E00               	movlw	0
  2272  0008FC                     u6700:
  2273  0008FC  6F82               	movwf	_efgtoa$723& (0+255),b
  2274  0008FE  6B83               	clrf	(_efgtoa$723+1)& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277  000900  5182               	movf	_efgtoa$723& (0+255),w,b
  2278  000902  1183               	iorwf	(_efgtoa$723+1)& (0+255),w,b
  2279  000904  B4D8               	btfsc	status,2,c
  2280  000906  D00D               	goto	l5384
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2284  000908  0E82               	movlw	low _dbuf
  2285  00090A  25AE               	addwf	efgtoa@n& (0+255),w,b
  2286  00090C  6E0E               	movwf	strcpy@dest,c
  2287  00090E  0E01               	movlw	high _dbuf
  2288  000910  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2289  000912  6E0F               	movwf	strcpy@dest+1,c
  2290  000914  0E13               	movlw	low STR_3
  2291  000916  6E10               	movwf	strcpy@src,c
  2292  000918  0E08               	movlw	high STR_3
  2293  00091A  6E11               	movwf	strcpy@src+1,c
  2294  00091C  EC32  F019         	call	_strcpy	;wreg free
  2295                           
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2297  000920  D00C               	goto	l5386
  2298  000922                     l5384:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2302  000922  0E82               	movlw	low _dbuf
  2303  000924  25AE               	addwf	efgtoa@n& (0+255),w,b
  2304  000926  6E0E               	movwf	strcpy@dest,c
  2305  000928  0E01               	movlw	high _dbuf
  2306  00092A  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2307  00092C  6E0F               	movwf	strcpy@dest+1,c
  2308  00092E  0E1B               	movlw	low STR_4
  2309  000930  6E10               	movwf	strcpy@src,c
  2310  000932  0E08               	movlw	high STR_4
  2311  000934  6E11               	movwf	strcpy@src+1,c
  2312  000936  EC32  F019         	call	_strcpy	;wreg free
  2313  00093A                     l5386:
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2316  00093A  0100               	movlb	0	; () banked
  2317  00093C  0EFD               	movlw	253
  2318  00093E  279B               	addwf	efgtoa@w& (0+255),f,b
  2319  000940  0EFF               	movlw	255
  2320  000942  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2321  000944                     l5388:
  2322                           
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2324  000944  C070  F01E         	movff	efgtoa@fp,pad@fp
  2325  000948  C071  F01F         	movff	efgtoa@fp+1,pad@fp+1
  2326  00094C  0E82               	movlw	low _dbuf
  2327  00094E  6E20               	movwf	pad@buf,c
  2328  000950  0E01               	movlw	high _dbuf
  2329  000952  6E21               	movwf	pad@buf+1,c
  2330  000954  C09B  F022         	movff	efgtoa@w,pad@p
  2331  000958  C09C  F023         	movff	efgtoa@w+1,pad@p+1
  2332  00095C  EC23  F017         	call	_pad	;wreg free
  2333  000960  C01E  F070         	movff	?_pad,?_efgtoa
  2334  000964  C01F  F071         	movff	?_pad+1,?_efgtoa+1
  2335  000968  0012               	return	
  2336  00096A                     l5392:
  2337                           
  2338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2339  00096A  C0A8  F00E         	movff	efgtoa@g,___fpclassifyf@x
  2340  00096E  C0A9  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2341  000972  C0AA  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2342  000976  C0AB  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2343  00097A  ECBF  F015         	call	___fpclassifyf	;wreg free
  2344  00097E  500E               	movf	?___fpclassifyf,w,c
  2345  000980  100F               	iorwf	?___fpclassifyf+1,w,c
  2346  000982  A4D8               	btfss	status,2,c
  2347  000984  D035               	goto	l5410
  2348  000986  0EBF               	movlw	191
  2349  000988  0100               	movlb	0	; () banked
  2350  00098A  6F77               	movwf	??_efgtoa& (0+255),b
  2351  00098C  0EFF               	movlw	255
  2352  00098E  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2353  000990  5176               	movf	efgtoa@c& (0+255),w,b
  2354  000992  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2355  000994  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2356  000996  5177               	movf	??_efgtoa& (0+255),w,b
  2357  000998  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2358  00099A  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2359  00099C  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2360  00099E  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2361  0009A0  E106               	bnz	u6730
  2362  0009A2  0E1A               	movlw	26
  2363  0009A4  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2364  0009A6  B0D8               	btfsc	status,0,c
  2365  0009A8  D002               	goto	u6730
  2366  0009AA  0E01               	movlw	1
  2367  0009AC  D001               	goto	u6740
  2368  0009AE                     u6730:
  2369  0009AE  0E00               	movlw	0
  2370  0009B0                     u6740:
  2371  0009B0  6F84               	movwf	_efgtoa$728& (0+255),b
  2372  0009B2  6B85               	clrf	(_efgtoa$728+1)& (0+255),b
  2373                           
  2374                           ; BSR set to: 0
  2375  0009B4  5184               	movf	_efgtoa$728& (0+255),w,b
  2376  0009B6  1185               	iorwf	(_efgtoa$728+1)& (0+255),w,b
  2377  0009B8  B4D8               	btfsc	status,2,c
  2378  0009BA  D00D               	goto	l5402
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2382  0009BC  0E82               	movlw	low _dbuf
  2383  0009BE  25AE               	addwf	efgtoa@n& (0+255),w,b
  2384  0009C0  6E0E               	movwf	strcpy@dest,c
  2385  0009C2  0E01               	movlw	high _dbuf
  2386  0009C4  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2387  0009C6  6E0F               	movwf	strcpy@dest+1,c
  2388  0009C8  0E17               	movlw	low STR_7
  2389  0009CA  6E10               	movwf	strcpy@src,c
  2390  0009CC  0E08               	movlw	high STR_7
  2391  0009CE  6E11               	movwf	strcpy@src+1,c
  2392  0009D0  EC32  F019         	call	_strcpy	;wreg free
  2393                           
  2394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2395  0009D4  D7B2               	goto	l5386
  2396  0009D6                     l5402:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2400  0009D6  0E82               	movlw	low _dbuf
  2401  0009D8  25AE               	addwf	efgtoa@n& (0+255),w,b
  2402  0009DA  6E0E               	movwf	strcpy@dest,c
  2403  0009DC  0E01               	movlw	high _dbuf
  2404  0009DE  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2405  0009E0  6E0F               	movwf	strcpy@dest+1,c
  2406  0009E2  0E1F               	movlw	low STR_8
  2407  0009E4  6E10               	movwf	strcpy@src,c
  2408  0009E6  0E08               	movlw	high STR_8
  2409  0009E8  6E11               	movwf	strcpy@src+1,c
  2410  0009EA  EC32  F019         	call	_strcpy	;wreg free
  2411  0009EE  D7A5               	goto	l5386
  2412  0009F0                     l5410:
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2415  0009F0  0E00               	movlw	0
  2416  0009F2  0100               	movlb	0	; () banked
  2417  0009F4  6FB0               	movwf	efgtoa@u& (0+255),b
  2418  0009F6  0E00               	movlw	0
  2419  0009F8  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  2420  0009FA  0E80               	movlw	128
  2421  0009FC  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  2422  0009FE  0E3F               	movlw	63
  2423  000A00  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  2424                           
  2425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2426  000A02  0E00               	movlw	0
  2427  000A04  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  2428  000A06  0E00               	movlw	0
  2429  000A08  6FAC               	movwf	efgtoa@e& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2433  000A0A  C0A8  F00E         	movff	efgtoa@g,___fleq@ff1
  2434  000A0E  C0A9  F00F         	movff	efgtoa@g+1,___fleq@ff1+1
  2435  000A12  C0AA  F010         	movff	efgtoa@g+2,___fleq@ff1+2
  2436  000A16  C0AB  F011         	movff	efgtoa@g+3,___fleq@ff1+3
  2437  000A1A  0E00               	movlw	0
  2438  000A1C  6E12               	movwf	___fleq@ff2,c
  2439  000A1E  0E00               	movlw	0
  2440  000A20  6E13               	movwf	___fleq@ff2+1,c
  2441  000A22  0E00               	movlw	0
  2442  000A24  6E14               	movwf	___fleq@ff2+2,c
  2443  000A26  0E00               	movlw	0
  2444  000A28  6E15               	movwf	___fleq@ff2+3,c
  2445  000A2A  EC6E  F017         	call	___fleq	;wreg free
  2446  000A2E  A0D8               	btfss	status,0,c
  2447  000A30  D01E               	goto	l5420
  2448  000A32  D076               	goto	u6780
  2449  000A34                     l5416:
  2450                           
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2452  000A34  C0B0  F00E         	movff	efgtoa@u,___flmul@b
  2453  000A38  C0B1  F00F         	movff	efgtoa@u+1,___flmul@b+1
  2454  000A3C  C0B2  F010         	movff	efgtoa@u+2,___flmul@b+2
  2455  000A40  C0B3  F011         	movff	efgtoa@u+3,___flmul@b+3
  2456  000A44  0E00               	movlw	0
  2457  000A46  6E12               	movwf	___flmul@a,c
  2458  000A48  0E00               	movlw	0
  2459  000A4A  6E13               	movwf	___flmul@a+1,c
  2460  000A4C  0E20               	movlw	32
  2461  000A4E  6E14               	movwf	___flmul@a+2,c
  2462  000A50  0E41               	movlw	65
  2463  000A52  6E15               	movwf	___flmul@a+3,c
  2464  000A54  ECAB  F00A         	call	___flmul	;wreg free
  2465  000A58  C00E  F0B0         	movff	?___flmul,efgtoa@u
  2466  000A5C  C00F  F0B1         	movff	?___flmul+1,efgtoa@u+1
  2467  000A60  C010  F0B2         	movff	?___flmul+2,efgtoa@u+2
  2468  000A64  C011  F0B3         	movff	?___flmul+3,efgtoa@u+3
  2469                           
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2471  000A68  0100               	movlb	0	; () banked
  2472  000A6A  4BAC               	infsnz	efgtoa@e& (0+255),f,b
  2473  000A6C  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  2474  000A6E                     l5420:
  2475                           
  2476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2477  000A6E  C0A8  F027         	movff	efgtoa@g,___flge@ff1
  2478  000A72  C0A9  F028         	movff	efgtoa@g+1,___flge@ff1+1
  2479  000A76  C0AA  F029         	movff	efgtoa@g+2,___flge@ff1+2
  2480  000A7A  C0AB  F02A         	movff	efgtoa@g+3,___flge@ff1+3
  2481  000A7E  0E00               	movlw	0
  2482  000A80  6E12               	movwf	___flmul@a,c
  2483  000A82  0E00               	movlw	0
  2484  000A84  6E13               	movwf	___flmul@a+1,c
  2485  000A86  0E20               	movlw	32
  2486  000A88  6E14               	movwf	___flmul@a+2,c
  2487  000A8A  0E41               	movlw	65
  2488  000A8C  6E15               	movwf	___flmul@a+3,c
  2489  000A8E  C0B0  F00E         	movff	efgtoa@u,___flmul@b
  2490  000A92  C0B1  F00F         	movff	efgtoa@u+1,___flmul@b+1
  2491  000A96  C0B2  F010         	movff	efgtoa@u+2,___flmul@b+2
  2492  000A9A  C0B3  F011         	movff	efgtoa@u+3,___flmul@b+3
  2493  000A9E  ECAB  F00A         	call	___flmul	;wreg free
  2494  000AA2  C00E  F02B         	movff	?___flmul,___flge@ff2
  2495  000AA6  C00F  F02C         	movff	?___flmul+1,___flge@ff2+1
  2496  000AAA  C010  F02D         	movff	?___flmul+2,___flge@ff2+2
  2497  000AAE  C011  F02E         	movff	?___flmul+3,___flge@ff2+3
  2498  000AB2  ECEF  F014         	call	___flge	;wreg free
  2499  000AB6  A0D8               	btfss	status,0,c
  2500  000AB8  D01F               	goto	l5426
  2501  000ABA  D7BC               	goto	l5416
  2502  000ABC                     l5422:
  2503                           
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2505  000ABC  C0B0  F027         	movff	efgtoa@u,___fldiv@b
  2506  000AC0  C0B1  F028         	movff	efgtoa@u+1,___fldiv@b+1
  2507  000AC4  C0B2  F029         	movff	efgtoa@u+2,___fldiv@b+2
  2508  000AC8  C0B3  F02A         	movff	efgtoa@u+3,___fldiv@b+3
  2509  000ACC  0E00               	movlw	0
  2510  000ACE  6E2B               	movwf	___fldiv@a,c
  2511  000AD0  0E00               	movlw	0
  2512  000AD2  6E2C               	movwf	___fldiv@a+1,c
  2513  000AD4  0E20               	movlw	32
  2514  000AD6  6E2D               	movwf	___fldiv@a+2,c
  2515  000AD8  0E41               	movlw	65
  2516  000ADA  6E2E               	movwf	___fldiv@a+3,c
  2517  000ADC  ECDA  F00D         	call	___fldiv	;wreg free
  2518  000AE0  C027  F0B0         	movff	?___fldiv,efgtoa@u
  2519  000AE4  C028  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  2520  000AE8  C029  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  2521  000AEC  C02A  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  2522                           
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2524  000AF0  0100               	movlb	0	; () banked
  2525  000AF2  07AC               	decf	efgtoa@e& (0+255),f,b
  2526  000AF4  A0D8               	btfss	status,0,c
  2527  000AF6  07AD               	decf	(efgtoa@e+1)& (0+255),f,b
  2528  000AF8                     l5426:
  2529                           
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2531  000AF8  C0A8  F027         	movff	efgtoa@g,___flge@ff1
  2532  000AFC  C0A9  F028         	movff	efgtoa@g+1,___flge@ff1+1
  2533  000B00  C0AA  F029         	movff	efgtoa@g+2,___flge@ff1+2
  2534  000B04  C0AB  F02A         	movff	efgtoa@g+3,___flge@ff1+3
  2535  000B08  C0B0  F02B         	movff	efgtoa@u,___flge@ff2
  2536  000B0C  C0B1  F02C         	movff	efgtoa@u+1,___flge@ff2+1
  2537  000B10  C0B2  F02D         	movff	efgtoa@u+2,___flge@ff2+2
  2538  000B14  C0B3  F02E         	movff	efgtoa@u+3,___flge@ff2+3
  2539  000B18  ECEF  F014         	call	___flge	;wreg free
  2540  000B1C  A0D8               	btfss	status,0,c
  2541  000B1E  D7CE               	goto	l5422
  2542  000B20                     u6780:
  2543                           
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2545  000B20  C076  F014         	movff	efgtoa@c,tolower@c
  2546  000B24  6A15               	clrf	tolower@c+1,c
  2547  000B26  EC5B  F019         	call	_tolower	;wreg free
  2548  000B2A  5014               	movf	?_tolower,w,c
  2549  000B2C  0100               	movlb	0	; () banked
  2550  000B2E  6F9D               	movwf	efgtoa@mode& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2554  000B30  C09D  F09A         	movff	efgtoa@mode,efgtoa@nmode
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2558  000B34  0E67               	movlw	103
  2559  000B36  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2560  000B38  A4D8               	btfss	status,2,c
  2561  000B3A  D019               	goto	l5442
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2565  000B3C  504C               	movf	_prec,w,c
  2566  000B3E  104D               	iorwf	_prec+1,w,c
  2567  000B40  A4D8               	btfss	status,2,c
  2568  000B42  D004               	goto	l5438
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2572  000B44  0E00               	movlw	0
  2573  000B46  6E4D               	movwf	_prec+1,c
  2574  000B48  0E01               	movlw	1
  2575  000B4A  6E4C               	movwf	_prec,c
  2576  000B4C                     l5438:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2580  000B4C  BE4D               	btfsc	_prec+1,7,c
  2581  000B4E  D005               	goto	u6810
  2582  000B50  504D               	movf	_prec+1,w,c
  2583  000B52  E108               	bnz	l217
  2584  000B54  044C               	decf	_prec,w,c
  2585  000B56  B0D8               	btfsc	status,0,c
  2586  000B58  D005               	goto	l217
  2587  000B5A                     u6810:
  2588                           
  2589                           ; BSR set to: 0
  2590  000B5A  0E00               	movlw	0
  2591  000B5C  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  2592  000B5E  0E06               	movlw	6
  2593  000B60  6F98               	movwf	efgtoa@p& (0+255),b
  2594  000B62  D008               	goto	l5448
  2595  000B64                     l217:
  2596                           
  2597                           ; BSR set to: 0
  2598  000B64  C04C  F098         	movff	_prec,efgtoa@p
  2599  000B68  C04D  F099         	movff	_prec+1,efgtoa@p+1
  2600  000B6C  D003               	goto	l5448
  2601  000B6E                     l5442:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2605  000B6E  AE4D               	btfss	_prec+1,7,c
  2606  000B70  D7F9               	goto	l217
  2607  000B72  D7F3               	goto	u6810
  2608  000B74                     l5448:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2612  000B74  0E67               	movlw	103
  2613  000B76  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2614  000B78  A4D8               	btfss	status,2,c
  2615  000B7A  D022               	goto	l5458
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2619  000B7C  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  2620  000B7E  D006               	goto	u6840
  2621  000B80  0EFC               	movlw	252
  2622  000B82  5DAC               	subwf	efgtoa@e& (0+255),w,b
  2623  000B84  0EFF               	movlw	255
  2624  000B86  59AD               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2625  000B88  A0D8               	btfss	status,0,c
  2626  000B8A  D018               	goto	l5456
  2627  000B8C                     u6840:
  2628                           
  2629                           ; BSR set to: 0
  2630  000B8C  0EFF               	movlw	255
  2631  000B8E  6F77               	movwf	??_efgtoa& (0+255),b
  2632  000B90  0EFF               	movlw	255
  2633  000B92  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2634  000B94  C098  F079         	movff	efgtoa@p,??_efgtoa+2
  2635  000B98  C099  F07A         	movff	efgtoa@p+1,??_efgtoa+3
  2636  000B9C  5177               	movf	??_efgtoa& (0+255),w,b
  2637  000B9E  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2638  000BA0  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2639  000BA2  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2640  000BA4  51AC               	movf	efgtoa@e& (0+255),w,b
  2641  000BA6  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2642  000BA8  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2643  000BAA  0A80               	xorlw	128
  2644  000BAC  6F7B               	movwf	(??_efgtoa+4)& (0+255),b
  2645  000BAE  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  2646  000BB0  0A80               	xorlw	128
  2647  000BB2  597B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2648  000BB4  A0D8               	btfss	status,0,c
  2649  000BB6  D002               	goto	l5456
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2653  000BB8  0E66               	movlw	102
  2654  000BBA  D001               	goto	L2
  2655  000BBC                     l5456:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2659  000BBC  0E65               	movlw	101
  2660  000BBE                     L2:
  2661  000BBE  6F9A               	movwf	efgtoa@nmode& (0+255),b
  2662  000BC0                     l5458:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2666  000BC0  C098  F090         	movff	efgtoa@p,efgtoa@m
  2667  000BC4  C099  F091         	movff	efgtoa@p+1,efgtoa@m+1
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2671  000BC8  0E67               	movlw	103
  2672  000BCA  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2673  000BCC  A4D8               	btfss	status,2,c
  2674  000BCE  D005               	goto	u6880
  2675                           
  2676                           ; BSR set to: 0
  2677  000BD0  0E66               	movlw	102
  2678  000BD2  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  2679  000BD4  B4D8               	btfsc	status,2,c
  2680                           
  2681                           ; BSR set to: 0
  2682  000BD6  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  2683  000BD8  D002               	goto	l5468
  2684  000BDA                     u6880:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2688  000BDA  4B90               	infsnz	efgtoa@m& (0+255),f,b
  2689  000BDC  2B91               	incf	(efgtoa@m+1)& (0+255),f,b
  2690  000BDE                     l5468:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2694  000BDE  0E66               	movlw	102
  2695  000BE0  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  2696  000BE2  A4D8               	btfss	status,2,c
  2697  000BE4  D016               	goto	l5478
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2701  000BE6  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  2702  000BE8  D00C               	goto	l5474
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2706  000BEA  0E00               	movlw	0
  2707  000BEC  6FB0               	movwf	efgtoa@u& (0+255),b
  2708  000BEE  0E00               	movlw	0
  2709  000BF0  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  2710  000BF2  0E80               	movlw	128
  2711  000BF4  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  2712  000BF6  0E3F               	movlw	63
  2713  000BF8  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  2714                           
  2715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2716  000BFA  0E00               	movlw	0
  2717  000BFC  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  2718  000BFE  0E00               	movlw	0
  2719  000C00  6FAC               	movwf	efgtoa@e& (0+255),b
  2720  000C02                     l5474:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2724  000C02  0E67               	movlw	103
  2725  000C04  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2726  000C06  B4D8               	btfsc	status,2,c
  2727  000C08  D004               	goto	l5478
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2731  000C0A  51AC               	movf	efgtoa@e& (0+255),w,b
  2732  000C0C  2790               	addwf	efgtoa@m& (0+255),f,b
  2733  000C0E  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  2734  000C10  2391               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2735  000C12                     l5478:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2739  000C12  0E00               	movlw	0
  2740  000C14  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  2741  000C16  0E00               	movlw	0
  2742  000C18  6FA6               	movwf	efgtoa@i& (0+255),b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2746  000C1A  C0A8  F09E         	movff	efgtoa@g,efgtoa@h
  2747  000C1E  C0A9  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  2748  000C22  C0AA  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  2749  000C26  C0AB  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2753  000C2A  C0B0  F07C         	movff	efgtoa@u,efgtoa@ou
  2754  000C2E  C0B1  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  2755  000C32  C0B2  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  2756  000C36  C0B3  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  2757                           
  2758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2759  000C3A  D07B               	goto	l5492
  2760  000C3C                     l5484:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2764  000C3C  C09E  F027         	movff	efgtoa@h,___fldiv@b
  2765  000C40  C09F  F028         	movff	efgtoa@h+1,___fldiv@b+1
  2766  000C44  C0A0  F029         	movff	efgtoa@h+2,___fldiv@b+2
  2767  000C48  C0A1  F02A         	movff	efgtoa@h+3,___fldiv@b+3
  2768  000C4C  C0B0  F02B         	movff	efgtoa@u,___fldiv@a
  2769  000C50  C0B1  F02C         	movff	efgtoa@u+1,___fldiv@a+1
  2770  000C54  C0B2  F02D         	movff	efgtoa@u+2,___fldiv@a+2
  2771  000C58  C0B3  F02E         	movff	efgtoa@u+3,___fldiv@a+3
  2772  000C5C  ECDA  F00D         	call	___fldiv	;wreg free
  2773  000C60  C027  F040         	movff	?___fldiv,floorf@x
  2774  000C64  C028  F041         	movff	?___fldiv+1,floorf@x+1
  2775  000C68  C029  F042         	movff	?___fldiv+2,floorf@x+2
  2776  000C6C  C02A  F043         	movff	?___fldiv+3,floorf@x+3
  2777  000C70  EC1E  F00F         	call	_floorf	;wreg free
  2778  000C74  C040  F0A2         	movff	?_floorf,efgtoa@l
  2779  000C78  C041  F0A3         	movff	?_floorf+1,efgtoa@l+1
  2780  000C7C  C042  F0A4         	movff	?_floorf+2,efgtoa@l+2
  2781  000C80  C043  F0A5         	movff	?_floorf+3,efgtoa@l+3
  2782                           
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2784  000C84  C0A2  F00E         	movff	efgtoa@l,___fltol@f1
  2785  000C88  C0A3  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  2786  000C8C  C0A4  F010         	movff	efgtoa@l+2,___fltol@f1+2
  2787  000C90  C0A5  F011         	movff	efgtoa@l+3,___fltol@f1+3
  2788  000C94  EC25  F016         	call	___fltol	;wreg free
  2789  000C98  C00E  F094         	movff	?___fltol,efgtoa@d
  2790  000C9C  C00F  F095         	movff	?___fltol+1,efgtoa@d+1
  2791                           
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2793  000CA0  C09E  F027         	movff	efgtoa@h,___flsub@b
  2794  000CA4  C09F  F028         	movff	efgtoa@h+1,___flsub@b+1
  2795  000CA8  C0A0  F029         	movff	efgtoa@h+2,___flsub@b+2
  2796  000CAC  C0A1  F02A         	movff	efgtoa@h+3,___flsub@b+3
  2797  000CB0  C0B0  F012         	movff	efgtoa@u,___flmul@a
  2798  000CB4  C0B1  F013         	movff	efgtoa@u+1,___flmul@a+1
  2799  000CB8  C0B2  F014         	movff	efgtoa@u+2,___flmul@a+2
  2800  000CBC  C0B3  F015         	movff	efgtoa@u+3,___flmul@a+3
  2801  000CC0  C0A2  F00E         	movff	efgtoa@l,___flmul@b
  2802  000CC4  C0A3  F00F         	movff	efgtoa@l+1,___flmul@b+1
  2803  000CC8  C0A4  F010         	movff	efgtoa@l+2,___flmul@b+2
  2804  000CCC  C0A5  F011         	movff	efgtoa@l+3,___flmul@b+3
  2805  000CD0  ECAB  F00A         	call	___flmul	;wreg free
  2806  000CD4  C00E  F02B         	movff	?___flmul,___flsub@a
  2807  000CD8  C00F  F02C         	movff	?___flmul+1,___flsub@a+1
  2808  000CDC  C010  F02D         	movff	?___flmul+2,___flsub@a+2
  2809  000CE0  C011  F02E         	movff	?___flmul+3,___flsub@a+3
  2810  000CE4  EC81  F019         	call	___flsub	;wreg free
  2811  000CE8  C027  F09E         	movff	?___flsub,efgtoa@h
  2812  000CEC  C028  F09F         	movff	?___flsub+1,efgtoa@h+1
  2813  000CF0  C029  F0A0         	movff	?___flsub+2,efgtoa@h+2
  2814  000CF4  C02A  F0A1         	movff	?___flsub+3,efgtoa@h+3
  2815                           
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2817  000CF8  C0B0  F027         	movff	efgtoa@u,___fldiv@b
  2818  000CFC  C0B1  F028         	movff	efgtoa@u+1,___fldiv@b+1
  2819  000D00  C0B2  F029         	movff	efgtoa@u+2,___fldiv@b+2
  2820  000D04  C0B3  F02A         	movff	efgtoa@u+3,___fldiv@b+3
  2821  000D08  0E00               	movlw	0
  2822  000D0A  6E2B               	movwf	___fldiv@a,c
  2823  000D0C  0E00               	movlw	0
  2824  000D0E  6E2C               	movwf	___fldiv@a+1,c
  2825  000D10  0E20               	movlw	32
  2826  000D12  6E2D               	movwf	___fldiv@a+2,c
  2827  000D14  0E41               	movlw	65
  2828  000D16  6E2E               	movwf	___fldiv@a+3,c
  2829  000D18  ECDA  F00D         	call	___fldiv	;wreg free
  2830  000D1C  C027  F0B0         	movff	?___fldiv,efgtoa@u
  2831  000D20  C028  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  2832  000D24  C029  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  2833  000D28  C02A  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  2834                           
  2835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2836  000D2C  0100               	movlb	0	; () banked
  2837  000D2E  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  2838  000D30  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  2839  000D32                     l5492:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2843  000D32  5190               	movf	efgtoa@m& (0+255),w,b
  2844  000D34  5DA6               	subwf	efgtoa@i& (0+255),w,b
  2845  000D36  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  2846  000D38  0A80               	xorlw	128
  2847  000D3A  6F77               	movwf	??_efgtoa& (0+255),b
  2848  000D3C  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  2849  000D3E  0A80               	xorlw	128
  2850  000D40  5977               	subwfb	??_efgtoa& (0+255),w,b
  2851  000D42  A0D8               	btfss	status,0,c
  2852  000D44  D77B               	goto	l5484
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2856  000D46  C0B0  F00E         	movff	efgtoa@u,___flmul@b
  2857  000D4A  C0B1  F00F         	movff	efgtoa@u+1,___flmul@b+1
  2858  000D4E  C0B2  F010         	movff	efgtoa@u+2,___flmul@b+2
  2859  000D52  C0B3  F011         	movff	efgtoa@u+3,___flmul@b+3
  2860  000D56  0E00               	movlw	0
  2861  000D58  6E12               	movwf	___flmul@a,c
  2862  000D5A  0E00               	movlw	0
  2863  000D5C  6E13               	movwf	___flmul@a+1,c
  2864  000D5E  0EA0               	movlw	160
  2865  000D60  6E14               	movwf	___flmul@a+2,c
  2866  000D62  0E40               	movlw	64
  2867  000D64  6E15               	movwf	___flmul@a+3,c
  2868  000D66  ECAB  F00A         	call	___flmul	;wreg free
  2869  000D6A  C00E  F0A2         	movff	?___flmul,efgtoa@l
  2870  000D6E  C00F  F0A3         	movff	?___flmul+1,efgtoa@l+1
  2871  000D72  C010  F0A4         	movff	?___flmul+2,efgtoa@l+2
  2872  000D76  C011  F0A5         	movff	?___flmul+3,efgtoa@l+3
  2873                           
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2875  000D7A  C09E  F027         	movff	efgtoa@h,___flge@ff1
  2876  000D7E  C09F  F028         	movff	efgtoa@h+1,___flge@ff1+1
  2877  000D82  C0A0  F029         	movff	efgtoa@h+2,___flge@ff1+2
  2878  000D86  C0A1  F02A         	movff	efgtoa@h+3,___flge@ff1+3
  2879  000D8A  C0A2  F02B         	movff	efgtoa@l,___flge@ff2
  2880  000D8E  C0A3  F02C         	movff	efgtoa@l+1,___flge@ff2+1
  2881  000D92  C0A4  F02D         	movff	efgtoa@l+2,___flge@ff2+2
  2882  000D96  C0A5  F02E         	movff	efgtoa@l+3,___flge@ff2+3
  2883  000D9A  ECEF  F014         	call	___flge	;wreg free
  2884  000D9E  B0D8               	btfsc	status,0,c
  2885  000DA0  D003               	goto	l5500
  2886                           
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2888  000DA2  0E00               	movlw	0
  2889  000DA4  0100               	movlb	0	; () banked
  2890  000DA6  D018               	goto	L3
  2891  000DA8                     l5500:
  2892                           
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2894  000DA8  C09E  F00E         	movff	efgtoa@h,___fleq@ff1
  2895  000DAC  C09F  F00F         	movff	efgtoa@h+1,___fleq@ff1+1
  2896  000DB0  C0A0  F010         	movff	efgtoa@h+2,___fleq@ff1+2
  2897  000DB4  C0A1  F011         	movff	efgtoa@h+3,___fleq@ff1+3
  2898  000DB8  C0A2  F012         	movff	efgtoa@l,___fleq@ff2
  2899  000DBC  C0A3  F013         	movff	efgtoa@l+1,___fleq@ff2+1
  2900  000DC0  C0A4  F014         	movff	efgtoa@l+2,___fleq@ff2+2
  2901  000DC4  C0A5  F015         	movff	efgtoa@l+3,___fleq@ff2+3
  2902  000DC8  EC6E  F017         	call	___fleq	;wreg free
  2903  000DCC  A0D8               	btfss	status,0,c
  2904  000DCE  D00B               	goto	l5506
  2905  000DD0  0100               	movlb	0	; () banked
  2906  000DD2  B194               	btfsc	efgtoa@d& (0+255),0,b
  2907  000DD4  D008               	goto	l5506
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2911  000DD6  0E00               	movlw	0
  2912  000DD8                     L3:
  2913  000DD8  6FA2               	movwf	efgtoa@l& (0+255),b
  2914  000DDA  0E00               	movlw	0
  2915  000DDC  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  2916  000DDE  0E00               	movlw	0
  2917  000DE0  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  2918  000DE2  0E00               	movlw	0
  2919  000DE4  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  2920  000DE6                     l5506:
  2921                           
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2923  000DE6  C0A8  F00E         	movff	efgtoa@g,___fladd@b
  2924  000DEA  C0A9  F00F         	movff	efgtoa@g+1,___fladd@b+1
  2925  000DEE  C0AA  F010         	movff	efgtoa@g+2,___fladd@b+2
  2926  000DF2  C0AB  F011         	movff	efgtoa@g+3,___fladd@b+3
  2927  000DF6  C0A2  F012         	movff	efgtoa@l,___fladd@a
  2928  000DFA  C0A3  F013         	movff	efgtoa@l+1,___fladd@a+1
  2929  000DFE  C0A4  F014         	movff	efgtoa@l+2,___fladd@a+2
  2930  000E02  C0A5  F015         	movff	efgtoa@l+3,___fladd@a+3
  2931  000E06  EC54  F00C         	call	___fladd	;wreg free
  2932  000E0A  C00E  F09E         	movff	?___fladd,efgtoa@h
  2933  000E0E  C00F  F09F         	movff	?___fladd+1,efgtoa@h+1
  2934  000E12  C010  F0A0         	movff	?___fladd+2,efgtoa@h+2
  2935  000E16  C011  F0A1         	movff	?___fladd+3,efgtoa@h+3
  2936                           
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  2938  000E1A  C07C  F0B0         	movff	efgtoa@ou,efgtoa@u
  2939  000E1E  C07D  F0B1         	movff	efgtoa@ou+1,efgtoa@u+1
  2940  000E22  C07E  F0B2         	movff	efgtoa@ou+2,efgtoa@u+2
  2941  000E26  C07F  F0B3         	movff	efgtoa@ou+3,efgtoa@u+3
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  2944  000E2A  0E65               	movlw	101
  2945  000E2C  0100               	movlb	0	; () banked
  2946  000E2E  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  2947  000E30  B4D8               	btfsc	status,2,c
  2948  000E32  D005               	goto	l5514
  2949                           
  2950                           ; BSR set to: 0
  2951  000E34  C0AC  F092         	movff	efgtoa@e,efgtoa@ne
  2952  000E38  C0AD  F093         	movff	efgtoa@e+1,efgtoa@ne+1
  2953  000E3C  D004               	goto	l243
  2954  000E3E                     l5514:
  2955                           
  2956                           ; BSR set to: 0
  2957  000E3E  0E00               	movlw	0
  2958  000E40  6F93               	movwf	(efgtoa@ne+1)& (0+255),b
  2959  000E42  0E00               	movlw	0
  2960  000E44  6F92               	movwf	efgtoa@ne& (0+255),b
  2961  000E46                     l243:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  2965  000E46  0E00               	movlw	0
  2966  000E48  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  2967  000E4A  0E00               	movlw	0
  2968  000E4C  6F8E               	movwf	efgtoa@pp& (0+255),b
  2969                           
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  2971  000E4E  0E00               	movlw	0
  2972  000E50  6F8D               	movwf	(efgtoa@t+1)& (0+255),b
  2973  000E52  0E00               	movlw	0
  2974  000E54  6F8C               	movwf	efgtoa@t& (0+255),b
  2975                           
  2976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  2977  000E56  0E00               	movlw	0
  2978  000E58  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  2979  000E5A  0E00               	movlw	0
  2980  000E5C  6FA6               	movwf	efgtoa@i& (0+255),b
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  2983  000E5E  D0C7               	goto	l5564
  2984  000E60                     l5516:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  2988  000E60  C09E  F027         	movff	efgtoa@h,___fldiv@b
  2989  000E64  C09F  F028         	movff	efgtoa@h+1,___fldiv@b+1
  2990  000E68  C0A0  F029         	movff	efgtoa@h+2,___fldiv@b+2
  2991  000E6C  C0A1  F02A         	movff	efgtoa@h+3,___fldiv@b+3
  2992  000E70  C0B0  F02B         	movff	efgtoa@u,___fldiv@a
  2993  000E74  C0B1  F02C         	movff	efgtoa@u+1,___fldiv@a+1
  2994  000E78  C0B2  F02D         	movff	efgtoa@u+2,___fldiv@a+2
  2995  000E7C  C0B3  F02E         	movff	efgtoa@u+3,___fldiv@a+3
  2996  000E80  ECDA  F00D         	call	___fldiv	;wreg free
  2997  000E84  C027  F040         	movff	?___fldiv,floorf@x
  2998  000E88  C028  F041         	movff	?___fldiv+1,floorf@x+1
  2999  000E8C  C029  F042         	movff	?___fldiv+2,floorf@x+2
  3000  000E90  C02A  F043         	movff	?___fldiv+3,floorf@x+3
  3001  000E94  EC1E  F00F         	call	_floorf	;wreg free
  3002  000E98  C040  F0A2         	movff	?_floorf,efgtoa@l
  3003  000E9C  C041  F0A3         	movff	?_floorf+1,efgtoa@l+1
  3004  000EA0  C042  F0A4         	movff	?_floorf+2,efgtoa@l+2
  3005  000EA4  C043  F0A5         	movff	?_floorf+3,efgtoa@l+3
  3006                           
  3007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3008  000EA8  C0A2  F00E         	movff	efgtoa@l,___fltol@f1
  3009  000EAC  C0A3  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  3010  000EB0  C0A4  F010         	movff	efgtoa@l+2,___fltol@f1+2
  3011  000EB4  C0A5  F011         	movff	efgtoa@l+3,___fltol@f1+3
  3012  000EB8  EC25  F016         	call	___fltol	;wreg free
  3013  000EBC  C00E  F094         	movff	?___fltol,efgtoa@d
  3014  000EC0  C00F  F095         	movff	?___fltol+1,efgtoa@d+1
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3017  000EC4  B84E               	btfsc	_flags,4,c
  3018  000EC6  D00D               	goto	l5528
  3019  000EC8  0100               	movlb	0	; () banked
  3020  000ECA  5194               	movf	efgtoa@d& (0+255),w,b
  3021  000ECC  1195               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3022  000ECE  A4D8               	btfss	status,2,c
  3023  000ED0  D008               	goto	l5528
  3024                           
  3025                           ; BSR set to: 0
  3026  000ED2  0E67               	movlw	103
  3027  000ED4  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3028  000ED6  B4D8               	btfsc	status,2,c
  3029                           
  3030                           ; BSR set to: 0
  3031  000ED8  AF93               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3032  000EDA  D003               	goto	l5528
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3036  000EDC  4B8C               	infsnz	efgtoa@t& (0+255),f,b
  3037  000EDE  2B8D               	incf	(efgtoa@t+1)& (0+255),f,b
  3038                           
  3039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3040  000EE0  D03A               	goto	l5556
  3041  000EE2                     l5528:
  3042                           
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3044  000EE2  0100               	movlb	0	; () banked
  3045  000EE4  518E               	movf	efgtoa@pp& (0+255),w,b
  3046  000EE6  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3047  000EE8  B4D8               	btfsc	status,2,c
  3048                           
  3049                           ; BSR set to: 0
  3050  000EEA  AF93               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3051  000EEC  D022               	goto	l5548
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3055  000EEE  0E82               	movlw	low _dbuf
  3056  000EF0  25AE               	addwf	efgtoa@n& (0+255),w,b
  3057  000EF2  6ED9               	movwf	fsr2l,c
  3058  000EF4  0E01               	movlw	high _dbuf
  3059  000EF6  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3060  000EF8  6EDA               	movwf	fsr2h,c
  3061  000EFA  0E2E               	movlw	46
  3062  000EFC  6EDF               	movwf	indf2,c
  3063                           
  3064                           ; BSR set to: 0
  3065  000EFE  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3066  000F00  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3070  000F02  079B               	decf	efgtoa@w& (0+255),f,b
  3071  000F04  A0D8               	btfss	status,0,c
  3072  000F06  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3076  000F08  0E00               	movlw	0
  3077  000F0A  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  3078  000F0C  0E01               	movlw	1
  3079  000F0E  6F8E               	movwf	efgtoa@pp& (0+255),b
  3080  000F10  D010               	goto	l5548
  3081  000F12                     l5540:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3085  000F12  0E82               	movlw	low _dbuf
  3086  000F14  25AE               	addwf	efgtoa@n& (0+255),w,b
  3087  000F16  6ED9               	movwf	fsr2l,c
  3088  000F18  0E01               	movlw	high _dbuf
  3089  000F1A  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3090  000F1C  6EDA               	movwf	fsr2h,c
  3091  000F1E  0E30               	movlw	48
  3092  000F20  6EDF               	movwf	indf2,c
  3093                           
  3094                           ; BSR set to: 0
  3095  000F22  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3096  000F24  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3100  000F26  079B               	decf	efgtoa@w& (0+255),f,b
  3101  000F28  A0D8               	btfss	status,0,c
  3102  000F2A  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3106  000F2C  078C               	decf	efgtoa@t& (0+255),f,b
  3107  000F2E  A0D8               	btfss	status,0,c
  3108  000F30  078D               	decf	(efgtoa@t+1)& (0+255),f,b
  3109  000F32                     l5548:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3113  000F32  518C               	movf	efgtoa@t& (0+255),w,b
  3114  000F34  118D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3115  000F36  A4D8               	btfss	status,2,c
  3116  000F38  D7EC               	goto	l5540
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3120  000F3A  0E82               	movlw	low _dbuf
  3121  000F3C  25AE               	addwf	efgtoa@n& (0+255),w,b
  3122  000F3E  6ED9               	movwf	fsr2l,c
  3123  000F40  0E01               	movlw	high _dbuf
  3124  000F42  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3125  000F44  6EDA               	movwf	fsr2h,c
  3126  000F46  5194               	movf	efgtoa@d& (0+255),w,b
  3127  000F48  0F30               	addlw	48
  3128  000F4A  6EDF               	movwf	indf2,c
  3129                           
  3130                           ; BSR set to: 0
  3131  000F4C  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3132  000F4E  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3136  000F50  079B               	decf	efgtoa@w& (0+255),f,b
  3137  000F52  A0D8               	btfss	status,0,c
  3138  000F54  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3139  000F56                     l5556:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3143  000F56  C09E  F027         	movff	efgtoa@h,___flsub@b
  3144  000F5A  C09F  F028         	movff	efgtoa@h+1,___flsub@b+1
  3145  000F5E  C0A0  F029         	movff	efgtoa@h+2,___flsub@b+2
  3146  000F62  C0A1  F02A         	movff	efgtoa@h+3,___flsub@b+3
  3147  000F66  C0B0  F012         	movff	efgtoa@u,___flmul@a
  3148  000F6A  C0B1  F013         	movff	efgtoa@u+1,___flmul@a+1
  3149  000F6E  C0B2  F014         	movff	efgtoa@u+2,___flmul@a+2
  3150  000F72  C0B3  F015         	movff	efgtoa@u+3,___flmul@a+3
  3151  000F76  C0A2  F00E         	movff	efgtoa@l,___flmul@b
  3152  000F7A  C0A3  F00F         	movff	efgtoa@l+1,___flmul@b+1
  3153  000F7E  C0A4  F010         	movff	efgtoa@l+2,___flmul@b+2
  3154  000F82  C0A5  F011         	movff	efgtoa@l+3,___flmul@b+3
  3155  000F86  ECAB  F00A         	call	___flmul	;wreg free
  3156  000F8A  C00E  F02B         	movff	?___flmul,___flsub@a
  3157  000F8E  C00F  F02C         	movff	?___flmul+1,___flsub@a+1
  3158  000F92  C010  F02D         	movff	?___flmul+2,___flsub@a+2
  3159  000F96  C011  F02E         	movff	?___flmul+3,___flsub@a+3
  3160  000F9A  EC81  F019         	call	___flsub	;wreg free
  3161  000F9E  C027  F09E         	movff	?___flsub,efgtoa@h
  3162  000FA2  C028  F09F         	movff	?___flsub+1,efgtoa@h+1
  3163  000FA6  C029  F0A0         	movff	?___flsub+2,efgtoa@h+2
  3164  000FAA  C02A  F0A1         	movff	?___flsub+3,efgtoa@h+3
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3167  000FAE  C0B0  F027         	movff	efgtoa@u,___fldiv@b
  3168  000FB2  C0B1  F028         	movff	efgtoa@u+1,___fldiv@b+1
  3169  000FB6  C0B2  F029         	movff	efgtoa@u+2,___fldiv@b+2
  3170  000FBA  C0B3  F02A         	movff	efgtoa@u+3,___fldiv@b+3
  3171  000FBE  0E00               	movlw	0
  3172  000FC0  6E2B               	movwf	___fldiv@a,c
  3173  000FC2  0E00               	movlw	0
  3174  000FC4  6E2C               	movwf	___fldiv@a+1,c
  3175  000FC6  0E20               	movlw	32
  3176  000FC8  6E2D               	movwf	___fldiv@a+2,c
  3177  000FCA  0E41               	movlw	65
  3178  000FCC  6E2E               	movwf	___fldiv@a+3,c
  3179  000FCE  ECDA  F00D         	call	___fldiv	;wreg free
  3180  000FD2  C027  F0B0         	movff	?___fldiv,efgtoa@u
  3181  000FD6  C028  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  3182  000FDA  C029  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  3183  000FDE  C02A  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  3184                           
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3186  000FE2  0100               	movlb	0	; () banked
  3187  000FE4  0792               	decf	efgtoa@ne& (0+255),f,b
  3188  000FE6  A0D8               	btfss	status,0,c
  3189  000FE8  0793               	decf	(efgtoa@ne+1)& (0+255),f,b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3193  000FEA  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  3194  000FEC  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  3195  000FEE                     l5564:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3199  000FEE  5190               	movf	efgtoa@m& (0+255),w,b
  3200  000FF0  5DA6               	subwf	efgtoa@i& (0+255),w,b
  3201  000FF2  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  3202  000FF4  0A80               	xorlw	128
  3203  000FF6  6F77               	movwf	??_efgtoa& (0+255),b
  3204  000FF8  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  3205  000FFA  0A80               	xorlw	128
  3206  000FFC  5977               	subwfb	??_efgtoa& (0+255),w,b
  3207  000FFE  B0D8               	btfsc	status,0,c
  3208  001000  D008               	goto	u7050
  3209                           
  3210                           ; BSR set to: 0
  3211  001002  BFAF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3212  001004  D72D               	goto	l5516
  3213  001006  51AF               	movf	(efgtoa@n+1)& (0+255),w,b
  3214  001008  E104               	bnz	u7050
  3215  00100A  0E4B               	movlw	75
  3216  00100C  5DAE               	subwf	efgtoa@n& (0+255),w,b
  3217  00100E  A0D8               	btfss	status,0,c
  3218  001010  D727               	goto	l5516
  3219  001012                     u7050:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3223  001012  518E               	movf	efgtoa@pp& (0+255),w,b
  3224  001014  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3225  001016  B4D8               	btfsc	status,2,c
  3226                           
  3227                           ; BSR set to: 0
  3228  001018  A84E               	btfss	_flags,4,c
  3229  00101A  D00A               	goto	l5576
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3233  00101C  0E82               	movlw	low _dbuf
  3234  00101E  25AE               	addwf	efgtoa@n& (0+255),w,b
  3235  001020  6ED9               	movwf	fsr2l,c
  3236  001022  0E01               	movlw	high _dbuf
  3237  001024  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3238  001026  6EDA               	movwf	fsr2h,c
  3239  001028  0E2E               	movlw	46
  3240  00102A  6EDF               	movwf	indf2,c
  3241                           
  3242                           ; BSR set to: 0
  3243  00102C  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3244  00102E  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3245  001030                     l5576:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3249  001030  0E82               	movlw	low _dbuf
  3250  001032  25AE               	addwf	efgtoa@n& (0+255),w,b
  3251  001034  6ED9               	movwf	fsr2l,c
  3252  001036  0E01               	movlw	high _dbuf
  3253  001038  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3254  00103A  6EDA               	movwf	fsr2h,c
  3255  00103C  0E00               	movlw	0
  3256  00103E  6EDF               	movwf	indf2,c
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3260  001040  0E65               	movlw	101
  3261  001042  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3262  001044  A4D8               	btfss	status,2,c
  3263  001046  D47E               	goto	l5388
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3267  001048  0E00               	movlw	0
  3268  00104A  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  3269  00104C  0E4F               	movlw	79
  3270  00104E  6FA6               	movwf	efgtoa@i& (0+255),b
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3274  001050  0E82               	movlw	low _dbuf
  3275  001052  25A6               	addwf	efgtoa@i& (0+255),w,b
  3276  001054  6ED9               	movwf	fsr2l,c
  3277  001056  0E01               	movlw	high _dbuf
  3278  001058  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3279  00105A  6EDA               	movwf	fsr2h,c
  3280  00105C  0E00               	movlw	0
  3281  00105E  6EDF               	movwf	indf2,c
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3285  001060  0E00               	movlw	0
  3286  001062  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3287  001064  0E00               	movlw	0
  3288  001066  6F96               	movwf	efgtoa@sign& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3292  001068  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  3293  00106A  D008               	goto	l5592
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3297  00106C  0E00               	movlw	0
  3298  00106E  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3299  001070  0E01               	movlw	1
  3300  001072  6F96               	movwf	efgtoa@sign& (0+255),b
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3304  001074  6DAC               	negf	efgtoa@e& (0+255),b
  3305  001076  1FAD               	comf	(efgtoa@e+1)& (0+255),f,b
  3306  001078  B0D8               	btfsc	status,0,c
  3307  00107A  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  3308  00107C                     l5592:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3312  00107C  0E00               	movlw	0
  3313  00107E  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  3314  001080  0E02               	movlw	2
  3315  001082  6F98               	movwf	efgtoa@p& (0+255),b
  3316                           
  3317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3318  001084  D02B               	goto	l5604
  3319  001086                     l5594:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3323  001086  07A6               	decf	efgtoa@i& (0+255),f,b
  3324  001088  A0D8               	btfss	status,0,c
  3325  00108A  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3329  00108C  0E82               	movlw	low _dbuf
  3330  00108E  25A6               	addwf	efgtoa@i& (0+255),w,b
  3331  001090  6ED9               	movwf	fsr2l,c
  3332  001092  0E01               	movlw	high _dbuf
  3333  001094  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3334  001096  6EDA               	movwf	fsr2h,c
  3335  001098  C0AC  F00E         	movff	efgtoa@e,___awmod@dividend
  3336  00109C  C0AD  F00F         	movff	efgtoa@e+1,___awmod@dividend+1
  3337  0010A0  0E00               	movlw	0
  3338  0010A2  6E11               	movwf	___awmod@divisor+1,c
  3339  0010A4  0E0A               	movlw	10
  3340  0010A6  6E10               	movwf	___awmod@divisor,c
  3341  0010A8  EC6A  F018         	call	___awmod	;wreg free
  3342  0010AC  500E               	movf	?___awmod,w,c
  3343  0010AE  0F30               	addlw	48
  3344  0010B0  6EDF               	movwf	indf2,c
  3345                           
  3346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3347  0010B2  C0AC  F00E         	movff	efgtoa@e,___awdiv@dividend
  3348  0010B6  C0AD  F00F         	movff	efgtoa@e+1,___awdiv@dividend+1
  3349  0010BA  0E00               	movlw	0
  3350  0010BC  6E11               	movwf	___awdiv@divisor+1,c
  3351  0010BE  0E0A               	movlw	10
  3352  0010C0  6E10               	movwf	___awdiv@divisor,c
  3353  0010C2  ECB3  F017         	call	___awdiv	;wreg free
  3354  0010C6  C00E  F0AC         	movff	?___awdiv,efgtoa@e
  3355  0010CA  C00F  F0AD         	movff	?___awdiv+1,efgtoa@e+1
  3356                           
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3358  0010CE  0100               	movlb	0	; () banked
  3359  0010D0  0798               	decf	efgtoa@p& (0+255),f,b
  3360  0010D2  A0D8               	btfss	status,0,c
  3361  0010D4  0799               	decf	(efgtoa@p+1)& (0+255),f,b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3365  0010D6  079B               	decf	efgtoa@w& (0+255),f,b
  3366  0010D8  A0D8               	btfss	status,0,c
  3367  0010DA  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3368  0010DC                     l5604:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3372  0010DC  51AC               	movf	efgtoa@e& (0+255),w,b
  3373  0010DE  11AD               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3374  0010E0  A4D8               	btfss	status,2,c
  3375  0010E2  D7D1               	goto	l5594
  3376                           
  3377                           ; BSR set to: 0
  3378  0010E4  BF99               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3379  0010E6  D005               	goto	u7110
  3380  0010E8  5199               	movf	(efgtoa@p+1)& (0+255),w,b
  3381  0010EA  E1CD               	bnz	l5594
  3382  0010EC  0598               	decf	efgtoa@p& (0+255),w,b
  3383  0010EE  B0D8               	btfsc	status,0,c
  3384  0010F0  D7CA               	goto	l5594
  3385  0010F2                     u7110:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3389  0010F2  07A6               	decf	efgtoa@i& (0+255),f,b
  3390  0010F4  A0D8               	btfss	status,0,c
  3391  0010F6  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3395  0010F8  5196               	movf	efgtoa@sign& (0+255),w,b
  3396  0010FA  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3397  0010FC  A4D8               	btfss	status,2,c
  3398  0010FE  D004               	goto	l5614
  3399                           
  3400                           ; BSR set to: 0
  3401  001100  0E00               	movlw	0
  3402  001102  6F87               	movwf	(_efgtoa$732+1)& (0+255),b
  3403  001104  0E2B               	movlw	43
  3404  001106  D003               	goto	L4
  3405  001108                     l5614:
  3406                           
  3407                           ; BSR set to: 0
  3408  001108  0E00               	movlw	0
  3409  00110A  6F87               	movwf	(_efgtoa$732+1)& (0+255),b
  3410  00110C  0E2D               	movlw	45
  3411  00110E                     L4:
  3412  00110E  6F86               	movwf	_efgtoa$732& (0+255),b
  3413                           
  3414                           ; BSR set to: 0
  3415  001110  0E82               	movlw	low _dbuf
  3416  001112  25A6               	addwf	efgtoa@i& (0+255),w,b
  3417  001114  6ED9               	movwf	fsr2l,c
  3418  001116  0E01               	movlw	high _dbuf
  3419  001118  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3420  00111A  6EDA               	movwf	fsr2h,c
  3421  00111C  C086  FFDF         	movff	_efgtoa$732,indf2
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3425  001120  079B               	decf	efgtoa@w& (0+255),f,b
  3426  001122  A0D8               	btfss	status,0,c
  3427  001124  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3431  001126  07A6               	decf	efgtoa@i& (0+255),f,b
  3432  001128  A0D8               	btfss	status,0,c
  3433  00112A  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3434                           
  3435                           ; BSR set to: 0
  3436  00112C  0EBF               	movlw	191
  3437  00112E  6F77               	movwf	??_efgtoa& (0+255),b
  3438  001130  0EFF               	movlw	255
  3439  001132  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3440  001134  5176               	movf	efgtoa@c& (0+255),w,b
  3441  001136  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3442  001138  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3443  00113A  5177               	movf	??_efgtoa& (0+255),w,b
  3444  00113C  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3445  00113E  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3446  001140  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3447  001142  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3448  001144  E106               	bnz	u7130
  3449  001146  0E1A               	movlw	26
  3450  001148  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3451  00114A  B0D8               	btfsc	status,0,c
  3452  00114C  D002               	goto	u7130
  3453  00114E  0E01               	movlw	1
  3454  001150  D001               	goto	u7140
  3455  001152                     u7130:
  3456  001152  0E00               	movlw	0
  3457  001154                     u7140:
  3458  001154  6F8A               	movwf	_efgtoa$734& (0+255),b
  3459  001156  6B8B               	clrf	(_efgtoa$734+1)& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462  001158  518A               	movf	_efgtoa$734& (0+255),w,b
  3463  00115A  118B               	iorwf	(_efgtoa$734+1)& (0+255),w,b
  3464  00115C  A4D8               	btfss	status,2,c
  3465  00115E  D004               	goto	l5630
  3466                           
  3467                           ; BSR set to: 0
  3468  001160  0E00               	movlw	0
  3469  001162  6F89               	movwf	(_efgtoa$733+1)& (0+255),b
  3470  001164  0E65               	movlw	101
  3471  001166  D003               	goto	L5
  3472  001168                     l5630:
  3473                           
  3474                           ; BSR set to: 0
  3475  001168  0E00               	movlw	0
  3476  00116A  6F89               	movwf	(_efgtoa$733+1)& (0+255),b
  3477  00116C  0E45               	movlw	69
  3478  00116E                     L5:
  3479  00116E  6F88               	movwf	_efgtoa$733& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482  001170  0E82               	movlw	low _dbuf
  3483  001172  25A6               	addwf	efgtoa@i& (0+255),w,b
  3484  001174  6ED9               	movwf	fsr2l,c
  3485  001176  0E01               	movlw	high _dbuf
  3486  001178  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3487  00117A  6EDA               	movwf	fsr2h,c
  3488  00117C  C088  FFDF         	movff	_efgtoa$733,indf2
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3492  001180  079B               	decf	efgtoa@w& (0+255),f,b
  3493  001182  A0D8               	btfss	status,0,c
  3494  001184  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3498  001186  0E82               	movlw	low _dbuf
  3499  001188  25AE               	addwf	efgtoa@n& (0+255),w,b
  3500  00118A  6E0E               	movwf	strcpy@dest,c
  3501  00118C  0E01               	movlw	high _dbuf
  3502  00118E  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3503  001190  6E0F               	movwf	strcpy@dest+1,c
  3504  001192  0E82               	movlw	low _dbuf
  3505  001194  25A6               	addwf	efgtoa@i& (0+255),w,b
  3506  001196  6E10               	movwf	strcpy@src,c
  3507  001198  0E01               	movlw	high _dbuf
  3508  00119A  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3509  00119C  6E11               	movwf	strcpy@src+1,c
  3510  00119E  EC32  F019         	call	_strcpy	;wreg free
  3511  0011A2  EFA2  F004         	goto	l5388
  3512  0011A6                     __end_of_efgtoa:
  3513                           	opt callstack 0
  3514                           
  3515 ;; *************** function _tolower *****************
  3516 ;; Defined at:
  3517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  c               2   19[COMRAM] int 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2   19[COMRAM] int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         2       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        8 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    3
  3538 ;; This function calls:
  3539 ;;		_isupper
  3540 ;; This function is called by:
  3541 ;;		_efgtoa
  3542 ;;		_vfpfcnvrt
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text6
  3547  0032B6                     __ptext6:
  3548                           	opt callstack 0
  3549  0032B6                     _tolower:
  3550                           	opt callstack 24
  3551                           
  3552                           ;incstack = 0
  3553  0032B6  0EBF               	movlw	191
  3554  0032B8  6E16               	movwf	??_tolower& (0+255),c
  3555  0032BA  0EFF               	movlw	255
  3556  0032BC  6E17               	movwf	(??_tolower+1)& (0+255),c
  3557  0032BE  C014  F018         	movff	tolower@c,??_tolower+2
  3558  0032C2  C015  F019         	movff	tolower@c+1,??_tolower+3
  3559  0032C6  5016               	movf	??_tolower,w,c
  3560  0032C8  2618               	addwf	??_tolower+2,f,c
  3561  0032CA  5017               	movf	??_tolower+1,w,c
  3562  0032CC  2219               	addwfc	??_tolower+3,f,c
  3563  0032CE  5019               	movf	??_tolower+3,w,c
  3564  0032D0  E106               	bnz	u5770
  3565  0032D2  0E1A               	movlw	26
  3566  0032D4  5C18               	subwf	??_tolower+2,w,c
  3567  0032D6  B0D8               	btfsc	status,0,c
  3568  0032D8  D002               	goto	u5770
  3569  0032DA  0E01               	movlw	1
  3570  0032DC  D001               	goto	u5780
  3571  0032DE                     u5770:
  3572  0032DE  0E00               	movlw	0
  3573  0032E0                     u5780:
  3574  0032E0  6E1A               	movwf	_tolower$1339,c
  3575  0032E2  6A1B               	clrf	_tolower$1339+1,c
  3576  0032E4  501A               	movf	_tolower$1339,w,c
  3577  0032E6  101B               	iorwf	_tolower$1339+1,w,c
  3578  0032E8  B4D8               	btfsc	status,2,c
  3579  0032EA  D006               	goto	l1108
  3580  0032EC  0E20               	movlw	32
  3581  0032EE  1014               	iorwf	tolower@c,w,c
  3582  0032F0  6E14               	movwf	?_tolower,c
  3583  0032F2  5015               	movf	tolower@c+1,w,c
  3584  0032F4  6E15               	movwf	?_tolower+1,c
  3585  0032F6  0012               	return	
  3586  0032F8                     l1108:
  3587  0032F8  C014  F014         	movff	tolower@c,?_tolower
  3588  0032FC  C015  F015         	movff	tolower@c+1,?_tolower+1
  3589  003300  0012               	return		;funcret
  3590  003302                     __end_of_tolower:
  3591                           	opt callstack 0
  3592                           
  3593 ;; *************** function _isupper *****************
  3594 ;; Defined at:
  3595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  c               2   13[COMRAM] int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  2   13[COMRAM] int 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         2       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        6 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    2
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_efgtoa
  3620 ;;		_vfpfcnvrt
  3621 ;;		_tolower
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text7
  3626  0033F0                     __ptext7:
  3627                           	opt callstack 0
  3628  0033F0                     _isupper:
  3629                           	opt callstack 24
  3630                           
  3631                           ;incstack = 0
  3632  0033F0  0EBF               	movlw	191
  3633  0033F2  6E10               	movwf	??_isupper& (0+255),c
  3634  0033F4  0EFF               	movlw	255
  3635  0033F6  6E11               	movwf	(??_isupper+1)& (0+255),c
  3636  0033F8  C00E  F012         	movff	isupper@c,??_isupper+2
  3637  0033FC  C00F  F013         	movff	isupper@c+1,??_isupper+3
  3638  003400  5010               	movf	??_isupper,w,c
  3639  003402  2612               	addwf	??_isupper+2,f,c
  3640  003404  5011               	movf	??_isupper+1,w,c
  3641  003406  2213               	addwfc	??_isupper+3,f,c
  3642  003408  5013               	movf	??_isupper+3,w,c
  3643  00340A  E106               	bnz	u5230
  3644  00340C  0E1A               	movlw	26
  3645  00340E  5C12               	subwf	??_isupper+2,w,c
  3646  003410  B0D8               	btfsc	status,0,c
  3647  003412  D002               	goto	u5230
  3648  003414  0E01               	movlw	1
  3649  003416  D001               	goto	u5240
  3650  003418                     u5230:
  3651  003418  0E00               	movlw	0
  3652  00341A                     u5240:
  3653  00341A  6E0E               	movwf	?_isupper,c
  3654  00341C  6A0F               	clrf	?_isupper+1,c
  3655  00341E  0012               	return		;funcret
  3656  003420                     __end_of_isupper:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _strcpy *****************
  3660 ;; Defined at:
  3661 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  dest            2   13[COMRAM] PTR unsigned char 
  3664 ;;		 -> dbuf(80), 
  3665 ;;  src             2   15[COMRAM] PTR const unsigned char 
  3666 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3667 ;;		 -> dbuf(80), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  d               2   21[COMRAM] PTR unsigned char 
  3670 ;;		 -> dbuf(80), 
  3671 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3672 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3673 ;;		 -> dbuf(80), 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2   13[COMRAM] PTR unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         4       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3686 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:       10 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_efgtoa
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text8
  3698  003264                     __ptext8:
  3699                           	opt callstack 0
  3700  003264                     _strcpy:
  3701                           	opt callstack 24
  3702                           
  3703                           ;incstack = 0
  3704  003264  C010  F014         	movff	strcpy@src,strcpy@s
  3705  003268  C011  F015         	movff	strcpy@src+1,strcpy@s+1
  3706  00326C  C00E  F016         	movff	strcpy@dest,strcpy@d
  3707  003270  C00F  F017         	movff	strcpy@dest+1,strcpy@d+1
  3708  003274                     l4838:
  3709  003274  5014               	movf	strcpy@s,w,c
  3710  003276  6E12               	movwf	??_strcpy& (0+255),c
  3711  003278  5015               	movf	strcpy@s+1,w,c
  3712  00327A  6E13               	movwf	(??_strcpy+1)& (0+255),c
  3713  00327C  4A14               	infsnz	strcpy@s,f,c
  3714  00327E  2A15               	incf	strcpy@s+1,f,c
  3715  003280  C012  FFF6         	movff	??_strcpy,tblptrl
  3716  003284  C013  FFF7         	movff	??_strcpy+1,tblptrh
  3717  003288  6AF8               	clrf	tblptru,c
  3718  00328A  C016  FFD9         	movff	strcpy@d,fsr2l
  3719  00328E  C017  FFDA         	movff	strcpy@d+1,fsr2h
  3720  003292  4A16               	infsnz	strcpy@d,f,c
  3721  003294  2A17               	incf	strcpy@d+1,f,c
  3722  003296  0E07               	movlw	(high __ramtop+-1)
  3723  003298  64F7               	cpfsgt	tblptrh,c
  3724  00329A  D003               	bra	u5757
  3725  00329C  0008               	tblrd		*
  3726  00329E  50F5               	movf	tablat,w,c
  3727  0032A0  D005               	bra	u5750
  3728  0032A2                     u5757:
  3729  0032A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3730  0032A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3731  0032AA  50E7               	movf	indf1,w,c
  3732  0032AC                     u5750:
  3733  0032AC  6EDF               	movwf	indf2,c
  3734  0032AE  50DF               	movf	indf2,w,c
  3735  0032B0  B4D8               	btfsc	status,2,c
  3736  0032B2  0012               	return	
  3737  0032B4  D7DF               	goto	l4838
  3738  0032B6                     __end_of_strcpy:
  3739                           	opt callstack 0
  3740                           
  3741 ;; *************** function _pad *****************
  3742 ;; Defined at:
  3743 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3746 ;;		 -> sprintf@f(6), 
  3747 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3748 ;;		 -> dbuf(80), 
  3749 ;;  p               2   33[COMRAM] int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  w               2   38[COMRAM] int 
  3752 ;;  i               2   36[COMRAM] int 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   29[COMRAM] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3762 ;;      Params:         6       0       0       0       0       0       0       0       0
  3763 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3764 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3765 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3766 ;;Total ram usage:       11 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    5
  3769 ;; This function calls:
  3770 ;;		_fputc
  3771 ;;		_fputs
  3772 ;;		_strlen
  3773 ;; This function is called by:
  3774 ;;		_efgtoa
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text9
  3779  002E46                     __ptext9:
  3780                           	opt callstack 0
  3781  002E46                     _pad:
  3782                           	opt callstack 21
  3783                           
  3784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3785                           
  3786                           ;incstack = 0
  3787  002E46  A04E               	btfss	_flags,0,c
  3788  002E48  D00A               	goto	l4796
  3789                           
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3791  002E4A  C020  F017         	movff	pad@buf,fputs@s
  3792  002E4E  C021  F018         	movff	pad@buf+1,fputs@s+1
  3793  002E52  C01E  F019         	movff	pad@fp,fputs@fp
  3794  002E56  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3795  002E5A  ECC3  F019         	call	_fputs	;wreg free
  3796  002E5E                     l4796:
  3797                           
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3799  002E5E  BE23               	btfsc	pad@p+1,7,c
  3800  002E60  D005               	goto	l4800
  3801  002E62  C022  F027         	movff	pad@p,pad@w
  3802  002E66  C023  F028         	movff	pad@p+1,pad@w+1
  3803  002E6A  D004               	goto	l176
  3804  002E6C                     l4800:
  3805  002E6C  0E00               	movlw	0
  3806  002E6E  6E28               	movwf	pad@w+1,c
  3807  002E70  0E00               	movlw	0
  3808  002E72  6E27               	movwf	pad@w,c
  3809  002E74                     l176:
  3810                           
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3812  002E74  0E00               	movlw	0
  3813  002E76  6E26               	movwf	pad@i+1,c
  3814  002E78  0E00               	movlw	0
  3815  002E7A  6E25               	movwf	pad@i,c
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3818  002E7C  D00C               	goto	l4806
  3819  002E7E                     l4802:
  3820                           
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3822  002E7E  0E00               	movlw	0
  3823  002E80  6E0F               	movwf	fputc@c+1,c
  3824  002E82  0E20               	movlw	32
  3825  002E84  6E0E               	movwf	fputc@c,c
  3826  002E86  C01E  F010         	movff	pad@fp,fputc@fp
  3827  002E8A  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  3828  002E8E  ECD3  F016         	call	_fputc	;wreg free
  3829                           
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3831  002E92  4A25               	infsnz	pad@i,f,c
  3832  002E94  2A26               	incf	pad@i+1,f,c
  3833  002E96                     l4806:
  3834                           
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3836  002E96  5027               	movf	pad@w,w,c
  3837  002E98  5C25               	subwf	pad@i,w,c
  3838  002E9A  5026               	movf	pad@i+1,w,c
  3839  002E9C  0A80               	xorlw	128
  3840  002E9E  6E24               	movwf	??_pad& (0+255),c
  3841  002EA0  5028               	movf	pad@w+1,w,c
  3842  002EA2  0A80               	xorlw	128
  3843  002EA4  5824               	subwfb	??_pad& (0+255),w,c
  3844  002EA6  A0D8               	btfss	status,0,c
  3845  002EA8  D7EA               	goto	l4802
  3846                           
  3847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3848  002EAA  B04E               	btfsc	_flags,0,c
  3849  002EAC  D00A               	goto	l4810
  3850                           
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3852  002EAE  C020  F017         	movff	pad@buf,fputs@s
  3853  002EB2  C021  F018         	movff	pad@buf+1,fputs@s+1
  3854  002EB6  C01E  F019         	movff	pad@fp,fputs@fp
  3855  002EBA  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3856  002EBE  ECC3  F019         	call	_fputs	;wreg free
  3857  002EC2                     l4810:
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3860  002EC2  C020  F00E         	movff	pad@buf,strlen@s
  3861  002EC6  C021  F00F         	movff	pad@buf+1,strlen@s+1
  3862  002ECA  EC3F  F01A         	call	_strlen	;wreg free
  3863  002ECE  5027               	movf	pad@w,w,c
  3864  002ED0  240E               	addwf	?_strlen,w,c
  3865  002ED2  6E1E               	movwf	?_pad,c
  3866  002ED4  5028               	movf	pad@w+1,w,c
  3867  002ED6  200F               	addwfc	?_strlen+1,w,c
  3868  002ED8  6E1F               	movwf	?_pad+1,c
  3869  002EDA  0012               	return		;funcret
  3870  002EDC                     __end_of_pad:
  3871                           	opt callstack 0
  3872                           
  3873 ;; *************** function _strlen *****************
  3874 ;; Defined at:
  3875 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3878 ;;		 -> dbuf(80), 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  a               2   15[COMRAM] PTR const unsigned char 
  3881 ;;		 -> dbuf(80), 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  2   13[COMRAM] unsigned int 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         2       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        4 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_pad
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text10
  3906  00347E                     __ptext10:
  3907                           	opt callstack 0
  3908  00347E                     _strlen:
  3909                           	opt callstack 23
  3910                           
  3911                           ;incstack = 0
  3912  00347E  C00E  F010         	movff	strlen@s,strlen@a
  3913  003482  C00F  F011         	movff	strlen@s+1,strlen@a+1
  3914  003486  D002               	goto	l4580
  3915  003488                     l4578:
  3916  003488  4A0E               	infsnz	strlen@s,f,c
  3917  00348A  2A0F               	incf	strlen@s+1,f,c
  3918  00348C                     l4580:
  3919  00348C  C00E  FFD9         	movff	strlen@s,fsr2l
  3920  003490  C00F  FFDA         	movff	strlen@s+1,fsr2h
  3921  003494  50DF               	movf	indf2,w,c
  3922  003496  A4D8               	btfss	status,2,c
  3923  003498  D7F7               	goto	l4578
  3924  00349A  5010               	movf	strlen@a,w,c
  3925  00349C  5C0E               	subwf	strlen@s,w,c
  3926  00349E  6E0E               	movwf	?_strlen,c
  3927  0034A0  5011               	movf	strlen@a+1,w,c
  3928  0034A2  580F               	subwfb	strlen@s+1,w,c
  3929  0034A4  6E0F               	movwf	?_strlen+1,c
  3930  0034A6  0012               	return		;funcret
  3931  0034A8                     __end_of_strlen:
  3932                           	opt callstack 0
  3933                           
  3934 ;; *************** function _fputs *****************
  3935 ;; Defined at:
  3936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3939 ;;		 -> dbuf(80), 
  3940 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3941 ;;		 -> sprintf@f(6), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  i               2   27[COMRAM] int 
  3944 ;;  c               1   26[COMRAM] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  2   22[COMRAM] int 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3954 ;;      Params:         4       0       0       0       0       0       0       0       0
  3955 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3957 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3958 ;;Total ram usage:        7 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    4
  3961 ;; This function calls:
  3962 ;;		_fputc
  3963 ;; This function is called by:
  3964 ;;		_pad
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text11
  3969  003386                     __ptext11:
  3970                           	opt callstack 0
  3971  003386                     _fputs:
  3972                           	opt callstack 21
  3973                           
  3974                           ;incstack = 0
  3975  003386  0E00               	movlw	0
  3976  003388  6E1D               	movwf	fputs@i+1,c
  3977  00338A  0E00               	movlw	0
  3978  00338C  6E1C               	movwf	fputs@i,c
  3979  00338E  D00B               	goto	l4574
  3980  003390                     l4570:
  3981  003390  C01B  F00E         	movff	fputs@c,fputc@c
  3982  003394  6A0F               	clrf	fputc@c+1,c
  3983  003396  C019  F010         	movff	fputs@fp,fputc@fp
  3984  00339A  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  3985  00339E  ECD3  F016         	call	_fputc	;wreg free
  3986  0033A2  4A1C               	infsnz	fputs@i,f,c
  3987  0033A4  2A1D               	incf	fputs@i+1,f,c
  3988  0033A6                     l4574:
  3989  0033A6  501C               	movf	fputs@i,w,c
  3990  0033A8  2417               	addwf	fputs@s,w,c
  3991  0033AA  6ED9               	movwf	fsr2l,c
  3992  0033AC  501D               	movf	fputs@i+1,w,c
  3993  0033AE  2018               	addwfc	fputs@s+1,w,c
  3994  0033B0  6EDA               	movwf	fsr2h,c
  3995  0033B2  50DF               	movf	indf2,w,c
  3996  0033B4  6E1B               	movwf	fputs@c,c
  3997  0033B6  501B               	movf	fputs@c,w,c
  3998  0033B8  B4D8               	btfsc	status,2,c
  3999  0033BA  0012               	return	
  4000  0033BC  D7E9               	goto	l4570
  4001  0033BE                     __end_of_fputs:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function _fputc *****************
  4005 ;; Defined at:
  4006 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  c               2   13[COMRAM] int 
  4009 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4010 ;;		 -> sprintf@f(6), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2   13[COMRAM] int 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         4       0       0       0       0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4025 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:        9 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    3
  4029 ;; This function calls:
  4030 ;;		_putch
  4031 ;; This function is called by:
  4032 ;;		_pad
  4033 ;;		_vfpfcnvrt
  4034 ;;		_fputs
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text12
  4039  002DA6                     __ptext12:
  4040                           	opt callstack 0
  4041  002DA6                     _fputc:
  4042                           	opt callstack 24
  4043                           
  4044                           ;incstack = 0
  4045  002DA6  5010               	movf	fputc@fp,w,c
  4046  002DA8  1011               	iorwf	fputc@fp+1,w,c
  4047  002DAA  B4D8               	btfsc	status,2,c
  4048  002DAC  D004               	goto	u5180
  4049  002DAE  5010               	movf	fputc@fp,w,c
  4050  002DB0  1011               	iorwf	fputc@fp+1,w,c
  4051  002DB2  A4D8               	btfss	status,2,c
  4052  002DB4  D004               	goto	l4560
  4053  002DB6                     u5180:
  4054  002DB6  500E               	movf	fputc@c,w,c
  4055  002DB8  EC75  F01A         	call	_putch
  4056  002DBC  0012               	return	
  4057  002DBE                     l4560:
  4058  002DBE  EE20 F004          	lfsr	2,4
  4059  002DC2  5010               	movf	fputc@fp,w,c
  4060  002DC4  26D9               	addwf	fsr2l,f,c
  4061  002DC6  5011               	movf	fputc@fp+1,w,c
  4062  002DC8  22DA               	addwfc	fsr2h,f,c
  4063  002DCA  50DE               	movf	postinc2,w,c
  4064  002DCC  10DE               	iorwf	postinc2,w,c
  4065  002DCE  B4D8               	btfsc	status,2,c
  4066  002DD0  D016               	goto	u5200
  4067  002DD2  EE20 F004          	lfsr	2,4
  4068  002DD6  5010               	movf	fputc@fp,w,c
  4069  002DD8  26D9               	addwf	fsr2l,f,c
  4070  002DDA  5011               	movf	fputc@fp+1,w,c
  4071  002DDC  22DA               	addwfc	fsr2h,f,c
  4072  002DDE  EE10 F002          	lfsr	1,2
  4073  002DE2  5010               	movf	fputc@fp,w,c
  4074  002DE4  26E1               	addwf	fsr1l,f,c
  4075  002DE6  5011               	movf	fputc@fp+1,w,c
  4076  002DE8  22E2               	addwfc	fsr1h,f,c
  4077  002DEA  50DE               	movf	postinc2,w,c
  4078  002DEC  5CE6               	subwf	postinc1,w,c
  4079  002DEE  50E6               	movf	postinc1,w,c
  4080  002DF0  0A80               	xorlw	128
  4081  002DF2  6E16               	movwf	(??_fputc+4)& (0+255),c
  4082  002DF4  50DE               	movf	postinc2,w,c
  4083  002DF6  0A80               	xorlw	128
  4084  002DF8  5816               	subwfb	(??_fputc+4)& (0+255),w,c
  4085  002DFA  B0D8               	btfsc	status,0,c
  4086  002DFC  0012               	return	
  4087  002DFE                     u5200:
  4088  002DFE  EE20 F002          	lfsr	2,2
  4089  002E02  5010               	movf	fputc@fp,w,c
  4090  002E04  26D9               	addwf	fsr2l,f,c
  4091  002E06  5011               	movf	fputc@fp+1,w,c
  4092  002E08  22DA               	addwfc	fsr2h,f,c
  4093  002E0A  CFDE F012          	movff	postinc2,??_fputc
  4094  002E0E  CFDD F013          	movff	postdec2,??_fputc+1
  4095  002E12  C010  FFD9         	movff	fputc@fp,fsr2l
  4096  002E16  C011  FFDA         	movff	fputc@fp+1,fsr2h
  4097  002E1A  CFDE F014          	movff	postinc2,??_fputc+2
  4098  002E1E  CFDD F015          	movff	postdec2,??_fputc+3
  4099  002E22  5012               	movf	??_fputc,w,c
  4100  002E24  2414               	addwf	??_fputc+2,w,c
  4101  002E26  6ED9               	movwf	fsr2l,c
  4102  002E28  5013               	movf	??_fputc+1,w,c
  4103  002E2A  2015               	addwfc	??_fputc+3,w,c
  4104  002E2C  6EDA               	movwf	fsr2h,c
  4105  002E2E  C00E  FFDF         	movff	fputc@c,indf2
  4106  002E32  EE20 F002          	lfsr	2,2
  4107  002E36  5010               	movf	fputc@fp,w,c
  4108  002E38  26D9               	addwf	fsr2l,f,c
  4109  002E3A  5011               	movf	fputc@fp+1,w,c
  4110  002E3C  22DA               	addwfc	fsr2h,f,c
  4111  002E3E  2ADE               	incf	postinc2,f,c
  4112  002E40  0E00               	movlw	0
  4113  002E42  22DD               	addwfc	postdec2,f,c
  4114  002E44  0012               	return		;funcret
  4115  002E46                     __end_of_fputc:
  4116                           	opt callstack 0
  4117                           
  4118 ;; *************** function _putch *****************
  4119 ;; Defined at:
  4120 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  c               1    wreg     unsigned char 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  c               1    0[COMRAM] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    2
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_fputc
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text13
  4149  0034EA                     __ptext13:
  4150                           	opt callstack 0
  4151  0034EA                     _putch:
  4152                           	opt callstack 24
  4153                           
  4154                           ;incstack = 0
  4155  0034EA  0012               	return		;funcret
  4156  0034EC                     __end_of_putch:
  4157                           	opt callstack 0
  4158                           
  4159 ;; *************** function _floorf *****************
  4160 ;; Defined at:
  4161 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  x               4   63[COMRAM] float 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  u               4   12[BANK0 ] struct .
  4166 ;;  m               4    6[BANK0 ] unsigned long 
  4167 ;;  e               2   10[BANK0 ] int 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  4   63[COMRAM] float 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4177 ;;      Params:         4       0       0       0       0       0       0       0       0
  4178 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4179 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4180 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4181 ;;Total ram usage:       20 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    2
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_efgtoa
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text14
  4192  001E3C                     __ptext14:
  4193                           	opt callstack 0
  4194  001E3C                     _floorf:
  4195                           	opt callstack 24
  4196                           
  4197                           ;incstack = 0
  4198  001E3C  C0DA  F06C         	movff	floorf@F524,floorf@u
  4199  001E40  C0DB  F06D         	movff	floorf@F524+1,floorf@u+1
  4200  001E44  C0DC  F06E         	movff	floorf@F524+2,floorf@u+2
  4201  001E48  C0DD  F06F         	movff	floorf@F524+3,floorf@u+3
  4202  001E4C  C040  F06C         	movff	floorf@x,floorf@u
  4203  001E50  C041  F06D         	movff	floorf@x+1,floorf@u+1
  4204  001E54  C042  F06E         	movff	floorf@x+2,floorf@u+2
  4205  001E58  C043  F06F         	movff	floorf@x+3,floorf@u+3
  4206  001E5C  0E81               	movlw	129
  4207  001E5E  0100               	movlb	0	; () banked
  4208  001E60  6F60               	movwf	??_floorf& (0+255),b
  4209  001E62  0EFF               	movlw	255
  4210  001E64  6F61               	movwf	(??_floorf+1)& (0+255),b
  4211  001E66  C06C  F062         	movff	floorf@u,??_floorf+2
  4212  001E6A  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4213  001E6E  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4214  001E72  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4215  001E76  0E18               	movlw	24
  4216  001E78  D005               	goto	u5800
  4217  001E7A                     u5805:
  4218  001E7A  90D8               	bcf	status,0,c
  4219  001E7C  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4220  001E7E  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4221  001E80  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4222  001E82  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4223  001E84                     u5800:
  4224  001E84  2EE8               	decfsz	wreg,f,c
  4225  001E86  D7F9               	goto	u5805
  4226  001E88  5162               	movf	(??_floorf+2)& (0+255),w,b
  4227  001E8A  2560               	addwf	??_floorf& (0+255),w,b
  4228  001E8C  6F6A               	movwf	floorf@e& (0+255),b
  4229  001E8E  0E00               	movlw	0
  4230  001E90  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4231  001E92  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4232  001E94  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4233  001E96  D00F               	goto	l4856
  4234  001E98  516B               	movf	(floorf@e+1)& (0+255),w,b
  4235  001E9A  E104               	bnz	u5810
  4236  001E9C  0E17               	movlw	23
  4237  001E9E  5D6A               	subwf	floorf@e& (0+255),w,b
  4238  001EA0  A0D8               	btfss	status,0,c
  4239  001EA2  D009               	goto	l4856
  4240  001EA4                     u5810:
  4241                           
  4242                           ; BSR set to: 0
  4243  001EA4  C040  F040         	movff	floorf@x,?_floorf
  4244  001EA8  C041  F041         	movff	floorf@x+1,?_floorf+1
  4245  001EAC  C042  F042         	movff	floorf@x+2,?_floorf+2
  4246  001EB0  C043  F043         	movff	floorf@x+3,?_floorf+3
  4247  001EB4  0012               	return	
  4248  001EB6                     l4856:
  4249                           
  4250                           ; BSR set to: 0
  4251  001EB6  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4252  001EB8  D05F               	goto	l4866
  4253                           
  4254                           ; BSR set to: 0
  4255  001EBA  C06A  F060         	movff	floorf@e,??_floorf
  4256  001EBE  0EFF               	movlw	255
  4257  001EC0  6F61               	movwf	(??_floorf+1)& (0+255),b
  4258  001EC2  0EFF               	movlw	255
  4259  001EC4  6F62               	movwf	(??_floorf+2)& (0+255),b
  4260  001EC6  0E7F               	movlw	127
  4261  001EC8  6F63               	movwf	(??_floorf+3)& (0+255),b
  4262  001ECA  0E00               	movlw	0
  4263  001ECC  6F64               	movwf	(??_floorf+4)& (0+255),b
  4264  001ECE                     u5835:
  4265  001ECE  6760               	tstfsz	??_floorf& (0+255),b
  4266  001ED0  D001               	goto	u5836
  4267  001ED2  D007               	goto	u5837
  4268  001ED4                     u5836:
  4269  001ED4  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4270  001ED6  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4271  001ED8  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4272  001EDA  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4273  001EDC  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4274  001EDE  2F60               	decfsz	??_floorf& (0+255),f,b
  4275  001EE0  D7F6               	goto	u5835
  4276  001EE2                     u5837:
  4277  001EE2  C061  F066         	movff	??_floorf+1,floorf@m
  4278  001EE6  C062  F067         	movff	??_floorf+2,floorf@m+1
  4279  001EEA  C063  F068         	movff	??_floorf+3,floorf@m+2
  4280  001EEE  C064  F069         	movff	??_floorf+4,floorf@m+3
  4281  001EF2  0100               	movlb	0	; () banked
  4282  001EF4  5166               	movf	floorf@m& (0+255),w,b
  4283  001EF6  156C               	andwf	floorf@u& (0+255),w,b
  4284  001EF8  6F60               	movwf	??_floorf& (0+255),b
  4285  001EFA  5167               	movf	(floorf@m+1)& (0+255),w,b
  4286  001EFC  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4287  001EFE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4288  001F00  5168               	movf	(floorf@m+2)& (0+255),w,b
  4289  001F02  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4290  001F04  6F62               	movwf	(??_floorf+2)& (0+255),b
  4291  001F06  5169               	movf	(floorf@m+3)& (0+255),w,b
  4292  001F08  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4293  001F0A  6F63               	movwf	(??_floorf+3)& (0+255),b
  4294  001F0C  5160               	movf	??_floorf& (0+255),w,b
  4295  001F0E  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4296  001F10  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4297  001F12  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4298  001F14  B4D8               	btfsc	status,2,c
  4299  001F16  D7C6               	goto	u5810
  4300                           
  4301                           ; BSR set to: 0
  4302  001F18  C06C  F060         	movff	floorf@u,??_floorf
  4303  001F1C  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4304  001F20  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4305  001F24  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4306  001F28  0E20               	movlw	32
  4307  001F2A  D005               	goto	u5850
  4308  001F2C                     u5855:
  4309  001F2C  90D8               	bcf	status,0,c
  4310  001F2E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4311  001F30  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4312  001F32  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4313  001F34  3360               	rrcf	??_floorf& (0+255),f,b
  4314  001F36                     u5850:
  4315  001F36  2EE8               	decfsz	wreg,f,c
  4316  001F38  D7F9               	goto	u5855
  4317  001F3A  5160               	movf	??_floorf& (0+255),w,b
  4318  001F3C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4319  001F3E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4320  001F40  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4321  001F42  B4D8               	btfsc	status,2,c
  4322  001F44  D008               	goto	l1028
  4323                           
  4324                           ; BSR set to: 0
  4325  001F46  5166               	movf	floorf@m& (0+255),w,b
  4326  001F48  276C               	addwf	floorf@u& (0+255),f,b
  4327  001F4A  5167               	movf	(floorf@m+1)& (0+255),w,b
  4328  001F4C  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4329  001F4E  5168               	movf	(floorf@m+2)& (0+255),w,b
  4330  001F50  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4331  001F52  5169               	movf	(floorf@m+3)& (0+255),w,b
  4332  001F54  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4333  001F56                     l1028:
  4334                           
  4335                           ; BSR set to: 0
  4336  001F56  1D66               	comf	floorf@m& (0+255),w,b
  4337  001F58  6F60               	movwf	??_floorf& (0+255),b
  4338  001F5A  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4339  001F5C  6F61               	movwf	(??_floorf+1)& (0+255),b
  4340  001F5E  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4341  001F60  6F62               	movwf	(??_floorf+2)& (0+255),b
  4342  001F62  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4343  001F64  6F63               	movwf	(??_floorf+3)& (0+255),b
  4344  001F66  5160               	movf	??_floorf& (0+255),w,b
  4345  001F68  176C               	andwf	floorf@u& (0+255),f,b
  4346  001F6A  5161               	movf	(??_floorf+1)& (0+255),w,b
  4347  001F6C  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4348  001F6E  5162               	movf	(??_floorf+2)& (0+255),w,b
  4349  001F70  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4350  001F72  5163               	movf	(??_floorf+3)& (0+255),w,b
  4351  001F74  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4352  001F76  D036               	goto	l4874
  4353  001F78                     l4866:
  4354                           
  4355                           ; BSR set to: 0
  4356  001F78  C06C  F060         	movff	floorf@u,??_floorf
  4357  001F7C  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4358  001F80  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4359  001F84  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4360  001F88  0E20               	movlw	32
  4361  001F8A  D005               	goto	u5870
  4362  001F8C                     u5875:
  4363  001F8C  90D8               	bcf	status,0,c
  4364  001F8E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4365  001F90  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4366  001F92  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4367  001F94  3360               	rrcf	??_floorf& (0+255),f,b
  4368  001F96                     u5870:
  4369  001F96  2EE8               	decfsz	wreg,f,c
  4370  001F98  D7F9               	goto	u5875
  4371  001F9A  5160               	movf	??_floorf& (0+255),w,b
  4372  001F9C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4373  001F9E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4374  001FA0  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4375  001FA2  A4D8               	btfss	status,2,c
  4376  001FA4  D008               	goto	l4870
  4377                           
  4378                           ; BSR set to: 0
  4379  001FA6  0E00               	movlw	0
  4380  001FA8  6F6C               	movwf	floorf@u& (0+255),b
  4381  001FAA  0E00               	movlw	0
  4382  001FAC  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4383  001FAE  0E00               	movlw	0
  4384  001FB0  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4385  001FB2  0E00               	movlw	0
  4386  001FB4  D016               	goto	L6
  4387  001FB6                     l4870:
  4388                           
  4389                           ; BSR set to: 0
  4390  001FB6  90D8               	bcf	status,0,c
  4391  001FB8  356C               	rlcf	floorf@u& (0+255),w,b
  4392  001FBA  6F60               	movwf	??_floorf& (0+255),b
  4393  001FBC  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4394  001FBE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4395  001FC0  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4396  001FC2  6F62               	movwf	(??_floorf+2)& (0+255),b
  4397  001FC4  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4398  001FC6  6F63               	movwf	(??_floorf+3)& (0+255),b
  4399  001FC8  5160               	movf	??_floorf& (0+255),w,b
  4400  001FCA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4401  001FCC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4402  001FCE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4403  001FD0  B4D8               	btfsc	status,2,c
  4404  001FD2  D008               	goto	l4874
  4405                           
  4406                           ; BSR set to: 0
  4407  001FD4  0E00               	movlw	0
  4408  001FD6  6F6C               	movwf	floorf@u& (0+255),b
  4409  001FD8  0E00               	movlw	0
  4410  001FDA  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4411  001FDC  0E80               	movlw	128
  4412  001FDE  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4413  001FE0  0EBF               	movlw	191
  4414  001FE2                     L6:
  4415  001FE2  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4416  001FE4                     l4874:
  4417                           
  4418                           ; BSR set to: 0
  4419  001FE4  C06C  F040         	movff	floorf@u,?_floorf
  4420  001FE8  C06D  F041         	movff	floorf@u+1,?_floorf+1
  4421  001FEC  C06E  F042         	movff	floorf@u+2,?_floorf+2
  4422  001FF0  C06F  F043         	movff	floorf@u+3,?_floorf+3
  4423                           
  4424                           ; BSR set to: 0
  4425  001FF4  0012               	return		;funcret
  4426  001FF6                     __end_of_floorf:
  4427                           	opt callstack 0
  4428                           
  4429 ;; *************** function ___fpclassifyf *****************
  4430 ;; Defined at:
  4431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  x               4   13[COMRAM] float 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  u               4   23[COMRAM] struct .
  4436 ;;  e               2   21[COMRAM] int 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2   13[COMRAM] int 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4446 ;;      Params:         4       0       0       0       0       0       0       0       0
  4447 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4448 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4449 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4450 ;;Total ram usage:       14 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    2
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_efgtoa
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text15
  4461  002B7E                     __ptext15:
  4462                           	opt callstack 0
  4463  002B7E                     ___fpclassifyf:
  4464                           	opt callstack 24
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;incstack = 0
  4468  002B7E  C046  F018         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4469  002B82  C047  F019         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4470  002B86  C048  F01A         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4471  002B8A  C049  F01B         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4472  002B8E  C00E  F018         	movff	___fpclassifyf@x,___fpclassifyf@u
  4473  002B92  C00F  F019         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4474  002B96  C010  F01A         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4475  002B9A  C011  F01B         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4476  002B9E  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  4477  002BA2  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4478  002BA6  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4479  002BAA  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4480  002BAE  0E18               	movlw	24
  4481  002BB0  D005               	goto	u5680
  4482  002BB2                     u5685:
  4483  002BB2  90D8               	bcf	status,0,c
  4484  002BB4  3215               	rrcf	??___fpclassifyf+3,f,c
  4485  002BB6  3214               	rrcf	??___fpclassifyf+2,f,c
  4486  002BB8  3213               	rrcf	??___fpclassifyf+1,f,c
  4487  002BBA  3212               	rrcf	??___fpclassifyf,f,c
  4488  002BBC                     u5680:
  4489  002BBC  2EE8               	decfsz	wreg,f,c
  4490  002BBE  D7F9               	goto	u5685
  4491  002BC0  5012               	movf	??___fpclassifyf,w,c
  4492  002BC2  6E16               	movwf	___fpclassifyf@e,c
  4493  002BC4  6A17               	clrf	___fpclassifyf@e+1,c
  4494  002BC6  5016               	movf	___fpclassifyf@e,w,c
  4495  002BC8  1017               	iorwf	___fpclassifyf@e+1,w,c
  4496  002BCA  A4D8               	btfss	status,2,c
  4497  002BCC  D019               	goto	l4826
  4498  002BCE  90D8               	bcf	status,0,c
  4499  002BD0  3418               	rlcf	___fpclassifyf@u,w,c
  4500  002BD2  6E12               	movwf	??___fpclassifyf& (0+255),c
  4501  002BD4  3419               	rlcf	___fpclassifyf@u+1,w,c
  4502  002BD6  6E13               	movwf	(??___fpclassifyf+1)& (0+255),c
  4503  002BD8  341A               	rlcf	___fpclassifyf@u+2,w,c
  4504  002BDA  6E14               	movwf	(??___fpclassifyf+2)& (0+255),c
  4505  002BDC  341B               	rlcf	___fpclassifyf@u+3,w,c
  4506  002BDE  6E15               	movwf	(??___fpclassifyf+3)& (0+255),c
  4507  002BE0  5012               	movf	??___fpclassifyf,w,c
  4508  002BE2  1013               	iorwf	??___fpclassifyf+1,w,c
  4509  002BE4  1014               	iorwf	??___fpclassifyf+2,w,c
  4510  002BE6  1015               	iorwf	??___fpclassifyf+3,w,c
  4511  002BE8  A4D8               	btfss	status,2,c
  4512  002BEA  D005               	goto	l4822
  4513  002BEC  0E00               	movlw	0
  4514  002BEE  6E0F               	movwf	?___fpclassifyf+1,c
  4515  002BF0  0E02               	movlw	2
  4516  002BF2  6E0E               	movwf	?___fpclassifyf,c
  4517  002BF4  0012               	return	
  4518  002BF6                     l4822:
  4519  002BF6  0E00               	movlw	0
  4520  002BF8  6E0F               	movwf	?___fpclassifyf+1,c
  4521  002BFA  0E03               	movlw	3
  4522  002BFC  6E0E               	movwf	?___fpclassifyf,c
  4523  002BFE  0012               	return	
  4524  002C00                     l4826:
  4525  002C00  2816               	incf	___fpclassifyf@e,w,c
  4526  002C02  1017               	iorwf	___fpclassifyf@e+1,w,c
  4527  002C04  A4D8               	btfss	status,2,c
  4528  002C06  D01C               	goto	l4832
  4529  002C08  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  4530  002C0C  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4531  002C10  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4532  002C14  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4533  002C18  0E09               	movlw	9
  4534  002C1A                     u5725:
  4535  002C1A  90D8               	bcf	status,0,c
  4536  002C1C  3612               	rlcf	??___fpclassifyf,f,c
  4537  002C1E  3613               	rlcf	??___fpclassifyf+1,f,c
  4538  002C20  3614               	rlcf	??___fpclassifyf+2,f,c
  4539  002C22  3615               	rlcf	??___fpclassifyf+3,f,c
  4540  002C24  2EE8               	decfsz	wreg,f,c
  4541  002C26  D7F9               	goto	u5725
  4542  002C28  5012               	movf	??___fpclassifyf,w,c
  4543  002C2A  1013               	iorwf	??___fpclassifyf+1,w,c
  4544  002C2C  1014               	iorwf	??___fpclassifyf+2,w,c
  4545  002C2E  1015               	iorwf	??___fpclassifyf+3,w,c
  4546  002C30  A4D8               	btfss	status,2,c
  4547  002C32  D002               	goto	u5730
  4548  002C34  0E01               	movlw	1
  4549  002C36  D001               	goto	u5740
  4550  002C38                     u5730:
  4551  002C38  0E00               	movlw	0
  4552  002C3A                     u5740:
  4553  002C3A  6E0E               	movwf	?___fpclassifyf,c
  4554  002C3C  6A0F               	clrf	?___fpclassifyf+1,c
  4555  002C3E  0012               	return	
  4556  002C40                     l4832:
  4557  002C40  0E00               	movlw	0
  4558  002C42  6E0F               	movwf	?___fpclassifyf+1,c
  4559  002C44  0E04               	movlw	4
  4560  002C46  6E0E               	movwf	?___fpclassifyf,c
  4561  002C48  0012               	return		;funcret
  4562  002C4A                     __end_of___fpclassifyf:
  4563                           	opt callstack 0
  4564                           
  4565 ;; *************** function ___fltol *****************
  4566 ;; Defined at:
  4567 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  f1              4   13[COMRAM] int 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  exp1            1   22[COMRAM] unsigned char 
  4572 ;;  sign1           1   21[COMRAM] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  4   13[COMRAM] long 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         4       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4585 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:       10 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    2
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_efgtoa
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text16
  4597  002C4A                     __ptext16:
  4598                           	opt callstack 0
  4599  002C4A                     ___fltol:
  4600                           	opt callstack 24
  4601                           
  4602                           ;incstack = 0
  4603  002C4A  3410               	rlcf	___fltol@f1+2,w,c
  4604  002C4C  3411               	rlcf	___fltol@f1+3,w,c
  4605  002C4E  6E17               	movwf	___fltol@exp1,c
  4606  002C50  5017               	movf	___fltol@exp1,w,c
  4607  002C52  A4D8               	btfss	status,2,c
  4608  002C54  D009               	goto	l5294
  4609  002C56                     u6550:
  4610  002C56  0E00               	movlw	0
  4611  002C58  6E0E               	movwf	?___fltol,c
  4612  002C5A  0E00               	movlw	0
  4613  002C5C  6E0F               	movwf	?___fltol+1,c
  4614  002C5E  0E00               	movlw	0
  4615  002C60  6E10               	movwf	?___fltol+2,c
  4616  002C62  0E00               	movlw	0
  4617  002C64  6E11               	movwf	?___fltol+3,c
  4618  002C66  0012               	return	
  4619  002C68                     l5294:
  4620  002C68  C00E  F012         	movff	___fltol@f1,??___fltol
  4621  002C6C  C00F  F013         	movff	___fltol@f1+1,??___fltol+1
  4622  002C70  C010  F014         	movff	___fltol@f1+2,??___fltol+2
  4623  002C74  C011  F015         	movff	___fltol@f1+3,??___fltol+3
  4624  002C78  0E20               	movlw	32
  4625  002C7A  D005               	goto	u6560
  4626  002C7C                     u6565:
  4627  002C7C  90D8               	bcf	status,0,c
  4628  002C7E  3215               	rrcf	??___fltol+3,f,c
  4629  002C80  3214               	rrcf	??___fltol+2,f,c
  4630  002C82  3213               	rrcf	??___fltol+1,f,c
  4631  002C84  3212               	rrcf	??___fltol,f,c
  4632  002C86                     u6560:
  4633  002C86  2EE8               	decfsz	wreg,f,c
  4634  002C88  D7F9               	goto	u6565
  4635  002C8A  5012               	movf	??___fltol,w,c
  4636  002C8C  6E16               	movwf	___fltol@sign1,c
  4637  002C8E  8E10               	bsf	___fltol@f1+2,7,c
  4638  002C90  0EFF               	movlw	255
  4639  002C92  160E               	andwf	___fltol@f1,f,c
  4640  002C94  0EFF               	movlw	255
  4641  002C96  160F               	andwf	___fltol@f1+1,f,c
  4642  002C98  0EFF               	movlw	255
  4643  002C9A  1610               	andwf	___fltol@f1+2,f,c
  4644  002C9C  0E00               	movlw	0
  4645  002C9E  1611               	andwf	___fltol@f1+3,f,c
  4646  002CA0  0E96               	movlw	150
  4647  002CA2  5E17               	subwf	___fltol@exp1,f,c
  4648  002CA4  AE17               	btfss	___fltol@exp1,7,c
  4649  002CA6  D00D               	goto	l5314
  4650  002CA8  5017               	movf	___fltol@exp1,w,c
  4651  002CAA  0A80               	xorlw	128
  4652  002CAC  0F97               	addlw	151
  4653  002CAE  A0D8               	btfss	status,0,c
  4654  002CB0  D7D2               	goto	u6550
  4655  002CB2                     l5310:
  4656  002CB2  90D8               	bcf	status,0,c
  4657  002CB4  3211               	rrcf	___fltol@f1+3,f,c
  4658  002CB6  3210               	rrcf	___fltol@f1+2,f,c
  4659  002CB8  320F               	rrcf	___fltol@f1+1,f,c
  4660  002CBA  320E               	rrcf	___fltol@f1,f,c
  4661  002CBC  3E17               	incfsz	___fltol@exp1,f,c
  4662  002CBE  D7F9               	goto	l5310
  4663  002CC0  D00D               	goto	u6600
  4664  002CC2                     l5314:
  4665  002CC2  0E1F               	movlw	31
  4666  002CC4  6417               	cpfsgt	___fltol@exp1,c
  4667  002CC6  D007               	goto	l5322
  4668  002CC8  D7C6               	goto	u6550
  4669  002CCA                     l5320:
  4670  002CCA  90D8               	bcf	status,0,c
  4671  002CCC  360E               	rlcf	___fltol@f1,f,c
  4672  002CCE  360F               	rlcf	___fltol@f1+1,f,c
  4673  002CD0  3610               	rlcf	___fltol@f1+2,f,c
  4674  002CD2  3611               	rlcf	___fltol@f1+3,f,c
  4675  002CD4  0617               	decf	___fltol@exp1,f,c
  4676  002CD6                     l5322:
  4677  002CD6  5017               	movf	___fltol@exp1,w,c
  4678  002CD8  A4D8               	btfss	status,2,c
  4679  002CDA  D7F7               	goto	l5320
  4680  002CDC                     u6600:
  4681  002CDC  5016               	movf	___fltol@sign1,w,c
  4682  002CDE  B4D8               	btfsc	status,2,c
  4683  002CE0  D008               	goto	l5328
  4684  002CE2  1E11               	comf	___fltol@f1+3,f,c
  4685  002CE4  1E10               	comf	___fltol@f1+2,f,c
  4686  002CE6  1E0F               	comf	___fltol@f1+1,f,c
  4687  002CE8  6C0E               	negf	___fltol@f1,c
  4688  002CEA  0E00               	movlw	0
  4689  002CEC  220F               	addwfc	___fltol@f1+1,f,c
  4690  002CEE  2210               	addwfc	___fltol@f1+2,f,c
  4691  002CF0  2211               	addwfc	___fltol@f1+3,f,c
  4692  002CF2                     l5328:
  4693  002CF2  C00E  F00E         	movff	___fltol@f1,?___fltol
  4694  002CF6  C00F  F00F         	movff	___fltol@f1+1,?___fltol+1
  4695  002CFA  C010  F010         	movff	___fltol@f1+2,?___fltol+2
  4696  002CFE  C011  F011         	movff	___fltol@f1+3,?___fltol+3
  4697  002D02  0012               	return		;funcret
  4698  002D04                     __end_of___fltol:
  4699                           	opt callstack 0
  4700                           
  4701 ;; *************** function ___flsub *****************
  4702 ;; Defined at:
  4703 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  b               4   38[COMRAM] long 
  4706 ;;  a               4   42[COMRAM] long 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  4   38[COMRAM] long 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         8       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4721 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        8 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    3
  4725 ;; This function calls:
  4726 ;;		___fladd
  4727 ;; This function is called by:
  4728 ;;		_efgtoa
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text17
  4733  003302                     __ptext17:
  4734                           	opt callstack 0
  4735  003302                     ___flsub:
  4736                           	opt callstack 23
  4737                           
  4738                           ;incstack = 0
  4739  003302  0E00               	movlw	0
  4740  003304  1A2B               	xorwf	___flsub@a,f,c
  4741  003306  0E00               	movlw	0
  4742  003308  1A2C               	xorwf	___flsub@a+1,f,c
  4743  00330A  0E00               	movlw	0
  4744  00330C  1A2D               	xorwf	___flsub@a+2,f,c
  4745  00330E  0E80               	movlw	128
  4746  003310  1A2E               	xorwf	___flsub@a+3,f,c
  4747  003312  C027  F00E         	movff	___flsub@b,___fladd@b
  4748  003316  C028  F00F         	movff	___flsub@b+1,___fladd@b+1
  4749  00331A  C029  F010         	movff	___flsub@b+2,___fladd@b+2
  4750  00331E  C02A  F011         	movff	___flsub@b+3,___fladd@b+3
  4751  003322  C02B  F012         	movff	___flsub@a,___fladd@a
  4752  003326  C02C  F013         	movff	___flsub@a+1,___fladd@a+1
  4753  00332A  C02D  F014         	movff	___flsub@a+2,___fladd@a+2
  4754  00332E  C02E  F015         	movff	___flsub@a+3,___fladd@a+3
  4755  003332  EC54  F00C         	call	___fladd	;wreg free
  4756  003336  C00E  F027         	movff	?___fladd,?___flsub
  4757  00333A  C00F  F028         	movff	?___fladd+1,?___flsub+1
  4758  00333E  C010  F029         	movff	?___fladd+2,?___flsub+2
  4759  003342  C011  F02A         	movff	?___fladd+3,?___flsub+3
  4760  003346  0012               	return		;funcret
  4761  003348                     __end_of___flsub:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function ___fladd *****************
  4765 ;; Defined at:
  4766 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  b               4   13[COMRAM] long 
  4769 ;;  a               4   17[COMRAM] long 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  grs             1   28[COMRAM] unsigned char 
  4772 ;;  bexp            1   27[COMRAM] unsigned char 
  4773 ;;  aexp            1   26[COMRAM] unsigned char 
  4774 ;;  signs           1   25[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  4   13[COMRAM] unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4784 ;;      Params:         8       0       0       0       0       0       0       0       0
  4785 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4786 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4787 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4788 ;;Total ram usage:       16 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    2
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;;		_efgtoa
  4796 ;;		___flsub
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text18
  4801  0018A8                     __ptext18:
  4802                           	opt callstack 0
  4803  0018A8                     ___fladd:
  4804                           	opt callstack 23
  4805                           
  4806                           ;incstack = 0
  4807  0018A8  5011               	movf	___fladd@b+3,w,c
  4808  0018AA  0B80               	andlw	128
  4809  0018AC  6E1A               	movwf	___fladd@signs,c
  4810  0018AE  5011               	movf	___fladd@b+3,w,c
  4811  0018B0  2411               	addwf	___fladd@b+3,w,c
  4812  0018B2  6E1C               	movwf	___fladd@bexp,c
  4813  0018B4  BE10               	btfsc	___fladd@b+2,7,c
  4814  0018B6  801C               	bsf	___fladd@bexp,0,c
  4815  0018B8  501C               	movf	___fladd@bexp,w,c
  4816  0018BA  B4D8               	btfsc	status,2,c
  4817  0018BC  D00D               	goto	l4606
  4818  0018BE  281C               	incf	___fladd@bexp,w,c
  4819  0018C0  A4D8               	btfss	status,2,c
  4820  0018C2  D008               	goto	l4602
  4821  0018C4  0E00               	movlw	0
  4822  0018C6  6E0E               	movwf	___fladd@b,c
  4823  0018C8  0E00               	movlw	0
  4824  0018CA  6E0F               	movwf	___fladd@b+1,c
  4825  0018CC  0E00               	movlw	0
  4826  0018CE  6E10               	movwf	___fladd@b+2,c
  4827  0018D0  0E00               	movlw	0
  4828  0018D2  6E11               	movwf	___fladd@b+3,c
  4829  0018D4                     l4602:
  4830  0018D4  8E10               	bsf	___fladd@b+2,7,c
  4831  0018D6  D006               	goto	L7
  4832  0018D8                     l4606:
  4833  0018D8  0E00               	movlw	0
  4834  0018DA  6E0E               	movwf	___fladd@b,c
  4835  0018DC  0E00               	movlw	0
  4836  0018DE  6E0F               	movwf	___fladd@b+1,c
  4837  0018E0  0E00               	movlw	0
  4838  0018E2  6E10               	movwf	___fladd@b+2,c
  4839  0018E4                     L7:
  4840  0018E4  0E00               	movlw	0
  4841  0018E6  6E11               	movwf	___fladd@b+3,c
  4842  0018E8  5015               	movf	___fladd@a+3,w,c
  4843  0018EA  0B80               	andlw	128
  4844  0018EC  6E1B               	movwf	___fladd@aexp,c
  4845  0018EE  501A               	movf	___fladd@signs,w,c
  4846  0018F0  181B               	xorwf	___fladd@aexp,w,c
  4847  0018F2  A4D8               	btfss	status,2,c
  4848  0018F4  8C1A               	bsf	___fladd@signs,6,c
  4849  0018F6  5015               	movf	___fladd@a+3,w,c
  4850  0018F8  2415               	addwf	___fladd@a+3,w,c
  4851  0018FA  6E1B               	movwf	___fladd@aexp,c
  4852  0018FC  BE14               	btfsc	___fladd@a+2,7,c
  4853  0018FE  801B               	bsf	___fladd@aexp,0,c
  4854  001900  501B               	movf	___fladd@aexp,w,c
  4855  001902  B4D8               	btfsc	status,2,c
  4856  001904  D00D               	goto	l4630
  4857  001906  281B               	incf	___fladd@aexp,w,c
  4858  001908  A4D8               	btfss	status,2,c
  4859  00190A  D008               	goto	l4626
  4860  00190C  0E00               	movlw	0
  4861  00190E  6E12               	movwf	___fladd@a,c
  4862  001910  0E00               	movlw	0
  4863  001912  6E13               	movwf	___fladd@a+1,c
  4864  001914  0E00               	movlw	0
  4865  001916  6E14               	movwf	___fladd@a+2,c
  4866  001918  0E00               	movlw	0
  4867  00191A  6E15               	movwf	___fladd@a+3,c
  4868  00191C                     l4626:
  4869  00191C  8E14               	bsf	___fladd@a+2,7,c
  4870  00191E  D006               	goto	L8
  4871  001920                     l4630:
  4872  001920  0E00               	movlw	0
  4873  001922  6E12               	movwf	___fladd@a,c
  4874  001924  0E00               	movlw	0
  4875  001926  6E13               	movwf	___fladd@a+1,c
  4876  001928  0E00               	movlw	0
  4877  00192A  6E14               	movwf	___fladd@a+2,c
  4878  00192C                     L8:
  4879  00192C  0E00               	movlw	0
  4880  00192E  6E15               	movwf	___fladd@a+3,c
  4881  001930  501C               	movf	___fladd@bexp,w,c
  4882  001932  5C1B               	subwf	___fladd@aexp,w,c
  4883  001934  B0D8               	btfsc	status,0,c
  4884  001936  D022               	goto	l4668
  4885  001938  AC1A               	btfss	___fladd@signs,6,c
  4886  00193A  D002               	goto	l4638
  4887  00193C  0E80               	movlw	128
  4888  00193E  1A1A               	xorwf	___fladd@signs,f,c
  4889  001940                     l4638:
  4890  001940  C01C  F01D         	movff	___fladd@bexp,___fladd@grs
  4891  001944  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  4892  001948  C01D  F01B         	movff	___fladd@grs,___fladd@aexp
  4893  00194C  C00E  F01D         	movff	___fladd@b,___fladd@grs
  4894  001950  C012  F00E         	movff	___fladd@a,___fladd@b
  4895  001954  C01D  F012         	movff	___fladd@grs,___fladd@a
  4896  001958  C00F  F01D         	movff	___fladd@b+1,___fladd@grs
  4897  00195C  C013  F00F         	movff	___fladd@a+1,___fladd@b+1
  4898  001960  C01D  F013         	movff	___fladd@grs,___fladd@a+1
  4899  001964  C010  F01D         	movff	___fladd@b+2,___fladd@grs
  4900  001968  C014  F010         	movff	___fladd@a+2,___fladd@b+2
  4901  00196C  C01D  F014         	movff	___fladd@grs,___fladd@a+2
  4902  001970  C011  F01D         	movff	___fladd@b+3,___fladd@grs
  4903  001974  C015  F011         	movff	___fladd@a+3,___fladd@b+3
  4904  001978  C01D  F015         	movff	___fladd@grs,___fladd@a+3
  4905  00197C                     l4668:
  4906  00197C  0E00               	movlw	0
  4907  00197E  6E1D               	movwf	___fladd@grs,c
  4908  001980  501C               	movf	___fladd@bexp,w,c
  4909  001982  C01B  F016         	movff	___fladd@aexp,??___fladd
  4910  001986  6A17               	clrf	(??___fladd+1)& (0+255),c
  4911  001988  5E16               	subwf	??___fladd,f,c
  4912  00198A  0E00               	movlw	0
  4913  00198C  5A17               	subwfb	??___fladd+1,f,c
  4914  00198E  BE17               	btfsc	??___fladd+1,7,c
  4915  001990  D02C               	goto	l835
  4916  001992  5017               	movf	??___fladd+1,w,c
  4917  001994  E104               	bnz	u5340
  4918  001996  0E1A               	movlw	26
  4919  001998  5C16               	subwf	??___fladd,w,c
  4920  00199A  A0D8               	btfss	status,0,c
  4921  00199C  D026               	goto	l835
  4922  00199E                     u5340:
  4923  00199E  500E               	movf	___fladd@b,w,c
  4924  0019A0  100F               	iorwf	___fladd@b+1,w,c
  4925  0019A2  1010               	iorwf	___fladd@b+2,w,c
  4926  0019A4  1011               	iorwf	___fladd@b+3,w,c
  4927  0019A6  B4D8               	btfsc	status,2,c
  4928  0019A8  D002               	goto	u5350
  4929  0019AA  0E01               	movlw	1
  4930  0019AC  D001               	goto	u5360
  4931  0019AE                     u5350:
  4932  0019AE  0E00               	movlw	0
  4933  0019B0                     u5360:
  4934  0019B0  6E1D               	movwf	___fladd@grs,c
  4935  0019B2  0E00               	movlw	0
  4936  0019B4  6E0E               	movwf	___fladd@b,c
  4937  0019B6  0E00               	movlw	0
  4938  0019B8  6E0F               	movwf	___fladd@b+1,c
  4939  0019BA  0E00               	movlw	0
  4940  0019BC  6E10               	movwf	___fladd@b+2,c
  4941  0019BE  0E00               	movlw	0
  4942  0019C0  6E11               	movwf	___fladd@b+3,c
  4943  0019C2  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  4944  0019C6  D015               	goto	u5390
  4945  0019C8                     l836:
  4946  0019C8  A01D               	btfss	___fladd@grs,0,c
  4947  0019CA  D005               	goto	l4680
  4948  0019CC  90D8               	bcf	status,0,c
  4949  0019CE  301D               	rrcf	___fladd@grs,w,c
  4950  0019D0  0901               	iorlw	1
  4951  0019D2  6E1D               	movwf	___fladd@grs,c
  4952  0019D4  D002               	goto	l4682
  4953  0019D6                     l4680:
  4954  0019D6  90D8               	bcf	status,0,c
  4955  0019D8  321D               	rrcf	___fladd@grs,f,c
  4956  0019DA                     l4682:
  4957  0019DA  B00E               	btfsc	___fladd@b,0,c
  4958  0019DC  8E1D               	bsf	___fladd@grs,7,c
  4959  0019DE  3411               	rlcf	___fladd@b+3,w,c
  4960  0019E0  3211               	rrcf	___fladd@b+3,f,c
  4961  0019E2  3210               	rrcf	___fladd@b+2,f,c
  4962  0019E4  320F               	rrcf	___fladd@b+1,f,c
  4963  0019E6  320E               	rrcf	___fladd@b,f,c
  4964  0019E8  2A1C               	incf	___fladd@bexp,f,c
  4965  0019EA                     l835:
  4966  0019EA  501B               	movf	___fladd@aexp,w,c
  4967  0019EC  5C1C               	subwf	___fladd@bexp,w,c
  4968  0019EE  A0D8               	btfss	status,0,c
  4969  0019F0  D7EB               	goto	l836
  4970  0019F2                     u5390:
  4971  0019F2  BC1A               	btfsc	___fladd@signs,6,c
  4972  0019F4  D028               	goto	l4714
  4973  0019F6  501C               	movf	___fladd@bexp,w,c
  4974  0019F8  A4D8               	btfss	status,2,c
  4975  0019FA  D009               	goto	l4696
  4976  0019FC  0E00               	movlw	0
  4977  0019FE  6E0E               	movwf	?___fladd,c
  4978  001A00  0E00               	movlw	0
  4979  001A02  6E0F               	movwf	?___fladd+1,c
  4980  001A04  0E00               	movlw	0
  4981  001A06  6E10               	movwf	?___fladd+2,c
  4982  001A08  0E00               	movlw	0
  4983  001A0A  6E11               	movwf	?___fladd+3,c
  4984  001A0C  0012               	return	
  4985  001A0E                     l4696:
  4986  001A0E  5012               	movf	___fladd@a,w,c
  4987  001A10  260E               	addwf	___fladd@b,f,c
  4988  001A12  5013               	movf	___fladd@a+1,w,c
  4989  001A14  220F               	addwfc	___fladd@b+1,f,c
  4990  001A16  5014               	movf	___fladd@a+2,w,c
  4991  001A18  2210               	addwfc	___fladd@b+2,f,c
  4992  001A1A  5015               	movf	___fladd@a+3,w,c
  4993  001A1C  2211               	addwfc	___fladd@b+3,f,c
  4994  001A1E  A011               	btfss	___fladd@b+3,0,c
  4995  001A20  D071               	goto	u5520
  4996  001A22  A01D               	btfss	___fladd@grs,0,c
  4997  001A24  D005               	goto	l4704
  4998  001A26  90D8               	bcf	status,0,c
  4999  001A28  301D               	rrcf	___fladd@grs,w,c
  5000  001A2A  0901               	iorlw	1
  5001  001A2C  6E1D               	movwf	___fladd@grs,c
  5002  001A2E  D002               	goto	l4706
  5003  001A30                     l4704:
  5004  001A30  90D8               	bcf	status,0,c
  5005  001A32  321D               	rrcf	___fladd@grs,f,c
  5006  001A34                     l4706:
  5007  001A34  B00E               	btfsc	___fladd@b,0,c
  5008  001A36  8E1D               	bsf	___fladd@grs,7,c
  5009  001A38  3411               	rlcf	___fladd@b+3,w,c
  5010  001A3A  3211               	rrcf	___fladd@b+3,f,c
  5011  001A3C  3210               	rrcf	___fladd@b+2,f,c
  5012  001A3E  320F               	rrcf	___fladd@b+1,f,c
  5013  001A40  320E               	rrcf	___fladd@b,f,c
  5014  001A42  2A1C               	incf	___fladd@bexp,f,c
  5015  001A44  D05F               	goto	u5520
  5016  001A46                     l4714:
  5017  001A46  5012               	movf	___fladd@a,w,c
  5018  001A48  5C0E               	subwf	___fladd@b,w,c
  5019  001A4A  5013               	movf	___fladd@a+1,w,c
  5020  001A4C  580F               	subwfb	___fladd@b+1,w,c
  5021  001A4E  5014               	movf	___fladd@a+2,w,c
  5022  001A50  5810               	subwfb	___fladd@b+2,w,c
  5023  001A52  5011               	movf	___fladd@b+3,w,c
  5024  001A54  0A80               	xorlw	128
  5025  001A56  6E16               	movwf	??___fladd& (0+255),c
  5026  001A58  5015               	movf	___fladd@a+3,w,c
  5027  001A5A  0A80               	xorlw	128
  5028  001A5C  5816               	subwfb	??___fladd& (0+255),w,c
  5029  001A5E  B0D8               	btfsc	status,0,c
  5030  001A60  D025               	goto	l4724
  5031  001A62  500E               	movf	___fladd@b,w,c
  5032  001A64  5C12               	subwf	___fladd@a,w,c
  5033  001A66  6E16               	movwf	??___fladd& (0+255),c
  5034  001A68  500F               	movf	___fladd@b+1,w,c
  5035  001A6A  5813               	subwfb	___fladd@a+1,w,c
  5036  001A6C  6E17               	movwf	(??___fladd+1)& (0+255),c
  5037  001A6E  5010               	movf	___fladd@b+2,w,c
  5038  001A70  5814               	subwfb	___fladd@a+2,w,c
  5039  001A72  6E18               	movwf	(??___fladd+2)& (0+255),c
  5040  001A74  5011               	movf	___fladd@b+3,w,c
  5041  001A76  5815               	subwfb	___fladd@a+3,w,c
  5042  001A78  6E19               	movwf	(??___fladd+3)& (0+255),c
  5043  001A7A  0EFF               	movlw	255
  5044  001A7C  2416               	addwf	??___fladd,w,c
  5045  001A7E  6E0E               	movwf	___fladd@b,c
  5046  001A80  0EFF               	movlw	255
  5047  001A82  2017               	addwfc	??___fladd+1,w,c
  5048  001A84  6E0F               	movwf	___fladd@b+1,c
  5049  001A86  0EFF               	movlw	255
  5050  001A88  2018               	addwfc	??___fladd+2,w,c
  5051  001A8A  6E10               	movwf	___fladd@b+2,c
  5052  001A8C  0EFF               	movlw	255
  5053  001A8E  2019               	addwfc	??___fladd+3,w,c
  5054  001A90  6E11               	movwf	___fladd@b+3,c
  5055  001A92  0E80               	movlw	128
  5056  001A94  1A1A               	xorwf	___fladd@signs,f,c
  5057  001A96  6C1D               	negf	___fladd@grs,c
  5058  001A98  501D               	movf	___fladd@grs,w,c
  5059  001A9A  A4D8               	btfss	status,2,c
  5060  001A9C  D00F               	goto	l851
  5061  001A9E  0E01               	movlw	1
  5062  001AA0  260E               	addwf	___fladd@b,f,c
  5063  001AA2  0E00               	movlw	0
  5064  001AA4  220F               	addwfc	___fladd@b+1,f,c
  5065  001AA6  2210               	addwfc	___fladd@b+2,f,c
  5066  001AA8  2211               	addwfc	___fladd@b+3,f,c
  5067  001AAA  D008               	goto	l851
  5068  001AAC                     l4724:
  5069  001AAC  5012               	movf	___fladd@a,w,c
  5070  001AAE  5E0E               	subwf	___fladd@b,f,c
  5071  001AB0  5013               	movf	___fladd@a+1,w,c
  5072  001AB2  5A0F               	subwfb	___fladd@b+1,f,c
  5073  001AB4  5014               	movf	___fladd@a+2,w,c
  5074  001AB6  5A10               	subwfb	___fladd@b+2,f,c
  5075  001AB8  5015               	movf	___fladd@a+3,w,c
  5076  001ABA  5A11               	subwfb	___fladd@b+3,f,c
  5077  001ABC                     l851:
  5078  001ABC  500E               	movf	___fladd@b,w,c
  5079  001ABE  100F               	iorwf	___fladd@b+1,w,c
  5080  001AC0  1010               	iorwf	___fladd@b+2,w,c
  5081  001AC2  1011               	iorwf	___fladd@b+3,w,c
  5082  001AC4  A4D8               	btfss	status,2,c
  5083  001AC6  D01C               	goto	l4748
  5084  001AC8  501D               	movf	___fladd@grs,w,c
  5085  001ACA  A4D8               	btfss	status,2,c
  5086  001ACC  D019               	goto	l4748
  5087  001ACE  0E00               	movlw	0
  5088  001AD0  6E0E               	movwf	?___fladd,c
  5089  001AD2  0E00               	movlw	0
  5090  001AD4  6E0F               	movwf	?___fladd+1,c
  5091  001AD6  0E00               	movlw	0
  5092  001AD8  6E10               	movwf	?___fladd+2,c
  5093  001ADA  0E00               	movlw	0
  5094  001ADC  6E11               	movwf	?___fladd+3,c
  5095  001ADE  0012               	return	
  5096  001AE0                     l4732:
  5097  001AE0  90D8               	bcf	status,0,c
  5098  001AE2  360E               	rlcf	___fladd@b,f,c
  5099  001AE4  360F               	rlcf	___fladd@b+1,f,c
  5100  001AE6  3610               	rlcf	___fladd@b+2,f,c
  5101  001AE8  3611               	rlcf	___fladd@b+3,f,c
  5102  001AEA  BE1D               	btfsc	___fladd@grs,7,c
  5103  001AEC  800E               	bsf	___fladd@b,0,c
  5104  001AEE  A01D               	btfss	___fladd@grs,0,c
  5105  001AF0  D002               	goto	l4742
  5106  001AF2  80D8               	bsf	status,0,c
  5107  001AF4  D001               	goto	L9
  5108  001AF6                     l4742:
  5109  001AF6  90D8               	bcf	status,0,c
  5110  001AF8                     L9:
  5111  001AF8  361D               	rlcf	___fladd@grs,f,c
  5112  001AFA  501C               	movf	___fladd@bexp,w,c
  5113  001AFC  A4D8               	btfss	status,2,c
  5114  001AFE  061C               	decf	___fladd@bexp,f,c
  5115  001B00                     l4748:
  5116  001B00  AE10               	btfss	___fladd@b+2,7,c
  5117  001B02  D7EE               	goto	l4732
  5118  001B04                     u5520:
  5119  001B04  0E00               	movlw	0
  5120  001B06  6E1B               	movwf	___fladd@aexp,c
  5121  001B08  AE1D               	btfss	___fladd@grs,7,c
  5122  001B0A  D00B               	goto	l860
  5123  001B0C  C01D  F016         	movff	___fladd@grs,??___fladd
  5124  001B10  0E7F               	movlw	127
  5125  001B12  1616               	andwf	??___fladd,f,c
  5126  001B14  B4D8               	btfsc	status,2,c
  5127  001B16  D003               	goto	l861
  5128  001B18                     u5540:
  5129  001B18  0E01               	movlw	1
  5130  001B1A  6E1B               	movwf	___fladd@aexp,c
  5131  001B1C  D002               	goto	l860
  5132  001B1E                     l861:
  5133  001B1E  B00E               	btfsc	___fladd@b,0,c
  5134  001B20  D7FB               	goto	u5540
  5135  001B22                     l860:
  5136  001B22  501B               	movf	___fladd@aexp,w,c
  5137  001B24  B4D8               	btfsc	status,2,c
  5138  001B26  D020               	goto	l4768
  5139  001B28  0E01               	movlw	1
  5140  001B2A  260E               	addwf	___fladd@b,f,c
  5141  001B2C  0E00               	movlw	0
  5142  001B2E  220F               	addwfc	___fladd@b+1,f,c
  5143  001B30  2210               	addwfc	___fladd@b+2,f,c
  5144  001B32  2211               	addwfc	___fladd@b+3,f,c
  5145  001B34  A011               	btfss	___fladd@b+3,0,c
  5146  001B36  D018               	goto	l4768
  5147  001B38  C00E  F016         	movff	___fladd@b,??___fladd
  5148  001B3C  C00F  F017         	movff	___fladd@b+1,??___fladd+1
  5149  001B40  C010  F018         	movff	___fladd@b+2,??___fladd+2
  5150  001B44  C011  F019         	movff	___fladd@b+3,??___fladd+3
  5151  001B48  3419               	rlcf	??___fladd+3,w,c
  5152  001B4A  3219               	rrcf	??___fladd+3,f,c
  5153  001B4C  3218               	rrcf	??___fladd+2,f,c
  5154  001B4E  3217               	rrcf	??___fladd+1,f,c
  5155  001B50  3216               	rrcf	??___fladd,f,c
  5156  001B52  C016  F00E         	movff	??___fladd,___fladd@b
  5157  001B56  C017  F00F         	movff	??___fladd+1,___fladd@b+1
  5158  001B5A  C018  F010         	movff	??___fladd+2,___fladd@b+2
  5159  001B5E  C019  F011         	movff	??___fladd+3,___fladd@b+3
  5160  001B62  281C               	incf	___fladd@bexp,w,c
  5161  001B64  A4D8               	btfss	status,2,c
  5162  001B66  2A1C               	incf	___fladd@bexp,f,c
  5163  001B68                     l4768:
  5164  001B68  281C               	incf	___fladd@bexp,w,c
  5165  001B6A  B4D8               	btfsc	status,2,c
  5166  001B6C  D003               	goto	u5600
  5167  001B6E  501C               	movf	___fladd@bexp,w,c
  5168  001B70  A4D8               	btfss	status,2,c
  5169  001B72  D00D               	goto	l4776
  5170  001B74                     u5600:
  5171  001B74  0E00               	movlw	0
  5172  001B76  6E0E               	movwf	___fladd@b,c
  5173  001B78  0E00               	movlw	0
  5174  001B7A  6E0F               	movwf	___fladd@b+1,c
  5175  001B7C  0E00               	movlw	0
  5176  001B7E  6E10               	movwf	___fladd@b+2,c
  5177  001B80  0E00               	movlw	0
  5178  001B82  6E11               	movwf	___fladd@b+3,c
  5179  001B84  501C               	movf	___fladd@bexp,w,c
  5180  001B86  A4D8               	btfss	status,2,c
  5181  001B88  D002               	goto	l4776
  5182  001B8A  0E00               	movlw	0
  5183  001B8C  6E1A               	movwf	___fladd@signs,c
  5184  001B8E                     l4776:
  5185  001B8E  A01C               	btfss	___fladd@bexp,0,c
  5186  001B90  D002               	goto	l4780
  5187  001B92  8E10               	bsf	___fladd@b+2,7,c
  5188  001B94  D001               	goto	l4782
  5189  001B96                     l4780:
  5190  001B96  9E10               	bcf	___fladd@b+2,7,c
  5191  001B98                     l4782:
  5192  001B98  90D8               	bcf	status,0,c
  5193  001B9A  301C               	rrcf	___fladd@bexp,w,c
  5194  001B9C  6E11               	movwf	___fladd@b+3,c
  5195  001B9E  BE1A               	btfsc	___fladd@signs,7,c
  5196  001BA0  8E11               	bsf	___fladd@b+3,7,c
  5197  001BA2  C00E  F00E         	movff	___fladd@b,?___fladd
  5198  001BA6  C00F  F00F         	movff	___fladd@b+1,?___fladd+1
  5199  001BAA  C010  F010         	movff	___fladd@b+2,?___fladd+2
  5200  001BAE  C011  F011         	movff	___fladd@b+3,?___fladd+3
  5201  001BB2  0012               	return		;funcret
  5202  001BB4                     __end_of___fladd:
  5203                           	opt callstack 0
  5204                           
  5205 ;; *************** function ___flneg *****************
  5206 ;; Defined at:
  5207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  f1              4   13[COMRAM] unsigned char 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  4   13[COMRAM] unsigned char 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5221 ;;      Params:         4       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5224 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        4 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    2
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_efgtoa
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text19
  5236  003450                     __ptext19:
  5237                           	opt callstack 0
  5238  003450                     ___flneg:
  5239                           	opt callstack 24
  5240                           
  5241                           ;incstack = 0
  5242  003450  500E               	movf	___flneg@f1,w,c
  5243  003452  100F               	iorwf	___flneg@f1+1,w,c
  5244  003454  1010               	iorwf	___flneg@f1+2,w,c
  5245  003456  1011               	iorwf	___flneg@f1+3,w,c
  5246  003458  B4D8               	btfsc	status,2,c
  5247  00345A  D008               	goto	l5284
  5248  00345C  0E00               	movlw	0
  5249  00345E  1A0E               	xorwf	___flneg@f1,f,c
  5250  003460  0E00               	movlw	0
  5251  003462  1A0F               	xorwf	___flneg@f1+1,f,c
  5252  003464  0E00               	movlw	0
  5253  003466  1A10               	xorwf	___flneg@f1+2,f,c
  5254  003468  0E80               	movlw	128
  5255  00346A  1A11               	xorwf	___flneg@f1+3,f,c
  5256  00346C                     l5284:
  5257  00346C  C00E  F00E         	movff	___flneg@f1,?___flneg
  5258  003470  C00F  F00F         	movff	___flneg@f1+1,?___flneg+1
  5259  003474  C010  F010         	movff	___flneg@f1+2,?___flneg+2
  5260  003478  C011  F011         	movff	___flneg@f1+3,?___flneg+3
  5261  00347C  0012               	return		;funcret
  5262  00347E                     __end_of___flneg:
  5263                           	opt callstack 0
  5264                           
  5265 ;; *************** function ___flge *****************
  5266 ;; Defined at:
  5267 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  ff1             4   38[COMRAM] unsigned char 
  5270 ;;  ff2             4   42[COMRAM] unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;		None
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5282 ;;      Params:         8       0       0       0       0       0       0       0       0
  5283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5284 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5285 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5286 ;;Total ram usage:       12 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_efgtoa
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text20
  5297  0029DE                     __ptext20:
  5298                           	opt callstack 0
  5299  0029DE                     ___flge:
  5300                           	opt callstack 24
  5301                           
  5302                           ;incstack = 0
  5303  0029DE  0E00               	movlw	0
  5304  0029E0  1427               	andwf	___flge@ff1,w,c
  5305  0029E2  6E2F               	movwf	??___flge& (0+255),c
  5306  0029E4  0E00               	movlw	0
  5307  0029E6  1428               	andwf	___flge@ff1+1,w,c
  5308  0029E8  6E30               	movwf	(??___flge+1)& (0+255),c
  5309  0029EA  0E80               	movlw	128
  5310  0029EC  1429               	andwf	___flge@ff1+2,w,c
  5311  0029EE  6E31               	movwf	(??___flge+2)& (0+255),c
  5312  0029F0  0E7F               	movlw	127
  5313  0029F2  142A               	andwf	___flge@ff1+3,w,c
  5314  0029F4  6E32               	movwf	(??___flge+3)& (0+255),c
  5315  0029F6  502F               	movf	??___flge,w,c
  5316  0029F8  1030               	iorwf	??___flge+1,w,c
  5317  0029FA  1031               	iorwf	??___flge+2,w,c
  5318  0029FC  1032               	iorwf	??___flge+3,w,c
  5319  0029FE  A4D8               	btfss	status,2,c
  5320  002A00  D008               	goto	l5262
  5321  002A02  0E00               	movlw	0
  5322  002A04  6E27               	movwf	___flge@ff1,c
  5323  002A06  0E00               	movlw	0
  5324  002A08  6E28               	movwf	___flge@ff1+1,c
  5325  002A0A  0E00               	movlw	0
  5326  002A0C  6E29               	movwf	___flge@ff1+2,c
  5327  002A0E  0E00               	movlw	0
  5328  002A10  6E2A               	movwf	___flge@ff1+3,c
  5329  002A12                     l5262:
  5330  002A12  0E00               	movlw	0
  5331  002A14  142B               	andwf	___flge@ff2,w,c
  5332  002A16  6E2F               	movwf	??___flge& (0+255),c
  5333  002A18  0E00               	movlw	0
  5334  002A1A  142C               	andwf	___flge@ff2+1,w,c
  5335  002A1C  6E30               	movwf	(??___flge+1)& (0+255),c
  5336  002A1E  0E80               	movlw	128
  5337  002A20  142D               	andwf	___flge@ff2+2,w,c
  5338  002A22  6E31               	movwf	(??___flge+2)& (0+255),c
  5339  002A24  0E7F               	movlw	127
  5340  002A26  142E               	andwf	___flge@ff2+3,w,c
  5341  002A28  6E32               	movwf	(??___flge+3)& (0+255),c
  5342  002A2A  502F               	movf	??___flge,w,c
  5343  002A2C  1030               	iorwf	??___flge+1,w,c
  5344  002A2E  1031               	iorwf	??___flge+2,w,c
  5345  002A30  1032               	iorwf	??___flge+3,w,c
  5346  002A32  A4D8               	btfss	status,2,c
  5347  002A34  D008               	goto	l5266
  5348  002A36  0E00               	movlw	0
  5349  002A38  6E2B               	movwf	___flge@ff2,c
  5350  002A3A  0E00               	movlw	0
  5351  002A3C  6E2C               	movwf	___flge@ff2+1,c
  5352  002A3E  0E00               	movlw	0
  5353  002A40  6E2D               	movwf	___flge@ff2+2,c
  5354  002A42  0E00               	movlw	0
  5355  002A44  6E2E               	movwf	___flge@ff2+3,c
  5356  002A46                     l5266:
  5357  002A46  AE2A               	btfss	___flge@ff1+3,7,c
  5358  002A48  D009               	goto	l5270
  5359  002A4A  6C27               	negf	___flge@ff1,c
  5360  002A4C  1E28               	comf	___flge@ff1+1,f,c
  5361  002A4E  B0D8               	btfsc	status,0,c
  5362  002A50  2A28               	incf	___flge@ff1+1,f,c
  5363  002A52  1E29               	comf	___flge@ff1+2,f,c
  5364  002A54  B0D8               	btfsc	status,0,c
  5365  002A56  2A29               	incf	___flge@ff1+2,f,c
  5366  002A58  0E80               	movlw	128
  5367  002A5A  562A               	subfwb	___flge@ff1+3,f,c
  5368  002A5C                     l5270:
  5369  002A5C  AE2E               	btfss	___flge@ff2+3,7,c
  5370  002A5E  D009               	goto	l571
  5371  002A60  6C2B               	negf	___flge@ff2,c
  5372  002A62  1E2C               	comf	___flge@ff2+1,f,c
  5373  002A64  B0D8               	btfsc	status,0,c
  5374  002A66  2A2C               	incf	___flge@ff2+1,f,c
  5375  002A68  1E2D               	comf	___flge@ff2+2,f,c
  5376  002A6A  B0D8               	btfsc	status,0,c
  5377  002A6C  2A2D               	incf	___flge@ff2+2,f,c
  5378  002A6E  0E80               	movlw	128
  5379  002A70  562E               	subfwb	___flge@ff2+3,f,c
  5380  002A72                     l571:
  5381  002A72  0E00               	movlw	0
  5382  002A74  1A27               	xorwf	___flge@ff1,f,c
  5383  002A76  0E00               	movlw	0
  5384  002A78  1A28               	xorwf	___flge@ff1+1,f,c
  5385  002A7A  0E00               	movlw	0
  5386  002A7C  1A29               	xorwf	___flge@ff1+2,f,c
  5387  002A7E  0E80               	movlw	128
  5388  002A80  1A2A               	xorwf	___flge@ff1+3,f,c
  5389  002A82  0E00               	movlw	0
  5390  002A84  1A2B               	xorwf	___flge@ff2,f,c
  5391  002A86  0E00               	movlw	0
  5392  002A88  1A2C               	xorwf	___flge@ff2+1,f,c
  5393  002A8A  0E00               	movlw	0
  5394  002A8C  1A2D               	xorwf	___flge@ff2+2,f,c
  5395  002A8E  0E80               	movlw	128
  5396  002A90  1A2E               	xorwf	___flge@ff2+3,f,c
  5397  002A92  502B               	movf	___flge@ff2,w,c
  5398  002A94  5C27               	subwf	___flge@ff1,w,c
  5399  002A96  502C               	movf	___flge@ff2+1,w,c
  5400  002A98  5828               	subwfb	___flge@ff1+1,w,c
  5401  002A9A  502D               	movf	___flge@ff2+2,w,c
  5402  002A9C  5829               	subwfb	___flge@ff1+2,w,c
  5403  002A9E  502E               	movf	___flge@ff2+3,w,c
  5404  002AA0  582A               	subwfb	___flge@ff1+3,w,c
  5405  002AA2  B0D8               	btfsc	status,0,c
  5406  002AA4  D002               	goto	l5276
  5407  002AA6  90D8               	bcf	status,0,c
  5408  002AA8  0012               	return	
  5409  002AAA                     l5276:
  5410  002AAA  80D8               	bsf	status,0,c
  5411  002AAC  0012               	return		;funcret
  5412  002AAE                     __end_of___flge:
  5413                           	opt callstack 0
  5414                           
  5415 ;; *************** function ___fleq *****************
  5416 ;; Defined at:
  5417 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  ff1             4   13[COMRAM] unsigned char 
  5420 ;;  ff2             4   17[COMRAM] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;		None               void
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5432 ;;      Params:         8       0       0       0       0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5434 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5435 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5436 ;;Total ram usage:       12 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    2
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_efgtoa
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text21
  5447  002EDC                     __ptext21:
  5448                           	opt callstack 0
  5449  002EDC                     ___fleq:
  5450                           	opt callstack 24
  5451                           
  5452                           ;incstack = 0
  5453  002EDC  0E00               	movlw	0
  5454  002EDE  140E               	andwf	___fleq@ff1,w,c
  5455  002EE0  6E16               	movwf	??___fleq& (0+255),c
  5456  002EE2  0E00               	movlw	0
  5457  002EE4  140F               	andwf	___fleq@ff1+1,w,c
  5458  002EE6  6E17               	movwf	(??___fleq+1)& (0+255),c
  5459  002EE8  0E80               	movlw	128
  5460  002EEA  1410               	andwf	___fleq@ff1+2,w,c
  5461  002EEC  6E18               	movwf	(??___fleq+2)& (0+255),c
  5462  002EEE  0E7F               	movlw	127
  5463  002EF0  1411               	andwf	___fleq@ff1+3,w,c
  5464  002EF2  6E19               	movwf	(??___fleq+3)& (0+255),c
  5465  002EF4  5016               	movf	??___fleq,w,c
  5466  002EF6  1017               	iorwf	??___fleq+1,w,c
  5467  002EF8  1018               	iorwf	??___fleq+2,w,c
  5468  002EFA  1019               	iorwf	??___fleq+3,w,c
  5469  002EFC  A4D8               	btfss	status,2,c
  5470  002EFE  D008               	goto	l5246
  5471  002F00  0E00               	movlw	0
  5472  002F02  6E0E               	movwf	___fleq@ff1,c
  5473  002F04  0E00               	movlw	0
  5474  002F06  6E0F               	movwf	___fleq@ff1+1,c
  5475  002F08  0E00               	movlw	0
  5476  002F0A  6E10               	movwf	___fleq@ff1+2,c
  5477  002F0C  0E00               	movlw	0
  5478  002F0E  6E11               	movwf	___fleq@ff1+3,c
  5479  002F10                     l5246:
  5480  002F10  0E00               	movlw	0
  5481  002F12  1412               	andwf	___fleq@ff2,w,c
  5482  002F14  6E16               	movwf	??___fleq& (0+255),c
  5483  002F16  0E00               	movlw	0
  5484  002F18  1413               	andwf	___fleq@ff2+1,w,c
  5485  002F1A  6E17               	movwf	(??___fleq+1)& (0+255),c
  5486  002F1C  0E80               	movlw	128
  5487  002F1E  1414               	andwf	___fleq@ff2+2,w,c
  5488  002F20  6E18               	movwf	(??___fleq+2)& (0+255),c
  5489  002F22  0E7F               	movlw	127
  5490  002F24  1415               	andwf	___fleq@ff2+3,w,c
  5491  002F26  6E19               	movwf	(??___fleq+3)& (0+255),c
  5492  002F28  5016               	movf	??___fleq,w,c
  5493  002F2A  1017               	iorwf	??___fleq+1,w,c
  5494  002F2C  1018               	iorwf	??___fleq+2,w,c
  5495  002F2E  1019               	iorwf	??___fleq+3,w,c
  5496  002F30  A4D8               	btfss	status,2,c
  5497  002F32  D008               	goto	l5250
  5498  002F34  0E00               	movlw	0
  5499  002F36  6E12               	movwf	___fleq@ff2,c
  5500  002F38  0E00               	movlw	0
  5501  002F3A  6E13               	movwf	___fleq@ff2+1,c
  5502  002F3C  0E00               	movlw	0
  5503  002F3E  6E14               	movwf	___fleq@ff2+2,c
  5504  002F40  0E00               	movlw	0
  5505  002F42  6E15               	movwf	___fleq@ff2+3,c
  5506  002F44                     l5250:
  5507  002F44  5012               	movf	___fleq@ff2,w,c
  5508  002F46  180E               	xorwf	___fleq@ff1,w,c
  5509  002F48  E10A               	bnz	u6480
  5510  002F4A  5013               	movf	___fleq@ff2+1,w,c
  5511  002F4C  180F               	xorwf	___fleq@ff1+1,w,c
  5512  002F4E  E107               	bnz	u6480
  5513  002F50  5014               	movf	___fleq@ff2+2,w,c
  5514  002F52  1810               	xorwf	___fleq@ff1+2,w,c
  5515  002F54  E104               	bnz	u6480
  5516  002F56  5015               	movf	___fleq@ff2+3,w,c
  5517  002F58  1811               	xorwf	___fleq@ff1+3,w,c
  5518  002F5A  B4D8               	btfsc	status,2,c
  5519  002F5C  D002               	goto	l5254
  5520  002F5E                     u6480:
  5521  002F5E  90D8               	bcf	status,0,c
  5522  002F60  0012               	return	
  5523  002F62                     l5254:
  5524  002F62  80D8               	bsf	status,0,c
  5525  002F64  0012               	return		;funcret
  5526  002F66                     __end_of___fleq:
  5527                           	opt callstack 0
  5528                           
  5529 ;; *************** function ___awmod *****************
  5530 ;; Defined at:
  5531 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  dividend        2   13[COMRAM] int 
  5534 ;;  divisor         2   15[COMRAM] int 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  sign            1   18[COMRAM] unsigned char 
  5537 ;;  counter         1   17[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  2   13[COMRAM] int 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5547 ;;      Params:         4       0       0       0       0       0       0       0       0
  5548 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5550 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5551 ;;Total ram usage:        6 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    2
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_efgtoa
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text22
  5562  0030D4                     __ptext22:
  5563                           	opt callstack 0
  5564  0030D4                     ___awmod:
  5565                           	opt callstack 24
  5566                           
  5567                           ;incstack = 0
  5568  0030D4  0E00               	movlw	0
  5569  0030D6  6E13               	movwf	___awmod@sign,c
  5570  0030D8  AE0F               	btfss	___awmod@dividend+1,7,c
  5571  0030DA  D006               	goto	l5214
  5572  0030DC  6C0E               	negf	___awmod@dividend,c
  5573  0030DE  1E0F               	comf	___awmod@dividend+1,f,c
  5574  0030E0  B0D8               	btfsc	status,0,c
  5575  0030E2  2A0F               	incf	___awmod@dividend+1,f,c
  5576  0030E4  0E01               	movlw	1
  5577  0030E6  6E13               	movwf	___awmod@sign,c
  5578  0030E8                     l5214:
  5579  0030E8  AE11               	btfss	___awmod@divisor+1,7,c
  5580  0030EA  D004               	goto	l5218
  5581  0030EC  6C10               	negf	___awmod@divisor,c
  5582  0030EE  1E11               	comf	___awmod@divisor+1,f,c
  5583  0030F0  B0D8               	btfsc	status,0,c
  5584  0030F2  2A11               	incf	___awmod@divisor+1,f,c
  5585  0030F4                     l5218:
  5586  0030F4  5010               	movf	___awmod@divisor,w,c
  5587  0030F6  1011               	iorwf	___awmod@divisor+1,w,c
  5588  0030F8  B4D8               	btfsc	status,2,c
  5589  0030FA  D018               	goto	l5234
  5590  0030FC  0E01               	movlw	1
  5591  0030FE  6E12               	movwf	___awmod@counter,c
  5592  003100  D004               	goto	l5224
  5593  003102                     l5222:
  5594  003102  90D8               	bcf	status,0,c
  5595  003104  3610               	rlcf	___awmod@divisor,f,c
  5596  003106  3611               	rlcf	___awmod@divisor+1,f,c
  5597  003108  2A12               	incf	___awmod@counter,f,c
  5598  00310A                     l5224:
  5599  00310A  AE11               	btfss	___awmod@divisor+1,7,c
  5600  00310C  D7FA               	goto	l5222
  5601  00310E                     u6430:
  5602  00310E  5010               	movf	___awmod@divisor,w,c
  5603  003110  5C0E               	subwf	___awmod@dividend,w,c
  5604  003112  5011               	movf	___awmod@divisor+1,w,c
  5605  003114  580F               	subwfb	___awmod@dividend+1,w,c
  5606  003116  A0D8               	btfss	status,0,c
  5607  003118  D004               	goto	l5230
  5608  00311A  5010               	movf	___awmod@divisor,w,c
  5609  00311C  5E0E               	subwf	___awmod@dividend,f,c
  5610  00311E  5011               	movf	___awmod@divisor+1,w,c
  5611  003120  5A0F               	subwfb	___awmod@dividend+1,f,c
  5612  003122                     l5230:
  5613  003122  90D8               	bcf	status,0,c
  5614  003124  3211               	rrcf	___awmod@divisor+1,f,c
  5615  003126  3210               	rrcf	___awmod@divisor,f,c
  5616  003128  2E12               	decfsz	___awmod@counter,f,c
  5617  00312A  D7F1               	goto	u6430
  5618  00312C                     l5234:
  5619  00312C  5013               	movf	___awmod@sign,w,c
  5620  00312E  B4D8               	btfsc	status,2,c
  5621  003130  D004               	goto	l5238
  5622  003132  6C0E               	negf	___awmod@dividend,c
  5623  003134  1E0F               	comf	___awmod@dividend+1,f,c
  5624  003136  B0D8               	btfsc	status,0,c
  5625  003138  2A0F               	incf	___awmod@dividend+1,f,c
  5626  00313A                     l5238:
  5627  00313A  C00E  F00E         	movff	___awmod@dividend,?___awmod
  5628  00313E  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  5629  003142  0012               	return		;funcret
  5630  003144                     __end_of___awmod:
  5631                           	opt callstack 0
  5632                           
  5633 ;; *************** function ___awdiv *****************
  5634 ;; Defined at:
  5635 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  dividend        2   13[COMRAM] int 
  5638 ;;  divisor         2   15[COMRAM] int 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  quotient        2   19[COMRAM] int 
  5641 ;;  sign            1   18[COMRAM] unsigned char 
  5642 ;;  counter         1   17[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2   13[COMRAM] int 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5652 ;;      Params:         4       0       0       0       0       0       0       0       0
  5653 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5655 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5656 ;;Total ram usage:        8 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    2
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_efgtoa
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text23
  5667  002F66                     __ptext23:
  5668                           	opt callstack 0
  5669  002F66                     ___awdiv:
  5670                           	opt callstack 24
  5671                           
  5672                           ;incstack = 0
  5673  002F66  0E00               	movlw	0
  5674  002F68  6E13               	movwf	___awdiv@sign,c
  5675  002F6A  AE11               	btfss	___awdiv@divisor+1,7,c
  5676  002F6C  D006               	goto	l5170
  5677  002F6E  6C10               	negf	___awdiv@divisor,c
  5678  002F70  1E11               	comf	___awdiv@divisor+1,f,c
  5679  002F72  B0D8               	btfsc	status,0,c
  5680  002F74  2A11               	incf	___awdiv@divisor+1,f,c
  5681  002F76  0E01               	movlw	1
  5682  002F78  6E13               	movwf	___awdiv@sign,c
  5683  002F7A                     l5170:
  5684  002F7A  AE0F               	btfss	___awdiv@dividend+1,7,c
  5685  002F7C  D006               	goto	l5176
  5686  002F7E  6C0E               	negf	___awdiv@dividend,c
  5687  002F80  1E0F               	comf	___awdiv@dividend+1,f,c
  5688  002F82  B0D8               	btfsc	status,0,c
  5689  002F84  2A0F               	incf	___awdiv@dividend+1,f,c
  5690  002F86  0E01               	movlw	1
  5691  002F88  1A13               	xorwf	___awdiv@sign,f,c
  5692  002F8A                     l5176:
  5693  002F8A  0E00               	movlw	0
  5694  002F8C  6E15               	movwf	___awdiv@quotient+1,c
  5695  002F8E  0E00               	movlw	0
  5696  002F90  6E14               	movwf	___awdiv@quotient,c
  5697  002F92  5010               	movf	___awdiv@divisor,w,c
  5698  002F94  1011               	iorwf	___awdiv@divisor+1,w,c
  5699  002F96  B4D8               	btfsc	status,2,c
  5700  002F98  D01C               	goto	l5198
  5701  002F9A  0E01               	movlw	1
  5702  002F9C  6E12               	movwf	___awdiv@counter,c
  5703  002F9E  D004               	goto	l5184
  5704  002FA0                     l5182:
  5705  002FA0  90D8               	bcf	status,0,c
  5706  002FA2  3610               	rlcf	___awdiv@divisor,f,c
  5707  002FA4  3611               	rlcf	___awdiv@divisor+1,f,c
  5708  002FA6  2A12               	incf	___awdiv@counter,f,c
  5709  002FA8                     l5184:
  5710  002FA8  AE11               	btfss	___awdiv@divisor+1,7,c
  5711  002FAA  D7FA               	goto	l5182
  5712  002FAC                     u6370:
  5713  002FAC  90D8               	bcf	status,0,c
  5714  002FAE  3614               	rlcf	___awdiv@quotient,f,c
  5715  002FB0  3615               	rlcf	___awdiv@quotient+1,f,c
  5716  002FB2  5010               	movf	___awdiv@divisor,w,c
  5717  002FB4  5C0E               	subwf	___awdiv@dividend,w,c
  5718  002FB6  5011               	movf	___awdiv@divisor+1,w,c
  5719  002FB8  580F               	subwfb	___awdiv@dividend+1,w,c
  5720  002FBA  A0D8               	btfss	status,0,c
  5721  002FBC  D005               	goto	l5194
  5722  002FBE  5010               	movf	___awdiv@divisor,w,c
  5723  002FC0  5E0E               	subwf	___awdiv@dividend,f,c
  5724  002FC2  5011               	movf	___awdiv@divisor+1,w,c
  5725  002FC4  5A0F               	subwfb	___awdiv@dividend+1,f,c
  5726  002FC6  8014               	bsf	___awdiv@quotient,0,c
  5727  002FC8                     l5194:
  5728  002FC8  90D8               	bcf	status,0,c
  5729  002FCA  3211               	rrcf	___awdiv@divisor+1,f,c
  5730  002FCC  3210               	rrcf	___awdiv@divisor,f,c
  5731  002FCE  2E12               	decfsz	___awdiv@counter,f,c
  5732  002FD0  D7ED               	goto	u6370
  5733  002FD2                     l5198:
  5734  002FD2  5013               	movf	___awdiv@sign,w,c
  5735  002FD4  B4D8               	btfsc	status,2,c
  5736  002FD6  D004               	goto	l5202
  5737  002FD8  6C14               	negf	___awdiv@quotient,c
  5738  002FDA  1E15               	comf	___awdiv@quotient+1,f,c
  5739  002FDC  B0D8               	btfsc	status,0,c
  5740  002FDE  2A15               	incf	___awdiv@quotient+1,f,c
  5741  002FE0                     l5202:
  5742  002FE0  C014  F00E         	movff	___awdiv@quotient,?___awdiv
  5743  002FE4  C015  F00F         	movff	___awdiv@quotient+1,?___awdiv+1
  5744  002FE8  0012               	return		;funcret
  5745  002FEA                     __end_of___awdiv:
  5746                           	opt callstack 0
  5747                           
  5748 ;; *************** function _atoi *****************
  5749 ;; Defined at:
  5750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  s               2   20[COMRAM] PTR const unsigned char 
  5753 ;;		 -> STR_1(5), 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  n               2   33[COMRAM] int 
  5756 ;;  neg             2   26[COMRAM] int 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  2   20[COMRAM] int 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5766 ;;      Params:         2       0       0       0       0       0       0       0       0
  5767 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5768 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5769 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5770 ;;Total ram usage:       15 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    3
  5773 ;; This function calls:
  5774 ;;		___wmul
  5775 ;;		_isdigit
  5776 ;;		_isspace
  5777 ;; This function is called by:
  5778 ;;		_vfpfcnvrt
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text24
  5783  0022E4                     __ptext24:
  5784                           	opt callstack 0
  5785  0022E4                     _atoi:
  5786                           	opt callstack 24
  5787                           
  5788                           ;incstack = 0
  5789  0022E4  0E00               	movlw	0
  5790  0022E6  6E23               	movwf	atoi@n+1,c
  5791  0022E8  0E00               	movlw	0
  5792  0022EA  6E22               	movwf	atoi@n,c
  5793  0022EC  0E00               	movlw	0
  5794  0022EE  6E1C               	movwf	atoi@neg+1,c
  5795  0022F0  0E00               	movlw	0
  5796  0022F2  6E1B               	movwf	atoi@neg,c
  5797  0022F4  D002               	goto	l5646
  5798  0022F6                     l5644:
  5799  0022F6  4A15               	infsnz	atoi@s,f,c
  5800  0022F8  2A16               	incf	atoi@s+1,f,c
  5801  0022FA                     l5646:
  5802  0022FA  0E01               	movlw	1
  5803  0022FC  6E21               	movwf	_atoi$1224,c
  5804  0022FE  C015  FFF6         	movff	atoi@s,tblptrl
  5805  002302  C016  FFF7         	movff	atoi@s+1,tblptrh
  5806  002306                     	if	0	;tblptru may be non-zero
  5807  002306                     	endif
  5808  002306                     	if	0	;tblptru may be non-zero
  5809  002306                     	endif
  5810  002306  0008               	tblrd		*
  5811  002308  50F5               	movf	tablat,w,c
  5812  00230A  0A20               	xorlw	32
  5813  00230C  B4D8               	btfsc	status,2,c
  5814  00230E  D018               	goto	l5654
  5815  002310  0EF7               	movlw	247
  5816  002312  6E17               	movwf	??_atoi& (0+255),c
  5817  002314  0EFF               	movlw	255
  5818  002316  6E18               	movwf	(??_atoi+1)& (0+255),c
  5819  002318  C015  FFF6         	movff	atoi@s,tblptrl
  5820  00231C  C016  FFF7         	movff	atoi@s+1,tblptrh
  5821  002320                     	if	0	;tblptru may be non-zero
  5822  002320                     	endif
  5823  002320                     	if	0	;tblptru may be non-zero
  5824  002320                     	endif
  5825  002320  0008               	tblrd		*
  5826  002322  50F5               	movf	tablat,w,c
  5827  002324  6E19               	movwf	(??_atoi+2)& (0+255),c
  5828  002326  6A1A               	clrf	(??_atoi+3)& (0+255),c
  5829  002328  5017               	movf	??_atoi,w,c
  5830  00232A  2619               	addwf	??_atoi+2,f,c
  5831  00232C  5018               	movf	??_atoi+1,w,c
  5832  00232E  221A               	addwfc	??_atoi+3,f,c
  5833  002330  501A               	movf	??_atoi+3,w,c
  5834  002332  E104               	bnz	u7170
  5835  002334  0E05               	movlw	5
  5836  002336  5C19               	subwf	??_atoi+2,w,c
  5837  002338  A0D8               	btfss	status,0,c
  5838  00233A  D002               	goto	l5654
  5839  00233C                     u7170:
  5840  00233C  0E00               	movlw	0
  5841  00233E  6E21               	movwf	_atoi$1224,c
  5842  002340                     l5654:
  5843  002340  C021  F01D         	movff	_atoi$1224,_atoi$1223
  5844  002344  6A1E               	clrf	_atoi$1223+1,c
  5845  002346  501D               	movf	_atoi$1223,w,c
  5846  002348  101E               	iorwf	_atoi$1223+1,w,c
  5847  00234A  B4D8               	btfsc	status,2,c
  5848  00234C  D008               	goto	l5664
  5849  00234E  D7D3               	goto	l5644
  5850  002350                     l5660:
  5851  002350  0E00               	movlw	0
  5852  002352  6E1C               	movwf	atoi@neg+1,c
  5853  002354  0E01               	movlw	1
  5854  002356  6E1B               	movwf	atoi@neg,c
  5855  002358                     l5662:
  5856  002358  4A15               	infsnz	atoi@s,f,c
  5857  00235A  2A16               	incf	atoi@s+1,f,c
  5858  00235C  D02E               	goto	l5670
  5859  00235E                     l5664:
  5860  00235E  C015  FFF6         	movff	atoi@s,tblptrl
  5861  002362  C016  FFF7         	movff	atoi@s+1,tblptrh
  5862  002366                     	if	0	;tblptru may be non-zero
  5863  002366                     	endif
  5864  002366                     	if	0	;tblptru may be non-zero
  5865  002366                     	endif
  5866  002366  0008               	tblrd		*
  5867  002368  50F5               	movf	tablat,w,c
  5868  00236A  6E17               	movwf	??_atoi& (0+255),c
  5869  00236C  6A18               	clrf	(??_atoi+1)& (0+255),c
  5870                           
  5871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5872                           ; Switch size 1, requested type "simple"
  5873                           ; Number of cases is 1, Range of values is 0 to 0
  5874                           ; switch strategies available:
  5875                           ; Name         Instructions Cycles
  5876                           ; simple_byte            4     3 (average)
  5877                           ;	Chosen strategy is simple_byte
  5878  00236E  5018               	movf	??_atoi+1,w,c
  5879  002370  0A00               	xorlw	0	; case 0
  5880  002372  A4D8               	btfss	status,2,c
  5881  002374  D022               	goto	l5670
  5882                           
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 2, Range of values is 43 to 45
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            7     4 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  002376  5017               	movf	??_atoi,w,c
  5890  002378  0A2B               	xorlw	43	; case 43
  5891  00237A  B4D8               	btfsc	status,2,c
  5892  00237C  D7ED               	goto	l5662
  5893  00237E  0A06               	xorlw	6	; case 45
  5894  002380  B4D8               	btfsc	status,2,c
  5895  002382  D7E6               	goto	l5660
  5896  002384  D01A               	goto	l5670
  5897  002386                     l5666:
  5898  002386  C022  F00E         	movff	atoi@n,___wmul@multiplier
  5899  00238A  C023  F00F         	movff	atoi@n+1,___wmul@multiplier+1
  5900  00238E  0E00               	movlw	0
  5901  002390  6E11               	movwf	___wmul@multiplicand+1,c
  5902  002392  0E0A               	movlw	10
  5903  002394  6E10               	movwf	___wmul@multiplicand,c
  5904  002396  EC54  F01A         	call	___wmul	;wreg free
  5905  00239A  C015  FFF6         	movff	atoi@s,tblptrl
  5906  00239E  C016  FFF7         	movff	atoi@s+1,tblptrh
  5907  0023A2                     	if	0	;tblptru may be non-zero
  5908  0023A2                     	endif
  5909  0023A2                     	if	0	;tblptru may be non-zero
  5910  0023A2                     	endif
  5911  0023A2  0008               	tblrd		*
  5912  0023A4  50F5               	movf	tablat,w,c
  5913  0023A6  5E0E               	subwf	?___wmul,f,c
  5914  0023A8  0E00               	movlw	0
  5915  0023AA  5A0F               	subwfb	?___wmul+1,f,c
  5916  0023AC  0E30               	movlw	48
  5917  0023AE  240E               	addwf	?___wmul,w,c
  5918  0023B0  6E22               	movwf	atoi@n,c
  5919  0023B2  0E00               	movlw	0
  5920  0023B4  200F               	addwfc	?___wmul+1,w,c
  5921  0023B6  6E23               	movwf	atoi@n+1,c
  5922  0023B8  D7CF               	goto	l5662
  5923  0023BA                     l5670:
  5924  0023BA  0ED0               	movlw	208
  5925  0023BC  6E17               	movwf	??_atoi& (0+255),c
  5926  0023BE  0EFF               	movlw	255
  5927  0023C0  6E18               	movwf	(??_atoi+1)& (0+255),c
  5928  0023C2  C015  FFF6         	movff	atoi@s,tblptrl
  5929  0023C6  C016  FFF7         	movff	atoi@s+1,tblptrh
  5930  0023CA                     	if	0	;tblptru may be non-zero
  5931  0023CA                     	endif
  5932  0023CA                     	if	0	;tblptru may be non-zero
  5933  0023CA                     	endif
  5934  0023CA  0008               	tblrd		*
  5935  0023CC  50F5               	movf	tablat,w,c
  5936  0023CE  6E19               	movwf	(??_atoi+2)& (0+255),c
  5937  0023D0  6A1A               	clrf	(??_atoi+3)& (0+255),c
  5938  0023D2  5017               	movf	??_atoi,w,c
  5939  0023D4  2619               	addwf	??_atoi+2,f,c
  5940  0023D6  5018               	movf	??_atoi+1,w,c
  5941  0023D8  221A               	addwfc	??_atoi+3,f,c
  5942  0023DA  501A               	movf	??_atoi+3,w,c
  5943  0023DC  E106               	bnz	u7190
  5944  0023DE  0E0A               	movlw	10
  5945  0023E0  5C19               	subwf	??_atoi+2,w,c
  5946  0023E2  B0D8               	btfsc	status,0,c
  5947  0023E4  D002               	goto	u7190
  5948  0023E6  0E01               	movlw	1
  5949  0023E8  D001               	goto	u7200
  5950  0023EA                     u7190:
  5951  0023EA  0E00               	movlw	0
  5952  0023EC                     u7200:
  5953  0023EC  6E1F               	movwf	_atoi$1225,c
  5954  0023EE  6A20               	clrf	_atoi$1225+1,c
  5955  0023F0  501F               	movf	_atoi$1225,w,c
  5956  0023F2  1020               	iorwf	_atoi$1225+1,w,c
  5957  0023F4  A4D8               	btfss	status,2,c
  5958  0023F6  D7C7               	goto	l5666
  5959  0023F8  501B               	movf	atoi@neg,w,c
  5960  0023FA  101C               	iorwf	atoi@neg+1,w,c
  5961  0023FC  A4D8               	btfss	status,2,c
  5962  0023FE  D00D               	goto	l1016
  5963  002400  C022  F017         	movff	atoi@n,??_atoi
  5964  002404  C023  F018         	movff	atoi@n+1,??_atoi+1
  5965  002408  1E17               	comf	??_atoi,f,c
  5966  00240A  1E18               	comf	??_atoi+1,f,c
  5967  00240C  4A17               	infsnz	??_atoi,f,c
  5968  00240E  2A18               	incf	??_atoi+1,f,c
  5969  002410  C017  F015         	movff	??_atoi,?_atoi
  5970  002414  C018  F016         	movff	??_atoi+1,?_atoi+1
  5971  002418  0012               	return	
  5972  00241A                     l1016:
  5973  00241A  C022  F015         	movff	atoi@n,?_atoi
  5974  00241E  C023  F016         	movff	atoi@n+1,?_atoi+1
  5975  002422  0012               	return		;funcret
  5976  002424                     __end_of_atoi:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _isspace *****************
  5980 ;; Defined at:
  5981 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  c               2   13[COMRAM] int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  2   13[COMRAM] int 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5995 ;;      Params:         2       0       0       0       0       0       0       0       0
  5996 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5997 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5998 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5999 ;;Total ram usage:        7 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_atoi
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text25
  6010  003348                     __ptext25:
  6011                           	opt callstack 0
  6012  003348                     _isspace:
  6013                           	opt callstack 24
  6014                           
  6015                           ;incstack = 0
  6016  003348  0E01               	movlw	1
  6017  00334A  6E14               	movwf	_isspace$1254,c
  6018  00334C  0E20               	movlw	32
  6019  00334E  180E               	xorwf	isspace@c,w,c
  6020  003350  100F               	iorwf	isspace@c+1,w,c
  6021  003352  B4D8               	btfsc	status,2,c
  6022  003354  D014               	goto	l5340
  6023  003356  0EF7               	movlw	247
  6024  003358  6E10               	movwf	??_isspace& (0+255),c
  6025  00335A  0EFF               	movlw	255
  6026  00335C  6E11               	movwf	(??_isspace+1)& (0+255),c
  6027  00335E  C00E  F012         	movff	isspace@c,??_isspace+2
  6028  003362  C00F  F013         	movff	isspace@c+1,??_isspace+3
  6029  003366  5010               	movf	??_isspace,w,c
  6030  003368  2612               	addwf	??_isspace+2,f,c
  6031  00336A  5011               	movf	??_isspace+1,w,c
  6032  00336C  2213               	addwfc	??_isspace+3,f,c
  6033  00336E  5013               	movf	??_isspace+3,w,c
  6034  003370  E104               	bnz	u6630
  6035  003372  0E05               	movlw	5
  6036  003374  5C12               	subwf	??_isspace+2,w,c
  6037  003376  A0D8               	btfss	status,0,c
  6038  003378  D002               	goto	l5340
  6039  00337A                     u6630:
  6040  00337A  0E00               	movlw	0
  6041  00337C  6E14               	movwf	_isspace$1254,c
  6042  00337E                     l5340:
  6043  00337E  C014  F00E         	movff	_isspace$1254,?_isspace
  6044  003382  6A0F               	clrf	?_isspace+1,c
  6045  003384  0012               	return		;funcret
  6046  003386                     __end_of_isspace:
  6047                           	opt callstack 0
  6048                           
  6049 ;; *************** function _isdigit *****************
  6050 ;; Defined at:
  6051 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  c               2   13[COMRAM] int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  2   13[COMRAM] int 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6065 ;;      Params:         2       0       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6068 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:        6 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    2
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_vfpfcnvrt
  6076 ;;		_atoi
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text26
  6081  003420                     __ptext26:
  6082                           	opt callstack 0
  6083  003420                     _isdigit:
  6084                           	opt callstack 25
  6085                           
  6086                           ;incstack = 0
  6087  003420  0ED0               	movlw	208
  6088  003422  6E10               	movwf	??_isdigit& (0+255),c
  6089  003424  0EFF               	movlw	255
  6090  003426  6E11               	movwf	(??_isdigit+1)& (0+255),c
  6091  003428  C00E  F012         	movff	isdigit@c,??_isdigit+2
  6092  00342C  C00F  F013         	movff	isdigit@c+1,??_isdigit+3
  6093  003430  5010               	movf	??_isdigit,w,c
  6094  003432  2612               	addwf	??_isdigit+2,f,c
  6095  003434  5011               	movf	??_isdigit+1,w,c
  6096  003436  2213               	addwfc	??_isdigit+3,f,c
  6097  003438  5013               	movf	??_isdigit+3,w,c
  6098  00343A  E106               	bnz	u5900
  6099  00343C  0E0A               	movlw	10
  6100  00343E  5C12               	subwf	??_isdigit+2,w,c
  6101  003440  B0D8               	btfsc	status,0,c
  6102  003442  D002               	goto	u5900
  6103  003444  0E01               	movlw	1
  6104  003446  D001               	goto	u5910
  6105  003448                     u5900:
  6106  003448  0E00               	movlw	0
  6107  00344A                     u5910:
  6108  00344A  6E0E               	movwf	?_isdigit,c
  6109  00344C  6A0F               	clrf	?_isdigit+1,c
  6110  00344E  0012               	return		;funcret
  6111  003450                     __end_of_isdigit:
  6112                           	opt callstack 0
  6113                           
  6114 ;; *************** function ___wmul *****************
  6115 ;; Defined at:
  6116 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  multiplier      2   13[COMRAM] unsigned int 
  6119 ;;  multiplicand    2   15[COMRAM] unsigned int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  product         2   17[COMRAM] unsigned int 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  2   13[COMRAM] unsigned int 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0, prodl, prodh
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6131 ;;      Params:         4       0       0       0       0       0       0       0       0
  6132 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6134 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6135 ;;Total ram usage:        6 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    2
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_atoi
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text27
  6146  0034A8                     __ptext27:
  6147                           	opt callstack 0
  6148  0034A8                     ___wmul:
  6149                           	opt callstack 24
  6150                           
  6151                           ;incstack = 0
  6152  0034A8  500E               	movf	___wmul@multiplier,w,c
  6153  0034AA  0210               	mulwf	___wmul@multiplicand,c
  6154  0034AC  CFF3 F012          	movff	prodl,___wmul@product
  6155  0034B0  CFF4 F013          	movff	prodh,___wmul@product+1
  6156  0034B4  500E               	movf	___wmul@multiplier,w,c
  6157  0034B6  0211               	mulwf	___wmul@multiplicand+1,c
  6158  0034B8  50F3               	movf	prodl,w,c
  6159  0034BA  2613               	addwf	___wmul@product+1,f,c
  6160  0034BC  500F               	movf	___wmul@multiplier+1,w,c
  6161  0034BE  0210               	mulwf	___wmul@multiplicand,c
  6162  0034C0  50F3               	movf	prodl,w,c
  6163  0034C2  2613               	addwf	___wmul@product+1,f,c
  6164  0034C4  C012  F00E         	movff	___wmul@product,?___wmul
  6165  0034C8  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  6166  0034CC  0012               	return		;funcret
  6167  0034CE                     __end_of___wmul:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _Servo_init *****************
  6171 ;; Defined at:
  6172 ;;		line 2 in file "./Servo.h"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    2
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_main
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text28
  6201  0034CE                     __ptext28:
  6202                           	opt callstack 0
  6203  0034CE                     _Servo_init:
  6204                           	opt callstack 28
  6205                           
  6206                           ;./Servo.h: 3:     INTCONbits.GIE=0;
  6207                           
  6208                           ;incstack = 0
  6209  0034CE  9EF2               	bcf	4082,7,c	;volatile
  6210                           
  6211                           ;./Servo.h: 4:     INTCONbits.PEIE = 1;
  6212  0034D0  8CF2               	bsf	4082,6,c	;volatile
  6213                           
  6214                           ;./Servo.h: 5:     INTCONbits.TMR0IE=1;
  6215  0034D2  8AF2               	bsf	4082,5,c	;volatile
  6216                           
  6217                           ;./Servo.h: 6:     INTCONbits.TMR0IF=0;
  6218  0034D4  94F2               	bcf	4082,2,c	;volatile
  6219                           
  6220                           ;./Servo.h: 7:     T0CONbits.T0CS=0;
  6221  0034D6  9AD5               	bcf	4053,5,c	;volatile
  6222                           
  6223                           ;./Servo.h: 8:     T0CONbits.T0PS=0b111;
  6224  0034D8  0E07               	movlw	7
  6225  0034DA  12D5               	iorwf	4053,f,c	;volatile
  6226                           
  6227                           ;./Servo.h: 9:     T0CONbits.PSA=0;
  6228  0034DC  96D5               	bcf	4053,3,c	;volatile
  6229                           
  6230                           ;./Servo.h: 10:     TMR0=21;
  6231  0034DE  0E00               	movlw	0
  6232  0034E0  6ED7               	movwf	4055,c	;volatile
  6233  0034E2  0E15               	movlw	21
  6234  0034E4  6ED6               	movwf	4054,c	;volatile
  6235                           
  6236                           ;./Servo.h: 11:     INTCONbits.GIE=1;
  6237  0034E6  8EF2               	bsf	4082,7,c	;volatile
  6238  0034E8  0012               	return		;funcret
  6239  0034EA                     __end_of_Servo_init:
  6240                           	opt callstack 0
  6241                           
  6242 ;; *************** function _Lcd_Out2 *****************
  6243 ;; Defined at:
  6244 ;;		line 115 in file "./flex_lcd.h"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  y               1    wreg     unsigned char 
  6247 ;;  x               1   16[COMRAM] unsigned char 
  6248 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  6249 ;;		 -> Prom(17), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  y               1   21[COMRAM] unsigned char 
  6252 ;;  data            1   22[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6262 ;;      Params:         3       0       0       0       0       0       0       0       0
  6263 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6265 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6266 ;;Total ram usage:        7 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    3
  6269 ;; This function calls:
  6270 ;;		_Lcd_Chr_CP
  6271 ;;		_Lcd_Cmd
  6272 ;; This function is called by:
  6273 ;;		_main
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text29
  6278  003144                     __ptext29:
  6279                           	opt callstack 0
  6280  003144                     _Lcd_Out2:
  6281                           	opt callstack 27
  6282                           
  6283                           ;incstack = 0
  6284                           ;Lcd_Out2@y stored from wreg
  6285  003144  6E16               	movwf	Lcd_Out2@y,c
  6286                           
  6287                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  6288  003146  D00D               	goto	l4270
  6289  003148                     l4260:
  6290  003148  5011               	movf	Lcd_Out2@x,w,c
  6291  00314A  0F80               	addlw	128
  6292  00314C  D008               	goto	L12
  6293  00314E                     l4262:
  6294  00314E  5011               	movf	Lcd_Out2@x,w,c
  6295  003150  0FC0               	addlw	192
  6296  003152  D005               	goto	L12
  6297  003154                     l4264:
  6298  003154  5011               	movf	Lcd_Out2@x,w,c
  6299  003156  0F94               	addlw	148
  6300  003158  D002               	goto	L12
  6301  00315A                     l4266:
  6302  00315A  5011               	movf	Lcd_Out2@x,w,c
  6303  00315C  0FD4               	addlw	212
  6304  00315E                     L12:
  6305  00315E  6E17               	movwf	Lcd_Out2@data,c
  6306  003160  D014               	goto	l4272
  6307  003162                     l4270:
  6308  003162  5016               	movf	Lcd_Out2@y,w,c
  6309  003164  6E14               	movwf	??_Lcd_Out2& (0+255),c
  6310  003166  6A15               	clrf	(??_Lcd_Out2+1)& (0+255),c
  6311                           
  6312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6313                           ; Switch size 1, requested type "simple"
  6314                           ; Number of cases is 1, Range of values is 0 to 0
  6315                           ; switch strategies available:
  6316                           ; Name         Instructions Cycles
  6317                           ; simple_byte            4     3 (average)
  6318                           ;	Chosen strategy is simple_byte
  6319  003168  5015               	movf	??_Lcd_Out2+1,w,c
  6320  00316A  0A00               	xorlw	0	; case 0
  6321  00316C  A4D8               	btfss	status,2,c
  6322  00316E  D00D               	goto	l4272
  6323                           
  6324                           ; Switch size 1, requested type "simple"
  6325                           ; Number of cases is 4, Range of values is 1 to 4
  6326                           ; switch strategies available:
  6327                           ; Name         Instructions Cycles
  6328                           ; simple_byte           13     7 (average)
  6329                           ;	Chosen strategy is simple_byte
  6330  003170  5014               	movf	??_Lcd_Out2,w,c
  6331  003172  0A01               	xorlw	1	; case 1
  6332  003174  B4D8               	btfsc	status,2,c
  6333  003176  D7E8               	goto	l4260
  6334  003178  0A03               	xorlw	3	; case 2
  6335  00317A  B4D8               	btfsc	status,2,c
  6336  00317C  D7E8               	goto	l4262
  6337  00317E  0A01               	xorlw	1	; case 3
  6338  003180  B4D8               	btfsc	status,2,c
  6339  003182  D7E8               	goto	l4264
  6340  003184  0A07               	xorlw	7	; case 4
  6341  003186  B4D8               	btfsc	status,2,c
  6342  003188  D7E8               	goto	l4266
  6343  00318A                     l4272:
  6344                           
  6345                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  6346  00318A  5017               	movf	Lcd_Out2@data,w,c
  6347  00318C  ECD7  F013         	call	_Lcd_Cmd
  6348                           
  6349                           ;./flex_lcd.h: 127: while(*buffer)
  6350  003190  D009               	goto	l4278
  6351  003192                     l4274:
  6352                           
  6353                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  6354  003192  C012  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  6355  003196  C013  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  6356  00319A  50DF               	movf	indf2,w,c
  6357  00319C  EC45  F013         	call	_Lcd_Chr_CP
  6358                           
  6359                           ;./flex_lcd.h: 130:     buffer++;
  6360  0031A0  4A12               	infsnz	Lcd_Out2@buffer,f,c
  6361  0031A2  2A13               	incf	Lcd_Out2@buffer+1,f,c
  6362  0031A4                     l4278:
  6363                           
  6364                           ;./flex_lcd.h: 127: while(*buffer)
  6365  0031A4  C012  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  6366  0031A8  C013  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  6367  0031AC  50DF               	movf	indf2,w,c
  6368  0031AE  B4D8               	btfsc	status,2,c
  6369  0031B0  0012               	return	
  6370  0031B2  D7EF               	goto	l4274
  6371  0031B4                     __end_of_Lcd_Out2:
  6372                           	opt callstack 0
  6373                           
  6374 ;; *************** function _Lcd_Out *****************
  6375 ;; Defined at:
  6376 ;;		line 94 in file "./flex_lcd.h"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  y               1    wreg     unsigned char 
  6379 ;;  x               1   16[COMRAM] unsigned char 
  6380 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6381 ;;		 -> STR_2(13), 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  y               1   21[COMRAM] unsigned char 
  6384 ;;  data            1   22[COMRAM] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6394 ;;      Params:         3       0       0       0       0       0       0       0       0
  6395 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6396 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6397 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6398 ;;Total ram usage:        7 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    3
  6401 ;; This function calls:
  6402 ;;		_Lcd_Chr_CP
  6403 ;;		_Lcd_Cmd
  6404 ;; This function is called by:
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text30
  6410  002FEA                     __ptext30:
  6411                           	opt callstack 0
  6412  002FEA                     _Lcd_Out:
  6413                           	opt callstack 27
  6414                           
  6415                           ;incstack = 0
  6416                           ;Lcd_Out@y stored from wreg
  6417  002FEA  6E16               	movwf	Lcd_Out@y,c
  6418                           
  6419                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  6420  002FEC  D00D               	goto	l4244
  6421  002FEE                     l4234:
  6422  002FEE  5011               	movf	Lcd_Out@x,w,c
  6423  002FF0  0F80               	addlw	128
  6424  002FF2  D008               	goto	L15
  6425  002FF4                     l4236:
  6426  002FF4  5011               	movf	Lcd_Out@x,w,c
  6427  002FF6  0FC0               	addlw	192
  6428  002FF8  D005               	goto	L15
  6429  002FFA                     l4238:
  6430  002FFA  5011               	movf	Lcd_Out@x,w,c
  6431  002FFC  0F94               	addlw	148
  6432  002FFE  D002               	goto	L15
  6433  003000                     l4240:
  6434  003000  5011               	movf	Lcd_Out@x,w,c
  6435  003002  0FD4               	addlw	212
  6436  003004                     L15:
  6437  003004  6E17               	movwf	Lcd_Out@data,c
  6438  003006  D014               	goto	l4246
  6439  003008                     l4244:
  6440  003008  5016               	movf	Lcd_Out@y,w,c
  6441  00300A  6E14               	movwf	??_Lcd_Out& (0+255),c
  6442  00300C  6A15               	clrf	(??_Lcd_Out+1)& (0+255),c
  6443                           
  6444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6445                           ; Switch size 1, requested type "simple"
  6446                           ; Number of cases is 1, Range of values is 0 to 0
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte            4     3 (average)
  6450                           ;	Chosen strategy is simple_byte
  6451  00300E  5015               	movf	??_Lcd_Out+1,w,c
  6452  003010  0A00               	xorlw	0	; case 0
  6453  003012  A4D8               	btfss	status,2,c
  6454  003014  D00D               	goto	l4246
  6455                           
  6456                           ; Switch size 1, requested type "simple"
  6457                           ; Number of cases is 4, Range of values is 1 to 4
  6458                           ; switch strategies available:
  6459                           ; Name         Instructions Cycles
  6460                           ; simple_byte           13     7 (average)
  6461                           ;	Chosen strategy is simple_byte
  6462  003016  5014               	movf	??_Lcd_Out,w,c
  6463  003018  0A01               	xorlw	1	; case 1
  6464  00301A  B4D8               	btfsc	status,2,c
  6465  00301C  D7E8               	goto	l4234
  6466  00301E  0A03               	xorlw	3	; case 2
  6467  003020  B4D8               	btfsc	status,2,c
  6468  003022  D7E8               	goto	l4236
  6469  003024  0A01               	xorlw	1	; case 3
  6470  003026  B4D8               	btfsc	status,2,c
  6471  003028  D7E8               	goto	l4238
  6472  00302A  0A07               	xorlw	7	; case 4
  6473  00302C  B4D8               	btfsc	status,2,c
  6474  00302E  D7E8               	goto	l4240
  6475  003030                     l4246:
  6476                           
  6477                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  6478  003030  5017               	movf	Lcd_Out@data,w,c
  6479  003032  ECD7  F013         	call	_Lcd_Cmd
  6480                           
  6481                           ;./flex_lcd.h: 106: while(*buffer)
  6482  003036  D00A               	goto	l4252
  6483  003038                     l4248:
  6484                           
  6485                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  6486  003038  C012  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6487  00303C  C013  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6488  003040                     	if	0	;tblptru may be non-zero
  6489  003040                     	endif
  6490  003040                     	if	0	;tblptru may be non-zero
  6491  003040                     	endif
  6492  003040  0008               	tblrd		*
  6493  003042  50F5               	movf	tablat,w,c
  6494  003044  EC45  F013         	call	_Lcd_Chr_CP
  6495                           
  6496                           ;./flex_lcd.h: 109:     buffer++;
  6497  003048  4A12               	infsnz	Lcd_Out@buffer,f,c
  6498  00304A  2A13               	incf	Lcd_Out@buffer+1,f,c
  6499  00304C                     l4252:
  6500                           
  6501                           ;./flex_lcd.h: 106: while(*buffer)
  6502  00304C  C012  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6503  003050  C013  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6504  003054                     	if	0	;tblptru may be non-zero
  6505  003054                     	endif
  6506  003054                     	if	0	;tblptru may be non-zero
  6507  003054                     	endif
  6508  003054  0008               	tblrd		*
  6509  003056  50F5               	movf	tablat,w,c
  6510  003058  0900               	iorlw	0
  6511  00305A  B4D8               	btfsc	status,2,c
  6512  00305C  0012               	return	
  6513  00305E  D7EC               	goto	l4248
  6514  003060                     __end_of_Lcd_Out:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _Lcd_Chr_CP *****************
  6518 ;; Defined at:
  6519 ;;		line 136 in file "./flex_lcd.h"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  data            1    wreg     unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  data            1   15[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6535 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6536 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        3 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    2
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_Lcd_Out
  6544 ;;		_Lcd_Out2
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text31
  6549  00268A                     __ptext31:
  6550                           	opt callstack 0
  6551  00268A                     _Lcd_Chr_CP:
  6552                           	opt callstack 27
  6553                           
  6554                           ;incstack = 0
  6555                           ;Lcd_Chr_CP@data stored from wreg
  6556  00268A  6E10               	movwf	Lcd_Chr_CP@data,c
  6557                           
  6558                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  6559  00268C  9A83               	bcf	3971,5,c	;volatile
  6560  00268E  8883               	bsf	3971,4,c	;volatile
  6561                           
  6562                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  6563  002690  6A0E               	clrf	??_Lcd_Chr_CP& (0+255),c
  6564  002692  AE10               	btfss	Lcd_Chr_CP@data,7,c
  6565  002694  D001               	bra	u4875
  6566  002696  2A0E               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6567  002698                     u4875:
  6568  002698  0E01               	movlw	1
  6569  00269A  160E               	andwf	??_Lcd_Chr_CP,f,c
  6570  00269C  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6571  00269E  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6572  0026A0  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6573  0026A2  5083               	movf	3971,w,c	;volatile
  6574  0026A4  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6575  0026A6  0BF7               	andlw	-9
  6576  0026A8  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6577  0026AA  6E83               	movwf	3971,c	;volatile
  6578  0026AC  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6579  0026B0  0E06               	movlw	6
  6580  0026B2  6E0F               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6581  0026B4                     u4885:
  6582  0026B4  90D8               	bcf	status,0,c
  6583  0026B6  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6584  0026B8  2E0F               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6585  0026BA  D7FC               	goto	u4885
  6586  0026BC  0E01               	movlw	1
  6587  0026BE  160E               	andwf	??_Lcd_Chr_CP,f,c
  6588  0026C0  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6589  0026C2  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6590  0026C4  5083               	movf	3971,w,c	;volatile
  6591  0026C6  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6592  0026C8  0BFB               	andlw	-5
  6593  0026CA  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6594  0026CC  6E83               	movwf	3971,c	;volatile
  6595                           
  6596                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  6597  0026CE  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6598  0026D2  0E05               	movlw	5
  6599  0026D4  6E0F               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6600  0026D6                     u4895:
  6601  0026D6  90D8               	bcf	status,0,c
  6602  0026D8  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6603  0026DA  2E0F               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6604  0026DC  D7FC               	goto	u4895
  6605  0026DE  0E01               	movlw	1
  6606  0026E0  160E               	andwf	??_Lcd_Chr_CP,f,c
  6607  0026E2  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6608  0026E4  5083               	movf	3971,w,c	;volatile
  6609  0026E6  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6610  0026E8  0BFD               	andlw	-3
  6611  0026EA  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6612  0026EC  6E83               	movwf	3971,c	;volatile
  6613  0026EE  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6614  0026F2  3A0E               	swapf	??_Lcd_Chr_CP,f,c
  6615  0026F4  0E0F               	movlw	15
  6616  0026F6  160E               	andwf	??_Lcd_Chr_CP,f,c
  6617  0026F8  0E01               	movlw	1
  6618  0026FA  160E               	andwf	??_Lcd_Chr_CP,f,c
  6619  0026FC  5083               	movf	3971,w,c	;volatile
  6620  0026FE  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6621  002700  0BFE               	andlw	-2
  6622  002702  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6623  002704  6E83               	movwf	3971,c	;volatile
  6624                           
  6625                           ;./flex_lcd.h: 140: _delay(10);
  6626  002706  0E03               	movlw	3
  6627  002708                     u7487:
  6628  002708  2EE8               	decfsz	wreg,f,c
  6629  00270A  D7FE               	bra	u7487
  6630  00270C  F000               	nop	
  6631                           
  6632                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  6633  00270E  8A83               	bsf	3971,5,c	;volatile
  6634  002710  0E05               	movlw	5
  6635  002712                     u7497:
  6636  002712  2EE8               	decfsz	wreg,f,c
  6637  002714  D7FE               	bra	u7497
  6638  002716  9A83               	bcf	3971,5,c	;volatile
  6639                           
  6640                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  6641  002718  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6642  00271C  90D8               	bcf	status,0,c
  6643  00271E  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6644  002720  90D8               	bcf	status,0,c
  6645  002722  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6646  002724  90D8               	bcf	status,0,c
  6647  002726  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6648  002728  0E01               	movlw	1
  6649  00272A  160E               	andwf	??_Lcd_Chr_CP,f,c
  6650  00272C  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6651  00272E  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6652  002730  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6653  002732  5083               	movf	3971,w,c	;volatile
  6654  002734  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6655  002736  0BF7               	andlw	-9
  6656  002738  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6657  00273A  6E83               	movwf	3971,c	;volatile
  6658  00273C  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6659  002740  90D8               	bcf	status,0,c
  6660  002742  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6661  002744  90D8               	bcf	status,0,c
  6662  002746  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6663  002748  0E01               	movlw	1
  6664  00274A  160E               	andwf	??_Lcd_Chr_CP,f,c
  6665  00274C  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6666  00274E  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6667  002750  5083               	movf	3971,w,c	;volatile
  6668  002752  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6669  002754  0BFB               	andlw	-5
  6670  002756  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6671  002758  6E83               	movwf	3971,c	;volatile
  6672                           
  6673                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  6674  00275A  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6675  00275E  90D8               	bcf	status,0,c
  6676  002760  320E               	rrcf	??_Lcd_Chr_CP,f,c
  6677  002762  0E01               	movlw	1
  6678  002764  160E               	andwf	??_Lcd_Chr_CP,f,c
  6679  002766  460E               	rlncf	??_Lcd_Chr_CP,f,c
  6680  002768  5083               	movf	3971,w,c	;volatile
  6681  00276A  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6682  00276C  0BFD               	andlw	-3
  6683  00276E  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6684  002770  6E83               	movwf	3971,c	;volatile
  6685  002772  C010  F00E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6686  002776  0E01               	movlw	1
  6687  002778  160E               	andwf	??_Lcd_Chr_CP,f,c
  6688  00277A  5083               	movf	3971,w,c	;volatile
  6689  00277C  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6690  00277E  0BFE               	andlw	-2
  6691  002780  180E               	xorwf	??_Lcd_Chr_CP,w,c
  6692  002782  6E83               	movwf	3971,c	;volatile
  6693                           
  6694                           ;./flex_lcd.h: 144: _delay(10);
  6695  002784  0E03               	movlw	3
  6696  002786                     u7507:
  6697  002786  2EE8               	decfsz	wreg,f,c
  6698  002788  D7FE               	bra	u7507
  6699  00278A  F000               	nop	
  6700                           
  6701                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  6702  00278C  8A83               	bsf	3971,5,c	;volatile
  6703  00278E  0E05               	movlw	5
  6704  002790                     u7517:
  6705  002790  2EE8               	decfsz	wreg,f,c
  6706  002792  D7FE               	bra	u7517
  6707  002794  9A83               	bcf	3971,5,c	;volatile
  6708                           
  6709                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(12000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(12000000/4000000.0)));
  6710  002796  0E05               	movlw	5
  6711  002798                     u7527:
  6712  002798  2EE8               	decfsz	wreg,f,c
  6713  00279A  D7FE               	bra	u7527
  6714  00279C  0E16               	movlw	22
  6715  00279E  6E0E               	movwf	??_Lcd_Chr_CP& (0+255),c
  6716  0027A0  0E6C               	movlw	108
  6717  0027A2                     u7537:
  6718  0027A2  2EE8               	decfsz	wreg,f,c
  6719  0027A4  D7FE               	bra	u7537
  6720  0027A6  2E0E               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6721  0027A8  D7FC               	bra	u7537
  6722  0027AA  D000               	nop2	
  6723  0027AC  0012               	return		;funcret
  6724  0027AE                     __end_of_Lcd_Chr_CP:
  6725                           	opt callstack 0
  6726                           
  6727 ;; *************** function _Lcd_Init *****************
  6728 ;; Defined at:
  6729 ;;		line 52 in file "./flex_lcd.h"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  data            1   17[COMRAM] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0
  6744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    3
  6750 ;; This function calls:
  6751 ;;		_Lcd_Cmd
  6752 ;; This function is called by:
  6753 ;;		_main
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text32
  6758  0028CC                     __ptext32:
  6759                           	opt callstack 0
  6760  0028CC                     _Lcd_Init:
  6761                           	opt callstack 27
  6762                           
  6763                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  6764                           
  6765                           ;incstack = 0
  6766  0028CC  9695               	bcf	3989,3,c	;volatile
  6767                           
  6768                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  6769  0028CE  9495               	bcf	3989,2,c	;volatile
  6770                           
  6771                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  6772  0028D0  9295               	bcf	3989,1,c	;volatile
  6773                           
  6774                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  6775  0028D2  9095               	bcf	3989,0,c	;volatile
  6776                           
  6777                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  6778  0028D4  9A95               	bcf	3989,5,c	;volatile
  6779                           
  6780                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  6781  0028D6  9895               	bcf	3989,4,c	;volatile
  6782                           
  6783                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  6784  0028D8  9683               	bcf	3971,3,c	;volatile
  6785                           
  6786                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  6787  0028DA  9483               	bcf	3971,2,c	;volatile
  6788                           
  6789                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  6790  0028DC  9283               	bcf	3971,1,c	;volatile
  6791                           
  6792                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  6793  0028DE  9083               	bcf	3971,0,c	;volatile
  6794                           
  6795                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
  6796  0028E0  9A83               	bcf	3971,5,c	;volatile
  6797                           
  6798                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
  6799  0028E2  9883               	bcf	3971,4,c	;volatile
  6800                           
  6801                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6802  0028E4  0E16               	movlw	22
  6803  0028E6  6E11               	movwf	??_Lcd_Init& (0+255),c
  6804  0028E8  0E6C               	movlw	108
  6805  0028EA                     u7547:
  6806  0028EA  2EE8               	decfsz	wreg,f,c
  6807  0028EC  D7FE               	bra	u7547
  6808  0028EE  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6809  0028F0  D7FC               	bra	u7547
  6810  0028F2  D000               	nop2	
  6811                           
  6812                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6813  0028F4  0E16               	movlw	22
  6814  0028F6  6E11               	movwf	??_Lcd_Init& (0+255),c
  6815  0028F8  0E6C               	movlw	108
  6816  0028FA                     u7557:
  6817  0028FA  2EE8               	decfsz	wreg,f,c
  6818  0028FC  D7FE               	bra	u7557
  6819  0028FE  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6820  002900  D7FC               	bra	u7557
  6821  002902  D000               	nop2	
  6822                           
  6823                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6824  002904  0E16               	movlw	22
  6825  002906  6E11               	movwf	??_Lcd_Init& (0+255),c
  6826  002908  0E6C               	movlw	108
  6827  00290A                     u7567:
  6828  00290A  2EE8               	decfsz	wreg,f,c
  6829  00290C  D7FE               	bra	u7567
  6830  00290E  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6831  002910  D7FC               	bra	u7567
  6832  002912  D000               	nop2	
  6833                           
  6834                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6835  002914  0E16               	movlw	22
  6836  002916  6E11               	movwf	??_Lcd_Init& (0+255),c
  6837  002918  0E6C               	movlw	108
  6838  00291A                     u7577:
  6839  00291A  2EE8               	decfsz	wreg,f,c
  6840  00291C  D7FE               	bra	u7577
  6841  00291E  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6842  002920  D7FC               	bra	u7577
  6843  002922  D000               	nop2	
  6844                           
  6845                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6846  002924  0E16               	movlw	22
  6847  002926  6E11               	movwf	??_Lcd_Init& (0+255),c
  6848  002928  0E6C               	movlw	108
  6849  00292A                     u7587:
  6850  00292A  2EE8               	decfsz	wreg,f,c
  6851  00292C  D7FE               	bra	u7587
  6852  00292E  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6853  002930  D7FC               	bra	u7587
  6854  002932  D000               	nop2	
  6855                           
  6856                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6857  002934  0E16               	movlw	22
  6858  002936  6E11               	movwf	??_Lcd_Init& (0+255),c
  6859  002938  0E6C               	movlw	108
  6860  00293A                     u7597:
  6861  00293A  2EE8               	decfsz	wreg,f,c
  6862  00293C  D7FE               	bra	u7597
  6863  00293E  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6864  002940  D7FC               	bra	u7597
  6865  002942  D000               	nop2	
  6866                           
  6867                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  6868  002944  0E01               	movlw	1
  6869  002946  6E12               	movwf	Lcd_Init@data,c
  6870  002948                     l43:
  6871                           
  6872                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
  6873  002948  9683               	bcf	3971,3,c	;volatile
  6874  00294A  9483               	bcf	3971,2,c	;volatile
  6875  00294C  8283               	bsf	3971,1,c	;volatile
  6876  00294E  8083               	bsf	3971,0,c	;volatile
  6877  002950  9A83               	bcf	3971,5,c	;volatile
  6878                           
  6879                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
  6880  002952  9883               	bcf	3971,4,c	;volatile
  6881  002954  9683               	bcf	3971,3,c	;volatile
  6882  002956  9483               	bcf	3971,2,c	;volatile
  6883  002958  8283               	bsf	3971,1,c	;volatile
  6884  00295A  8083               	bsf	3971,0,c	;volatile
  6885                           
  6886                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  6887  00295C  8A83               	bsf	3971,5,c	;volatile
  6888  00295E  9883               	bcf	3971,4,c	;volatile
  6889                           
  6890                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6891  002960  0E05               	movlw	5
  6892  002962                     u7607:
  6893  002962  2EE8               	decfsz	wreg,f,c
  6894  002964  D7FE               	bra	u7607
  6895                           
  6896                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
  6897  002966  9683               	bcf	3971,3,c	;volatile
  6898  002968  9483               	bcf	3971,2,c	;volatile
  6899  00296A  8283               	bsf	3971,1,c	;volatile
  6900  00296C  8083               	bsf	3971,0,c	;volatile
  6901  00296E  9A83               	bcf	3971,5,c	;volatile
  6902                           
  6903                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
  6904  002970  9883               	bcf	3971,4,c	;volatile
  6905                           
  6906                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6907  002972  0E16               	movlw	22
  6908  002974  6E11               	movwf	??_Lcd_Init& (0+255),c
  6909  002976  0E6C               	movlw	108
  6910  002978                     u7617:
  6911  002978  2EE8               	decfsz	wreg,f,c
  6912  00297A  D7FE               	bra	u7617
  6913  00297C  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6914  00297E  D7FC               	bra	u7617
  6915  002980  D000               	nop2	
  6916                           
  6917                           ;./flex_lcd.h: 81: }
  6918  002982  2A12               	incf	Lcd_Init@data,f,c
  6919  002984  0E03               	movlw	3
  6920  002986  6412               	cpfsgt	Lcd_Init@data,c
  6921  002988  D7DF               	goto	l43
  6922                           
  6923                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  6924  00298A  9683               	bcf	3971,3,c	;volatile
  6925  00298C  9483               	bcf	3971,2,c	;volatile
  6926  00298E  8283               	bsf	3971,1,c	;volatile
  6927  002990  9083               	bcf	3971,0,c	;volatile
  6928  002992  9A83               	bcf	3971,5,c	;volatile
  6929  002994  9883               	bcf	3971,4,c	;volatile
  6930                           
  6931                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  6932  002996  9683               	bcf	3971,3,c	;volatile
  6933  002998  9483               	bcf	3971,2,c	;volatile
  6934  00299A  8283               	bsf	3971,1,c	;volatile
  6935  00299C  9083               	bcf	3971,0,c	;volatile
  6936  00299E  8A83               	bsf	3971,5,c	;volatile
  6937  0029A0  9883               	bcf	3971,4,c	;volatile
  6938                           
  6939                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(12000000/4000000.0)));
  6940  0029A2  0E05               	movlw	5
  6941  0029A4                     u7627:
  6942  0029A4  2EE8               	decfsz	wreg,f,c
  6943  0029A6  D7FE               	bra	u7627
  6944                           
  6945                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  6946  0029A8  9683               	bcf	3971,3,c	;volatile
  6947  0029AA  9483               	bcf	3971,2,c	;volatile
  6948  0029AC  8283               	bsf	3971,1,c	;volatile
  6949  0029AE  9083               	bcf	3971,0,c	;volatile
  6950  0029B0  9A83               	bcf	3971,5,c	;volatile
  6951  0029B2  9883               	bcf	3971,4,c	;volatile
  6952                           
  6953                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6954  0029B4  0E16               	movlw	22
  6955  0029B6  6E11               	movwf	??_Lcd_Init& (0+255),c
  6956  0029B8  0E6C               	movlw	108
  6957  0029BA                     u7637:
  6958  0029BA  2EE8               	decfsz	wreg,f,c
  6959  0029BC  D7FE               	bra	u7637
  6960  0029BE  2E11               	decfsz	??_Lcd_Init& (0+255),f,c
  6961  0029C0  D7FC               	bra	u7637
  6962  0029C2  D000               	nop2	
  6963  0029C4  0E28               	movlw	40
  6964  0029C6  ECD7  F013         	call	_Lcd_Cmd
  6965  0029CA  0E10               	movlw	16
  6966  0029CC  ECD7  F013         	call	_Lcd_Cmd
  6967  0029D0  0E01               	movlw	1
  6968  0029D2  ECD7  F013         	call	_Lcd_Cmd
  6969  0029D6  0E0F               	movlw	15
  6970  0029D8  ECD7  F013         	call	_Lcd_Cmd
  6971  0029DC  0012               	return		;funcret
  6972  0029DE                     __end_of_Lcd_Init:
  6973                           	opt callstack 0
  6974                           
  6975 ;; *************** function _Lcd_Cmd *****************
  6976 ;; Defined at:
  6977 ;;		line 150 in file "./flex_lcd.h"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  data            1    wreg     unsigned char 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  data            1   15[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0
  6992 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6993 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6994 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6995 ;;Total ram usage:        3 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    2
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_Lcd_Init
  7002 ;;		_Lcd_Out
  7003 ;;		_Lcd_Out2
  7004 ;;		_main
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text33
  7009  0027AE                     __ptext33:
  7010                           	opt callstack 0
  7011  0027AE                     _Lcd_Cmd:
  7012                           	opt callstack 27
  7013                           
  7014                           ;incstack = 0
  7015                           ;Lcd_Cmd@data stored from wreg
  7016  0027AE  6E10               	movwf	Lcd_Cmd@data,c
  7017                           
  7018                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  7019  0027B0  9A83               	bcf	3971,5,c	;volatile
  7020  0027B2  9883               	bcf	3971,4,c	;volatile
  7021                           
  7022                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  7023  0027B4  6A0E               	clrf	??_Lcd_Cmd& (0+255),c
  7024  0027B6  AE10               	btfss	Lcd_Cmd@data,7,c
  7025  0027B8  D001               	bra	u4845
  7026  0027BA  2A0E               	incf	??_Lcd_Cmd& (0+255),f,c
  7027  0027BC                     u4845:
  7028  0027BC  0E01               	movlw	1
  7029  0027BE  160E               	andwf	??_Lcd_Cmd,f,c
  7030  0027C0  460E               	rlncf	??_Lcd_Cmd,f,c
  7031  0027C2  460E               	rlncf	??_Lcd_Cmd,f,c
  7032  0027C4  460E               	rlncf	??_Lcd_Cmd,f,c
  7033  0027C6  5083               	movf	3971,w,c	;volatile
  7034  0027C8  180E               	xorwf	??_Lcd_Cmd,w,c
  7035  0027CA  0BF7               	andlw	-9
  7036  0027CC  180E               	xorwf	??_Lcd_Cmd,w,c
  7037  0027CE  6E83               	movwf	3971,c	;volatile
  7038  0027D0  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7039  0027D4  0E06               	movlw	6
  7040  0027D6  6E0F               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7041  0027D8                     u4855:
  7042  0027D8  90D8               	bcf	status,0,c
  7043  0027DA  320E               	rrcf	??_Lcd_Cmd,f,c
  7044  0027DC  2E0F               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7045  0027DE  D7FC               	goto	u4855
  7046  0027E0  0E01               	movlw	1
  7047  0027E2  160E               	andwf	??_Lcd_Cmd,f,c
  7048  0027E4  460E               	rlncf	??_Lcd_Cmd,f,c
  7049  0027E6  460E               	rlncf	??_Lcd_Cmd,f,c
  7050  0027E8  5083               	movf	3971,w,c	;volatile
  7051  0027EA  180E               	xorwf	??_Lcd_Cmd,w,c
  7052  0027EC  0BFB               	andlw	-5
  7053  0027EE  180E               	xorwf	??_Lcd_Cmd,w,c
  7054  0027F0  6E83               	movwf	3971,c	;volatile
  7055                           
  7056                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  7057  0027F2  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7058  0027F6  0E05               	movlw	5
  7059  0027F8  6E0F               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7060  0027FA                     u4865:
  7061  0027FA  90D8               	bcf	status,0,c
  7062  0027FC  320E               	rrcf	??_Lcd_Cmd,f,c
  7063  0027FE  2E0F               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7064  002800  D7FC               	goto	u4865
  7065  002802  0E01               	movlw	1
  7066  002804  160E               	andwf	??_Lcd_Cmd,f,c
  7067  002806  460E               	rlncf	??_Lcd_Cmd,f,c
  7068  002808  5083               	movf	3971,w,c	;volatile
  7069  00280A  180E               	xorwf	??_Lcd_Cmd,w,c
  7070  00280C  0BFD               	andlw	-3
  7071  00280E  180E               	xorwf	??_Lcd_Cmd,w,c
  7072  002810  6E83               	movwf	3971,c	;volatile
  7073  002812  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7074  002816  3A0E               	swapf	??_Lcd_Cmd,f,c
  7075  002818  0E0F               	movlw	15
  7076  00281A  160E               	andwf	??_Lcd_Cmd,f,c
  7077  00281C  0E01               	movlw	1
  7078  00281E  160E               	andwf	??_Lcd_Cmd,f,c
  7079  002820  5083               	movf	3971,w,c	;volatile
  7080  002822  180E               	xorwf	??_Lcd_Cmd,w,c
  7081  002824  0BFE               	andlw	-2
  7082  002826  180E               	xorwf	??_Lcd_Cmd,w,c
  7083  002828  6E83               	movwf	3971,c	;volatile
  7084                           
  7085                           ;./flex_lcd.h: 154: _delay(10);
  7086  00282A  0E03               	movlw	3
  7087  00282C                     u7647:
  7088  00282C  2EE8               	decfsz	wreg,f,c
  7089  00282E  D7FE               	bra	u7647
  7090  002830  F000               	nop	
  7091                           
  7092                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  7093  002832  8A83               	bsf	3971,5,c	;volatile
  7094  002834  0E05               	movlw	5
  7095  002836                     u7657:
  7096  002836  2EE8               	decfsz	wreg,f,c
  7097  002838  D7FE               	bra	u7657
  7098  00283A  9A83               	bcf	3971,5,c	;volatile
  7099                           
  7100                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  7101  00283C  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7102  002840  90D8               	bcf	status,0,c
  7103  002842  320E               	rrcf	??_Lcd_Cmd,f,c
  7104  002844  90D8               	bcf	status,0,c
  7105  002846  320E               	rrcf	??_Lcd_Cmd,f,c
  7106  002848  90D8               	bcf	status,0,c
  7107  00284A  320E               	rrcf	??_Lcd_Cmd,f,c
  7108  00284C  0E01               	movlw	1
  7109  00284E  160E               	andwf	??_Lcd_Cmd,f,c
  7110  002850  460E               	rlncf	??_Lcd_Cmd,f,c
  7111  002852  460E               	rlncf	??_Lcd_Cmd,f,c
  7112  002854  460E               	rlncf	??_Lcd_Cmd,f,c
  7113  002856  5083               	movf	3971,w,c	;volatile
  7114  002858  180E               	xorwf	??_Lcd_Cmd,w,c
  7115  00285A  0BF7               	andlw	-9
  7116  00285C  180E               	xorwf	??_Lcd_Cmd,w,c
  7117  00285E  6E83               	movwf	3971,c	;volatile
  7118  002860  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7119  002864  90D8               	bcf	status,0,c
  7120  002866  320E               	rrcf	??_Lcd_Cmd,f,c
  7121  002868  90D8               	bcf	status,0,c
  7122  00286A  320E               	rrcf	??_Lcd_Cmd,f,c
  7123  00286C  0E01               	movlw	1
  7124  00286E  160E               	andwf	??_Lcd_Cmd,f,c
  7125  002870  460E               	rlncf	??_Lcd_Cmd,f,c
  7126  002872  460E               	rlncf	??_Lcd_Cmd,f,c
  7127  002874  5083               	movf	3971,w,c	;volatile
  7128  002876  180E               	xorwf	??_Lcd_Cmd,w,c
  7129  002878  0BFB               	andlw	-5
  7130  00287A  180E               	xorwf	??_Lcd_Cmd,w,c
  7131  00287C  6E83               	movwf	3971,c	;volatile
  7132                           
  7133                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  7134  00287E  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7135  002882  90D8               	bcf	status,0,c
  7136  002884  320E               	rrcf	??_Lcd_Cmd,f,c
  7137  002886  0E01               	movlw	1
  7138  002888  160E               	andwf	??_Lcd_Cmd,f,c
  7139  00288A  460E               	rlncf	??_Lcd_Cmd,f,c
  7140  00288C  5083               	movf	3971,w,c	;volatile
  7141  00288E  180E               	xorwf	??_Lcd_Cmd,w,c
  7142  002890  0BFD               	andlw	-3
  7143  002892  180E               	xorwf	??_Lcd_Cmd,w,c
  7144  002894  6E83               	movwf	3971,c	;volatile
  7145  002896  C010  F00E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7146  00289A  0E01               	movlw	1
  7147  00289C  160E               	andwf	??_Lcd_Cmd,f,c
  7148  00289E  5083               	movf	3971,w,c	;volatile
  7149  0028A0  180E               	xorwf	??_Lcd_Cmd,w,c
  7150  0028A2  0BFE               	andlw	-2
  7151  0028A4  180E               	xorwf	??_Lcd_Cmd,w,c
  7152  0028A6  6E83               	movwf	3971,c	;volatile
  7153                           
  7154                           ;./flex_lcd.h: 158: _delay(10);
  7155  0028A8  0E03               	movlw	3
  7156  0028AA                     u7667:
  7157  0028AA  2EE8               	decfsz	wreg,f,c
  7158  0028AC  D7FE               	bra	u7667
  7159  0028AE  F000               	nop	
  7160                           
  7161                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  7162  0028B0  8A83               	bsf	3971,5,c	;volatile
  7163  0028B2  0E05               	movlw	5
  7164  0028B4                     u7677:
  7165  0028B4  2EE8               	decfsz	wreg,f,c
  7166  0028B6  D7FE               	bra	u7677
  7167  0028B8  9A83               	bcf	3971,5,c	;volatile
  7168                           
  7169                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7170  0028BA  0E16               	movlw	22
  7171  0028BC  6E0E               	movwf	??_Lcd_Cmd& (0+255),c
  7172  0028BE  0E6C               	movlw	108
  7173  0028C0                     u7687:
  7174  0028C0  2EE8               	decfsz	wreg,f,c
  7175  0028C2  D7FE               	bra	u7687
  7176  0028C4  2E0E               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7177  0028C6  D7FC               	bra	u7687
  7178  0028C8  D000               	nop2	
  7179  0028CA  0012               	return		;funcret
  7180  0028CC                     __end_of_Lcd_Cmd:
  7181                           	opt callstack 0
  7182                           
  7183 ;; *************** function _ADC_Init *****************
  7184 ;; Defined at:
  7185 ;;		line 5 in file "./ADC.h"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  entradas        2   13[COMRAM] int 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  valor           2   17[COMRAM] int 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7199 ;;      Params:         2       0       0       0       0       0       0       0       0
  7200 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7201 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7202 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7203 ;;Total ram usage:        6 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    2
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           	psect	text34
  7214  003060                     __ptext34:
  7215                           	opt callstack 0
  7216  003060                     _ADC_Init:
  7217                           	opt callstack 28
  7218                           
  7219                           ;./ADC.h: 6:     int valor=15-entradas;
  7220                           
  7221                           ;incstack = 0
  7222  003060  500E               	movf	ADC_Init@entradas,w,c
  7223  003062  080F               	sublw	15
  7224  003064  6E12               	movwf	ADC_Init@valor,c
  7225  003066  500F               	movf	ADC_Init@entradas+1,w,c
  7226  003068  A0D8               	btfss	status,0,c
  7227  00306A  2AE8               	incf	wreg,f,c
  7228  00306C  0800               	sublw	0
  7229  00306E  6E13               	movwf	ADC_Init@valor+1,c
  7230                           
  7231                           ;./ADC.h: 7:     ADCON1bits.VCFG=0;
  7232  003070  0ECF               	movlw	-49
  7233  003072  16C1               	andwf	4033,f,c	;volatile
  7234                           
  7235                           ;./ADC.h: 8:     ADCON1bits.PCFG=valor;
  7236  003074  50C1               	movf	4033,w,c	;volatile
  7237  003076  1812               	xorwf	ADC_Init@valor,w,c
  7238  003078  0BF0               	andlw	-16
  7239  00307A  1812               	xorwf	ADC_Init@valor,w,c
  7240  00307C  6EC1               	movwf	4033,c	;volatile
  7241                           
  7242                           ;./ADC.h: 9:     ADCON2bits.ADFM=1;
  7243  00307E  8EC0               	bsf	4032,7,c	;volatile
  7244                           
  7245                           ;./ADC.h: 10:     ADCON2bits.ACQT=0b010;
  7246  003080  50C0               	movf	4032,w,c	;volatile
  7247  003082  0BC7               	andlw	-57
  7248  003084  0910               	iorlw	16
  7249  003086  6EC0               	movwf	4032,c	;volatile
  7250                           
  7251                           ;./ADC.h: 11:     ADCON2bits.ADCS=0b101;
  7252  003088  50C0               	movf	4032,w,c	;volatile
  7253  00308A  0BF8               	andlw	-8
  7254  00308C  0905               	iorlw	5
  7255  00308E  6EC0               	movwf	4032,c	;volatile
  7256                           
  7257                           ;./ADC.h: 12:     switch(entradas){
  7258  003090  D009               	goto	l4302
  7259  003092                     l4292:
  7260                           
  7261                           ;./ADC.h: 14:             TRISA=0x01;
  7262  003092  0E01               	movlw	1
  7263  003094  D005               	goto	L18
  7264  003096                     l4294:
  7265                           
  7266                           ;./ADC.h: 18:             TRISA=0x03;
  7267  003096  0E03               	movlw	3
  7268  003098  D003               	goto	L18
  7269  00309A                     l4296:
  7270                           
  7271                           ;./ADC.h: 22:             TRISA=0x07;
  7272  00309A  0E07               	movlw	7
  7273  00309C  D001               	goto	L18
  7274  00309E                     l4298:
  7275                           
  7276                           ;./ADC.h: 26:             TRISA=0x0F;
  7277  00309E  0E0F               	movlw	15
  7278  0030A0                     L18:
  7279  0030A0  6E92               	movwf	3986,c	;volatile
  7280                           
  7281                           ;./ADC.h: 27:             break;
  7282  0030A2  D015               	goto	l4304
  7283  0030A4                     l4302:
  7284  0030A4  C00E  F010         	movff	ADC_Init@entradas,??_ADC_Init
  7285  0030A8  C00F  F011         	movff	ADC_Init@entradas+1,??_ADC_Init+1
  7286                           
  7287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7288                           ; Switch size 1, requested type "simple"
  7289                           ; Number of cases is 1, Range of values is 0 to 0
  7290                           ; switch strategies available:
  7291                           ; Name         Instructions Cycles
  7292                           ; simple_byte            4     3 (average)
  7293                           ;	Chosen strategy is simple_byte
  7294  0030AC  5011               	movf	??_ADC_Init+1,w,c
  7295  0030AE  0A00               	xorlw	0	; case 0
  7296  0030B0  A4D8               	btfss	status,2,c
  7297  0030B2  D00D               	goto	l4304
  7298                           
  7299                           ; Switch size 1, requested type "simple"
  7300                           ; Number of cases is 4, Range of values is 1 to 4
  7301                           ; switch strategies available:
  7302                           ; Name         Instructions Cycles
  7303                           ; simple_byte           13     7 (average)
  7304                           ;	Chosen strategy is simple_byte
  7305  0030B4  5010               	movf	??_ADC_Init,w,c
  7306  0030B6  0A01               	xorlw	1	; case 1
  7307  0030B8  B4D8               	btfsc	status,2,c
  7308  0030BA  D7EB               	goto	l4292
  7309  0030BC  0A03               	xorlw	3	; case 2
  7310  0030BE  B4D8               	btfsc	status,2,c
  7311  0030C0  D7EA               	goto	l4294
  7312  0030C2  0A01               	xorlw	1	; case 3
  7313  0030C4  B4D8               	btfsc	status,2,c
  7314  0030C6  D7E9               	goto	l4296
  7315  0030C8  0A07               	xorlw	7	; case 4
  7316  0030CA  B4D8               	btfsc	status,2,c
  7317  0030CC  D7E8               	goto	l4298
  7318  0030CE                     l4304:
  7319                           
  7320                           ;./ADC.h: 30:     LATA=0x00;
  7321  0030CE  0E00               	movlw	0
  7322  0030D0  6E89               	movwf	3977,c	;volatile
  7323  0030D2  0012               	return		;funcret
  7324  0030D4                     __end_of_ADC_Init:
  7325                           	opt callstack 0
  7326                           
  7327 ;; *************** function _ADC_Channel *****************
  7328 ;; Defined at:
  7329 ;;		line 32 in file "./ADC.h"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  Puerto          2   63[COMRAM] int 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  4   63[COMRAM] float 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7343 ;;      Params:         4       0       0       0       0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7345 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7346 ;;      Totals:         4       4       0       0       0       0       0       0       0
  7347 ;;Total ram usage:        8 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    3
  7350 ;; This function calls:
  7351 ;;		___fldiv
  7352 ;;		___flmul
  7353 ;;		___xxtofl
  7354 ;; This function is called by:
  7355 ;;		_main
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text35
  7360  002192                     __ptext35:
  7361                           	opt callstack 0
  7362  002192                     _ADC_Channel:
  7363                           	opt callstack 27
  7364                           
  7365                           ;./ADC.h: 33:     if(Puerto>12){
  7366                           
  7367                           ;incstack = 0
  7368  002192  BE41               	btfsc	ADC_Channel@Puerto+1,7,c
  7369  002194  D00F               	goto	l5808
  7370  002196  5041               	movf	ADC_Channel@Puerto+1,w,c
  7371  002198  E104               	bnz	u7430
  7372  00219A  0E0D               	movlw	13
  7373  00219C  5C40               	subwf	ADC_Channel@Puerto,w,c
  7374  00219E  A0D8               	btfss	status,0,c
  7375  0021A0  D009               	goto	l5808
  7376  0021A2                     u7430:
  7377                           
  7378                           ;./ADC.h: 34:         return 0;
  7379  0021A2  0E00               	movlw	0
  7380  0021A4  6E40               	movwf	?_ADC_Channel,c
  7381  0021A6  0E00               	movlw	0
  7382  0021A8  6E41               	movwf	?_ADC_Channel+1,c
  7383  0021AA  0E00               	movlw	0
  7384  0021AC  6E42               	movwf	?_ADC_Channel+2,c
  7385  0021AE  0E00               	movlw	0
  7386  0021B0  6E43               	movwf	?_ADC_Channel+3,c
  7387  0021B2  0012               	return	
  7388  0021B4                     l5808:
  7389                           
  7390                           ;./ADC.h: 36:     ADCON0bits.CHS=Puerto;
  7391  0021B4  C040  F060         	movff	ADC_Channel@Puerto,??_ADC_Channel
  7392  0021B8  0100               	movlb	0	; () banked
  7393  0021BA  4760               	rlncf	??_ADC_Channel& (0+255),f,b
  7394  0021BC  4760               	rlncf	??_ADC_Channel& (0+255),f,b
  7395  0021BE  50C2               	movf	4034,w,c	;volatile
  7396  0021C0  1960               	xorwf	??_ADC_Channel& (0+255),w,b
  7397  0021C2  0BC3               	andlw	-61
  7398  0021C4  1960               	xorwf	??_ADC_Channel& (0+255),w,b
  7399  0021C6  6EC2               	movwf	4034,c	;volatile
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;./ADC.h: 37:     ADCON0bits.ADON = 1;
  7403  0021C8  80C2               	bsf	4034,0,c	;volatile
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;./ADC.h: 38:     ADCON0bits.GO_DONE = 1;
  7407  0021CA  82C2               	bsf	4034,1,c	;volatile
  7408                           
  7409                           ;./ADC.h: 39:     while(ADCON0bits.GO_DONE==1){
  7410  0021CC  D088               	goto	l95
  7411  0021CE                     l5814:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;./ADC.h: 40:        ADC[Puerto]=ADRES;
  7415  0021CE  CFC3 F00E          	movff	4035,___xxtofl@val	;volatile
  7416  0021D2  CFC4 F00F          	movff	4036,___xxtofl@val+1	;volatile
  7417  0021D6  6A10               	clrf	___xxtofl@val+2,c
  7418  0021D8  6A11               	clrf	___xxtofl@val+3,c
  7419  0021DA  0E00               	movlw	0
  7420  0021DC  EC12  F012         	call	___xxtofl
  7421  0021E0  0E30               	movlw	low _ADC
  7422  0021E2  0100               	movlb	0	; () banked
  7423  0021E4  6F60               	movwf	??_ADC_Channel& (0+255),b
  7424  0021E6  0E01               	movlw	high _ADC
  7425  0021E8  6F61               	movwf	(??_ADC_Channel+1)& (0+255),b
  7426  0021EA  90D8               	bcf	status,0,c
  7427  0021EC  3440               	rlcf	ADC_Channel@Puerto,w,c
  7428  0021EE  6ED9               	movwf	fsr2l,c
  7429  0021F0  3441               	rlcf	ADC_Channel@Puerto+1,w,c
  7430  0021F2  6EDA               	movwf	fsr2h,c
  7431  0021F4  90D8               	bcf	status,0,c
  7432  0021F6  36D9               	rlcf	fsr2l,f,c
  7433  0021F8  36DA               	rlcf	fsr2h,f,c
  7434  0021FA  5160               	movf	??_ADC_Channel& (0+255),w,b
  7435  0021FC  26D9               	addwf	fsr2l,f,c
  7436  0021FE  5161               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7437  002200  22DA               	addwfc	fsr2h,f,c
  7438  002202  C00E  FFDE         	movff	?___xxtofl,postinc2
  7439  002206  C00F  FFDE         	movff	?___xxtofl+1,postinc2
  7440  00220A  C010  FFDE         	movff	?___xxtofl+2,postinc2
  7441  00220E  C011  FFDE         	movff	?___xxtofl+3,postinc2
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;./ADC.h: 41:        ADC[Puerto]=(ADC[Puerto]*5.0)/1023;
  7445  002212  0E00               	movlw	0
  7446  002214  6E12               	movwf	___flmul@a,c
  7447  002216  0E00               	movlw	0
  7448  002218  6E13               	movwf	___flmul@a+1,c
  7449  00221A  0EA0               	movlw	160
  7450  00221C  6E14               	movwf	___flmul@a+2,c
  7451  00221E  0E40               	movlw	64
  7452  002220  6E15               	movwf	___flmul@a+3,c
  7453  002222  0E30               	movlw	low _ADC
  7454  002224  6F60               	movwf	??_ADC_Channel& (0+255),b
  7455  002226  0E01               	movlw	high _ADC
  7456  002228  6F61               	movwf	(??_ADC_Channel+1)& (0+255),b
  7457  00222A  90D8               	bcf	status,0,c
  7458  00222C  3440               	rlcf	ADC_Channel@Puerto,w,c
  7459  00222E  6ED9               	movwf	fsr2l,c
  7460  002230  3441               	rlcf	ADC_Channel@Puerto+1,w,c
  7461  002232  6EDA               	movwf	fsr2h,c
  7462  002234  90D8               	bcf	status,0,c
  7463  002236  36D9               	rlcf	fsr2l,f,c
  7464  002238  36DA               	rlcf	fsr2h,f,c
  7465  00223A  5160               	movf	??_ADC_Channel& (0+255),w,b
  7466  00223C  26D9               	addwf	fsr2l,f,c
  7467  00223E  5161               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7468  002240  22DA               	addwfc	fsr2h,f,c
  7469  002242  CFDE F00E          	movff	postinc2,___flmul@b
  7470  002246  CFDE F00F          	movff	postinc2,___flmul@b+1
  7471  00224A  CFDE F010          	movff	postinc2,___flmul@b+2
  7472  00224E  CFDE F011          	movff	postinc2,___flmul@b+3
  7473  002252  ECAB  F00A         	call	___flmul	;wreg free
  7474  002256  C00E  F027         	movff	?___flmul,___fldiv@b
  7475  00225A  C00F  F028         	movff	?___flmul+1,___fldiv@b+1
  7476  00225E  C010  F029         	movff	?___flmul+2,___fldiv@b+2
  7477  002262  C011  F02A         	movff	?___flmul+3,___fldiv@b+3
  7478  002266  0E00               	movlw	0
  7479  002268  6E2B               	movwf	___fldiv@a,c
  7480  00226A  0EC0               	movlw	192
  7481  00226C  6E2C               	movwf	___fldiv@a+1,c
  7482  00226E  0E7F               	movlw	127
  7483  002270  6E2D               	movwf	___fldiv@a+2,c
  7484  002272  0E44               	movlw	68
  7485  002274  6E2E               	movwf	___fldiv@a+3,c
  7486  002276  ECDA  F00D         	call	___fldiv	;wreg free
  7487  00227A  0E30               	movlw	low _ADC
  7488  00227C  0100               	movlb	0	; () banked
  7489  00227E  6F62               	movwf	(??_ADC_Channel+2)& (0+255),b
  7490  002280  0E01               	movlw	high _ADC
  7491  002282  6F63               	movwf	(??_ADC_Channel+3)& (0+255),b
  7492  002284  90D8               	bcf	status,0,c
  7493  002286  3440               	rlcf	ADC_Channel@Puerto,w,c
  7494  002288  6ED9               	movwf	fsr2l,c
  7495  00228A  3441               	rlcf	ADC_Channel@Puerto+1,w,c
  7496  00228C  6EDA               	movwf	fsr2h,c
  7497  00228E  90D8               	bcf	status,0,c
  7498  002290  36D9               	rlcf	fsr2l,f,c
  7499  002292  36DA               	rlcf	fsr2h,f,c
  7500  002294  5162               	movf	(??_ADC_Channel+2)& (0+255),w,b
  7501  002296  26D9               	addwf	fsr2l,f,c
  7502  002298  5163               	movf	(??_ADC_Channel+3)& (0+255),w,b
  7503  00229A  22DA               	addwfc	fsr2h,f,c
  7504  00229C  C027  FFDE         	movff	?___fldiv,postinc2
  7505  0022A0  C028  FFDE         	movff	?___fldiv+1,postinc2
  7506  0022A4  C029  FFDE         	movff	?___fldiv+2,postinc2
  7507  0022A8  C02A  FFDE         	movff	?___fldiv+3,postinc2
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;./ADC.h: 42:         return ADC[Puerto];
  7511  0022AC  0E30               	movlw	low _ADC
  7512  0022AE  6F60               	movwf	??_ADC_Channel& (0+255),b
  7513  0022B0  0E01               	movlw	high _ADC
  7514  0022B2  6F61               	movwf	(??_ADC_Channel+1)& (0+255),b
  7515  0022B4  90D8               	bcf	status,0,c
  7516  0022B6  3440               	rlcf	ADC_Channel@Puerto,w,c
  7517  0022B8  6ED9               	movwf	fsr2l,c
  7518  0022BA  3441               	rlcf	ADC_Channel@Puerto+1,w,c
  7519  0022BC  6EDA               	movwf	fsr2h,c
  7520  0022BE  90D8               	bcf	status,0,c
  7521  0022C0  36D9               	rlcf	fsr2l,f,c
  7522  0022C2  36DA               	rlcf	fsr2h,f,c
  7523  0022C4  5160               	movf	??_ADC_Channel& (0+255),w,b
  7524  0022C6  26D9               	addwf	fsr2l,f,c
  7525  0022C8  5161               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7526  0022CA  22DA               	addwfc	fsr2h,f,c
  7527  0022CC  CFDE F040          	movff	postinc2,?_ADC_Channel
  7528  0022D0  CFDE F041          	movff	postinc2,?_ADC_Channel+1
  7529  0022D4  CFDE F042          	movff	postinc2,?_ADC_Channel+2
  7530  0022D8  CFDE F043          	movff	postinc2,?_ADC_Channel+3
  7531  0022DC  0012               	return	
  7532  0022DE                     l95:
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;./ADC.h: 39:     while(ADCON0bits.GO_DONE==1){
  7536  0022DE  A2C2               	btfss	4034,1,c	;volatile
  7537  0022E0  0012               	return	
  7538  0022E2  D775               	goto	l5814
  7539  0022E4                     __end_of_ADC_Channel:
  7540                           	opt callstack 0
  7541                           
  7542 ;; *************** function ___xxtofl *****************
  7543 ;; Defined at:
  7544 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  sign            1    wreg     unsigned char 
  7547 ;;  val             4   13[COMRAM] long 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  sign            1   21[COMRAM] unsigned char 
  7550 ;;  arg             4   23[COMRAM] unsigned long 
  7551 ;;  exp             1   22[COMRAM] unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  4   13[COMRAM] unsigned char 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0
  7562 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7563 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7564 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7565 ;;Total ram usage:       14 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    2
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_ADC_Channel
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text36
  7576  002424                     __ptext36:
  7577                           	opt callstack 0
  7578  002424                     ___xxtofl:
  7579                           	opt callstack 27
  7580                           
  7581                           ;incstack = 0
  7582                           ;___xxtofl@sign stored from wreg
  7583  002424  6E16               	movwf	___xxtofl@sign,c
  7584  002426  5016               	movf	___xxtofl@sign,w,c
  7585  002428  A4D8               	btfss	status,2,c
  7586  00242A  AE11               	btfss	___xxtofl@val+3,7,c
  7587  00242C  D01A               	goto	l961
  7588  00242E  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  7589  002432  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  7590  002436  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  7591  00243A  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  7592  00243E  1E12               	comf	??___xxtofl,f,c
  7593  002440  1E13               	comf	??___xxtofl+1,f,c
  7594  002442  1E14               	comf	??___xxtofl+2,f,c
  7595  002444  1E15               	comf	??___xxtofl+3,f,c
  7596  002446  2A12               	incf	??___xxtofl,f,c
  7597  002448  0E00               	movlw	0
  7598  00244A  2213               	addwfc	??___xxtofl+1,f,c
  7599  00244C  2214               	addwfc	??___xxtofl+2,f,c
  7600  00244E  2215               	addwfc	??___xxtofl+3,f,c
  7601  002450  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  7602  002454  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  7603  002458  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  7604  00245C  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  7605  002460  D008               	goto	l4136
  7606  002462                     l961:
  7607  002462  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  7608  002466  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7609  00246A  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7610  00246E  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7611  002472                     l4136:
  7612  002472  500E               	movf	___xxtofl@val,w,c
  7613  002474  100F               	iorwf	___xxtofl@val+1,w,c
  7614  002476  1010               	iorwf	___xxtofl@val+2,w,c
  7615  002478  1011               	iorwf	___xxtofl@val+3,w,c
  7616  00247A  A4D8               	btfss	status,2,c
  7617  00247C  D009               	goto	l4142
  7618  00247E  0E00               	movlw	0
  7619  002480  6E0E               	movwf	?___xxtofl,c
  7620  002482  0E00               	movlw	0
  7621  002484  6E0F               	movwf	?___xxtofl+1,c
  7622  002486  0E00               	movlw	0
  7623  002488  6E10               	movwf	?___xxtofl+2,c
  7624  00248A  0E00               	movlw	0
  7625  00248C  6E11               	movwf	?___xxtofl+3,c
  7626  00248E  0012               	return	
  7627  002490                     l4142:
  7628  002490  0E96               	movlw	150
  7629  002492  6E17               	movwf	___xxtofl@exp,c
  7630  002494  D006               	goto	l4146
  7631  002496                     l4144:
  7632  002496  2A17               	incf	___xxtofl@exp,f,c
  7633  002498  90D8               	bcf	status,0,c
  7634  00249A  321B               	rrcf	___xxtofl@arg+3,f,c
  7635  00249C  321A               	rrcf	___xxtofl@arg+2,f,c
  7636  00249E  3219               	rrcf	___xxtofl@arg+1,f,c
  7637  0024A0  3218               	rrcf	___xxtofl@arg,f,c
  7638  0024A2                     l4146:
  7639  0024A2  0E00               	movlw	0
  7640  0024A4  1418               	andwf	___xxtofl@arg,w,c
  7641  0024A6  6E12               	movwf	??___xxtofl& (0+255),c
  7642  0024A8  0E00               	movlw	0
  7643  0024AA  1419               	andwf	___xxtofl@arg+1,w,c
  7644  0024AC  6E13               	movwf	(??___xxtofl+1)& (0+255),c
  7645  0024AE  0E00               	movlw	0
  7646  0024B0  141A               	andwf	___xxtofl@arg+2,w,c
  7647  0024B2  6E14               	movwf	(??___xxtofl+2)& (0+255),c
  7648  0024B4  0EFE               	movlw	254
  7649  0024B6  141B               	andwf	___xxtofl@arg+3,w,c
  7650  0024B8  6E15               	movwf	(??___xxtofl+3)& (0+255),c
  7651  0024BA  5012               	movf	??___xxtofl,w,c
  7652  0024BC  1013               	iorwf	??___xxtofl+1,w,c
  7653  0024BE  1014               	iorwf	??___xxtofl+2,w,c
  7654  0024C0  1015               	iorwf	??___xxtofl+3,w,c
  7655  0024C2  B4D8               	btfsc	status,2,c
  7656  0024C4  D00D               	goto	l968
  7657  0024C6  D7E7               	goto	l4144
  7658  0024C8                     l4148:
  7659  0024C8  2A17               	incf	___xxtofl@exp,f,c
  7660  0024CA  0E01               	movlw	1
  7661  0024CC  2618               	addwf	___xxtofl@arg,f,c
  7662  0024CE  0E00               	movlw	0
  7663  0024D0  2219               	addwfc	___xxtofl@arg+1,f,c
  7664  0024D2  221A               	addwfc	___xxtofl@arg+2,f,c
  7665  0024D4  221B               	addwfc	___xxtofl@arg+3,f,c
  7666  0024D6  90D8               	bcf	status,0,c
  7667  0024D8  321B               	rrcf	___xxtofl@arg+3,f,c
  7668  0024DA  321A               	rrcf	___xxtofl@arg+2,f,c
  7669  0024DC  3219               	rrcf	___xxtofl@arg+1,f,c
  7670  0024DE  3218               	rrcf	___xxtofl@arg,f,c
  7671  0024E0                     l968:
  7672  0024E0  0E00               	movlw	0
  7673  0024E2  1418               	andwf	___xxtofl@arg,w,c
  7674  0024E4  6E12               	movwf	??___xxtofl& (0+255),c
  7675  0024E6  0E00               	movlw	0
  7676  0024E8  1419               	andwf	___xxtofl@arg+1,w,c
  7677  0024EA  6E13               	movwf	(??___xxtofl+1)& (0+255),c
  7678  0024EC  0E00               	movlw	0
  7679  0024EE  141A               	andwf	___xxtofl@arg+2,w,c
  7680  0024F0  6E14               	movwf	(??___xxtofl+2)& (0+255),c
  7681  0024F2  0EFF               	movlw	255
  7682  0024F4  141B               	andwf	___xxtofl@arg+3,w,c
  7683  0024F6  6E15               	movwf	(??___xxtofl+3)& (0+255),c
  7684  0024F8  5012               	movf	??___xxtofl,w,c
  7685  0024FA  1013               	iorwf	??___xxtofl+1,w,c
  7686  0024FC  1014               	iorwf	??___xxtofl+2,w,c
  7687  0024FE  1015               	iorwf	??___xxtofl+3,w,c
  7688  002500  B4D8               	btfsc	status,2,c
  7689  002502  D007               	goto	l4156
  7690  002504  D7E1               	goto	l4148
  7691  002506                     l4154:
  7692  002506  0617               	decf	___xxtofl@exp,f,c
  7693  002508  90D8               	bcf	status,0,c
  7694  00250A  3618               	rlcf	___xxtofl@arg,f,c
  7695  00250C  3619               	rlcf	___xxtofl@arg+1,f,c
  7696  00250E  361A               	rlcf	___xxtofl@arg+2,f,c
  7697  002510  361B               	rlcf	___xxtofl@arg+3,f,c
  7698  002512                     l4156:
  7699  002512  BE1A               	btfsc	___xxtofl@arg+2,7,c
  7700  002514  D003               	goto	u4970
  7701  002516  0E02               	movlw	2
  7702  002518  6017               	cpfslt	___xxtofl@exp,c
  7703  00251A  D7F5               	goto	l4154
  7704  00251C                     u4970:
  7705  00251C  A017               	btfss	___xxtofl@exp,0,c
  7706  00251E  9E1A               	bcf	___xxtofl@arg+2,7,c
  7707  002520  90D8               	bcf	status,0,c
  7708  002522  3217               	rrcf	___xxtofl@exp,f,c
  7709  002524  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  7710  002528  6A13               	clrf	(??___xxtofl+1)& (0+255),c
  7711  00252A  6A14               	clrf	(??___xxtofl+2)& (0+255),c
  7712  00252C  6A15               	clrf	(??___xxtofl+3)& (0+255),c
  7713  00252E  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  7714  002532  6A14               	clrf	??___xxtofl+2,c
  7715  002534  6A13               	clrf	??___xxtofl+1,c
  7716  002536  6A12               	clrf	??___xxtofl,c
  7717  002538  5012               	movf	??___xxtofl,w,c
  7718  00253A  1218               	iorwf	___xxtofl@arg,f,c
  7719  00253C  5013               	movf	??___xxtofl+1,w,c
  7720  00253E  1219               	iorwf	___xxtofl@arg+1,f,c
  7721  002540  5014               	movf	??___xxtofl+2,w,c
  7722  002542  121A               	iorwf	___xxtofl@arg+2,f,c
  7723  002544  5015               	movf	??___xxtofl+3,w,c
  7724  002546  121B               	iorwf	___xxtofl@arg+3,f,c
  7725  002548  5016               	movf	___xxtofl@sign,w,c
  7726  00254A  A4D8               	btfss	status,2,c
  7727  00254C  AE11               	btfss	___xxtofl@val+3,7,c
  7728  00254E  D001               	goto	l4172
  7729  002550  8E1B               	bsf	___xxtofl@arg+3,7,c
  7730  002552                     l4172:
  7731  002552  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  7732  002556  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  7733  00255A  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  7734  00255E  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  7735  002562  0012               	return		;funcret
  7736  002564                     __end_of___xxtofl:
  7737                           	opt callstack 0
  7738                           
  7739 ;; *************** function ___flmul *****************
  7740 ;; Defined at:
  7741 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  b               4   13[COMRAM] unsigned char 
  7744 ;;  a               4   17[COMRAM] unsigned char 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  prod            4   32[COMRAM] struct .
  7747 ;;  grs             4   27[COMRAM] unsigned long 
  7748 ;;  temp            2   36[COMRAM] struct .
  7749 ;;  bexp            1   31[COMRAM] unsigned char 
  7750 ;;  aexp            1   26[COMRAM] unsigned char 
  7751 ;;  sign            1   25[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  4   13[COMRAM] unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, prodl, prodh
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7761 ;;      Params:         8       0       0       0       0       0       0       0       0
  7762 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7763 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7764 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7765 ;;Total ram usage:       25 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    2
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_ADC_Channel
  7772 ;;		_efgtoa
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text37
  7777  001556                     __ptext37:
  7778                           	opt callstack 0
  7779  001556                     ___flmul:
  7780                           	opt callstack 24
  7781                           
  7782                           ;incstack = 0
  7783  001556  5011               	movf	___flmul@b+3,w,c
  7784  001558  0B80               	andlw	128
  7785  00155A  6E1A               	movwf	___flmul@sign,c
  7786  00155C  5011               	movf	___flmul@b+3,w,c
  7787  00155E  2411               	addwf	___flmul@b+3,w,c
  7788  001560  6E20               	movwf	___flmul@bexp,c
  7789  001562  BE10               	btfsc	___flmul@b+2,7,c
  7790  001564  8020               	bsf	___flmul@bexp,0,c
  7791  001566  5020               	movf	___flmul@bexp,w,c
  7792  001568  B4D8               	btfsc	status,2,c
  7793  00156A  D00D               	goto	l5040
  7794  00156C  2820               	incf	___flmul@bexp,w,c
  7795  00156E  A4D8               	btfss	status,2,c
  7796  001570  D008               	goto	l5038
  7797  001572  0E00               	movlw	0
  7798  001574  6E0E               	movwf	___flmul@b,c
  7799  001576  0E00               	movlw	0
  7800  001578  6E0F               	movwf	___flmul@b+1,c
  7801  00157A  0E00               	movlw	0
  7802  00157C  6E10               	movwf	___flmul@b+2,c
  7803  00157E  0E00               	movlw	0
  7804  001580  6E11               	movwf	___flmul@b+3,c
  7805  001582                     l5038:
  7806  001582  8E10               	bsf	___flmul@b+2,7,c
  7807  001584  D008               	goto	l5042
  7808  001586                     l5040:
  7809  001586  0E00               	movlw	0
  7810  001588  6E0E               	movwf	___flmul@b,c
  7811  00158A  0E00               	movlw	0
  7812  00158C  6E0F               	movwf	___flmul@b+1,c
  7813  00158E  0E00               	movlw	0
  7814  001590  6E10               	movwf	___flmul@b+2,c
  7815  001592  0E00               	movlw	0
  7816  001594  6E11               	movwf	___flmul@b+3,c
  7817  001596                     l5042:
  7818  001596  5015               	movf	___flmul@a+3,w,c
  7819  001598  0B80               	andlw	128
  7820  00159A  1A1A               	xorwf	___flmul@sign,f,c
  7821  00159C  5015               	movf	___flmul@a+3,w,c
  7822  00159E  2415               	addwf	___flmul@a+3,w,c
  7823  0015A0  6E1B               	movwf	___flmul@aexp,c
  7824  0015A2  BE14               	btfsc	___flmul@a+2,7,c
  7825  0015A4  801B               	bsf	___flmul@aexp,0,c
  7826  0015A6  501B               	movf	___flmul@aexp,w,c
  7827  0015A8  B4D8               	btfsc	status,2,c
  7828  0015AA  D00D               	goto	l5058
  7829  0015AC  281B               	incf	___flmul@aexp,w,c
  7830  0015AE  A4D8               	btfss	status,2,c
  7831  0015B0  D008               	goto	l5056
  7832  0015B2  0E00               	movlw	0
  7833  0015B4  6E12               	movwf	___flmul@a,c
  7834  0015B6  0E00               	movlw	0
  7835  0015B8  6E13               	movwf	___flmul@a+1,c
  7836  0015BA  0E00               	movlw	0
  7837  0015BC  6E14               	movwf	___flmul@a+2,c
  7838  0015BE  0E00               	movlw	0
  7839  0015C0  6E15               	movwf	___flmul@a+3,c
  7840  0015C2                     l5056:
  7841  0015C2  8E14               	bsf	___flmul@a+2,7,c
  7842  0015C4  D008               	goto	l920
  7843  0015C6                     l5058:
  7844  0015C6  0E00               	movlw	0
  7845  0015C8  6E12               	movwf	___flmul@a,c
  7846  0015CA  0E00               	movlw	0
  7847  0015CC  6E13               	movwf	___flmul@a+1,c
  7848  0015CE  0E00               	movlw	0
  7849  0015D0  6E14               	movwf	___flmul@a+2,c
  7850  0015D2  0E00               	movlw	0
  7851  0015D4  6E15               	movwf	___flmul@a+3,c
  7852  0015D6                     l920:
  7853  0015D6  501B               	movf	___flmul@aexp,w,c
  7854  0015D8  B4D8               	btfsc	status,2,c
  7855  0015DA  D003               	goto	u6220
  7856  0015DC  5020               	movf	___flmul@bexp,w,c
  7857  0015DE  A4D8               	btfss	status,2,c
  7858  0015E0  D009               	goto	l5066
  7859  0015E2                     u6220:
  7860  0015E2  0E00               	movlw	0
  7861  0015E4  6E0E               	movwf	?___flmul,c
  7862  0015E6  0E00               	movlw	0
  7863  0015E8  6E0F               	movwf	?___flmul+1,c
  7864  0015EA  0E00               	movlw	0
  7865  0015EC  6E10               	movwf	?___flmul+2,c
  7866  0015EE  0E00               	movlw	0
  7867  0015F0  6E11               	movwf	?___flmul+3,c
  7868  0015F2  0012               	return	
  7869  0015F4                     l5066:
  7870  0015F4  5014               	movf	___flmul@a+2,w,c
  7871  0015F6  020E               	mulwf	___flmul@b,c
  7872  0015F8  CFF3 F025          	movff	prodl,___flmul@temp
  7873  0015FC  CFF4 F026          	movff	prodh,___flmul@temp+1
  7874  001600  5025               	movf	___flmul@temp,w,c
  7875  001602  6E1C               	movwf	___flmul@grs,c
  7876  001604  6A1D               	clrf	___flmul@grs+1,c
  7877  001606  6A1E               	clrf	___flmul@grs+2,c
  7878  001608  6A1F               	clrf	___flmul@grs+3,c
  7879  00160A  5026               	movf	___flmul@temp+1,w,c
  7880  00160C  6E21               	movwf	___flmul@prod,c
  7881  00160E  6A22               	clrf	___flmul@prod+1,c
  7882  001610  6A23               	clrf	___flmul@prod+2,c
  7883  001612  6A24               	clrf	___flmul@prod+3,c
  7884  001614  5013               	movf	___flmul@a+1,w,c
  7885  001616  020F               	mulwf	___flmul@b+1,c
  7886  001618  CFF3 F025          	movff	prodl,___flmul@temp
  7887  00161C  CFF4 F026          	movff	prodh,___flmul@temp+1
  7888  001620  5025               	movf	___flmul@temp,w,c
  7889  001622  261C               	addwf	___flmul@grs,f,c
  7890  001624  0E00               	movlw	0
  7891  001626  221D               	addwfc	___flmul@grs+1,f,c
  7892  001628  221E               	addwfc	___flmul@grs+2,f,c
  7893  00162A  221F               	addwfc	___flmul@grs+3,f,c
  7894  00162C  5026               	movf	___flmul@temp+1,w,c
  7895  00162E  2621               	addwf	___flmul@prod,f,c
  7896  001630  0E00               	movlw	0
  7897  001632  2222               	addwfc	___flmul@prod+1,f,c
  7898  001634  2223               	addwfc	___flmul@prod+2,f,c
  7899  001636  2224               	addwfc	___flmul@prod+3,f,c
  7900  001638  5012               	movf	___flmul@a,w,c
  7901  00163A  0210               	mulwf	___flmul@b+2,c
  7902  00163C  CFF3 F025          	movff	prodl,___flmul@temp
  7903  001640  CFF4 F026          	movff	prodh,___flmul@temp+1
  7904  001644  5025               	movf	___flmul@temp,w,c
  7905  001646  261C               	addwf	___flmul@grs,f,c
  7906  001648  0E00               	movlw	0
  7907  00164A  221D               	addwfc	___flmul@grs+1,f,c
  7908  00164C  221E               	addwfc	___flmul@grs+2,f,c
  7909  00164E  221F               	addwfc	___flmul@grs+3,f,c
  7910  001650  5026               	movf	___flmul@temp+1,w,c
  7911  001652  2621               	addwf	___flmul@prod,f,c
  7912  001654  0E00               	movlw	0
  7913  001656  2222               	addwfc	___flmul@prod+1,f,c
  7914  001658  2223               	addwfc	___flmul@prod+2,f,c
  7915  00165A  2224               	addwfc	___flmul@prod+3,f,c
  7916  00165C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7917  001660  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7918  001664  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7919  001668  6A1C               	clrf	___flmul@grs,c
  7920  00166A  5012               	movf	___flmul@a,w,c
  7921  00166C  020F               	mulwf	___flmul@b+1,c
  7922  00166E  CFF3 F025          	movff	prodl,___flmul@temp
  7923  001672  CFF4 F026          	movff	prodh,___flmul@temp+1
  7924  001676  5025               	movf	___flmul@temp,w,c
  7925  001678  261C               	addwf	___flmul@grs,f,c
  7926  00167A  5026               	movf	___flmul@temp+1,w,c
  7927  00167C  221D               	addwfc	___flmul@grs+1,f,c
  7928  00167E  0E00               	movlw	0
  7929  001680  221E               	addwfc	___flmul@grs+2,f,c
  7930  001682  0E00               	movlw	0
  7931  001684  221F               	addwfc	___flmul@grs+3,f,c
  7932  001686  5013               	movf	___flmul@a+1,w,c
  7933  001688  020E               	mulwf	___flmul@b,c
  7934  00168A  CFF3 F025          	movff	prodl,___flmul@temp
  7935  00168E  CFF4 F026          	movff	prodh,___flmul@temp+1
  7936  001692  5025               	movf	___flmul@temp,w,c
  7937  001694  261C               	addwf	___flmul@grs,f,c
  7938  001696  5026               	movf	___flmul@temp+1,w,c
  7939  001698  221D               	addwfc	___flmul@grs+1,f,c
  7940  00169A  0E00               	movlw	0
  7941  00169C  221E               	addwfc	___flmul@grs+2,f,c
  7942  00169E  0E00               	movlw	0
  7943  0016A0  221F               	addwfc	___flmul@grs+3,f,c
  7944  0016A2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7945  0016A6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7946  0016AA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7947  0016AE  6A1C               	clrf	___flmul@grs,c
  7948  0016B0  5012               	movf	___flmul@a,w,c
  7949  0016B2  020E               	mulwf	___flmul@b,c
  7950  0016B4  CFF3 F025          	movff	prodl,___flmul@temp
  7951  0016B8  CFF4 F026          	movff	prodh,___flmul@temp+1
  7952  0016BC  5025               	movf	___flmul@temp,w,c
  7953  0016BE  261C               	addwf	___flmul@grs,f,c
  7954  0016C0  5026               	movf	___flmul@temp+1,w,c
  7955  0016C2  221D               	addwfc	___flmul@grs+1,f,c
  7956  0016C4  0E00               	movlw	0
  7957  0016C6  221E               	addwfc	___flmul@grs+2,f,c
  7958  0016C8  0E00               	movlw	0
  7959  0016CA  221F               	addwfc	___flmul@grs+3,f,c
  7960  0016CC  5014               	movf	___flmul@a+2,w,c
  7961  0016CE  020F               	mulwf	___flmul@b+1,c
  7962  0016D0  CFF3 F025          	movff	prodl,___flmul@temp
  7963  0016D4  CFF4 F026          	movff	prodh,___flmul@temp+1
  7964  0016D8  5025               	movf	___flmul@temp,w,c
  7965  0016DA  2621               	addwf	___flmul@prod,f,c
  7966  0016DC  5026               	movf	___flmul@temp+1,w,c
  7967  0016DE  2222               	addwfc	___flmul@prod+1,f,c
  7968  0016E0  0E00               	movlw	0
  7969  0016E2  2223               	addwfc	___flmul@prod+2,f,c
  7970  0016E4  0E00               	movlw	0
  7971  0016E6  2224               	addwfc	___flmul@prod+3,f,c
  7972  0016E8  5013               	movf	___flmul@a+1,w,c
  7973  0016EA  0210               	mulwf	___flmul@b+2,c
  7974  0016EC  CFF3 F025          	movff	prodl,___flmul@temp
  7975  0016F0  CFF4 F026          	movff	prodh,___flmul@temp+1
  7976  0016F4  5025               	movf	___flmul@temp,w,c
  7977  0016F6  2621               	addwf	___flmul@prod,f,c
  7978  0016F8  5026               	movf	___flmul@temp+1,w,c
  7979  0016FA  2222               	addwfc	___flmul@prod+1,f,c
  7980  0016FC  0E00               	movlw	0
  7981  0016FE  2223               	addwfc	___flmul@prod+2,f,c
  7982  001700  0E00               	movlw	0
  7983  001702  2224               	addwfc	___flmul@prod+3,f,c
  7984  001704  5014               	movf	___flmul@a+2,w,c
  7985  001706  0210               	mulwf	___flmul@b+2,c
  7986  001708  CFF3 F025          	movff	prodl,___flmul@temp
  7987  00170C  CFF4 F026          	movff	prodh,___flmul@temp+1
  7988  001710  5025               	movf	___flmul@temp,w,c
  7989  001712  6E16               	movwf	??___flmul& (0+255),c
  7990  001714  5026               	movf	___flmul@temp+1,w,c
  7991  001716  6E17               	movwf	(??___flmul+1)& (0+255),c
  7992  001718  6A18               	clrf	(??___flmul+2)& (0+255),c
  7993  00171A  6A19               	clrf	(??___flmul+3)& (0+255),c
  7994  00171C  C018  F019         	movff	??___flmul+2,??___flmul+3
  7995  001720  C017  F018         	movff	??___flmul+1,??___flmul+2
  7996  001724  C016  F017         	movff	??___flmul,??___flmul+1
  7997  001728  6A16               	clrf	??___flmul,c
  7998  00172A  5016               	movf	??___flmul,w,c
  7999  00172C  2621               	addwf	___flmul@prod,f,c
  8000  00172E  5017               	movf	??___flmul+1,w,c
  8001  001730  2222               	addwfc	___flmul@prod+1,f,c
  8002  001732  5018               	movf	??___flmul+2,w,c
  8003  001734  2223               	addwfc	___flmul@prod+2,f,c
  8004  001736  5019               	movf	??___flmul+3,w,c
  8005  001738  2224               	addwfc	___flmul@prod+3,f,c
  8006  00173A  C01C  F016         	movff	___flmul@grs,??___flmul
  8007  00173E  C01D  F017         	movff	___flmul@grs+1,??___flmul+1
  8008  001742  C01E  F018         	movff	___flmul@grs+2,??___flmul+2
  8009  001746  C01F  F019         	movff	___flmul@grs+3,??___flmul+3
  8010  00174A  0E19               	movlw	25
  8011  00174C  D005               	goto	u6230
  8012  00174E                     u6235:
  8013  00174E  90D8               	bcf	status,0,c
  8014  001750  3219               	rrcf	??___flmul+3,f,c
  8015  001752  3218               	rrcf	??___flmul+2,f,c
  8016  001754  3217               	rrcf	??___flmul+1,f,c
  8017  001756  3216               	rrcf	??___flmul,f,c
  8018  001758                     u6230:
  8019  001758  2EE8               	decfsz	wreg,f,c
  8020  00175A  D7F9               	goto	u6235
  8021  00175C  5016               	movf	??___flmul,w,c
  8022  00175E  2621               	addwf	___flmul@prod,f,c
  8023  001760  5017               	movf	??___flmul+1,w,c
  8024  001762  2222               	addwfc	___flmul@prod+1,f,c
  8025  001764  5018               	movf	??___flmul+2,w,c
  8026  001766  2223               	addwfc	___flmul@prod+2,f,c
  8027  001768  5019               	movf	??___flmul+3,w,c
  8028  00176A  2224               	addwfc	___flmul@prod+3,f,c
  8029  00176C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8030  001770  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8031  001774  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8032  001778  6A1C               	clrf	___flmul@grs,c
  8033  00177A  501B               	movf	___flmul@aexp,w,c
  8034  00177C  C020  F016         	movff	___flmul@bexp,??___flmul
  8035  001780  6A17               	clrf	(??___flmul+1)& (0+255),c
  8036  001782  2616               	addwf	??___flmul,f,c
  8037  001784  0E00               	movlw	0
  8038  001786  2217               	addwfc	??___flmul+1,f,c
  8039  001788  0E82               	movlw	130
  8040  00178A  2416               	addwf	??___flmul,w,c
  8041  00178C  6E25               	movwf	___flmul@temp,c
  8042  00178E  0EFF               	movlw	255
  8043  001790  2017               	addwfc	??___flmul+1,w,c
  8044  001792  6E26               	movwf	___flmul@temp+1,c
  8045  001794  D00F               	goto	l5114
  8046  001796                     l5108:
  8047  001796  90D8               	bcf	status,0,c
  8048  001798  3621               	rlcf	___flmul@prod,f,c
  8049  00179A  3622               	rlcf	___flmul@prod+1,f,c
  8050  00179C  3623               	rlcf	___flmul@prod+2,f,c
  8051  00179E  3624               	rlcf	___flmul@prod+3,f,c
  8052  0017A0  BE1F               	btfsc	___flmul@grs+3,7,c
  8053  0017A2  8021               	bsf	___flmul@prod,0,c
  8054  0017A4  90D8               	bcf	status,0,c
  8055  0017A6  361C               	rlcf	___flmul@grs,f,c
  8056  0017A8  361D               	rlcf	___flmul@grs+1,f,c
  8057  0017AA  361E               	rlcf	___flmul@grs+2,f,c
  8058  0017AC  361F               	rlcf	___flmul@grs+3,f,c
  8059  0017AE  0625               	decf	___flmul@temp,f,c
  8060  0017B0  A0D8               	btfss	status,0,c
  8061  0017B2  0626               	decf	___flmul@temp+1,f,c
  8062  0017B4                     l5114:
  8063  0017B4  AE23               	btfss	___flmul@prod+2,7,c
  8064  0017B6  D7EF               	goto	l5108
  8065  0017B8  0E00               	movlw	0
  8066  0017BA  6E1B               	movwf	___flmul@aexp,c
  8067  0017BC  AE1F               	btfss	___flmul@grs+3,7,c
  8068  0017BE  D017               	goto	l929
  8069  0017C0  0EFF               	movlw	255
  8070  0017C2  141C               	andwf	___flmul@grs,w,c
  8071  0017C4  6E16               	movwf	??___flmul& (0+255),c
  8072  0017C6  0EFF               	movlw	255
  8073  0017C8  141D               	andwf	___flmul@grs+1,w,c
  8074  0017CA  6E17               	movwf	(??___flmul+1)& (0+255),c
  8075  0017CC  0EFF               	movlw	255
  8076  0017CE  141E               	andwf	___flmul@grs+2,w,c
  8077  0017D0  6E18               	movwf	(??___flmul+2)& (0+255),c
  8078  0017D2  0E7F               	movlw	127
  8079  0017D4  141F               	andwf	___flmul@grs+3,w,c
  8080  0017D6  6E19               	movwf	(??___flmul+3)& (0+255),c
  8081  0017D8  5016               	movf	??___flmul,w,c
  8082  0017DA  1017               	iorwf	??___flmul+1,w,c
  8083  0017DC  1018               	iorwf	??___flmul+2,w,c
  8084  0017DE  1019               	iorwf	??___flmul+3,w,c
  8085  0017E0  B4D8               	btfsc	status,2,c
  8086  0017E2  D003               	goto	l930
  8087  0017E4                     u6270:
  8088  0017E4  0E01               	movlw	1
  8089  0017E6  6E1B               	movwf	___flmul@aexp,c
  8090  0017E8  D002               	goto	l929
  8091  0017EA                     l930:
  8092  0017EA  B021               	btfsc	___flmul@prod,0,c
  8093  0017EC  D7FB               	goto	u6270
  8094  0017EE                     l929:
  8095  0017EE  501B               	movf	___flmul@aexp,w,c
  8096  0017F0  B4D8               	btfsc	status,2,c
  8097  0017F2  D01F               	goto	l5134
  8098  0017F4  0E01               	movlw	1
  8099  0017F6  2621               	addwf	___flmul@prod,f,c
  8100  0017F8  0E00               	movlw	0
  8101  0017FA  2222               	addwfc	___flmul@prod+1,f,c
  8102  0017FC  2223               	addwfc	___flmul@prod+2,f,c
  8103  0017FE  2224               	addwfc	___flmul@prod+3,f,c
  8104  001800  A024               	btfss	___flmul@prod+3,0,c
  8105  001802  D017               	goto	l5134
  8106  001804  C021  F016         	movff	___flmul@prod,??___flmul
  8107  001808  C022  F017         	movff	___flmul@prod+1,??___flmul+1
  8108  00180C  C023  F018         	movff	___flmul@prod+2,??___flmul+2
  8109  001810  C024  F019         	movff	___flmul@prod+3,??___flmul+3
  8110  001814  3419               	rlcf	??___flmul+3,w,c
  8111  001816  3219               	rrcf	??___flmul+3,f,c
  8112  001818  3218               	rrcf	??___flmul+2,f,c
  8113  00181A  3217               	rrcf	??___flmul+1,f,c
  8114  00181C  3216               	rrcf	??___flmul,f,c
  8115  00181E  C016  F021         	movff	??___flmul,___flmul@prod
  8116  001822  C017  F022         	movff	??___flmul+1,___flmul@prod+1
  8117  001826  C018  F023         	movff	??___flmul+2,___flmul@prod+2
  8118  00182A  C019  F024         	movff	??___flmul+3,___flmul@prod+3
  8119  00182E  4A25               	infsnz	___flmul@temp,f,c
  8120  001830  2A26               	incf	___flmul@temp+1,f,c
  8121  001832                     l5134:
  8122  001832  BE26               	btfsc	___flmul@temp+1,7,c
  8123  001834  D00D               	goto	l5138
  8124  001836  5026               	movf	___flmul@temp+1,w,c
  8125  001838  E103               	bnz	u6310
  8126  00183A  2825               	incf	___flmul@temp,w,c
  8127  00183C  A0D8               	btfss	status,0,c
  8128  00183E  D008               	goto	l5138
  8129  001840                     u6310:
  8130  001840  0E00               	movlw	0
  8131  001842  6E21               	movwf	___flmul@prod,c
  8132  001844  0E00               	movlw	0
  8133  001846  6E22               	movwf	___flmul@prod+1,c
  8134  001848  0E80               	movlw	128
  8135  00184A  6E23               	movwf	___flmul@prod+2,c
  8136  00184C  0E7F               	movlw	127
  8137  00184E  D020               	goto	L19
  8138  001850                     l5138:
  8139  001850  BE26               	btfsc	___flmul@temp+1,7,c
  8140  001852  D005               	goto	u6320
  8141  001854  5026               	movf	___flmul@temp+1,w,c
  8142  001856  E10E               	bnz	l937
  8143  001858  0425               	decf	___flmul@temp,w,c
  8144  00185A  B0D8               	btfsc	status,0,c
  8145  00185C  D00B               	goto	l937
  8146  00185E                     u6320:
  8147  00185E  0E00               	movlw	0
  8148  001860  6E21               	movwf	___flmul@prod,c
  8149  001862  0E00               	movlw	0
  8150  001864  6E22               	movwf	___flmul@prod+1,c
  8151  001866  0E00               	movlw	0
  8152  001868  6E23               	movwf	___flmul@prod+2,c
  8153  00186A  0E00               	movlw	0
  8154  00186C  6E24               	movwf	___flmul@prod+3,c
  8155  00186E  0E00               	movlw	0
  8156  001870  6E1A               	movwf	___flmul@sign,c
  8157  001872  D00F               	goto	l5150
  8158  001874                     l937:
  8159  001874  C025  F020         	movff	___flmul@temp,___flmul@bexp
  8160  001878  0EFF               	movlw	255
  8161  00187A  1621               	andwf	___flmul@prod,f,c
  8162  00187C  0EFF               	movlw	255
  8163  00187E  1622               	andwf	___flmul@prod+1,f,c
  8164  001880  0E7F               	movlw	127
  8165  001882  1623               	andwf	___flmul@prod+2,f,c
  8166  001884  0E00               	movlw	0
  8167  001886  1624               	andwf	___flmul@prod+3,f,c
  8168  001888  B020               	btfsc	___flmul@bexp,0,c
  8169  00188A  8E23               	bsf	___flmul@prod+2,7,c
  8170  00188C  90D8               	bcf	status,0,c
  8171  00188E  3020               	rrcf	___flmul@bexp,w,c
  8172  001890                     L19:
  8173  001890  6E24               	movwf	___flmul@prod+3,c
  8174  001892                     l5150:
  8175  001892  501A               	movf	___flmul@sign,w,c
  8176  001894  1224               	iorwf	___flmul@prod+3,f,c
  8177  001896  C021  F00E         	movff	___flmul@prod,?___flmul
  8178  00189A  C022  F00F         	movff	___flmul@prod+1,?___flmul+1
  8179  00189E  C023  F010         	movff	___flmul@prod+2,?___flmul+2
  8180  0018A2  C024  F011         	movff	___flmul@prod+3,?___flmul+3
  8181  0018A6  0012               	return		;funcret
  8182  0018A8                     __end_of___flmul:
  8183                           	opt callstack 0
  8184                           
  8185 ;; *************** function ___fldiv *****************
  8186 ;; Defined at:
  8187 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  b               4   38[COMRAM] unsigned char 
  8190 ;;  a               4   42[COMRAM] unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  grs             4   57[COMRAM] unsigned long 
  8193 ;;  rem             4   50[COMRAM] unsigned long 
  8194 ;;  new_exp         2   55[COMRAM] short 
  8195 ;;  aexp            1   62[COMRAM] unsigned char 
  8196 ;;  bexp            1   61[COMRAM] unsigned char 
  8197 ;;  sign            1   54[COMRAM] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  4   38[COMRAM] unsigned char 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8207 ;;      Params:         8       0       0       0       0       0       0       0       0
  8208 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8209 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8210 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8211 ;;Total ram usage:       25 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    2
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_ADC_Channel
  8218 ;;		_main
  8219 ;;		_efgtoa
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text38
  8224  001BB4                     __ptext38:
  8225                           	opt callstack 0
  8226  001BB4                     ___fldiv:
  8227                           	opt callstack 24
  8228                           
  8229                           ;incstack = 0
  8230  001BB4  502A               	movf	___fldiv@b+3,w,c
  8231  001BB6  0B80               	andlw	128
  8232  001BB8  6E37               	movwf	___fldiv@sign,c
  8233  001BBA  502A               	movf	___fldiv@b+3,w,c
  8234  001BBC  242A               	addwf	___fldiv@b+3,w,c
  8235  001BBE  6E3E               	movwf	___fldiv@bexp,c
  8236  001BC0  BE29               	btfsc	___fldiv@b+2,7,c
  8237  001BC2  803E               	bsf	___fldiv@bexp,0,c
  8238  001BC4  503E               	movf	___fldiv@bexp,w,c
  8239  001BC6  B4D8               	btfsc	status,2,c
  8240  001BC8  D00D               	goto	l4904
  8241  001BCA  283E               	incf	___fldiv@bexp,w,c
  8242  001BCC  A4D8               	btfss	status,2,c
  8243  001BCE  D008               	goto	l4900
  8244  001BD0  0E00               	movlw	0
  8245  001BD2  6E27               	movwf	___fldiv@b,c
  8246  001BD4  0E00               	movlw	0
  8247  001BD6  6E28               	movwf	___fldiv@b+1,c
  8248  001BD8  0E00               	movlw	0
  8249  001BDA  6E29               	movwf	___fldiv@b+2,c
  8250  001BDC  0E00               	movlw	0
  8251  001BDE  6E2A               	movwf	___fldiv@b+3,c
  8252  001BE0                     l4900:
  8253  001BE0  8E29               	bsf	___fldiv@b+2,7,c
  8254  001BE2  D006               	goto	L20
  8255  001BE4                     l4904:
  8256  001BE4  0E00               	movlw	0
  8257  001BE6  6E27               	movwf	___fldiv@b,c
  8258  001BE8  0E00               	movlw	0
  8259  001BEA  6E28               	movwf	___fldiv@b+1,c
  8260  001BEC  0E00               	movlw	0
  8261  001BEE  6E29               	movwf	___fldiv@b+2,c
  8262  001BF0                     L20:
  8263  001BF0  0E00               	movlw	0
  8264  001BF2  6E2A               	movwf	___fldiv@b+3,c
  8265  001BF4  502E               	movf	___fldiv@a+3,w,c
  8266  001BF6  0B80               	andlw	128
  8267  001BF8  1A37               	xorwf	___fldiv@sign,f,c
  8268  001BFA  502E               	movf	___fldiv@a+3,w,c
  8269  001BFC  242E               	addwf	___fldiv@a+3,w,c
  8270  001BFE  6E3F               	movwf	___fldiv@aexp,c
  8271  001C00  BE2D               	btfsc	___fldiv@a+2,7,c
  8272  001C02  803F               	bsf	___fldiv@aexp,0,c
  8273  001C04  503F               	movf	___fldiv@aexp,w,c
  8274  001C06  B4D8               	btfsc	status,2,c
  8275  001C08  D00D               	goto	l4924
  8276  001C0A  283F               	incf	___fldiv@aexp,w,c
  8277  001C0C  A4D8               	btfss	status,2,c
  8278  001C0E  D008               	goto	l4920
  8279  001C10  0E00               	movlw	0
  8280  001C12  6E2B               	movwf	___fldiv@a,c
  8281  001C14  0E00               	movlw	0
  8282  001C16  6E2C               	movwf	___fldiv@a+1,c
  8283  001C18  0E00               	movlw	0
  8284  001C1A  6E2D               	movwf	___fldiv@a+2,c
  8285  001C1C  0E00               	movlw	0
  8286  001C1E  6E2E               	movwf	___fldiv@a+3,c
  8287  001C20                     l4920:
  8288  001C20  8E2D               	bsf	___fldiv@a+2,7,c
  8289  001C22  D006               	goto	L21
  8290  001C24                     l4924:
  8291  001C24  0E00               	movlw	0
  8292  001C26  6E2B               	movwf	___fldiv@a,c
  8293  001C28  0E00               	movlw	0
  8294  001C2A  6E2C               	movwf	___fldiv@a+1,c
  8295  001C2C  0E00               	movlw	0
  8296  001C2E  6E2D               	movwf	___fldiv@a+2,c
  8297  001C30                     L21:
  8298  001C30  0E00               	movlw	0
  8299  001C32  6E2E               	movwf	___fldiv@a+3,c
  8300  001C34  502B               	movf	___fldiv@a,w,c
  8301  001C36  102C               	iorwf	___fldiv@a+1,w,c
  8302  001C38  102D               	iorwf	___fldiv@a+2,w,c
  8303  001C3A  102E               	iorwf	___fldiv@a+3,w,c
  8304  001C3C  A4D8               	btfss	status,2,c
  8305  001C3E  D017               	goto	l4938
  8306  001C40  0E00               	movlw	0
  8307  001C42  6E27               	movwf	___fldiv@b,c
  8308  001C44  0E00               	movlw	0
  8309  001C46  6E28               	movwf	___fldiv@b+1,c
  8310  001C48  0E00               	movlw	0
  8311  001C4A  6E29               	movwf	___fldiv@b+2,c
  8312  001C4C  0E00               	movlw	0
  8313  001C4E  6E2A               	movwf	___fldiv@b+3,c
  8314  001C50  0E80               	movlw	128
  8315  001C52  1229               	iorwf	___fldiv@b+2,f,c
  8316  001C54  0E7F               	movlw	127
  8317  001C56  122A               	iorwf	___fldiv@b+3,f,c
  8318  001C58                     l4932:
  8319  001C58  5037               	movf	___fldiv@sign,w,c
  8320  001C5A  122A               	iorwf	___fldiv@b+3,f,c
  8321  001C5C  C027  F027         	movff	___fldiv@b,?___fldiv
  8322  001C60  C028  F028         	movff	___fldiv@b+1,?___fldiv+1
  8323  001C64  C029  F029         	movff	___fldiv@b+2,?___fldiv+2
  8324  001C68  C02A  F02A         	movff	___fldiv@b+3,?___fldiv+3
  8325  001C6C  0012               	return	
  8326  001C6E                     l4938:
  8327  001C6E  503E               	movf	___fldiv@bexp,w,c
  8328  001C70  A4D8               	btfss	status,2,c
  8329  001C72  D009               	goto	l4946
  8330  001C74  0E00               	movlw	0
  8331  001C76  6E27               	movwf	?___fldiv,c
  8332  001C78  0E00               	movlw	0
  8333  001C7A  6E28               	movwf	?___fldiv+1,c
  8334  001C7C  0E00               	movlw	0
  8335  001C7E  6E29               	movwf	?___fldiv+2,c
  8336  001C80  0E00               	movlw	0
  8337  001C82  6E2A               	movwf	?___fldiv+3,c
  8338  001C84  0012               	return	
  8339  001C86                     l4946:
  8340  001C86  503F               	movf	___fldiv@aexp,w,c
  8341  001C88  C03E  F02F         	movff	___fldiv@bexp,??___fldiv
  8342  001C8C  6A30               	clrf	(??___fldiv+1)& (0+255),c
  8343  001C8E  5E2F               	subwf	??___fldiv,f,c
  8344  001C90  0E00               	movlw	0
  8345  001C92  5A30               	subwfb	??___fldiv+1,f,c
  8346  001C94  0E7F               	movlw	127
  8347  001C96  242F               	addwf	??___fldiv,w,c
  8348  001C98  6E38               	movwf	___fldiv@new_exp,c
  8349  001C9A  0E00               	movlw	0
  8350  001C9C  2030               	addwfc	??___fldiv+1,w,c
  8351  001C9E  6E39               	movwf	___fldiv@new_exp+1,c
  8352  001CA0  C027  F033         	movff	___fldiv@b,___fldiv@rem
  8353  001CA4  C028  F034         	movff	___fldiv@b+1,___fldiv@rem+1
  8354  001CA8  C029  F035         	movff	___fldiv@b+2,___fldiv@rem+2
  8355  001CAC  C02A  F036         	movff	___fldiv@b+3,___fldiv@rem+3
  8356  001CB0  0E00               	movlw	0
  8357  001CB2  6E27               	movwf	___fldiv@b,c
  8358  001CB4  0E00               	movlw	0
  8359  001CB6  6E28               	movwf	___fldiv@b+1,c
  8360  001CB8  0E00               	movlw	0
  8361  001CBA  6E29               	movwf	___fldiv@b+2,c
  8362  001CBC  0E00               	movlw	0
  8363  001CBE  6E2A               	movwf	___fldiv@b+3,c
  8364  001CC0  0E00               	movlw	0
  8365  001CC2  6E3A               	movwf	___fldiv@grs,c
  8366  001CC4  0E00               	movlw	0
  8367  001CC6  6E3B               	movwf	___fldiv@grs+1,c
  8368  001CC8  0E00               	movlw	0
  8369  001CCA  6E3C               	movwf	___fldiv@grs+2,c
  8370  001CCC  0E00               	movlw	0
  8371  001CCE  6E3D               	movwf	___fldiv@grs+3,c
  8372  001CD0  0E00               	movlw	0
  8373  001CD2  6E3F               	movwf	___fldiv@aexp,c
  8374  001CD4  D028               	goto	l890
  8375  001CD6                     l4956:
  8376  001CD6  503F               	movf	___fldiv@aexp,w,c
  8377  001CD8  B4D8               	btfsc	status,2,c
  8378  001CDA  D011               	goto	l4964
  8379  001CDC  90D8               	bcf	status,0,c
  8380  001CDE  3633               	rlcf	___fldiv@rem,f,c
  8381  001CE0  3634               	rlcf	___fldiv@rem+1,f,c
  8382  001CE2  3635               	rlcf	___fldiv@rem+2,f,c
  8383  001CE4  3636               	rlcf	___fldiv@rem+3,f,c
  8384  001CE6  90D8               	bcf	status,0,c
  8385  001CE8  3627               	rlcf	___fldiv@b,f,c
  8386  001CEA  3628               	rlcf	___fldiv@b+1,f,c
  8387  001CEC  3629               	rlcf	___fldiv@b+2,f,c
  8388  001CEE  362A               	rlcf	___fldiv@b+3,f,c
  8389  001CF0  BE3D               	btfsc	___fldiv@grs+3,7,c
  8390  001CF2  8027               	bsf	___fldiv@b,0,c
  8391  001CF4  90D8               	bcf	status,0,c
  8392  001CF6  363A               	rlcf	___fldiv@grs,f,c
  8393  001CF8  363B               	rlcf	___fldiv@grs+1,f,c
  8394  001CFA  363C               	rlcf	___fldiv@grs+2,f,c
  8395  001CFC  363D               	rlcf	___fldiv@grs+3,f,c
  8396  001CFE                     l4964:
  8397  001CFE  502B               	movf	___fldiv@a,w,c
  8398  001D00  5C33               	subwf	___fldiv@rem,w,c
  8399  001D02  502C               	movf	___fldiv@a+1,w,c
  8400  001D04  5834               	subwfb	___fldiv@rem+1,w,c
  8401  001D06  502D               	movf	___fldiv@a+2,w,c
  8402  001D08  5835               	subwfb	___fldiv@rem+2,w,c
  8403  001D0A  502E               	movf	___fldiv@a+3,w,c
  8404  001D0C  5836               	subwfb	___fldiv@rem+3,w,c
  8405  001D0E  A0D8               	btfss	status,0,c
  8406  001D10  D009               	goto	l4970
  8407  001D12  8C3D               	bsf	___fldiv@grs+3,6,c
  8408  001D14  502B               	movf	___fldiv@a,w,c
  8409  001D16  5E33               	subwf	___fldiv@rem,f,c
  8410  001D18  502C               	movf	___fldiv@a+1,w,c
  8411  001D1A  5A34               	subwfb	___fldiv@rem+1,f,c
  8412  001D1C  502D               	movf	___fldiv@a+2,w,c
  8413  001D1E  5A35               	subwfb	___fldiv@rem+2,f,c
  8414  001D20  502E               	movf	___fldiv@a+3,w,c
  8415  001D22  5A36               	subwfb	___fldiv@rem+3,f,c
  8416  001D24                     l4970:
  8417  001D24  2A3F               	incf	___fldiv@aexp,f,c
  8418  001D26                     l890:
  8419  001D26  0E19               	movlw	25
  8420  001D28  643F               	cpfsgt	___fldiv@aexp,c
  8421  001D2A  D7D5               	goto	l4956
  8422  001D2C  5033               	movf	___fldiv@rem,w,c
  8423  001D2E  1034               	iorwf	___fldiv@rem+1,w,c
  8424  001D30  1035               	iorwf	___fldiv@rem+2,w,c
  8425  001D32  1036               	iorwf	___fldiv@rem+3,w,c
  8426  001D34  B4D8               	btfsc	status,2,c
  8427  001D36  D011               	goto	l4982
  8428  001D38  803A               	bsf	___fldiv@grs,0,c
  8429  001D3A  D00F               	goto	l4982
  8430  001D3C                     l4976:
  8431  001D3C  90D8               	bcf	status,0,c
  8432  001D3E  3627               	rlcf	___fldiv@b,f,c
  8433  001D40  3628               	rlcf	___fldiv@b+1,f,c
  8434  001D42  3629               	rlcf	___fldiv@b+2,f,c
  8435  001D44  362A               	rlcf	___fldiv@b+3,f,c
  8436  001D46  BE3D               	btfsc	___fldiv@grs+3,7,c
  8437  001D48  8027               	bsf	___fldiv@b,0,c
  8438  001D4A  90D8               	bcf	status,0,c
  8439  001D4C  363A               	rlcf	___fldiv@grs,f,c
  8440  001D4E  363B               	rlcf	___fldiv@grs+1,f,c
  8441  001D50  363C               	rlcf	___fldiv@grs+2,f,c
  8442  001D52  363D               	rlcf	___fldiv@grs+3,f,c
  8443  001D54  0638               	decf	___fldiv@new_exp,f,c
  8444  001D56  A0D8               	btfss	status,0,c
  8445  001D58  0639               	decf	___fldiv@new_exp+1,f,c
  8446  001D5A                     l4982:
  8447  001D5A  AE29               	btfss	___fldiv@b+2,7,c
  8448  001D5C  D7EF               	goto	l4976
  8449  001D5E  0E00               	movlw	0
  8450  001D60  6E3F               	movwf	___fldiv@aexp,c
  8451  001D62  AE3D               	btfss	___fldiv@grs+3,7,c
  8452  001D64  D017               	goto	l901
  8453  001D66  0EFF               	movlw	255
  8454  001D68  143A               	andwf	___fldiv@grs,w,c
  8455  001D6A  6E2F               	movwf	??___fldiv& (0+255),c
  8456  001D6C  0EFF               	movlw	255
  8457  001D6E  143B               	andwf	___fldiv@grs+1,w,c
  8458  001D70  6E30               	movwf	(??___fldiv+1)& (0+255),c
  8459  001D72  0EFF               	movlw	255
  8460  001D74  143C               	andwf	___fldiv@grs+2,w,c
  8461  001D76  6E31               	movwf	(??___fldiv+2)& (0+255),c
  8462  001D78  0E7F               	movlw	127
  8463  001D7A  143D               	andwf	___fldiv@grs+3,w,c
  8464  001D7C  6E32               	movwf	(??___fldiv+3)& (0+255),c
  8465  001D7E  502F               	movf	??___fldiv,w,c
  8466  001D80  1030               	iorwf	??___fldiv+1,w,c
  8467  001D82  1031               	iorwf	??___fldiv+2,w,c
  8468  001D84  1032               	iorwf	??___fldiv+3,w,c
  8469  001D86  B4D8               	btfsc	status,2,c
  8470  001D88  D003               	goto	l902
  8471  001D8A                     u6080:
  8472  001D8A  0E01               	movlw	1
  8473  001D8C  6E3F               	movwf	___fldiv@aexp,c
  8474  001D8E  D002               	goto	l901
  8475  001D90                     l902:
  8476  001D90  B027               	btfsc	___fldiv@b,0,c
  8477  001D92  D7FB               	goto	u6080
  8478  001D94                     l901:
  8479  001D94  503F               	movf	___fldiv@aexp,w,c
  8480  001D96  B4D8               	btfsc	status,2,c
  8481  001D98  D01F               	goto	l5002
  8482  001D9A  0E01               	movlw	1
  8483  001D9C  2627               	addwf	___fldiv@b,f,c
  8484  001D9E  0E00               	movlw	0
  8485  001DA0  2228               	addwfc	___fldiv@b+1,f,c
  8486  001DA2  2229               	addwfc	___fldiv@b+2,f,c
  8487  001DA4  222A               	addwfc	___fldiv@b+3,f,c
  8488  001DA6  A02A               	btfss	___fldiv@b+3,0,c
  8489  001DA8  D017               	goto	l5002
  8490  001DAA  C027  F02F         	movff	___fldiv@b,??___fldiv
  8491  001DAE  C028  F030         	movff	___fldiv@b+1,??___fldiv+1
  8492  001DB2  C029  F031         	movff	___fldiv@b+2,??___fldiv+2
  8493  001DB6  C02A  F032         	movff	___fldiv@b+3,??___fldiv+3
  8494  001DBA  3432               	rlcf	??___fldiv+3,w,c
  8495  001DBC  3232               	rrcf	??___fldiv+3,f,c
  8496  001DBE  3231               	rrcf	??___fldiv+2,f,c
  8497  001DC0  3230               	rrcf	??___fldiv+1,f,c
  8498  001DC2  322F               	rrcf	??___fldiv,f,c
  8499  001DC4  C02F  F027         	movff	??___fldiv,___fldiv@b
  8500  001DC8  C030  F028         	movff	??___fldiv+1,___fldiv@b+1
  8501  001DCC  C031  F029         	movff	??___fldiv+2,___fldiv@b+2
  8502  001DD0  C032  F02A         	movff	??___fldiv+3,___fldiv@b+3
  8503  001DD4  4A38               	infsnz	___fldiv@new_exp,f,c
  8504  001DD6  2A39               	incf	___fldiv@new_exp+1,f,c
  8505  001DD8                     l5002:
  8506  001DD8  BE39               	btfsc	___fldiv@new_exp+1,7,c
  8507  001DDA  D010               	goto	l5006
  8508  001DDC  5039               	movf	___fldiv@new_exp+1,w,c
  8509  001DDE  E103               	bnz	u6120
  8510  001DE0  2838               	incf	___fldiv@new_exp,w,c
  8511  001DE2  A0D8               	btfss	status,0,c
  8512  001DE4  D00B               	goto	l5006
  8513  001DE6                     u6120:
  8514  001DE6  0E00               	movlw	0
  8515  001DE8  6E39               	movwf	___fldiv@new_exp+1,c
  8516  001DEA  6838               	setf	___fldiv@new_exp,c
  8517  001DEC  0E00               	movlw	0
  8518  001DEE  6E27               	movwf	___fldiv@b,c
  8519  001DF0  0E00               	movlw	0
  8520  001DF2  6E28               	movwf	___fldiv@b+1,c
  8521  001DF4  0E00               	movlw	0
  8522  001DF6  6E29               	movwf	___fldiv@b+2,c
  8523  001DF8  0E00               	movlw	0
  8524  001DFA  6E2A               	movwf	___fldiv@b+3,c
  8525  001DFC                     l5006:
  8526  001DFC  BE39               	btfsc	___fldiv@new_exp+1,7,c
  8527  001DFE  D005               	goto	u6130
  8528  001E00  5039               	movf	___fldiv@new_exp+1,w,c
  8529  001E02  E111               	bnz	l5010
  8530  001E04  0438               	decf	___fldiv@new_exp,w,c
  8531  001E06  B0D8               	btfsc	status,0,c
  8532  001E08  D00E               	goto	l5010
  8533  001E0A                     u6130:
  8534  001E0A  0E00               	movlw	0
  8535  001E0C  6E39               	movwf	___fldiv@new_exp+1,c
  8536  001E0E  0E00               	movlw	0
  8537  001E10  6E38               	movwf	___fldiv@new_exp,c
  8538  001E12  0E00               	movlw	0
  8539  001E14  6E27               	movwf	___fldiv@b,c
  8540  001E16  0E00               	movlw	0
  8541  001E18  6E28               	movwf	___fldiv@b+1,c
  8542  001E1A  0E00               	movlw	0
  8543  001E1C  6E29               	movwf	___fldiv@b+2,c
  8544  001E1E  0E00               	movlw	0
  8545  001E20  6E2A               	movwf	___fldiv@b+3,c
  8546  001E22  0E00               	movlw	0
  8547  001E24  6E37               	movwf	___fldiv@sign,c
  8548  001E26                     l5010:
  8549  001E26  C038  F03E         	movff	___fldiv@new_exp,___fldiv@bexp
  8550  001E2A  A03E               	btfss	___fldiv@bexp,0,c
  8551  001E2C  D002               	goto	l5016
  8552  001E2E  8E29               	bsf	___fldiv@b+2,7,c
  8553  001E30  D001               	goto	l5018
  8554  001E32                     l5016:
  8555  001E32  9E29               	bcf	___fldiv@b+2,7,c
  8556  001E34                     l5018:
  8557  001E34  90D8               	bcf	status,0,c
  8558  001E36  303E               	rrcf	___fldiv@bexp,w,c
  8559  001E38  6E2A               	movwf	___fldiv@b+3,c
  8560  001E3A  D70E               	goto	l4932
  8561  001E3C                     __end_of___fldiv:
  8562                           	opt callstack 0
  8563                           
  8564 ;; *************** function _isr *****************
  8565 ;; Defined at:
  8566 ;;		line 48 in file "Proyecto_SSE_1.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8580 ;;      Params:         0       0       0       0       0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8582 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8583 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8584 ;;Total ram usage:        1 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    1
  8587 ;; This function calls:
  8588 ;;		i2___flge
  8589 ;; This function is called by:
  8590 ;;		Interrupt level 2
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	intcode
  8595  000008                     __pintcode:
  8596                           	opt callstack 0
  8597  000008                     _isr:
  8598                           	opt callstack 21
  8599                           
  8600                           ;incstack = 0
  8601  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8602  00000A  EDB2  F012         	call	int_func,f	;refresh shadow registers
  8603                           
  8604                           	psect	intcode_body
  8605  002564                     __pintcode_body:
  8606                           	opt callstack 21
  8607  002564                     int_func:
  8608                           	opt callstack 21
  8609  002564  0006               	pop		; remove dummy address from shadow register refresh
  8610                           
  8611                           ;Proyecto_SSE_1.c: 49:     if(INTCONbits.TMR0IF==1){
  8612  002566  A4F2               	btfss	4082,2,c	;volatile
  8613  002568  D08E               	goto	i2l135
  8614                           
  8615                           ;Proyecto_SSE_1.c: 50:         if(Tp[0]>2.5){
  8616  00256A  0E00               	movlw	0
  8617  00256C  6E01               	movwf	i2___flge@ff1,c
  8618  00256E  0E00               	movlw	0
  8619  002570  6E02               	movwf	i2___flge@ff1+1,c
  8620  002572  0E20               	movlw	32
  8621  002574  6E03               	movwf	i2___flge@ff1+2,c
  8622  002576  0E40               	movlw	64
  8623  002578  6E04               	movwf	i2___flge@ff1+3,c
  8624  00257A  C100  F005         	movff	_Tp,i2___flge@ff2
  8625  00257E  C101  F006         	movff	_Tp+1,i2___flge@ff2+1
  8626  002582  C102  F007         	movff	_Tp+2,i2___flge@ff2+2
  8627  002586  C103  F008         	movff	_Tp+3,i2___flge@ff2+3
  8628  00258A  EC57  F015         	call	i2___flge	;wreg free
  8629  00258E  B0D8               	btfsc	status,0,c
  8630  002590  D00E               	goto	i2l4434
  8631                           
  8632                           ;Proyecto_SSE_1.c: 51:             LATCbits.LATC0=1;
  8633  002592  808B               	bsf	3979,0,c	;volatile
  8634                           
  8635                           ;Proyecto_SSE_1.c: 52:             _delay((unsigned long)((2)*(12000000/4000.0)));
  8636  002594  0E08               	movlw	8
  8637  002596  6E0D               	movwf	??_isr& (0+255),c
  8638  002598  0ECA               	movlw	202
  8639  00259A                     i2u769_47:
  8640  00259A  2EE8               	decfsz	wreg,f,c
  8641  00259C  D7FE               	bra	i2u769_47
  8642  00259E  2E0D               	decfsz	??_isr& (0+255),f,c
  8643  0025A0  D7FC               	bra	i2u769_47
  8644                           
  8645                           ;Proyecto_SSE_1.c: 53:             LATCbits.LATC0=0;
  8646  0025A2  908B               	bcf	3979,0,c	;volatile
  8647                           
  8648                           ;Proyecto_SSE_1.c: 54:             TMR0=45;
  8649  0025A4  0E00               	movlw	0
  8650  0025A6  6ED7               	movwf	4055,c	;volatile
  8651  0025A8  0E2D               	movlw	45
  8652  0025AA  6ED6               	movwf	4054,c	;volatile
  8653                           
  8654                           ;Proyecto_SSE_1.c: 55:             INTCONbits.TMR0IF=0;
  8655  0025AC  94F2               	bcf	4082,2,c	;volatile
  8656  0025AE                     i2l4434:
  8657                           
  8658                           ;Proyecto_SSE_1.c: 57:         if(Tp[0]<2.5){
  8659  0025AE  C100  F001         	movff	_Tp,i2___flge@ff1
  8660  0025B2  C101  F002         	movff	_Tp+1,i2___flge@ff1+1
  8661  0025B6  C102  F003         	movff	_Tp+2,i2___flge@ff1+2
  8662  0025BA  C103  F004         	movff	_Tp+3,i2___flge@ff1+3
  8663  0025BE  0E00               	movlw	0
  8664  0025C0  6E05               	movwf	i2___flge@ff2,c
  8665  0025C2  0E00               	movlw	0
  8666  0025C4  6E06               	movwf	i2___flge@ff2+1,c
  8667  0025C6  0E20               	movlw	32
  8668  0025C8  6E07               	movwf	i2___flge@ff2+2,c
  8669  0025CA  0E40               	movlw	64
  8670  0025CC  6E08               	movwf	i2___flge@ff2+3,c
  8671  0025CE  EC57  F015         	call	i2___flge	;wreg free
  8672  0025D2  B0D8               	btfsc	status,0,c
  8673  0025D4  D00F               	goto	i2l4446
  8674                           
  8675                           ;Proyecto_SSE_1.c: 58:             LATCbits.LATC0=1;
  8676  0025D6  808B               	bsf	3979,0,c	;volatile
  8677                           
  8678                           ;Proyecto_SSE_1.c: 59:             _delay((unsigned long)((1)*(12000000/4000.0)));
  8679  0025D8  0E04               	movlw	4
  8680  0025DA  6E0D               	movwf	??_isr& (0+255),c
  8681  0025DC  0EE4               	movlw	228
  8682  0025DE                     i2u770_47:
  8683  0025DE  2EE8               	decfsz	wreg,f,c
  8684  0025E0  D7FE               	bra	i2u770_47
  8685  0025E2  2E0D               	decfsz	??_isr& (0+255),f,c
  8686  0025E4  D7FC               	bra	i2u770_47
  8687  0025E6  D000               	nop2	
  8688                           
  8689                           ;Proyecto_SSE_1.c: 60:             LATCbits.LATC0=0;
  8690  0025E8  908B               	bcf	3979,0,c	;volatile
  8691                           
  8692                           ;Proyecto_SSE_1.c: 61:             TMR0=33;
  8693  0025EA  0E00               	movlw	0
  8694  0025EC  6ED7               	movwf	4055,c	;volatile
  8695  0025EE  0E21               	movlw	33
  8696  0025F0  6ED6               	movwf	4054,c	;volatile
  8697                           
  8698                           ;Proyecto_SSE_1.c: 62:             INTCONbits.TMR0IF=0;
  8699  0025F2  94F2               	bcf	4082,2,c	;volatile
  8700  0025F4                     i2l4446:
  8701                           
  8702                           ;Proyecto_SSE_1.c: 64:         if(Tp[1]>2.5){
  8703  0025F4  0E00               	movlw	0
  8704  0025F6  6E01               	movwf	i2___flge@ff1,c
  8705  0025F8  0E00               	movlw	0
  8706  0025FA  6E02               	movwf	i2___flge@ff1+1,c
  8707  0025FC  0E20               	movlw	32
  8708  0025FE  6E03               	movwf	i2___flge@ff1+2,c
  8709  002600  0E40               	movlw	64
  8710  002602  6E04               	movwf	i2___flge@ff1+3,c
  8711  002604  C104  F005         	movff	_Tp+4,i2___flge@ff2
  8712  002608  C105  F006         	movff	_Tp+5,i2___flge@ff2+1
  8713  00260C  C106  F007         	movff	_Tp+6,i2___flge@ff2+2
  8714  002610  C107  F008         	movff	_Tp+7,i2___flge@ff2+3
  8715  002614  EC57  F015         	call	i2___flge	;wreg free
  8716  002618  B0D8               	btfsc	status,0,c
  8717  00261A  D00F               	goto	i2l4458
  8718                           
  8719                           ;Proyecto_SSE_1.c: 65:             LATCbits.LATC1=1;
  8720  00261C  828B               	bsf	3979,1,c	;volatile
  8721                           
  8722                           ;Proyecto_SSE_1.c: 66:             _delay((unsigned long)((1)*(12000000/4000.0)));
  8723  00261E  0E04               	movlw	4
  8724  002620  6E0D               	movwf	??_isr& (0+255),c
  8725  002622  0EE4               	movlw	228
  8726  002624                     i2u771_47:
  8727  002624  2EE8               	decfsz	wreg,f,c
  8728  002626  D7FE               	bra	i2u771_47
  8729  002628  2E0D               	decfsz	??_isr& (0+255),f,c
  8730  00262A  D7FC               	bra	i2u771_47
  8731  00262C  D000               	nop2	
  8732                           
  8733                           ;Proyecto_SSE_1.c: 67:             LATCbits.LATC1=0;
  8734  00262E  928B               	bcf	3979,1,c	;volatile
  8735                           
  8736                           ;Proyecto_SSE_1.c: 68:             TMR0=33;
  8737  002630  0E00               	movlw	0
  8738  002632  6ED7               	movwf	4055,c	;volatile
  8739  002634  0E21               	movlw	33
  8740  002636  6ED6               	movwf	4054,c	;volatile
  8741                           
  8742                           ;Proyecto_SSE_1.c: 69:             INTCONbits.TMR0IF=0;
  8743  002638  94F2               	bcf	4082,2,c	;volatile
  8744  00263A                     i2l4458:
  8745  00263A  C104  F001         	movff	_Tp+4,i2___flge@ff1
  8746  00263E  C105  F002         	movff	_Tp+5,i2___flge@ff1+1
  8747  002642  C106  F003         	movff	_Tp+6,i2___flge@ff1+2
  8748  002646  C107  F004         	movff	_Tp+7,i2___flge@ff1+3
  8749  00264A  0E00               	movlw	0
  8750  00264C  6E05               	movwf	i2___flge@ff2,c
  8751  00264E  0E00               	movlw	0
  8752  002650  6E06               	movwf	i2___flge@ff2+1,c
  8753  002652  0E20               	movlw	32
  8754  002654  6E07               	movwf	i2___flge@ff2+2,c
  8755  002656  0E40               	movlw	64
  8756  002658  6E08               	movwf	i2___flge@ff2+3,c
  8757  00265A  EC57  F015         	call	i2___flge	;wreg free
  8758  00265E  B0D8               	btfsc	status,0,c
  8759  002660  D00D               	goto	i2l4470
  8760                           
  8761                           ;Proyecto_SSE_1.c: 71:             LATCbits.LATC1=1;
  8762  002662  828B               	bsf	3979,1,c	;volatile
  8763                           
  8764                           ;Proyecto_SSE_1.c: 72:             _delay((unsigned long)((2)*(12000000/4000.0)));
  8765  002664  0E08               	movlw	8
  8766  002666  6E0D               	movwf	??_isr& (0+255),c
  8767  002668  0ECA               	movlw	202
  8768  00266A                     i2u772_47:
  8769  00266A  2EE8               	decfsz	wreg,f,c
  8770  00266C  D7FE               	bra	i2u772_47
  8771  00266E  2E0D               	decfsz	??_isr& (0+255),f,c
  8772  002670  D7FC               	bra	i2u772_47
  8773                           
  8774                           ;Proyecto_SSE_1.c: 73:             LATCbits.LATC1=0;
  8775  002672  928B               	bcf	3979,1,c	;volatile
  8776                           
  8777                           ;Proyecto_SSE_1.c: 74:             TMR0=45;
  8778  002674  0E00               	movlw	0
  8779  002676  6ED7               	movwf	4055,c	;volatile
  8780  002678  0E2D               	movlw	45
  8781  00267A  D003               	goto	L22
  8782  00267C                     i2l4470:
  8783                           
  8784                           ;Proyecto_SSE_1.c: 77:             TMR0=21;
  8785  00267C  0E00               	movlw	0
  8786  00267E  6ED7               	movwf	4055,c	;volatile
  8787  002680  0E15               	movlw	21
  8788  002682                     L22:
  8789  002682  6ED6               	movwf	4054,c	;volatile
  8790                           
  8791                           ;Proyecto_SSE_1.c: 78:             INTCONbits.TMR0IF=0;
  8792  002684  94F2               	bcf	4082,2,c	;volatile
  8793  002686                     i2l135:
  8794  002686  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8795  002688  0011               	retfie		f
  8796  00268A                     __end_of_isr:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function i2___flge *****************
  8800 ;; Defined at:
  8801 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  ff1             4    0[COMRAM] void 
  8804 ;;  ff2             4    4[COMRAM] void 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;		None
  8807 ;; Return value:  Size  Location     Type
  8808 ;;		None               void
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8816 ;;      Params:         8       0       0       0       0       0       0       0       0
  8817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8818 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8819 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8820 ;;Total ram usage:       12 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_isr
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text40
  8830  002AAE                     __ptext40:
  8831                           	opt callstack 0
  8832  002AAE                     i2___flge:
  8833                           	opt callstack 21
  8834                           
  8835                           ;incstack = 0
  8836  002AAE  0E00               	movlw	0
  8837  002AB0  1401               	andwf	i2___flge@ff1,w,c
  8838  002AB2  6E09               	movwf	??i2___flge& (0+255),c
  8839  002AB4  0E00               	movlw	0
  8840  002AB6  1402               	andwf	i2___flge@ff1+1,w,c
  8841  002AB8  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  8842  002ABA  0E80               	movlw	128
  8843  002ABC  1403               	andwf	i2___flge@ff1+2,w,c
  8844  002ABE  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  8845  002AC0  0E7F               	movlw	127
  8846  002AC2  1404               	andwf	i2___flge@ff1+3,w,c
  8847  002AC4  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  8848  002AC6  5009               	movf	??i2___flge,w,c
  8849  002AC8  100A               	iorwf	??i2___flge+1,w,c
  8850  002ACA  100B               	iorwf	??i2___flge+2,w,c
  8851  002ACC  100C               	iorwf	??i2___flge+3,w,c
  8852  002ACE  A4D8               	btfss	status,2,c
  8853  002AD0  D008               	goto	i2l4354
  8854  002AD2  0E00               	movlw	0
  8855  002AD4  6E01               	movwf	i2___flge@ff1,c
  8856  002AD6  0E00               	movlw	0
  8857  002AD8  6E02               	movwf	i2___flge@ff1+1,c
  8858  002ADA  0E00               	movlw	0
  8859  002ADC  6E03               	movwf	i2___flge@ff1+2,c
  8860  002ADE  0E00               	movlw	0
  8861  002AE0  6E04               	movwf	i2___flge@ff1+3,c
  8862  002AE2                     i2l4354:
  8863  002AE2  0E00               	movlw	0
  8864  002AE4  1405               	andwf	i2___flge@ff2,w,c
  8865  002AE6  6E09               	movwf	??i2___flge& (0+255),c
  8866  002AE8  0E00               	movlw	0
  8867  002AEA  1406               	andwf	i2___flge@ff2+1,w,c
  8868  002AEC  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  8869  002AEE  0E80               	movlw	128
  8870  002AF0  1407               	andwf	i2___flge@ff2+2,w,c
  8871  002AF2  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  8872  002AF4  0E7F               	movlw	127
  8873  002AF6  1408               	andwf	i2___flge@ff2+3,w,c
  8874  002AF8  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  8875  002AFA  5009               	movf	??i2___flge,w,c
  8876  002AFC  100A               	iorwf	??i2___flge+1,w,c
  8877  002AFE  100B               	iorwf	??i2___flge+2,w,c
  8878  002B00  100C               	iorwf	??i2___flge+3,w,c
  8879  002B02  A4D8               	btfss	status,2,c
  8880  002B04  D008               	goto	i2l4358
  8881  002B06  0E00               	movlw	0
  8882  002B08  6E05               	movwf	i2___flge@ff2,c
  8883  002B0A  0E00               	movlw	0
  8884  002B0C  6E06               	movwf	i2___flge@ff2+1,c
  8885  002B0E  0E00               	movlw	0
  8886  002B10  6E07               	movwf	i2___flge@ff2+2,c
  8887  002B12  0E00               	movlw	0
  8888  002B14  6E08               	movwf	i2___flge@ff2+3,c
  8889  002B16                     i2l4358:
  8890  002B16  AE04               	btfss	i2___flge@ff1+3,7,c
  8891  002B18  D009               	goto	i2l4362
  8892  002B1A  6C01               	negf	i2___flge@ff1,c
  8893  002B1C  1E02               	comf	i2___flge@ff1+1,f,c
  8894  002B1E  B0D8               	btfsc	status,0,c
  8895  002B20  2A02               	incf	i2___flge@ff1+1,f,c
  8896  002B22  1E03               	comf	i2___flge@ff1+2,f,c
  8897  002B24  B0D8               	btfsc	status,0,c
  8898  002B26  2A03               	incf	i2___flge@ff1+2,f,c
  8899  002B28  0E80               	movlw	128
  8900  002B2A  5604               	subfwb	i2___flge@ff1+3,f,c
  8901  002B2C                     i2l4362:
  8902  002B2C  AE08               	btfss	i2___flge@ff2+3,7,c
  8903  002B2E  D009               	goto	i2l571
  8904  002B30  6C05               	negf	i2___flge@ff2,c
  8905  002B32  1E06               	comf	i2___flge@ff2+1,f,c
  8906  002B34  B0D8               	btfsc	status,0,c
  8907  002B36  2A06               	incf	i2___flge@ff2+1,f,c
  8908  002B38  1E07               	comf	i2___flge@ff2+2,f,c
  8909  002B3A  B0D8               	btfsc	status,0,c
  8910  002B3C  2A07               	incf	i2___flge@ff2+2,f,c
  8911  002B3E  0E80               	movlw	128
  8912  002B40  5608               	subfwb	i2___flge@ff2+3,f,c
  8913  002B42                     i2l571:
  8914  002B42  0E00               	movlw	0
  8915  002B44  1A01               	xorwf	i2___flge@ff1,f,c
  8916  002B46  0E00               	movlw	0
  8917  002B48  1A02               	xorwf	i2___flge@ff1+1,f,c
  8918  002B4A  0E00               	movlw	0
  8919  002B4C  1A03               	xorwf	i2___flge@ff1+2,f,c
  8920  002B4E  0E80               	movlw	128
  8921  002B50  1A04               	xorwf	i2___flge@ff1+3,f,c
  8922  002B52  0E00               	movlw	0
  8923  002B54  1A05               	xorwf	i2___flge@ff2,f,c
  8924  002B56  0E00               	movlw	0
  8925  002B58  1A06               	xorwf	i2___flge@ff2+1,f,c
  8926  002B5A  0E00               	movlw	0
  8927  002B5C  1A07               	xorwf	i2___flge@ff2+2,f,c
  8928  002B5E  0E80               	movlw	128
  8929  002B60  1A08               	xorwf	i2___flge@ff2+3,f,c
  8930  002B62  5005               	movf	i2___flge@ff2,w,c
  8931  002B64  5C01               	subwf	i2___flge@ff1,w,c
  8932  002B66  5006               	movf	i2___flge@ff2+1,w,c
  8933  002B68  5802               	subwfb	i2___flge@ff1+1,w,c
  8934  002B6A  5007               	movf	i2___flge@ff2+2,w,c
  8935  002B6C  5803               	subwfb	i2___flge@ff1+2,w,c
  8936  002B6E  5008               	movf	i2___flge@ff2+3,w,c
  8937  002B70  5804               	subwfb	i2___flge@ff1+3,w,c
  8938  002B72  B0D8               	btfsc	status,0,c
  8939  002B74  D002               	goto	i2l4368
  8940  002B76  90D8               	bcf	status,0,c
  8941  002B78  0012               	return	
  8942  002B7A                     i2l4368:
  8943  002B7A  80D8               	bsf	status,0,c
  8944  002B7C  0012               	return		;funcret
  8945  002B7E                     __end_ofi2___flge:
  8946                           	opt callstack 0
  8947                           
  8948                           	psect	rparam
  8949  0000                     
  8950                           	psect	temp
  8951  000052                     btemp:
  8952                           	opt callstack 0
  8953  000052                     	ds	1
  8954  0000                     int$flags	set	btemp
  8955  0000                     wtemp8	set	btemp+1
  8956  0000                     ttemp5	set	btemp+1
  8957  0000                     ttemp6	set	btemp+4
  8958  0000                     ttemp7	set	btemp+8
  8959                           tosu	equ	0xFFF
  8960                           tosh	equ	0xFFE
  8961                           tosl	equ	0xFFD
  8962                           stkptr	equ	0xFFC
  8963                           pclatu	equ	0xFFB
  8964                           pclath	equ	0xFFA
  8965                           pcl	equ	0xFF9
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           indf0	equ	0xFEF
  8973                           postinc0	equ	0xFEE
  8974                           postdec0	equ	0xFED
  8975                           preinc0	equ	0xFEC
  8976                           plusw0	equ	0xFEB
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           postinc1	equ	0xFE6
  8982                           postdec1	equ	0xFE5
  8983                           preinc1	equ	0xFE4
  8984                           plusw1	equ	0xFE3
  8985                           fsr1h	equ	0xFE2
  8986                           fsr1l	equ	0xFE1
  8987                           bsr	equ	0xFE0
  8988                           indf2	equ	0xFDF
  8989                           postinc2	equ	0xFDE
  8990                           postdec2	equ	0xFDD
  8991                           preinc2	equ	0xFDC
  8992                           plusw2	equ	0xFDB
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         255
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160    122     155
    BANK1           256     10     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1267_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _ADC_Channel->___fldiv
    ___fldiv->___flmul

Critical Paths under _isr in COMRAM

    _isr->i2___flge

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53925
                                            120 BANK0      2     2      0
                        _ADC_Channel
                           _ADC_Init
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                         _Servo_init
                            ___fladd
                            ___fldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38047
                                            112 BANK0      8     0      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37543
                                             67 COMRAM     2     2      0
                                            106 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   37016
                                             84 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             13 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30207
                                             16 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             19 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             63 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             38 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             13 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             38 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             20 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             13 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Servo_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     685
                                             16 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     685
                                             16 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             6     4      2     143
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Channel                                          8     4      4    7170
                                             63 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             13 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             38 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  1     1      0     390
                                             12 COMRAM     1     1      0
                           i2___flge
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     390
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Channel
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _ADC_Init
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Servo_init
   ___fladd
   ___fldiv
     ___flmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _isr (ROOT)
   i2___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      DC       7       85.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      51       1       86.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C8      20        0.0%
DATA                 0      0     1C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 20 00:19:29 2019

           ___fldiv@aexp 003F             ___fldiv@bexp 003E                        _u 00E8  
                      _x 00E2             ___fldiv@sign 0037                       l43 2948  
                     l95 22DE             ___awdiv@sign 0013                       _Tp 0100  
    ___wmul@multiplicand 0010              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l217 0B64                      l243 0E46                      _ADC 0130  
                    l176 2E74                      l571 2A72                      l901 1D94  
                    l902 1D90                      l920 15D6                      l930 17EA  
                    l851 1ABC                      l835 19EA                      l860 1B22  
                    l836 19C8                      l861 1B1E                      l937 1874  
                    l929 17EE                      l961 2462                      l890 1D26  
                    l968 24E0             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000                      _pad 2E46                      _isr 0008  
           ___awmod@sign 0013                      wreg 000FE8             __CFG_FOSC$HS 000000  
   __size_of_ADC_Channel 0152             ___flmul@aexp 001B             ___flmul@bexp 0020  
           ___flmul@sign 001A             ___flmul@temp 0025             ___flmul@prod 0021  
           __CFG_LVP$OFF 000000             ___fltol@exp1 0017             __CFG_WDT$OFF 000000  
                   l1016 241A                     l1028 1F56                     l1108 32F8  
                   l5010 1E26                     l5002 1DD8                     l5006 1DFC  
                   l4142 2490                     l4302 30A4                     l5016 1E32  
                   l5040 1586                     l4144 2496                     l4136 2472  
                   l4304 30CE                     l4240 3000                     l5018 1E34  
                   l5114 17B4                     l5042 1596                     l4154 2506  
                   l4146 24A2                     l4234 2FEE                     l5202 2FE0  
                   l5108 1796                     l4172 2552                     l4156 2512  
                   l4148 24C8                     l4252 304C                     l4236 2FF4  
                   l4244 3008                     l4260 3148                     l5150 1892  
                   l5134 1832                     l5038 1582                     l4238 2FFA  
                   l4246 3030                     l4262 314E                     l4270 3162  
                   l5230 3122                     l5222 3102                     l5214 30E8  
                   l5310 2CB2                     l5056 15C2                     l4248 3038  
                   l4264 3154                     l4272 318A                     l5224 310A  
                   l5320 2CCA                     l5138 1850                     l5066 15F4  
                   l5058 15C6                     l4274 3192                     l4266 315A  
                   l5170 2F7A                     l5234 312C                     l5218 30F4  
                   l5250 2F44                     l4602 18D4                     l5322 2CD6  
                   l5314 2CC2                     l5402 09D6                     l5410 09F0  
                   l4292 3092                     l5340 337E                     l5500 0DA8  
                   l5420 0A6E                     l4294 3096                     l4278 31A4  
                   l5182 2FA0                     l5238 313A                     l5254 2F62  
                   l5246 2F10                     l5270 2A5C                     l5262 2A12  
                   l4630 1920                     l4606 18D8                     l5422 0ABC  
                   ?_pad 001E                     l4296 309A                     l5184 2FA8  
                   l5176 2F8A                     l4704 1A30                     l5328 2CF2  
                   l4560 2DBE                     l4800 2E6C                     l5416 0A34  
                   l4298 309E                     l5194 2FC8                     l5266 2A46  
                   l4706 1A34                     l4714 1A46                     l4626 191C  
                   l4570 3390                     l4810 2EC2                     l4802 2E7E  
                   l5514 0E3E                     l5506 0DE6                     l5442 0B6E  
                   l5426 0AF8                     l5354 0872                     l4900 1BE0  
                   l5276 2AAA                     l5284 346C                     l4732 1AE0  
                   l4724 1AAC                     l4580 348C                     l5604 10DC  
                   l5540 0F12                     l5516 0E60                     l5198 2FD2  
                   l4742 1AF6                     l4638 1940                     l5294 2C68  
                   l4822 2BF6                     l4574 33A6                     l4806 2E96  
                   l5630 1168                     l5614 1108                     l5438 0B4C  
                   l5366 08A0                     l5374 08B6                     l4920 1C20  
                   l4904 1BE4                     l4680 19D6                     l4832 2C40  
                   l5528 0EE2                     l5456 0BBC                     l5448 0B74  
                   l5384 0922                     l5392 096A                     l5800 3248  
                   l4682 19DA                     l4826 2C00                     l4578 3488  
                   l5474 0C02                     l5458 0BC0                     l5386 093A  
                   l5722 1264                     l4932 1C58                     l4924 1C24  
                   l5660 2350                     l5644 22F6                     l4780 1B96  
                   l4748 1B00                     l4668 197C                     l5548 0F32  
                   l5556 0F56                     l5564 0FEE                     l5484 0C3C  
                   l5492 0D32                     l5468 0BDE                     l5388 0944  
                   l5724 1282                     l5814 21CE                     l5670 23BA  
                   l5662 2358                     l5654 2340                     l5646 22FA  
                   l4782 1B98                     l4870 1FB6                     l4838 3274  
                   l5478 0C12                     l5750 13C6                     l5742 136A  
                   l5726 1290                     l5808 21B4                     l5664 235E  
                   l4776 1B8E                     l4768 1B68                     l4696 1A0E  
                   l4856 1EB6                     l5592 107C                     l5576 1030  
                   _ADCS 0160                     l4970 1D24                     l4946 1C86  
                   l4938 1C6E                     l5666 2386                     l4874 1FE4  
                   l4866 1F78                     l5594 1086                     l5690 2D2E  
                   l5770 14C0                     l5754 13F0                     l4964 1CFE  
                   l4956 1CD6                     l4796 2E5E                     l5692 2D3C  
                   l5780 1508                     ?_isr 0001                     l4982 1D5A  
                   l4976 1D3C                     l5776 14FC                     l5864 205A  
                   l5786 1522                     l5858 2050                     l5798 3222  
                   STR_1 080E                     STR_2 0801                     STR_3 0813  
                   STR_4 081B                     STR_7 0817                     STR_8 081F  
                   _LATA 000F89                     _LATD 000F8C                     u5200 2DFE  
                   u5230 3418                     u6120 1DE6                     u5240 341A  
                   u6130 1E0A                     u6220 15E2                     u5340 199E  
                   u5180 2DB6                     u6310 1840                     u6230 1758  
                   u5350 19AE                     u7110 10F2                     u6080 1D8A  
                   u6320 185E                     u7200 23EC                     u5600 1B74  
                   u5520 1B04                     u5360 19B0                     u7130 1152  
                   u7050 1012                     u6235 174E                     u5540 1B18  
                   u7140 1154                     u6270 17E4                     u6430 310E  
                   u5390 19F2                     u7310 12CA                     u6600 2CDC  
                   u5800 1E84                     u7320 12CC                     u7170 233C  
                   u6370 2FAC                     u5730 2C38                     u5810 1EA4  
                   u7330 12D8                     u5900 3448                     u5740 2C3A  
                   u6700 08FC                     u4845 27BC                     u5725 2C1A  
                   u5805 1E7A                     u7430 21A2                     u5910 344A  
                   u6630 337A                     u7190 23EA                     u6550 2C56  
                   u5750 32AC                     u7270 2D82                     u4855 27D8  
                   u6480 2F5E                     u6560 2C86                     u5680 2BBC  
                   u4865 27FA                     u4970 251C                     u5850 1F36  
                   u5770 32DE                     u6810 0B5A                     u6730 09AE  
                   u7450 2112                     u7507 2786                     u4875 2698  
                   u5835 1ECE                     u5836 1ED4                     u5780 32E0  
                   u6740 09B0                     u6660 0890                     u7380 1474  
                   u7517 2790                     u4885 26B4                     u6565 2C7C  
                   u5685 2BB2                     u5837 1EE2                     u5757 32A2  
                   u5870 1F96                     u7390 1476                     u7607 2962  
                   u7527 2798                     u4895 26D6                     u5855 1F2C  
                   u6840 0B8C                     u7617 2978                     u7537 27A2  
                   u6690 08FA                     u7627 29A4                     u7547 28EA  
                   u5875 1F8C                     u7467 2014                     u6780 0B20  
                   u7637 29BA                     u7557 28FA                     u7477 20F4  
                   u7647 282C                     u7567 290A                     u7487 2708  
                   u6880 0BDA                     u7657 2836                     u7577 291A  
                   u7497 2712                     u7667 28AA                     u7587 292A  
                   u7677 28B4                     u7597 293A                     u7687 28C0  
                   _TMR0 000FD6             __CFG_PWRT$ON 000000             i2___flge@ff1 0001  
           i2___flge@ff2 0005                     _Prom 00EA                     _dbuf 0182  
                   _atoi 22E4                     _main 1FF6                     _prec 004C  
                   _nout 00E6                     pad@i 0025                     pad@p 0022  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0027  
                   fsr2l 000FD9                     btemp 0052         __end_of_ADC_Init 30D4  
          ___fpclassifyf 2B7E                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000          ___fldiv@new_exp 0038  
        __end_of_Lcd_Cmd 28CC             _tolower$1339 001A          __end_of_Lcd_Out 3060  
          __CFG_MCLRE$ON 000000             ___param_bank 000000               _Lcd_Chr_CP 268A  
                  ??_pad 0024                    ??_isr 000D           Lcd_Out2@buffer 0012  
          __CFG_PLLDIV$1 000000            ___fltol@sign1 0016                    ?_atoi 0015  
        __end_of___fladd 1BB4                    ?_main 0001          __end_of___fldiv 1E3C  
        __end_of___awdiv 2FEA          __end_of___flneg 347E                    _ADRES 000FC3  
                  STR_11 0823                    STR_13 0823          __end_of___awmod 3144  
        __end_of___flmul 18A8          __end_of___flsub 3348          __end_of___fltol 2D04  
        ___awdiv@divisor 0010                    i2l135 2686                    i2l571 2B42  
        ___awdiv@counter 0012             vfpfcnvrt@fmt 00B6            __CFG_USBDIV$1 000000  
                  _TRISA 000F92            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _flags 004E  
                  _fputc 2DA6                    _fputs 3386          __end_of_isdigit 3450  
                  _valor 0050                    atoi@n 0022                    pad@fp 001E  
                  atoi@s 0015                    _width 004A                    _putch 34EA  
        __end_of_isspace 3386          __end_of_isupper 3420         __end_ofi2___flge 2B7E  
                  tablat 000FF5                    ttemp5 0053                    ttemp6 0056  
                  ttemp7 005A                    status 000FD8                    wtemp8 0053  
        __end_of_sprintf 320E           ?___fpclassifyf 000E          __end_of_tolower 3302  
        __end_of_strncmp 2DA6           __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 29DE  
       __end_of_Lcd_Out2 31B4          __initialization 33BE             __end_of_atoi 2424  
           __end_of_main 2192                   ??_atoi 0017                   ??_main 00D8  
          __activetblptr 000002          __CFG_CCP2MX$OFF 000000                   ?_fputc 000E  
                 ?_fputs 0017         ___awdiv@dividend 000E                   ?_putch 0001  
                 i2l4362 2B2C                   i2l4354 2AE2                   i2l4434 25AE  
                 i2l4358 2B16                   i2l4470 267C                   i2l4446 25F4  
                 i2l4368 2B7A                   i2l4458 263A                ??_Lcd_Cmd 000E  
              ??_Lcd_Out 0014         __end_of___xxtofl 2564           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0044                   ___flge 29DE                   ___fleq 2EDC  
            ?_Lcd_Chr_CP 0001                ??___fladd 0016                   ___wmul 34A8  
              ??___fldiv 002F                ??___awdiv 0012                ??___flneg 0012  
         __CFG_STVREN$ON 000000                ??___awmod 0012                ??___flmul 0016  
              ??___flsub 002F                ??___fltol 0012                   _efgtoa 0828  
                 _floorf 1E3C                   clear_0 33C4                   clear_1 33D0  
                 clear_2 33DC         ___awdiv@quotient 0014          ___awmod@divisor 0010  
             _Servo_init 34CE          ___awmod@counter 0012                   pad@buf 0020  
                 _strcpy 3264                   _strlen 347E                   fputc@c 000E  
                 fputs@c 001B                   fputs@i 001C                   fputs@s 0017  
              ??_isdigit 0010          ___fpclassifyf@e 0016                ?_ADC_Init 000E  
        ___fpclassifyf@u 0018          ___fpclassifyf@x 000E             __mediumconst 0000  
              ??_isspace 0010                   tblptrh 000FF7                ??_isupper 0010  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3264                ??_sprintf 0046                ??_tolower 0016  
              ??_strncmp 0014               ___flge@ff1 0027               ___flge@ff2 002B  
        ??___fpclassifyf 0012             ___xxtofl@arg 0018             ___xxtofl@exp 0017  
           ___xxtofl@val 000E               ___fleq@ff1 000E               ___fleq@ff2 0012  
             __accesstop 0060  __end_of__initialization 33E2          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 000E            ___rparam_used 000001               ___fltol@f1 000E  
         __pcstackCOMRAM 0001            __end_of_fputc 2E46            __end_of_fputs 33BE  
          __end_of_putch 34EC                ?i2___flge 0001               ??_ADC_Init 0010  
              ?_Lcd_Init 0001                ?_Lcd_Out2 0011          __CFG_LPT1OSC$ON 000000  
                ??_fputc 0012                  ??_fputs 001B      __size_of_Lcd_Chr_CP 0124  
                ??_putch 000E               __pbssBANK0 00DA               __pbssBANK1 0100  
             _efgtoa$722 0080               _efgtoa$723 0082               _efgtoa$732 0086  
             _efgtoa$733 0088               _efgtoa$734 008A               _efgtoa$728 0084  
                ?___flge 0027                  ?___fleq 000E                  ?___wmul 000E  
                ?_efgtoa 0070                  ?_floorf 0040              ?_Servo_init 0001  
             ??i2___flge 0009            ??_ADC_Channel 0060                  ?_strcpy 000E  
                ?_strlen 000E                ?___xxtofl 000E       __size_of_vfpfcnvrt 03B0  
             ??_Lcd_Init 0011               ??_Lcd_Out2 0014          __CFG_VREGEN$OFF 000000  
                _Lcd_Cmd 27AE                  _Lcd_Out 2FEA                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 00D0          __size_of___fleq 008A  
                ___fladd 18A8                  ___fldiv 1BB4                  ___awdiv 2F66  
                ___flneg 3450                  ___awmod 30D4                  ___flmul 1556  
                ___flsub 3302                  ___fltol 2C4A          __size_of___wmul 0026  
       ADC_Init@entradas 000E                ?_vfprintf 00CA             __psmallconst 0800  
        __size_of_efgtoa 097E          __size_of_floorf 01BA                  __pcinit 33BE  
                __ramtop 0800                  __ptext0 1FF6                  __ptext1 31B4  
                __ptext2 320E                  __ptext3 11A6                  __ptext4 2D04  
                __ptext5 0828                  __ptext6 32B6                  __ptext7 33F0  
                __ptext8 3264                  __ptext9 2E46                _T0CONbits 000FD5  
        __size_of_strcpy 0052          __size_of_strlen 002A                  _palabra 0171  
           __size_of_pad 0096                  _isdigit 3420             __size_of_isr 2682  
             ??___xxtofl 0012         ___awmod@dividend 000E                  _isspace 3348  
                _isupper 33F0                  efgtoa@c 0076                  efgtoa@d 0094  
                efgtoa@e 00AC                  efgtoa@f 0072                  efgtoa@g 00A8  
                efgtoa@h 009E                  efgtoa@i 00A6                  efgtoa@l 00A2  
                efgtoa@m 0090                  efgtoa@n 00AE                  efgtoa@p 0098  
                efgtoa@t 008C                  efgtoa@u 00B0                  efgtoa@w 009B  
                atoi@neg 001B      __end_of_ADC_Channel 22E4                  _sprintf 31B4  
                _tolower 32B6                  _strncmp 2D04           __pintcode_body 2564  
   end_of_initialization 33E2                  floorf@e 006A                  floorf@m 0066  
                floorf@u 006C                  floorf@x 0040                  fputc@fp 0010  
          __Lmediumconst 0000                  int_func 2564                  fputs@fp 0019  
    __size_of_Servo_init 001C        __end_of_vfpfcnvrt 1556               efgtoa@mode 009D  
             efgtoa@sign 0096             ??_Lcd_Chr_CP 000E                Lcd_Out2@x 0011  
              Lcd_Out2@y 0016                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0044  
                strcpy@d 0016                  strlen@a 0010                  strcpy@s 0014  
                strlen@s 000E                _PORTBbits 000F81                _PORTDbits 000F83  
            ___fladd@grs 001D            ___xxtofl@sign 0016                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 003A  
            ___fldiv@rem 0033        __size_of_ADC_Init 0074       __end_of_Lcd_Chr_CP 27AE  
            ___flmul@grs 001C           __end_of___flge 2AAE           __end_of___fleq 2F66  
            vfpfcnvrt@ap 00B8              vfpfcnvrt@ct 00C6              vfpfcnvrt@fp 00B4  
      ADC_Channel@Puerto 0040           __end_of___wmul 34CE           __end_of_efgtoa 11A6  
         __end_of_floorf 1FF6               floorf@F524 00DA              _ADC_Channel 2192  
         __end_of_strcpy 32B6           __end_of_strlen 34A8        __size_ofi2___flge 00D0  
    start_initialization 33BE              __end_of_pad 2EDC              __end_of_isr 268A  
          Lcd_Out@buffer 0012        __size_of_Lcd_Init 0112        __size_of_Lcd_Out2 0070  
  __end_of___fpclassifyf 2C4A              vfprintf@fmt 00CC                 ??___flge 002F  
               ??___fleq 0016                 ??___wmul 0012                 ??_efgtoa 0077  
               ??_floorf 0060             ??_Servo_init 000E                 ??_strcpy 0012  
               ??_strlen 0010                ___fladd@a 0012                ___fladd@b 000E  
              ___fldiv@a 002B                ___fldiv@b 0027                ___flmul@a 0012  
              ___flmul@b 000E              __pbssCOMRAM 0046                ___flsub@a 002B  
              ___flsub@b 0027            __pcstackBANK0 0060            __pcstackBANK1 01D2  
      __size_of___xxtofl 0140                 ?_Lcd_Cmd 0001                 ?_Lcd_Out 0011  
              _atoi$1223 001D                _atoi$1224 0021                _atoi$1225 001F  
     __end_of_Servo_init 34EA                __pintcode 0008                 ?___fladd 000E  
               ?___fldiv 0027                 ?___awdiv 000E                 ?___flneg 000E  
               ?___awmod 000E                 ?___flmul 000E                 ?___flsub 0027  
               ?___fltol 000E        __size_of_vfprintf 0056              __smallconst 0800  
               ?_isdigit 000E                 _ADC_Init 3060                 ?_isspace 000E  
               ?_isupper 000E                 ?_sprintf 00D0                 ?_tolower 0014  
         __size_of_fputc 00A0           __size_of_fputs 0038                 ?_strncmp 000E  
         __size_of_putch 0002           ___wmul@product 0012                 _LATCbits 000F8B  
               i2u770_47 25DE                 i2u771_47 2624                 i2u772_47 266A  
               i2u769_47 259A                 Lcd_Out@x 0011         __CFG_WDTPS$32768 000000  
               Lcd_Out@y 0016                _vfpfcnvrt 11A6             Lcd_Init@data 0012  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
               i2___flge 2AAE        ___wmul@multiplier 000E             _isspace$1254 0014  
           Lcd_Out2@data 0017                 _Lcd_Init 28CC                 _Lcd_Out2 3144  
             vfpfcnvrt@c 00C9               vfpfcnvrt@f 00C2         __size_of_Lcd_Cmd 011E  
       __size_of_Lcd_Out 0076                 __Hrparam 0000               vfprintf@ap 00CE  
               __Lrparam 0000               vfprintf@fp 00CA            ADC_Init@valor 0012  
               _Promedio 00DE         __size_of___fladd 030C         __size_of___fldiv 0288  
       __size_of___awdiv 0084         __size_of___flneg 002E         __size_of___awmod 0070  
       __size_of___flmul 0352         __size_of___flsub 0046         __size_of___fltol 00BA  
             ?_vfpfcnvrt 00B4             ?_ADC_Channel 0040       ___fpclassifyf@F463 0046  
             sprintf@fmt 00D2                 ___xxtofl 2424         __size_of_isdigit 0030  
         Lcd_Chr_CP@data 0010         __size_of_isspace 003E                 __ptext10 347E  
               __ptext11 3386                 __ptext20 29DE                 __ptext12 2DA6  
               __ptext21 2EDC                 __ptext13 34EA                 __ptext30 2FEA  
               __ptext22 30D4                 __ptext14 1E3C                 __ptext31 268A  
               __ptext23 2F66                 __ptext15 2B7E                 __ptext40 2AAE  
               __ptext32 28CC                 __ptext24 22E4                 __ptext16 2C4A  
               __ptext33 27AE                 __ptext25 3348                 __ptext17 3302  
               __ptext34 3060                 __ptext26 3420                 __ptext18 18A8  
               __ptext35 2192                 __ptext27 34A8                 __ptext19 3450  
               __ptext36 2424                 __ptext28 34CE                 __ptext37 1556  
               __ptext29 3144                 __ptext38 1BB4         __size_of_isupper 0030  
       __size_of_sprintf 005A         __size_of_tolower 004C               strcpy@dest 000E  
       __size_of_strncmp 00A2              Lcd_Cmd@data 0010            __size_of_atoi 0140  
          __size_of_main 019C                 efgtoa@fp 0070                 efgtoa@ne 0092  
               efgtoa@pp 008E                 efgtoa@ou 007C                 int$flags 0052  
               _vfprintf 320E    __CFG_CPUDIV$OSC1_PLL2 000000              Lcd_Out@data 0017  
             _INTCONbits 000FF2                 isdigit@c 000E                 intlevel2 0000  
              sprintf@ap 01D4                 isspace@c 000E                strcpy@src 0010  
               isupper@c 000E                strncmp@_l 000E                strncmp@_r 0010  
            efgtoa@nmode 009A              ??_vfpfcnvrt 00BA            _vfpfcnvrt$752 00C0  
          _vfpfcnvrt$748 00BE                 sprintf@f 01D6                 tolower@c 0014  
               sprintf@s 00D0   __size_of___fpclassifyf 00CC                 strncmp@l 0015  
               strncmp@n 0012                 strncmp@r 0017            ___fladd@signs 001A  
           ___fladd@aexp 001B             ___fladd@bexp 001C  
