

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 31 14:22:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50  0000                     
    51                           ; Version 2.05
    52                           ; Generated 20/12/2018 GMT
    53                           ; 
    54                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     _LATB	set	3978
    86  0000                     _PORTBbits	set	3969
    87  0000                     _PORTB	set	3969
    88  0000                     _ADRESL	set	4035
    89  0000                     _ADRESH	set	4036
    90  0000                     _LATAbits	set	3977
    91  0000                     _LATCbits	set	3979
    92  0000                     _ADCON2bits	set	4032
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _ADCON1	set	4033
    95  0000                     _TRISCbits	set	3988
    96  0000                     _TRISAbits	set	3986
    97  0000                     _PORTD	set	3971
    98  0000                     _TRISB	set	3987
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _PORTDbits	set	3971
   101  0000                     _TRISDbits	set	3989
   102                           
   103                           	psect	mediumconst
   104  007ED2                     __pmediumconst:
   105                           	opt callstack 0
   106  007ED2  00                 	db	0
   107  007ED3                     STR_24:
   108  007ED3  2A                 	db	42
   109  007ED4  2A                 	db	42
   110  007ED5  2A                 	db	42
   111  007ED6  2A                 	db	42
   112  007ED7  2A                 	db	42
   113  007ED8  2A                 	db	42
   114  007ED9  2A                 	db	42
   115  007EDA  2A                 	db	42
   116  007EDB  2A                 	db	42
   117  007EDC  2A                 	db	42
   118  007EDD  2A                 	db	42
   119  007EDE  2A                 	db	42
   120  007EDF  2A                 	db	42
   121  007EE0  2A                 	db	42
   122  007EE1  2A                 	db	42
   123  007EE2  2A                 	db	42
   124  007EE3  20                 	db	32
   125  007EE4  00                 	db	0
   126  007EE5                     STR_12:
   127  007EE5  6C                 	db	108	;'l'
   128  007EE6  69                 	db	105	;'i'
   129  007EE7  6D                 	db	109	;'m'
   130  007EE8  69                 	db	105	;'i'
   131  007EE9  74                 	db	116	;'t'
   132  007EEA  65                 	db	101	;'e'
   133  007EEB  20                 	db	32
   134  007EEC  69                 	db	105	;'i'
   135  007EED  6E                 	db	110	;'n'
   136  007EEE  66                 	db	102	;'f'
   137  007EEF  65                 	db	101	;'e'
   138  007EF0  72                 	db	114	;'r'
   139  007EF1  69                 	db	105	;'i'
   140  007EF2  6F                 	db	111	;'o'
   141  007EF3  72                 	db	114	;'r'
   142  007EF4  00                 	db	0
   143  007EF5                     STR_4:
   144  007EF5  6C                 	db	108	;'l'
   145  007EF6  69                 	db	105	;'i'
   146  007EF7  6D                 	db	109	;'m'
   147  007EF8  69                 	db	105	;'i'
   148  007EF9  74                 	db	116	;'t'
   149  007EFA  65                 	db	101	;'e'
   150  007EFB  20                 	db	32
   151  007EFC  53                 	db	83	;'S'
   152  007EFD  75                 	db	117	;'u'
   153  007EFE  70                 	db	112	;'p'
   154  007EFF  65                 	db	101	;'e'
   155  007F00  72                 	db	114	;'r'
   156  007F01  69                 	db	105	;'i'
   157  007F02  6F                 	db	111	;'o'
   158  007F03  72                 	db	114	;'r'
   159  007F04  00                 	db	0
   160  007F05                     STR_25:
   161  007F05  53                 	db	83	;'S'
   162  007F06  65                 	db	101	;'e'
   163  007F07  6C                 	db	108	;'l'
   164  007F08  65                 	db	101	;'e'
   165  007F09  63                 	db	99	;'c'
   166  007F0A  63                 	db	99	;'c'
   167  007F0B  69                 	db	105	;'i'
   168  007F0C  6F                 	db	111	;'o'
   169  007F0D  6E                 	db	110	;'n'
   170  007F0E  61                 	db	97	;'a'
   171  007F0F  20                 	db	32
   172  007F10  6C                 	db	108	;'l'
   173  007F11  61                 	db	97	;'a'
   174  007F12  20                 	db	32
   175  007F13  00                 	db	0
   176  007F14                     STR_13:
   177  007F14  58                 	db	88	;'X'
   178  007F15  50                 	db	80	;'P'
   179  007F16  20                 	db	32
   180  007F17  54                 	db	84	;'T'
   181  007F18  65                 	db	101	;'e'
   182  007F19  6D                 	db	109	;'m'
   183  007F1A  70                 	db	112	;'p'
   184  007F1B  20                 	db	32
   185  007F1C  4D                 	db	77	;'M'
   186  007F1D  49                 	db	73	;'I'
   187  007F1E  4E                 	db	78	;'N'
   188  007F1F  20                 	db	32
   189  007F20  58                 	db	88	;'X'
   190  007F21  50                 	db	80	;'P'
   191  007F22  00                 	db	0
   192  007F23                     STR_5:
   193  007F23  58                 	db	88	;'X'
   194  007F24  50                 	db	80	;'P'
   195  007F25  20                 	db	32
   196  007F26  54                 	db	84	;'T'
   197  007F27  65                 	db	101	;'e'
   198  007F28  6D                 	db	109	;'m'
   199  007F29  70                 	db	112	;'p'
   200  007F2A  20                 	db	32
   201  007F2B  4D                 	db	77	;'M'
   202  007F2C  41                 	db	65	;'A'
   203  007F2D  58                 	db	88	;'X'
   204  007F2E  20                 	db	32
   205  007F2F  58                 	db	88	;'X'
   206  007F30  50                 	db	80	;'P'
   207  007F31  00                 	db	0
   208  007F32                     STR_17:
   209  007F32  54                 	db	84	;'T'
   210  007F33  65                 	db	101	;'e'
   211  007F34  6D                 	db	109	;'m'
   212  007F35  70                 	db	112	;'p'
   213  007F36  20                 	db	32
   214  007F37  4D                 	db	77	;'M'
   215  007F38  49                 	db	73	;'I'
   216  007F39  4E                 	db	78	;'N'
   217  007F3A  20                 	db	32
   218  007F3B  6D                 	db	109	;'m'
   219  007F3C  61                 	db	97	;'a'
   220  007F3D  79                 	db	121	;'y'
   221  007F3E  6F                 	db	111	;'o'
   222  007F3F  72                 	db	114	;'r'
   223  007F40  00                 	db	0
   224  007F41                     STR_9:
   225  007F41  49                 	db	73	;'I'
   226  007F42  6E                 	db	110	;'n'
   227  007F43  74                 	db	116	;'t'
   228  007F44  65                 	db	101	;'e'
   229  007F45  6E                 	db	110	;'n'
   230  007F46  74                 	db	116	;'t'
   231  007F47  61                 	db	97	;'a'
   232  007F48  6C                 	db	108	;'l'
   233  007F49  6F                 	db	111	;'o'
   234  007F4A  20                 	db	32
   235  007F4B  64                 	db	100	;'d'
   236  007F4C  65                 	db	101	;'e'
   237  007F4D  20                 	db	32
   238  007F4E  00                 	db	0
   239  007F4F                     STR_3:
   240  007F4F  53                 	db	83	;'S'
   241  007F50  65                 	db	101	;'e'
   242  007F51  6C                 	db	108	;'l'
   243  007F52  65                 	db	101	;'e'
   244  007F53  63                 	db	99	;'c'
   245  007F54  63                 	db	99	;'c'
   246  007F55  69                 	db	105	;'i'
   247  007F56  6F                 	db	111	;'o'
   248  007F57  6E                 	db	110	;'n'
   249  007F58  65                 	db	101	;'e'
   250  007F59  20                 	db	32
   251  007F5A  65                 	db	101	;'e'
   252  007F5B  6C                 	db	108	;'l'
   253  007F5C  00                 	db	0
   254  007F5D                     STR_26:
   255  007F5D  74                 	db	116	;'t'
   256  007F5E  65                 	db	101	;'e'
   257  007F5F  6D                 	db	109	;'m'
   258  007F60  70                 	db	112	;'p'
   259  007F61  65                 	db	101	;'e'
   260  007F62  72                 	db	114	;'r'
   261  007F63  61                 	db	97	;'a'
   262  007F64  74                 	db	116	;'t'
   263  007F65  75                 	db	117	;'u'
   264  007F66  72                 	db	114	;'r'
   265  007F67  61                 	db	97	;'a'
   266  007F68  20                 	db	32
   267  007F69  00                 	db	0
   268  007F6A                     STR_23:
   269  007F6A  48                 	db	72	;'H'
   270  007F6B  6F                 	db	111	;'o'
   271  007F6C  6C                 	db	108	;'l'
   272  007F6D  61                 	db	97	;'a'
   273  007F6E  20                 	db	32
   274  007F6F  48                 	db	72	;'H'
   275  007F70  75                 	db	117	;'u'
   276  007F71  6D                 	db	109	;'m'
   277  007F72  61                 	db	97	;'a'
   278  007F73  6E                 	db	110	;'n'
   279  007F74  6F                 	db	111	;'o'
   280  007F75  20                 	db	32
   281  007F76  00                 	db	0
   282  007F77                     STR_18:
   283  007F77  71                 	db	113	;'q'
   284  007F78  75                 	db	117	;'u'
   285  007F79  65                 	db	101	;'e'
   286  007F7A  20                 	db	32
   287  007F7B  54                 	db	84	;'T'
   288  007F7C  65                 	db	101	;'e'
   289  007F7D  6D                 	db	109	;'m'
   290  007F7E  70                 	db	112	;'p'
   291  007F7F  20                 	db	32
   292  007F80  4D                 	db	77	;'M'
   293  007F81  41                 	db	65	;'A'
   294  007F82  58                 	db	88	;'X'
   295  007F83  00                 	db	0
   296  007F84                     STR_7:
   297  007F84  56                 	db	86	;'V'
   298  007F85  61                 	db	97	;'a'
   299  007F86  6C                 	db	108	;'l'
   300  007F87  6F                 	db	111	;'o'
   301  007F88  72                 	db	114	;'r'
   302  007F89  20                 	db	32
   303  007F8A  6D                 	db	109	;'m'
   304  007F8B  61                 	db	97	;'a'
   305  007F8C  78                 	db	120	;'x'
   306  007F8D  69                 	db	105	;'i'
   307  007F8E  6D                 	db	109	;'m'
   308  007F8F  6F                 	db	111	;'o'
   309  007F90  00                 	db	0
   310  007F91                     STR_10:
   311  007F91  6E                 	db	110	;'n'
   312  007F92  75                 	db	117	;'u'
   313  007F93  65                 	db	101	;'e'
   314  007F94  76                 	db	118	;'v'
   315  007F95  6F                 	db	111	;'o'
   316  007F96  20                 	db	32
   317  007F97  68                 	db	104	;'h'
   318  007F98  75                 	db	117	;'u'
   319  007F99  6D                 	db	109	;'m'
   320  007F9A  61                 	db	97	;'a'
   321  007F9B  6E                 	db	110	;'n'
   322  007F9C  6F                 	db	111	;'o'
   323  007F9D  00                 	db	0
   324  007F9E                     STR_21:
   325  007F9E  54                 	db	84	;'T'
   326  007F9F  65                 	db	101	;'e'
   327  007FA0  6D                 	db	109	;'m'
   328  007FA1  70                 	db	112	;'p'
   329  007FA2  65                 	db	101	;'e'
   330  007FA3  72                 	db	114	;'r'
   331  007FA4  61                 	db	97	;'a'
   332  007FA5  74                 	db	116	;'t'
   333  007FA6  75                 	db	117	;'u'
   334  007FA7  72                 	db	114	;'r'
   335  007FA8  61                 	db	97	;'a'
   336  007FA9  00                 	db	0
   337  007FAA                     STR_16:
   338  007FAA  61                 	db	97	;'a'
   339  007FAB  6C                 	db	108	;'l'
   340  007FAC  63                 	db	99	;'c'
   341  007FAD  61                 	db	97	;'a'
   342  007FAE  6E                 	db	110	;'n'
   343  007FAF  7A                 	db	122	;'z'
   344  007FB0  61                 	db	97	;'a'
   345  007FB1  64                 	db	100	;'d'
   346  007FB2  6F                 	db	111	;'o'
   347  007FB3  20                 	db	32
   348  007FB4  6F                 	db	111	;'o'
   349  007FB5  00                 	db	0
   350  007FB6                     STR_1:
   351  007FB6  42                 	db	66	;'B'
   352  007FB7  69                 	db	105	;'i'
   353  007FB8  65                 	db	101	;'e'
   354  007FB9  6E                 	db	110	;'n'
   355  007FBA  76                 	db	118	;'v'
   356  007FBB  65                 	db	101	;'e'
   357  007FBC  6E                 	db	110	;'n'
   358  007FBD  69                 	db	105	;'i'
   359  007FBE  64                 	db	100	;'d'
   360  007FBF  6F                 	db	111	;'o'
   361  007FC0  00                 	db	0
   362  007FC1                     STR_27:
   363  007FC1  44                 	db	68	;'D'
   364  007FC2  65                 	db	101	;'e'
   365  007FC3  20                 	db	32
   366  007FC4  6E                 	db	110	;'n'
   367  007FC5  75                 	db	117	;'u'
   368  007FC6  65                 	db	101	;'e'
   369  007FC7  76                 	db	118	;'v'
   370  007FC8  6F                 	db	111	;'o'
   371  007FC9  20                 	db	32
   372  007FCA  00                 	db	0
   373  007FCB                     STR_8:
   374  007FCB  61                 	db	97	;'a'
   375  007FCC  6C                 	db	108	;'l'
   376  007FCD  63                 	db	99	;'c'
   377  007FCE  61                 	db	97	;'a'
   378  007FCF  6E                 	db	110	;'n'
   379  007FD0  7A                 	db	122	;'z'
   380  007FD1  61                 	db	97	;'a'
   381  007FD2  64                 	db	100	;'d'
   382  007FD3  6F                 	db	111	;'o'
   383  007FD4  00                 	db	0
   384  007FD5                     STR_6:
   385  007FD5  43                 	db	67	;'C'
   386  007FD6  3A                 	db	58	;':'
   387  007FD7  25                 	db	37
   388  007FD8  30                 	db	48	;'0'
   389  007FD9  2E                 	db	46
   390  007FDA  31                 	db	49	;'1'
   391  007FDB  66                 	db	102	;'f'
   392  007FDC  00                 	db	0
   393  007FDD                     STR_22:
   394  007FDD  43                 	db	67	;'C'
   395  007FDE  3A                 	db	58	;':'
   396  007FDF  25                 	db	37
   397  007FE0  2E                 	db	46
   398  007FE1  33                 	db	51	;'3'
   399  007FE2  66                 	db	102	;'f'
   400  007FE3  00                 	db	0
   401  007FE4                     STR_2:
   402  007FE4  48                 	db	72	;'H'
   403  007FE5  75                 	db	117	;'u'
   404  007FE6  6D                 	db	109	;'m'
   405  007FE7  61                 	db	97	;'a'
   406  007FE8  6E                 	db	110	;'n'
   407  007FE9  6F                 	db	111	;'o'
   408  007FEA  00                 	db	0
   409  007FEB                     STR_29:
   410  007FEB  49                 	db	73	;'I'
   411  007FEC  4E                 	db	78	;'N'
   412  007FED  46                 	db	70	;'F'
   413  007FEE  00                 	db	0
   414  007FEF                     STR_33:
   415  007FEF  4E                 	db	78	;'N'
   416  007FF0  41                 	db	65	;'A'
   417  007FF1  4E                 	db	78	;'N'
   418  007FF2  00                 	db	0
   419  007FF3                     STR_30:
   420  007FF3  69                 	db	105	;'i'
   421  007FF4  6E                 	db	110	;'n'
   422  007FF5  66                 	db	102	;'f'
   423  007FF6  00                 	db	0
   424  007FF7                     STR_34:
   425  007FF7  6E                 	db	110	;'n'
   426  007FF8  61                 	db	97	;'a'
   427  007FF9  6E                 	db	110	;'n'
   428  007FFA  00                 	db	0
   429  007FFB                     STR_37:
   430  007FFB  6C                 	db	108	;'l'
   431  007FFC  66                 	db	102	;'f'
   432  007FFD  00                 	db	0
   433  0000                     
   434                           ; #config settings
   435  007FFE  00                 	db	0	; dummy byte at the end
   436  0000                     
   437                           	psect	cinit
   438  004B62                     __pcinit:
   439                           	opt callstack 0
   440  004B62                     start_initialization:
   441                           	opt callstack 0
   442  004B62                     __initialization:
   443                           	opt callstack 0
   444                           
   445                           ; Clear objects allocated to BANK1 (131 bytes)
   446  004B62  EE01  F000         	lfsr	0,__pbssBANK1
   447  004B66  0E83               	movlw	131
   448  004B68                     clear_0:
   449  004B68  6AEE               	clrf	postinc0,c
   450  004B6A  06E8               	decf	wreg,f,c
   451  004B6C  E1FD               	bnz	clear_0
   452                           
   453                           ; Clear objects allocated to BANK0 (53 bytes)
   454  004B6E  EE00  F0C4         	lfsr	0,__pbssBANK0
   455  004B72  0E35               	movlw	53
   456  004B74                     clear_1:
   457  004B74  6AEE               	clrf	postinc0,c
   458  004B76  06E8               	decf	wreg,f,c
   459  004B78  E1FD               	bnz	clear_1
   460  004B7A                     end_of_initialization:
   461                           	opt callstack 0
   462  004B7A                     __end_of__initialization:
   463                           	opt callstack 0
   464  004B7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   465  004B7C  6EF8               	movwf	tblptru,c
   466  004B7E  0100               	movlb	0
   467  004B80  EF49  F03A         	goto	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0000C4                     __pbssBANK0:
   471                           	opt callstack 0
   472  0000C4                     floorf@F524:
   473                           	opt callstack 0
   474  0000C4                     	ds	4
   475  0000C8                     ___fpclassifyf@F463:
   476                           	opt callstack 0
   477  0000C8                     	ds	4
   478  0000CC                     _valor:
   479                           	opt callstack 0
   480  0000CC                     	ds	4
   481  0000D0                     _min:
   482                           	opt callstack 0
   483  0000D0                     	ds	4
   484  0000D4                     _max:
   485                           	opt callstack 0
   486  0000D4                     	ds	4
   487  0000D8                     _conver:
   488                           	opt callstack 0
   489  0000D8                     	ds	4
   490  0000DC                     _adc:
   491                           	opt callstack 0
   492  0000DC                     	ds	4
   493  0000E0                     _nout:
   494                           	opt callstack 0
   495  0000E0                     	ds	2
   496  0000E2                     _width:
   497                           	opt callstack 0
   498  0000E2                     	ds	2
   499  0000E4                     _prec:
   500                           	opt callstack 0
   501  0000E4                     	ds	2
   502  0000E6                     _flags:
   503                           	opt callstack 0
   504  0000E6                     	ds	2
   505  0000E8                     _palabra:
   506                           	opt callstack 0
   507  0000E8                     	ds	17
   508                           
   509                           	psect	bssBANK1
   510  000100                     __pbssBANK1:
   511                           	opt callstack 0
   512  000100                     _palabra1:
   513                           	opt callstack 0
   514  000100                     	ds	17
   515  000111                     _dbuf:
   516                           	opt callstack 0
   517  000111                     	ds	80
   518  000161                     _palabra2:
   519                           	opt callstack 0
   520  000161                     	ds	17
   521  000172                     _palabra0:
   522                           	opt callstack 0
   523  000172                     	ds	17
   524                           
   525                           	psect	cstackBANK0
   526  000060                     __pcstackBANK0:
   527                           	opt callstack 0
   528  000060                     efgtoa@ou:
   529                           	opt callstack 0
   530                           
   531                           ; 4 bytes @ 0x0
   532  000060                     	ds	4
   533  000064                     _efgtoa$698:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x4
   537  000064                     	ds	2
   538  000066                     _efgtoa$699:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x6
   542  000066                     	ds	2
   543  000068                     _efgtoa$704:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x8
   547  000068                     	ds	2
   548  00006A                     _efgtoa$708:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0xA
   552  00006A                     	ds	2
   553  00006C                     _efgtoa$709:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0xC
   557  00006C                     	ds	2
   558  00006E                     _efgtoa$710:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0xE
   562  00006E                     	ds	2
   563  000070                     efgtoa@t:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x10
   567  000070                     	ds	2
   568  000072                     efgtoa@pp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x12
   572  000072                     	ds	2
   573  000074                     efgtoa@m:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x14
   577  000074                     	ds	2
   578  000076                     efgtoa@ne:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x16
   582  000076                     	ds	2
   583  000078                     efgtoa@d:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x18
   587  000078                     	ds	2
   588  00007A                     efgtoa@sign:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x1A
   592  00007A                     	ds	2
   593  00007C                     efgtoa@p:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x1C
   597  00007C                     	ds	2
   598  00007E                     efgtoa@nmode:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0x1E
   602  00007E                     	ds	1
   603  00007F                     efgtoa@w:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x1F
   607  00007F                     	ds	2
   608  000081                     efgtoa@mode:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x21
   612  000081                     	ds	1
   613  000082                     efgtoa@h:
   614                           	opt callstack 0
   615                           
   616                           ; 4 bytes @ 0x22
   617  000082                     	ds	4
   618  000086                     efgtoa@l:
   619                           	opt callstack 0
   620                           
   621                           ; 4 bytes @ 0x26
   622  000086                     	ds	4
   623  00008A                     efgtoa@i:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x2A
   627  00008A                     	ds	2
   628  00008C                     efgtoa@g:
   629                           	opt callstack 0
   630                           
   631                           ; 4 bytes @ 0x2C
   632  00008C                     	ds	4
   633  000090                     efgtoa@e:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x30
   637  000090                     	ds	2
   638  000092                     efgtoa@n:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x32
   642  000092                     	ds	2
   643  000094                     efgtoa@u:
   644                           	opt callstack 0
   645                           
   646                           ; 4 bytes @ 0x34
   647  000094                     	ds	4
   648  000098                     vfpfcnvrt@done:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x38
   652  000098                     	ds	2
   653  00009A                     _vfpfcnvrt$724:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x3A
   657  00009A                     	ds	2
   658  00009C                     _vfpfcnvrt$728:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x3C
   662  00009C                     	ds	2
   663  00009E                     vfpfcnvrt@f:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x3E
   667  00009E                     	ds	4
   668  0000A2                     vfpfcnvrt@ct:
   669                           	opt callstack 0
   670                           
   671                           ; 3 bytes @ 0x42
   672  0000A2                     	ds	3
   673  0000A5                     vfpfcnvrt@c:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x45
   677  0000A5                     	ds	1
   678  0000A6                     ?_vfprintf:
   679                           	opt callstack 0
   680  0000A6                     vfprintf@fp:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x46
   684  0000A6                     	ds	2
   685  0000A8                     vfprintf@fmt:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x48
   689  0000A8                     	ds	2
   690  0000AA                     vfprintf@ap:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x4A
   694  0000AA                     	ds	2
   695  0000AC                     ?_sprintf:
   696                           	opt callstack 0
   697  0000AC                     sprintf@s:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x4C
   701  0000AC                     	ds	2
   702  0000AE                     sprintf@fmt:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x4E
   706  0000AE                     	ds	8
   707  0000B6                     sprintf@ap:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x56
   711  0000B6                     	ds	2
   712  0000B8                     sprintf@f:
   713                           	opt callstack 0
   714                           
   715                           ; 6 bytes @ 0x58
   716  0000B8                     	ds	6
   717  0000BE                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x5E
   720  0000BE                     	ds	2
   721  0000C0                     main@caracter:
   722                           	opt callstack 0
   723                           
   724                           ; 4 bytes @ 0x60
   725  0000C0                     	ds	4
   726                           
   727                           	psect	cstackCOMRAM
   728  000001                     __pcstackCOMRAM:
   729                           	opt callstack 0
   730  000001                     ??_Lcd_Cmd:
   731  000001                     ??_Lcd_Chr_CP:
   732  000001                     ?_strlen:
   733                           	opt callstack 0
   734  000001                     ?___fpclassifyf:
   735                           	opt callstack 0
   736  000001                     ?_isupper:
   737                           	opt callstack 0
   738  000001                     ?_isdigit:
   739                           	opt callstack 0
   740  000001                     ?_strncmp:
   741                           	opt callstack 0
   742  000001                     ?_isspace:
   743                           	opt callstack 0
   744  000001                     ?___wmul:
   745                           	opt callstack 0
   746  000001                     ?___awdiv:
   747                           	opt callstack 0
   748  000001                     ?___awmod:
   749                           	opt callstack 0
   750  000001                     ?___flmul:
   751                           	opt callstack 0
   752  000001                     ?___flneg:
   753                           	opt callstack 0
   754  000001                     ?___fltol:
   755                           	opt callstack 0
   756  000001                     ?___xxtofl:
   757                           	opt callstack 0
   758  000001                     ___wmul@multiplier:
   759                           	opt callstack 0
   760  000001                     ___awdiv@dividend:
   761                           	opt callstack 0
   762  000001                     ___awmod@dividend:
   763                           	opt callstack 0
   764  000001                     isdigit@c:
   765                           	opt callstack 0
   766  000001                     isspace@c:
   767                           	opt callstack 0
   768  000001                     isupper@c:
   769                           	opt callstack 0
   770  000001                     fputc@c:
   771                           	opt callstack 0
   772  000001                     strcpy@dest:
   773                           	opt callstack 0
   774  000001                     strlen@s:
   775                           	opt callstack 0
   776  000001                     strncmp@_l:
   777                           	opt callstack 0
   778  000001                     ___fleq@ff1:
   779                           	opt callstack 0
   780  000001                     ___flneg@f1:
   781                           	opt callstack 0
   782  000001                     ___fltol@f1:
   783                           	opt callstack 0
   784  000001                     ___flmul@b:
   785                           	opt callstack 0
   786  000001                     ___xxtofl@val:
   787                           	opt callstack 0
   788  000001                     ___fpclassifyf@x:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x0
   792  000001                     	ds	2
   793  000003                     ??_isupper:
   794  000003                     ??_isdigit:
   795  000003                     ??_isspace:
   796  000003                     Lcd_Chr_CP@data:
   797                           	opt callstack 0
   798  000003                     Lcd_Cmd@data:
   799                           	opt callstack 0
   800  000003                     ___wmul@multiplicand:
   801                           	opt callstack 0
   802  000003                     ___awdiv@divisor:
   803                           	opt callstack 0
   804  000003                     ___awmod@divisor:
   805                           	opt callstack 0
   806  000003                     fputc@fp:
   807                           	opt callstack 0
   808  000003                     strcpy@src:
   809                           	opt callstack 0
   810  000003                     strlen@a:
   811                           	opt callstack 0
   812  000003                     strncmp@_r:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816  000003                     	ds	1
   817  000004                     ??_Lcd_Init:
   818  000004                     Lcd_Out@x:
   819                           	opt callstack 0
   820  000004                     Lcd_Out2@x:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x3
   824  000004                     	ds	1
   825  000005                     ??_fputc:
   826  000005                     ??___fpclassifyf:
   827  000005                     ??_strcpy:
   828  000005                     ??___fltol:
   829  000005                     ??___xxtofl:
   830  000005                     Lcd_Init@data:
   831                           	opt callstack 0
   832  000005                     ___awdiv@counter:
   833                           	opt callstack 0
   834  000005                     ___awmod@counter:
   835                           	opt callstack 0
   836  000005                     Lcd_Out@buffer:
   837                           	opt callstack 0
   838  000005                     Lcd_Out2@buffer:
   839                           	opt callstack 0
   840  000005                     ___wmul@product:
   841                           	opt callstack 0
   842  000005                     strncmp@n:
   843                           	opt callstack 0
   844  000005                     ___fleq@ff2:
   845                           	opt callstack 0
   846  000005                     ___flmul@a:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x4
   850  000005                     	ds	1
   851  000006                     ___awdiv@sign:
   852                           	opt callstack 0
   853  000006                     ___awmod@sign:
   854                           	opt callstack 0
   855                           
   856                           ; 1 bytes @ 0x5
   857  000006                     	ds	1
   858  000007                     ??_strncmp:
   859  000007                     ??_Lcd_Out:
   860  000007                     ??_Lcd_Out2:
   861  000007                     ?_tolower:
   862                           	opt callstack 0
   863  000007                     _isspace$1230:
   864                           	opt callstack 0
   865  000007                     ___awdiv@quotient:
   866                           	opt callstack 0
   867  000007                     strcpy@s:
   868                           	opt callstack 0
   869  000007                     tolower@c:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x6
   873  000007                     	ds	1
   874  000008                     ?_atoi:
   875                           	opt callstack 0
   876  000008                     atoi@s:
   877                           	opt callstack 0
   878  000008                     strncmp@l:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x7
   882  000008                     	ds	1
   883  000009                     ??_tolower:
   884  000009                     ??___flmul:
   885  000009                     ??___fleq:
   886  000009                     Lcd_Out@y:
   887                           	opt callstack 0
   888  000009                     Lcd_Out2@y:
   889                           	opt callstack 0
   890  000009                     ___fltol@sign1:
   891                           	opt callstack 0
   892  000009                     ___xxtofl@sign:
   893                           	opt callstack 0
   894  000009                     ___fpclassifyf@e:
   895                           	opt callstack 0
   896  000009                     strcpy@d:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x8
   900  000009                     	ds	1
   901  00000A                     ??_atoi:
   902  00000A                     Lcd_Out@data:
   903                           	opt callstack 0
   904  00000A                     Lcd_Out2@data:
   905                           	opt callstack 0
   906  00000A                     ___fltol@exp1:
   907                           	opt callstack 0
   908  00000A                     ___xxtofl@exp:
   909                           	opt callstack 0
   910  00000A                     fputs@s:
   911                           	opt callstack 0
   912  00000A                     strncmp@r:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x9
   916  00000A                     	ds	1
   917  00000B                     ___xxtofl@arg:
   918                           	opt callstack 0
   919  00000B                     ___fpclassifyf@u:
   920                           	opt callstack 0
   921                           
   922                           ; 4 bytes @ 0xA
   923  00000B                     	ds	1
   924  00000C                     fputs@fp:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0xB
   928  00000C                     	ds	1
   929  00000D                     ___flmul@sign:
   930                           	opt callstack 0
   931  00000D                     _tolower$1315:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0xC
   935  00000D                     	ds	1
   936  00000E                     fputs@c:
   937                           	opt callstack 0
   938  00000E                     atoi@neg:
   939                           	opt callstack 0
   940  00000E                     ___flmul@grs:
   941                           	opt callstack 0
   942                           
   943                           ; 4 bytes @ 0xD
   944  00000E                     	ds	1
   945  00000F                     fputs@i:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0xE
   949  00000F                     	ds	1
   950  000010                     _atoi$1199:
   951                           	opt callstack 0
   952                           
   953                           ; 2 bytes @ 0xF
   954  000010                     	ds	1
   955  000011                     ?_pad:
   956                           	opt callstack 0
   957  000011                     pad@fp:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x10
   961  000011                     	ds	1
   962  000012                     ___flmul@aexp:
   963                           	opt callstack 0
   964  000012                     _atoi$1201:
   965                           	opt callstack 0
   966                           
   967                           ; 2 bytes @ 0x11
   968  000012                     	ds	1
   969  000013                     ___flmul@bexp:
   970                           	opt callstack 0
   971  000013                     pad@buf:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x12
   975  000013                     	ds	1
   976  000014                     _atoi$1200:
   977                           	opt callstack 0
   978  000014                     ___flmul@prod:
   979                           	opt callstack 0
   980                           
   981                           ; 4 bytes @ 0x13
   982  000014                     	ds	1
   983  000015                     pad@p:
   984                           	opt callstack 0
   985  000015                     atoi@n:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x14
   989  000015                     	ds	2
   990  000017                     ??_pad:
   991                           
   992                           ; 1 bytes @ 0x16
   993  000017                     	ds	1
   994  000018                     pad@i:
   995                           	opt callstack 0
   996  000018                     ___flmul@temp:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x17
  1000  000018                     	ds	2
  1001  00001A                     ?___fladd:
  1002                           	opt callstack 0
  1003  00001A                     ?___fldiv:
  1004                           	opt callstack 0
  1005  00001A                     pad@w:
  1006                           	opt callstack 0
  1007  00001A                     ___flge@ff1:
  1008                           	opt callstack 0
  1009  00001A                     ___fladd@b:
  1010                           	opt callstack 0
  1011  00001A                     ___fldiv@b:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x19
  1015  00001A                     	ds	4
  1016  00001E                     ___flge@ff2:
  1017                           	opt callstack 0
  1018  00001E                     ___fladd@a:
  1019                           	opt callstack 0
  1020  00001E                     ___fldiv@a:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x1D
  1024  00001E                     	ds	4
  1025  000022                     ??___fladd:
  1026  000022                     ??___fldiv:
  1027  000022                     ??___flge:
  1028                           
  1029                           ; 1 bytes @ 0x21
  1030  000022                     	ds	4
  1031  000026                     ___fladd@signs:
  1032                           	opt callstack 0
  1033  000026                     ___fldiv@rem:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x25
  1037  000026                     	ds	1
  1038  000027                     ___fladd@aexp:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x26
  1042  000027                     	ds	1
  1043  000028                     ___fladd@bexp:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x27
  1047  000028                     	ds	1
  1048  000029                     ___fladd@grs:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x28
  1052  000029                     	ds	1
  1053  00002A                     ?___flsub:
  1054                           	opt callstack 0
  1055  00002A                     ___fldiv@sign:
  1056                           	opt callstack 0
  1057  00002A                     ___flsub@b:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x29
  1061  00002A                     	ds	1
  1062  00002B                     ___fldiv@new_exp:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x2A
  1066  00002B                     	ds	2
  1067  00002D                     ___fldiv@grs:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x2C
  1071  00002D                     	ds	1
  1072  00002E                     ___flsub@a:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x2D
  1076  00002E                     	ds	3
  1077  000031                     ___fldiv@bexp:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x30
  1081  000031                     	ds	1
  1082  000032                     ___fldiv@aexp:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x31
  1086  000032                     	ds	1
  1087  000033                     ?_floorf:
  1088                           	opt callstack 0
  1089  000033                     floorf@x:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x32
  1093  000033                     	ds	4
  1094  000037                     ??_floorf:
  1095                           
  1096                           ; 1 bytes @ 0x36
  1097  000037                     	ds	6
  1098  00003D                     floorf@m:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x3C
  1102  00003D                     	ds	4
  1103  000041                     floorf@e:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x40
  1107  000041                     	ds	2
  1108  000043                     floorf@u:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x42
  1112  000043                     	ds	4
  1113  000047                     ?_efgtoa:
  1114                           	opt callstack 0
  1115  000047                     efgtoa@fp:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x46
  1119  000047                     	ds	2
  1120  000049                     efgtoa@f:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x48
  1124  000049                     	ds	4
  1125  00004D                     efgtoa@c:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x4C
  1129  00004D                     	ds	1
  1130  00004E                     ??_efgtoa:
  1131                           
  1132                           ; 1 bytes @ 0x4D
  1133  00004E                     	ds	5
  1134  000053                     ?_vfpfcnvrt:
  1135                           	opt callstack 0
  1136  000053                     vfpfcnvrt@fp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x52
  1140  000053                     	ds	2
  1141  000055                     vfpfcnvrt@fmt:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x54
  1145  000055                     	ds	2
  1146  000057                     vfpfcnvrt@ap:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x56
  1150  000057                     	ds	2
  1151  000059                     ??_vfpfcnvrt:
  1152                           
  1153                           ; 1 bytes @ 0x58
  1154  000059                     	ds	4
  1155  00005D                     vfprintf@cfmt:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x5C
  1159  00005D                     	ds	2
  1160  00005F                     
  1161                           ; 1 bytes @ 0x5E
  1162 ;;
  1163 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1164 ;;
  1165 ;; *************** function _main *****************
  1166 ;; Defined at:
  1167 ;;		line 26 in file "Practica9_30_03_19.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  caracter        4   96[BANK0 ] float 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1184 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        6 bytes
  1186 ;; Hardware stack levels required when called:    8
  1187 ;; This function calls:
  1188 ;;		_Lcd_Cmd
  1189 ;;		_Lcd_Init
  1190 ;;		_Lcd_Out
  1191 ;;		_Lcd_Out2
  1192 ;;		___fladd
  1193 ;;		___fldiv
  1194 ;;		___flge
  1195 ;;		___flmul
  1196 ;;		___xxtofl
  1197 ;;		_sprintf
  1198 ;;		_teclado
  1199 ;; This function is called by:
  1200 ;;		Startup code after reset
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text0
  1205  007492                     __ptext0:
  1206                           	opt callstack 0
  1207  007492                     _main:
  1208                           	opt callstack 23
  1209                           
  1210                           ;Practica9_30_03_19.c: 27:     INTCON2bits.RBPU=0;
  1211                           
  1212                           ;incstack = 0
  1213  007492  9EF1               	bcf	4081,7,c	;volatile
  1214                           
  1215                           ;Practica9_30_03_19.c: 28:     TRISB=0xF0;
  1216  007494  0EF0               	movlw	240
  1217  007496  6E93               	movwf	3987,c	;volatile
  1218                           
  1219                           ;Practica9_30_03_19.c: 29:     PORTD=0x00;
  1220  007498  0E00               	movlw	0
  1221  00749A  6E83               	movwf	3971,c	;volatile
  1222                           
  1223                           ;Practica9_30_03_19.c: 30:     TRISAbits.TRISA0=1;
  1224  00749C  8092               	bsf	3986,0,c	;volatile
  1225                           
  1226                           ;Practica9_30_03_19.c: 31:     TRISAbits.RA2=0;
  1227  00749E  9492               	bcf	3986,2,c	;volatile
  1228                           
  1229                           ;Practica9_30_03_19.c: 32:     TRISAbits.RA3=0;
  1230  0074A0  9692               	bcf	3986,3,c	;volatile
  1231                           
  1232                           ;Practica9_30_03_19.c: 33:     TRISCbits.RC1=0;
  1233  0074A2  9294               	bcf	3988,1,c	;volatile
  1234                           
  1235                           ;Practica9_30_03_19.c: 34:     TRISCbits.RC6=0;
  1236  0074A4  9C94               	bcf	3988,6,c	;volatile
  1237                           
  1238                           ;Practica9_30_03_19.c: 35:     ADCON1=0b00001110;
  1239  0074A6  0E0E               	movlw	14
  1240  0074A8  6EC1               	movwf	4033,c	;volatile
  1241                           
  1242                           ;Practica9_30_03_19.c: 36:     ADCON0bits.CHS=0;
  1243  0074AA  0EC3               	movlw	-61
  1244  0074AC  16C2               	andwf	4034,f,c	;volatile
  1245                           
  1246                           ;Practica9_30_03_19.c: 37:     ADCON2bits.ADFM=1;
  1247  0074AE  8EC0               	bsf	4032,7,c	;volatile
  1248                           
  1249                           ;Practica9_30_03_19.c: 38:     ADCON2bits.ADCS=0b010;
  1250  0074B0  50C0               	movf	4032,w,c	;volatile
  1251  0074B2  0BF8               	andlw	-8
  1252  0074B4  0902               	iorlw	2
  1253  0074B6  6EC0               	movwf	4032,c	;volatile
  1254                           
  1255                           ;Practica9_30_03_19.c: 39:     ADCON2bits.ACQT=0b101;
  1256  0074B8  50C0               	movf	4032,w,c	;volatile
  1257  0074BA  0BC7               	andlw	-57
  1258  0074BC  0928               	iorlw	40
  1259  0074BE  6EC0               	movwf	4032,c	;volatile
  1260                           
  1261                           ;Practica9_30_03_19.c: 40:     ADCON0bits.ADON=1;
  1262  0074C0  80C2               	bsf	4034,0,c	;volatile
  1263                           
  1264                           ;Practica9_30_03_19.c: 41:     float caracter;;Practica9_30_03_19.c: 42:     LATCbits.LC
      +                          1=0;LATCbits.LC6=0;LATAbits.LA2=0;LATAbits.LA3=0;
  1265  0074C2  928B               	bcf	3979,1,c	;volatile
  1266  0074C4  9C8B               	bcf	3979,6,c	;volatile
  1267  0074C6  9489               	bcf	3977,2,c	;volatile
  1268  0074C8  9689               	bcf	3977,3,c	;volatile
  1269                           
  1270                           ;Practica9_30_03_19.c: 43:     Lcd_Init();
  1271  0074CA  EC7D  F02A         	call	_Lcd_Init	;wreg free
  1272                           
  1273                           ;Practica9_30_03_19.c: 44:     Lcd_Cmd(1);
  1274  0074CE  0E01               	movlw	1
  1275  0074D0  EC06  F02B         	call	_Lcd_Cmd
  1276                           
  1277                           ;Practica9_30_03_19.c: 45:     Lcd_Cmd(12);
  1278  0074D4  0E0C               	movlw	12
  1279  0074D6  EC06  F02B         	call	_Lcd_Cmd
  1280                           
  1281                           ;Practica9_30_03_19.c: 46:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1282  0074DA  0E02               	movlw	2
  1283  0074DC  0100               	movlb	0	; () banked
  1284  0074DE  6FBF               	movwf	(??_main+1)& (0+255),b
  1285  0074E0  0E86               	movlw	134
  1286  0074E2  6FBE               	movwf	??_main& (0+255),b
  1287  0074E4  0E99               	movlw	153
  1288  0074E6                     u5617:
  1289  0074E6  2EE8               	decfsz	wreg,f,c
  1290  0074E8  D7FE               	bra	u5617
  1291  0074EA  2FBE               	decfsz	??_main& (0+255),f,b
  1292  0074EC  D7FC               	bra	u5617
  1293  0074EE  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1294  0074F0  D7FA               	bra	u5617
  1295                           
  1296                           ;Practica9_30_03_19.c: 47:     Lcd_Out(1,3,"Bienvenido");
  1297  0074F2  0E03               	movlw	3
  1298  0074F4  6E04               	movwf	Lcd_Out@x,c
  1299  0074F6  0EB6               	movlw	low STR_1
  1300  0074F8  6E05               	movwf	Lcd_Out@buffer,c
  1301  0074FA  0E7F               	movlw	high STR_1
  1302  0074FC  6E06               	movwf	Lcd_Out@buffer+1,c
  1303  0074FE  0E01               	movlw	1
  1304  007500  ECA2  F027         	call	_Lcd_Out
  1305                           
  1306                           ;Practica9_30_03_19.c: 48:     Lcd_Out(2,5,"Humano");
  1307  007504  0E05               	movlw	5
  1308  007506  6E04               	movwf	Lcd_Out@x,c
  1309  007508  0EE4               	movlw	low STR_2
  1310  00750A  6E05               	movwf	Lcd_Out@buffer,c
  1311  00750C  0E7F               	movlw	high STR_2
  1312  00750E  6E06               	movwf	Lcd_Out@buffer+1,c
  1313  007510  0E02               	movlw	2
  1314  007512  ECA2  F027         	call	_Lcd_Out
  1315                           
  1316                           ;Practica9_30_03_19.c: 49:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1317  007516  0E1F               	movlw	31
  1318  007518  0100               	movlb	0	; () banked
  1319  00751A  6FBF               	movwf	(??_main+1)& (0+255),b
  1320  00751C  0E71               	movlw	113
  1321  00751E  6FBE               	movwf	??_main& (0+255),b
  1322  007520  0E1E               	movlw	30
  1323  007522                     u5627:
  1324  007522  2EE8               	decfsz	wreg,f,c
  1325  007524  D7FE               	bra	u5627
  1326  007526  2FBE               	decfsz	??_main& (0+255),f,b
  1327  007528  D7FC               	bra	u5627
  1328  00752A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1329  00752C  D7FA               	bra	u5627
  1330  00752E  F000               	nop	
  1331                           
  1332                           ;Practica9_30_03_19.c: 50:     Lcd_Cmd(1);
  1333  007530  0E01               	movlw	1
  1334  007532  EC06  F02B         	call	_Lcd_Cmd
  1335  007536                     l4652:
  1336                           
  1337                           ;Practica9_30_03_19.c: 51:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1338  007536  0E02               	movlw	2
  1339  007538  0100               	movlb	0	; () banked
  1340  00753A  6FBF               	movwf	(??_main+1)& (0+255),b
  1341  00753C  0E86               	movlw	134
  1342  00753E  6FBE               	movwf	??_main& (0+255),b
  1343  007540  0E99               	movlw	153
  1344  007542                     u5637:
  1345  007542  2EE8               	decfsz	wreg,f,c
  1346  007544  D7FE               	bra	u5637
  1347  007546  2FBE               	decfsz	??_main& (0+255),f,b
  1348  007548  D7FC               	bra	u5637
  1349  00754A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1350  00754C  D7FA               	bra	u5637
  1351                           
  1352                           ;Practica9_30_03_19.c: 53:     Lcd_Out(1,1,"Seleccione el");
  1353  00754E  0E01               	movlw	1
  1354  007550  6E04               	movwf	Lcd_Out@x,c
  1355  007552  0E4F               	movlw	low STR_3
  1356  007554  6E05               	movwf	Lcd_Out@buffer,c
  1357  007556  0E7F               	movlw	high STR_3
  1358  007558  6E06               	movwf	Lcd_Out@buffer+1,c
  1359  00755A  0E01               	movlw	1
  1360  00755C  ECA2  F027         	call	_Lcd_Out
  1361                           
  1362                           ;Practica9_30_03_19.c: 54:     Lcd_Out(2,1,"limite Superior");
  1363  007560  0E01               	movlw	1
  1364  007562  6E04               	movwf	Lcd_Out@x,c
  1365  007564  0EF5               	movlw	low STR_4
  1366  007566  6E05               	movwf	Lcd_Out@buffer,c
  1367  007568  0E7E               	movlw	high STR_4
  1368  00756A  6E06               	movwf	Lcd_Out@buffer+1,c
  1369  00756C  0E02               	movlw	2
  1370  00756E  ECA2  F027         	call	_Lcd_Out
  1371                           
  1372                           ;Practica9_30_03_19.c: 55:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1373  007572  0E1F               	movlw	31
  1374  007574  0100               	movlb	0	; () banked
  1375  007576  6FBF               	movwf	(??_main+1)& (0+255),b
  1376  007578  0E71               	movlw	113
  1377  00757A  6FBE               	movwf	??_main& (0+255),b
  1378  00757C  0E1E               	movlw	30
  1379  00757E                     u5647:
  1380  00757E  2EE8               	decfsz	wreg,f,c
  1381  007580  D7FE               	bra	u5647
  1382  007582  2FBE               	decfsz	??_main& (0+255),f,b
  1383  007584  D7FC               	bra	u5647
  1384  007586  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1385  007588  D7FA               	bra	u5647
  1386  00758A  F000               	nop	
  1387                           
  1388                           ;Practica9_30_03_19.c: 56:     Lcd_Cmd(1);
  1389  00758C  0E01               	movlw	1
  1390  00758E  EC06  F02B         	call	_Lcd_Cmd
  1391                           
  1392                           ;Practica9_30_03_19.c: 57:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1393  007592  0E02               	movlw	2
  1394  007594  0100               	movlb	0	; () banked
  1395  007596  6FBF               	movwf	(??_main+1)& (0+255),b
  1396  007598  0E86               	movlw	134
  1397  00759A  6FBE               	movwf	??_main& (0+255),b
  1398  00759C  0E99               	movlw	153
  1399  00759E                     u5657:
  1400  00759E  2EE8               	decfsz	wreg,f,c
  1401  0075A0  D7FE               	bra	u5657
  1402  0075A2  2FBE               	decfsz	??_main& (0+255),f,b
  1403  0075A4  D7FC               	bra	u5657
  1404  0075A6  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1405  0075A8  D7FA               	bra	u5657
  1406                           
  1407                           ;Practica9_30_03_19.c: 58:     caracter=0;valor=0;min=0;max=0;
  1408  0075AA  0E00               	movlw	0
  1409  0075AC  0100               	movlb	0	; () banked
  1410  0075AE  6FC0               	movwf	main@caracter& (0+255),b
  1411  0075B0  0E00               	movlw	0
  1412  0075B2  6FC1               	movwf	(main@caracter+1)& (0+255),b
  1413  0075B4  0E00               	movlw	0
  1414  0075B6  6FC2               	movwf	(main@caracter+2)& (0+255),b
  1415  0075B8  0E00               	movlw	0
  1416  0075BA  6FC3               	movwf	(main@caracter+3)& (0+255),b
  1417                           
  1418                           ; BSR set to: 0
  1419  0075BC  0E00               	movlw	0
  1420  0075BE  6FCC               	movwf	_valor& (0+255),b
  1421  0075C0  0E00               	movlw	0
  1422  0075C2  6FCD               	movwf	(_valor+1)& (0+255),b
  1423  0075C4  0E00               	movlw	0
  1424  0075C6  6FCE               	movwf	(_valor+2)& (0+255),b
  1425  0075C8  0E00               	movlw	0
  1426  0075CA  6FCF               	movwf	(_valor+3)& (0+255),b
  1427                           
  1428                           ; BSR set to: 0
  1429  0075CC  0E00               	movlw	0
  1430  0075CE  6FD0               	movwf	_min& (0+255),b
  1431  0075D0  0E00               	movlw	0
  1432  0075D2  6FD1               	movwf	(_min+1)& (0+255),b
  1433  0075D4  0E00               	movlw	0
  1434  0075D6  6FD2               	movwf	(_min+2)& (0+255),b
  1435  0075D8  0E00               	movlw	0
  1436  0075DA  6FD3               	movwf	(_min+3)& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439  0075DC  0E00               	movlw	0
  1440  0075DE  6FD4               	movwf	_max& (0+255),b
  1441  0075E0  0E00               	movlw	0
  1442  0075E2  6FD5               	movwf	(_max+1)& (0+255),b
  1443  0075E4  0E00               	movlw	0
  1444  0075E6  6FD6               	movwf	(_max+2)& (0+255),b
  1445  0075E8  0E00               	movlw	0
  1446  0075EA  6FD7               	movwf	(_max+3)& (0+255),b
  1447                           
  1448                           ;Practica9_30_03_19.c: 59:     while(valor != '*'){
  1449  0075EC  D114               	goto	l4716
  1450  0075EE                     l4672:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;Practica9_30_03_19.c: 60:         Lcd_Out(1,1,"XP Temp MAX XP");
  1454  0075EE  0E01               	movlw	1
  1455  0075F0  6E04               	movwf	Lcd_Out@x,c
  1456  0075F2  0E23               	movlw	low STR_5
  1457  0075F4  6E05               	movwf	Lcd_Out@buffer,c
  1458  0075F6  0E7F               	movlw	high STR_5
  1459  0075F8  6E06               	movwf	Lcd_Out@buffer+1,c
  1460  0075FA  0E01               	movlw	1
  1461  0075FC  ECA2  F027         	call	_Lcd_Out
  1462                           
  1463                           ;Practica9_30_03_19.c: 61:         teclado();
  1464  007600  EC67  F02D         	call	_teclado	;wreg free
  1465                           
  1466                           ;Practica9_30_03_19.c: 62:         if((valor >= '0') && (valor <= '9')){
  1467  007604  0100               	movlb	0	; () banked
  1468  007606  51CF               	movf	(_valor+3)& (0+255),w,b
  1469  007608  11CE               	iorwf	(_valor+2)& (0+255),w,b
  1470  00760A  11CD               	iorwf	(_valor+1)& (0+255),w,b
  1471  00760C  E104               	bnz	u5460
  1472  00760E  0E30               	movlw	48
  1473  007610  5DCC               	subwf	_valor& (0+255),w,b
  1474  007612  A0D8               	btfss	status,0,c
  1475  007614  D068               	goto	l4688
  1476  007616                     u5460:
  1477                           
  1478                           ; BSR set to: 0
  1479  007616  51CF               	movf	(_valor+3)& (0+255),w,b
  1480  007618  11CE               	iorwf	(_valor+2)& (0+255),w,b
  1481  00761A  11CD               	iorwf	(_valor+1)& (0+255),w,b
  1482  00761C  E164               	bnz	l4688
  1483  00761E  0E3A               	movlw	58
  1484  007620  5DCC               	subwf	_valor& (0+255),w,b
  1485  007622  B0D8               	btfsc	status,0,c
  1486  007624  D060               	goto	l4688
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;Practica9_30_03_19.c: 63:         caracter=caracter*10+(valor-48);
  1490  007626  0E00               	movlw	0
  1491  007628  6E05               	movwf	___flmul@a,c
  1492  00762A  0E00               	movlw	0
  1493  00762C  6E06               	movwf	___flmul@a+1,c
  1494  00762E  0E20               	movlw	32
  1495  007630  6E07               	movwf	___flmul@a+2,c
  1496  007632  0E41               	movlw	65
  1497  007634  6E08               	movwf	___flmul@a+3,c
  1498  007636  C0C0  F001         	movff	main@caracter,___flmul@b
  1499  00763A  C0C1  F002         	movff	main@caracter+1,___flmul@b+1
  1500  00763E  C0C2  F003         	movff	main@caracter+2,___flmul@b+2
  1501  007642  C0C3  F004         	movff	main@caracter+3,___flmul@b+3
  1502  007646  ECCA  F031         	call	___flmul	;wreg free
  1503  00764A  C001  F01A         	movff	?___flmul,___fladd@b
  1504  00764E  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1505  007652  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1506  007656  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1507  00765A  0ED0               	movlw	208
  1508  00765C  0100               	movlb	0	; () banked
  1509  00765E  25CC               	addwf	_valor& (0+255),w,b
  1510  007660  6E01               	movwf	___xxtofl@val,c
  1511  007662  0EFF               	movlw	255
  1512  007664  21CD               	addwfc	(_valor+1)& (0+255),w,b
  1513  007666  6E02               	movwf	___xxtofl@val+1,c
  1514  007668  0EFF               	movlw	255
  1515  00766A  21CE               	addwfc	(_valor+2)& (0+255),w,b
  1516  00766C  6E03               	movwf	___xxtofl@val+2,c
  1517  00766E  0EFF               	movlw	255
  1518  007670  21CF               	addwfc	(_valor+3)& (0+255),w,b
  1519  007672  6E04               	movwf	___xxtofl@val+3,c
  1520  007674  0E00               	movlw	0
  1521  007676  EC27  F02C         	call	___xxtofl
  1522  00767A  C001  F01E         	movff	?___xxtofl,___fladd@a
  1523  00767E  C002  F01F         	movff	?___xxtofl+1,___fladd@a+1
  1524  007682  C003  F020         	movff	?___xxtofl+2,___fladd@a+2
  1525  007686  C004  F021         	movff	?___xxtofl+3,___fladd@a+3
  1526  00768A  EC44  F030         	call	___fladd	;wreg free
  1527  00768E  C01A  F0C0         	movff	?___fladd,main@caracter
  1528  007692  C01B  F0C1         	movff	?___fladd+1,main@caracter+1
  1529  007696  C01C  F0C2         	movff	?___fladd+2,main@caracter+2
  1530  00769A  C01D  F0C3         	movff	?___fladd+3,main@caracter+3
  1531                           
  1532                           ;Practica9_30_03_19.c: 64:         max=caracter;
  1533  00769E  C0C0  F0D4         	movff	main@caracter,_max
  1534  0076A2  C0C1  F0D5         	movff	main@caracter+1,_max+1
  1535  0076A6  C0C2  F0D6         	movff	main@caracter+2,_max+2
  1536  0076AA  C0C3  F0D7         	movff	main@caracter+3,_max+3
  1537                           
  1538                           ;Practica9_30_03_19.c: 65:         sprintf(palabra,"C:%0.1f",caracter);
  1539  0076AE  0EE8               	movlw	low _palabra
  1540  0076B0  0100               	movlb	0	; () banked
  1541  0076B2  6FAC               	movwf	sprintf@s& (0+255),b
  1542  0076B4  0E00               	movlw	high _palabra
  1543  0076B6  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1544  0076B8  0ED5               	movlw	low STR_6
  1545  0076BA  6FAE               	movwf	sprintf@fmt& (0+255),b
  1546  0076BC  0E7F               	movlw	high STR_6
  1547  0076BE  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1548  0076C0  C0C0  F0B0         	movff	main@caracter,?_sprintf+4
  1549  0076C4  C0C1  F0B1         	movff	main@caracter+1,?_sprintf+5
  1550  0076C8  C0C2  F0B2         	movff	main@caracter+2,?_sprintf+6
  1551  0076CC  C0C3  F0B3         	movff	main@caracter+3,?_sprintf+7
  1552  0076D0  ECDE  F026         	call	_sprintf	;wreg free
  1553                           
  1554                           ;Practica9_30_03_19.c: 66:         Lcd_Out2(2,5,palabra);
  1555  0076D4  0E05               	movlw	5
  1556  0076D6  6E04               	movwf	Lcd_Out2@x,c
  1557  0076D8  0EE8               	movlw	low _palabra
  1558  0076DA  6E05               	movwf	Lcd_Out2@buffer,c
  1559  0076DC  0E00               	movlw	high _palabra
  1560  0076DE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1561  0076E0  0E02               	movlw	2
  1562  0076E2  EC32  F027         	call	_Lcd_Out2
  1563  0076E6                     l4688:
  1564                           
  1565                           ;Practica9_30_03_19.c: 68:         if(caracter>101){
  1566  0076E6  0E00               	movlw	0
  1567  0076E8  6E1A               	movwf	___flge@ff1,c
  1568  0076EA  0E00               	movlw	0
  1569  0076EC  6E1B               	movwf	___flge@ff1+1,c
  1570  0076EE  0ECA               	movlw	202
  1571  0076F0  6E1C               	movwf	___flge@ff1+2,c
  1572  0076F2  0E42               	movlw	66
  1573  0076F4  6E1D               	movwf	___flge@ff1+3,c
  1574  0076F6  C0C0  F01E         	movff	main@caracter,___flge@ff2
  1575  0076FA  C0C1  F01F         	movff	main@caracter+1,___flge@ff2+1
  1576  0076FE  C0C2  F020         	movff	main@caracter+2,___flge@ff2+2
  1577  007702  C0C3  F021         	movff	main@caracter+3,___flge@ff2+3
  1578  007706  EC15  F02A         	call	___flge	;wreg free
  1579  00770A  B0D8               	btfsc	status,0,c
  1580  00770C  D084               	goto	l4716
  1581                           
  1582                           ;Practica9_30_03_19.c: 69:             caracter=0;max=0;valor=0;
  1583  00770E  0E00               	movlw	0
  1584  007710  0100               	movlb	0	; () banked
  1585  007712  6FC0               	movwf	main@caracter& (0+255),b
  1586  007714  0E00               	movlw	0
  1587  007716  6FC1               	movwf	(main@caracter+1)& (0+255),b
  1588  007718  0E00               	movlw	0
  1589  00771A  6FC2               	movwf	(main@caracter+2)& (0+255),b
  1590  00771C  0E00               	movlw	0
  1591  00771E  6FC3               	movwf	(main@caracter+3)& (0+255),b
  1592  007720  0E00               	movlw	0
  1593  007722  6FD4               	movwf	_max& (0+255),b
  1594  007724  0E00               	movlw	0
  1595  007726  6FD5               	movwf	(_max+1)& (0+255),b
  1596  007728  0E00               	movlw	0
  1597  00772A  6FD6               	movwf	(_max+2)& (0+255),b
  1598  00772C  0E00               	movlw	0
  1599  00772E  6FD7               	movwf	(_max+3)& (0+255),b
  1600  007730  0E00               	movlw	0
  1601  007732  6FCC               	movwf	_valor& (0+255),b
  1602  007734  0E00               	movlw	0
  1603  007736  6FCD               	movwf	(_valor+1)& (0+255),b
  1604  007738  0E00               	movlw	0
  1605  00773A  6FCE               	movwf	(_valor+2)& (0+255),b
  1606  00773C  0E00               	movlw	0
  1607  00773E  6FCF               	movwf	(_valor+3)& (0+255),b
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;Practica9_30_03_19.c: 70:             Lcd_Cmd(1);
  1611  007740  0E01               	movlw	1
  1612  007742  EC06  F02B         	call	_Lcd_Cmd
  1613                           
  1614                           ;Practica9_30_03_19.c: 71:             _delay((unsigned long)((100)*(12000000/4000.0)));
  1615  007746  0E02               	movlw	2
  1616  007748  0100               	movlb	0	; () banked
  1617  00774A  6FBF               	movwf	(??_main+1)& (0+255),b
  1618  00774C  0E86               	movlw	134
  1619  00774E  6FBE               	movwf	??_main& (0+255),b
  1620  007750  0E99               	movlw	153
  1621  007752                     u5667:
  1622  007752  2EE8               	decfsz	wreg,f,c
  1623  007754  D7FE               	bra	u5667
  1624  007756  2FBE               	decfsz	??_main& (0+255),f,b
  1625  007758  D7FC               	bra	u5667
  1626  00775A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1627  00775C  D7FA               	bra	u5667
  1628                           
  1629                           ;Practica9_30_03_19.c: 72:             Lcd_Out(1,1,"Valor maximo");
  1630  00775E  0E01               	movlw	1
  1631  007760  6E04               	movwf	Lcd_Out@x,c
  1632  007762  0E84               	movlw	low STR_7
  1633  007764  6E05               	movwf	Lcd_Out@buffer,c
  1634  007766  0E7F               	movlw	high STR_7
  1635  007768  6E06               	movwf	Lcd_Out@buffer+1,c
  1636  00776A  0E01               	movlw	1
  1637  00776C  ECA2  F027         	call	_Lcd_Out
  1638                           
  1639                           ;Practica9_30_03_19.c: 73:             Lcd_Out(2,1,"alcanzado");
  1640  007770  0E01               	movlw	1
  1641  007772  6E04               	movwf	Lcd_Out@x,c
  1642  007774  0ECB               	movlw	low STR_8
  1643  007776  6E05               	movwf	Lcd_Out@buffer,c
  1644  007778  0E7F               	movlw	high STR_8
  1645  00777A  6E06               	movwf	Lcd_Out@buffer+1,c
  1646  00777C  0E02               	movlw	2
  1647  00777E  ECA2  F027         	call	_Lcd_Out
  1648                           
  1649                           ;Practica9_30_03_19.c: 74:             _delay((unsigned long)((2000)*(12000000/4000.0)))
      +                          ;
  1650  007782  0E1F               	movlw	31
  1651  007784  0100               	movlb	0	; () banked
  1652  007786  6FBF               	movwf	(??_main+1)& (0+255),b
  1653  007788  0E71               	movlw	113
  1654  00778A  6FBE               	movwf	??_main& (0+255),b
  1655  00778C  0E1E               	movlw	30
  1656  00778E                     u5677:
  1657  00778E  2EE8               	decfsz	wreg,f,c
  1658  007790  D7FE               	bra	u5677
  1659  007792  2FBE               	decfsz	??_main& (0+255),f,b
  1660  007794  D7FC               	bra	u5677
  1661  007796  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1662  007798  D7FA               	bra	u5677
  1663  00779A  F000               	nop	
  1664                           
  1665                           ;Practica9_30_03_19.c: 75:             Lcd_Cmd(1);
  1666  00779C  0E01               	movlw	1
  1667  00779E  EC06  F02B         	call	_Lcd_Cmd
  1668                           
  1669                           ;Practica9_30_03_19.c: 76:             _delay((unsigned long)((100)*(12000000/4000.0)));
  1670  0077A2  0E02               	movlw	2
  1671  0077A4  0100               	movlb	0	; () banked
  1672  0077A6  6FBF               	movwf	(??_main+1)& (0+255),b
  1673  0077A8  0E86               	movlw	134
  1674  0077AA  6FBE               	movwf	??_main& (0+255),b
  1675  0077AC  0E99               	movlw	153
  1676  0077AE                     u5687:
  1677  0077AE  2EE8               	decfsz	wreg,f,c
  1678  0077B0  D7FE               	bra	u5687
  1679  0077B2  2FBE               	decfsz	??_main& (0+255),f,b
  1680  0077B4  D7FC               	bra	u5687
  1681  0077B6  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1682  0077B8  D7FA               	bra	u5687
  1683                           
  1684                           ;Practica9_30_03_19.c: 77:             Lcd_Out(1,1,"Intentalo de ");
  1685  0077BA  0E01               	movlw	1
  1686  0077BC  6E04               	movwf	Lcd_Out@x,c
  1687  0077BE  0E41               	movlw	low STR_9
  1688  0077C0  6E05               	movwf	Lcd_Out@buffer,c
  1689  0077C2  0E7F               	movlw	high STR_9
  1690  0077C4  6E06               	movwf	Lcd_Out@buffer+1,c
  1691  0077C6  0E01               	movlw	1
  1692  0077C8  ECA2  F027         	call	_Lcd_Out
  1693                           
  1694                           ;Practica9_30_03_19.c: 78:             Lcd_Out(2,1,"nuevo humano");
  1695  0077CC  0E01               	movlw	1
  1696  0077CE  6E04               	movwf	Lcd_Out@x,c
  1697  0077D0  0E91               	movlw	low STR_10
  1698  0077D2  6E05               	movwf	Lcd_Out@buffer,c
  1699  0077D4  0E7F               	movlw	high STR_10
  1700  0077D6  6E06               	movwf	Lcd_Out@buffer+1,c
  1701  0077D8  0E02               	movlw	2
  1702  0077DA  ECA2  F027         	call	_Lcd_Out
  1703                           
  1704                           ;Practica9_30_03_19.c: 79:             _delay((unsigned long)((2000)*(12000000/4000.0)))
      +                          ;
  1705  0077DE  0E1F               	movlw	31
  1706  0077E0  0100               	movlb	0	; () banked
  1707  0077E2  6FBF               	movwf	(??_main+1)& (0+255),b
  1708  0077E4  0E71               	movlw	113
  1709  0077E6  6FBE               	movwf	??_main& (0+255),b
  1710  0077E8  0E1E               	movlw	30
  1711  0077EA                     u5697:
  1712  0077EA  2EE8               	decfsz	wreg,f,c
  1713  0077EC  D7FE               	bra	u5697
  1714  0077EE  2FBE               	decfsz	??_main& (0+255),f,b
  1715  0077F0  D7FC               	bra	u5697
  1716  0077F2  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1717  0077F4  D7FA               	bra	u5697
  1718  0077F6  F000               	nop	
  1719                           
  1720                           ;Practica9_30_03_19.c: 80:             Lcd_Cmd(1);
  1721  0077F8  0E01               	movlw	1
  1722  0077FA  EC06  F02B         	call	_Lcd_Cmd
  1723                           
  1724                           ;Practica9_30_03_19.c: 81:             _delay((unsigned long)((100)*(12000000/4000.0)));
  1725  0077FE  0E02               	movlw	2
  1726  007800  0100               	movlb	0	; () banked
  1727  007802  6FBF               	movwf	(??_main+1)& (0+255),b
  1728  007804  0E86               	movlw	134
  1729  007806  6FBE               	movwf	??_main& (0+255),b
  1730  007808  0E99               	movlw	153
  1731  00780A                     u5707:
  1732  00780A  2EE8               	decfsz	wreg,f,c
  1733  00780C  D7FE               	bra	u5707
  1734  00780E  2FBE               	decfsz	??_main& (0+255),f,b
  1735  007810  D7FC               	bra	u5707
  1736  007812  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1737  007814  D7FA               	bra	u5707
  1738  007816                     l4716:
  1739                           
  1740                           ;Practica9_30_03_19.c: 59:     while(valor != '*'){
  1741  007816  0E2A               	movlw	42
  1742  007818  0100               	movlb	0	; () banked
  1743  00781A  19CC               	xorwf	_valor& (0+255),w,b
  1744  00781C  11CD               	iorwf	(_valor+1)& (0+255),w,b
  1745  00781E  11CE               	iorwf	(_valor+2)& (0+255),w,b
  1746  007820  11CF               	iorwf	(_valor+3)& (0+255),w,b
  1747  007822  A4D8               	btfss	status,2,c
  1748  007824  D6E4               	goto	l4672
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;Practica9_30_03_19.c: 84:     Lcd_Cmd(1);
  1752  007826  0E01               	movlw	1
  1753  007828  EC06  F02B         	call	_Lcd_Cmd
  1754                           
  1755                           ;Practica9_30_03_19.c: 85:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1756  00782C  0E02               	movlw	2
  1757  00782E  0100               	movlb	0	; () banked
  1758  007830  6FBF               	movwf	(??_main+1)& (0+255),b
  1759  007832  0E86               	movlw	134
  1760  007834  6FBE               	movwf	??_main& (0+255),b
  1761  007836  0E99               	movlw	153
  1762  007838                     u5717:
  1763  007838  2EE8               	decfsz	wreg,f,c
  1764  00783A  D7FE               	bra	u5717
  1765  00783C  2FBE               	decfsz	??_main& (0+255),f,b
  1766  00783E  D7FC               	bra	u5717
  1767  007840  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1768  007842  D7FA               	bra	u5717
  1769                           
  1770                           ;Practica9_30_03_19.c: 86:     Lcd_Out(1,1,"Seleccione el");
  1771  007844  0E01               	movlw	1
  1772  007846  6E04               	movwf	Lcd_Out@x,c
  1773  007848  0E4F               	movlw	low STR_3
  1774  00784A  6E05               	movwf	Lcd_Out@buffer,c
  1775  00784C  0E7F               	movlw	high STR_3
  1776  00784E  6E06               	movwf	Lcd_Out@buffer+1,c
  1777  007850  0E01               	movlw	1
  1778  007852  ECA2  F027         	call	_Lcd_Out
  1779                           
  1780                           ;Practica9_30_03_19.c: 87:     Lcd_Out(2,1,"limite inferior");
  1781  007856  0E01               	movlw	1
  1782  007858  6E04               	movwf	Lcd_Out@x,c
  1783  00785A  0EE5               	movlw	low STR_12
  1784  00785C  6E05               	movwf	Lcd_Out@buffer,c
  1785  00785E  0E7E               	movlw	high STR_12
  1786  007860  6E06               	movwf	Lcd_Out@buffer+1,c
  1787  007862  0E02               	movlw	2
  1788  007864  ECA2  F027         	call	_Lcd_Out
  1789                           
  1790                           ;Practica9_30_03_19.c: 88:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1791  007868  0E1F               	movlw	31
  1792  00786A  0100               	movlb	0	; () banked
  1793  00786C  6FBF               	movwf	(??_main+1)& (0+255),b
  1794  00786E  0E71               	movlw	113
  1795  007870  6FBE               	movwf	??_main& (0+255),b
  1796  007872  0E1E               	movlw	30
  1797  007874                     u5727:
  1798  007874  2EE8               	decfsz	wreg,f,c
  1799  007876  D7FE               	bra	u5727
  1800  007878  2FBE               	decfsz	??_main& (0+255),f,b
  1801  00787A  D7FC               	bra	u5727
  1802  00787C  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1803  00787E  D7FA               	bra	u5727
  1804  007880  F000               	nop	
  1805                           
  1806                           ;Practica9_30_03_19.c: 89:     Lcd_Cmd(1);
  1807  007882  0E01               	movlw	1
  1808  007884  EC06  F02B         	call	_Lcd_Cmd
  1809                           
  1810                           ;Practica9_30_03_19.c: 90:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1811  007888  0E02               	movlw	2
  1812  00788A  0100               	movlb	0	; () banked
  1813  00788C  6FBF               	movwf	(??_main+1)& (0+255),b
  1814  00788E  0E86               	movlw	134
  1815  007890  6FBE               	movwf	??_main& (0+255),b
  1816  007892  0E99               	movlw	153
  1817  007894                     u5737:
  1818  007894  2EE8               	decfsz	wreg,f,c
  1819  007896  D7FE               	bra	u5737
  1820  007898  2FBE               	decfsz	??_main& (0+255),f,b
  1821  00789A  D7FC               	bra	u5737
  1822  00789C  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  1823  00789E  D7FA               	bra	u5737
  1824                           
  1825                           ;Practica9_30_03_19.c: 91:     caracter=0;valor=0;
  1826  0078A0  0E00               	movlw	0
  1827  0078A2  0100               	movlb	0	; () banked
  1828  0078A4  6FC0               	movwf	main@caracter& (0+255),b
  1829  0078A6  0E00               	movlw	0
  1830  0078A8  6FC1               	movwf	(main@caracter+1)& (0+255),b
  1831  0078AA  0E00               	movlw	0
  1832  0078AC  6FC2               	movwf	(main@caracter+2)& (0+255),b
  1833  0078AE  0E00               	movlw	0
  1834  0078B0  6FC3               	movwf	(main@caracter+3)& (0+255),b
  1835                           
  1836                           ; BSR set to: 0
  1837  0078B2  0E00               	movlw	0
  1838  0078B4  6FCC               	movwf	_valor& (0+255),b
  1839  0078B6  0E00               	movlw	0
  1840  0078B8  6FCD               	movwf	(_valor+1)& (0+255),b
  1841  0078BA  0E00               	movlw	0
  1842  0078BC  6FCE               	movwf	(_valor+2)& (0+255),b
  1843  0078BE  0E00               	movlw	0
  1844  0078C0  6FCF               	movwf	(_valor+3)& (0+255),b
  1845                           
  1846                           ;Practica9_30_03_19.c: 92:     while(valor != '*'){
  1847  0078C2  D156               	goto	l4790
  1848  0078C4                     l4734:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;Practica9_30_03_19.c: 93:         Lcd_Out(1,1,"XP Temp MIN XP");
  1852  0078C4  0E01               	movlw	1
  1853  0078C6  6E04               	movwf	Lcd_Out@x,c
  1854  0078C8  0E14               	movlw	low STR_13
  1855  0078CA  6E05               	movwf	Lcd_Out@buffer,c
  1856  0078CC  0E7F               	movlw	high STR_13
  1857  0078CE  6E06               	movwf	Lcd_Out@buffer+1,c
  1858  0078D0  0E01               	movlw	1
  1859  0078D2  ECA2  F027         	call	_Lcd_Out
  1860                           
  1861                           ;Practica9_30_03_19.c: 94:         teclado();
  1862  0078D6  EC67  F02D         	call	_teclado	;wreg free
  1863                           
  1864                           ;Practica9_30_03_19.c: 95:         if((valor >= '0') && (valor <= '9')){
  1865  0078DA  0100               	movlb	0	; () banked
  1866  0078DC  51CF               	movf	(_valor+3)& (0+255),w,b
  1867  0078DE  11CE               	iorwf	(_valor+2)& (0+255),w,b
  1868  0078E0  11CD               	iorwf	(_valor+1)& (0+255),w,b
  1869  0078E2  E104               	bnz	u5500
  1870  0078E4  0E30               	movlw	48
  1871  0078E6  5DCC               	subwf	_valor& (0+255),w,b
  1872  0078E8  A0D8               	btfss	status,0,c
  1873  0078EA  D068               	goto	l4750
  1874  0078EC                     u5500:
  1875                           
  1876                           ; BSR set to: 0
  1877  0078EC  51CF               	movf	(_valor+3)& (0+255),w,b
  1878  0078EE  11CE               	iorwf	(_valor+2)& (0+255),w,b
  1879  0078F0  11CD               	iorwf	(_valor+1)& (0+255),w,b
  1880  0078F2  E164               	bnz	l4750
  1881  0078F4  0E3A               	movlw	58
  1882  0078F6  5DCC               	subwf	_valor& (0+255),w,b
  1883  0078F8  B0D8               	btfsc	status,0,c
  1884  0078FA  D060               	goto	l4750
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;Practica9_30_03_19.c: 96:         caracter=caracter*10+(valor-48);
  1888  0078FC  0E00               	movlw	0
  1889  0078FE  6E05               	movwf	___flmul@a,c
  1890  007900  0E00               	movlw	0
  1891  007902  6E06               	movwf	___flmul@a+1,c
  1892  007904  0E20               	movlw	32
  1893  007906  6E07               	movwf	___flmul@a+2,c
  1894  007908  0E41               	movlw	65
  1895  00790A  6E08               	movwf	___flmul@a+3,c
  1896  00790C  C0C0  F001         	movff	main@caracter,___flmul@b
  1897  007910  C0C1  F002         	movff	main@caracter+1,___flmul@b+1
  1898  007914  C0C2  F003         	movff	main@caracter+2,___flmul@b+2
  1899  007918  C0C3  F004         	movff	main@caracter+3,___flmul@b+3
  1900  00791C  ECCA  F031         	call	___flmul	;wreg free
  1901  007920  C001  F01A         	movff	?___flmul,___fladd@b
  1902  007924  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1903  007928  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1904  00792C  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1905  007930  0ED0               	movlw	208
  1906  007932  0100               	movlb	0	; () banked
  1907  007934  25CC               	addwf	_valor& (0+255),w,b
  1908  007936  6E01               	movwf	___xxtofl@val,c
  1909  007938  0EFF               	movlw	255
  1910  00793A  21CD               	addwfc	(_valor+1)& (0+255),w,b
  1911  00793C  6E02               	movwf	___xxtofl@val+1,c
  1912  00793E  0EFF               	movlw	255
  1913  007940  21CE               	addwfc	(_valor+2)& (0+255),w,b
  1914  007942  6E03               	movwf	___xxtofl@val+2,c
  1915  007944  0EFF               	movlw	255
  1916  007946  21CF               	addwfc	(_valor+3)& (0+255),w,b
  1917  007948  6E04               	movwf	___xxtofl@val+3,c
  1918  00794A  0E00               	movlw	0
  1919  00794C  EC27  F02C         	call	___xxtofl
  1920  007950  C001  F01E         	movff	?___xxtofl,___fladd@a
  1921  007954  C002  F01F         	movff	?___xxtofl+1,___fladd@a+1
  1922  007958  C003  F020         	movff	?___xxtofl+2,___fladd@a+2
  1923  00795C  C004  F021         	movff	?___xxtofl+3,___fladd@a+3
  1924  007960  EC44  F030         	call	___fladd	;wreg free
  1925  007964  C01A  F0C0         	movff	?___fladd,main@caracter
  1926  007968  C01B  F0C1         	movff	?___fladd+1,main@caracter+1
  1927  00796C  C01C  F0C2         	movff	?___fladd+2,main@caracter+2
  1928  007970  C01D  F0C3         	movff	?___fladd+3,main@caracter+3
  1929                           
  1930                           ;Practica9_30_03_19.c: 97:         min=caracter;
  1931  007974  C0C0  F0D0         	movff	main@caracter,_min
  1932  007978  C0C1  F0D1         	movff	main@caracter+1,_min+1
  1933  00797C  C0C2  F0D2         	movff	main@caracter+2,_min+2
  1934  007980  C0C3  F0D3         	movff	main@caracter+3,_min+3
  1935                           
  1936                           ;Practica9_30_03_19.c: 98:         sprintf(palabra2,"C:%0.1f",caracter);
  1937  007984  0E61               	movlw	low _palabra2
  1938  007986  0100               	movlb	0	; () banked
  1939  007988  6FAC               	movwf	sprintf@s& (0+255),b
  1940  00798A  0E01               	movlw	high _palabra2
  1941  00798C  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1942  00798E  0ED5               	movlw	low STR_6
  1943  007990  6FAE               	movwf	sprintf@fmt& (0+255),b
  1944  007992  0E7F               	movlw	high STR_6
  1945  007994  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1946  007996  C0C0  F0B0         	movff	main@caracter,?_sprintf+4
  1947  00799A  C0C1  F0B1         	movff	main@caracter+1,?_sprintf+5
  1948  00799E  C0C2  F0B2         	movff	main@caracter+2,?_sprintf+6
  1949  0079A2  C0C3  F0B3         	movff	main@caracter+3,?_sprintf+7
  1950  0079A6  ECDE  F026         	call	_sprintf	;wreg free
  1951                           
  1952                           ;Practica9_30_03_19.c: 99:         Lcd_Out2(2,5,palabra2);
  1953  0079AA  0E05               	movlw	5
  1954  0079AC  6E04               	movwf	Lcd_Out2@x,c
  1955  0079AE  0E61               	movlw	low _palabra2
  1956  0079B0  6E05               	movwf	Lcd_Out2@buffer,c
  1957  0079B2  0E01               	movlw	high _palabra2
  1958  0079B4  6E06               	movwf	Lcd_Out2@buffer+1,c
  1959  0079B6  0E02               	movlw	2
  1960  0079B8  EC32  F027         	call	_Lcd_Out2
  1961  0079BC                     l4750:
  1962                           
  1963                           ;Practica9_30_03_19.c: 101:         if(caracter>101 || min>max){
  1964  0079BC  0E00               	movlw	0
  1965  0079BE  6E1A               	movwf	___flge@ff1,c
  1966  0079C0  0E00               	movlw	0
  1967  0079C2  6E1B               	movwf	___flge@ff1+1,c
  1968  0079C4  0ECA               	movlw	202
  1969  0079C6  6E1C               	movwf	___flge@ff1+2,c
  1970  0079C8  0E42               	movlw	66
  1971  0079CA  6E1D               	movwf	___flge@ff1+3,c
  1972  0079CC  C0C0  F01E         	movff	main@caracter,___flge@ff2
  1973  0079D0  C0C1  F01F         	movff	main@caracter+1,___flge@ff2+1
  1974  0079D4  C0C2  F020         	movff	main@caracter+2,___flge@ff2+2
  1975  0079D8  C0C3  F021         	movff	main@caracter+3,___flge@ff2+3
  1976  0079DC  EC15  F02A         	call	___flge	;wreg free
  1977  0079E0  A0D8               	btfss	status,0,c
  1978  0079E2  D014               	goto	u5530
  1979  0079E4  C0D4  F01A         	movff	_max,___flge@ff1
  1980  0079E8  C0D5  F01B         	movff	_max+1,___flge@ff1+1
  1981  0079EC  C0D6  F01C         	movff	_max+2,___flge@ff1+2
  1982  0079F0  C0D7  F01D         	movff	_max+3,___flge@ff1+3
  1983  0079F4  C0D0  F01E         	movff	_min,___flge@ff2
  1984  0079F8  C0D1  F01F         	movff	_min+1,___flge@ff2+1
  1985  0079FC  C0D2  F020         	movff	_min+2,___flge@ff2+2
  1986  007A00  C0D3  F021         	movff	_min+3,___flge@ff2+3
  1987  007A04  EC15  F02A         	call	___flge	;wreg free
  1988  007A08  B0D8               	btfsc	status,0,c
  1989  007A0A  D0B2               	goto	l4790
  1990  007A0C                     u5530:
  1991                           
  1992                           ;Practica9_30_03_19.c: 102:             caracter=0;min=0;valor=0;
  1993  007A0C  0E00               	movlw	0
  1994  007A0E  0100               	movlb	0	; () banked
  1995  007A10  6FC0               	movwf	main@caracter& (0+255),b
  1996  007A12  0E00               	movlw	0
  1997  007A14  6FC1               	movwf	(main@caracter+1)& (0+255),b
  1998  007A16  0E00               	movlw	0
  1999  007A18  6FC2               	movwf	(main@caracter+2)& (0+255),b
  2000  007A1A  0E00               	movlw	0
  2001  007A1C  6FC3               	movwf	(main@caracter+3)& (0+255),b
  2002  007A1E  0E00               	movlw	0
  2003  007A20  6FD0               	movwf	_min& (0+255),b
  2004  007A22  0E00               	movlw	0
  2005  007A24  6FD1               	movwf	(_min+1)& (0+255),b
  2006  007A26  0E00               	movlw	0
  2007  007A28  6FD2               	movwf	(_min+2)& (0+255),b
  2008  007A2A  0E00               	movlw	0
  2009  007A2C  6FD3               	movwf	(_min+3)& (0+255),b
  2010  007A2E  0E00               	movlw	0
  2011  007A30  6FCC               	movwf	_valor& (0+255),b
  2012  007A32  0E00               	movlw	0
  2013  007A34  6FCD               	movwf	(_valor+1)& (0+255),b
  2014  007A36  0E00               	movlw	0
  2015  007A38  6FCE               	movwf	(_valor+2)& (0+255),b
  2016  007A3A  0E00               	movlw	0
  2017  007A3C  6FCF               	movwf	(_valor+3)& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;Practica9_30_03_19.c: 103:             Lcd_Cmd(1);
  2021  007A3E  0E01               	movlw	1
  2022  007A40  EC06  F02B         	call	_Lcd_Cmd
  2023                           
  2024                           ;Practica9_30_03_19.c: 104:             _delay((unsigned long)((100)*(12000000/4000.0)))
      +                          ;
  2025  007A44  0E02               	movlw	2
  2026  007A46  0100               	movlb	0	; () banked
  2027  007A48  6FBF               	movwf	(??_main+1)& (0+255),b
  2028  007A4A  0E86               	movlw	134
  2029  007A4C  6FBE               	movwf	??_main& (0+255),b
  2030  007A4E  0E99               	movlw	153
  2031  007A50                     u5747:
  2032  007A50  2EE8               	decfsz	wreg,f,c
  2033  007A52  D7FE               	bra	u5747
  2034  007A54  2FBE               	decfsz	??_main& (0+255),f,b
  2035  007A56  D7FC               	bra	u5747
  2036  007A58  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2037  007A5A  D7FA               	bra	u5747
  2038                           
  2039                           ;Practica9_30_03_19.c: 105:             Lcd_Out(1,1,"Valor maximo");
  2040  007A5C  0E01               	movlw	1
  2041  007A5E  6E04               	movwf	Lcd_Out@x,c
  2042  007A60  0E84               	movlw	low STR_7
  2043  007A62  6E05               	movwf	Lcd_Out@buffer,c
  2044  007A64  0E7F               	movlw	high STR_7
  2045  007A66  6E06               	movwf	Lcd_Out@buffer+1,c
  2046  007A68  0E01               	movlw	1
  2047  007A6A  ECA2  F027         	call	_Lcd_Out
  2048                           
  2049                           ;Practica9_30_03_19.c: 106:             Lcd_Out(2,1,"alcanzado o");
  2050  007A6E  0E01               	movlw	1
  2051  007A70  6E04               	movwf	Lcd_Out@x,c
  2052  007A72  0EAA               	movlw	low STR_16
  2053  007A74  6E05               	movwf	Lcd_Out@buffer,c
  2054  007A76  0E7F               	movlw	high STR_16
  2055  007A78  6E06               	movwf	Lcd_Out@buffer+1,c
  2056  007A7A  0E02               	movlw	2
  2057  007A7C  ECA2  F027         	call	_Lcd_Out
  2058                           
  2059                           ;Practica9_30_03_19.c: 107:             _delay((unsigned long)((2000)*(12000000/4000.0))
      +                          );
  2060  007A80  0E1F               	movlw	31
  2061  007A82  0100               	movlb	0	; () banked
  2062  007A84  6FBF               	movwf	(??_main+1)& (0+255),b
  2063  007A86  0E71               	movlw	113
  2064  007A88  6FBE               	movwf	??_main& (0+255),b
  2065  007A8A  0E1E               	movlw	30
  2066  007A8C                     u5757:
  2067  007A8C  2EE8               	decfsz	wreg,f,c
  2068  007A8E  D7FE               	bra	u5757
  2069  007A90  2FBE               	decfsz	??_main& (0+255),f,b
  2070  007A92  D7FC               	bra	u5757
  2071  007A94  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2072  007A96  D7FA               	bra	u5757
  2073  007A98  F000               	nop	
  2074                           
  2075                           ;Practica9_30_03_19.c: 108:             Lcd_Cmd(1);
  2076  007A9A  0E01               	movlw	1
  2077  007A9C  EC06  F02B         	call	_Lcd_Cmd
  2078                           
  2079                           ;Practica9_30_03_19.c: 109:             _delay((unsigned long)((100)*(12000000/4000.0)))
      +                          ;
  2080  007AA0  0E02               	movlw	2
  2081  007AA2  0100               	movlb	0	; () banked
  2082  007AA4  6FBF               	movwf	(??_main+1)& (0+255),b
  2083  007AA6  0E86               	movlw	134
  2084  007AA8  6FBE               	movwf	??_main& (0+255),b
  2085  007AAA  0E99               	movlw	153
  2086  007AAC                     u5767:
  2087  007AAC  2EE8               	decfsz	wreg,f,c
  2088  007AAE  D7FE               	bra	u5767
  2089  007AB0  2FBE               	decfsz	??_main& (0+255),f,b
  2090  007AB2  D7FC               	bra	u5767
  2091  007AB4  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2092  007AB6  D7FA               	bra	u5767
  2093                           
  2094                           ;Practica9_30_03_19.c: 110:             Lcd_Out(1,1,"Temp MIN mayor");
  2095  007AB8  0E01               	movlw	1
  2096  007ABA  6E04               	movwf	Lcd_Out@x,c
  2097  007ABC  0E32               	movlw	low STR_17
  2098  007ABE  6E05               	movwf	Lcd_Out@buffer,c
  2099  007AC0  0E7F               	movlw	high STR_17
  2100  007AC2  6E06               	movwf	Lcd_Out@buffer+1,c
  2101  007AC4  0E01               	movlw	1
  2102  007AC6  ECA2  F027         	call	_Lcd_Out
  2103                           
  2104                           ;Practica9_30_03_19.c: 111:             Lcd_Out(2,1,"que Temp MAX");
  2105  007ACA  0E01               	movlw	1
  2106  007ACC  6E04               	movwf	Lcd_Out@x,c
  2107  007ACE  0E77               	movlw	low STR_18
  2108  007AD0  6E05               	movwf	Lcd_Out@buffer,c
  2109  007AD2  0E7F               	movlw	high STR_18
  2110  007AD4  6E06               	movwf	Lcd_Out@buffer+1,c
  2111  007AD6  0E02               	movlw	2
  2112  007AD8  ECA2  F027         	call	_Lcd_Out
  2113                           
  2114                           ;Practica9_30_03_19.c: 112:             _delay((unsigned long)((2000)*(12000000/4000.0))
      +                          );
  2115  007ADC  0E1F               	movlw	31
  2116  007ADE  0100               	movlb	0	; () banked
  2117  007AE0  6FBF               	movwf	(??_main+1)& (0+255),b
  2118  007AE2  0E71               	movlw	113
  2119  007AE4  6FBE               	movwf	??_main& (0+255),b
  2120  007AE6  0E1E               	movlw	30
  2121  007AE8                     u5777:
  2122  007AE8  2EE8               	decfsz	wreg,f,c
  2123  007AEA  D7FE               	bra	u5777
  2124  007AEC  2FBE               	decfsz	??_main& (0+255),f,b
  2125  007AEE  D7FC               	bra	u5777
  2126  007AF0  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2127  007AF2  D7FA               	bra	u5777
  2128  007AF4  F000               	nop	
  2129                           
  2130                           ;Practica9_30_03_19.c: 113:             Lcd_Cmd(1);
  2131  007AF6  0E01               	movlw	1
  2132  007AF8  EC06  F02B         	call	_Lcd_Cmd
  2133                           
  2134                           ;Practica9_30_03_19.c: 114:             _delay((unsigned long)((100)*(12000000/4000.0)))
      +                          ;
  2135  007AFC  0E02               	movlw	2
  2136  007AFE  0100               	movlb	0	; () banked
  2137  007B00  6FBF               	movwf	(??_main+1)& (0+255),b
  2138  007B02  0E86               	movlw	134
  2139  007B04  6FBE               	movwf	??_main& (0+255),b
  2140  007B06  0E99               	movlw	153
  2141  007B08                     u5787:
  2142  007B08  2EE8               	decfsz	wreg,f,c
  2143  007B0A  D7FE               	bra	u5787
  2144  007B0C  2FBE               	decfsz	??_main& (0+255),f,b
  2145  007B0E  D7FC               	bra	u5787
  2146  007B10  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2147  007B12  D7FA               	bra	u5787
  2148                           
  2149                           ;Practica9_30_03_19.c: 115:             Lcd_Out(1,1,"Intentalo de ");
  2150  007B14  0E01               	movlw	1
  2151  007B16  6E04               	movwf	Lcd_Out@x,c
  2152  007B18  0E41               	movlw	low STR_9
  2153  007B1A  6E05               	movwf	Lcd_Out@buffer,c
  2154  007B1C  0E7F               	movlw	high STR_9
  2155  007B1E  6E06               	movwf	Lcd_Out@buffer+1,c
  2156  007B20  0E01               	movlw	1
  2157  007B22  ECA2  F027         	call	_Lcd_Out
  2158                           
  2159                           ;Practica9_30_03_19.c: 116:             Lcd_Out(2,1,"nuevo humano");
  2160  007B26  0E01               	movlw	1
  2161  007B28  6E04               	movwf	Lcd_Out@x,c
  2162  007B2A  0E91               	movlw	low STR_10
  2163  007B2C  6E05               	movwf	Lcd_Out@buffer,c
  2164  007B2E  0E7F               	movlw	high STR_10
  2165  007B30  6E06               	movwf	Lcd_Out@buffer+1,c
  2166  007B32  0E02               	movlw	2
  2167  007B34  ECA2  F027         	call	_Lcd_Out
  2168                           
  2169                           ;Practica9_30_03_19.c: 117:             _delay((unsigned long)((2000)*(12000000/4000.0))
      +                          );
  2170  007B38  0E1F               	movlw	31
  2171  007B3A  0100               	movlb	0	; () banked
  2172  007B3C  6FBF               	movwf	(??_main+1)& (0+255),b
  2173  007B3E  0E71               	movlw	113
  2174  007B40  6FBE               	movwf	??_main& (0+255),b
  2175  007B42  0E1E               	movlw	30
  2176  007B44                     u5797:
  2177  007B44  2EE8               	decfsz	wreg,f,c
  2178  007B46  D7FE               	bra	u5797
  2179  007B48  2FBE               	decfsz	??_main& (0+255),f,b
  2180  007B4A  D7FC               	bra	u5797
  2181  007B4C  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2182  007B4E  D7FA               	bra	u5797
  2183  007B50  F000               	nop	
  2184                           
  2185                           ;Practica9_30_03_19.c: 118:             Lcd_Cmd(1);
  2186  007B52  0E01               	movlw	1
  2187  007B54  EC06  F02B         	call	_Lcd_Cmd
  2188                           
  2189                           ;Practica9_30_03_19.c: 119:             _delay((unsigned long)((100)*(12000000/4000.0)))
      +                          ;
  2190  007B58  0E02               	movlw	2
  2191  007B5A  0100               	movlb	0	; () banked
  2192  007B5C  6FBF               	movwf	(??_main+1)& (0+255),b
  2193  007B5E  0E86               	movlw	134
  2194  007B60  6FBE               	movwf	??_main& (0+255),b
  2195  007B62  0E99               	movlw	153
  2196  007B64                     u5807:
  2197  007B64  2EE8               	decfsz	wreg,f,c
  2198  007B66  D7FE               	bra	u5807
  2199  007B68  2FBE               	decfsz	??_main& (0+255),f,b
  2200  007B6A  D7FC               	bra	u5807
  2201  007B6C  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2202  007B6E  D7FA               	bra	u5807
  2203  007B70                     l4790:
  2204                           
  2205                           ;Practica9_30_03_19.c: 92:     while(valor != '*'){
  2206  007B70  0E2A               	movlw	42
  2207  007B72  0100               	movlb	0	; () banked
  2208  007B74  19CC               	xorwf	_valor& (0+255),w,b
  2209  007B76  11CD               	iorwf	(_valor+1)& (0+255),w,b
  2210  007B78  11CE               	iorwf	(_valor+2)& (0+255),w,b
  2211  007B7A  11CF               	iorwf	(_valor+3)& (0+255),w,b
  2212  007B7C  A4D8               	btfss	status,2,c
  2213  007B7E  D6A2               	goto	l4734
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;Practica9_30_03_19.c: 122:     Lcd_Cmd(1);
  2217  007B80  0E01               	movlw	1
  2218  007B82  EC06  F02B         	call	_Lcd_Cmd
  2219                           
  2220                           ;Practica9_30_03_19.c: 123:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2221  007B86  0E02               	movlw	2
  2222  007B88  0100               	movlb	0	; () banked
  2223  007B8A  6FBF               	movwf	(??_main+1)& (0+255),b
  2224  007B8C  0E86               	movlw	134
  2225  007B8E  6FBE               	movwf	??_main& (0+255),b
  2226  007B90  0E99               	movlw	153
  2227  007B92                     u5817:
  2228  007B92  2EE8               	decfsz	wreg,f,c
  2229  007B94  D7FE               	bra	u5817
  2230  007B96  2FBE               	decfsz	??_main& (0+255),f,b
  2231  007B98  D7FC               	bra	u5817
  2232  007B9A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2233  007B9C  D7FA               	bra	u5817
  2234                           
  2235                           ;Practica9_30_03_19.c: 124:     valor=0;
  2236  007B9E  0E00               	movlw	0
  2237  007BA0  0100               	movlb	0	; () banked
  2238  007BA2  6FCC               	movwf	_valor& (0+255),b
  2239  007BA4  0E00               	movlw	0
  2240  007BA6  6FCD               	movwf	(_valor+1)& (0+255),b
  2241  007BA8  0E00               	movlw	0
  2242  007BAA  6FCE               	movwf	(_valor+2)& (0+255),b
  2243  007BAC  0E00               	movlw	0
  2244  007BAE  6FCF               	movwf	(_valor+3)& (0+255),b
  2245                           
  2246                           ;Practica9_30_03_19.c: 125:     while(valor!= '*'){
  2247  007BB0  D0F5               	goto	u5590
  2248  007BB2                     l4798:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;Practica9_30_03_19.c: 126:         teclado();
  2252  007BB2  EC67  F02D         	call	_teclado	;wreg free
  2253                           
  2254                           ;Practica9_30_03_19.c: 127:         ADCON0bits.GO_DONE=1;
  2255  007BB6  82C2               	bsf	4034,1,c	;volatile
  2256                           
  2257                           ;Practica9_30_03_19.c: 128:         while(ADCON0bits.DONE){
  2258  007BB8  D0EF               	goto	l119
  2259  007BBA                     l4802:
  2260                           
  2261                           ;Practica9_30_03_19.c: 129:             adc=ADRESH;
  2262  007BBA  50C4               	movf	4036,w,c	;volatile
  2263  007BBC  6E01               	movwf	___xxtofl@val,c
  2264  007BBE  6A02               	clrf	___xxtofl@val+1,c
  2265  007BC0  6A03               	clrf	___xxtofl@val+2,c
  2266  007BC2  6A04               	clrf	___xxtofl@val+3,c
  2267  007BC4  0E00               	movlw	0
  2268  007BC6  EC27  F02C         	call	___xxtofl
  2269  007BCA  C001  F0DC         	movff	?___xxtofl,_adc
  2270  007BCE  C002  F0DD         	movff	?___xxtofl+1,_adc+1
  2271  007BD2  C003  F0DE         	movff	?___xxtofl+2,_adc+2
  2272  007BD6  C004  F0DF         	movff	?___xxtofl+3,_adc+3
  2273                           
  2274                           ;Practica9_30_03_19.c: 130:             adc=ADRESH<<8;
  2275  007BDA  50C4               	movf	4036,w,c	;volatile
  2276  007BDC  0100               	movlb	0	; () banked
  2277  007BDE  6FBF               	movwf	(??_main+1)& (0+255),b
  2278  007BE0  6BBE               	clrf	??_main& (0+255),b
  2279  007BE2  C0BE  F001         	movff	??_main,___xxtofl@val
  2280  007BE6  C0BF  F002         	movff	??_main+1,___xxtofl@val+1
  2281  007BEA  0E00               	movlw	0
  2282  007BEC  BE02               	btfsc	___xxtofl@val+1,7,c
  2283  007BEE  0EFF               	movlw	-1
  2284  007BF0  6E03               	movwf	___xxtofl@val+2,c
  2285  007BF2  6E04               	movwf	___xxtofl@val+3,c
  2286  007BF4  0E01               	movlw	1
  2287  007BF6  EC27  F02C         	call	___xxtofl
  2288  007BFA  C001  F0DC         	movff	?___xxtofl,_adc
  2289  007BFE  C002  F0DD         	movff	?___xxtofl+1,_adc+1
  2290  007C02  C003  F0DE         	movff	?___xxtofl+2,_adc+2
  2291  007C06  C004  F0DF         	movff	?___xxtofl+3,_adc+3
  2292                           
  2293                           ;Practica9_30_03_19.c: 131:             adc=ADRESH+ADRESL;
  2294  007C0A  50C3               	movf	4035,w,c	;volatile
  2295  007C0C  CFC4 F0BE          	movff	4036,??_main	;volatile
  2296  007C10  0100               	movlb	0	; () banked
  2297  007C12  6BBF               	clrf	(??_main+1)& (0+255),b
  2298  007C14  27BE               	addwf	??_main& (0+255),f,b
  2299  007C16  0E00               	movlw	0
  2300  007C18  23BF               	addwfc	(??_main+1)& (0+255),f,b
  2301  007C1A  C0BE  F001         	movff	??_main,___xxtofl@val
  2302  007C1E  C0BF  F002         	movff	??_main+1,___xxtofl@val+1
  2303  007C22  0E00               	movlw	0
  2304  007C24  BE02               	btfsc	___xxtofl@val+1,7,c
  2305  007C26  0EFF               	movlw	-1
  2306  007C28  6E03               	movwf	___xxtofl@val+2,c
  2307  007C2A  6E04               	movwf	___xxtofl@val+3,c
  2308  007C2C  0E01               	movlw	1
  2309  007C2E  EC27  F02C         	call	___xxtofl
  2310  007C32  C001  F0DC         	movff	?___xxtofl,_adc
  2311  007C36  C002  F0DD         	movff	?___xxtofl+1,_adc+1
  2312  007C3A  C003  F0DE         	movff	?___xxtofl+2,_adc+2
  2313  007C3E  C004  F0DF         	movff	?___xxtofl+3,_adc+3
  2314                           
  2315                           ;Practica9_30_03_19.c: 132:             conver=(adc*500.0)/1023.0;
  2316  007C42  0E00               	movlw	0
  2317  007C44  6E05               	movwf	___flmul@a,c
  2318  007C46  0E00               	movlw	0
  2319  007C48  6E06               	movwf	___flmul@a+1,c
  2320  007C4A  0EFA               	movlw	250
  2321  007C4C  6E07               	movwf	___flmul@a+2,c
  2322  007C4E  0E43               	movlw	67
  2323  007C50  6E08               	movwf	___flmul@a+3,c
  2324  007C52  C0DC  F001         	movff	_adc,___flmul@b
  2325  007C56  C0DD  F002         	movff	_adc+1,___flmul@b+1
  2326  007C5A  C0DE  F003         	movff	_adc+2,___flmul@b+2
  2327  007C5E  C0DF  F004         	movff	_adc+3,___flmul@b+3
  2328  007C62  ECCA  F031         	call	___flmul	;wreg free
  2329  007C66  C001  F01A         	movff	?___flmul,___fldiv@b
  2330  007C6A  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  2331  007C6E  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  2332  007C72  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  2333  007C76  0E00               	movlw	0
  2334  007C78  6E1E               	movwf	___fldiv@a,c
  2335  007C7A  0EC0               	movlw	192
  2336  007C7C  6E1F               	movwf	___fldiv@a+1,c
  2337  007C7E  0E7F               	movlw	127
  2338  007C80  6E20               	movwf	___fldiv@a+2,c
  2339  007C82  0E44               	movlw	68
  2340  007C84  6E21               	movwf	___fldiv@a+3,c
  2341  007C86  EC00  F02F         	call	___fldiv	;wreg free
  2342  007C8A  C01A  F0D8         	movff	?___fldiv,_conver
  2343  007C8E  C01B  F0D9         	movff	?___fldiv+1,_conver+1
  2344  007C92  C01C  F0DA         	movff	?___fldiv+2,_conver+2
  2345  007C96  C01D  F0DB         	movff	?___fldiv+3,_conver+3
  2346                           
  2347                           ;Practica9_30_03_19.c: 133:             Lcd_Out(1,1,"Temperatura");
  2348  007C9A  0E01               	movlw	1
  2349  007C9C  6E04               	movwf	Lcd_Out@x,c
  2350  007C9E  0E9E               	movlw	low STR_21
  2351  007CA0  6E05               	movwf	Lcd_Out@buffer,c
  2352  007CA2  0E7F               	movlw	high STR_21
  2353  007CA4  6E06               	movwf	Lcd_Out@buffer+1,c
  2354  007CA6  0E01               	movlw	1
  2355  007CA8  ECA2  F027         	call	_Lcd_Out
  2356                           
  2357                           ;Practica9_30_03_19.c: 134:             sprintf(palabra0,"C:%.3f",conver);
  2358  007CAC  0E72               	movlw	low _palabra0
  2359  007CAE  0100               	movlb	0	; () banked
  2360  007CB0  6FAC               	movwf	sprintf@s& (0+255),b
  2361  007CB2  0E01               	movlw	high _palabra0
  2362  007CB4  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2363  007CB6  0EDD               	movlw	low STR_22
  2364  007CB8  6FAE               	movwf	sprintf@fmt& (0+255),b
  2365  007CBA  0E7F               	movlw	high STR_22
  2366  007CBC  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2367  007CBE  C0D8  F0B0         	movff	_conver,?_sprintf+4
  2368  007CC2  C0D9  F0B1         	movff	_conver+1,?_sprintf+5
  2369  007CC6  C0DA  F0B2         	movff	_conver+2,?_sprintf+6
  2370  007CCA  C0DB  F0B3         	movff	_conver+3,?_sprintf+7
  2371  007CCE  ECDE  F026         	call	_sprintf	;wreg free
  2372                           
  2373                           ;Practica9_30_03_19.c: 135:             Lcd_Out2(2,1,palabra0);
  2374  007CD2  0E01               	movlw	1
  2375  007CD4  6E04               	movwf	Lcd_Out2@x,c
  2376  007CD6  0E72               	movlw	low _palabra0
  2377  007CD8  6E05               	movwf	Lcd_Out2@buffer,c
  2378  007CDA  0E01               	movlw	high _palabra0
  2379  007CDC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2380  007CDE  0E02               	movlw	2
  2381  007CE0  EC32  F027         	call	_Lcd_Out2
  2382                           
  2383                           ;Practica9_30_03_19.c: 136:             if(conver>max){
  2384  007CE4  C0D4  F01A         	movff	_max,___flge@ff1
  2385  007CE8  C0D5  F01B         	movff	_max+1,___flge@ff1+1
  2386  007CEC  C0D6  F01C         	movff	_max+2,___flge@ff1+2
  2387  007CF0  C0D7  F01D         	movff	_max+3,___flge@ff1+3
  2388  007CF4  C0D8  F01E         	movff	_conver,___flge@ff2
  2389  007CF8  C0D9  F01F         	movff	_conver+1,___flge@ff2+1
  2390  007CFC  C0DA  F020         	movff	_conver+2,___flge@ff2+2
  2391  007D00  C0DB  F021         	movff	_conver+3,___flge@ff2+3
  2392  007D04  EC15  F02A         	call	___flge	;wreg free
  2393  007D08  B0D8               	btfsc	status,0,c
  2394  007D0A  D003               	goto	l4816
  2395                           
  2396                           ;Practica9_30_03_19.c: 137:                 LATCbits.LC1=1;LATAbits.LA2=1;
  2397  007D0C  828B               	bsf	3979,1,c	;volatile
  2398  007D0E  8489               	bsf	3977,2,c	;volatile
  2399                           
  2400                           ;Practica9_30_03_19.c: 138:             }
  2401  007D10  D043               	goto	l119
  2402  007D12                     l4816:
  2403  007D12  C0D8  F01A         	movff	_conver,___flge@ff1
  2404  007D16  C0D9  F01B         	movff	_conver+1,___flge@ff1+1
  2405  007D1A  C0DA  F01C         	movff	_conver+2,___flge@ff1+2
  2406  007D1E  C0DB  F01D         	movff	_conver+3,___flge@ff1+3
  2407  007D22  C0D4  F01E         	movff	_max,___flge@ff2
  2408  007D26  C0D5  F01F         	movff	_max+1,___flge@ff2+1
  2409  007D2A  C0D6  F020         	movff	_max+2,___flge@ff2+2
  2410  007D2E  C0D7  F021         	movff	_max+3,___flge@ff2+3
  2411  007D32  EC15  F02A         	call	___flge	;wreg free
  2412  007D36  B0D8               	btfsc	status,0,c
  2413  007D38  D019               	goto	l4822
  2414  007D3A  C0D0  F01A         	movff	_min,___flge@ff1
  2415  007D3E  C0D1  F01B         	movff	_min+1,___flge@ff1+1
  2416  007D42  C0D2  F01C         	movff	_min+2,___flge@ff1+2
  2417  007D46  C0D3  F01D         	movff	_min+3,___flge@ff1+3
  2418  007D4A  C0D8  F01E         	movff	_conver,___flge@ff2
  2419  007D4E  C0D9  F01F         	movff	_conver+1,___flge@ff2+1
  2420  007D52  C0DA  F020         	movff	_conver+2,___flge@ff2+2
  2421  007D56  C0DB  F021         	movff	_conver+3,___flge@ff2+3
  2422  007D5A  EC15  F02A         	call	___flge	;wreg free
  2423  007D5E  B0D8               	btfsc	status,0,c
  2424  007D60  D005               	goto	l4822
  2425                           
  2426                           ;Practica9_30_03_19.c: 140:                 LATCbits.LC1=0;LATCbits.LC6=0;
  2427  007D62  928B               	bcf	3979,1,c	;volatile
  2428  007D64  9C8B               	bcf	3979,6,c	;volatile
  2429                           
  2430                           ;Practica9_30_03_19.c: 141:                 LATAbits.LA2=0;LATAbits.LA3=0;
  2431  007D66  9489               	bcf	3977,2,c	;volatile
  2432  007D68  9689               	bcf	3977,3,c	;volatile
  2433                           
  2434                           ;Practica9_30_03_19.c: 142:             }
  2435  007D6A  D016               	goto	l119
  2436  007D6C                     l4822:
  2437  007D6C  C0D8  F01A         	movff	_conver,___flge@ff1
  2438  007D70  C0D9  F01B         	movff	_conver+1,___flge@ff1+1
  2439  007D74  C0DA  F01C         	movff	_conver+2,___flge@ff1+2
  2440  007D78  C0DB  F01D         	movff	_conver+3,___flge@ff1+3
  2441  007D7C  C0D0  F01E         	movff	_min,___flge@ff2
  2442  007D80  C0D1  F01F         	movff	_min+1,___flge@ff2+1
  2443  007D84  C0D2  F020         	movff	_min+2,___flge@ff2+2
  2444  007D88  C0D3  F021         	movff	_min+3,___flge@ff2+3
  2445  007D8C  EC15  F02A         	call	___flge	;wreg free
  2446  007D90  B0D8               	btfsc	status,0,c
  2447  007D92  D002               	goto	l119
  2448                           
  2449                           ;Practica9_30_03_19.c: 144:                 LATCbits.LC6=1;LATAbits.LA3=1;
  2450  007D94  8C8B               	bsf	3979,6,c	;volatile
  2451  007D96  8689               	bsf	3977,3,c	;volatile
  2452  007D98                     l119:
  2453                           
  2454                           ;Practica9_30_03_19.c: 128:         while(ADCON0bits.DONE){
  2455  007D98  B2C2               	btfsc	4034,1,c	;volatile
  2456  007D9A  D70F               	goto	l4802
  2457  007D9C                     u5590:
  2458                           
  2459                           ;Practica9_30_03_19.c: 125:     while(valor!= '*'){
  2460  007D9C  0E2A               	movlw	42
  2461  007D9E  0100               	movlb	0	; () banked
  2462  007DA0  19CC               	xorwf	_valor& (0+255),w,b
  2463  007DA2  11CD               	iorwf	(_valor+1)& (0+255),w,b
  2464  007DA4  11CE               	iorwf	(_valor+2)& (0+255),w,b
  2465  007DA6  11CF               	iorwf	(_valor+3)& (0+255),w,b
  2466  007DA8  A4D8               	btfss	status,2,c
  2467  007DAA  D703               	goto	l4798
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;Practica9_30_03_19.c: 148:     LATCbits.LC1=0;LATCbits.LC6=0;LATAbits.LA2=0;LATAbits.LA
      +                          3=0;
  2471  007DAC  928B               	bcf	3979,1,c	;volatile
  2472  007DAE  9C8B               	bcf	3979,6,c	;volatile
  2473  007DB0  9489               	bcf	3977,2,c	;volatile
  2474  007DB2  9689               	bcf	3977,3,c	;volatile
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;Practica9_30_03_19.c: 149:     Lcd_Cmd(1);
  2478  007DB4  0E01               	movlw	1
  2479  007DB6  EC06  F02B         	call	_Lcd_Cmd
  2480                           
  2481                           ;Practica9_30_03_19.c: 150:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2482  007DBA  0E02               	movlw	2
  2483  007DBC  0100               	movlb	0	; () banked
  2484  007DBE  6FBF               	movwf	(??_main+1)& (0+255),b
  2485  007DC0  0E86               	movlw	134
  2486  007DC2  6FBE               	movwf	??_main& (0+255),b
  2487  007DC4  0E99               	movlw	153
  2488  007DC6                     u5827:
  2489  007DC6  2EE8               	decfsz	wreg,f,c
  2490  007DC8  D7FE               	bra	u5827
  2491  007DCA  2FBE               	decfsz	??_main& (0+255),f,b
  2492  007DCC  D7FC               	bra	u5827
  2493  007DCE  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2494  007DD0  D7FA               	bra	u5827
  2495                           
  2496                           ;Practica9_30_03_19.c: 151:     Lcd_Out(1,2,"Hola Humano ");
  2497  007DD2  0E02               	movlw	2
  2498  007DD4  6E04               	movwf	Lcd_Out@x,c
  2499  007DD6  0E6A               	movlw	low STR_23
  2500  007DD8  6E05               	movwf	Lcd_Out@buffer,c
  2501  007DDA  0E7F               	movlw	high STR_23
  2502  007DDC  6E06               	movwf	Lcd_Out@buffer+1,c
  2503  007DDE  0E01               	movlw	1
  2504  007DE0  ECA2  F027         	call	_Lcd_Out
  2505                           
  2506                           ;Practica9_30_03_19.c: 152:     Lcd_Out(2,1,"**************** ");
  2507  007DE4  0E01               	movlw	1
  2508  007DE6  6E04               	movwf	Lcd_Out@x,c
  2509  007DE8  0ED3               	movlw	low STR_24
  2510  007DEA  6E05               	movwf	Lcd_Out@buffer,c
  2511  007DEC  0E7E               	movlw	high STR_24
  2512  007DEE  6E06               	movwf	Lcd_Out@buffer+1,c
  2513  007DF0  0E02               	movlw	2
  2514  007DF2  ECA2  F027         	call	_Lcd_Out
  2515                           
  2516                           ;Practica9_30_03_19.c: 153:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  2517  007DF6  0E1F               	movlw	31
  2518  007DF8  0100               	movlb	0	; () banked
  2519  007DFA  6FBF               	movwf	(??_main+1)& (0+255),b
  2520  007DFC  0E71               	movlw	113
  2521  007DFE  6FBE               	movwf	??_main& (0+255),b
  2522  007E00  0E1E               	movlw	30
  2523  007E02                     u5837:
  2524  007E02  2EE8               	decfsz	wreg,f,c
  2525  007E04  D7FE               	bra	u5837
  2526  007E06  2FBE               	decfsz	??_main& (0+255),f,b
  2527  007E08  D7FC               	bra	u5837
  2528  007E0A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2529  007E0C  D7FA               	bra	u5837
  2530  007E0E  F000               	nop	
  2531                           
  2532                           ;Practica9_30_03_19.c: 154:     Lcd_Cmd(1);
  2533  007E10  0E01               	movlw	1
  2534  007E12  EC06  F02B         	call	_Lcd_Cmd
  2535                           
  2536                           ;Practica9_30_03_19.c: 155:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2537  007E16  0E02               	movlw	2
  2538  007E18  0100               	movlb	0	; () banked
  2539  007E1A  6FBF               	movwf	(??_main+1)& (0+255),b
  2540  007E1C  0E86               	movlw	134
  2541  007E1E  6FBE               	movwf	??_main& (0+255),b
  2542  007E20  0E99               	movlw	153
  2543  007E22                     u5847:
  2544  007E22  2EE8               	decfsz	wreg,f,c
  2545  007E24  D7FE               	bra	u5847
  2546  007E26  2FBE               	decfsz	??_main& (0+255),f,b
  2547  007E28  D7FC               	bra	u5847
  2548  007E2A  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2549  007E2C  D7FA               	bra	u5847
  2550                           
  2551                           ;Practica9_30_03_19.c: 156:     Lcd_Out(1,1,"Selecciona la ");
  2552  007E2E  0E01               	movlw	1
  2553  007E30  6E04               	movwf	Lcd_Out@x,c
  2554  007E32  0E05               	movlw	low STR_25
  2555  007E34  6E05               	movwf	Lcd_Out@buffer,c
  2556  007E36  0E7F               	movlw	high STR_25
  2557  007E38  6E06               	movwf	Lcd_Out@buffer+1,c
  2558  007E3A  0E01               	movlw	1
  2559  007E3C  ECA2  F027         	call	_Lcd_Out
  2560                           
  2561                           ;Practica9_30_03_19.c: 157:     Lcd_Out(2,3,"temperatura ");
  2562  007E40  0E03               	movlw	3
  2563  007E42  6E04               	movwf	Lcd_Out@x,c
  2564  007E44  0E5D               	movlw	low STR_26
  2565  007E46  6E05               	movwf	Lcd_Out@buffer,c
  2566  007E48  0E7F               	movlw	high STR_26
  2567  007E4A  6E06               	movwf	Lcd_Out@buffer+1,c
  2568  007E4C  0E02               	movlw	2
  2569  007E4E  ECA2  F027         	call	_Lcd_Out
  2570                           
  2571                           ;Practica9_30_03_19.c: 158:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  2572  007E52  0E1F               	movlw	31
  2573  007E54  0100               	movlb	0	; () banked
  2574  007E56  6FBF               	movwf	(??_main+1)& (0+255),b
  2575  007E58  0E71               	movlw	113
  2576  007E5A  6FBE               	movwf	??_main& (0+255),b
  2577  007E5C  0E1E               	movlw	30
  2578  007E5E                     u5857:
  2579  007E5E  2EE8               	decfsz	wreg,f,c
  2580  007E60  D7FE               	bra	u5857
  2581  007E62  2FBE               	decfsz	??_main& (0+255),f,b
  2582  007E64  D7FC               	bra	u5857
  2583  007E66  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2584  007E68  D7FA               	bra	u5857
  2585  007E6A  F000               	nop	
  2586                           
  2587                           ;Practica9_30_03_19.c: 159:     Lcd_Cmd(1);
  2588  007E6C  0E01               	movlw	1
  2589  007E6E  EC06  F02B         	call	_Lcd_Cmd
  2590                           
  2591                           ;Practica9_30_03_19.c: 160:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2592  007E72  0E02               	movlw	2
  2593  007E74  0100               	movlb	0	; () banked
  2594  007E76  6FBF               	movwf	(??_main+1)& (0+255),b
  2595  007E78  0E86               	movlw	134
  2596  007E7A  6FBE               	movwf	??_main& (0+255),b
  2597  007E7C  0E99               	movlw	153
  2598  007E7E                     u5867:
  2599  007E7E  2EE8               	decfsz	wreg,f,c
  2600  007E80  D7FE               	bra	u5867
  2601  007E82  2FBE               	decfsz	??_main& (0+255),f,b
  2602  007E84  D7FC               	bra	u5867
  2603  007E86  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2604  007E88  D7FA               	bra	u5867
  2605                           
  2606                           ;Practica9_30_03_19.c: 161:     Lcd_Out(1,1,"De nuevo ");
  2607  007E8A  0E01               	movlw	1
  2608  007E8C  6E04               	movwf	Lcd_Out@x,c
  2609  007E8E  0EC1               	movlw	low STR_27
  2610  007E90  6E05               	movwf	Lcd_Out@buffer,c
  2611  007E92  0E7F               	movlw	high STR_27
  2612  007E94  6E06               	movwf	Lcd_Out@buffer+1,c
  2613  007E96  0E01               	movlw	1
  2614  007E98  ECA2  F027         	call	_Lcd_Out
  2615                           
  2616                           ;Practica9_30_03_19.c: 162:     Lcd_Out(2,1,"**************** ");
  2617  007E9C  0E01               	movlw	1
  2618  007E9E  6E04               	movwf	Lcd_Out@x,c
  2619  007EA0  0ED3               	movlw	low STR_24
  2620  007EA2  6E05               	movwf	Lcd_Out@buffer,c
  2621  007EA4  0E7E               	movlw	high STR_24
  2622  007EA6  6E06               	movwf	Lcd_Out@buffer+1,c
  2623  007EA8  0E02               	movlw	2
  2624  007EAA  ECA2  F027         	call	_Lcd_Out
  2625                           
  2626                           ;Practica9_30_03_19.c: 163:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  2627  007EAE  0E1F               	movlw	31
  2628  007EB0  0100               	movlb	0	; () banked
  2629  007EB2  6FBF               	movwf	(??_main+1)& (0+255),b
  2630  007EB4  0E71               	movlw	113
  2631  007EB6  6FBE               	movwf	??_main& (0+255),b
  2632  007EB8  0E1E               	movlw	30
  2633  007EBA                     u5877:
  2634  007EBA  2EE8               	decfsz	wreg,f,c
  2635  007EBC  D7FE               	bra	u5877
  2636  007EBE  2FBE               	decfsz	??_main& (0+255),f,b
  2637  007EC0  D7FC               	bra	u5877
  2638  007EC2  2FBF               	decfsz	(??_main+1)& (0+255),f,b
  2639  007EC4  D7FA               	bra	u5877
  2640  007EC6  F000               	nop	
  2641                           
  2642                           ;Practica9_30_03_19.c: 164:     Lcd_Cmd(1);
  2643  007EC8  0E01               	movlw	1
  2644  007ECA  EC06  F02B         	call	_Lcd_Cmd
  2645  007ECE  EF9B  F03A         	goto	l4652
  2646  007ED2                     __end_of_main:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _teclado *****************
  2650 ;; Defined at:
  2651 ;;		line 168 in file "Practica9_30_03_19.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text1
  2679  005ACE                     __ptext1:
  2680                           	opt callstack 0
  2681  005ACE                     _teclado:
  2682                           	opt callstack 30
  2683                           
  2684                           ;Practica9_30_03_19.c: 169:     valor=0;
  2685                           
  2686                           ;incstack = 0
  2687  005ACE  0E00               	movlw	0
  2688  005AD0  0100               	movlb	0	; () banked
  2689  005AD2  6FCC               	movwf	_valor& (0+255),b
  2690  005AD4  0E00               	movlw	0
  2691  005AD6  6FCD               	movwf	(_valor+1)& (0+255),b
  2692  005AD8  0E00               	movlw	0
  2693  005ADA  6FCE               	movwf	(_valor+2)& (0+255),b
  2694  005ADC  0E00               	movlw	0
  2695  005ADE  6FCF               	movwf	(_valor+3)& (0+255),b
  2696                           
  2697                           ;Practica9_30_03_19.c: 170:     PORTB=0xF0;
  2698  005AE0  0EF0               	movlw	240
  2699  005AE2  6E81               	movwf	3969,c	;volatile
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;Practica9_30_03_19.c: 171:     if(PORTB != 0xF0){
  2703  005AE4  0EF0               	movlw	240
  2704  005AE6  1881               	xorwf	3969,w,c	;volatile
  2705  005AE8  B4D8               	btfsc	status,2,c
  2706  005AEA  D0A8               	goto	l131
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;Practica9_30_03_19.c: 172:         PORTB=0xFE;
  2710  005AEC  0EFE               	movlw	254
  2711  005AEE  6E81               	movwf	3969,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;Practica9_30_03_19.c: 173:             if(PORTBbits.RB4==0){valor = '*';}
  2715  005AF0  B881               	btfsc	3969,4,c	;volatile
  2716  005AF2  D008               	goto	l4490
  2717                           
  2718                           ; BSR set to: 0
  2719  005AF4  0E2A               	movlw	42
  2720  005AF6  6FCC               	movwf	_valor& (0+255),b
  2721  005AF8  0E00               	movlw	0
  2722  005AFA  6FCD               	movwf	(_valor+1)& (0+255),b
  2723  005AFC  0E00               	movlw	0
  2724  005AFE  6FCE               	movwf	(_valor+2)& (0+255),b
  2725  005B00  0E00               	movlw	0
  2726  005B02  6FCF               	movwf	(_valor+3)& (0+255),b
  2727  005B04                     l4490:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;Practica9_30_03_19.c: 174:             if(PORTBbits.RB5==0){valor = '0';}
  2731  005B04  BA81               	btfsc	3969,5,c	;volatile
  2732  005B06  D008               	goto	l4494
  2733                           
  2734                           ; BSR set to: 0
  2735  005B08  0E30               	movlw	48
  2736  005B0A  6FCC               	movwf	_valor& (0+255),b
  2737  005B0C  0E00               	movlw	0
  2738  005B0E  6FCD               	movwf	(_valor+1)& (0+255),b
  2739  005B10  0E00               	movlw	0
  2740  005B12  6FCE               	movwf	(_valor+2)& (0+255),b
  2741  005B14  0E00               	movlw	0
  2742  005B16  6FCF               	movwf	(_valor+3)& (0+255),b
  2743  005B18                     l4494:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;Practica9_30_03_19.c: 175:             if(PORTBbits.RB6==0){valor = '#';}
  2747  005B18  BC81               	btfsc	3969,6,c	;volatile
  2748  005B1A  D008               	goto	l4498
  2749                           
  2750                           ; BSR set to: 0
  2751  005B1C  0E23               	movlw	35
  2752  005B1E  6FCC               	movwf	_valor& (0+255),b
  2753  005B20  0E00               	movlw	0
  2754  005B22  6FCD               	movwf	(_valor+1)& (0+255),b
  2755  005B24  0E00               	movlw	0
  2756  005B26  6FCE               	movwf	(_valor+2)& (0+255),b
  2757  005B28  0E00               	movlw	0
  2758  005B2A  6FCF               	movwf	(_valor+3)& (0+255),b
  2759  005B2C                     l4498:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;Practica9_30_03_19.c: 176:             if(PORTBbits.RB7==0){valor = 'D';}
  2763  005B2C  BE81               	btfsc	3969,7,c	;volatile
  2764  005B2E  D008               	goto	l135
  2765                           
  2766                           ; BSR set to: 0
  2767  005B30  0E44               	movlw	68
  2768  005B32  6FCC               	movwf	_valor& (0+255),b
  2769  005B34  0E00               	movlw	0
  2770  005B36  6FCD               	movwf	(_valor+1)& (0+255),b
  2771  005B38  0E00               	movlw	0
  2772  005B3A  6FCE               	movwf	(_valor+2)& (0+255),b
  2773  005B3C  0E00               	movlw	0
  2774  005B3E  6FCF               	movwf	(_valor+3)& (0+255),b
  2775  005B40                     l135:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;Practica9_30_03_19.c: 177:         PORTB=0xFD;
  2779  005B40  0EFD               	movlw	253
  2780  005B42  6E81               	movwf	3969,c	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;Practica9_30_03_19.c: 178:             if(PORTBbits.RB4==0){valor = '7';}
  2784  005B44  B881               	btfsc	3969,4,c	;volatile
  2785  005B46  D008               	goto	l4506
  2786                           
  2787                           ; BSR set to: 0
  2788  005B48  0E37               	movlw	55
  2789  005B4A  6FCC               	movwf	_valor& (0+255),b
  2790  005B4C  0E00               	movlw	0
  2791  005B4E  6FCD               	movwf	(_valor+1)& (0+255),b
  2792  005B50  0E00               	movlw	0
  2793  005B52  6FCE               	movwf	(_valor+2)& (0+255),b
  2794  005B54  0E00               	movlw	0
  2795  005B56  6FCF               	movwf	(_valor+3)& (0+255),b
  2796  005B58                     l4506:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;Practica9_30_03_19.c: 179:             if(PORTBbits.RB5==0){valor = '8';}
  2800  005B58  BA81               	btfsc	3969,5,c	;volatile
  2801  005B5A  D008               	goto	l4510
  2802                           
  2803                           ; BSR set to: 0
  2804  005B5C  0E38               	movlw	56
  2805  005B5E  6FCC               	movwf	_valor& (0+255),b
  2806  005B60  0E00               	movlw	0
  2807  005B62  6FCD               	movwf	(_valor+1)& (0+255),b
  2808  005B64  0E00               	movlw	0
  2809  005B66  6FCE               	movwf	(_valor+2)& (0+255),b
  2810  005B68  0E00               	movlw	0
  2811  005B6A  6FCF               	movwf	(_valor+3)& (0+255),b
  2812  005B6C                     l4510:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;Practica9_30_03_19.c: 180:             if(PORTBbits.RB6==0){valor = '9';}
  2816  005B6C  BC81               	btfsc	3969,6,c	;volatile
  2817  005B6E  D008               	goto	l4514
  2818                           
  2819                           ; BSR set to: 0
  2820  005B70  0E39               	movlw	57
  2821  005B72  6FCC               	movwf	_valor& (0+255),b
  2822  005B74  0E00               	movlw	0
  2823  005B76  6FCD               	movwf	(_valor+1)& (0+255),b
  2824  005B78  0E00               	movlw	0
  2825  005B7A  6FCE               	movwf	(_valor+2)& (0+255),b
  2826  005B7C  0E00               	movlw	0
  2827  005B7E  6FCF               	movwf	(_valor+3)& (0+255),b
  2828  005B80                     l4514:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;Practica9_30_03_19.c: 181:             if(PORTBbits.RB7==0){valor = 'C';}
  2832  005B80  BE81               	btfsc	3969,7,c	;volatile
  2833  005B82  D008               	goto	l139
  2834                           
  2835                           ; BSR set to: 0
  2836  005B84  0E43               	movlw	67
  2837  005B86  6FCC               	movwf	_valor& (0+255),b
  2838  005B88  0E00               	movlw	0
  2839  005B8A  6FCD               	movwf	(_valor+1)& (0+255),b
  2840  005B8C  0E00               	movlw	0
  2841  005B8E  6FCE               	movwf	(_valor+2)& (0+255),b
  2842  005B90  0E00               	movlw	0
  2843  005B92  6FCF               	movwf	(_valor+3)& (0+255),b
  2844  005B94                     l139:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;Practica9_30_03_19.c: 182:         PORTB=0xFB;
  2848  005B94  0EFB               	movlw	251
  2849  005B96  6E81               	movwf	3969,c	;volatile
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;Practica9_30_03_19.c: 183:             if(PORTBbits.RB4==0){valor = '4';}
  2853  005B98  B881               	btfsc	3969,4,c	;volatile
  2854  005B9A  D008               	goto	l4522
  2855                           
  2856                           ; BSR set to: 0
  2857  005B9C  0E34               	movlw	52
  2858  005B9E  6FCC               	movwf	_valor& (0+255),b
  2859  005BA0  0E00               	movlw	0
  2860  005BA2  6FCD               	movwf	(_valor+1)& (0+255),b
  2861  005BA4  0E00               	movlw	0
  2862  005BA6  6FCE               	movwf	(_valor+2)& (0+255),b
  2863  005BA8  0E00               	movlw	0
  2864  005BAA  6FCF               	movwf	(_valor+3)& (0+255),b
  2865  005BAC                     l4522:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;Practica9_30_03_19.c: 184:             if(PORTBbits.RB5==0){valor = '5';}
  2869  005BAC  BA81               	btfsc	3969,5,c	;volatile
  2870  005BAE  D008               	goto	l4526
  2871                           
  2872                           ; BSR set to: 0
  2873  005BB0  0E35               	movlw	53
  2874  005BB2  6FCC               	movwf	_valor& (0+255),b
  2875  005BB4  0E00               	movlw	0
  2876  005BB6  6FCD               	movwf	(_valor+1)& (0+255),b
  2877  005BB8  0E00               	movlw	0
  2878  005BBA  6FCE               	movwf	(_valor+2)& (0+255),b
  2879  005BBC  0E00               	movlw	0
  2880  005BBE  6FCF               	movwf	(_valor+3)& (0+255),b
  2881  005BC0                     l4526:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;Practica9_30_03_19.c: 185:             if(PORTBbits.RB6==0){valor = '6';}
  2885  005BC0  BC81               	btfsc	3969,6,c	;volatile
  2886  005BC2  D008               	goto	l4530
  2887                           
  2888                           ; BSR set to: 0
  2889  005BC4  0E36               	movlw	54
  2890  005BC6  6FCC               	movwf	_valor& (0+255),b
  2891  005BC8  0E00               	movlw	0
  2892  005BCA  6FCD               	movwf	(_valor+1)& (0+255),b
  2893  005BCC  0E00               	movlw	0
  2894  005BCE  6FCE               	movwf	(_valor+2)& (0+255),b
  2895  005BD0  0E00               	movlw	0
  2896  005BD2  6FCF               	movwf	(_valor+3)& (0+255),b
  2897  005BD4                     l4530:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;Practica9_30_03_19.c: 186:             if(PORTBbits.RB7==0){valor = 'B';}
  2901  005BD4  BE81               	btfsc	3969,7,c	;volatile
  2902  005BD6  D008               	goto	l143
  2903                           
  2904                           ; BSR set to: 0
  2905  005BD8  0E42               	movlw	66
  2906  005BDA  6FCC               	movwf	_valor& (0+255),b
  2907  005BDC  0E00               	movlw	0
  2908  005BDE  6FCD               	movwf	(_valor+1)& (0+255),b
  2909  005BE0  0E00               	movlw	0
  2910  005BE2  6FCE               	movwf	(_valor+2)& (0+255),b
  2911  005BE4  0E00               	movlw	0
  2912  005BE6  6FCF               	movwf	(_valor+3)& (0+255),b
  2913  005BE8                     l143:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;Practica9_30_03_19.c: 187:         PORTB=0xF7;
  2917  005BE8  0EF7               	movlw	247
  2918  005BEA  6E81               	movwf	3969,c	;volatile
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;Practica9_30_03_19.c: 188:             if(PORTBbits.RB4==0){valor = '1';}
  2922  005BEC  B881               	btfsc	3969,4,c	;volatile
  2923  005BEE  D008               	goto	l4538
  2924                           
  2925                           ; BSR set to: 0
  2926  005BF0  0E31               	movlw	49
  2927  005BF2  6FCC               	movwf	_valor& (0+255),b
  2928  005BF4  0E00               	movlw	0
  2929  005BF6  6FCD               	movwf	(_valor+1)& (0+255),b
  2930  005BF8  0E00               	movlw	0
  2931  005BFA  6FCE               	movwf	(_valor+2)& (0+255),b
  2932  005BFC  0E00               	movlw	0
  2933  005BFE  6FCF               	movwf	(_valor+3)& (0+255),b
  2934  005C00                     l4538:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;Practica9_30_03_19.c: 189:             if(PORTBbits.RB5==0){valor = '2';}
  2938  005C00  BA81               	btfsc	3969,5,c	;volatile
  2939  005C02  D008               	goto	l4542
  2940                           
  2941                           ; BSR set to: 0
  2942  005C04  0E32               	movlw	50
  2943  005C06  6FCC               	movwf	_valor& (0+255),b
  2944  005C08  0E00               	movlw	0
  2945  005C0A  6FCD               	movwf	(_valor+1)& (0+255),b
  2946  005C0C  0E00               	movlw	0
  2947  005C0E  6FCE               	movwf	(_valor+2)& (0+255),b
  2948  005C10  0E00               	movlw	0
  2949  005C12  6FCF               	movwf	(_valor+3)& (0+255),b
  2950  005C14                     l4542:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;Practica9_30_03_19.c: 190:             if(PORTBbits.RB6==0){valor = '3';}
  2954  005C14  BC81               	btfsc	3969,6,c	;volatile
  2955  005C16  D008               	goto	l4546
  2956                           
  2957                           ; BSR set to: 0
  2958  005C18  0E33               	movlw	51
  2959  005C1A  6FCC               	movwf	_valor& (0+255),b
  2960  005C1C  0E00               	movlw	0
  2961  005C1E  6FCD               	movwf	(_valor+1)& (0+255),b
  2962  005C20  0E00               	movlw	0
  2963  005C22  6FCE               	movwf	(_valor+2)& (0+255),b
  2964  005C24  0E00               	movlw	0
  2965  005C26  6FCF               	movwf	(_valor+3)& (0+255),b
  2966  005C28                     l4546:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;Practica9_30_03_19.c: 191:             if(PORTBbits.RB7==0){valor = 'A';}
  2970  005C28  BE81               	btfsc	3969,7,c	;volatile
  2971  005C2A  D008               	goto	l131
  2972                           
  2973                           ; BSR set to: 0
  2974  005C2C  0E41               	movlw	65
  2975  005C2E  6FCC               	movwf	_valor& (0+255),b
  2976  005C30  0E00               	movlw	0
  2977  005C32  6FCD               	movwf	(_valor+1)& (0+255),b
  2978  005C34  0E00               	movlw	0
  2979  005C36  6FCE               	movwf	(_valor+2)& (0+255),b
  2980  005C38  0E00               	movlw	0
  2981  005C3A  6FCF               	movwf	(_valor+3)& (0+255),b
  2982  005C3C                     l131:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;Practica9_30_03_19.c: 193:     LATB = 0xF0;
  2986  005C3C  0EF0               	movlw	240
  2987  005C3E  6E8A               	movwf	3978,c	;volatile
  2988  005C40                     l4550:
  2989  005C40  0EF0               	movlw	240
  2990  005C42  1881               	xorwf	3969,w,c	;volatile
  2991  005C44  B4D8               	btfsc	status,2,c
  2992  005C46  0012               	return	
  2993  005C48  D7FB               	goto	l4550
  2994  005C4A                     __end_of_teclado:
  2995                           	opt callstack 0
  2996                           
  2997 ;; *************** function _sprintf *****************
  2998 ;; Defined at:
  2999 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  s               2   76[BANK0 ] PTR unsigned char 
  3002 ;;		 -> palabra0(17), palabra2(17), palabra(17), 
  3003 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  3004 ;;		 -> STR_22(7), STR_14(8), STR_6(8), 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  f               6   88[BANK0 ] struct _IO_FILE
  3007 ;;  ap              2   86[BANK0 ] PTR void [1]
  3008 ;;		 -> ?_sprintf(2), 
  3009 ;;  ret             2    0        int 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2   76[BANK0 ] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         0       8       0       0       0       0       0       0       0
  3020 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3023 ;;Total ram usage:       18 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    7
  3026 ;; This function calls:
  3027 ;;		_vfprintf
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text2
  3034  004DBC                     __ptext2:
  3035                           	opt callstack 0
  3036  004DBC                     _sprintf:
  3037                           	opt callstack 23
  3038                           
  3039                           ;incstack = 0
  3040  004DBC  0EB0               	movlw	low (?_sprintf+4)
  3041  004DBE  0100               	movlb	0	; () banked
  3042  004DC0  6FB6               	movwf	sprintf@ap& (0+255),b
  3043  004DC2  0E00               	movlw	high (?_sprintf+4)
  3044  004DC4  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  3045  004DC6  C0AC  F0B8         	movff	sprintf@s,sprintf@f
  3046  004DCA  C0AD  F0B9         	movff	sprintf@s+1,sprintf@f+1
  3047                           
  3048                           ; BSR set to: 0
  3049  004DCE  0E00               	movlw	0
  3050  004DD0  6FBB               	movwf	(sprintf@f+3)& (0+255),b
  3051  004DD2  0E00               	movlw	0
  3052  004DD4  6FBA               	movwf	(sprintf@f+2)& (0+255),b
  3053                           
  3054                           ; BSR set to: 0
  3055  004DD6  0E00               	movlw	0
  3056  004DD8  6FBD               	movwf	(sprintf@f+5)& (0+255),b
  3057  004DDA  0E00               	movlw	0
  3058  004DDC  6FBC               	movwf	(sprintf@f+4)& (0+255),b
  3059                           
  3060                           ; BSR set to: 0
  3061  004DDE  0EB8               	movlw	low sprintf@f
  3062  004DE0  6FA6               	movwf	vfprintf@fp& (0+255),b
  3063  004DE2  0E00               	movlw	high sprintf@f
  3064  004DE4  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  3065  004DE6  C0AE  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  3066  004DEA  C0AF  F0A9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3067  004DEE  0EB6               	movlw	low sprintf@ap
  3068  004DF0  6FAA               	movwf	vfprintf@ap& (0+255),b
  3069  004DF2  0E00               	movlw	high sprintf@ap
  3070  004DF4  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  3071  004DF6  EC07  F027         	call	_vfprintf	;wreg free
  3072  004DFA  0100               	movlb	0	; () banked
  3073  004DFC  51BA               	movf	(sprintf@f+2)& (0+255),w,b
  3074  004DFE  25AC               	addwf	sprintf@s& (0+255),w,b
  3075  004E00  6ED9               	movwf	fsr2l,c
  3076  004E02  51BB               	movf	(sprintf@f+3)& (0+255),w,b
  3077  004E04  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  3078  004E06  6EDA               	movwf	fsr2h,c
  3079  004E08  0E00               	movlw	0
  3080  004E0A  6EDF               	movwf	indf2,c
  3081                           
  3082                           ; BSR set to: 0
  3083  004E0C  0012               	return		;funcret
  3084  004E0E                     __end_of_sprintf:
  3085                           	opt callstack 0
  3086                           
  3087 ;; *************** function _vfprintf *****************
  3088 ;; Defined at:
  3089 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  3092 ;;		 -> sprintf@f(6), 
  3093 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  3094 ;;		 -> STR_22(7), STR_14(8), STR_6(8), 
  3095 ;;  ap              2   74[BANK0 ] PTR PTR void 
  3096 ;;		 -> sprintf@ap(2), 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  3099 ;;		 -> STR_22(7), STR_14(8), STR_6(8), 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2   70[BANK0 ] int 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         0       6       0       0       0       0       0       0       0
  3110 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        8 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    6
  3116 ;; This function calls:
  3117 ;;		_vfpfcnvrt
  3118 ;; This function is called by:
  3119 ;;		_sprintf
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text3
  3124  004E0E                     __ptext3:
  3125                           	opt callstack 0
  3126  004E0E                     _vfprintf:
  3127                           	opt callstack 23
  3128                           
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;incstack = 0
  3133  004E0E  C0A8  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  3134  004E12  C0A9  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3135                           
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3137  004E16  0E00               	movlw	0
  3138  004E18  0100               	movlb	0	; () banked
  3139  004E1A  6FE1               	movwf	(_nout+1)& (0+255),b
  3140  004E1C  0E00               	movlw	0
  3141  004E1E  6FE0               	movwf	_nout& (0+255),b
  3142                           
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3144  004E20  D013               	goto	l4370
  3145  004E22                     l4368:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3149  004E22  C0A6  F053         	movff	vfprintf@fp,vfpfcnvrt@fp
  3150  004E26  C0A7  F054         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3151  004E2A  0E5D               	movlw	low vfprintf@cfmt
  3152  004E2C  6E55               	movwf	vfpfcnvrt@fmt,c
  3153  004E2E  0E00               	movlw	high vfprintf@cfmt
  3154  004E30  6E56               	movwf	vfpfcnvrt@fmt+1,c
  3155  004E32  C0AA  F057         	movff	vfprintf@ap,vfpfcnvrt@ap
  3156  004E36  C0AB  F058         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3157  004E3A  EC73  F033         	call	_vfpfcnvrt	;wreg free
  3158  004E3E  5053               	movf	?_vfpfcnvrt,w,c
  3159  004E40  0100               	movlb	0	; () banked
  3160  004E42  27E0               	addwf	_nout& (0+255),f,b
  3161  004E44  5054               	movf	?_vfpfcnvrt+1,w,c
  3162  004E46  23E1               	addwfc	(_nout+1)& (0+255),f,b
  3163  004E48                     l4370:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3167  004E48  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  3168  004E4C  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3169  004E50                     	if	0	;tblptru may be non-zero
  3170  004E50                     	endif
  3171  004E50                     	if	0	;tblptru may be non-zero
  3172  004E50                     	endif
  3173  004E50  0008               	tblrd		*
  3174  004E52  50F5               	movf	tablat,w,c
  3175  004E54  0900               	iorlw	0
  3176  004E56  A4D8               	btfss	status,2,c
  3177  004E58  D7E4               	goto	l4368
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3181  004E5A  C0E0  F0A6         	movff	_nout,?_vfprintf
  3182  004E5E  C0E1  F0A7         	movff	_nout+1,?_vfprintf+1
  3183                           
  3184                           ; BSR set to: 0
  3185  004E62  0012               	return		;funcret
  3186  004E64                     __end_of_vfprintf:
  3187                           	opt callstack 0
  3188                           
  3189 ;; *************** function _vfpfcnvrt *****************
  3190 ;; Defined at:
  3191 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  3194 ;;		 -> sprintf@f(6), 
  3195 ;;  fmt             2   84[COMRAM] PTR PTR unsigned char 
  3196 ;;		 -> vfprintf@cfmt(2), 
  3197 ;;  ap              2   86[COMRAM] PTR PTR void 
  3198 ;;		 -> sprintf@ap(2), 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  llu             8    0        unsigned long long 
  3201 ;;  ll              8    0        long long 
  3202 ;;  f               4   62[BANK0 ] long long 
  3203 ;;  ct              3   66[BANK0 ] unsigned char [3]
  3204 ;;  vp              3    0        PTR void 
  3205 ;;  cp              3    0        PTR unsigned char 
  3206 ;;  done            2   56[BANK0 ] int 
  3207 ;;  i               2    0        int 
  3208 ;;  c               1   69[BANK0 ] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  2   82[COMRAM] int 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         6       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         0      14       0       0       0       0       0       0       0
  3220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3221 ;;      Totals:        10      14       0       0       0       0       0       0       0
  3222 ;;Total ram usage:       24 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    5
  3225 ;; This function calls:
  3226 ;;		_atoi
  3227 ;;		_efgtoa
  3228 ;;		_fputc
  3229 ;;		_isdigit
  3230 ;;		_isupper
  3231 ;;		_strncmp
  3232 ;;		_tolower
  3233 ;; This function is called by:
  3234 ;;		_vfprintf
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text4
  3239  0066E6                     __ptext4:
  3240                           	opt callstack 0
  3241  0066E6                     _vfpfcnvrt:
  3242                           	opt callstack 23
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;incstack = 0
  3248  0066E6  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3249  0066EA  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3250  0066EE  CFDE FFF6          	movff	postinc2,tblptrl
  3251  0066F2  CFDD FFF7          	movff	postdec2,tblptrh
  3252  0066F6                     	if	0	;tblptru may be non-zero
  3253  0066F6                     	endif
  3254  0066F6                     	if	0	;tblptru may be non-zero
  3255  0066F6                     	endif
  3256  0066F6  0008               	tblrd		*
  3257  0066F8  50F5               	movf	tablat,w,c
  3258  0066FA  0A25               	xorlw	37
  3259  0066FC  A4D8               	btfss	status,2,c
  3260  0066FE  D1F1               	goto	l4304
  3261                           
  3262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3263  006700  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3264  006704  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3265  006708  2ADE               	incf	postinc2,f,c
  3266  00670A  0E00               	movlw	0
  3267  00670C  22DD               	addwfc	postdec2,f,c
  3268                           
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3270  00670E  0E00               	movlw	0
  3271  006710  0100               	movlb	0	; () banked
  3272  006712  6FE3               	movwf	(_width+1)& (0+255),b
  3273  006714  0E00               	movlw	0
  3274  006716  6FE2               	movwf	_width& (0+255),b
  3275  006718  C0E2  F0E6         	movff	_width,_flags
  3276  00671C  C0E3  F0E7         	movff	_width+1,_flags+1
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3280  006720  69E4               	setf	_prec& (0+255),b
  3281  006722  69E5               	setf	(_prec+1)& (0+255),b
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3285  006724  0E00               	movlw	0
  3286  006726  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3287  006728  0E00               	movlw	0
  3288  00672A  D014               	goto	L1
  3289  00672C                     l4200:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3293  00672C  81E6               	bsf	_flags& (0+255),0,b
  3294  00672E                     l4202:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3298  00672E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  006732  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  006736  2ADE               	incf	postinc2,f,c
  3301  006738  0E00               	movlw	0
  3302  00673A  22DD               	addwfc	postdec2,f,c
  3303                           
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3305  00673C  D02E               	goto	l4226
  3306  00673E                     l4204:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3310  00673E  83E6               	bsf	_flags& (0+255),1,b
  3311  006740  D7F6               	goto	l4202
  3312  006742                     l4208:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3316  006742  85E6               	bsf	_flags& (0+255),2,b
  3317  006744  D7F4               	goto	l4202
  3318  006746                     l4212:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3322  006746  87E6               	bsf	_flags& (0+255),3,b
  3323  006748  D7F2               	goto	l4202
  3324  00674A                     l4216:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3328  00674A  89E6               	bsf	_flags& (0+255),4,b
  3329  00674C  D7F0               	goto	l4202
  3330  00674E                     l4220:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3334  00674E  0E00               	movlw	0
  3335  006750  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3336  006752  0E01               	movlw	1
  3337  006754                     L1:
  3338  006754  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  3339                           
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3341  006756  D021               	goto	l4226
  3342  006758                     l4224:
  3343                           
  3344                           ; BSR set to: 0
  3345  006758  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3346  00675C  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3347  006760  CFDE FFF6          	movff	postinc2,tblptrl
  3348  006764  CFDD FFF7          	movff	postdec2,tblptrh
  3349  006768                     	if	0	;tblptru may be non-zero
  3350  006768                     	endif
  3351  006768                     	if	0	;tblptru may be non-zero
  3352  006768                     	endif
  3353  006768  0008               	tblrd		*
  3354  00676A  50F5               	movf	tablat,w,c
  3355  00676C  6E59               	movwf	??_vfpfcnvrt& (0+255),c
  3356  00676E  6A5A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3357                           
  3358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3359                           ; Switch size 1, requested type "simple"
  3360                           ; Number of cases is 1, Range of values is 0 to 0
  3361                           ; switch strategies available:
  3362                           ; Name         Instructions Cycles
  3363                           ; simple_byte            4     3 (average)
  3364                           ;	Chosen strategy is simple_byte
  3365  006770  505A               	movf	??_vfpfcnvrt+1,w,c
  3366  006772  0A00               	xorlw	0	; case 0
  3367  006774  A4D8               	btfss	status,2,c
  3368  006776  D7EB               	goto	l4220
  3369                           
  3370                           ; BSR set to: 0
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 5, Range of values is 32 to 48
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte           16     9 (average)
  3376                           ;	Chosen strategy is simple_byte
  3377  006778  5059               	movf	??_vfpfcnvrt,w,c
  3378  00677A  0A20               	xorlw	32	; case 32
  3379  00677C  B4D8               	btfsc	status,2,c
  3380  00677E  D7E3               	goto	l4212
  3381  006780  0A03               	xorlw	3	; case 35
  3382  006782  B4D8               	btfsc	status,2,c
  3383  006784  D7E2               	goto	l4216
  3384  006786  0A08               	xorlw	8	; case 43
  3385  006788  B4D8               	btfsc	status,2,c
  3386  00678A  D7DB               	goto	l4208
  3387  00678C  0A06               	xorlw	6	; case 45
  3388  00678E  B4D8               	btfsc	status,2,c
  3389  006790  D7CD               	goto	l4200
  3390  006792  0A1D               	xorlw	29	; case 48
  3391  006794  B4D8               	btfsc	status,2,c
  3392  006796  D7D3               	goto	l4204
  3393  006798  D7DA               	goto	l4220
  3394  00679A                     l4226:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3398  00679A  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  3399  00679C  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3400  00679E  B4D8               	btfsc	status,2,c
  3401  0067A0  D7DB               	goto	l4224
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3405  0067A2  B1E6               	btfsc	_flags& (0+255),0,b
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3409  0067A4  93E6               	bcf	_flags& (0+255),1,b
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3413  0067A6  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3414  0067AA  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3415  0067AE  CFDE FFF6          	movff	postinc2,tblptrl
  3416  0067B2  CFDD FFF7          	movff	postdec2,tblptrh
  3417  0067B6                     	if	0	;tblptru may be non-zero
  3418  0067B6                     	endif
  3419  0067B6                     	if	0	;tblptru may be non-zero
  3420  0067B6                     	endif
  3421  0067B6  0008               	tblrd		*
  3422  0067B8  50F5               	movf	tablat,w,c
  3423  0067BA  0A2E               	xorlw	46
  3424  0067BC  A4D8               	btfss	status,2,c
  3425  0067BE  D06E               	goto	u4990
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3429  0067C0  0E00               	movlw	0
  3430  0067C2  6FE5               	movwf	(_prec+1)& (0+255),b
  3431  0067C4  0E00               	movlw	0
  3432  0067C6  6FE4               	movwf	_prec& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3436  0067C8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3437  0067CC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3438  0067D0  2ADE               	incf	postinc2,f,c
  3439  0067D2  0E00               	movlw	0
  3440  0067D4  22DD               	addwfc	postdec2,f,c
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3444  0067D6  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3445  0067DA  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446  0067DE  CFDE FFF6          	movff	postinc2,tblptrl
  3447  0067E2  CFDD FFF7          	movff	postdec2,tblptrh
  3448  0067E6                     	if	0	;tblptru may be non-zero
  3449  0067E6                     	endif
  3450  0067E6                     	if	0	;tblptru may be non-zero
  3451  0067E6                     	endif
  3452  0067E6  0008               	tblrd		*
  3453  0067E8  50F5               	movf	tablat,w,c
  3454  0067EA  0A2A               	xorlw	42
  3455  0067EC  A4D8               	btfss	status,2,c
  3456  0067EE  D01C               	goto	l4240
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3460  0067F0  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3461  0067F4  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3462  0067F8  2ADE               	incf	postinc2,f,c
  3463  0067FA  0E00               	movlw	0
  3464  0067FC  22DD               	addwfc	postdec2,f,c
  3465                           
  3466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3467  0067FE  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3468  006802  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3469  006806  CFDF F059          	movff	indf2,??_vfpfcnvrt
  3470  00680A  0E02               	movlw	2
  3471  00680C  26DE               	addwf	postinc2,f,c
  3472  00680E  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  3473  006812  0E00               	movlw	0
  3474  006814  22DD               	addwfc	postdec2,f,c
  3475  006816  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3476  00681A  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3477  00681E  CFDE F0E4          	movff	postinc2,_prec
  3478  006822  CFDD F0E5          	movff	postdec2,_prec+1
  3479                           
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3481  006826  D03A               	goto	u4990
  3482  006828                     l4240:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3486  006828  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3487  00682C  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3488  006830  CFDE F008          	movff	postinc2,atoi@s
  3489  006834  CFDD F009          	movff	postdec2,atoi@s+1
  3490  006838  ECC7  F02C         	call	_atoi	;wreg free
  3491  00683C  C008  F0E4         	movff	?_atoi,_prec
  3492  006840  C009  F0E5         	movff	?_atoi+1,_prec+1
  3493                           
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3495  006844  D007               	goto	l4244
  3496  006846                     l4242:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3500  006846  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3501  00684A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3502  00684E  2ADE               	incf	postinc2,f,c
  3503  006850  0E00               	movlw	0
  3504  006852  22DD               	addwfc	postdec2,f,c
  3505  006854                     l4244:
  3506  006854  0ED0               	movlw	208
  3507  006856  6E59               	movwf	??_vfpfcnvrt& (0+255),c
  3508  006858  0EFF               	movlw	255
  3509  00685A  6E5A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3510  00685C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3511  006860  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3512  006864  CFDE FFF6          	movff	postinc2,tblptrl
  3513  006868  CFDD FFF7          	movff	postdec2,tblptrh
  3514  00686C                     	if	0	;tblptru may be non-zero
  3515  00686C                     	endif
  3516  00686C                     	if	0	;tblptru may be non-zero
  3517  00686C                     	endif
  3518  00686C  0008               	tblrd		*
  3519  00686E  50F5               	movf	tablat,w,c
  3520  006870  6E5B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3521  006872  6A5C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3522  006874  5059               	movf	??_vfpfcnvrt,w,c
  3523  006876  265B               	addwf	??_vfpfcnvrt+2,f,c
  3524  006878  505A               	movf	??_vfpfcnvrt+1,w,c
  3525  00687A  225C               	addwfc	??_vfpfcnvrt+3,f,c
  3526  00687C  505C               	movf	??_vfpfcnvrt+3,w,c
  3527  00687E  E106               	bnz	u4970
  3528  006880  0E0A               	movlw	10
  3529  006882  5C5B               	subwf	??_vfpfcnvrt+2,w,c
  3530  006884  B0D8               	btfsc	status,0,c
  3531  006886  D002               	goto	u4970
  3532  006888  0E01               	movlw	1
  3533  00688A  D001               	goto	u4980
  3534  00688C                     u4970:
  3535  00688C  0E00               	movlw	0
  3536  00688E                     u4980:
  3537  00688E  0100               	movlb	0	; () banked
  3538  006890  6F9A               	movwf	_vfpfcnvrt$724& (0+255),b
  3539  006892  6B9B               	clrf	(_vfpfcnvrt$724+1)& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542  006894  519A               	movf	_vfpfcnvrt$724& (0+255),w,b
  3543  006896  119B               	iorwf	(_vfpfcnvrt$724+1)& (0+255),w,b
  3544  006898  A4D8               	btfss	status,2,c
  3545  00689A  D7D5               	goto	l4242
  3546  00689C                     u4990:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3550  00689C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3551  0068A0  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3552  0068A4  CFDE FFF6          	movff	postinc2,tblptrl
  3553  0068A8  CFDD FFF7          	movff	postdec2,tblptrh
  3554  0068AC                     	if	0	;tblptru may be non-zero
  3555  0068AC                     	endif
  3556  0068AC                     	if	0	;tblptru may be non-zero
  3557  0068AC                     	endif
  3558  0068AC  0008               	tblrd		*
  3559  0068AE  50F5               	movf	tablat,w,c
  3560  0068B0  6E07               	movwf	tolower@c,c
  3561  0068B2  6A08               	clrf	tolower@c+1,c
  3562  0068B4  EC8F  F026         	call	_tolower	;wreg free
  3563  0068B8  5007               	movf	?_tolower,w,c
  3564  0068BA  0100               	movlb	0	; () banked
  3565  0068BC  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3569  0068BE  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  3570  0068C0  B4D8               	btfsc	status,2,c
  3571  0068C2  D035               	goto	l4260
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3575  0068C4  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  0068C8  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  0068CC  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  3578  0068D0  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  3579  0068D4  0E01               	movlw	1
  3580  0068D6  2659               	addwf	??_vfpfcnvrt,f,c
  3581  0068D8  0E00               	movlw	0
  3582  0068DA  225A               	addwfc	??_vfpfcnvrt+1,f,c
  3583  0068DC  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3584  0068E0  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3585  0068E4                     	if	0	;tblptru may be non-zero
  3586  0068E4                     	endif
  3587  0068E4                     	if	0	;tblptru may be non-zero
  3588  0068E4                     	endif
  3589  0068E4  0008               	tblrd		*
  3590  0068E6  50F5               	movf	tablat,w,c
  3591  0068E8  6E07               	movwf	tolower@c,c
  3592  0068EA  6A08               	clrf	tolower@c+1,c
  3593  0068EC  EC8F  F026         	call	_tolower	;wreg free
  3594  0068F0  5007               	movf	?_tolower,w,c
  3595  0068F2  0100               	movlb	0	; () banked
  3596  0068F4  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3600  0068F6  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3601  0068F8  B4D8               	btfsc	status,2,c
  3602  0068FA  D019               	goto	l4260
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3606  0068FC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3607  006900  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3608  006904  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  3609  006908  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  3610  00690C  0E02               	movlw	2
  3611  00690E  2659               	addwf	??_vfpfcnvrt,f,c
  3612  006910  0E00               	movlw	0
  3613  006912  225A               	addwfc	??_vfpfcnvrt+1,f,c
  3614  006914  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3615  006918  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3616  00691C                     	if	0	;tblptru may be non-zero
  3617  00691C                     	endif
  3618  00691C                     	if	0	;tblptru may be non-zero
  3619  00691C                     	endif
  3620  00691C  0008               	tblrd		*
  3621  00691E  50F5               	movf	tablat,w,c
  3622  006920  6E07               	movwf	tolower@c,c
  3623  006922  6A08               	clrf	tolower@c+1,c
  3624  006924  EC8F  F026         	call	_tolower	;wreg free
  3625  006928  5007               	movf	?_tolower,w,c
  3626  00692A  0100               	movlb	0	; () banked
  3627  00692C  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3628  00692E                     l4260:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3632  00692E  0E66               	movlw	102
  3633  006930  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3634  006932  A4D8               	btfss	status,2,c
  3635  006934  D03F               	goto	l4272
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3639  006936  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3640  00693A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3641  00693E  CFDE FFF6          	movff	postinc2,tblptrl
  3642  006942  CFDD FFF7          	movff	postdec2,tblptrh
  3643  006946                     	if	0	;tblptru may be non-zero
  3644  006946                     	endif
  3645  006946                     	if	0	;tblptru may be non-zero
  3646  006946                     	endif
  3647  006946  0008               	tblrd		*
  3648  006948  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3652  00694C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3653  006950  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3654  006954  2ADE               	incf	postinc2,f,c
  3655  006956  0E00               	movlw	0
  3656  006958  22DD               	addwfc	postdec2,f,c
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3660  00695A  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3661  00695E  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3662  006962  CFDF F059          	movff	indf2,??_vfpfcnvrt
  3663  006966  0E04               	movlw	4
  3664  006968  26DE               	addwf	postinc2,f,c
  3665  00696A  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  3666  00696E  0E00               	movlw	0
  3667  006970  22DD               	addwfc	postdec2,f,c
  3668  006972  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3669  006976  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3670  00697A  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  3671  00697E  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  3672  006982  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  3673  006986  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  3674  00698A                     l4268:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3678  00698A  C053  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  3679  00698E  C054  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3680  006992  C09E  F049         	movff	vfpfcnvrt@f,efgtoa@f
  3681  006996  C09F  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3682  00699A  C0A0  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3683  00699E  C0A1  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3684  0069A2  C0A5  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  3685  0069A6  EC8B  F035         	call	_efgtoa	;wreg free
  3686  0069AA  C047  F053         	movff	?_efgtoa,?_vfpfcnvrt
  3687  0069AE  C048  F054         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3688  0069B2  0012               	return	
  3689  0069B4                     l4272:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3693  0069B4  0EA2               	movlw	low vfpfcnvrt@ct
  3694  0069B6  6E01               	movwf	strncmp@_l,c
  3695  0069B8  0E00               	movlw	high vfpfcnvrt@ct
  3696  0069BA  6E02               	movwf	strncmp@_l+1,c
  3697  0069BC  0EFB               	movlw	low STR_37
  3698  0069BE  6E03               	movwf	strncmp@_r,c
  3699  0069C0  0E7F               	movlw	high STR_37
  3700  0069C2  6E04               	movwf	strncmp@_r+1,c
  3701  0069C4  0E00               	movlw	0
  3702  0069C6  6E06               	movwf	strncmp@n+1,c
  3703  0069C8  0E02               	movlw	2
  3704  0069CA  6E05               	movwf	strncmp@n,c
  3705  0069CC  EC01  F029         	call	_strncmp	;wreg free
  3706  0069D0  5001               	movf	?_strncmp,w,c
  3707  0069D2  1002               	iorwf	?_strncmp+1,w,c
  3708  0069D4  A4D8               	btfss	status,2,c
  3709  0069D6  D056               	goto	l4288
  3710                           
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3712  0069D8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3713  0069DC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3714  0069E0  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  3715  0069E4  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  3716  0069E8  0E01               	movlw	1
  3717  0069EA  2659               	addwf	??_vfpfcnvrt,f,c
  3718  0069EC  0E00               	movlw	0
  3719  0069EE  225A               	addwfc	??_vfpfcnvrt+1,f,c
  3720  0069F0  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3721  0069F4  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3722  0069F8                     	if	0	;tblptru may be non-zero
  3723  0069F8                     	endif
  3724  0069F8                     	if	0	;tblptru may be non-zero
  3725  0069F8                     	endif
  3726  0069F8  0008               	tblrd		*
  3727  0069FA  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3728  0069FE  0EBF               	movlw	191
  3729  006A00  6E59               	movwf	??_vfpfcnvrt& (0+255),c
  3730  006A02  0EFF               	movlw	255
  3731  006A04  6E5A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3732  006A06  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3733  006A0A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3734  006A0E  CFDE FFF6          	movff	postinc2,tblptrl
  3735  006A12  CFDD FFF7          	movff	postdec2,tblptrh
  3736  006A16                     	if	0	;tblptru may be non-zero
  3737  006A16                     	endif
  3738  006A16                     	if	0	;tblptru may be non-zero
  3739  006A16                     	endif
  3740  006A16  0008               	tblrd		*
  3741  006A18  50F5               	movf	tablat,w,c
  3742  006A1A  6E5B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3743  006A1C  6A5C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3744  006A1E  5059               	movf	??_vfpfcnvrt,w,c
  3745  006A20  265B               	addwf	??_vfpfcnvrt+2,f,c
  3746  006A22  505A               	movf	??_vfpfcnvrt+1,w,c
  3747  006A24  225C               	addwfc	??_vfpfcnvrt+3,f,c
  3748  006A26  505C               	movf	??_vfpfcnvrt+3,w,c
  3749  006A28  E106               	bnz	u5040
  3750  006A2A  0E1A               	movlw	26
  3751  006A2C  5C5B               	subwf	??_vfpfcnvrt+2,w,c
  3752  006A2E  B0D8               	btfsc	status,0,c
  3753  006A30  D002               	goto	u5040
  3754  006A32  0E01               	movlw	1
  3755  006A34  D001               	goto	u5050
  3756  006A36                     u5040:
  3757  006A36  0E00               	movlw	0
  3758  006A38                     u5050:
  3759  006A38  0100               	movlb	0	; () banked
  3760  006A3A  6F9C               	movwf	_vfpfcnvrt$728& (0+255),b
  3761  006A3C  6B9D               	clrf	(_vfpfcnvrt$728+1)& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764  006A3E  519C               	movf	_vfpfcnvrt$728& (0+255),w,b
  3765  006A40  119D               	iorwf	(_vfpfcnvrt$728+1)& (0+255),w,b
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3769                           
  3770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3774  006A42  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3775  006A46  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3776  006A4A  CFDF F059          	movff	indf2,??_vfpfcnvrt
  3777  006A4E  0E04               	movlw	4
  3778  006A50  26DE               	addwf	postinc2,f,c
  3779  006A52  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  3780  006A56  0E00               	movlw	0
  3781  006A58  22DD               	addwfc	postdec2,f,c
  3782  006A5A  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3783  006A5E  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3784  006A62  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  3785  006A66  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  3786  006A6A  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  3787  006A6E  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3793  006A72  0E02               	movlw	2
  3794  006A74  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3795  006A78  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3796  006A7C  26DE               	addwf	postinc2,f,c
  3797  006A7E  0E00               	movlw	0
  3798  006A80  22DD               	addwfc	postdec2,f,c
  3799  006A82  D783               	goto	l4268
  3800  006A84                     l4288:
  3801                           
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3803  006A84  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3804  006A88  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3805  006A8C  CFDE FFF6          	movff	postinc2,tblptrl
  3806  006A90  CFDD FFF7          	movff	postdec2,tblptrh
  3807  006A94                     	if	0	;tblptru may be non-zero
  3808  006A94                     	endif
  3809  006A94                     	if	0	;tblptru may be non-zero
  3810  006A94                     	endif
  3811  006A94  0008               	tblrd		*
  3812  006A96  50F5               	movf	tablat,w,c
  3813  006A98  0A25               	xorlw	37
  3814  006A9A  A4D8               	btfss	status,2,c
  3815  006A9C  D016               	goto	l4298
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3818  006A9E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3819  006AA2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3820  006AA6  2ADE               	incf	postinc2,f,c
  3821  006AA8  0E00               	movlw	0
  3822  006AAA  22DD               	addwfc	postdec2,f,c
  3823                           
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3825  006AAC  0E00               	movlw	0
  3826  006AAE  6E02               	movwf	fputc@c+1,c
  3827  006AB0  0E25               	movlw	37
  3828  006AB2  6E01               	movwf	fputc@c,c
  3829  006AB4  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3830  006AB8  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3831  006ABC  ECB1  F028         	call	_fputc	;wreg free
  3832  006AC0                     l4294:
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3835  006AC0  0E00               	movlw	0
  3836  006AC2  6E54               	movwf	?_vfpfcnvrt+1,c
  3837  006AC4  0E01               	movlw	1
  3838  006AC6  6E53               	movwf	?_vfpfcnvrt,c
  3839  006AC8  0012               	return	
  3840  006ACA                     l4298:
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3843  006ACA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3844  006ACE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3845  006AD2  2ADE               	incf	postinc2,f,c
  3846  006AD4  0E00               	movlw	0
  3847  006AD6  22DD               	addwfc	postdec2,f,c
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3850  006AD8  0E00               	movlw	0
  3851  006ADA  6E54               	movwf	?_vfpfcnvrt+1,c
  3852  006ADC  0E00               	movlw	0
  3853  006ADE  6E53               	movwf	?_vfpfcnvrt,c
  3854  006AE0  0012               	return	
  3855  006AE2                     l4304:
  3856                           
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3858  006AE2  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3859  006AE6  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3860  006AEA  CFDE FFF6          	movff	postinc2,tblptrl
  3861  006AEE  CFDD FFF7          	movff	postdec2,tblptrh
  3862  006AF2                     	if	0	;tblptru may be non-zero
  3863  006AF2                     	endif
  3864  006AF2                     	if	0	;tblptru may be non-zero
  3865  006AF2                     	endif
  3866  006AF2  0008               	tblrd		*
  3867  006AF4  50F5               	movf	tablat,w,c
  3868  006AF6  6E01               	movwf	fputc@c,c
  3869  006AF8  6A02               	clrf	fputc@c+1,c
  3870  006AFA  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3871  006AFE  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3872  006B02  ECB1  F028         	call	_fputc	;wreg free
  3873                           
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3875  006B06  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3876  006B0A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3877  006B0E  2ADE               	incf	postinc2,f,c
  3878  006B10  0E00               	movlw	0
  3879  006B12  22DD               	addwfc	postdec2,f,c
  3880  006B14  D7D5               	goto	l4294
  3881  006B16                     __end_of_vfpfcnvrt:
  3882                           	opt callstack 0
  3883                           
  3884 ;; *************** function _strncmp *****************
  3885 ;; Defined at:
  3886 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3889 ;;		 -> vfpfcnvrt@ct(3), 
  3890 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3891 ;;		 -> STR_39(3), 
  3892 ;;  n               2    4[COMRAM] unsigned int 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3895 ;;		 -> STR_39(3), 
  3896 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3897 ;;		 -> vfpfcnvrt@ct(3), 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2    0[COMRAM] int 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         6       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3910 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:       11 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_vfpfcnvrt
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text5
  3921  005202                     __ptext5:
  3922                           	opt callstack 0
  3923  005202                     _strncmp:
  3924                           	opt callstack 27
  3925                           
  3926                           ;incstack = 0
  3927  005202  C001  F008         	movff	strncmp@_l,strncmp@l
  3928  005206  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3929  00520A  C003  F00A         	movff	strncmp@_r,strncmp@r
  3930  00520E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3931  005212  0605               	decf	strncmp@n,f,c
  3932  005214  A0D8               	btfss	status,0,c
  3933  005216  0606               	decf	strncmp@n+1,f,c
  3934  005218  2805               	incf	strncmp@n,w,c
  3935  00521A  E10F               	bnz	l4178
  3936  00521C  2806               	incf	strncmp@n+1,w,c
  3937  00521E  A4D8               	btfss	status,2,c
  3938  005220  D00C               	goto	l4178
  3939  005222  0E00               	movlw	0
  3940  005224  6E02               	movwf	?_strncmp+1,c
  3941  005226  0E00               	movlw	0
  3942  005228  6E01               	movwf	?_strncmp,c
  3943  00522A  0012               	return	
  3944  00522C                     l4176:
  3945  00522C  4A08               	infsnz	strncmp@l,f,c
  3946  00522E  2A09               	incf	strncmp@l+1,f,c
  3947  005230  4A0A               	infsnz	strncmp@r,f,c
  3948  005232  2A0B               	incf	strncmp@r+1,f,c
  3949  005234  0605               	decf	strncmp@n,f,c
  3950  005236  A0D8               	btfss	status,0,c
  3951  005238  0606               	decf	strncmp@n+1,f,c
  3952  00523A                     l4178:
  3953  00523A  C008  FFD9         	movff	strncmp@l,fsr2l
  3954  00523E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3955  005242  50DF               	movf	indf2,w,c
  3956  005244  B4D8               	btfsc	status,2,c
  3957  005246  D01C               	goto	u4910
  3958  005248  C00A  FFF6         	movff	strncmp@r,tblptrl
  3959  00524C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3960  005250                     	if	0	;tblptru may be non-zero
  3961  005250                     	endif
  3962  005250                     	if	0	;tblptru may be non-zero
  3963  005250                     	endif
  3964  005250  0008               	tblrd		*
  3965  005252  50F5               	movf	tablat,w,c
  3966  005254  0900               	iorlw	0
  3967  005256  B4D8               	btfsc	status,2,c
  3968  005258  D013               	goto	u4910
  3969  00525A  5005               	movf	strncmp@n,w,c
  3970  00525C  1006               	iorwf	strncmp@n+1,w,c
  3971  00525E  B4D8               	btfsc	status,2,c
  3972  005260  D00F               	goto	u4910
  3973  005262  C008  FFD9         	movff	strncmp@l,fsr2l
  3974  005266  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3975  00526A  50DF               	movf	indf2,w,c
  3976  00526C  6E07               	movwf	??_strncmp& (0+255),c
  3977  00526E  C00A  FFF6         	movff	strncmp@r,tblptrl
  3978  005272  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3979  005276                     	if	0	;tblptru may be non-zero
  3980  005276                     	endif
  3981  005276                     	if	0	;tblptru may be non-zero
  3982  005276                     	endif
  3983  005276  0008               	tblrd		*
  3984  005278  50F5               	movf	tablat,w,c
  3985  00527A  1807               	xorwf	??_strncmp,w,c
  3986  00527C  B4D8               	btfsc	status,2,c
  3987  00527E  D7D6               	goto	l4176
  3988  005280                     u4910:
  3989  005280  C008  FFD9         	movff	strncmp@l,fsr2l
  3990  005284  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3991  005288  50DF               	movf	indf2,w,c
  3992  00528A  6E07               	movwf	??_strncmp& (0+255),c
  3993  00528C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3994  005290  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3995  005294                     	if	0	;tblptru may be non-zero
  3996  005294                     	endif
  3997  005294                     	if	0	;tblptru may be non-zero
  3998  005294                     	endif
  3999  005294  0008               	tblrd		*
  4000  005296  50F5               	movf	tablat,w,c
  4001  005298  5C07               	subwf	??_strncmp,w,c
  4002  00529A  6E01               	movwf	?_strncmp,c
  4003  00529C  6A02               	clrf	?_strncmp+1,c
  4004  00529E  A0D8               	btfss	status,0,c
  4005  0052A0  0602               	decf	?_strncmp+1,f,c
  4006  0052A2  0012               	return		;funcret
  4007  0052A4                     __end_of_strncmp:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _efgtoa *****************
  4011 ;; Defined at:
  4012 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  4015 ;;		 -> sprintf@f(6), 
  4016 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  4017 ;;  c               1   76[COMRAM] unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  u               4   52[BANK0 ] unsigned char 
  4020 ;;  g               4   44[BANK0 ] unsigned char 
  4021 ;;  l               4   38[BANK0 ] unsigned char 
  4022 ;;  h               4   34[BANK0 ] unsigned char 
  4023 ;;  ou              4    0[BANK0 ] unsigned char 
  4024 ;;  n               2   50[BANK0 ] int 
  4025 ;;  e               2   48[BANK0 ] int 
  4026 ;;  i               2   42[BANK0 ] int 
  4027 ;;  w               2   31[BANK0 ] int 
  4028 ;;  p               2   28[BANK0 ] int 
  4029 ;;  sign            2   26[BANK0 ] int 
  4030 ;;  d               2   24[BANK0 ] int 
  4031 ;;  ne              2   22[BANK0 ] int 
  4032 ;;  m               2   20[BANK0 ] int 
  4033 ;;  pp              2   18[BANK0 ] int 
  4034 ;;  t               2   16[BANK0 ] int 
  4035 ;;  mode            1   33[BANK0 ] unsigned char 
  4036 ;;  nmode           1   30[BANK0 ] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2   70[COMRAM] int 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         7       0       0       0       0       0       0       0       0
  4047 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4048 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4049 ;;      Totals:        12      56       0       0       0       0       0       0       0
  4050 ;;Total ram usage:       68 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    4
  4053 ;; This function calls:
  4054 ;;		___awdiv
  4055 ;;		___awmod
  4056 ;;		___fladd
  4057 ;;		___fldiv
  4058 ;;		___fleq
  4059 ;;		___flge
  4060 ;;		___flmul
  4061 ;;		___flneg
  4062 ;;		___flsub
  4063 ;;		___fltol
  4064 ;;		___fpclassifyf
  4065 ;;		_floorf
  4066 ;;		_isupper
  4067 ;;		_pad
  4068 ;;		_strcpy
  4069 ;;		_tolower
  4070 ;; This function is called by:
  4071 ;;		_vfpfcnvrt
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text6
  4076  006B16                     __ptext6:
  4077                           	opt callstack 0
  4078  006B16                     _efgtoa:
  4079                           	opt callstack 23
  4080                           
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4082                           
  4083                           ;incstack = 0
  4084  006B16  0E00               	movlw	0
  4085  006B18  0100               	movlb	0	; () banked
  4086  006B1A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4087  006B1C  0E00               	movlw	0
  4088  006B1E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4092  006B20  C049  F08C         	movff	efgtoa@f,efgtoa@g
  4093  006B24  C04A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4094  006B28  C04B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4095  006B2C  C04C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4099  006B30  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  4100  006B32  D016               	goto	l3840
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4104  006B34  0E00               	movlw	0
  4105  006B36  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4106  006B38  0E01               	movlw	1
  4107  006B3A  6F7A               	movwf	efgtoa@sign& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4111  006B3C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4112  006B40  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4113  006B44  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4114  006B48  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4115  006B4C  ECEA  F025         	call	___flneg	;wreg free
  4116  006B50  C001  F08C         	movff	?___flneg,efgtoa@g
  4117  006B54  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4118  006B58  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4119  006B5C  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4120  006B60                     l3840:
  4121                           
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4123  006B60  0E00               	movlw	0
  4124  006B62  0100               	movlb	0	; () banked
  4125  006B64  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4126  006B66  0E00               	movlw	0
  4127  006B68  6F92               	movwf	efgtoa@n& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4131  006B6A  C0E2  F07F         	movff	_width,efgtoa@w
  4132  006B6E  C0E3  F080         	movff	_width+1,efgtoa@w+1
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4136  006B72  517A               	movf	efgtoa@sign& (0+255),w,b
  4137  006B74  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4138  006B76  A4D8               	btfss	status,2,c
  4139  006B78  D002               	goto	u4300
  4140                           
  4141                           ; BSR set to: 0
  4142  006B7A  A5E6               	btfss	_flags& (0+255),2,b
  4143  006B7C  D013               	goto	l3860
  4144  006B7E                     u4300:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4148  006B7E  517A               	movf	efgtoa@sign& (0+255),w,b
  4149  006B80  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4150  006B82  A4D8               	btfss	status,2,c
  4151  006B84  D004               	goto	l3852
  4152                           
  4153                           ; BSR set to: 0
  4154  006B86  0E00               	movlw	0
  4155  006B88  6F65               	movwf	(_efgtoa$698+1)& (0+255),b
  4156  006B8A  0E2B               	movlw	43
  4157  006B8C  D003               	goto	L2
  4158  006B8E                     l3852:
  4159                           
  4160                           ; BSR set to: 0
  4161  006B8E  0E00               	movlw	0
  4162  006B90  6F65               	movwf	(_efgtoa$698+1)& (0+255),b
  4163  006B92  0E2D               	movlw	45
  4164  006B94                     L2:
  4165  006B94  6F64               	movwf	_efgtoa$698& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168  006B96  C064  F111         	movff	_efgtoa$698,_dbuf
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4172  006B9A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4173  006B9C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4177  006B9E  077F               	decf	efgtoa@w& (0+255),f,b
  4178  006BA0  A0D8               	btfss	status,0,c
  4179  006BA2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4180  006BA4                     l3860:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4184  006BA4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4185  006BA8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4186  006BAC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4187  006BB0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4188  006BB4  ECAF  F029         	call	___fpclassifyf	;wreg free
  4189  006BB8  0401               	decf	?___fpclassifyf,w,c
  4190  006BBA  1002               	iorwf	?___fpclassifyf+1,w,c
  4191  006BBC  A4D8               	btfss	status,2,c
  4192  006BBE  D04C               	goto	l3878
  4193  006BC0  0EBF               	movlw	191
  4194  006BC2  6E4E               	movwf	??_efgtoa& (0+255),c
  4195  006BC4  0EFF               	movlw	255
  4196  006BC6  6E4F               	movwf	(??_efgtoa+1)& (0+255),c
  4197  006BC8  504D               	movf	efgtoa@c,w,c
  4198  006BCA  6E50               	movwf	(??_efgtoa+2)& (0+255),c
  4199  006BCC  6A51               	clrf	(??_efgtoa+3)& (0+255),c
  4200  006BCE  504E               	movf	??_efgtoa,w,c
  4201  006BD0  2650               	addwf	??_efgtoa+2,f,c
  4202  006BD2  504F               	movf	??_efgtoa+1,w,c
  4203  006BD4  2251               	addwfc	??_efgtoa+3,f,c
  4204  006BD6  5051               	movf	??_efgtoa+3,w,c
  4205  006BD8  E106               	bnz	u4330
  4206  006BDA  0E1A               	movlw	26
  4207  006BDC  5C50               	subwf	??_efgtoa+2,w,c
  4208  006BDE  B0D8               	btfsc	status,0,c
  4209  006BE0  D002               	goto	u4330
  4210  006BE2  0E01               	movlw	1
  4211  006BE4  D001               	goto	u4340
  4212  006BE6                     u4330:
  4213  006BE6  0E00               	movlw	0
  4214  006BE8                     u4340:
  4215  006BE8  0100               	movlb	0	; () banked
  4216  006BEA  6F66               	movwf	_efgtoa$699& (0+255),b
  4217  006BEC  6B67               	clrf	(_efgtoa$699+1)& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220  006BEE  5166               	movf	_efgtoa$699& (0+255),w,b
  4221  006BF0  1167               	iorwf	(_efgtoa$699+1)& (0+255),w,b
  4222  006BF2  B4D8               	btfsc	status,2,c
  4223  006BF4  D00D               	goto	l3870
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4227  006BF6  0E11               	movlw	low _dbuf
  4228  006BF8  2592               	addwf	efgtoa@n& (0+255),w,b
  4229  006BFA  6E01               	movwf	strcpy@dest,c
  4230  006BFC  0E01               	movlw	high _dbuf
  4231  006BFE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4232  006C00  6E02               	movwf	strcpy@dest+1,c
  4233  006C02  0EEB               	movlw	low STR_29
  4234  006C04  6E03               	movwf	strcpy@src,c
  4235  006C06  0E7F               	movlw	high STR_29
  4236  006C08  6E04               	movwf	strcpy@src+1,c
  4237  006C0A  ECB5  F026         	call	_strcpy	;wreg free
  4238                           
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4240  006C0E  D00C               	goto	l3872
  4241  006C10                     l3870:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4245  006C10  0E11               	movlw	low _dbuf
  4246  006C12  2592               	addwf	efgtoa@n& (0+255),w,b
  4247  006C14  6E01               	movwf	strcpy@dest,c
  4248  006C16  0E01               	movlw	high _dbuf
  4249  006C18  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4250  006C1A  6E02               	movwf	strcpy@dest+1,c
  4251  006C1C  0EF3               	movlw	low STR_30
  4252  006C1E  6E03               	movwf	strcpy@src,c
  4253  006C20  0E7F               	movlw	high STR_30
  4254  006C22  6E04               	movwf	strcpy@src+1,c
  4255  006C24  ECB5  F026         	call	_strcpy	;wreg free
  4256  006C28                     l3872:
  4257                           
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4259  006C28  0100               	movlb	0	; () banked
  4260  006C2A  0EFD               	movlw	253
  4261  006C2C  277F               	addwf	efgtoa@w& (0+255),f,b
  4262  006C2E  0EFF               	movlw	255
  4263  006C30  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4264  006C32                     l3874:
  4265                           
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4267  006C32  C047  F011         	movff	efgtoa@fp,pad@fp
  4268  006C36  C048  F012         	movff	efgtoa@fp+1,pad@fp+1
  4269  006C3A  0E11               	movlw	low _dbuf
  4270  006C3C  6E13               	movwf	pad@buf,c
  4271  006C3E  0E01               	movlw	high _dbuf
  4272  006C40  6E14               	movwf	pad@buf+1,c
  4273  006C42  C07F  F015         	movff	efgtoa@w,pad@p
  4274  006C46  C080  F016         	movff	efgtoa@w+1,pad@p+1
  4275  006C4A  EC64  F028         	call	_pad	;wreg free
  4276  006C4E  C011  F047         	movff	?_pad,?_efgtoa
  4277  006C52  C012  F048         	movff	?_pad+1,?_efgtoa+1
  4278  006C56  0012               	return	
  4279  006C58                     l3878:
  4280                           
  4281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4282  006C58  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4283  006C5C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4284  006C60  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4285  006C64  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4286  006C68  ECAF  F029         	call	___fpclassifyf	;wreg free
  4287  006C6C  5001               	movf	?___fpclassifyf,w,c
  4288  006C6E  1002               	iorwf	?___fpclassifyf+1,w,c
  4289  006C70  A4D8               	btfss	status,2,c
  4290  006C72  D035               	goto	l3896
  4291  006C74  0EBF               	movlw	191
  4292  006C76  6E4E               	movwf	??_efgtoa& (0+255),c
  4293  006C78  0EFF               	movlw	255
  4294  006C7A  6E4F               	movwf	(??_efgtoa+1)& (0+255),c
  4295  006C7C  504D               	movf	efgtoa@c,w,c
  4296  006C7E  6E50               	movwf	(??_efgtoa+2)& (0+255),c
  4297  006C80  6A51               	clrf	(??_efgtoa+3)& (0+255),c
  4298  006C82  504E               	movf	??_efgtoa,w,c
  4299  006C84  2650               	addwf	??_efgtoa+2,f,c
  4300  006C86  504F               	movf	??_efgtoa+1,w,c
  4301  006C88  2251               	addwfc	??_efgtoa+3,f,c
  4302  006C8A  5051               	movf	??_efgtoa+3,w,c
  4303  006C8C  E106               	bnz	u4370
  4304  006C8E  0E1A               	movlw	26
  4305  006C90  5C50               	subwf	??_efgtoa+2,w,c
  4306  006C92  B0D8               	btfsc	status,0,c
  4307  006C94  D002               	goto	u4370
  4308  006C96  0E01               	movlw	1
  4309  006C98  D001               	goto	u4380
  4310  006C9A                     u4370:
  4311  006C9A  0E00               	movlw	0
  4312  006C9C                     u4380:
  4313  006C9C  0100               	movlb	0	; () banked
  4314  006C9E  6F68               	movwf	_efgtoa$704& (0+255),b
  4315  006CA0  6B69               	clrf	(_efgtoa$704+1)& (0+255),b
  4316                           
  4317                           ; BSR set to: 0
  4318  006CA2  5168               	movf	_efgtoa$704& (0+255),w,b
  4319  006CA4  1169               	iorwf	(_efgtoa$704+1)& (0+255),w,b
  4320  006CA6  B4D8               	btfsc	status,2,c
  4321  006CA8  D00D               	goto	l3888
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4325  006CAA  0E11               	movlw	low _dbuf
  4326  006CAC  2592               	addwf	efgtoa@n& (0+255),w,b
  4327  006CAE  6E01               	movwf	strcpy@dest,c
  4328  006CB0  0E01               	movlw	high _dbuf
  4329  006CB2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4330  006CB4  6E02               	movwf	strcpy@dest+1,c
  4331  006CB6  0EEF               	movlw	low STR_33
  4332  006CB8  6E03               	movwf	strcpy@src,c
  4333  006CBA  0E7F               	movlw	high STR_33
  4334  006CBC  6E04               	movwf	strcpy@src+1,c
  4335  006CBE  ECB5  F026         	call	_strcpy	;wreg free
  4336                           
  4337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4338  006CC2  D7B2               	goto	l3872
  4339  006CC4                     l3888:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4343  006CC4  0E11               	movlw	low _dbuf
  4344  006CC6  2592               	addwf	efgtoa@n& (0+255),w,b
  4345  006CC8  6E01               	movwf	strcpy@dest,c
  4346  006CCA  0E01               	movlw	high _dbuf
  4347  006CCC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4348  006CCE  6E02               	movwf	strcpy@dest+1,c
  4349  006CD0  0EF7               	movlw	low STR_34
  4350  006CD2  6E03               	movwf	strcpy@src,c
  4351  006CD4  0E7F               	movlw	high STR_34
  4352  006CD6  6E04               	movwf	strcpy@src+1,c
  4353  006CD8  ECB5  F026         	call	_strcpy	;wreg free
  4354  006CDC  D7A5               	goto	l3872
  4355  006CDE                     l3896:
  4356                           
  4357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4358  006CDE  0E00               	movlw	0
  4359  006CE0  0100               	movlb	0	; () banked
  4360  006CE2  6F94               	movwf	efgtoa@u& (0+255),b
  4361  006CE4  0E00               	movlw	0
  4362  006CE6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4363  006CE8  0E80               	movlw	128
  4364  006CEA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4365  006CEC  0E3F               	movlw	63
  4366  006CEE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4367                           
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4369  006CF0  0E00               	movlw	0
  4370  006CF2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4371  006CF4  0E00               	movlw	0
  4372  006CF6  6F90               	movwf	efgtoa@e& (0+255),b
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4376  006CF8  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4377  006CFC  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4378  006D00  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4379  006D04  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4380  006D08  0E00               	movlw	0
  4381  006D0A  6E05               	movwf	___fleq@ff2,c
  4382  006D0C  0E00               	movlw	0
  4383  006D0E  6E06               	movwf	___fleq@ff2+1,c
  4384  006D10  0E00               	movlw	0
  4385  006D12  6E07               	movwf	___fleq@ff2+2,c
  4386  006D14  0E00               	movlw	0
  4387  006D16  6E08               	movwf	___fleq@ff2+3,c
  4388  006D18  EC1F  F028         	call	___fleq	;wreg free
  4389  006D1C  A0D8               	btfss	status,0,c
  4390  006D1E  D01E               	goto	l3906
  4391  006D20  D076               	goto	u4420
  4392  006D22                     l3902:
  4393                           
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4395  006D22  C094  F001         	movff	efgtoa@u,___flmul@b
  4396  006D26  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4397  006D2A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4398  006D2E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4399  006D32  0E00               	movlw	0
  4400  006D34  6E05               	movwf	___flmul@a,c
  4401  006D36  0E00               	movlw	0
  4402  006D38  6E06               	movwf	___flmul@a+1,c
  4403  006D3A  0E20               	movlw	32
  4404  006D3C  6E07               	movwf	___flmul@a+2,c
  4405  006D3E  0E41               	movlw	65
  4406  006D40  6E08               	movwf	___flmul@a+3,c
  4407  006D42  ECCA  F031         	call	___flmul	;wreg free
  4408  006D46  C001  F094         	movff	?___flmul,efgtoa@u
  4409  006D4A  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4410  006D4E  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4411  006D52  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4412                           
  4413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4414  006D56  0100               	movlb	0	; () banked
  4415  006D58  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4416  006D5A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4417  006D5C                     l3906:
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4420  006D5C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4421  006D60  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4422  006D64  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4423  006D68  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4424  006D6C  0E00               	movlw	0
  4425  006D6E  6E05               	movwf	___flmul@a,c
  4426  006D70  0E00               	movlw	0
  4427  006D72  6E06               	movwf	___flmul@a+1,c
  4428  006D74  0E20               	movlw	32
  4429  006D76  6E07               	movwf	___flmul@a+2,c
  4430  006D78  0E41               	movlw	65
  4431  006D7A  6E08               	movwf	___flmul@a+3,c
  4432  006D7C  C094  F001         	movff	efgtoa@u,___flmul@b
  4433  006D80  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4434  006D84  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4435  006D88  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4436  006D8C  ECCA  F031         	call	___flmul	;wreg free
  4437  006D90  C001  F01E         	movff	?___flmul,___flge@ff2
  4438  006D94  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4439  006D98  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4440  006D9C  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4441  006DA0  EC15  F02A         	call	___flge	;wreg free
  4442  006DA4  A0D8               	btfss	status,0,c
  4443  006DA6  D01F               	goto	l3912
  4444  006DA8  D7BC               	goto	l3902
  4445  006DAA                     l3908:
  4446                           
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4448  006DAA  C094  F01A         	movff	efgtoa@u,___fldiv@b
  4449  006DAE  C095  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  4450  006DB2  C096  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  4451  006DB6  C097  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  4452  006DBA  0E00               	movlw	0
  4453  006DBC  6E1E               	movwf	___fldiv@a,c
  4454  006DBE  0E00               	movlw	0
  4455  006DC0  6E1F               	movwf	___fldiv@a+1,c
  4456  006DC2  0E20               	movlw	32
  4457  006DC4  6E20               	movwf	___fldiv@a+2,c
  4458  006DC6  0E41               	movlw	65
  4459  006DC8  6E21               	movwf	___fldiv@a+3,c
  4460  006DCA  EC00  F02F         	call	___fldiv	;wreg free
  4461  006DCE  C01A  F094         	movff	?___fldiv,efgtoa@u
  4462  006DD2  C01B  F095         	movff	?___fldiv+1,efgtoa@u+1
  4463  006DD6  C01C  F096         	movff	?___fldiv+2,efgtoa@u+2
  4464  006DDA  C01D  F097         	movff	?___fldiv+3,efgtoa@u+3
  4465                           
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4467  006DDE  0100               	movlb	0	; () banked
  4468  006DE0  0790               	decf	efgtoa@e& (0+255),f,b
  4469  006DE2  A0D8               	btfss	status,0,c
  4470  006DE4  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4471  006DE6                     l3912:
  4472                           
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4474  006DE6  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4475  006DEA  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4476  006DEE  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4477  006DF2  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4478  006DF6  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4479  006DFA  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4480  006DFE  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4481  006E02  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4482  006E06  EC15  F02A         	call	___flge	;wreg free
  4483  006E0A  A0D8               	btfss	status,0,c
  4484  006E0C  D7CE               	goto	l3908
  4485  006E0E                     u4420:
  4486                           
  4487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4488  006E0E  C04D  F007         	movff	efgtoa@c,tolower@c
  4489  006E12  6A08               	clrf	tolower@c+1,c
  4490  006E14  EC8F  F026         	call	_tolower	;wreg free
  4491  006E18  5007               	movf	?_tolower,w,c
  4492  006E1A  0100               	movlb	0	; () banked
  4493  006E1C  6F81               	movwf	efgtoa@mode& (0+255),b
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4497  006E1E  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4501  006E22  0E67               	movlw	103
  4502  006E24  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4503  006E26  A4D8               	btfss	status,2,c
  4504  006E28  D019               	goto	l3928
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4508  006E2A  51E4               	movf	_prec& (0+255),w,b
  4509  006E2C  11E5               	iorwf	(_prec+1)& (0+255),w,b
  4510  006E2E  A4D8               	btfss	status,2,c
  4511  006E30  D004               	goto	l3924
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4515  006E32  0E00               	movlw	0
  4516  006E34  6FE5               	movwf	(_prec+1)& (0+255),b
  4517  006E36  0E01               	movlw	1
  4518  006E38  6FE4               	movwf	_prec& (0+255),b
  4519  006E3A                     l3924:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4523  006E3A  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  4524  006E3C  D005               	goto	u4450
  4525  006E3E  51E5               	movf	(_prec+1)& (0+255),w,b
  4526  006E40  E108               	bnz	l233
  4527  006E42  05E4               	decf	_prec& (0+255),w,b
  4528  006E44  B0D8               	btfsc	status,0,c
  4529  006E46  D005               	goto	l233
  4530  006E48                     u4450:
  4531                           
  4532                           ; BSR set to: 0
  4533  006E48  0E00               	movlw	0
  4534  006E4A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4535  006E4C  0E06               	movlw	6
  4536  006E4E  6F7C               	movwf	efgtoa@p& (0+255),b
  4537  006E50  D008               	goto	l3934
  4538  006E52                     l233:
  4539                           
  4540                           ; BSR set to: 0
  4541  006E52  C0E4  F07C         	movff	_prec,efgtoa@p
  4542  006E56  C0E5  F07D         	movff	_prec+1,efgtoa@p+1
  4543  006E5A  D003               	goto	l3934
  4544  006E5C                     l3928:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4548  006E5C  AFE5               	btfss	(_prec+1)& (0+255),7,b
  4549  006E5E  D7F9               	goto	l233
  4550  006E60  D7F3               	goto	u4450
  4551  006E62                     l3934:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4555  006E62  0E67               	movlw	103
  4556  006E64  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4557  006E66  A4D8               	btfss	status,2,c
  4558  006E68  D022               	goto	l3944
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4562  006E6A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4563  006E6C  D006               	goto	u4480
  4564  006E6E  0EFC               	movlw	252
  4565  006E70  5D90               	subwf	efgtoa@e& (0+255),w,b
  4566  006E72  0EFF               	movlw	255
  4567  006E74  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4568  006E76  A0D8               	btfss	status,0,c
  4569  006E78  D018               	goto	l3942
  4570  006E7A                     u4480:
  4571                           
  4572                           ; BSR set to: 0
  4573  006E7A  0EFF               	movlw	255
  4574  006E7C  6E4E               	movwf	??_efgtoa& (0+255),c
  4575  006E7E  0EFF               	movlw	255
  4576  006E80  6E4F               	movwf	(??_efgtoa+1)& (0+255),c
  4577  006E82  C07C  F050         	movff	efgtoa@p,??_efgtoa+2
  4578  006E86  C07D  F051         	movff	efgtoa@p+1,??_efgtoa+3
  4579  006E8A  504E               	movf	??_efgtoa,w,c
  4580  006E8C  2650               	addwf	??_efgtoa+2,f,c
  4581  006E8E  504F               	movf	??_efgtoa+1,w,c
  4582  006E90  2251               	addwfc	??_efgtoa+3,f,c
  4583  006E92  5190               	movf	efgtoa@e& (0+255),w,b
  4584  006E94  5C50               	subwf	??_efgtoa+2,w,c
  4585  006E96  5051               	movf	??_efgtoa+3,w,c
  4586  006E98  0A80               	xorlw	128
  4587  006E9A  6E52               	movwf	(??_efgtoa+4)& (0+255),c
  4588  006E9C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4589  006E9E  0A80               	xorlw	128
  4590  006EA0  5852               	subwfb	(??_efgtoa+4)& (0+255),w,c
  4591  006EA2  A0D8               	btfss	status,0,c
  4592  006EA4  D002               	goto	l3942
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4596  006EA6  0E66               	movlw	102
  4597  006EA8  D001               	goto	L3
  4598  006EAA                     l3942:
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4602  006EAA  0E65               	movlw	101
  4603  006EAC                     L3:
  4604  006EAC  6F7E               	movwf	efgtoa@nmode& (0+255),b
  4605  006EAE                     l3944:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4609  006EAE  C07C  F074         	movff	efgtoa@p,efgtoa@m
  4610  006EB2  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4614  006EB6  0E67               	movlw	103
  4615  006EB8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4616  006EBA  A4D8               	btfss	status,2,c
  4617  006EBC  D005               	goto	u4520
  4618                           
  4619                           ; BSR set to: 0
  4620  006EBE  0E66               	movlw	102
  4621  006EC0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4622  006EC2  B4D8               	btfsc	status,2,c
  4623                           
  4624                           ; BSR set to: 0
  4625  006EC4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4626  006EC6  D002               	goto	l3954
  4627  006EC8                     u4520:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4631  006EC8  4B74               	infsnz	efgtoa@m& (0+255),f,b
  4632  006ECA  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  4633  006ECC                     l3954:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4637  006ECC  0E66               	movlw	102
  4638  006ECE  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4639  006ED0  A4D8               	btfss	status,2,c
  4640  006ED2  D016               	goto	l3964
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4644  006ED4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4645  006ED6  D00C               	goto	l3960
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4649  006ED8  0E00               	movlw	0
  4650  006EDA  6F94               	movwf	efgtoa@u& (0+255),b
  4651  006EDC  0E00               	movlw	0
  4652  006EDE  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4653  006EE0  0E80               	movlw	128
  4654  006EE2  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4655  006EE4  0E3F               	movlw	63
  4656  006EE6  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4657                           
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4659  006EE8  0E00               	movlw	0
  4660  006EEA  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4661  006EEC  0E00               	movlw	0
  4662  006EEE  6F90               	movwf	efgtoa@e& (0+255),b
  4663  006EF0                     l3960:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4667  006EF0  0E67               	movlw	103
  4668  006EF2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4669  006EF4  B4D8               	btfsc	status,2,c
  4670  006EF6  D004               	goto	l3964
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4674  006EF8  5190               	movf	efgtoa@e& (0+255),w,b
  4675  006EFA  2774               	addwf	efgtoa@m& (0+255),f,b
  4676  006EFC  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4677  006EFE  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4678  006F00                     l3964:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4682  006F00  0E00               	movlw	0
  4683  006F02  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4684  006F04  0E00               	movlw	0
  4685  006F06  6F8A               	movwf	efgtoa@i& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4689  006F08  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4690  006F0C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4691  006F10  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4692  006F14  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4696  006F18  C094  F060         	movff	efgtoa@u,efgtoa@ou
  4697  006F1C  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  4698  006F20  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  4699  006F24  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  4700                           
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4702  006F28  D07B               	goto	l3978
  4703  006F2A                     l3970:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4707  006F2A  C082  F01A         	movff	efgtoa@h,___fldiv@b
  4708  006F2E  C083  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  4709  006F32  C084  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  4710  006F36  C085  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  4711  006F3A  C094  F01E         	movff	efgtoa@u,___fldiv@a
  4712  006F3E  C095  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  4713  006F42  C096  F020         	movff	efgtoa@u+2,___fldiv@a+2
  4714  006F46  C097  F021         	movff	efgtoa@u+3,___fldiv@a+3
  4715  006F4A  EC00  F02F         	call	___fldiv	;wreg free
  4716  006F4E  C01A  F033         	movff	?___fldiv,floorf@x
  4717  006F52  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  4718  006F56  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  4719  006F5A  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  4720  006F5E  EC25  F02E         	call	_floorf	;wreg free
  4721  006F62  C033  F086         	movff	?_floorf,efgtoa@l
  4722  006F66  C034  F087         	movff	?_floorf+1,efgtoa@l+1
  4723  006F6A  C035  F088         	movff	?_floorf+2,efgtoa@l+2
  4724  006F6E  C036  F089         	movff	?_floorf+3,efgtoa@l+3
  4725                           
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4727  006F72  C086  F001         	movff	efgtoa@l,___fltol@f1
  4728  006F76  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4729  006F7A  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4730  006F7E  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4731  006F82  EC52  F029         	call	___fltol	;wreg free
  4732  006F86  C001  F078         	movff	?___fltol,efgtoa@d
  4733  006F8A  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4734                           
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4736  006F8E  C082  F02A         	movff	efgtoa@h,___flsub@b
  4737  006F92  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4738  006F96  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4739  006F9A  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4740  006F9E  C094  F005         	movff	efgtoa@u,___flmul@a
  4741  006FA2  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4742  006FA6  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4743  006FAA  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4744  006FAE  C086  F001         	movff	efgtoa@l,___flmul@b
  4745  006FB2  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4746  006FB6  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4747  006FBA  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4748  006FBE  ECCA  F031         	call	___flmul	;wreg free
  4749  006FC2  C001  F02E         	movff	?___flmul,___flsub@a
  4750  006FC6  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  4751  006FCA  C003  F030         	movff	?___flmul+2,___flsub@a+2
  4752  006FCE  C004  F031         	movff	?___flmul+3,___flsub@a+3
  4753  006FD2  EC6C  F026         	call	___flsub	;wreg free
  4754  006FD6  C02A  F082         	movff	?___flsub,efgtoa@h
  4755  006FDA  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4756  006FDE  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4757  006FE2  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4758                           
  4759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4760  006FE6  C094  F01A         	movff	efgtoa@u,___fldiv@b
  4761  006FEA  C095  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  4762  006FEE  C096  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  4763  006FF2  C097  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  4764  006FF6  0E00               	movlw	0
  4765  006FF8  6E1E               	movwf	___fldiv@a,c
  4766  006FFA  0E00               	movlw	0
  4767  006FFC  6E1F               	movwf	___fldiv@a+1,c
  4768  006FFE  0E20               	movlw	32
  4769  007000  6E20               	movwf	___fldiv@a+2,c
  4770  007002  0E41               	movlw	65
  4771  007004  6E21               	movwf	___fldiv@a+3,c
  4772  007006  EC00  F02F         	call	___fldiv	;wreg free
  4773  00700A  C01A  F094         	movff	?___fldiv,efgtoa@u
  4774  00700E  C01B  F095         	movff	?___fldiv+1,efgtoa@u+1
  4775  007012  C01C  F096         	movff	?___fldiv+2,efgtoa@u+2
  4776  007016  C01D  F097         	movff	?___fldiv+3,efgtoa@u+3
  4777                           
  4778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4779  00701A  0100               	movlb	0	; () banked
  4780  00701C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4781  00701E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4782  007020                     l3978:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4786  007020  5174               	movf	efgtoa@m& (0+255),w,b
  4787  007022  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4788  007024  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4789  007026  0A80               	xorlw	128
  4790  007028  6E4E               	movwf	??_efgtoa& (0+255),c
  4791  00702A  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4792  00702C  0A80               	xorlw	128
  4793  00702E  584E               	subwfb	??_efgtoa& (0+255),w,c
  4794  007030  A0D8               	btfss	status,0,c
  4795  007032  D77B               	goto	l3970
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4799  007034  C094  F001         	movff	efgtoa@u,___flmul@b
  4800  007038  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4801  00703C  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4802  007040  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4803  007044  0E00               	movlw	0
  4804  007046  6E05               	movwf	___flmul@a,c
  4805  007048  0E00               	movlw	0
  4806  00704A  6E06               	movwf	___flmul@a+1,c
  4807  00704C  0EA0               	movlw	160
  4808  00704E  6E07               	movwf	___flmul@a+2,c
  4809  007050  0E40               	movlw	64
  4810  007052  6E08               	movwf	___flmul@a+3,c
  4811  007054  ECCA  F031         	call	___flmul	;wreg free
  4812  007058  C001  F086         	movff	?___flmul,efgtoa@l
  4813  00705C  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4814  007060  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4815  007064  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4816                           
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4818  007068  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4819  00706C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4820  007070  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4821  007074  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4822  007078  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4823  00707C  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4824  007080  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4825  007084  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4826  007088  EC15  F02A         	call	___flge	;wreg free
  4827  00708C  B0D8               	btfsc	status,0,c
  4828  00708E  D003               	goto	l3986
  4829                           
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4831  007090  0E00               	movlw	0
  4832  007092  0100               	movlb	0	; () banked
  4833  007094  D018               	goto	L4
  4834  007096                     l3986:
  4835                           
  4836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4837  007096  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4838  00709A  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4839  00709E  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4840  0070A2  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4841  0070A6  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4842  0070AA  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4843  0070AE  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4844  0070B2  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4845  0070B6  EC1F  F028         	call	___fleq	;wreg free
  4846  0070BA  A0D8               	btfss	status,0,c
  4847  0070BC  D00B               	goto	l3992
  4848  0070BE  0100               	movlb	0	; () banked
  4849  0070C0  B178               	btfsc	efgtoa@d& (0+255),0,b
  4850  0070C2  D008               	goto	l3992
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4854  0070C4  0E00               	movlw	0
  4855  0070C6                     L4:
  4856  0070C6  6F86               	movwf	efgtoa@l& (0+255),b
  4857  0070C8  0E00               	movlw	0
  4858  0070CA  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4859  0070CC  0E00               	movlw	0
  4860  0070CE  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4861  0070D0  0E00               	movlw	0
  4862  0070D2  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4863  0070D4                     l3992:
  4864                           
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4866  0070D4  C08C  F01A         	movff	efgtoa@g,___fladd@b
  4867  0070D8  C08D  F01B         	movff	efgtoa@g+1,___fladd@b+1
  4868  0070DC  C08E  F01C         	movff	efgtoa@g+2,___fladd@b+2
  4869  0070E0  C08F  F01D         	movff	efgtoa@g+3,___fladd@b+3
  4870  0070E4  C086  F01E         	movff	efgtoa@l,___fladd@a
  4871  0070E8  C087  F01F         	movff	efgtoa@l+1,___fladd@a+1
  4872  0070EC  C088  F020         	movff	efgtoa@l+2,___fladd@a+2
  4873  0070F0  C089  F021         	movff	efgtoa@l+3,___fladd@a+3
  4874  0070F4  EC44  F030         	call	___fladd	;wreg free
  4875  0070F8  C01A  F082         	movff	?___fladd,efgtoa@h
  4876  0070FC  C01B  F083         	movff	?___fladd+1,efgtoa@h+1
  4877  007100  C01C  F084         	movff	?___fladd+2,efgtoa@h+2
  4878  007104  C01D  F085         	movff	?___fladd+3,efgtoa@h+3
  4879                           
  4880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4881  007108  C060  F094         	movff	efgtoa@ou,efgtoa@u
  4882  00710C  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4883  007110  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4884  007114  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4887  007118  0E65               	movlw	101
  4888  00711A  0100               	movlb	0	; () banked
  4889  00711C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4890  00711E  B4D8               	btfsc	status,2,c
  4891  007120  D005               	goto	l4000
  4892                           
  4893                           ; BSR set to: 0
  4894  007122  C090  F076         	movff	efgtoa@e,efgtoa@ne
  4895  007126  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  4896  00712A  D004               	goto	l259
  4897  00712C                     l4000:
  4898                           
  4899                           ; BSR set to: 0
  4900  00712C  0E00               	movlw	0
  4901  00712E  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4902  007130  0E00               	movlw	0
  4903  007132  6F76               	movwf	efgtoa@ne& (0+255),b
  4904  007134                     l259:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4908  007134  0E00               	movlw	0
  4909  007136  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4910  007138  0E00               	movlw	0
  4911  00713A  6F72               	movwf	efgtoa@pp& (0+255),b
  4912                           
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4914  00713C  0E00               	movlw	0
  4915  00713E  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4916  007140  0E00               	movlw	0
  4917  007142  6F70               	movwf	efgtoa@t& (0+255),b
  4918                           
  4919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4920  007144  0E00               	movlw	0
  4921  007146  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4922  007148  0E00               	movlw	0
  4923  00714A  6F8A               	movwf	efgtoa@i& (0+255),b
  4924                           
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4926  00714C  D0C6               	goto	l4050
  4927  00714E                     l4002:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4931  00714E  C082  F01A         	movff	efgtoa@h,___fldiv@b
  4932  007152  C083  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  4933  007156  C084  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  4934  00715A  C085  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  4935  00715E  C094  F01E         	movff	efgtoa@u,___fldiv@a
  4936  007162  C095  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  4937  007166  C096  F020         	movff	efgtoa@u+2,___fldiv@a+2
  4938  00716A  C097  F021         	movff	efgtoa@u+3,___fldiv@a+3
  4939  00716E  EC00  F02F         	call	___fldiv	;wreg free
  4940  007172  C01A  F033         	movff	?___fldiv,floorf@x
  4941  007176  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  4942  00717A  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  4943  00717E  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  4944  007182  EC25  F02E         	call	_floorf	;wreg free
  4945  007186  C033  F086         	movff	?_floorf,efgtoa@l
  4946  00718A  C034  F087         	movff	?_floorf+1,efgtoa@l+1
  4947  00718E  C035  F088         	movff	?_floorf+2,efgtoa@l+2
  4948  007192  C036  F089         	movff	?_floorf+3,efgtoa@l+3
  4949                           
  4950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4951  007196  C086  F001         	movff	efgtoa@l,___fltol@f1
  4952  00719A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4953  00719E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4954  0071A2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4955  0071A6  EC52  F029         	call	___fltol	;wreg free
  4956  0071AA  C001  F078         	movff	?___fltol,efgtoa@d
  4957  0071AE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4958                           
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4960  0071B2  0100               	movlb	0	; () banked
  4961  0071B4  B9E6               	btfsc	_flags& (0+255),4,b
  4962  0071B6  D00C               	goto	l4014
  4963                           
  4964                           ; BSR set to: 0
  4965  0071B8  5178               	movf	efgtoa@d& (0+255),w,b
  4966  0071BA  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4967  0071BC  A4D8               	btfss	status,2,c
  4968  0071BE  D008               	goto	l4014
  4969                           
  4970                           ; BSR set to: 0
  4971  0071C0  0E67               	movlw	103
  4972  0071C2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4973  0071C4  B4D8               	btfsc	status,2,c
  4974                           
  4975                           ; BSR set to: 0
  4976  0071C6  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4977  0071C8  D003               	goto	l4014
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4981  0071CA  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4982  0071CC  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4983                           
  4984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4985  0071CE  D039               	goto	l4042
  4986  0071D0                     l4014:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4990  0071D0  5172               	movf	efgtoa@pp& (0+255),w,b
  4991  0071D2  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4992  0071D4  B4D8               	btfsc	status,2,c
  4993                           
  4994                           ; BSR set to: 0
  4995  0071D6  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4996  0071D8  D022               	goto	l4034
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5000  0071DA  0E11               	movlw	low _dbuf
  5001  0071DC  2592               	addwf	efgtoa@n& (0+255),w,b
  5002  0071DE  6ED9               	movwf	fsr2l,c
  5003  0071E0  0E01               	movlw	high _dbuf
  5004  0071E2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5005  0071E4  6EDA               	movwf	fsr2h,c
  5006  0071E6  0E2E               	movlw	46
  5007  0071E8  6EDF               	movwf	indf2,c
  5008                           
  5009                           ; BSR set to: 0
  5010  0071EA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5011  0071EC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5015  0071EE  077F               	decf	efgtoa@w& (0+255),f,b
  5016  0071F0  A0D8               	btfss	status,0,c
  5017  0071F2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5021  0071F4  0E00               	movlw	0
  5022  0071F6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5023  0071F8  0E01               	movlw	1
  5024  0071FA  6F72               	movwf	efgtoa@pp& (0+255),b
  5025  0071FC  D010               	goto	l4034
  5026  0071FE                     l4026:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5030  0071FE  0E11               	movlw	low _dbuf
  5031  007200  2592               	addwf	efgtoa@n& (0+255),w,b
  5032  007202  6ED9               	movwf	fsr2l,c
  5033  007204  0E01               	movlw	high _dbuf
  5034  007206  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5035  007208  6EDA               	movwf	fsr2h,c
  5036  00720A  0E30               	movlw	48
  5037  00720C  6EDF               	movwf	indf2,c
  5038                           
  5039                           ; BSR set to: 0
  5040  00720E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5041  007210  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5045  007212  077F               	decf	efgtoa@w& (0+255),f,b
  5046  007214  A0D8               	btfss	status,0,c
  5047  007216  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5051  007218  0770               	decf	efgtoa@t& (0+255),f,b
  5052  00721A  A0D8               	btfss	status,0,c
  5053  00721C  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  5054  00721E                     l4034:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5058  00721E  5170               	movf	efgtoa@t& (0+255),w,b
  5059  007220  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5060  007222  A4D8               	btfss	status,2,c
  5061  007224  D7EC               	goto	l4026
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5065  007226  0E11               	movlw	low _dbuf
  5066  007228  2592               	addwf	efgtoa@n& (0+255),w,b
  5067  00722A  6ED9               	movwf	fsr2l,c
  5068  00722C  0E01               	movlw	high _dbuf
  5069  00722E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5070  007230  6EDA               	movwf	fsr2h,c
  5071  007232  5178               	movf	efgtoa@d& (0+255),w,b
  5072  007234  0F30               	addlw	48
  5073  007236  6EDF               	movwf	indf2,c
  5074                           
  5075                           ; BSR set to: 0
  5076  007238  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5077  00723A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5081  00723C  077F               	decf	efgtoa@w& (0+255),f,b
  5082  00723E  A0D8               	btfss	status,0,c
  5083  007240  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5084  007242                     l4042:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5088  007242  C082  F02A         	movff	efgtoa@h,___flsub@b
  5089  007246  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5090  00724A  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5091  00724E  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5092  007252  C094  F005         	movff	efgtoa@u,___flmul@a
  5093  007256  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5094  00725A  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5095  00725E  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5096  007262  C086  F001         	movff	efgtoa@l,___flmul@b
  5097  007266  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5098  00726A  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5099  00726E  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5100  007272  ECCA  F031         	call	___flmul	;wreg free
  5101  007276  C001  F02E         	movff	?___flmul,___flsub@a
  5102  00727A  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  5103  00727E  C003  F030         	movff	?___flmul+2,___flsub@a+2
  5104  007282  C004  F031         	movff	?___flmul+3,___flsub@a+3
  5105  007286  EC6C  F026         	call	___flsub	;wreg free
  5106  00728A  C02A  F082         	movff	?___flsub,efgtoa@h
  5107  00728E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  5108  007292  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  5109  007296  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  5110                           
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5112  00729A  C094  F01A         	movff	efgtoa@u,___fldiv@b
  5113  00729E  C095  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  5114  0072A2  C096  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  5115  0072A6  C097  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  5116  0072AA  0E00               	movlw	0
  5117  0072AC  6E1E               	movwf	___fldiv@a,c
  5118  0072AE  0E00               	movlw	0
  5119  0072B0  6E1F               	movwf	___fldiv@a+1,c
  5120  0072B2  0E20               	movlw	32
  5121  0072B4  6E20               	movwf	___fldiv@a+2,c
  5122  0072B6  0E41               	movlw	65
  5123  0072B8  6E21               	movwf	___fldiv@a+3,c
  5124  0072BA  EC00  F02F         	call	___fldiv	;wreg free
  5125  0072BE  C01A  F094         	movff	?___fldiv,efgtoa@u
  5126  0072C2  C01B  F095         	movff	?___fldiv+1,efgtoa@u+1
  5127  0072C6  C01C  F096         	movff	?___fldiv+2,efgtoa@u+2
  5128  0072CA  C01D  F097         	movff	?___fldiv+3,efgtoa@u+3
  5129                           
  5130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5131  0072CE  0100               	movlb	0	; () banked
  5132  0072D0  0776               	decf	efgtoa@ne& (0+255),f,b
  5133  0072D2  A0D8               	btfss	status,0,c
  5134  0072D4  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5138  0072D6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5139  0072D8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5140  0072DA                     l4050:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5144  0072DA  5174               	movf	efgtoa@m& (0+255),w,b
  5145  0072DC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5146  0072DE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5147  0072E0  0A80               	xorlw	128
  5148  0072E2  6E4E               	movwf	??_efgtoa& (0+255),c
  5149  0072E4  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5150  0072E6  0A80               	xorlw	128
  5151  0072E8  584E               	subwfb	??_efgtoa& (0+255),w,c
  5152  0072EA  B0D8               	btfsc	status,0,c
  5153  0072EC  D008               	goto	u4690
  5154                           
  5155                           ; BSR set to: 0
  5156  0072EE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5157  0072F0  D72E               	goto	l4002
  5158  0072F2  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5159  0072F4  E104               	bnz	u4690
  5160  0072F6  0E4B               	movlw	75
  5161  0072F8  5D92               	subwf	efgtoa@n& (0+255),w,b
  5162  0072FA  A0D8               	btfss	status,0,c
  5163  0072FC  D728               	goto	l4002
  5164  0072FE                     u4690:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5168  0072FE  5172               	movf	efgtoa@pp& (0+255),w,b
  5169  007300  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5170  007302  B4D8               	btfsc	status,2,c
  5171                           
  5172                           ; BSR set to: 0
  5173  007304  A9E6               	btfss	_flags& (0+255),4,b
  5174  007306  D00A               	goto	l4062
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5178  007308  0E11               	movlw	low _dbuf
  5179  00730A  2592               	addwf	efgtoa@n& (0+255),w,b
  5180  00730C  6ED9               	movwf	fsr2l,c
  5181  00730E  0E01               	movlw	high _dbuf
  5182  007310  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5183  007312  6EDA               	movwf	fsr2h,c
  5184  007314  0E2E               	movlw	46
  5185  007316  6EDF               	movwf	indf2,c
  5186                           
  5187                           ; BSR set to: 0
  5188  007318  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5189  00731A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5190  00731C                     l4062:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5194  00731C  0E11               	movlw	low _dbuf
  5195  00731E  2592               	addwf	efgtoa@n& (0+255),w,b
  5196  007320  6ED9               	movwf	fsr2l,c
  5197  007322  0E01               	movlw	high _dbuf
  5198  007324  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5199  007326  6EDA               	movwf	fsr2h,c
  5200  007328  0E00               	movlw	0
  5201  00732A  6EDF               	movwf	indf2,c
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5205  00732C  0E65               	movlw	101
  5206  00732E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5207  007330  A4D8               	btfss	status,2,c
  5208  007332  D47F               	goto	l3874
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5212  007334  0E00               	movlw	0
  5213  007336  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5214  007338  0E4F               	movlw	79
  5215  00733A  6F8A               	movwf	efgtoa@i& (0+255),b
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5219  00733C  0E11               	movlw	low _dbuf
  5220  00733E  258A               	addwf	efgtoa@i& (0+255),w,b
  5221  007340  6ED9               	movwf	fsr2l,c
  5222  007342  0E01               	movlw	high _dbuf
  5223  007344  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5224  007346  6EDA               	movwf	fsr2h,c
  5225  007348  0E00               	movlw	0
  5226  00734A  6EDF               	movwf	indf2,c
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5230  00734C  0E00               	movlw	0
  5231  00734E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5232  007350  0E00               	movlw	0
  5233  007352  6F7A               	movwf	efgtoa@sign& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5237  007354  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5238  007356  D008               	goto	l4078
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5242  007358  0E00               	movlw	0
  5243  00735A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5244  00735C  0E01               	movlw	1
  5245  00735E  6F7A               	movwf	efgtoa@sign& (0+255),b
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5249  007360  6D90               	negf	efgtoa@e& (0+255),b
  5250  007362  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5251  007364  B0D8               	btfsc	status,0,c
  5252  007366  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5253  007368                     l4078:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5257  007368  0E00               	movlw	0
  5258  00736A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5259  00736C  0E02               	movlw	2
  5260  00736E  6F7C               	movwf	efgtoa@p& (0+255),b
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5263  007370  D02B               	goto	l4090
  5264  007372                     l4080:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5268  007372  078A               	decf	efgtoa@i& (0+255),f,b
  5269  007374  A0D8               	btfss	status,0,c
  5270  007376  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5274  007378  0E11               	movlw	low _dbuf
  5275  00737A  258A               	addwf	efgtoa@i& (0+255),w,b
  5276  00737C  6ED9               	movwf	fsr2l,c
  5277  00737E  0E01               	movlw	high _dbuf
  5278  007380  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5279  007382  6EDA               	movwf	fsr2h,c
  5280  007384  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5281  007388  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5282  00738C  0E00               	movlw	0
  5283  00738E  6E04               	movwf	___awmod@divisor+1,c
  5284  007390  0E0A               	movlw	10
  5285  007392  6E03               	movwf	___awmod@divisor,c
  5286  007394  EC6A  F027         	call	___awmod	;wreg free
  5287  007398  5001               	movf	?___awmod,w,c
  5288  00739A  0F30               	addlw	48
  5289  00739C  6EDF               	movwf	indf2,c
  5290                           
  5291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5292  00739E  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  5293  0073A2  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5294  0073A6  0E00               	movlw	0
  5295  0073A8  6E04               	movwf	___awdiv@divisor+1,c
  5296  0073AA  0E0A               	movlw	10
  5297  0073AC  6E03               	movwf	___awdiv@divisor,c
  5298  0073AE  ECDD  F027         	call	___awdiv	;wreg free
  5299  0073B2  C001  F090         	movff	?___awdiv,efgtoa@e
  5300  0073B6  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  5301                           
  5302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5303  0073BA  0100               	movlb	0	; () banked
  5304  0073BC  077C               	decf	efgtoa@p& (0+255),f,b
  5305  0073BE  A0D8               	btfss	status,0,c
  5306  0073C0  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5310  0073C2  077F               	decf	efgtoa@w& (0+255),f,b
  5311  0073C4  A0D8               	btfss	status,0,c
  5312  0073C6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5313  0073C8                     l4090:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5317  0073C8  5190               	movf	efgtoa@e& (0+255),w,b
  5318  0073CA  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5319  0073CC  A4D8               	btfss	status,2,c
  5320  0073CE  D7D1               	goto	l4080
  5321                           
  5322                           ; BSR set to: 0
  5323  0073D0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5324  0073D2  D005               	goto	u4750
  5325  0073D4  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5326  0073D6  E1CD               	bnz	l4080
  5327  0073D8  057C               	decf	efgtoa@p& (0+255),w,b
  5328  0073DA  B0D8               	btfsc	status,0,c
  5329  0073DC  D7CA               	goto	l4080
  5330  0073DE                     u4750:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5334  0073DE  078A               	decf	efgtoa@i& (0+255),f,b
  5335  0073E0  A0D8               	btfss	status,0,c
  5336  0073E2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5340  0073E4  517A               	movf	efgtoa@sign& (0+255),w,b
  5341  0073E6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5342  0073E8  A4D8               	btfss	status,2,c
  5343  0073EA  D004               	goto	l4100
  5344                           
  5345                           ; BSR set to: 0
  5346  0073EC  0E00               	movlw	0
  5347  0073EE  6F6B               	movwf	(_efgtoa$708+1)& (0+255),b
  5348  0073F0  0E2B               	movlw	43
  5349  0073F2  D003               	goto	L5
  5350  0073F4                     l4100:
  5351                           
  5352                           ; BSR set to: 0
  5353  0073F4  0E00               	movlw	0
  5354  0073F6  6F6B               	movwf	(_efgtoa$708+1)& (0+255),b
  5355  0073F8  0E2D               	movlw	45
  5356  0073FA                     L5:
  5357  0073FA  6F6A               	movwf	_efgtoa$708& (0+255),b
  5358                           
  5359                           ; BSR set to: 0
  5360  0073FC  0E11               	movlw	low _dbuf
  5361  0073FE  258A               	addwf	efgtoa@i& (0+255),w,b
  5362  007400  6ED9               	movwf	fsr2l,c
  5363  007402  0E01               	movlw	high _dbuf
  5364  007404  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5365  007406  6EDA               	movwf	fsr2h,c
  5366  007408  C06A  FFDF         	movff	_efgtoa$708,indf2
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5370  00740C  077F               	decf	efgtoa@w& (0+255),f,b
  5371  00740E  A0D8               	btfss	status,0,c
  5372  007410  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5376  007412  078A               	decf	efgtoa@i& (0+255),f,b
  5377  007414  A0D8               	btfss	status,0,c
  5378  007416  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5379                           
  5380                           ; BSR set to: 0
  5381  007418  0EBF               	movlw	191
  5382  00741A  6E4E               	movwf	??_efgtoa& (0+255),c
  5383  00741C  0EFF               	movlw	255
  5384  00741E  6E4F               	movwf	(??_efgtoa+1)& (0+255),c
  5385  007420  504D               	movf	efgtoa@c,w,c
  5386  007422  6E50               	movwf	(??_efgtoa+2)& (0+255),c
  5387  007424  6A51               	clrf	(??_efgtoa+3)& (0+255),c
  5388  007426  504E               	movf	??_efgtoa,w,c
  5389  007428  2650               	addwf	??_efgtoa+2,f,c
  5390  00742A  504F               	movf	??_efgtoa+1,w,c
  5391  00742C  2251               	addwfc	??_efgtoa+3,f,c
  5392  00742E  5051               	movf	??_efgtoa+3,w,c
  5393  007430  E106               	bnz	u4770
  5394  007432  0E1A               	movlw	26
  5395  007434  5C50               	subwf	??_efgtoa+2,w,c
  5396  007436  B0D8               	btfsc	status,0,c
  5397  007438  D002               	goto	u4770
  5398  00743A  0E01               	movlw	1
  5399  00743C  D001               	goto	u4780
  5400  00743E                     u4770:
  5401  00743E  0E00               	movlw	0
  5402  007440                     u4780:
  5403  007440  6F6E               	movwf	_efgtoa$710& (0+255),b
  5404  007442  6B6F               	clrf	(_efgtoa$710+1)& (0+255),b
  5405                           
  5406                           ; BSR set to: 0
  5407  007444  516E               	movf	_efgtoa$710& (0+255),w,b
  5408  007446  116F               	iorwf	(_efgtoa$710+1)& (0+255),w,b
  5409  007448  A4D8               	btfss	status,2,c
  5410  00744A  D004               	goto	l4116
  5411                           
  5412                           ; BSR set to: 0
  5413  00744C  0E00               	movlw	0
  5414  00744E  6F6D               	movwf	(_efgtoa$709+1)& (0+255),b
  5415  007450  0E65               	movlw	101
  5416  007452  D003               	goto	L6
  5417  007454                     l4116:
  5418                           
  5419                           ; BSR set to: 0
  5420  007454  0E00               	movlw	0
  5421  007456  6F6D               	movwf	(_efgtoa$709+1)& (0+255),b
  5422  007458  0E45               	movlw	69
  5423  00745A                     L6:
  5424  00745A  6F6C               	movwf	_efgtoa$709& (0+255),b
  5425                           
  5426                           ; BSR set to: 0
  5427  00745C  0E11               	movlw	low _dbuf
  5428  00745E  258A               	addwf	efgtoa@i& (0+255),w,b
  5429  007460  6ED9               	movwf	fsr2l,c
  5430  007462  0E01               	movlw	high _dbuf
  5431  007464  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5432  007466  6EDA               	movwf	fsr2h,c
  5433  007468  C06C  FFDF         	movff	_efgtoa$709,indf2
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5437  00746C  077F               	decf	efgtoa@w& (0+255),f,b
  5438  00746E  A0D8               	btfss	status,0,c
  5439  007470  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5443  007472  0E11               	movlw	low _dbuf
  5444  007474  2592               	addwf	efgtoa@n& (0+255),w,b
  5445  007476  6E01               	movwf	strcpy@dest,c
  5446  007478  0E01               	movlw	high _dbuf
  5447  00747A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5448  00747C  6E02               	movwf	strcpy@dest+1,c
  5449  00747E  0E11               	movlw	low _dbuf
  5450  007480  258A               	addwf	efgtoa@i& (0+255),w,b
  5451  007482  6E03               	movwf	strcpy@src,c
  5452  007484  0E01               	movlw	high _dbuf
  5453  007486  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5454  007488  6E04               	movwf	strcpy@src+1,c
  5455  00748A  ECB5  F026         	call	_strcpy	;wreg free
  5456  00748E  EF19  F036         	goto	l3874
  5457  007492                     __end_of_efgtoa:
  5458                           	opt callstack 0
  5459                           
  5460 ;; *************** function _tolower *****************
  5461 ;; Defined at:
  5462 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  c               2    6[COMRAM] int 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  2    6[COMRAM] int 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5476 ;;      Params:         2       0       0       0       0       0       0       0       0
  5477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5478 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5479 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5480 ;;Total ram usage:        8 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    1
  5483 ;; This function calls:
  5484 ;;		_isupper
  5485 ;; This function is called by:
  5486 ;;		_efgtoa
  5487 ;;		_vfpfcnvrt
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text7
  5492  004D1E                     __ptext7:
  5493                           	opt callstack 0
  5494  004D1E                     _tolower:
  5495                           	opt callstack 26
  5496                           
  5497                           ;incstack = 0
  5498  004D1E  0EBF               	movlw	191
  5499  004D20  6E09               	movwf	??_tolower& (0+255),c
  5500  004D22  0EFF               	movlw	255
  5501  004D24  6E0A               	movwf	(??_tolower+1)& (0+255),c
  5502  004D26  C007  F00B         	movff	tolower@c,??_tolower+2
  5503  004D2A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5504  004D2E  5009               	movf	??_tolower,w,c
  5505  004D30  260B               	addwf	??_tolower+2,f,c
  5506  004D32  500A               	movf	??_tolower+1,w,c
  5507  004D34  220C               	addwfc	??_tolower+3,f,c
  5508  004D36  500C               	movf	??_tolower+3,w,c
  5509  004D38  E106               	bnz	u3410
  5510  004D3A  0E1A               	movlw	26
  5511  004D3C  5C0B               	subwf	??_tolower+2,w,c
  5512  004D3E  B0D8               	btfsc	status,0,c
  5513  004D40  D002               	goto	u3410
  5514  004D42  0E01               	movlw	1
  5515  004D44  D001               	goto	u3420
  5516  004D46                     u3410:
  5517  004D46  0E00               	movlw	0
  5518  004D48                     u3420:
  5519  004D48  6E0D               	movwf	_tolower$1315,c
  5520  004D4A  6A0E               	clrf	_tolower$1315+1,c
  5521  004D4C  500D               	movf	_tolower$1315,w,c
  5522  004D4E  100E               	iorwf	_tolower$1315+1,w,c
  5523  004D50  B4D8               	btfsc	status,2,c
  5524  004D52  D006               	goto	l1136
  5525  004D54  0E20               	movlw	32
  5526  004D56  1007               	iorwf	tolower@c,w,c
  5527  004D58  6E07               	movwf	?_tolower,c
  5528  004D5A  5008               	movf	tolower@c+1,w,c
  5529  004D5C  6E08               	movwf	?_tolower+1,c
  5530  004D5E  0012               	return	
  5531  004D60                     l1136:
  5532  004D60  C007  F007         	movff	tolower@c,?_tolower
  5533  004D64  C008  F008         	movff	tolower@c+1,?_tolower+1
  5534  004D68  0012               	return		;funcret
  5535  004D6A                     __end_of_tolower:
  5536                           	opt callstack 0
  5537                           
  5538 ;; *************** function _isupper *****************
  5539 ;; Defined at:
  5540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  c               2    0[COMRAM] int 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  2    0[COMRAM] int 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5554 ;;      Params:         2       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5557 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:        6 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_efgtoa
  5564 ;;		_vfpfcnvrt
  5565 ;;		_tolower
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text8
  5570  004C32                     __ptext8:
  5571                           	opt callstack 0
  5572  004C32                     _isupper:
  5573                           	opt callstack 26
  5574                           
  5575                           ;incstack = 0
  5576  004C32  0EBF               	movlw	191
  5577  004C34  6E03               	movwf	??_isupper& (0+255),c
  5578  004C36  0EFF               	movlw	255
  5579  004C38  6E04               	movwf	(??_isupper+1)& (0+255),c
  5580  004C3A  C001  F005         	movff	isupper@c,??_isupper+2
  5581  004C3E  C002  F006         	movff	isupper@c+1,??_isupper+3
  5582  004C42  5003               	movf	??_isupper,w,c
  5583  004C44  2605               	addwf	??_isupper+2,f,c
  5584  004C46  5004               	movf	??_isupper+1,w,c
  5585  004C48  2206               	addwfc	??_isupper+3,f,c
  5586  004C4A  5006               	movf	??_isupper+3,w,c
  5587  004C4C  E106               	bnz	u2870
  5588  004C4E  0E1A               	movlw	26
  5589  004C50  5C05               	subwf	??_isupper+2,w,c
  5590  004C52  B0D8               	btfsc	status,0,c
  5591  004C54  D002               	goto	u2870
  5592  004C56  0E01               	movlw	1
  5593  004C58  D001               	goto	u2880
  5594  004C5A                     u2870:
  5595  004C5A  0E00               	movlw	0
  5596  004C5C                     u2880:
  5597  004C5C  6E01               	movwf	?_isupper,c
  5598  004C5E  6A02               	clrf	?_isupper+1,c
  5599  004C60  0012               	return		;funcret
  5600  004C62                     __end_of_isupper:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _strcpy *****************
  5604 ;; Defined at:
  5605 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5608 ;;		 -> dbuf(80), 
  5609 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5610 ;;		 -> STR_34(4), STR_33(4), STR_30(4), STR_29(4), 
  5611 ;;		 -> dbuf(80), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  d               2    8[COMRAM] PTR unsigned char 
  5614 ;;		 -> dbuf(80), 
  5615 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5616 ;;		 -> STR_34(4), STR_33(4), STR_30(4), STR_29(4), 
  5617 ;;		 -> dbuf(80), 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  2    0[COMRAM] PTR unsigned char 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         4       0       0       0       0       0       0       0       0
  5628 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5630 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5631 ;;Total ram usage:       10 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_efgtoa
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text9
  5641  004D6A                     __ptext9:
  5642                           	opt callstack 0
  5643  004D6A                     _strcpy:
  5644                           	opt callstack 26
  5645                           
  5646                           ;incstack = 0
  5647  004D6A  C003  F007         	movff	strcpy@src,strcpy@s
  5648  004D6E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5649  004D72  C001  F009         	movff	strcpy@dest,strcpy@d
  5650  004D76  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5651  004D7A                     l3324:
  5652  004D7A  5007               	movf	strcpy@s,w,c
  5653  004D7C  6E05               	movwf	??_strcpy& (0+255),c
  5654  004D7E  5008               	movf	strcpy@s+1,w,c
  5655  004D80  6E06               	movwf	(??_strcpy+1)& (0+255),c
  5656  004D82  4A07               	infsnz	strcpy@s,f,c
  5657  004D84  2A08               	incf	strcpy@s+1,f,c
  5658  004D86  C005  FFF6         	movff	??_strcpy,tblptrl
  5659  004D8A  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5660  004D8E  6AF8               	clrf	tblptru,c
  5661  004D90  C009  FFD9         	movff	strcpy@d,fsr2l
  5662  004D94  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5663  004D98  4A09               	infsnz	strcpy@d,f,c
  5664  004D9A  2A0A               	incf	strcpy@d+1,f,c
  5665  004D9C  0E07               	movlw	(high __ramtop+-1)
  5666  004D9E  64F7               	cpfsgt	tblptrh,c
  5667  004DA0  D003               	bra	u3397
  5668  004DA2  0008               	tblrd		*
  5669  004DA4  50F5               	movf	tablat,w,c
  5670  004DA6  D005               	bra	u3390
  5671  004DA8                     u3397:
  5672  004DA8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5673  004DAC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5674  004DB0  50E7               	movf	indf1,w,c
  5675  004DB2                     u3390:
  5676  004DB2  6EDF               	movwf	indf2,c
  5677  004DB4  50DF               	movf	indf2,w,c
  5678  004DB6  B4D8               	btfsc	status,2,c
  5679  004DB8  0012               	return	
  5680  004DBA  D7DF               	goto	l3324
  5681  004DBC                     __end_of_strcpy:
  5682                           	opt callstack 0
  5683                           
  5684 ;; *************** function _pad *****************
  5685 ;; Defined at:
  5686 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5689 ;;		 -> sprintf@f(6), 
  5690 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5691 ;;		 -> dbuf(80), 
  5692 ;;  p               2   20[COMRAM] int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  w               2   25[COMRAM] int 
  5695 ;;  i               2   23[COMRAM] int 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  2   16[COMRAM] int 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5705 ;;      Params:         6       0       0       0       0       0       0       0       0
  5706 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5707 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5708 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5709 ;;Total ram usage:       11 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    3
  5712 ;; This function calls:
  5713 ;;		_fputc
  5714 ;;		_fputs
  5715 ;;		_strlen
  5716 ;; This function is called by:
  5717 ;;		_efgtoa
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text10
  5722  0050C8                     __ptext10:
  5723                           	opt callstack 0
  5724  0050C8                     _pad:
  5725                           	opt callstack 23
  5726                           
  5727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5728                           
  5729                           ;incstack = 0
  5730  0050C8  0100               	movlb	0	; () banked
  5731  0050CA  A1E6               	btfss	_flags& (0+255),0,b
  5732  0050CC  D00A               	goto	l3282
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5736  0050CE  C013  F00A         	movff	pad@buf,fputs@s
  5737  0050D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5738  0050D6  C011  F00C         	movff	pad@fp,fputs@fp
  5739  0050DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5740  0050DE  EC31  F026         	call	_fputs	;wreg free
  5741  0050E2                     l3282:
  5742                           
  5743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5744  0050E2  BE16               	btfsc	pad@p+1,7,c
  5745  0050E4  D005               	goto	l3286
  5746  0050E6  C015  F01A         	movff	pad@p,pad@w
  5747  0050EA  C016  F01B         	movff	pad@p+1,pad@w+1
  5748  0050EE  D004               	goto	l192
  5749  0050F0                     l3286:
  5750  0050F0  0E00               	movlw	0
  5751  0050F2  6E1B               	movwf	pad@w+1,c
  5752  0050F4  0E00               	movlw	0
  5753  0050F6  6E1A               	movwf	pad@w,c
  5754  0050F8                     l192:
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5757  0050F8  0E00               	movlw	0
  5758  0050FA  6E19               	movwf	pad@i+1,c
  5759  0050FC  0E00               	movlw	0
  5760  0050FE  6E18               	movwf	pad@i,c
  5761                           
  5762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5763  005100  D00C               	goto	l3292
  5764  005102                     l3288:
  5765                           
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5767  005102  0E00               	movlw	0
  5768  005104  6E02               	movwf	fputc@c+1,c
  5769  005106  0E20               	movlw	32
  5770  005108  6E01               	movwf	fputc@c,c
  5771  00510A  C011  F003         	movff	pad@fp,fputc@fp
  5772  00510E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5773  005112  ECB1  F028         	call	_fputc	;wreg free
  5774                           
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5776  005116  4A18               	infsnz	pad@i,f,c
  5777  005118  2A19               	incf	pad@i+1,f,c
  5778  00511A                     l3292:
  5779                           
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5781  00511A  501A               	movf	pad@w,w,c
  5782  00511C  5C18               	subwf	pad@i,w,c
  5783  00511E  5019               	movf	pad@i+1,w,c
  5784  005120  0A80               	xorlw	128
  5785  005122  6E17               	movwf	??_pad& (0+255),c
  5786  005124  501B               	movf	pad@w+1,w,c
  5787  005126  0A80               	xorlw	128
  5788  005128  5817               	subwfb	??_pad& (0+255),w,c
  5789  00512A  A0D8               	btfss	status,0,c
  5790  00512C  D7EA               	goto	l3288
  5791                           
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5793  00512E  0100               	movlb	0	; () banked
  5794  005130  B1E6               	btfsc	_flags& (0+255),0,b
  5795  005132  D00A               	goto	l3296
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5799  005134  C013  F00A         	movff	pad@buf,fputs@s
  5800  005138  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5801  00513C  C011  F00C         	movff	pad@fp,fputs@fp
  5802  005140  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5803  005144  EC31  F026         	call	_fputs	;wreg free
  5804  005148                     l3296:
  5805                           
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5807  005148  C013  F001         	movff	pad@buf,strlen@s
  5808  00514C  C014  F002         	movff	pad@buf+1,strlen@s+1
  5809  005150  ECD5  F025         	call	_strlen	;wreg free
  5810  005154  501A               	movf	pad@w,w,c
  5811  005156  2401               	addwf	?_strlen,w,c
  5812  005158  6E11               	movwf	?_pad,c
  5813  00515A  501B               	movf	pad@w+1,w,c
  5814  00515C  2002               	addwfc	?_strlen+1,w,c
  5815  00515E  6E12               	movwf	?_pad+1,c
  5816  005160  0012               	return		;funcret
  5817  005162                     __end_of_pad:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _strlen *****************
  5821 ;; Defined at:
  5822 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5825 ;;		 -> dbuf(80), 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5828 ;;		 -> dbuf(80), 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2    0[COMRAM] unsigned int 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5838 ;;      Params:         2       0       0       0       0       0       0       0       0
  5839 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5841 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        4 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_pad
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text11
  5852  004BAA                     __ptext11:
  5853                           	opt callstack 0
  5854  004BAA                     _strlen:
  5855                           	opt callstack 25
  5856                           
  5857                           ;incstack = 0
  5858  004BAA  C001  F003         	movff	strlen@s,strlen@a
  5859  004BAE  C002  F004         	movff	strlen@s+1,strlen@a+1
  5860  004BB2  D002               	goto	l3066
  5861  004BB4                     l3064:
  5862  004BB4  4A01               	infsnz	strlen@s,f,c
  5863  004BB6  2A02               	incf	strlen@s+1,f,c
  5864  004BB8                     l3066:
  5865  004BB8  C001  FFD9         	movff	strlen@s,fsr2l
  5866  004BBC  C002  FFDA         	movff	strlen@s+1,fsr2h
  5867  004BC0  50DF               	movf	indf2,w,c
  5868  004BC2  A4D8               	btfss	status,2,c
  5869  004BC4  D7F7               	goto	l3064
  5870  004BC6  5003               	movf	strlen@a,w,c
  5871  004BC8  5C01               	subwf	strlen@s,w,c
  5872  004BCA  6E01               	movwf	?_strlen,c
  5873  004BCC  5004               	movf	strlen@a+1,w,c
  5874  004BCE  5802               	subwfb	strlen@s+1,w,c
  5875  004BD0  6E02               	movwf	?_strlen+1,c
  5876  004BD2  0012               	return		;funcret
  5877  004BD4                     __end_of_strlen:
  5878                           	opt callstack 0
  5879                           
  5880 ;; *************** function _fputs *****************
  5881 ;; Defined at:
  5882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5885 ;;		 -> dbuf(80), 
  5886 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5887 ;;		 -> sprintf@f(6), 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  i               2   14[COMRAM] int 
  5890 ;;  c               1   13[COMRAM] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2    9[COMRAM] int 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:         4       0       0       0       0       0       0       0       0
  5901 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5903 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:        7 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    2
  5907 ;; This function calls:
  5908 ;;		_fputc
  5909 ;; This function is called by:
  5910 ;;		_pad
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text12
  5915  004C62                     __ptext12:
  5916                           	opt callstack 0
  5917  004C62                     _fputs:
  5918                           	opt callstack 23
  5919                           
  5920                           ;incstack = 0
  5921  004C62  0E00               	movlw	0
  5922  004C64  6E10               	movwf	fputs@i+1,c
  5923  004C66  0E00               	movlw	0
  5924  004C68  6E0F               	movwf	fputs@i,c
  5925  004C6A  D00B               	goto	l3060
  5926  004C6C                     l3056:
  5927  004C6C  C00E  F001         	movff	fputs@c,fputc@c
  5928  004C70  6A02               	clrf	fputc@c+1,c
  5929  004C72  C00C  F003         	movff	fputs@fp,fputc@fp
  5930  004C76  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5931  004C7A  ECB1  F028         	call	_fputc	;wreg free
  5932  004C7E  4A0F               	infsnz	fputs@i,f,c
  5933  004C80  2A10               	incf	fputs@i+1,f,c
  5934  004C82                     l3060:
  5935  004C82  500F               	movf	fputs@i,w,c
  5936  004C84  240A               	addwf	fputs@s,w,c
  5937  004C86  6ED9               	movwf	fsr2l,c
  5938  004C88  5010               	movf	fputs@i+1,w,c
  5939  004C8A  200B               	addwfc	fputs@s+1,w,c
  5940  004C8C  6EDA               	movwf	fsr2h,c
  5941  004C8E  50DF               	movf	indf2,w,c
  5942  004C90  6E0E               	movwf	fputs@c,c
  5943  004C92  500E               	movf	fputs@c,w,c
  5944  004C94  B4D8               	btfsc	status,2,c
  5945  004C96  0012               	return	
  5946  004C98  D7E9               	goto	l3056
  5947  004C9A                     __end_of_fputs:
  5948                           	opt callstack 0
  5949                           
  5950 ;; *************** function _fputc *****************
  5951 ;; Defined at:
  5952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  c               2    0[COMRAM] int 
  5955 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5956 ;;		 -> sprintf@f(6), 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  2    0[COMRAM] int 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5968 ;;      Params:         4       0       0       0       0       0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5970 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5971 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5972 ;;Total ram usage:        9 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    1
  5975 ;; This function calls:
  5976 ;;		_putch
  5977 ;; This function is called by:
  5978 ;;		_pad
  5979 ;;		_vfpfcnvrt
  5980 ;;		_fputs
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text13
  5985  005162                     __ptext13:
  5986                           	opt callstack 0
  5987  005162                     _fputc:
  5988                           	opt callstack 26
  5989                           
  5990                           ;incstack = 0
  5991  005162  5003               	movf	fputc@fp,w,c
  5992  005164  1004               	iorwf	fputc@fp+1,w,c
  5993  005166  B4D8               	btfsc	status,2,c
  5994  005168  D004               	goto	u2820
  5995  00516A  5003               	movf	fputc@fp,w,c
  5996  00516C  1004               	iorwf	fputc@fp+1,w,c
  5997  00516E  A4D8               	btfss	status,2,c
  5998  005170  D004               	goto	l3046
  5999  005172                     u2820:
  6000  005172  5001               	movf	fputc@c,w,c
  6001  005174  ECB0  F025         	call	_putch
  6002  005178  0012               	return	
  6003  00517A                     l3046:
  6004  00517A  EE20 F004          	lfsr	2,4
  6005  00517E  5003               	movf	fputc@fp,w,c
  6006  005180  26D9               	addwf	fsr2l,f,c
  6007  005182  5004               	movf	fputc@fp+1,w,c
  6008  005184  22DA               	addwfc	fsr2h,f,c
  6009  005186  50DE               	movf	postinc2,w,c
  6010  005188  10DE               	iorwf	postinc2,w,c
  6011  00518A  B4D8               	btfsc	status,2,c
  6012  00518C  D016               	goto	u2840
  6013  00518E  EE20 F004          	lfsr	2,4
  6014  005192  5003               	movf	fputc@fp,w,c
  6015  005194  26D9               	addwf	fsr2l,f,c
  6016  005196  5004               	movf	fputc@fp+1,w,c
  6017  005198  22DA               	addwfc	fsr2h,f,c
  6018  00519A  EE10 F002          	lfsr	1,2
  6019  00519E  5003               	movf	fputc@fp,w,c
  6020  0051A0  26E1               	addwf	fsr1l,f,c
  6021  0051A2  5004               	movf	fputc@fp+1,w,c
  6022  0051A4  22E2               	addwfc	fsr1h,f,c
  6023  0051A6  50DE               	movf	postinc2,w,c
  6024  0051A8  5CE6               	subwf	postinc1,w,c
  6025  0051AA  50E6               	movf	postinc1,w,c
  6026  0051AC  0A80               	xorlw	128
  6027  0051AE  6E09               	movwf	(??_fputc+4)& (0+255),c
  6028  0051B0  50DE               	movf	postinc2,w,c
  6029  0051B2  0A80               	xorlw	128
  6030  0051B4  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6031  0051B6  B0D8               	btfsc	status,0,c
  6032  0051B8  0012               	return	
  6033  0051BA                     u2840:
  6034  0051BA  EE20 F002          	lfsr	2,2
  6035  0051BE  5003               	movf	fputc@fp,w,c
  6036  0051C0  26D9               	addwf	fsr2l,f,c
  6037  0051C2  5004               	movf	fputc@fp+1,w,c
  6038  0051C4  22DA               	addwfc	fsr2h,f,c
  6039  0051C6  CFDE F005          	movff	postinc2,??_fputc
  6040  0051CA  CFDD F006          	movff	postdec2,??_fputc+1
  6041  0051CE  C003  FFD9         	movff	fputc@fp,fsr2l
  6042  0051D2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6043  0051D6  CFDE F007          	movff	postinc2,??_fputc+2
  6044  0051DA  CFDD F008          	movff	postdec2,??_fputc+3
  6045  0051DE  5005               	movf	??_fputc,w,c
  6046  0051E0  2407               	addwf	??_fputc+2,w,c
  6047  0051E2  6ED9               	movwf	fsr2l,c
  6048  0051E4  5006               	movf	??_fputc+1,w,c
  6049  0051E6  2008               	addwfc	??_fputc+3,w,c
  6050  0051E8  6EDA               	movwf	fsr2h,c
  6051  0051EA  C001  FFDF         	movff	fputc@c,indf2
  6052  0051EE  EE20 F002          	lfsr	2,2
  6053  0051F2  5003               	movf	fputc@fp,w,c
  6054  0051F4  26D9               	addwf	fsr2l,f,c
  6055  0051F6  5004               	movf	fputc@fp+1,w,c
  6056  0051F8  22DA               	addwfc	fsr2h,f,c
  6057  0051FA  2ADE               	incf	postinc2,f,c
  6058  0051FC  0E00               	movlw	0
  6059  0051FE  22DD               	addwfc	postdec2,f,c
  6060  005200  0012               	return		;funcret
  6061  005202                     __end_of_fputc:
  6062                           	opt callstack 0
  6063                           
  6064 ;; *************** function _putch *****************
  6065 ;; Defined at:
  6066 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  c               1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  c               1    0[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_fputc
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text14
  6094  004B60                     __ptext14:
  6095                           	opt callstack 0
  6096  004B60                     _putch:
  6097                           	opt callstack 26
  6098                           
  6099                           ;incstack = 0
  6100  004B60  0012               	return		;funcret
  6101  004B62                     __end_of_putch:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _floorf *****************
  6105 ;; Defined at:
  6106 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  x               4   50[COMRAM] float 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  u               4   66[COMRAM] struct .
  6111 ;;  m               4   60[COMRAM] unsigned long 
  6112 ;;  e               2   64[COMRAM] int 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  4   50[COMRAM] float 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6122 ;;      Params:         4       0       0       0       0       0       0       0       0
  6123 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6124 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6125 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6126 ;;Total ram usage:       20 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_efgtoa
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text15
  6136  005C4A                     __ptext15:
  6137                           	opt callstack 0
  6138  005C4A                     _floorf:
  6139                           	opt callstack 26
  6140                           
  6141                           ;incstack = 0
  6142  005C4A  C0C4  F043         	movff	floorf@F524,floorf@u
  6143  005C4E  C0C5  F044         	movff	floorf@F524+1,floorf@u+1
  6144  005C52  C0C6  F045         	movff	floorf@F524+2,floorf@u+2
  6145  005C56  C0C7  F046         	movff	floorf@F524+3,floorf@u+3
  6146  005C5A  C033  F043         	movff	floorf@x,floorf@u
  6147  005C5E  C034  F044         	movff	floorf@x+1,floorf@u+1
  6148  005C62  C035  F045         	movff	floorf@x+2,floorf@u+2
  6149  005C66  C036  F046         	movff	floorf@x+3,floorf@u+3
  6150  005C6A  0E81               	movlw	129
  6151  005C6C  6E37               	movwf	??_floorf& (0+255),c
  6152  005C6E  0EFF               	movlw	255
  6153  005C70  6E38               	movwf	(??_floorf+1)& (0+255),c
  6154  005C72  C043  F039         	movff	floorf@u,??_floorf+2
  6155  005C76  C044  F03A         	movff	floorf@u+1,??_floorf+3
  6156  005C7A  C045  F03B         	movff	floorf@u+2,??_floorf+4
  6157  005C7E  C046  F03C         	movff	floorf@u+3,??_floorf+5
  6158  005C82  0E18               	movlw	24
  6159  005C84  D005               	goto	u3440
  6160  005C86                     u3445:
  6161  005C86  90D8               	bcf	status,0,c
  6162  005C88  323C               	rrcf	??_floorf+5,f,c
  6163  005C8A  323B               	rrcf	??_floorf+4,f,c
  6164  005C8C  323A               	rrcf	??_floorf+3,f,c
  6165  005C8E  3239               	rrcf	??_floorf+2,f,c
  6166  005C90                     u3440:
  6167  005C90  2EE8               	decfsz	wreg,f,c
  6168  005C92  D7F9               	goto	u3445
  6169  005C94  5039               	movf	??_floorf+2,w,c
  6170  005C96  2437               	addwf	??_floorf,w,c
  6171  005C98  6E41               	movwf	floorf@e,c
  6172  005C9A  0E00               	movlw	0
  6173  005C9C  2038               	addwfc	??_floorf+1,w,c
  6174  005C9E  6E42               	movwf	floorf@e+1,c
  6175  005CA0  BE42               	btfsc	floorf@e+1,7,c
  6176  005CA2  D00F               	goto	l3342
  6177  005CA4  5042               	movf	floorf@e+1,w,c
  6178  005CA6  E104               	bnz	u3450
  6179  005CA8  0E17               	movlw	23
  6180  005CAA  5C41               	subwf	floorf@e,w,c
  6181  005CAC  A0D8               	btfss	status,0,c
  6182  005CAE  D009               	goto	l3342
  6183  005CB0                     u3450:
  6184  005CB0  C033  F033         	movff	floorf@x,?_floorf
  6185  005CB4  C034  F034         	movff	floorf@x+1,?_floorf+1
  6186  005CB8  C035  F035         	movff	floorf@x+2,?_floorf+2
  6187  005CBC  C036  F036         	movff	floorf@x+3,?_floorf+3
  6188  005CC0  0012               	return	
  6189  005CC2                     l3342:
  6190  005CC2  BE42               	btfsc	floorf@e+1,7,c
  6191  005CC4  D05E               	goto	l3352
  6192  005CC6  C041  F037         	movff	floorf@e,??_floorf
  6193  005CCA  0EFF               	movlw	255
  6194  005CCC  6E38               	movwf	(??_floorf+1)& (0+255),c
  6195  005CCE  0EFF               	movlw	255
  6196  005CD0  6E39               	movwf	(??_floorf+2)& (0+255),c
  6197  005CD2  0E7F               	movlw	127
  6198  005CD4  6E3A               	movwf	(??_floorf+3)& (0+255),c
  6199  005CD6  0E00               	movlw	0
  6200  005CD8  6E3B               	movwf	(??_floorf+4)& (0+255),c
  6201  005CDA                     u3475:
  6202  005CDA  6637               	tstfsz	??_floorf,c
  6203  005CDC  D001               	goto	u3476
  6204  005CDE  D007               	goto	u3477
  6205  005CE0                     u3476:
  6206  005CE0  343B               	rlcf	??_floorf+4,w,c
  6207  005CE2  323B               	rrcf	??_floorf+4,f,c
  6208  005CE4  323A               	rrcf	??_floorf+3,f,c
  6209  005CE6  3239               	rrcf	??_floorf+2,f,c
  6210  005CE8  3238               	rrcf	??_floorf+1,f,c
  6211  005CEA  2E37               	decfsz	??_floorf,f,c
  6212  005CEC  D7F6               	goto	u3475
  6213  005CEE                     u3477:
  6214  005CEE  C038  F03D         	movff	??_floorf+1,floorf@m
  6215  005CF2  C039  F03E         	movff	??_floorf+2,floorf@m+1
  6216  005CF6  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  6217  005CFA  C03B  F040         	movff	??_floorf+4,floorf@m+3
  6218  005CFE  503D               	movf	floorf@m,w,c
  6219  005D00  1443               	andwf	floorf@u,w,c
  6220  005D02  6E37               	movwf	??_floorf& (0+255),c
  6221  005D04  503E               	movf	floorf@m+1,w,c
  6222  005D06  1444               	andwf	floorf@u+1,w,c
  6223  005D08  6E38               	movwf	(??_floorf+1)& (0+255),c
  6224  005D0A  503F               	movf	floorf@m+2,w,c
  6225  005D0C  1445               	andwf	floorf@u+2,w,c
  6226  005D0E  6E39               	movwf	(??_floorf+2)& (0+255),c
  6227  005D10  5040               	movf	floorf@m+3,w,c
  6228  005D12  1446               	andwf	floorf@u+3,w,c
  6229  005D14  6E3A               	movwf	(??_floorf+3)& (0+255),c
  6230  005D16  5037               	movf	??_floorf,w,c
  6231  005D18  1038               	iorwf	??_floorf+1,w,c
  6232  005D1A  1039               	iorwf	??_floorf+2,w,c
  6233  005D1C  103A               	iorwf	??_floorf+3,w,c
  6234  005D1E  B4D8               	btfsc	status,2,c
  6235  005D20  D7C7               	goto	u3450
  6236  005D22  C043  F037         	movff	floorf@u,??_floorf
  6237  005D26  C044  F038         	movff	floorf@u+1,??_floorf+1
  6238  005D2A  C045  F039         	movff	floorf@u+2,??_floorf+2
  6239  005D2E  C046  F03A         	movff	floorf@u+3,??_floorf+3
  6240  005D32  0E20               	movlw	32
  6241  005D34  D005               	goto	u3490
  6242  005D36                     u3495:
  6243  005D36  90D8               	bcf	status,0,c
  6244  005D38  323A               	rrcf	??_floorf+3,f,c
  6245  005D3A  3239               	rrcf	??_floorf+2,f,c
  6246  005D3C  3238               	rrcf	??_floorf+1,f,c
  6247  005D3E  3237               	rrcf	??_floorf,f,c
  6248  005D40                     u3490:
  6249  005D40  2EE8               	decfsz	wreg,f,c
  6250  005D42  D7F9               	goto	u3495
  6251  005D44  5037               	movf	??_floorf,w,c
  6252  005D46  1038               	iorwf	??_floorf+1,w,c
  6253  005D48  1039               	iorwf	??_floorf+2,w,c
  6254  005D4A  103A               	iorwf	??_floorf+3,w,c
  6255  005D4C  B4D8               	btfsc	status,2,c
  6256  005D4E  D008               	goto	l1056
  6257  005D50  503D               	movf	floorf@m,w,c
  6258  005D52  2643               	addwf	floorf@u,f,c
  6259  005D54  503E               	movf	floorf@m+1,w,c
  6260  005D56  2244               	addwfc	floorf@u+1,f,c
  6261  005D58  503F               	movf	floorf@m+2,w,c
  6262  005D5A  2245               	addwfc	floorf@u+2,f,c
  6263  005D5C  5040               	movf	floorf@m+3,w,c
  6264  005D5E  2246               	addwfc	floorf@u+3,f,c
  6265  005D60                     l1056:
  6266  005D60  1C3D               	comf	floorf@m,w,c
  6267  005D62  6E37               	movwf	??_floorf& (0+255),c
  6268  005D64  1C3E               	comf	floorf@m+1,w,c
  6269  005D66  6E38               	movwf	(??_floorf+1)& (0+255),c
  6270  005D68  1C3F               	comf	floorf@m+2,w,c
  6271  005D6A  6E39               	movwf	(??_floorf+2)& (0+255),c
  6272  005D6C  1C40               	comf	floorf@m+3,w,c
  6273  005D6E  6E3A               	movwf	(??_floorf+3)& (0+255),c
  6274  005D70  5037               	movf	??_floorf,w,c
  6275  005D72  1643               	andwf	floorf@u,f,c
  6276  005D74  5038               	movf	??_floorf+1,w,c
  6277  005D76  1644               	andwf	floorf@u+1,f,c
  6278  005D78  5039               	movf	??_floorf+2,w,c
  6279  005D7A  1645               	andwf	floorf@u+2,f,c
  6280  005D7C  503A               	movf	??_floorf+3,w,c
  6281  005D7E  1646               	andwf	floorf@u+3,f,c
  6282  005D80  D036               	goto	l3360
  6283  005D82                     l3352:
  6284  005D82  C043  F037         	movff	floorf@u,??_floorf
  6285  005D86  C044  F038         	movff	floorf@u+1,??_floorf+1
  6286  005D8A  C045  F039         	movff	floorf@u+2,??_floorf+2
  6287  005D8E  C046  F03A         	movff	floorf@u+3,??_floorf+3
  6288  005D92  0E20               	movlw	32
  6289  005D94  D005               	goto	u3510
  6290  005D96                     u3515:
  6291  005D96  90D8               	bcf	status,0,c
  6292  005D98  323A               	rrcf	??_floorf+3,f,c
  6293  005D9A  3239               	rrcf	??_floorf+2,f,c
  6294  005D9C  3238               	rrcf	??_floorf+1,f,c
  6295  005D9E  3237               	rrcf	??_floorf,f,c
  6296  005DA0                     u3510:
  6297  005DA0  2EE8               	decfsz	wreg,f,c
  6298  005DA2  D7F9               	goto	u3515
  6299  005DA4  5037               	movf	??_floorf,w,c
  6300  005DA6  1038               	iorwf	??_floorf+1,w,c
  6301  005DA8  1039               	iorwf	??_floorf+2,w,c
  6302  005DAA  103A               	iorwf	??_floorf+3,w,c
  6303  005DAC  A4D8               	btfss	status,2,c
  6304  005DAE  D008               	goto	l3356
  6305  005DB0  0E00               	movlw	0
  6306  005DB2  6E43               	movwf	floorf@u,c
  6307  005DB4  0E00               	movlw	0
  6308  005DB6  6E44               	movwf	floorf@u+1,c
  6309  005DB8  0E00               	movlw	0
  6310  005DBA  6E45               	movwf	floorf@u+2,c
  6311  005DBC  0E00               	movlw	0
  6312  005DBE  D016               	goto	L7
  6313  005DC0                     l3356:
  6314  005DC0  90D8               	bcf	status,0,c
  6315  005DC2  3443               	rlcf	floorf@u,w,c
  6316  005DC4  6E37               	movwf	??_floorf& (0+255),c
  6317  005DC6  3444               	rlcf	floorf@u+1,w,c
  6318  005DC8  6E38               	movwf	(??_floorf+1)& (0+255),c
  6319  005DCA  3445               	rlcf	floorf@u+2,w,c
  6320  005DCC  6E39               	movwf	(??_floorf+2)& (0+255),c
  6321  005DCE  3446               	rlcf	floorf@u+3,w,c
  6322  005DD0  6E3A               	movwf	(??_floorf+3)& (0+255),c
  6323  005DD2  5037               	movf	??_floorf,w,c
  6324  005DD4  1038               	iorwf	??_floorf+1,w,c
  6325  005DD6  1039               	iorwf	??_floorf+2,w,c
  6326  005DD8  103A               	iorwf	??_floorf+3,w,c
  6327  005DDA  B4D8               	btfsc	status,2,c
  6328  005DDC  D008               	goto	l3360
  6329  005DDE  0E00               	movlw	0
  6330  005DE0  6E43               	movwf	floorf@u,c
  6331  005DE2  0E00               	movlw	0
  6332  005DE4  6E44               	movwf	floorf@u+1,c
  6333  005DE6  0E80               	movlw	128
  6334  005DE8  6E45               	movwf	floorf@u+2,c
  6335  005DEA  0EBF               	movlw	191
  6336  005DEC                     L7:
  6337  005DEC  6E46               	movwf	floorf@u+3,c
  6338  005DEE                     l3360:
  6339  005DEE  C043  F033         	movff	floorf@u,?_floorf
  6340  005DF2  C044  F034         	movff	floorf@u+1,?_floorf+1
  6341  005DF6  C045  F035         	movff	floorf@u+2,?_floorf+2
  6342  005DFA  C046  F036         	movff	floorf@u+3,?_floorf+3
  6343  005DFE  0012               	return		;funcret
  6344  005E00                     __end_of_floorf:
  6345                           	opt callstack 0
  6346                           
  6347 ;; *************** function ___fpclassifyf *****************
  6348 ;; Defined at:
  6349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  x               4    0[COMRAM] float 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  u               4   10[COMRAM] struct .
  6354 ;;  e               2    8[COMRAM] int 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  2    0[COMRAM] int 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6364 ;;      Params:         4       0       0       0       0       0       0       0       0
  6365 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6366 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6367 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6368 ;;Total ram usage:       14 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_efgtoa
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text16
  6378  00535E                     __ptext16:
  6379                           	opt callstack 0
  6380  00535E                     ___fpclassifyf:
  6381                           	opt callstack 26
  6382                           
  6383                           ;incstack = 0
  6384  00535E  C0C8  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6385  005362  C0C9  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6386  005366  C0CA  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6387  00536A  C0CB  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6388  00536E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6389  005372  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6390  005376  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6391  00537A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6392  00537E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6393  005382  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6394  005386  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6395  00538A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6396  00538E  0E18               	movlw	24
  6397  005390  D005               	goto	u3320
  6398  005392                     u3325:
  6399  005392  90D8               	bcf	status,0,c
  6400  005394  3208               	rrcf	??___fpclassifyf+3,f,c
  6401  005396  3207               	rrcf	??___fpclassifyf+2,f,c
  6402  005398  3206               	rrcf	??___fpclassifyf+1,f,c
  6403  00539A  3205               	rrcf	??___fpclassifyf,f,c
  6404  00539C                     u3320:
  6405  00539C  2EE8               	decfsz	wreg,f,c
  6406  00539E  D7F9               	goto	u3325
  6407  0053A0  5005               	movf	??___fpclassifyf,w,c
  6408  0053A2  6E09               	movwf	___fpclassifyf@e,c
  6409  0053A4  6A0A               	clrf	___fpclassifyf@e+1,c
  6410  0053A6  5009               	movf	___fpclassifyf@e,w,c
  6411  0053A8  100A               	iorwf	___fpclassifyf@e+1,w,c
  6412  0053AA  A4D8               	btfss	status,2,c
  6413  0053AC  D019               	goto	l3312
  6414  0053AE  90D8               	bcf	status,0,c
  6415  0053B0  340B               	rlcf	___fpclassifyf@u,w,c
  6416  0053B2  6E05               	movwf	??___fpclassifyf& (0+255),c
  6417  0053B4  340C               	rlcf	___fpclassifyf@u+1,w,c
  6418  0053B6  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  6419  0053B8  340D               	rlcf	___fpclassifyf@u+2,w,c
  6420  0053BA  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  6421  0053BC  340E               	rlcf	___fpclassifyf@u+3,w,c
  6422  0053BE  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  6423  0053C0  5005               	movf	??___fpclassifyf,w,c
  6424  0053C2  1006               	iorwf	??___fpclassifyf+1,w,c
  6425  0053C4  1007               	iorwf	??___fpclassifyf+2,w,c
  6426  0053C6  1008               	iorwf	??___fpclassifyf+3,w,c
  6427  0053C8  A4D8               	btfss	status,2,c
  6428  0053CA  D005               	goto	l3308
  6429  0053CC  0E00               	movlw	0
  6430  0053CE  6E02               	movwf	?___fpclassifyf+1,c
  6431  0053D0  0E02               	movlw	2
  6432  0053D2  6E01               	movwf	?___fpclassifyf,c
  6433  0053D4  0012               	return	
  6434  0053D6                     l3308:
  6435  0053D6  0E00               	movlw	0
  6436  0053D8  6E02               	movwf	?___fpclassifyf+1,c
  6437  0053DA  0E03               	movlw	3
  6438  0053DC  6E01               	movwf	?___fpclassifyf,c
  6439  0053DE  0012               	return	
  6440  0053E0                     l3312:
  6441  0053E0  2809               	incf	___fpclassifyf@e,w,c
  6442  0053E2  100A               	iorwf	___fpclassifyf@e+1,w,c
  6443  0053E4  A4D8               	btfss	status,2,c
  6444  0053E6  D01C               	goto	l3318
  6445  0053E8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6446  0053EC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6447  0053F0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6448  0053F4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6449  0053F8  0E09               	movlw	9
  6450  0053FA                     u3365:
  6451  0053FA  90D8               	bcf	status,0,c
  6452  0053FC  3605               	rlcf	??___fpclassifyf,f,c
  6453  0053FE  3606               	rlcf	??___fpclassifyf+1,f,c
  6454  005400  3607               	rlcf	??___fpclassifyf+2,f,c
  6455  005402  3608               	rlcf	??___fpclassifyf+3,f,c
  6456  005404  2EE8               	decfsz	wreg,f,c
  6457  005406  D7F9               	goto	u3365
  6458  005408  5005               	movf	??___fpclassifyf,w,c
  6459  00540A  1006               	iorwf	??___fpclassifyf+1,w,c
  6460  00540C  1007               	iorwf	??___fpclassifyf+2,w,c
  6461  00540E  1008               	iorwf	??___fpclassifyf+3,w,c
  6462  005410  A4D8               	btfss	status,2,c
  6463  005412  D002               	goto	u3370
  6464  005414  0E01               	movlw	1
  6465  005416  D001               	goto	u3380
  6466  005418                     u3370:
  6467  005418  0E00               	movlw	0
  6468  00541A                     u3380:
  6469  00541A  6E01               	movwf	?___fpclassifyf,c
  6470  00541C  6A02               	clrf	?___fpclassifyf+1,c
  6471  00541E  0012               	return	
  6472  005420                     l3318:
  6473  005420  0E00               	movlw	0
  6474  005422  6E02               	movwf	?___fpclassifyf+1,c
  6475  005424  0E04               	movlw	4
  6476  005426  6E01               	movwf	?___fpclassifyf,c
  6477  005428  0012               	return		;funcret
  6478  00542A                     __end_of___fpclassifyf:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function ___fltol *****************
  6482 ;; Defined at:
  6483 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  f1              4    0[COMRAM] int 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  exp1            1    9[COMRAM] unsigned char 
  6488 ;;  sign1           1    8[COMRAM] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  4    0[COMRAM] long 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6498 ;;      Params:         4       0       0       0       0       0       0       0       0
  6499 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6500 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6501 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6502 ;;Total ram usage:       10 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_efgtoa
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text17
  6512  0052A4                     __ptext17:
  6513                           	opt callstack 0
  6514  0052A4                     ___fltol:
  6515                           	opt callstack 26
  6516                           
  6517                           ;incstack = 0
  6518  0052A4  3403               	rlcf	___fltol@f1+2,w,c
  6519  0052A6  3404               	rlcf	___fltol@f1+3,w,c
  6520  0052A8  6E0A               	movwf	___fltol@exp1,c
  6521  0052AA  500A               	movf	___fltol@exp1,w,c
  6522  0052AC  A4D8               	btfss	status,2,c
  6523  0052AE  D009               	goto	l3780
  6524  0052B0                     u4190:
  6525  0052B0  0E00               	movlw	0
  6526  0052B2  6E01               	movwf	?___fltol,c
  6527  0052B4  0E00               	movlw	0
  6528  0052B6  6E02               	movwf	?___fltol+1,c
  6529  0052B8  0E00               	movlw	0
  6530  0052BA  6E03               	movwf	?___fltol+2,c
  6531  0052BC  0E00               	movlw	0
  6532  0052BE  6E04               	movwf	?___fltol+3,c
  6533  0052C0  0012               	return	
  6534  0052C2                     l3780:
  6535  0052C2  C001  F005         	movff	___fltol@f1,??___fltol
  6536  0052C6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6537  0052CA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6538  0052CE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6539  0052D2  0E20               	movlw	32
  6540  0052D4  D005               	goto	u4200
  6541  0052D6                     u4205:
  6542  0052D6  90D8               	bcf	status,0,c
  6543  0052D8  3208               	rrcf	??___fltol+3,f,c
  6544  0052DA  3207               	rrcf	??___fltol+2,f,c
  6545  0052DC  3206               	rrcf	??___fltol+1,f,c
  6546  0052DE  3205               	rrcf	??___fltol,f,c
  6547  0052E0                     u4200:
  6548  0052E0  2EE8               	decfsz	wreg,f,c
  6549  0052E2  D7F9               	goto	u4205
  6550  0052E4  5005               	movf	??___fltol,w,c
  6551  0052E6  6E09               	movwf	___fltol@sign1,c
  6552  0052E8  8E03               	bsf	___fltol@f1+2,7,c
  6553  0052EA  0EFF               	movlw	255
  6554  0052EC  1601               	andwf	___fltol@f1,f,c
  6555  0052EE  0EFF               	movlw	255
  6556  0052F0  1602               	andwf	___fltol@f1+1,f,c
  6557  0052F2  0EFF               	movlw	255
  6558  0052F4  1603               	andwf	___fltol@f1+2,f,c
  6559  0052F6  0E00               	movlw	0
  6560  0052F8  1604               	andwf	___fltol@f1+3,f,c
  6561  0052FA  0E96               	movlw	150
  6562  0052FC  5E0A               	subwf	___fltol@exp1,f,c
  6563  0052FE  AE0A               	btfss	___fltol@exp1,7,c
  6564  005300  D00D               	goto	l3800
  6565  005302  500A               	movf	___fltol@exp1,w,c
  6566  005304  0A80               	xorlw	128
  6567  005306  0F97               	addlw	151
  6568  005308  A0D8               	btfss	status,0,c
  6569  00530A  D7D2               	goto	u4190
  6570  00530C                     l3796:
  6571  00530C  90D8               	bcf	status,0,c
  6572  00530E  3204               	rrcf	___fltol@f1+3,f,c
  6573  005310  3203               	rrcf	___fltol@f1+2,f,c
  6574  005312  3202               	rrcf	___fltol@f1+1,f,c
  6575  005314  3201               	rrcf	___fltol@f1,f,c
  6576  005316  3E0A               	incfsz	___fltol@exp1,f,c
  6577  005318  D7F9               	goto	l3796
  6578  00531A  D00D               	goto	u4240
  6579  00531C                     l3800:
  6580  00531C  0E1F               	movlw	31
  6581  00531E  640A               	cpfsgt	___fltol@exp1,c
  6582  005320  D007               	goto	l3808
  6583  005322  D7C6               	goto	u4190
  6584  005324                     l3806:
  6585  005324  90D8               	bcf	status,0,c
  6586  005326  3601               	rlcf	___fltol@f1,f,c
  6587  005328  3602               	rlcf	___fltol@f1+1,f,c
  6588  00532A  3603               	rlcf	___fltol@f1+2,f,c
  6589  00532C  3604               	rlcf	___fltol@f1+3,f,c
  6590  00532E  060A               	decf	___fltol@exp1,f,c
  6591  005330                     l3808:
  6592  005330  500A               	movf	___fltol@exp1,w,c
  6593  005332  A4D8               	btfss	status,2,c
  6594  005334  D7F7               	goto	l3806
  6595  005336                     u4240:
  6596  005336  5009               	movf	___fltol@sign1,w,c
  6597  005338  B4D8               	btfsc	status,2,c
  6598  00533A  D008               	goto	l3814
  6599  00533C  1E04               	comf	___fltol@f1+3,f,c
  6600  00533E  1E03               	comf	___fltol@f1+2,f,c
  6601  005340  1E02               	comf	___fltol@f1+1,f,c
  6602  005342  6C01               	negf	___fltol@f1,c
  6603  005344  0E00               	movlw	0
  6604  005346  2202               	addwfc	___fltol@f1+1,f,c
  6605  005348  2203               	addwfc	___fltol@f1+2,f,c
  6606  00534A  2204               	addwfc	___fltol@f1+3,f,c
  6607  00534C                     l3814:
  6608  00534C  C001  F001         	movff	___fltol@f1,?___fltol
  6609  005350  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6610  005354  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6611  005358  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6612  00535C  0012               	return		;funcret
  6613  00535E                     __end_of___fltol:
  6614                           	opt callstack 0
  6615                           
  6616 ;; *************** function ___flsub *****************
  6617 ;; Defined at:
  6618 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  b               4   41[COMRAM] long 
  6621 ;;  a               4   45[COMRAM] long 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  4   41[COMRAM] long 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6633 ;;      Params:         8       0       0       0       0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6636 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6637 ;;Total ram usage:        8 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    1
  6640 ;; This function calls:
  6641 ;;		___fladd
  6642 ;; This function is called by:
  6643 ;;		_efgtoa
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text18
  6648  004CD8                     __ptext18:
  6649                           	opt callstack 0
  6650  004CD8                     ___flsub:
  6651                           	opt callstack 25
  6652                           
  6653                           ;incstack = 0
  6654  004CD8  0E00               	movlw	0
  6655  004CDA  1A2E               	xorwf	___flsub@a,f,c
  6656  004CDC  0E00               	movlw	0
  6657  004CDE  1A2F               	xorwf	___flsub@a+1,f,c
  6658  004CE0  0E00               	movlw	0
  6659  004CE2  1A30               	xorwf	___flsub@a+2,f,c
  6660  004CE4  0E80               	movlw	128
  6661  004CE6  1A31               	xorwf	___flsub@a+3,f,c
  6662  004CE8  C02A  F01A         	movff	___flsub@b,___fladd@b
  6663  004CEC  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  6664  004CF0  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  6665  004CF4  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  6666  004CF8  C02E  F01E         	movff	___flsub@a,___fladd@a
  6667  004CFC  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  6668  004D00  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  6669  004D04  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  6670  004D08  EC44  F030         	call	___fladd	;wreg free
  6671  004D0C  C01A  F02A         	movff	?___fladd,?___flsub
  6672  004D10  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  6673  004D14  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  6674  004D18  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  6675  004D1C  0012               	return		;funcret
  6676  004D1E                     __end_of___flsub:
  6677                           	opt callstack 0
  6678                           
  6679 ;; *************** function ___fladd *****************
  6680 ;; Defined at:
  6681 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  b               4   25[COMRAM] long 
  6684 ;;  a               4   29[COMRAM] long 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  grs             1   40[COMRAM] unsigned char 
  6687 ;;  bexp            1   39[COMRAM] unsigned char 
  6688 ;;  aexp            1   38[COMRAM] unsigned char 
  6689 ;;  signs           1   37[COMRAM] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  4   25[COMRAM] unsigned char 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6699 ;;      Params:         8       0       0       0       0       0       0       0       0
  6700 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6701 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6702 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6703 ;;Total ram usage:       16 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;;		_efgtoa
  6710 ;;		___flsub
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text19
  6715  006088                     __ptext19:
  6716                           	opt callstack 0
  6717  006088                     ___fladd:
  6718                           	opt callstack 25
  6719                           
  6720                           ;incstack = 0
  6721  006088  501D               	movf	___fladd@b+3,w,c
  6722  00608A  0B80               	andlw	128
  6723  00608C  6E26               	movwf	___fladd@signs,c
  6724  00608E  501D               	movf	___fladd@b+3,w,c
  6725  006090  241D               	addwf	___fladd@b+3,w,c
  6726  006092  6E28               	movwf	___fladd@bexp,c
  6727  006094  BE1C               	btfsc	___fladd@b+2,7,c
  6728  006096  8028               	bsf	___fladd@bexp,0,c
  6729  006098  5028               	movf	___fladd@bexp,w,c
  6730  00609A  B4D8               	btfsc	status,2,c
  6731  00609C  D00D               	goto	l3092
  6732  00609E  2828               	incf	___fladd@bexp,w,c
  6733  0060A0  A4D8               	btfss	status,2,c
  6734  0060A2  D008               	goto	l3088
  6735  0060A4  0E00               	movlw	0
  6736  0060A6  6E1A               	movwf	___fladd@b,c
  6737  0060A8  0E00               	movlw	0
  6738  0060AA  6E1B               	movwf	___fladd@b+1,c
  6739  0060AC  0E00               	movlw	0
  6740  0060AE  6E1C               	movwf	___fladd@b+2,c
  6741  0060B0  0E00               	movlw	0
  6742  0060B2  6E1D               	movwf	___fladd@b+3,c
  6743  0060B4                     l3088:
  6744  0060B4  8E1C               	bsf	___fladd@b+2,7,c
  6745  0060B6  D006               	goto	L8
  6746  0060B8                     l3092:
  6747  0060B8  0E00               	movlw	0
  6748  0060BA  6E1A               	movwf	___fladd@b,c
  6749  0060BC  0E00               	movlw	0
  6750  0060BE  6E1B               	movwf	___fladd@b+1,c
  6751  0060C0  0E00               	movlw	0
  6752  0060C2  6E1C               	movwf	___fladd@b+2,c
  6753  0060C4                     L8:
  6754  0060C4  0E00               	movlw	0
  6755  0060C6  6E1D               	movwf	___fladd@b+3,c
  6756  0060C8  5021               	movf	___fladd@a+3,w,c
  6757  0060CA  0B80               	andlw	128
  6758  0060CC  6E27               	movwf	___fladd@aexp,c
  6759  0060CE  5026               	movf	___fladd@signs,w,c
  6760  0060D0  1827               	xorwf	___fladd@aexp,w,c
  6761  0060D2  A4D8               	btfss	status,2,c
  6762  0060D4  8C26               	bsf	___fladd@signs,6,c
  6763  0060D6  5021               	movf	___fladd@a+3,w,c
  6764  0060D8  2421               	addwf	___fladd@a+3,w,c
  6765  0060DA  6E27               	movwf	___fladd@aexp,c
  6766  0060DC  BE20               	btfsc	___fladd@a+2,7,c
  6767  0060DE  8027               	bsf	___fladd@aexp,0,c
  6768  0060E0  5027               	movf	___fladd@aexp,w,c
  6769  0060E2  B4D8               	btfsc	status,2,c
  6770  0060E4  D00D               	goto	l3116
  6771  0060E6  2827               	incf	___fladd@aexp,w,c
  6772  0060E8  A4D8               	btfss	status,2,c
  6773  0060EA  D008               	goto	l3112
  6774  0060EC  0E00               	movlw	0
  6775  0060EE  6E1E               	movwf	___fladd@a,c
  6776  0060F0  0E00               	movlw	0
  6777  0060F2  6E1F               	movwf	___fladd@a+1,c
  6778  0060F4  0E00               	movlw	0
  6779  0060F6  6E20               	movwf	___fladd@a+2,c
  6780  0060F8  0E00               	movlw	0
  6781  0060FA  6E21               	movwf	___fladd@a+3,c
  6782  0060FC                     l3112:
  6783  0060FC  8E20               	bsf	___fladd@a+2,7,c
  6784  0060FE  D006               	goto	L9
  6785  006100                     l3116:
  6786  006100  0E00               	movlw	0
  6787  006102  6E1E               	movwf	___fladd@a,c
  6788  006104  0E00               	movlw	0
  6789  006106  6E1F               	movwf	___fladd@a+1,c
  6790  006108  0E00               	movlw	0
  6791  00610A  6E20               	movwf	___fladd@a+2,c
  6792  00610C                     L9:
  6793  00610C  0E00               	movlw	0
  6794  00610E  6E21               	movwf	___fladd@a+3,c
  6795  006110  5028               	movf	___fladd@bexp,w,c
  6796  006112  5C27               	subwf	___fladd@aexp,w,c
  6797  006114  B0D8               	btfsc	status,0,c
  6798  006116  D022               	goto	l3154
  6799  006118  AC26               	btfss	___fladd@signs,6,c
  6800  00611A  D002               	goto	l3124
  6801  00611C  0E80               	movlw	128
  6802  00611E  1A26               	xorwf	___fladd@signs,f,c
  6803  006120                     l3124:
  6804  006120  C028  F029         	movff	___fladd@bexp,___fladd@grs
  6805  006124  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6806  006128  C029  F027         	movff	___fladd@grs,___fladd@aexp
  6807  00612C  C01A  F029         	movff	___fladd@b,___fladd@grs
  6808  006130  C01E  F01A         	movff	___fladd@a,___fladd@b
  6809  006134  C029  F01E         	movff	___fladd@grs,___fladd@a
  6810  006138  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  6811  00613C  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  6812  006140  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  6813  006144  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  6814  006148  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  6815  00614C  C029  F020         	movff	___fladd@grs,___fladd@a+2
  6816  006150  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  6817  006154  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  6818  006158  C029  F021         	movff	___fladd@grs,___fladd@a+3
  6819  00615C                     l3154:
  6820  00615C  0E00               	movlw	0
  6821  00615E  6E29               	movwf	___fladd@grs,c
  6822  006160  5028               	movf	___fladd@bexp,w,c
  6823  006162  C027  F022         	movff	___fladd@aexp,??___fladd
  6824  006166  6A23               	clrf	(??___fladd+1)& (0+255),c
  6825  006168  5E22               	subwf	??___fladd,f,c
  6826  00616A  0E00               	movlw	0
  6827  00616C  5A23               	subwfb	??___fladd+1,f,c
  6828  00616E  BE23               	btfsc	??___fladd+1,7,c
  6829  006170  D02C               	goto	l863
  6830  006172  5023               	movf	??___fladd+1,w,c
  6831  006174  E104               	bnz	u2980
  6832  006176  0E1A               	movlw	26
  6833  006178  5C22               	subwf	??___fladd,w,c
  6834  00617A  A0D8               	btfss	status,0,c
  6835  00617C  D026               	goto	l863
  6836  00617E                     u2980:
  6837  00617E  501A               	movf	___fladd@b,w,c
  6838  006180  101B               	iorwf	___fladd@b+1,w,c
  6839  006182  101C               	iorwf	___fladd@b+2,w,c
  6840  006184  101D               	iorwf	___fladd@b+3,w,c
  6841  006186  B4D8               	btfsc	status,2,c
  6842  006188  D002               	goto	u2990
  6843  00618A  0E01               	movlw	1
  6844  00618C  D001               	goto	u3000
  6845  00618E                     u2990:
  6846  00618E  0E00               	movlw	0
  6847  006190                     u3000:
  6848  006190  6E29               	movwf	___fladd@grs,c
  6849  006192  0E00               	movlw	0
  6850  006194  6E1A               	movwf	___fladd@b,c
  6851  006196  0E00               	movlw	0
  6852  006198  6E1B               	movwf	___fladd@b+1,c
  6853  00619A  0E00               	movlw	0
  6854  00619C  6E1C               	movwf	___fladd@b+2,c
  6855  00619E  0E00               	movlw	0
  6856  0061A0  6E1D               	movwf	___fladd@b+3,c
  6857  0061A2  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6858  0061A6  D015               	goto	u3030
  6859  0061A8                     l864:
  6860  0061A8  A029               	btfss	___fladd@grs,0,c
  6861  0061AA  D005               	goto	l3166
  6862  0061AC  90D8               	bcf	status,0,c
  6863  0061AE  3029               	rrcf	___fladd@grs,w,c
  6864  0061B0  0901               	iorlw	1
  6865  0061B2  6E29               	movwf	___fladd@grs,c
  6866  0061B4  D002               	goto	l3168
  6867  0061B6                     l3166:
  6868  0061B6  90D8               	bcf	status,0,c
  6869  0061B8  3229               	rrcf	___fladd@grs,f,c
  6870  0061BA                     l3168:
  6871  0061BA  B01A               	btfsc	___fladd@b,0,c
  6872  0061BC  8E29               	bsf	___fladd@grs,7,c
  6873  0061BE  341D               	rlcf	___fladd@b+3,w,c
  6874  0061C0  321D               	rrcf	___fladd@b+3,f,c
  6875  0061C2  321C               	rrcf	___fladd@b+2,f,c
  6876  0061C4  321B               	rrcf	___fladd@b+1,f,c
  6877  0061C6  321A               	rrcf	___fladd@b,f,c
  6878  0061C8  2A28               	incf	___fladd@bexp,f,c
  6879  0061CA                     l863:
  6880  0061CA  5027               	movf	___fladd@aexp,w,c
  6881  0061CC  5C28               	subwf	___fladd@bexp,w,c
  6882  0061CE  A0D8               	btfss	status,0,c
  6883  0061D0  D7EB               	goto	l864
  6884  0061D2                     u3030:
  6885  0061D2  BC26               	btfsc	___fladd@signs,6,c
  6886  0061D4  D028               	goto	l3200
  6887  0061D6  5028               	movf	___fladd@bexp,w,c
  6888  0061D8  A4D8               	btfss	status,2,c
  6889  0061DA  D009               	goto	l3182
  6890  0061DC  0E00               	movlw	0
  6891  0061DE  6E1A               	movwf	?___fladd,c
  6892  0061E0  0E00               	movlw	0
  6893  0061E2  6E1B               	movwf	?___fladd+1,c
  6894  0061E4  0E00               	movlw	0
  6895  0061E6  6E1C               	movwf	?___fladd+2,c
  6896  0061E8  0E00               	movlw	0
  6897  0061EA  6E1D               	movwf	?___fladd+3,c
  6898  0061EC  0012               	return	
  6899  0061EE                     l3182:
  6900  0061EE  501E               	movf	___fladd@a,w,c
  6901  0061F0  261A               	addwf	___fladd@b,f,c
  6902  0061F2  501F               	movf	___fladd@a+1,w,c
  6903  0061F4  221B               	addwfc	___fladd@b+1,f,c
  6904  0061F6  5020               	movf	___fladd@a+2,w,c
  6905  0061F8  221C               	addwfc	___fladd@b+2,f,c
  6906  0061FA  5021               	movf	___fladd@a+3,w,c
  6907  0061FC  221D               	addwfc	___fladd@b+3,f,c
  6908  0061FE  A01D               	btfss	___fladd@b+3,0,c
  6909  006200  D071               	goto	u3160
  6910  006202  A029               	btfss	___fladd@grs,0,c
  6911  006204  D005               	goto	l3190
  6912  006206  90D8               	bcf	status,0,c
  6913  006208  3029               	rrcf	___fladd@grs,w,c
  6914  00620A  0901               	iorlw	1
  6915  00620C  6E29               	movwf	___fladd@grs,c
  6916  00620E  D002               	goto	l3192
  6917  006210                     l3190:
  6918  006210  90D8               	bcf	status,0,c
  6919  006212  3229               	rrcf	___fladd@grs,f,c
  6920  006214                     l3192:
  6921  006214  B01A               	btfsc	___fladd@b,0,c
  6922  006216  8E29               	bsf	___fladd@grs,7,c
  6923  006218  341D               	rlcf	___fladd@b+3,w,c
  6924  00621A  321D               	rrcf	___fladd@b+3,f,c
  6925  00621C  321C               	rrcf	___fladd@b+2,f,c
  6926  00621E  321B               	rrcf	___fladd@b+1,f,c
  6927  006220  321A               	rrcf	___fladd@b,f,c
  6928  006222  2A28               	incf	___fladd@bexp,f,c
  6929  006224  D05F               	goto	u3160
  6930  006226                     l3200:
  6931  006226  501E               	movf	___fladd@a,w,c
  6932  006228  5C1A               	subwf	___fladd@b,w,c
  6933  00622A  501F               	movf	___fladd@a+1,w,c
  6934  00622C  581B               	subwfb	___fladd@b+1,w,c
  6935  00622E  5020               	movf	___fladd@a+2,w,c
  6936  006230  581C               	subwfb	___fladd@b+2,w,c
  6937  006232  501D               	movf	___fladd@b+3,w,c
  6938  006234  0A80               	xorlw	128
  6939  006236  6E22               	movwf	??___fladd& (0+255),c
  6940  006238  5021               	movf	___fladd@a+3,w,c
  6941  00623A  0A80               	xorlw	128
  6942  00623C  5822               	subwfb	??___fladd& (0+255),w,c
  6943  00623E  B0D8               	btfsc	status,0,c
  6944  006240  D025               	goto	l3210
  6945  006242  501A               	movf	___fladd@b,w,c
  6946  006244  5C1E               	subwf	___fladd@a,w,c
  6947  006246  6E22               	movwf	??___fladd& (0+255),c
  6948  006248  501B               	movf	___fladd@b+1,w,c
  6949  00624A  581F               	subwfb	___fladd@a+1,w,c
  6950  00624C  6E23               	movwf	(??___fladd+1)& (0+255),c
  6951  00624E  501C               	movf	___fladd@b+2,w,c
  6952  006250  5820               	subwfb	___fladd@a+2,w,c
  6953  006252  6E24               	movwf	(??___fladd+2)& (0+255),c
  6954  006254  501D               	movf	___fladd@b+3,w,c
  6955  006256  5821               	subwfb	___fladd@a+3,w,c
  6956  006258  6E25               	movwf	(??___fladd+3)& (0+255),c
  6957  00625A  0EFF               	movlw	255
  6958  00625C  2422               	addwf	??___fladd,w,c
  6959  00625E  6E1A               	movwf	___fladd@b,c
  6960  006260  0EFF               	movlw	255
  6961  006262  2023               	addwfc	??___fladd+1,w,c
  6962  006264  6E1B               	movwf	___fladd@b+1,c
  6963  006266  0EFF               	movlw	255
  6964  006268  2024               	addwfc	??___fladd+2,w,c
  6965  00626A  6E1C               	movwf	___fladd@b+2,c
  6966  00626C  0EFF               	movlw	255
  6967  00626E  2025               	addwfc	??___fladd+3,w,c
  6968  006270  6E1D               	movwf	___fladd@b+3,c
  6969  006272  0E80               	movlw	128
  6970  006274  1A26               	xorwf	___fladd@signs,f,c
  6971  006276  6C29               	negf	___fladd@grs,c
  6972  006278  5029               	movf	___fladd@grs,w,c
  6973  00627A  A4D8               	btfss	status,2,c
  6974  00627C  D00F               	goto	l879
  6975  00627E  0E01               	movlw	1
  6976  006280  261A               	addwf	___fladd@b,f,c
  6977  006282  0E00               	movlw	0
  6978  006284  221B               	addwfc	___fladd@b+1,f,c
  6979  006286  221C               	addwfc	___fladd@b+2,f,c
  6980  006288  221D               	addwfc	___fladd@b+3,f,c
  6981  00628A  D008               	goto	l879
  6982  00628C                     l3210:
  6983  00628C  501E               	movf	___fladd@a,w,c
  6984  00628E  5E1A               	subwf	___fladd@b,f,c
  6985  006290  501F               	movf	___fladd@a+1,w,c
  6986  006292  5A1B               	subwfb	___fladd@b+1,f,c
  6987  006294  5020               	movf	___fladd@a+2,w,c
  6988  006296  5A1C               	subwfb	___fladd@b+2,f,c
  6989  006298  5021               	movf	___fladd@a+3,w,c
  6990  00629A  5A1D               	subwfb	___fladd@b+3,f,c
  6991  00629C                     l879:
  6992  00629C  501A               	movf	___fladd@b,w,c
  6993  00629E  101B               	iorwf	___fladd@b+1,w,c
  6994  0062A0  101C               	iorwf	___fladd@b+2,w,c
  6995  0062A2  101D               	iorwf	___fladd@b+3,w,c
  6996  0062A4  A4D8               	btfss	status,2,c
  6997  0062A6  D01C               	goto	l3234
  6998  0062A8  5029               	movf	___fladd@grs,w,c
  6999  0062AA  A4D8               	btfss	status,2,c
  7000  0062AC  D019               	goto	l3234
  7001  0062AE  0E00               	movlw	0
  7002  0062B0  6E1A               	movwf	?___fladd,c
  7003  0062B2  0E00               	movlw	0
  7004  0062B4  6E1B               	movwf	?___fladd+1,c
  7005  0062B6  0E00               	movlw	0
  7006  0062B8  6E1C               	movwf	?___fladd+2,c
  7007  0062BA  0E00               	movlw	0
  7008  0062BC  6E1D               	movwf	?___fladd+3,c
  7009  0062BE  0012               	return	
  7010  0062C0                     l3218:
  7011  0062C0  90D8               	bcf	status,0,c
  7012  0062C2  361A               	rlcf	___fladd@b,f,c
  7013  0062C4  361B               	rlcf	___fladd@b+1,f,c
  7014  0062C6  361C               	rlcf	___fladd@b+2,f,c
  7015  0062C8  361D               	rlcf	___fladd@b+3,f,c
  7016  0062CA  BE29               	btfsc	___fladd@grs,7,c
  7017  0062CC  801A               	bsf	___fladd@b,0,c
  7018  0062CE  A029               	btfss	___fladd@grs,0,c
  7019  0062D0  D002               	goto	l3228
  7020  0062D2  80D8               	bsf	status,0,c
  7021  0062D4  D001               	goto	L10
  7022  0062D6                     l3228:
  7023  0062D6  90D8               	bcf	status,0,c
  7024  0062D8                     L10:
  7025  0062D8  3629               	rlcf	___fladd@grs,f,c
  7026  0062DA  5028               	movf	___fladd@bexp,w,c
  7027  0062DC  A4D8               	btfss	status,2,c
  7028  0062DE  0628               	decf	___fladd@bexp,f,c
  7029  0062E0                     l3234:
  7030  0062E0  AE1C               	btfss	___fladd@b+2,7,c
  7031  0062E2  D7EE               	goto	l3218
  7032  0062E4                     u3160:
  7033  0062E4  0E00               	movlw	0
  7034  0062E6  6E27               	movwf	___fladd@aexp,c
  7035  0062E8  AE29               	btfss	___fladd@grs,7,c
  7036  0062EA  D00B               	goto	l888
  7037  0062EC  C029  F022         	movff	___fladd@grs,??___fladd
  7038  0062F0  0E7F               	movlw	127
  7039  0062F2  1622               	andwf	??___fladd,f,c
  7040  0062F4  B4D8               	btfsc	status,2,c
  7041  0062F6  D003               	goto	l889
  7042  0062F8                     u3180:
  7043  0062F8  0E01               	movlw	1
  7044  0062FA  6E27               	movwf	___fladd@aexp,c
  7045  0062FC  D002               	goto	l888
  7046  0062FE                     l889:
  7047  0062FE  B01A               	btfsc	___fladd@b,0,c
  7048  006300  D7FB               	goto	u3180
  7049  006302                     l888:
  7050  006302  5027               	movf	___fladd@aexp,w,c
  7051  006304  B4D8               	btfsc	status,2,c
  7052  006306  D020               	goto	l3254
  7053  006308  0E01               	movlw	1
  7054  00630A  261A               	addwf	___fladd@b,f,c
  7055  00630C  0E00               	movlw	0
  7056  00630E  221B               	addwfc	___fladd@b+1,f,c
  7057  006310  221C               	addwfc	___fladd@b+2,f,c
  7058  006312  221D               	addwfc	___fladd@b+3,f,c
  7059  006314  A01D               	btfss	___fladd@b+3,0,c
  7060  006316  D018               	goto	l3254
  7061  006318  C01A  F022         	movff	___fladd@b,??___fladd
  7062  00631C  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  7063  006320  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  7064  006324  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  7065  006328  3425               	rlcf	??___fladd+3,w,c
  7066  00632A  3225               	rrcf	??___fladd+3,f,c
  7067  00632C  3224               	rrcf	??___fladd+2,f,c
  7068  00632E  3223               	rrcf	??___fladd+1,f,c
  7069  006330  3222               	rrcf	??___fladd,f,c
  7070  006332  C022  F01A         	movff	??___fladd,___fladd@b
  7071  006336  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  7072  00633A  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  7073  00633E  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  7074  006342  2828               	incf	___fladd@bexp,w,c
  7075  006344  A4D8               	btfss	status,2,c
  7076  006346  2A28               	incf	___fladd@bexp,f,c
  7077  006348                     l3254:
  7078  006348  2828               	incf	___fladd@bexp,w,c
  7079  00634A  B4D8               	btfsc	status,2,c
  7080  00634C  D003               	goto	u3240
  7081  00634E  5028               	movf	___fladd@bexp,w,c
  7082  006350  A4D8               	btfss	status,2,c
  7083  006352  D00D               	goto	l3262
  7084  006354                     u3240:
  7085  006354  0E00               	movlw	0
  7086  006356  6E1A               	movwf	___fladd@b,c
  7087  006358  0E00               	movlw	0
  7088  00635A  6E1B               	movwf	___fladd@b+1,c
  7089  00635C  0E00               	movlw	0
  7090  00635E  6E1C               	movwf	___fladd@b+2,c
  7091  006360  0E00               	movlw	0
  7092  006362  6E1D               	movwf	___fladd@b+3,c
  7093  006364  5028               	movf	___fladd@bexp,w,c
  7094  006366  A4D8               	btfss	status,2,c
  7095  006368  D002               	goto	l3262
  7096  00636A  0E00               	movlw	0
  7097  00636C  6E26               	movwf	___fladd@signs,c
  7098  00636E                     l3262:
  7099  00636E  A028               	btfss	___fladd@bexp,0,c
  7100  006370  D002               	goto	l3266
  7101  006372  8E1C               	bsf	___fladd@b+2,7,c
  7102  006374  D001               	goto	l3268
  7103  006376                     l3266:
  7104  006376  9E1C               	bcf	___fladd@b+2,7,c
  7105  006378                     l3268:
  7106  006378  90D8               	bcf	status,0,c
  7107  00637A  3028               	rrcf	___fladd@bexp,w,c
  7108  00637C  6E1D               	movwf	___fladd@b+3,c
  7109  00637E  BE26               	btfsc	___fladd@signs,7,c
  7110  006380  8E1D               	bsf	___fladd@b+3,7,c
  7111  006382  C01A  F01A         	movff	___fladd@b,?___fladd
  7112  006386  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  7113  00638A  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  7114  00638E  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  7115  006392  0012               	return		;funcret
  7116  006394                     __end_of___fladd:
  7117                           	opt callstack 0
  7118                           
  7119 ;; *************** function ___flneg *****************
  7120 ;; Defined at:
  7121 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  f1              4    0[COMRAM] unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4    0[COMRAM] unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7135 ;;      Params:         4       0       0       0       0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7138 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7139 ;;Total ram usage:        4 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_efgtoa
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text20
  7149  004BD4                     __ptext20:
  7150                           	opt callstack 0
  7151  004BD4                     ___flneg:
  7152                           	opt callstack 26
  7153                           
  7154                           ;incstack = 0
  7155  004BD4  5001               	movf	___flneg@f1,w,c
  7156  004BD6  1002               	iorwf	___flneg@f1+1,w,c
  7157  004BD8  1003               	iorwf	___flneg@f1+2,w,c
  7158  004BDA  1004               	iorwf	___flneg@f1+3,w,c
  7159  004BDC  B4D8               	btfsc	status,2,c
  7160  004BDE  D008               	goto	l3770
  7161  004BE0  0E00               	movlw	0
  7162  004BE2  1A01               	xorwf	___flneg@f1,f,c
  7163  004BE4  0E00               	movlw	0
  7164  004BE6  1A02               	xorwf	___flneg@f1+1,f,c
  7165  004BE8  0E00               	movlw	0
  7166  004BEA  1A03               	xorwf	___flneg@f1+2,f,c
  7167  004BEC  0E80               	movlw	128
  7168  004BEE  1A04               	xorwf	___flneg@f1+3,f,c
  7169  004BF0                     l3770:
  7170  004BF0  C001  F001         	movff	___flneg@f1,?___flneg
  7171  004BF4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7172  004BF8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7173  004BFC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7174  004C00  0012               	return		;funcret
  7175  004C02                     __end_of___flneg:
  7176                           	opt callstack 0
  7177                           
  7178 ;; *************** function ___flmul *****************
  7179 ;; Defined at:
  7180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  b               4    0[COMRAM] unsigned char 
  7183 ;;  a               4    4[COMRAM] unsigned char 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  prod            4   19[COMRAM] struct .
  7186 ;;  grs             4   13[COMRAM] unsigned long 
  7187 ;;  temp            2   23[COMRAM] struct .
  7188 ;;  bexp            1   18[COMRAM] unsigned char 
  7189 ;;  aexp            1   17[COMRAM] unsigned char 
  7190 ;;  sign            1   12[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  4    0[COMRAM] unsigned char 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, prodl, prodh
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7200 ;;      Params:         8       0       0       0       0       0       0       0       0
  7201 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7203 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:       25 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;;		_efgtoa
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text21
  7215  006394                     __ptext21:
  7216                           	opt callstack 0
  7217  006394                     ___flmul:
  7218                           	opt callstack 26
  7219                           
  7220                           ;incstack = 0
  7221  006394  5004               	movf	___flmul@b+3,w,c
  7222  006396  0B80               	andlw	128
  7223  006398  6E0D               	movwf	___flmul@sign,c
  7224  00639A  5004               	movf	___flmul@b+3,w,c
  7225  00639C  2404               	addwf	___flmul@b+3,w,c
  7226  00639E  6E13               	movwf	___flmul@bexp,c
  7227  0063A0  BE03               	btfsc	___flmul@b+2,7,c
  7228  0063A2  8013               	bsf	___flmul@bexp,0,c
  7229  0063A4  5013               	movf	___flmul@bexp,w,c
  7230  0063A6  B4D8               	btfsc	status,2,c
  7231  0063A8  D00D               	goto	l3526
  7232  0063AA  2813               	incf	___flmul@bexp,w,c
  7233  0063AC  A4D8               	btfss	status,2,c
  7234  0063AE  D008               	goto	l3524
  7235  0063B0  0E00               	movlw	0
  7236  0063B2  6E01               	movwf	___flmul@b,c
  7237  0063B4  0E00               	movlw	0
  7238  0063B6  6E02               	movwf	___flmul@b+1,c
  7239  0063B8  0E00               	movlw	0
  7240  0063BA  6E03               	movwf	___flmul@b+2,c
  7241  0063BC  0E00               	movlw	0
  7242  0063BE  6E04               	movwf	___flmul@b+3,c
  7243  0063C0                     l3524:
  7244  0063C0  8E03               	bsf	___flmul@b+2,7,c
  7245  0063C2  D008               	goto	l3528
  7246  0063C4                     l3526:
  7247  0063C4  0E00               	movlw	0
  7248  0063C6  6E01               	movwf	___flmul@b,c
  7249  0063C8  0E00               	movlw	0
  7250  0063CA  6E02               	movwf	___flmul@b+1,c
  7251  0063CC  0E00               	movlw	0
  7252  0063CE  6E03               	movwf	___flmul@b+2,c
  7253  0063D0  0E00               	movlw	0
  7254  0063D2  6E04               	movwf	___flmul@b+3,c
  7255  0063D4                     l3528:
  7256  0063D4  5008               	movf	___flmul@a+3,w,c
  7257  0063D6  0B80               	andlw	128
  7258  0063D8  1A0D               	xorwf	___flmul@sign,f,c
  7259  0063DA  5008               	movf	___flmul@a+3,w,c
  7260  0063DC  2408               	addwf	___flmul@a+3,w,c
  7261  0063DE  6E12               	movwf	___flmul@aexp,c
  7262  0063E0  BE07               	btfsc	___flmul@a+2,7,c
  7263  0063E2  8012               	bsf	___flmul@aexp,0,c
  7264  0063E4  5012               	movf	___flmul@aexp,w,c
  7265  0063E6  B4D8               	btfsc	status,2,c
  7266  0063E8  D00D               	goto	l3544
  7267  0063EA  2812               	incf	___flmul@aexp,w,c
  7268  0063EC  A4D8               	btfss	status,2,c
  7269  0063EE  D008               	goto	l3542
  7270  0063F0  0E00               	movlw	0
  7271  0063F2  6E05               	movwf	___flmul@a,c
  7272  0063F4  0E00               	movlw	0
  7273  0063F6  6E06               	movwf	___flmul@a+1,c
  7274  0063F8  0E00               	movlw	0
  7275  0063FA  6E07               	movwf	___flmul@a+2,c
  7276  0063FC  0E00               	movlw	0
  7277  0063FE  6E08               	movwf	___flmul@a+3,c
  7278  006400                     l3542:
  7279  006400  8E07               	bsf	___flmul@a+2,7,c
  7280  006402  D008               	goto	l948
  7281  006404                     l3544:
  7282  006404  0E00               	movlw	0
  7283  006406  6E05               	movwf	___flmul@a,c
  7284  006408  0E00               	movlw	0
  7285  00640A  6E06               	movwf	___flmul@a+1,c
  7286  00640C  0E00               	movlw	0
  7287  00640E  6E07               	movwf	___flmul@a+2,c
  7288  006410  0E00               	movlw	0
  7289  006412  6E08               	movwf	___flmul@a+3,c
  7290  006414                     l948:
  7291  006414  5012               	movf	___flmul@aexp,w,c
  7292  006416  B4D8               	btfsc	status,2,c
  7293  006418  D003               	goto	u3860
  7294  00641A  5013               	movf	___flmul@bexp,w,c
  7295  00641C  A4D8               	btfss	status,2,c
  7296  00641E  D009               	goto	l3552
  7297  006420                     u3860:
  7298  006420  0E00               	movlw	0
  7299  006422  6E01               	movwf	?___flmul,c
  7300  006424  0E00               	movlw	0
  7301  006426  6E02               	movwf	?___flmul+1,c
  7302  006428  0E00               	movlw	0
  7303  00642A  6E03               	movwf	?___flmul+2,c
  7304  00642C  0E00               	movlw	0
  7305  00642E  6E04               	movwf	?___flmul+3,c
  7306  006430  0012               	return	
  7307  006432                     l3552:
  7308  006432  5007               	movf	___flmul@a+2,w,c
  7309  006434  0201               	mulwf	___flmul@b,c
  7310  006436  CFF3 F018          	movff	prodl,___flmul@temp
  7311  00643A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7312  00643E  5018               	movf	___flmul@temp,w,c
  7313  006440  6E0E               	movwf	___flmul@grs,c
  7314  006442  6A0F               	clrf	___flmul@grs+1,c
  7315  006444  6A10               	clrf	___flmul@grs+2,c
  7316  006446  6A11               	clrf	___flmul@grs+3,c
  7317  006448  5019               	movf	___flmul@temp+1,w,c
  7318  00644A  6E14               	movwf	___flmul@prod,c
  7319  00644C  6A15               	clrf	___flmul@prod+1,c
  7320  00644E  6A16               	clrf	___flmul@prod+2,c
  7321  006450  6A17               	clrf	___flmul@prod+3,c
  7322  006452  5006               	movf	___flmul@a+1,w,c
  7323  006454  0202               	mulwf	___flmul@b+1,c
  7324  006456  CFF3 F018          	movff	prodl,___flmul@temp
  7325  00645A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7326  00645E  5018               	movf	___flmul@temp,w,c
  7327  006460  260E               	addwf	___flmul@grs,f,c
  7328  006462  0E00               	movlw	0
  7329  006464  220F               	addwfc	___flmul@grs+1,f,c
  7330  006466  2210               	addwfc	___flmul@grs+2,f,c
  7331  006468  2211               	addwfc	___flmul@grs+3,f,c
  7332  00646A  5019               	movf	___flmul@temp+1,w,c
  7333  00646C  2614               	addwf	___flmul@prod,f,c
  7334  00646E  0E00               	movlw	0
  7335  006470  2215               	addwfc	___flmul@prod+1,f,c
  7336  006472  2216               	addwfc	___flmul@prod+2,f,c
  7337  006474  2217               	addwfc	___flmul@prod+3,f,c
  7338  006476  5005               	movf	___flmul@a,w,c
  7339  006478  0203               	mulwf	___flmul@b+2,c
  7340  00647A  CFF3 F018          	movff	prodl,___flmul@temp
  7341  00647E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7342  006482  5018               	movf	___flmul@temp,w,c
  7343  006484  260E               	addwf	___flmul@grs,f,c
  7344  006486  0E00               	movlw	0
  7345  006488  220F               	addwfc	___flmul@grs+1,f,c
  7346  00648A  2210               	addwfc	___flmul@grs+2,f,c
  7347  00648C  2211               	addwfc	___flmul@grs+3,f,c
  7348  00648E  5019               	movf	___flmul@temp+1,w,c
  7349  006490  2614               	addwf	___flmul@prod,f,c
  7350  006492  0E00               	movlw	0
  7351  006494  2215               	addwfc	___flmul@prod+1,f,c
  7352  006496  2216               	addwfc	___flmul@prod+2,f,c
  7353  006498  2217               	addwfc	___flmul@prod+3,f,c
  7354  00649A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7355  00649E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7356  0064A2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7357  0064A6  6A0E               	clrf	___flmul@grs,c
  7358  0064A8  5005               	movf	___flmul@a,w,c
  7359  0064AA  0202               	mulwf	___flmul@b+1,c
  7360  0064AC  CFF3 F018          	movff	prodl,___flmul@temp
  7361  0064B0  CFF4 F019          	movff	prodh,___flmul@temp+1
  7362  0064B4  5018               	movf	___flmul@temp,w,c
  7363  0064B6  260E               	addwf	___flmul@grs,f,c
  7364  0064B8  5019               	movf	___flmul@temp+1,w,c
  7365  0064BA  220F               	addwfc	___flmul@grs+1,f,c
  7366  0064BC  0E00               	movlw	0
  7367  0064BE  2210               	addwfc	___flmul@grs+2,f,c
  7368  0064C0  0E00               	movlw	0
  7369  0064C2  2211               	addwfc	___flmul@grs+3,f,c
  7370  0064C4  5006               	movf	___flmul@a+1,w,c
  7371  0064C6  0201               	mulwf	___flmul@b,c
  7372  0064C8  CFF3 F018          	movff	prodl,___flmul@temp
  7373  0064CC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7374  0064D0  5018               	movf	___flmul@temp,w,c
  7375  0064D2  260E               	addwf	___flmul@grs,f,c
  7376  0064D4  5019               	movf	___flmul@temp+1,w,c
  7377  0064D6  220F               	addwfc	___flmul@grs+1,f,c
  7378  0064D8  0E00               	movlw	0
  7379  0064DA  2210               	addwfc	___flmul@grs+2,f,c
  7380  0064DC  0E00               	movlw	0
  7381  0064DE  2211               	addwfc	___flmul@grs+3,f,c
  7382  0064E0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7383  0064E4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7384  0064E8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7385  0064EC  6A0E               	clrf	___flmul@grs,c
  7386  0064EE  5005               	movf	___flmul@a,w,c
  7387  0064F0  0201               	mulwf	___flmul@b,c
  7388  0064F2  CFF3 F018          	movff	prodl,___flmul@temp
  7389  0064F6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7390  0064FA  5018               	movf	___flmul@temp,w,c
  7391  0064FC  260E               	addwf	___flmul@grs,f,c
  7392  0064FE  5019               	movf	___flmul@temp+1,w,c
  7393  006500  220F               	addwfc	___flmul@grs+1,f,c
  7394  006502  0E00               	movlw	0
  7395  006504  2210               	addwfc	___flmul@grs+2,f,c
  7396  006506  0E00               	movlw	0
  7397  006508  2211               	addwfc	___flmul@grs+3,f,c
  7398  00650A  5007               	movf	___flmul@a+2,w,c
  7399  00650C  0202               	mulwf	___flmul@b+1,c
  7400  00650E  CFF3 F018          	movff	prodl,___flmul@temp
  7401  006512  CFF4 F019          	movff	prodh,___flmul@temp+1
  7402  006516  5018               	movf	___flmul@temp,w,c
  7403  006518  2614               	addwf	___flmul@prod,f,c
  7404  00651A  5019               	movf	___flmul@temp+1,w,c
  7405  00651C  2215               	addwfc	___flmul@prod+1,f,c
  7406  00651E  0E00               	movlw	0
  7407  006520  2216               	addwfc	___flmul@prod+2,f,c
  7408  006522  0E00               	movlw	0
  7409  006524  2217               	addwfc	___flmul@prod+3,f,c
  7410  006526  5006               	movf	___flmul@a+1,w,c
  7411  006528  0203               	mulwf	___flmul@b+2,c
  7412  00652A  CFF3 F018          	movff	prodl,___flmul@temp
  7413  00652E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7414  006532  5018               	movf	___flmul@temp,w,c
  7415  006534  2614               	addwf	___flmul@prod,f,c
  7416  006536  5019               	movf	___flmul@temp+1,w,c
  7417  006538  2215               	addwfc	___flmul@prod+1,f,c
  7418  00653A  0E00               	movlw	0
  7419  00653C  2216               	addwfc	___flmul@prod+2,f,c
  7420  00653E  0E00               	movlw	0
  7421  006540  2217               	addwfc	___flmul@prod+3,f,c
  7422  006542  5007               	movf	___flmul@a+2,w,c
  7423  006544  0203               	mulwf	___flmul@b+2,c
  7424  006546  CFF3 F018          	movff	prodl,___flmul@temp
  7425  00654A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7426  00654E  5018               	movf	___flmul@temp,w,c
  7427  006550  6E09               	movwf	??___flmul& (0+255),c
  7428  006552  5019               	movf	___flmul@temp+1,w,c
  7429  006554  6E0A               	movwf	(??___flmul+1)& (0+255),c
  7430  006556  6A0B               	clrf	(??___flmul+2)& (0+255),c
  7431  006558  6A0C               	clrf	(??___flmul+3)& (0+255),c
  7432  00655A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7433  00655E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7434  006562  C009  F00A         	movff	??___flmul,??___flmul+1
  7435  006566  6A09               	clrf	??___flmul,c
  7436  006568  5009               	movf	??___flmul,w,c
  7437  00656A  2614               	addwf	___flmul@prod,f,c
  7438  00656C  500A               	movf	??___flmul+1,w,c
  7439  00656E  2215               	addwfc	___flmul@prod+1,f,c
  7440  006570  500B               	movf	??___flmul+2,w,c
  7441  006572  2216               	addwfc	___flmul@prod+2,f,c
  7442  006574  500C               	movf	??___flmul+3,w,c
  7443  006576  2217               	addwfc	___flmul@prod+3,f,c
  7444  006578  C00E  F009         	movff	___flmul@grs,??___flmul
  7445  00657C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7446  006580  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7447  006584  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7448  006588  0E19               	movlw	25
  7449  00658A  D005               	goto	u3870
  7450  00658C                     u3875:
  7451  00658C  90D8               	bcf	status,0,c
  7452  00658E  320C               	rrcf	??___flmul+3,f,c
  7453  006590  320B               	rrcf	??___flmul+2,f,c
  7454  006592  320A               	rrcf	??___flmul+1,f,c
  7455  006594  3209               	rrcf	??___flmul,f,c
  7456  006596                     u3870:
  7457  006596  2EE8               	decfsz	wreg,f,c
  7458  006598  D7F9               	goto	u3875
  7459  00659A  5009               	movf	??___flmul,w,c
  7460  00659C  2614               	addwf	___flmul@prod,f,c
  7461  00659E  500A               	movf	??___flmul+1,w,c
  7462  0065A0  2215               	addwfc	___flmul@prod+1,f,c
  7463  0065A2  500B               	movf	??___flmul+2,w,c
  7464  0065A4  2216               	addwfc	___flmul@prod+2,f,c
  7465  0065A6  500C               	movf	??___flmul+3,w,c
  7466  0065A8  2217               	addwfc	___flmul@prod+3,f,c
  7467  0065AA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7468  0065AE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7469  0065B2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7470  0065B6  6A0E               	clrf	___flmul@grs,c
  7471  0065B8  5012               	movf	___flmul@aexp,w,c
  7472  0065BA  C013  F009         	movff	___flmul@bexp,??___flmul
  7473  0065BE  6A0A               	clrf	(??___flmul+1)& (0+255),c
  7474  0065C0  2609               	addwf	??___flmul,f,c
  7475  0065C2  0E00               	movlw	0
  7476  0065C4  220A               	addwfc	??___flmul+1,f,c
  7477  0065C6  0E82               	movlw	130
  7478  0065C8  2409               	addwf	??___flmul,w,c
  7479  0065CA  6E18               	movwf	___flmul@temp,c
  7480  0065CC  0EFF               	movlw	255
  7481  0065CE  200A               	addwfc	??___flmul+1,w,c
  7482  0065D0  6E19               	movwf	___flmul@temp+1,c
  7483  0065D2  D00F               	goto	l3600
  7484  0065D4                     l3594:
  7485  0065D4  90D8               	bcf	status,0,c
  7486  0065D6  3614               	rlcf	___flmul@prod,f,c
  7487  0065D8  3615               	rlcf	___flmul@prod+1,f,c
  7488  0065DA  3616               	rlcf	___flmul@prod+2,f,c
  7489  0065DC  3617               	rlcf	___flmul@prod+3,f,c
  7490  0065DE  BE11               	btfsc	___flmul@grs+3,7,c
  7491  0065E0  8014               	bsf	___flmul@prod,0,c
  7492  0065E2  90D8               	bcf	status,0,c
  7493  0065E4  360E               	rlcf	___flmul@grs,f,c
  7494  0065E6  360F               	rlcf	___flmul@grs+1,f,c
  7495  0065E8  3610               	rlcf	___flmul@grs+2,f,c
  7496  0065EA  3611               	rlcf	___flmul@grs+3,f,c
  7497  0065EC  0618               	decf	___flmul@temp,f,c
  7498  0065EE  A0D8               	btfss	status,0,c
  7499  0065F0  0619               	decf	___flmul@temp+1,f,c
  7500  0065F2                     l3600:
  7501  0065F2  AE16               	btfss	___flmul@prod+2,7,c
  7502  0065F4  D7EF               	goto	l3594
  7503  0065F6  0E00               	movlw	0
  7504  0065F8  6E12               	movwf	___flmul@aexp,c
  7505  0065FA  AE11               	btfss	___flmul@grs+3,7,c
  7506  0065FC  D017               	goto	l957
  7507  0065FE  0EFF               	movlw	255
  7508  006600  140E               	andwf	___flmul@grs,w,c
  7509  006602  6E09               	movwf	??___flmul& (0+255),c
  7510  006604  0EFF               	movlw	255
  7511  006606  140F               	andwf	___flmul@grs+1,w,c
  7512  006608  6E0A               	movwf	(??___flmul+1)& (0+255),c
  7513  00660A  0EFF               	movlw	255
  7514  00660C  1410               	andwf	___flmul@grs+2,w,c
  7515  00660E  6E0B               	movwf	(??___flmul+2)& (0+255),c
  7516  006610  0E7F               	movlw	127
  7517  006612  1411               	andwf	___flmul@grs+3,w,c
  7518  006614  6E0C               	movwf	(??___flmul+3)& (0+255),c
  7519  006616  5009               	movf	??___flmul,w,c
  7520  006618  100A               	iorwf	??___flmul+1,w,c
  7521  00661A  100B               	iorwf	??___flmul+2,w,c
  7522  00661C  100C               	iorwf	??___flmul+3,w,c
  7523  00661E  B4D8               	btfsc	status,2,c
  7524  006620  D003               	goto	l958
  7525  006622                     u3910:
  7526  006622  0E01               	movlw	1
  7527  006624  6E12               	movwf	___flmul@aexp,c
  7528  006626  D002               	goto	l957
  7529  006628                     l958:
  7530  006628  B014               	btfsc	___flmul@prod,0,c
  7531  00662A  D7FB               	goto	u3910
  7532  00662C                     l957:
  7533  00662C  5012               	movf	___flmul@aexp,w,c
  7534  00662E  B4D8               	btfsc	status,2,c
  7535  006630  D01F               	goto	l3620
  7536  006632  0E01               	movlw	1
  7537  006634  2614               	addwf	___flmul@prod,f,c
  7538  006636  0E00               	movlw	0
  7539  006638  2215               	addwfc	___flmul@prod+1,f,c
  7540  00663A  2216               	addwfc	___flmul@prod+2,f,c
  7541  00663C  2217               	addwfc	___flmul@prod+3,f,c
  7542  00663E  A017               	btfss	___flmul@prod+3,0,c
  7543  006640  D017               	goto	l3620
  7544  006642  C014  F009         	movff	___flmul@prod,??___flmul
  7545  006646  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7546  00664A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7547  00664E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7548  006652  340C               	rlcf	??___flmul+3,w,c
  7549  006654  320C               	rrcf	??___flmul+3,f,c
  7550  006656  320B               	rrcf	??___flmul+2,f,c
  7551  006658  320A               	rrcf	??___flmul+1,f,c
  7552  00665A  3209               	rrcf	??___flmul,f,c
  7553  00665C  C009  F014         	movff	??___flmul,___flmul@prod
  7554  006660  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7555  006664  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7556  006668  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7557  00666C  4A18               	infsnz	___flmul@temp,f,c
  7558  00666E  2A19               	incf	___flmul@temp+1,f,c
  7559  006670                     l3620:
  7560  006670  BE19               	btfsc	___flmul@temp+1,7,c
  7561  006672  D00D               	goto	l3624
  7562  006674  5019               	movf	___flmul@temp+1,w,c
  7563  006676  E103               	bnz	u3950
  7564  006678  2818               	incf	___flmul@temp,w,c
  7565  00667A  A0D8               	btfss	status,0,c
  7566  00667C  D008               	goto	l3624
  7567  00667E                     u3950:
  7568  00667E  0E00               	movlw	0
  7569  006680  6E14               	movwf	___flmul@prod,c
  7570  006682  0E00               	movlw	0
  7571  006684  6E15               	movwf	___flmul@prod+1,c
  7572  006686  0E80               	movlw	128
  7573  006688  6E16               	movwf	___flmul@prod+2,c
  7574  00668A  0E7F               	movlw	127
  7575  00668C  D020               	goto	L11
  7576  00668E                     l3624:
  7577  00668E  BE19               	btfsc	___flmul@temp+1,7,c
  7578  006690  D005               	goto	u3960
  7579  006692  5019               	movf	___flmul@temp+1,w,c
  7580  006694  E10E               	bnz	l965
  7581  006696  0418               	decf	___flmul@temp,w,c
  7582  006698  B0D8               	btfsc	status,0,c
  7583  00669A  D00B               	goto	l965
  7584  00669C                     u3960:
  7585  00669C  0E00               	movlw	0
  7586  00669E  6E14               	movwf	___flmul@prod,c
  7587  0066A0  0E00               	movlw	0
  7588  0066A2  6E15               	movwf	___flmul@prod+1,c
  7589  0066A4  0E00               	movlw	0
  7590  0066A6  6E16               	movwf	___flmul@prod+2,c
  7591  0066A8  0E00               	movlw	0
  7592  0066AA  6E17               	movwf	___flmul@prod+3,c
  7593  0066AC  0E00               	movlw	0
  7594  0066AE  6E0D               	movwf	___flmul@sign,c
  7595  0066B0  D00F               	goto	l3636
  7596  0066B2                     l965:
  7597  0066B2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7598  0066B6  0EFF               	movlw	255
  7599  0066B8  1614               	andwf	___flmul@prod,f,c
  7600  0066BA  0EFF               	movlw	255
  7601  0066BC  1615               	andwf	___flmul@prod+1,f,c
  7602  0066BE  0E7F               	movlw	127
  7603  0066C0  1616               	andwf	___flmul@prod+2,f,c
  7604  0066C2  0E00               	movlw	0
  7605  0066C4  1617               	andwf	___flmul@prod+3,f,c
  7606  0066C6  B013               	btfsc	___flmul@bexp,0,c
  7607  0066C8  8E16               	bsf	___flmul@prod+2,7,c
  7608  0066CA  90D8               	bcf	status,0,c
  7609  0066CC  3013               	rrcf	___flmul@bexp,w,c
  7610  0066CE                     L11:
  7611  0066CE  6E17               	movwf	___flmul@prod+3,c
  7612  0066D0                     l3636:
  7613  0066D0  500D               	movf	___flmul@sign,w,c
  7614  0066D2  1217               	iorwf	___flmul@prod+3,f,c
  7615  0066D4  C014  F001         	movff	___flmul@prod,?___flmul
  7616  0066D8  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7617  0066DC  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7618  0066E0  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7619  0066E4  0012               	return		;funcret
  7620  0066E6                     __end_of___flmul:
  7621                           	opt callstack 0
  7622                           
  7623 ;; *************** function ___flge *****************
  7624 ;; Defined at:
  7625 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  ff1             4   25[COMRAM] unsigned char 
  7628 ;;  ff2             4   29[COMRAM] unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;		None               void
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7640 ;;      Params:         8       0       0       0       0       0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7642 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7643 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7644 ;;Total ram usage:       12 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;;		_efgtoa
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text22
  7655  00542A                     __ptext22:
  7656                           	opt callstack 0
  7657  00542A                     ___flge:
  7658                           	opt callstack 26
  7659                           
  7660                           ;incstack = 0
  7661  00542A  0E00               	movlw	0
  7662  00542C  141A               	andwf	___flge@ff1,w,c
  7663  00542E  6E22               	movwf	??___flge& (0+255),c
  7664  005430  0E00               	movlw	0
  7665  005432  141B               	andwf	___flge@ff1+1,w,c
  7666  005434  6E23               	movwf	(??___flge+1)& (0+255),c
  7667  005436  0E80               	movlw	128
  7668  005438  141C               	andwf	___flge@ff1+2,w,c
  7669  00543A  6E24               	movwf	(??___flge+2)& (0+255),c
  7670  00543C  0E7F               	movlw	127
  7671  00543E  141D               	andwf	___flge@ff1+3,w,c
  7672  005440  6E25               	movwf	(??___flge+3)& (0+255),c
  7673  005442  5022               	movf	??___flge,w,c
  7674  005444  1023               	iorwf	??___flge+1,w,c
  7675  005446  1024               	iorwf	??___flge+2,w,c
  7676  005448  1025               	iorwf	??___flge+3,w,c
  7677  00544A  A4D8               	btfss	status,2,c
  7678  00544C  D008               	goto	l3748
  7679  00544E  0E00               	movlw	0
  7680  005450  6E1A               	movwf	___flge@ff1,c
  7681  005452  0E00               	movlw	0
  7682  005454  6E1B               	movwf	___flge@ff1+1,c
  7683  005456  0E00               	movlw	0
  7684  005458  6E1C               	movwf	___flge@ff1+2,c
  7685  00545A  0E00               	movlw	0
  7686  00545C  6E1D               	movwf	___flge@ff1+3,c
  7687  00545E                     l3748:
  7688  00545E  0E00               	movlw	0
  7689  005460  141E               	andwf	___flge@ff2,w,c
  7690  005462  6E22               	movwf	??___flge& (0+255),c
  7691  005464  0E00               	movlw	0
  7692  005466  141F               	andwf	___flge@ff2+1,w,c
  7693  005468  6E23               	movwf	(??___flge+1)& (0+255),c
  7694  00546A  0E80               	movlw	128
  7695  00546C  1420               	andwf	___flge@ff2+2,w,c
  7696  00546E  6E24               	movwf	(??___flge+2)& (0+255),c
  7697  005470  0E7F               	movlw	127
  7698  005472  1421               	andwf	___flge@ff2+3,w,c
  7699  005474  6E25               	movwf	(??___flge+3)& (0+255),c
  7700  005476  5022               	movf	??___flge,w,c
  7701  005478  1023               	iorwf	??___flge+1,w,c
  7702  00547A  1024               	iorwf	??___flge+2,w,c
  7703  00547C  1025               	iorwf	??___flge+3,w,c
  7704  00547E  A4D8               	btfss	status,2,c
  7705  005480  D008               	goto	l3752
  7706  005482  0E00               	movlw	0
  7707  005484  6E1E               	movwf	___flge@ff2,c
  7708  005486  0E00               	movlw	0
  7709  005488  6E1F               	movwf	___flge@ff2+1,c
  7710  00548A  0E00               	movlw	0
  7711  00548C  6E20               	movwf	___flge@ff2+2,c
  7712  00548E  0E00               	movlw	0
  7713  005490  6E21               	movwf	___flge@ff2+3,c
  7714  005492                     l3752:
  7715  005492  AE1D               	btfss	___flge@ff1+3,7,c
  7716  005494  D009               	goto	l3756
  7717  005496  6C1A               	negf	___flge@ff1,c
  7718  005498  1E1B               	comf	___flge@ff1+1,f,c
  7719  00549A  B0D8               	btfsc	status,0,c
  7720  00549C  2A1B               	incf	___flge@ff1+1,f,c
  7721  00549E  1E1C               	comf	___flge@ff1+2,f,c
  7722  0054A0  B0D8               	btfsc	status,0,c
  7723  0054A2  2A1C               	incf	___flge@ff1+2,f,c
  7724  0054A4  0E80               	movlw	128
  7725  0054A6  561D               	subfwb	___flge@ff1+3,f,c
  7726  0054A8                     l3756:
  7727  0054A8  AE21               	btfss	___flge@ff2+3,7,c
  7728  0054AA  D009               	goto	l599
  7729  0054AC  6C1E               	negf	___flge@ff2,c
  7730  0054AE  1E1F               	comf	___flge@ff2+1,f,c
  7731  0054B0  B0D8               	btfsc	status,0,c
  7732  0054B2  2A1F               	incf	___flge@ff2+1,f,c
  7733  0054B4  1E20               	comf	___flge@ff2+2,f,c
  7734  0054B6  B0D8               	btfsc	status,0,c
  7735  0054B8  2A20               	incf	___flge@ff2+2,f,c
  7736  0054BA  0E80               	movlw	128
  7737  0054BC  5621               	subfwb	___flge@ff2+3,f,c
  7738  0054BE                     l599:
  7739  0054BE  0E00               	movlw	0
  7740  0054C0  1A1A               	xorwf	___flge@ff1,f,c
  7741  0054C2  0E00               	movlw	0
  7742  0054C4  1A1B               	xorwf	___flge@ff1+1,f,c
  7743  0054C6  0E00               	movlw	0
  7744  0054C8  1A1C               	xorwf	___flge@ff1+2,f,c
  7745  0054CA  0E80               	movlw	128
  7746  0054CC  1A1D               	xorwf	___flge@ff1+3,f,c
  7747  0054CE  0E00               	movlw	0
  7748  0054D0  1A1E               	xorwf	___flge@ff2,f,c
  7749  0054D2  0E00               	movlw	0
  7750  0054D4  1A1F               	xorwf	___flge@ff2+1,f,c
  7751  0054D6  0E00               	movlw	0
  7752  0054D8  1A20               	xorwf	___flge@ff2+2,f,c
  7753  0054DA  0E80               	movlw	128
  7754  0054DC  1A21               	xorwf	___flge@ff2+3,f,c
  7755  0054DE  501E               	movf	___flge@ff2,w,c
  7756  0054E0  5C1A               	subwf	___flge@ff1,w,c
  7757  0054E2  501F               	movf	___flge@ff2+1,w,c
  7758  0054E4  581B               	subwfb	___flge@ff1+1,w,c
  7759  0054E6  5020               	movf	___flge@ff2+2,w,c
  7760  0054E8  581C               	subwfb	___flge@ff1+2,w,c
  7761  0054EA  5021               	movf	___flge@ff2+3,w,c
  7762  0054EC  581D               	subwfb	___flge@ff1+3,w,c
  7763  0054EE  B0D8               	btfsc	status,0,c
  7764  0054F0  D002               	goto	l3762
  7765  0054F2  90D8               	bcf	status,0,c
  7766  0054F4  0012               	return	
  7767  0054F6                     l3762:
  7768  0054F6  80D8               	bsf	status,0,c
  7769  0054F8  0012               	return		;funcret
  7770  0054FA                     __end_of___flge:
  7771                           	opt callstack 0
  7772                           
  7773 ;; *************** function ___fleq *****************
  7774 ;; Defined at:
  7775 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  ff1             4    0[COMRAM] unsigned char 
  7778 ;;  ff2             4    4[COMRAM] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;		None               void
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7790 ;;      Params:         8       0       0       0       0       0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7792 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7793 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7794 ;;Total ram usage:       12 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_efgtoa
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text23
  7804  00503E                     __ptext23:
  7805                           	opt callstack 0
  7806  00503E                     ___fleq:
  7807                           	opt callstack 26
  7808                           
  7809                           ;incstack = 0
  7810  00503E  0E00               	movlw	0
  7811  005040  1401               	andwf	___fleq@ff1,w,c
  7812  005042  6E09               	movwf	??___fleq& (0+255),c
  7813  005044  0E00               	movlw	0
  7814  005046  1402               	andwf	___fleq@ff1+1,w,c
  7815  005048  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7816  00504A  0E80               	movlw	128
  7817  00504C  1403               	andwf	___fleq@ff1+2,w,c
  7818  00504E  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7819  005050  0E7F               	movlw	127
  7820  005052  1404               	andwf	___fleq@ff1+3,w,c
  7821  005054  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7822  005056  5009               	movf	??___fleq,w,c
  7823  005058  100A               	iorwf	??___fleq+1,w,c
  7824  00505A  100B               	iorwf	??___fleq+2,w,c
  7825  00505C  100C               	iorwf	??___fleq+3,w,c
  7826  00505E  A4D8               	btfss	status,2,c
  7827  005060  D008               	goto	l3732
  7828  005062  0E00               	movlw	0
  7829  005064  6E01               	movwf	___fleq@ff1,c
  7830  005066  0E00               	movlw	0
  7831  005068  6E02               	movwf	___fleq@ff1+1,c
  7832  00506A  0E00               	movlw	0
  7833  00506C  6E03               	movwf	___fleq@ff1+2,c
  7834  00506E  0E00               	movlw	0
  7835  005070  6E04               	movwf	___fleq@ff1+3,c
  7836  005072                     l3732:
  7837  005072  0E00               	movlw	0
  7838  005074  1405               	andwf	___fleq@ff2,w,c
  7839  005076  6E09               	movwf	??___fleq& (0+255),c
  7840  005078  0E00               	movlw	0
  7841  00507A  1406               	andwf	___fleq@ff2+1,w,c
  7842  00507C  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7843  00507E  0E80               	movlw	128
  7844  005080  1407               	andwf	___fleq@ff2+2,w,c
  7845  005082  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7846  005084  0E7F               	movlw	127
  7847  005086  1408               	andwf	___fleq@ff2+3,w,c
  7848  005088  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7849  00508A  5009               	movf	??___fleq,w,c
  7850  00508C  100A               	iorwf	??___fleq+1,w,c
  7851  00508E  100B               	iorwf	??___fleq+2,w,c
  7852  005090  100C               	iorwf	??___fleq+3,w,c
  7853  005092  A4D8               	btfss	status,2,c
  7854  005094  D008               	goto	l3736
  7855  005096  0E00               	movlw	0
  7856  005098  6E05               	movwf	___fleq@ff2,c
  7857  00509A  0E00               	movlw	0
  7858  00509C  6E06               	movwf	___fleq@ff2+1,c
  7859  00509E  0E00               	movlw	0
  7860  0050A0  6E07               	movwf	___fleq@ff2+2,c
  7861  0050A2  0E00               	movlw	0
  7862  0050A4  6E08               	movwf	___fleq@ff2+3,c
  7863  0050A6                     l3736:
  7864  0050A6  5005               	movf	___fleq@ff2,w,c
  7865  0050A8  1801               	xorwf	___fleq@ff1,w,c
  7866  0050AA  E10A               	bnz	u4120
  7867  0050AC  5006               	movf	___fleq@ff2+1,w,c
  7868  0050AE  1802               	xorwf	___fleq@ff1+1,w,c
  7869  0050B0  E107               	bnz	u4120
  7870  0050B2  5007               	movf	___fleq@ff2+2,w,c
  7871  0050B4  1803               	xorwf	___fleq@ff1+2,w,c
  7872  0050B6  E104               	bnz	u4120
  7873  0050B8  5008               	movf	___fleq@ff2+3,w,c
  7874  0050BA  1804               	xorwf	___fleq@ff1+3,w,c
  7875  0050BC  B4D8               	btfsc	status,2,c
  7876  0050BE  D002               	goto	l3740
  7877  0050C0                     u4120:
  7878  0050C0  90D8               	bcf	status,0,c
  7879  0050C2  0012               	return	
  7880  0050C4                     l3740:
  7881  0050C4  80D8               	bsf	status,0,c
  7882  0050C6  0012               	return		;funcret
  7883  0050C8                     __end_of___fleq:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function ___fldiv *****************
  7887 ;; Defined at:
  7888 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  b               4   25[COMRAM] unsigned char 
  7891 ;;  a               4   29[COMRAM] unsigned char 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  grs             4   44[COMRAM] unsigned long 
  7894 ;;  rem             4   37[COMRAM] unsigned long 
  7895 ;;  new_exp         2   42[COMRAM] short 
  7896 ;;  aexp            1   49[COMRAM] unsigned char 
  7897 ;;  bexp            1   48[COMRAM] unsigned char 
  7898 ;;  sign            1   41[COMRAM] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  4   25[COMRAM] unsigned char 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7908 ;;      Params:         8       0       0       0       0       0       0       0       0
  7909 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7910 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7911 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7912 ;;Total ram usage:       25 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_main
  7918 ;;		_efgtoa
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text24
  7923  005E00                     __ptext24:
  7924                           	opt callstack 0
  7925  005E00                     ___fldiv:
  7926                           	opt callstack 26
  7927                           
  7928                           ;incstack = 0
  7929  005E00  501D               	movf	___fldiv@b+3,w,c
  7930  005E02  0B80               	andlw	128
  7931  005E04  6E2A               	movwf	___fldiv@sign,c
  7932  005E06  501D               	movf	___fldiv@b+3,w,c
  7933  005E08  241D               	addwf	___fldiv@b+3,w,c
  7934  005E0A  6E31               	movwf	___fldiv@bexp,c
  7935  005E0C  BE1C               	btfsc	___fldiv@b+2,7,c
  7936  005E0E  8031               	bsf	___fldiv@bexp,0,c
  7937  005E10  5031               	movf	___fldiv@bexp,w,c
  7938  005E12  B4D8               	btfsc	status,2,c
  7939  005E14  D00D               	goto	l3390
  7940  005E16  2831               	incf	___fldiv@bexp,w,c
  7941  005E18  A4D8               	btfss	status,2,c
  7942  005E1A  D008               	goto	l3386
  7943  005E1C  0E00               	movlw	0
  7944  005E1E  6E1A               	movwf	___fldiv@b,c
  7945  005E20  0E00               	movlw	0
  7946  005E22  6E1B               	movwf	___fldiv@b+1,c
  7947  005E24  0E00               	movlw	0
  7948  005E26  6E1C               	movwf	___fldiv@b+2,c
  7949  005E28  0E00               	movlw	0
  7950  005E2A  6E1D               	movwf	___fldiv@b+3,c
  7951  005E2C                     l3386:
  7952  005E2C  8E1C               	bsf	___fldiv@b+2,7,c
  7953  005E2E  D006               	goto	L12
  7954  005E30                     l3390:
  7955  005E30  0E00               	movlw	0
  7956  005E32  6E1A               	movwf	___fldiv@b,c
  7957  005E34  0E00               	movlw	0
  7958  005E36  6E1B               	movwf	___fldiv@b+1,c
  7959  005E38  0E00               	movlw	0
  7960  005E3A  6E1C               	movwf	___fldiv@b+2,c
  7961  005E3C                     L12:
  7962  005E3C  0E00               	movlw	0
  7963  005E3E  6E1D               	movwf	___fldiv@b+3,c
  7964  005E40  5021               	movf	___fldiv@a+3,w,c
  7965  005E42  0B80               	andlw	128
  7966  005E44  1A2A               	xorwf	___fldiv@sign,f,c
  7967  005E46  5021               	movf	___fldiv@a+3,w,c
  7968  005E48  2421               	addwf	___fldiv@a+3,w,c
  7969  005E4A  6E32               	movwf	___fldiv@aexp,c
  7970  005E4C  BE20               	btfsc	___fldiv@a+2,7,c
  7971  005E4E  8032               	bsf	___fldiv@aexp,0,c
  7972  005E50  5032               	movf	___fldiv@aexp,w,c
  7973  005E52  B4D8               	btfsc	status,2,c
  7974  005E54  D00D               	goto	l3410
  7975  005E56  2832               	incf	___fldiv@aexp,w,c
  7976  005E58  A4D8               	btfss	status,2,c
  7977  005E5A  D008               	goto	l3406
  7978  005E5C  0E00               	movlw	0
  7979  005E5E  6E1E               	movwf	___fldiv@a,c
  7980  005E60  0E00               	movlw	0
  7981  005E62  6E1F               	movwf	___fldiv@a+1,c
  7982  005E64  0E00               	movlw	0
  7983  005E66  6E20               	movwf	___fldiv@a+2,c
  7984  005E68  0E00               	movlw	0
  7985  005E6A  6E21               	movwf	___fldiv@a+3,c
  7986  005E6C                     l3406:
  7987  005E6C  8E20               	bsf	___fldiv@a+2,7,c
  7988  005E6E  D006               	goto	L13
  7989  005E70                     l3410:
  7990  005E70  0E00               	movlw	0
  7991  005E72  6E1E               	movwf	___fldiv@a,c
  7992  005E74  0E00               	movlw	0
  7993  005E76  6E1F               	movwf	___fldiv@a+1,c
  7994  005E78  0E00               	movlw	0
  7995  005E7A  6E20               	movwf	___fldiv@a+2,c
  7996  005E7C                     L13:
  7997  005E7C  0E00               	movlw	0
  7998  005E7E  6E21               	movwf	___fldiv@a+3,c
  7999  005E80  501E               	movf	___fldiv@a,w,c
  8000  005E82  101F               	iorwf	___fldiv@a+1,w,c
  8001  005E84  1020               	iorwf	___fldiv@a+2,w,c
  8002  005E86  1021               	iorwf	___fldiv@a+3,w,c
  8003  005E88  A4D8               	btfss	status,2,c
  8004  005E8A  D017               	goto	l3424
  8005  005E8C  0E00               	movlw	0
  8006  005E8E  6E1A               	movwf	___fldiv@b,c
  8007  005E90  0E00               	movlw	0
  8008  005E92  6E1B               	movwf	___fldiv@b+1,c
  8009  005E94  0E00               	movlw	0
  8010  005E96  6E1C               	movwf	___fldiv@b+2,c
  8011  005E98  0E00               	movlw	0
  8012  005E9A  6E1D               	movwf	___fldiv@b+3,c
  8013  005E9C  0E80               	movlw	128
  8014  005E9E  121C               	iorwf	___fldiv@b+2,f,c
  8015  005EA0  0E7F               	movlw	127
  8016  005EA2  121D               	iorwf	___fldiv@b+3,f,c
  8017  005EA4                     l3418:
  8018  005EA4  502A               	movf	___fldiv@sign,w,c
  8019  005EA6  121D               	iorwf	___fldiv@b+3,f,c
  8020  005EA8  C01A  F01A         	movff	___fldiv@b,?___fldiv
  8021  005EAC  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  8022  005EB0  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  8023  005EB4  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  8024  005EB8  0012               	return	
  8025  005EBA                     l3424:
  8026  005EBA  5031               	movf	___fldiv@bexp,w,c
  8027  005EBC  A4D8               	btfss	status,2,c
  8028  005EBE  D009               	goto	l3432
  8029  005EC0  0E00               	movlw	0
  8030  005EC2  6E1A               	movwf	?___fldiv,c
  8031  005EC4  0E00               	movlw	0
  8032  005EC6  6E1B               	movwf	?___fldiv+1,c
  8033  005EC8  0E00               	movlw	0
  8034  005ECA  6E1C               	movwf	?___fldiv+2,c
  8035  005ECC  0E00               	movlw	0
  8036  005ECE  6E1D               	movwf	?___fldiv+3,c
  8037  005ED0  0012               	return	
  8038  005ED2                     l3432:
  8039  005ED2  5032               	movf	___fldiv@aexp,w,c
  8040  005ED4  C031  F022         	movff	___fldiv@bexp,??___fldiv
  8041  005ED8  6A23               	clrf	(??___fldiv+1)& (0+255),c
  8042  005EDA  5E22               	subwf	??___fldiv,f,c
  8043  005EDC  0E00               	movlw	0
  8044  005EDE  5A23               	subwfb	??___fldiv+1,f,c
  8045  005EE0  0E7F               	movlw	127
  8046  005EE2  2422               	addwf	??___fldiv,w,c
  8047  005EE4  6E2B               	movwf	___fldiv@new_exp,c
  8048  005EE6  0E00               	movlw	0
  8049  005EE8  2023               	addwfc	??___fldiv+1,w,c
  8050  005EEA  6E2C               	movwf	___fldiv@new_exp+1,c
  8051  005EEC  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  8052  005EF0  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  8053  005EF4  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  8054  005EF8  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  8055  005EFC  0E00               	movlw	0
  8056  005EFE  6E1A               	movwf	___fldiv@b,c
  8057  005F00  0E00               	movlw	0
  8058  005F02  6E1B               	movwf	___fldiv@b+1,c
  8059  005F04  0E00               	movlw	0
  8060  005F06  6E1C               	movwf	___fldiv@b+2,c
  8061  005F08  0E00               	movlw	0
  8062  005F0A  6E1D               	movwf	___fldiv@b+3,c
  8063  005F0C  0E00               	movlw	0
  8064  005F0E  6E2D               	movwf	___fldiv@grs,c
  8065  005F10  0E00               	movlw	0
  8066  005F12  6E2E               	movwf	___fldiv@grs+1,c
  8067  005F14  0E00               	movlw	0
  8068  005F16  6E2F               	movwf	___fldiv@grs+2,c
  8069  005F18  0E00               	movlw	0
  8070  005F1A  6E30               	movwf	___fldiv@grs+3,c
  8071  005F1C  0E00               	movlw	0
  8072  005F1E  6E32               	movwf	___fldiv@aexp,c
  8073  005F20  D028               	goto	l918
  8074  005F22                     l3442:
  8075  005F22  5032               	movf	___fldiv@aexp,w,c
  8076  005F24  B4D8               	btfsc	status,2,c
  8077  005F26  D011               	goto	l3450
  8078  005F28  90D8               	bcf	status,0,c
  8079  005F2A  3626               	rlcf	___fldiv@rem,f,c
  8080  005F2C  3627               	rlcf	___fldiv@rem+1,f,c
  8081  005F2E  3628               	rlcf	___fldiv@rem+2,f,c
  8082  005F30  3629               	rlcf	___fldiv@rem+3,f,c
  8083  005F32  90D8               	bcf	status,0,c
  8084  005F34  361A               	rlcf	___fldiv@b,f,c
  8085  005F36  361B               	rlcf	___fldiv@b+1,f,c
  8086  005F38  361C               	rlcf	___fldiv@b+2,f,c
  8087  005F3A  361D               	rlcf	___fldiv@b+3,f,c
  8088  005F3C  BE30               	btfsc	___fldiv@grs+3,7,c
  8089  005F3E  801A               	bsf	___fldiv@b,0,c
  8090  005F40  90D8               	bcf	status,0,c
  8091  005F42  362D               	rlcf	___fldiv@grs,f,c
  8092  005F44  362E               	rlcf	___fldiv@grs+1,f,c
  8093  005F46  362F               	rlcf	___fldiv@grs+2,f,c
  8094  005F48  3630               	rlcf	___fldiv@grs+3,f,c
  8095  005F4A                     l3450:
  8096  005F4A  501E               	movf	___fldiv@a,w,c
  8097  005F4C  5C26               	subwf	___fldiv@rem,w,c
  8098  005F4E  501F               	movf	___fldiv@a+1,w,c
  8099  005F50  5827               	subwfb	___fldiv@rem+1,w,c
  8100  005F52  5020               	movf	___fldiv@a+2,w,c
  8101  005F54  5828               	subwfb	___fldiv@rem+2,w,c
  8102  005F56  5021               	movf	___fldiv@a+3,w,c
  8103  005F58  5829               	subwfb	___fldiv@rem+3,w,c
  8104  005F5A  A0D8               	btfss	status,0,c
  8105  005F5C  D009               	goto	l3456
  8106  005F5E  8C30               	bsf	___fldiv@grs+3,6,c
  8107  005F60  501E               	movf	___fldiv@a,w,c
  8108  005F62  5E26               	subwf	___fldiv@rem,f,c
  8109  005F64  501F               	movf	___fldiv@a+1,w,c
  8110  005F66  5A27               	subwfb	___fldiv@rem+1,f,c
  8111  005F68  5020               	movf	___fldiv@a+2,w,c
  8112  005F6A  5A28               	subwfb	___fldiv@rem+2,f,c
  8113  005F6C  5021               	movf	___fldiv@a+3,w,c
  8114  005F6E  5A29               	subwfb	___fldiv@rem+3,f,c
  8115  005F70                     l3456:
  8116  005F70  2A32               	incf	___fldiv@aexp,f,c
  8117  005F72                     l918:
  8118  005F72  0E19               	movlw	25
  8119  005F74  6432               	cpfsgt	___fldiv@aexp,c
  8120  005F76  D7D5               	goto	l3442
  8121  005F78  5026               	movf	___fldiv@rem,w,c
  8122  005F7A  1027               	iorwf	___fldiv@rem+1,w,c
  8123  005F7C  1028               	iorwf	___fldiv@rem+2,w,c
  8124  005F7E  1029               	iorwf	___fldiv@rem+3,w,c
  8125  005F80  B4D8               	btfsc	status,2,c
  8126  005F82  D011               	goto	l3468
  8127  005F84  802D               	bsf	___fldiv@grs,0,c
  8128  005F86  D00F               	goto	l3468
  8129  005F88                     l3462:
  8130  005F88  90D8               	bcf	status,0,c
  8131  005F8A  361A               	rlcf	___fldiv@b,f,c
  8132  005F8C  361B               	rlcf	___fldiv@b+1,f,c
  8133  005F8E  361C               	rlcf	___fldiv@b+2,f,c
  8134  005F90  361D               	rlcf	___fldiv@b+3,f,c
  8135  005F92  BE30               	btfsc	___fldiv@grs+3,7,c
  8136  005F94  801A               	bsf	___fldiv@b,0,c
  8137  005F96  90D8               	bcf	status,0,c
  8138  005F98  362D               	rlcf	___fldiv@grs,f,c
  8139  005F9A  362E               	rlcf	___fldiv@grs+1,f,c
  8140  005F9C  362F               	rlcf	___fldiv@grs+2,f,c
  8141  005F9E  3630               	rlcf	___fldiv@grs+3,f,c
  8142  005FA0  062B               	decf	___fldiv@new_exp,f,c
  8143  005FA2  A0D8               	btfss	status,0,c
  8144  005FA4  062C               	decf	___fldiv@new_exp+1,f,c
  8145  005FA6                     l3468:
  8146  005FA6  AE1C               	btfss	___fldiv@b+2,7,c
  8147  005FA8  D7EF               	goto	l3462
  8148  005FAA  0E00               	movlw	0
  8149  005FAC  6E32               	movwf	___fldiv@aexp,c
  8150  005FAE  AE30               	btfss	___fldiv@grs+3,7,c
  8151  005FB0  D017               	goto	l929
  8152  005FB2  0EFF               	movlw	255
  8153  005FB4  142D               	andwf	___fldiv@grs,w,c
  8154  005FB6  6E22               	movwf	??___fldiv& (0+255),c
  8155  005FB8  0EFF               	movlw	255
  8156  005FBA  142E               	andwf	___fldiv@grs+1,w,c
  8157  005FBC  6E23               	movwf	(??___fldiv+1)& (0+255),c
  8158  005FBE  0EFF               	movlw	255
  8159  005FC0  142F               	andwf	___fldiv@grs+2,w,c
  8160  005FC2  6E24               	movwf	(??___fldiv+2)& (0+255),c
  8161  005FC4  0E7F               	movlw	127
  8162  005FC6  1430               	andwf	___fldiv@grs+3,w,c
  8163  005FC8  6E25               	movwf	(??___fldiv+3)& (0+255),c
  8164  005FCA  5022               	movf	??___fldiv,w,c
  8165  005FCC  1023               	iorwf	??___fldiv+1,w,c
  8166  005FCE  1024               	iorwf	??___fldiv+2,w,c
  8167  005FD0  1025               	iorwf	??___fldiv+3,w,c
  8168  005FD2  B4D8               	btfsc	status,2,c
  8169  005FD4  D003               	goto	l930
  8170  005FD6                     u3720:
  8171  005FD6  0E01               	movlw	1
  8172  005FD8  6E32               	movwf	___fldiv@aexp,c
  8173  005FDA  D002               	goto	l929
  8174  005FDC                     l930:
  8175  005FDC  B01A               	btfsc	___fldiv@b,0,c
  8176  005FDE  D7FB               	goto	u3720
  8177  005FE0                     l929:
  8178  005FE0  5032               	movf	___fldiv@aexp,w,c
  8179  005FE2  B4D8               	btfsc	status,2,c
  8180  005FE4  D01F               	goto	l3488
  8181  005FE6  0E01               	movlw	1
  8182  005FE8  261A               	addwf	___fldiv@b,f,c
  8183  005FEA  0E00               	movlw	0
  8184  005FEC  221B               	addwfc	___fldiv@b+1,f,c
  8185  005FEE  221C               	addwfc	___fldiv@b+2,f,c
  8186  005FF0  221D               	addwfc	___fldiv@b+3,f,c
  8187  005FF2  A01D               	btfss	___fldiv@b+3,0,c
  8188  005FF4  D017               	goto	l3488
  8189  005FF6  C01A  F022         	movff	___fldiv@b,??___fldiv
  8190  005FFA  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  8191  005FFE  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  8192  006002  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  8193  006006  3425               	rlcf	??___fldiv+3,w,c
  8194  006008  3225               	rrcf	??___fldiv+3,f,c
  8195  00600A  3224               	rrcf	??___fldiv+2,f,c
  8196  00600C  3223               	rrcf	??___fldiv+1,f,c
  8197  00600E  3222               	rrcf	??___fldiv,f,c
  8198  006010  C022  F01A         	movff	??___fldiv,___fldiv@b
  8199  006014  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  8200  006018  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  8201  00601C  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  8202  006020  4A2B               	infsnz	___fldiv@new_exp,f,c
  8203  006022  2A2C               	incf	___fldiv@new_exp+1,f,c
  8204  006024                     l3488:
  8205  006024  BE2C               	btfsc	___fldiv@new_exp+1,7,c
  8206  006026  D010               	goto	l3492
  8207  006028  502C               	movf	___fldiv@new_exp+1,w,c
  8208  00602A  E103               	bnz	u3760
  8209  00602C  282B               	incf	___fldiv@new_exp,w,c
  8210  00602E  A0D8               	btfss	status,0,c
  8211  006030  D00B               	goto	l3492
  8212  006032                     u3760:
  8213  006032  0E00               	movlw	0
  8214  006034  6E2C               	movwf	___fldiv@new_exp+1,c
  8215  006036  682B               	setf	___fldiv@new_exp,c
  8216  006038  0E00               	movlw	0
  8217  00603A  6E1A               	movwf	___fldiv@b,c
  8218  00603C  0E00               	movlw	0
  8219  00603E  6E1B               	movwf	___fldiv@b+1,c
  8220  006040  0E00               	movlw	0
  8221  006042  6E1C               	movwf	___fldiv@b+2,c
  8222  006044  0E00               	movlw	0
  8223  006046  6E1D               	movwf	___fldiv@b+3,c
  8224  006048                     l3492:
  8225  006048  BE2C               	btfsc	___fldiv@new_exp+1,7,c
  8226  00604A  D005               	goto	u3770
  8227  00604C  502C               	movf	___fldiv@new_exp+1,w,c
  8228  00604E  E111               	bnz	l3496
  8229  006050  042B               	decf	___fldiv@new_exp,w,c
  8230  006052  B0D8               	btfsc	status,0,c
  8231  006054  D00E               	goto	l3496
  8232  006056                     u3770:
  8233  006056  0E00               	movlw	0
  8234  006058  6E2C               	movwf	___fldiv@new_exp+1,c
  8235  00605A  0E00               	movlw	0
  8236  00605C  6E2B               	movwf	___fldiv@new_exp,c
  8237  00605E  0E00               	movlw	0
  8238  006060  6E1A               	movwf	___fldiv@b,c
  8239  006062  0E00               	movlw	0
  8240  006064  6E1B               	movwf	___fldiv@b+1,c
  8241  006066  0E00               	movlw	0
  8242  006068  6E1C               	movwf	___fldiv@b+2,c
  8243  00606A  0E00               	movlw	0
  8244  00606C  6E1D               	movwf	___fldiv@b+3,c
  8245  00606E  0E00               	movlw	0
  8246  006070  6E2A               	movwf	___fldiv@sign,c
  8247  006072                     l3496:
  8248  006072  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  8249  006076  A031               	btfss	___fldiv@bexp,0,c
  8250  006078  D002               	goto	l3502
  8251  00607A  8E1C               	bsf	___fldiv@b+2,7,c
  8252  00607C  D001               	goto	l3504
  8253  00607E                     l3502:
  8254  00607E  9E1C               	bcf	___fldiv@b+2,7,c
  8255  006080                     l3504:
  8256  006080  90D8               	bcf	status,0,c
  8257  006082  3031               	rrcf	___fldiv@bexp,w,c
  8258  006084  6E1D               	movwf	___fldiv@b+3,c
  8259  006086  D70E               	goto	l3418
  8260  006088                     __end_of___fldiv:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function ___awmod *****************
  8264 ;; Defined at:
  8265 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  dividend        2    0[COMRAM] int 
  8268 ;;  divisor         2    2[COMRAM] int 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  sign            1    5[COMRAM] unsigned char 
  8271 ;;  counter         1    4[COMRAM] unsigned char 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  2    0[COMRAM] int 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8281 ;;      Params:         4       0       0       0       0       0       0       0       0
  8282 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8284 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8285 ;;Total ram usage:        6 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_efgtoa
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text25
  8295  004ED4                     __ptext25:
  8296                           	opt callstack 0
  8297  004ED4                     ___awmod:
  8298                           	opt callstack 26
  8299                           
  8300                           ;incstack = 0
  8301  004ED4  0E00               	movlw	0
  8302  004ED6  6E06               	movwf	___awmod@sign,c
  8303  004ED8  AE02               	btfss	___awmod@dividend+1,7,c
  8304  004EDA  D006               	goto	l3700
  8305  004EDC  6C01               	negf	___awmod@dividend,c
  8306  004EDE  1E02               	comf	___awmod@dividend+1,f,c
  8307  004EE0  B0D8               	btfsc	status,0,c
  8308  004EE2  2A02               	incf	___awmod@dividend+1,f,c
  8309  004EE4  0E01               	movlw	1
  8310  004EE6  6E06               	movwf	___awmod@sign,c
  8311  004EE8                     l3700:
  8312  004EE8  AE04               	btfss	___awmod@divisor+1,7,c
  8313  004EEA  D004               	goto	l3704
  8314  004EEC  6C03               	negf	___awmod@divisor,c
  8315  004EEE  1E04               	comf	___awmod@divisor+1,f,c
  8316  004EF0  B0D8               	btfsc	status,0,c
  8317  004EF2  2A04               	incf	___awmod@divisor+1,f,c
  8318  004EF4                     l3704:
  8319  004EF4  5003               	movf	___awmod@divisor,w,c
  8320  004EF6  1004               	iorwf	___awmod@divisor+1,w,c
  8321  004EF8  B4D8               	btfsc	status,2,c
  8322  004EFA  D018               	goto	l3720
  8323  004EFC  0E01               	movlw	1
  8324  004EFE  6E05               	movwf	___awmod@counter,c
  8325  004F00  D004               	goto	l3710
  8326  004F02                     l3708:
  8327  004F02  90D8               	bcf	status,0,c
  8328  004F04  3603               	rlcf	___awmod@divisor,f,c
  8329  004F06  3604               	rlcf	___awmod@divisor+1,f,c
  8330  004F08  2A05               	incf	___awmod@counter,f,c
  8331  004F0A                     l3710:
  8332  004F0A  AE04               	btfss	___awmod@divisor+1,7,c
  8333  004F0C  D7FA               	goto	l3708
  8334  004F0E                     u4070:
  8335  004F0E  5003               	movf	___awmod@divisor,w,c
  8336  004F10  5C01               	subwf	___awmod@dividend,w,c
  8337  004F12  5004               	movf	___awmod@divisor+1,w,c
  8338  004F14  5802               	subwfb	___awmod@dividend+1,w,c
  8339  004F16  A0D8               	btfss	status,0,c
  8340  004F18  D004               	goto	l3716
  8341  004F1A  5003               	movf	___awmod@divisor,w,c
  8342  004F1C  5E01               	subwf	___awmod@dividend,f,c
  8343  004F1E  5004               	movf	___awmod@divisor+1,w,c
  8344  004F20  5A02               	subwfb	___awmod@dividend+1,f,c
  8345  004F22                     l3716:
  8346  004F22  90D8               	bcf	status,0,c
  8347  004F24  3204               	rrcf	___awmod@divisor+1,f,c
  8348  004F26  3203               	rrcf	___awmod@divisor,f,c
  8349  004F28  2E05               	decfsz	___awmod@counter,f,c
  8350  004F2A  D7F1               	goto	u4070
  8351  004F2C                     l3720:
  8352  004F2C  5006               	movf	___awmod@sign,w,c
  8353  004F2E  B4D8               	btfsc	status,2,c
  8354  004F30  D004               	goto	l3724
  8355  004F32  6C01               	negf	___awmod@dividend,c
  8356  004F34  1E02               	comf	___awmod@dividend+1,f,c
  8357  004F36  B0D8               	btfsc	status,0,c
  8358  004F38  2A02               	incf	___awmod@dividend+1,f,c
  8359  004F3A                     l3724:
  8360  004F3A  C001  F001         	movff	___awmod@dividend,?___awmod
  8361  004F3E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8362  004F42  0012               	return		;funcret
  8363  004F44                     __end_of___awmod:
  8364                           	opt callstack 0
  8365                           
  8366 ;; *************** function ___awdiv *****************
  8367 ;; Defined at:
  8368 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  dividend        2    0[COMRAM] int 
  8371 ;;  divisor         2    2[COMRAM] int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  quotient        2    6[COMRAM] int 
  8374 ;;  sign            1    5[COMRAM] unsigned char 
  8375 ;;  counter         1    4[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2    0[COMRAM] int 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8385 ;;      Params:         4       0       0       0       0       0       0       0       0
  8386 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8388 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8389 ;;Total ram usage:        8 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_efgtoa
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text26
  8399  004FBA                     __ptext26:
  8400                           	opt callstack 0
  8401  004FBA                     ___awdiv:
  8402                           	opt callstack 26
  8403                           
  8404                           ;incstack = 0
  8405  004FBA  0E00               	movlw	0
  8406  004FBC  6E06               	movwf	___awdiv@sign,c
  8407  004FBE  AE04               	btfss	___awdiv@divisor+1,7,c
  8408  004FC0  D006               	goto	l3656
  8409  004FC2  6C03               	negf	___awdiv@divisor,c
  8410  004FC4  1E04               	comf	___awdiv@divisor+1,f,c
  8411  004FC6  B0D8               	btfsc	status,0,c
  8412  004FC8  2A04               	incf	___awdiv@divisor+1,f,c
  8413  004FCA  0E01               	movlw	1
  8414  004FCC  6E06               	movwf	___awdiv@sign,c
  8415  004FCE                     l3656:
  8416  004FCE  AE02               	btfss	___awdiv@dividend+1,7,c
  8417  004FD0  D006               	goto	l3662
  8418  004FD2  6C01               	negf	___awdiv@dividend,c
  8419  004FD4  1E02               	comf	___awdiv@dividend+1,f,c
  8420  004FD6  B0D8               	btfsc	status,0,c
  8421  004FD8  2A02               	incf	___awdiv@dividend+1,f,c
  8422  004FDA  0E01               	movlw	1
  8423  004FDC  1A06               	xorwf	___awdiv@sign,f,c
  8424  004FDE                     l3662:
  8425  004FDE  0E00               	movlw	0
  8426  004FE0  6E08               	movwf	___awdiv@quotient+1,c
  8427  004FE2  0E00               	movlw	0
  8428  004FE4  6E07               	movwf	___awdiv@quotient,c
  8429  004FE6  5003               	movf	___awdiv@divisor,w,c
  8430  004FE8  1004               	iorwf	___awdiv@divisor+1,w,c
  8431  004FEA  B4D8               	btfsc	status,2,c
  8432  004FEC  D01C               	goto	l3684
  8433  004FEE  0E01               	movlw	1
  8434  004FF0  6E05               	movwf	___awdiv@counter,c
  8435  004FF2  D004               	goto	l3670
  8436  004FF4                     l3668:
  8437  004FF4  90D8               	bcf	status,0,c
  8438  004FF6  3603               	rlcf	___awdiv@divisor,f,c
  8439  004FF8  3604               	rlcf	___awdiv@divisor+1,f,c
  8440  004FFA  2A05               	incf	___awdiv@counter,f,c
  8441  004FFC                     l3670:
  8442  004FFC  AE04               	btfss	___awdiv@divisor+1,7,c
  8443  004FFE  D7FA               	goto	l3668
  8444  005000                     u4010:
  8445  005000  90D8               	bcf	status,0,c
  8446  005002  3607               	rlcf	___awdiv@quotient,f,c
  8447  005004  3608               	rlcf	___awdiv@quotient+1,f,c
  8448  005006  5003               	movf	___awdiv@divisor,w,c
  8449  005008  5C01               	subwf	___awdiv@dividend,w,c
  8450  00500A  5004               	movf	___awdiv@divisor+1,w,c
  8451  00500C  5802               	subwfb	___awdiv@dividend+1,w,c
  8452  00500E  A0D8               	btfss	status,0,c
  8453  005010  D005               	goto	l3680
  8454  005012  5003               	movf	___awdiv@divisor,w,c
  8455  005014  5E01               	subwf	___awdiv@dividend,f,c
  8456  005016  5004               	movf	___awdiv@divisor+1,w,c
  8457  005018  5A02               	subwfb	___awdiv@dividend+1,f,c
  8458  00501A  8007               	bsf	___awdiv@quotient,0,c
  8459  00501C                     l3680:
  8460  00501C  90D8               	bcf	status,0,c
  8461  00501E  3204               	rrcf	___awdiv@divisor+1,f,c
  8462  005020  3203               	rrcf	___awdiv@divisor,f,c
  8463  005022  2E05               	decfsz	___awdiv@counter,f,c
  8464  005024  D7ED               	goto	u4010
  8465  005026                     l3684:
  8466  005026  5006               	movf	___awdiv@sign,w,c
  8467  005028  B4D8               	btfsc	status,2,c
  8468  00502A  D004               	goto	l3688
  8469  00502C  6C07               	negf	___awdiv@quotient,c
  8470  00502E  1E08               	comf	___awdiv@quotient+1,f,c
  8471  005030  B0D8               	btfsc	status,0,c
  8472  005032  2A08               	incf	___awdiv@quotient+1,f,c
  8473  005034                     l3688:
  8474  005034  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8475  005038  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8476  00503C  0012               	return		;funcret
  8477  00503E                     __end_of___awdiv:
  8478                           	opt callstack 0
  8479                           
  8480 ;; *************** function _atoi *****************
  8481 ;; Defined at:
  8482 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8485 ;;		 -> STR_22(7), STR_14(8), STR_6(8), 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  n               2   20[COMRAM] int 
  8488 ;;  neg             2   13[COMRAM] int 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2    7[COMRAM] int 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8498 ;;      Params:         2       0       0       0       0       0       0       0       0
  8499 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8500 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8501 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8502 ;;Total ram usage:       15 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    1
  8505 ;; This function calls:
  8506 ;;		___wmul
  8507 ;;		_isdigit
  8508 ;;		_isspace
  8509 ;; This function is called by:
  8510 ;;		_vfpfcnvrt
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text27
  8515  00598E                     __ptext27:
  8516                           	opt callstack 0
  8517  00598E                     _atoi:
  8518                           	opt callstack 26
  8519                           
  8520                           ;incstack = 0
  8521  00598E  0E00               	movlw	0
  8522  005990  6E16               	movwf	atoi@n+1,c
  8523  005992  0E00               	movlw	0
  8524  005994  6E15               	movwf	atoi@n,c
  8525  005996  0E00               	movlw	0
  8526  005998  6E0F               	movwf	atoi@neg+1,c
  8527  00599A  0E00               	movlw	0
  8528  00599C  6E0E               	movwf	atoi@neg,c
  8529  00599E  D002               	goto	l4132
  8530  0059A0                     l4130:
  8531  0059A0  4A08               	infsnz	atoi@s,f,c
  8532  0059A2  2A09               	incf	atoi@s+1,f,c
  8533  0059A4                     l4132:
  8534  0059A4  0E01               	movlw	1
  8535  0059A6  6E14               	movwf	_atoi$1200,c
  8536  0059A8  C008  FFF6         	movff	atoi@s,tblptrl
  8537  0059AC  C009  FFF7         	movff	atoi@s+1,tblptrh
  8538  0059B0                     	if	0	;tblptru may be non-zero
  8539  0059B0                     	endif
  8540  0059B0                     	if	0	;tblptru may be non-zero
  8541  0059B0                     	endif
  8542  0059B0  0008               	tblrd		*
  8543  0059B2  50F5               	movf	tablat,w,c
  8544  0059B4  0A20               	xorlw	32
  8545  0059B6  B4D8               	btfsc	status,2,c
  8546  0059B8  D018               	goto	l4140
  8547  0059BA  0EF7               	movlw	247
  8548  0059BC  6E0A               	movwf	??_atoi& (0+255),c
  8549  0059BE  0EFF               	movlw	255
  8550  0059C0  6E0B               	movwf	(??_atoi+1)& (0+255),c
  8551  0059C2  C008  FFF6         	movff	atoi@s,tblptrl
  8552  0059C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8553  0059CA                     	if	0	;tblptru may be non-zero
  8554  0059CA                     	endif
  8555  0059CA                     	if	0	;tblptru may be non-zero
  8556  0059CA                     	endif
  8557  0059CA  0008               	tblrd		*
  8558  0059CC  50F5               	movf	tablat,w,c
  8559  0059CE  6E0C               	movwf	(??_atoi+2)& (0+255),c
  8560  0059D0  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8561  0059D2  500A               	movf	??_atoi,w,c
  8562  0059D4  260C               	addwf	??_atoi+2,f,c
  8563  0059D6  500B               	movf	??_atoi+1,w,c
  8564  0059D8  220D               	addwfc	??_atoi+3,f,c
  8565  0059DA  500D               	movf	??_atoi+3,w,c
  8566  0059DC  E104               	bnz	u4810
  8567  0059DE  0E05               	movlw	5
  8568  0059E0  5C0C               	subwf	??_atoi+2,w,c
  8569  0059E2  A0D8               	btfss	status,0,c
  8570  0059E4  D002               	goto	l4140
  8571  0059E6                     u4810:
  8572  0059E6  0E00               	movlw	0
  8573  0059E8  6E14               	movwf	_atoi$1200,c
  8574  0059EA                     l4140:
  8575  0059EA  C014  F010         	movff	_atoi$1200,_atoi$1199
  8576  0059EE  6A11               	clrf	_atoi$1199+1,c
  8577  0059F0  5010               	movf	_atoi$1199,w,c
  8578  0059F2  1011               	iorwf	_atoi$1199+1,w,c
  8579  0059F4  B4D8               	btfsc	status,2,c
  8580  0059F6  D008               	goto	l4150
  8581  0059F8  D7D3               	goto	l4130
  8582  0059FA                     l4146:
  8583  0059FA  0E00               	movlw	0
  8584  0059FC  6E0F               	movwf	atoi@neg+1,c
  8585  0059FE  0E01               	movlw	1
  8586  005A00  6E0E               	movwf	atoi@neg,c
  8587  005A02                     l4148:
  8588  005A02  4A08               	infsnz	atoi@s,f,c
  8589  005A04  2A09               	incf	atoi@s+1,f,c
  8590  005A06  D02E               	goto	l4156
  8591  005A08                     l4150:
  8592  005A08  C008  FFF6         	movff	atoi@s,tblptrl
  8593  005A0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8594  005A10                     	if	0	;tblptru may be non-zero
  8595  005A10                     	endif
  8596  005A10                     	if	0	;tblptru may be non-zero
  8597  005A10                     	endif
  8598  005A10  0008               	tblrd		*
  8599  005A12  50F5               	movf	tablat,w,c
  8600  005A14  6E0A               	movwf	??_atoi& (0+255),c
  8601  005A16  6A0B               	clrf	(??_atoi+1)& (0+255),c
  8602                           
  8603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8604                           ; Switch size 1, requested type "simple"
  8605                           ; Number of cases is 1, Range of values is 0 to 0
  8606                           ; switch strategies available:
  8607                           ; Name         Instructions Cycles
  8608                           ; simple_byte            4     3 (average)
  8609                           ;	Chosen strategy is simple_byte
  8610  005A18  500B               	movf	??_atoi+1,w,c
  8611  005A1A  0A00               	xorlw	0	; case 0
  8612  005A1C  A4D8               	btfss	status,2,c
  8613  005A1E  D022               	goto	l4156
  8614                           
  8615                           ; Switch size 1, requested type "simple"
  8616                           ; Number of cases is 2, Range of values is 43 to 45
  8617                           ; switch strategies available:
  8618                           ; Name         Instructions Cycles
  8619                           ; simple_byte            7     4 (average)
  8620                           ;	Chosen strategy is simple_byte
  8621  005A20  500A               	movf	??_atoi,w,c
  8622  005A22  0A2B               	xorlw	43	; case 43
  8623  005A24  B4D8               	btfsc	status,2,c
  8624  005A26  D7ED               	goto	l4148
  8625  005A28  0A06               	xorlw	6	; case 45
  8626  005A2A  B4D8               	btfsc	status,2,c
  8627  005A2C  D7E6               	goto	l4146
  8628  005A2E  D01A               	goto	l4156
  8629  005A30                     l4152:
  8630  005A30  C015  F001         	movff	atoi@n,___wmul@multiplier
  8631  005A34  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8632  005A38  0E00               	movlw	0
  8633  005A3A  6E04               	movwf	___wmul@multiplicand+1,c
  8634  005A3C  0E0A               	movlw	10
  8635  005A3E  6E03               	movwf	___wmul@multiplicand,c
  8636  005A40  ECC2  F025         	call	___wmul	;wreg free
  8637  005A44  C008  FFF6         	movff	atoi@s,tblptrl
  8638  005A48  C009  FFF7         	movff	atoi@s+1,tblptrh
  8639  005A4C                     	if	0	;tblptru may be non-zero
  8640  005A4C                     	endif
  8641  005A4C                     	if	0	;tblptru may be non-zero
  8642  005A4C                     	endif
  8643  005A4C  0008               	tblrd		*
  8644  005A4E  50F5               	movf	tablat,w,c
  8645  005A50  5E01               	subwf	?___wmul,f,c
  8646  005A52  0E00               	movlw	0
  8647  005A54  5A02               	subwfb	?___wmul+1,f,c
  8648  005A56  0E30               	movlw	48
  8649  005A58  2401               	addwf	?___wmul,w,c
  8650  005A5A  6E15               	movwf	atoi@n,c
  8651  005A5C  0E00               	movlw	0
  8652  005A5E  2002               	addwfc	?___wmul+1,w,c
  8653  005A60  6E16               	movwf	atoi@n+1,c
  8654  005A62  D7CF               	goto	l4148
  8655  005A64                     l4156:
  8656  005A64  0ED0               	movlw	208
  8657  005A66  6E0A               	movwf	??_atoi& (0+255),c
  8658  005A68  0EFF               	movlw	255
  8659  005A6A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  8660  005A6C  C008  FFF6         	movff	atoi@s,tblptrl
  8661  005A70  C009  FFF7         	movff	atoi@s+1,tblptrh
  8662  005A74                     	if	0	;tblptru may be non-zero
  8663  005A74                     	endif
  8664  005A74                     	if	0	;tblptru may be non-zero
  8665  005A74                     	endif
  8666  005A74  0008               	tblrd		*
  8667  005A76  50F5               	movf	tablat,w,c
  8668  005A78  6E0C               	movwf	(??_atoi+2)& (0+255),c
  8669  005A7A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8670  005A7C  500A               	movf	??_atoi,w,c
  8671  005A7E  260C               	addwf	??_atoi+2,f,c
  8672  005A80  500B               	movf	??_atoi+1,w,c
  8673  005A82  220D               	addwfc	??_atoi+3,f,c
  8674  005A84  500D               	movf	??_atoi+3,w,c
  8675  005A86  E106               	bnz	u4830
  8676  005A88  0E0A               	movlw	10
  8677  005A8A  5C0C               	subwf	??_atoi+2,w,c
  8678  005A8C  B0D8               	btfsc	status,0,c
  8679  005A8E  D002               	goto	u4830
  8680  005A90  0E01               	movlw	1
  8681  005A92  D001               	goto	u4840
  8682  005A94                     u4830:
  8683  005A94  0E00               	movlw	0
  8684  005A96                     u4840:
  8685  005A96  6E12               	movwf	_atoi$1201,c
  8686  005A98  6A13               	clrf	_atoi$1201+1,c
  8687  005A9A  5012               	movf	_atoi$1201,w,c
  8688  005A9C  1013               	iorwf	_atoi$1201+1,w,c
  8689  005A9E  A4D8               	btfss	status,2,c
  8690  005AA0  D7C7               	goto	l4152
  8691  005AA2  500E               	movf	atoi@neg,w,c
  8692  005AA4  100F               	iorwf	atoi@neg+1,w,c
  8693  005AA6  A4D8               	btfss	status,2,c
  8694  005AA8  D00D               	goto	l1044
  8695  005AAA  C015  F00A         	movff	atoi@n,??_atoi
  8696  005AAE  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8697  005AB2  1E0A               	comf	??_atoi,f,c
  8698  005AB4  1E0B               	comf	??_atoi+1,f,c
  8699  005AB6  4A0A               	infsnz	??_atoi,f,c
  8700  005AB8  2A0B               	incf	??_atoi+1,f,c
  8701  005ABA  C00A  F008         	movff	??_atoi,?_atoi
  8702  005ABE  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8703  005AC2  0012               	return	
  8704  005AC4                     l1044:
  8705  005AC4  C015  F008         	movff	atoi@n,?_atoi
  8706  005AC8  C016  F009         	movff	atoi@n+1,?_atoi+1
  8707  005ACC  0012               	return		;funcret
  8708  005ACE                     __end_of_atoi:
  8709                           	opt callstack 0
  8710                           
  8711 ;; *************** function _isspace *****************
  8712 ;; Defined at:
  8713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  c               2    0[COMRAM] int 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  2    0[COMRAM] int 
  8720 ;; Registers used:
  8721 ;;		wreg, status,2, status,0
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8727 ;;      Params:         2       0       0       0       0       0       0       0       0
  8728 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8730 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8731 ;;Total ram usage:        7 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_atoi
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text28
  8741  004C9A                     __ptext28:
  8742                           	opt callstack 0
  8743  004C9A                     _isspace:
  8744                           	opt callstack 26
  8745                           
  8746                           ;incstack = 0
  8747  004C9A  0E01               	movlw	1
  8748  004C9C  6E07               	movwf	_isspace$1230,c
  8749  004C9E  0E20               	movlw	32
  8750  004CA0  1801               	xorwf	isspace@c,w,c
  8751  004CA2  1002               	iorwf	isspace@c+1,w,c
  8752  004CA4  B4D8               	btfsc	status,2,c
  8753  004CA6  D014               	goto	l3826
  8754  004CA8  0EF7               	movlw	247
  8755  004CAA  6E03               	movwf	??_isspace& (0+255),c
  8756  004CAC  0EFF               	movlw	255
  8757  004CAE  6E04               	movwf	(??_isspace+1)& (0+255),c
  8758  004CB0  C001  F005         	movff	isspace@c,??_isspace+2
  8759  004CB4  C002  F006         	movff	isspace@c+1,??_isspace+3
  8760  004CB8  5003               	movf	??_isspace,w,c
  8761  004CBA  2605               	addwf	??_isspace+2,f,c
  8762  004CBC  5004               	movf	??_isspace+1,w,c
  8763  004CBE  2206               	addwfc	??_isspace+3,f,c
  8764  004CC0  5006               	movf	??_isspace+3,w,c
  8765  004CC2  E104               	bnz	u4270
  8766  004CC4  0E05               	movlw	5
  8767  004CC6  5C05               	subwf	??_isspace+2,w,c
  8768  004CC8  A0D8               	btfss	status,0,c
  8769  004CCA  D002               	goto	l3826
  8770  004CCC                     u4270:
  8771  004CCC  0E00               	movlw	0
  8772  004CCE  6E07               	movwf	_isspace$1230,c
  8773  004CD0                     l3826:
  8774  004CD0  C007  F001         	movff	_isspace$1230,?_isspace
  8775  004CD4  6A02               	clrf	?_isspace+1,c
  8776  004CD6  0012               	return		;funcret
  8777  004CD8                     __end_of_isspace:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function _isdigit *****************
  8781 ;; Defined at:
  8782 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  c               2    0[COMRAM] int 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  2    0[COMRAM] int 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8796 ;;      Params:         2       0       0       0       0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8798 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8799 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8800 ;;Total ram usage:        6 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_vfpfcnvrt
  8806 ;;		_atoi
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text29
  8811  004C02                     __ptext29:
  8812                           	opt callstack 0
  8813  004C02                     _isdigit:
  8814                           	opt callstack 27
  8815                           
  8816                           ;incstack = 0
  8817  004C02  0ED0               	movlw	208
  8818  004C04  6E03               	movwf	??_isdigit& (0+255),c
  8819  004C06  0EFF               	movlw	255
  8820  004C08  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8821  004C0A  C001  F005         	movff	isdigit@c,??_isdigit+2
  8822  004C0E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8823  004C12  5003               	movf	??_isdigit,w,c
  8824  004C14  2605               	addwf	??_isdigit+2,f,c
  8825  004C16  5004               	movf	??_isdigit+1,w,c
  8826  004C18  2206               	addwfc	??_isdigit+3,f,c
  8827  004C1A  5006               	movf	??_isdigit+3,w,c
  8828  004C1C  E106               	bnz	u3540
  8829  004C1E  0E0A               	movlw	10
  8830  004C20  5C05               	subwf	??_isdigit+2,w,c
  8831  004C22  B0D8               	btfsc	status,0,c
  8832  004C24  D002               	goto	u3540
  8833  004C26  0E01               	movlw	1
  8834  004C28  D001               	goto	u3550
  8835  004C2A                     u3540:
  8836  004C2A  0E00               	movlw	0
  8837  004C2C                     u3550:
  8838  004C2C  6E01               	movwf	?_isdigit,c
  8839  004C2E  6A02               	clrf	?_isdigit+1,c
  8840  004C30  0012               	return		;funcret
  8841  004C32                     __end_of_isdigit:
  8842                           	opt callstack 0
  8843                           
  8844 ;; *************** function ___wmul *****************
  8845 ;; Defined at:
  8846 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  multiplier      2    0[COMRAM] unsigned int 
  8849 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  product         2    4[COMRAM] unsigned int 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  2    0[COMRAM] unsigned int 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2, status,0, prodl, prodh
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8861 ;;      Params:         4       0       0       0       0       0       0       0       0
  8862 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8864 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8865 ;;Total ram usage:        6 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_atoi
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text30
  8875  004B84                     __ptext30:
  8876                           	opt callstack 0
  8877  004B84                     ___wmul:
  8878                           	opt callstack 26
  8879                           
  8880                           ;incstack = 0
  8881  004B84  5001               	movf	___wmul@multiplier,w,c
  8882  004B86  0203               	mulwf	___wmul@multiplicand,c
  8883  004B88  CFF3 F005          	movff	prodl,___wmul@product
  8884  004B8C  CFF4 F006          	movff	prodh,___wmul@product+1
  8885  004B90  5001               	movf	___wmul@multiplier,w,c
  8886  004B92  0204               	mulwf	___wmul@multiplicand+1,c
  8887  004B94  50F3               	movf	prodl,w,c
  8888  004B96  2606               	addwf	___wmul@product+1,f,c
  8889  004B98  5002               	movf	___wmul@multiplier+1,w,c
  8890  004B9A  0203               	mulwf	___wmul@multiplicand,c
  8891  004B9C  50F3               	movf	prodl,w,c
  8892  004B9E  2606               	addwf	___wmul@product+1,f,c
  8893  004BA0  C005  F001         	movff	___wmul@product,?___wmul
  8894  004BA4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8895  004BA8  0012               	return		;funcret
  8896  004BAA                     __end_of___wmul:
  8897                           	opt callstack 0
  8898                           
  8899 ;; *************** function ___xxtofl *****************
  8900 ;; Defined at:
  8901 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  sign            1    wreg     unsigned char 
  8904 ;;  val             4    0[COMRAM] long 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  sign            1    8[COMRAM] unsigned char 
  8907 ;;  arg             4   10[COMRAM] unsigned long 
  8908 ;;  exp             1    9[COMRAM] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  4    0[COMRAM] unsigned char 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8918 ;;      Params:         4       0       0       0       0       0       0       0       0
  8919 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8920 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8921 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8922 ;;Total ram usage:       14 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_main
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text31
  8932  00584E                     __ptext31:
  8933                           	opt callstack 0
  8934  00584E                     ___xxtofl:
  8935                           	opt callstack 30
  8936                           
  8937                           ;incstack = 0
  8938                           ;___xxtofl@sign stored from wreg
  8939  00584E  6E09               	movwf	___xxtofl@sign,c
  8940  005850  5009               	movf	___xxtofl@sign,w,c
  8941  005852  A4D8               	btfss	status,2,c
  8942  005854  AE04               	btfss	___xxtofl@val+3,7,c
  8943  005856  D01A               	goto	l989
  8944  005858  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8945  00585C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8946  005860  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8947  005864  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8948  005868  1E05               	comf	??___xxtofl,f,c
  8949  00586A  1E06               	comf	??___xxtofl+1,f,c
  8950  00586C  1E07               	comf	??___xxtofl+2,f,c
  8951  00586E  1E08               	comf	??___xxtofl+3,f,c
  8952  005870  2A05               	incf	??___xxtofl,f,c
  8953  005872  0E00               	movlw	0
  8954  005874  2206               	addwfc	??___xxtofl+1,f,c
  8955  005876  2207               	addwfc	??___xxtofl+2,f,c
  8956  005878  2208               	addwfc	??___xxtofl+3,f,c
  8957  00587A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8958  00587E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8959  005882  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8960  005886  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8961  00588A  D008               	goto	l4570
  8962  00588C                     l989:
  8963  00588C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8964  005890  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8965  005894  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8966  005898  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8967  00589C                     l4570:
  8968  00589C  5001               	movf	___xxtofl@val,w,c
  8969  00589E  1002               	iorwf	___xxtofl@val+1,w,c
  8970  0058A0  1003               	iorwf	___xxtofl@val+2,w,c
  8971  0058A2  1004               	iorwf	___xxtofl@val+3,w,c
  8972  0058A4  A4D8               	btfss	status,2,c
  8973  0058A6  D009               	goto	l4576
  8974  0058A8  0E00               	movlw	0
  8975  0058AA  6E01               	movwf	?___xxtofl,c
  8976  0058AC  0E00               	movlw	0
  8977  0058AE  6E02               	movwf	?___xxtofl+1,c
  8978  0058B0  0E00               	movlw	0
  8979  0058B2  6E03               	movwf	?___xxtofl+2,c
  8980  0058B4  0E00               	movlw	0
  8981  0058B6  6E04               	movwf	?___xxtofl+3,c
  8982  0058B8  0012               	return	
  8983  0058BA                     l4576:
  8984  0058BA  0E96               	movlw	150
  8985  0058BC  6E0A               	movwf	___xxtofl@exp,c
  8986  0058BE  D006               	goto	l4580
  8987  0058C0                     l4578:
  8988  0058C0  2A0A               	incf	___xxtofl@exp,f,c
  8989  0058C2  90D8               	bcf	status,0,c
  8990  0058C4  320E               	rrcf	___xxtofl@arg+3,f,c
  8991  0058C6  320D               	rrcf	___xxtofl@arg+2,f,c
  8992  0058C8  320C               	rrcf	___xxtofl@arg+1,f,c
  8993  0058CA  320B               	rrcf	___xxtofl@arg,f,c
  8994  0058CC                     l4580:
  8995  0058CC  0E00               	movlw	0
  8996  0058CE  140B               	andwf	___xxtofl@arg,w,c
  8997  0058D0  6E05               	movwf	??___xxtofl& (0+255),c
  8998  0058D2  0E00               	movlw	0
  8999  0058D4  140C               	andwf	___xxtofl@arg+1,w,c
  9000  0058D6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9001  0058D8  0E00               	movlw	0
  9002  0058DA  140D               	andwf	___xxtofl@arg+2,w,c
  9003  0058DC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9004  0058DE  0EFE               	movlw	254
  9005  0058E0  140E               	andwf	___xxtofl@arg+3,w,c
  9006  0058E2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9007  0058E4  5005               	movf	??___xxtofl,w,c
  9008  0058E6  1006               	iorwf	??___xxtofl+1,w,c
  9009  0058E8  1007               	iorwf	??___xxtofl+2,w,c
  9010  0058EA  1008               	iorwf	??___xxtofl+3,w,c
  9011  0058EC  B4D8               	btfsc	status,2,c
  9012  0058EE  D00D               	goto	l996
  9013  0058F0  D7E7               	goto	l4578
  9014  0058F2                     l4582:
  9015  0058F2  2A0A               	incf	___xxtofl@exp,f,c
  9016  0058F4  0E01               	movlw	1
  9017  0058F6  260B               	addwf	___xxtofl@arg,f,c
  9018  0058F8  0E00               	movlw	0
  9019  0058FA  220C               	addwfc	___xxtofl@arg+1,f,c
  9020  0058FC  220D               	addwfc	___xxtofl@arg+2,f,c
  9021  0058FE  220E               	addwfc	___xxtofl@arg+3,f,c
  9022  005900  90D8               	bcf	status,0,c
  9023  005902  320E               	rrcf	___xxtofl@arg+3,f,c
  9024  005904  320D               	rrcf	___xxtofl@arg+2,f,c
  9025  005906  320C               	rrcf	___xxtofl@arg+1,f,c
  9026  005908  320B               	rrcf	___xxtofl@arg,f,c
  9027  00590A                     l996:
  9028  00590A  0E00               	movlw	0
  9029  00590C  140B               	andwf	___xxtofl@arg,w,c
  9030  00590E  6E05               	movwf	??___xxtofl& (0+255),c
  9031  005910  0E00               	movlw	0
  9032  005912  140C               	andwf	___xxtofl@arg+1,w,c
  9033  005914  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9034  005916  0E00               	movlw	0
  9035  005918  140D               	andwf	___xxtofl@arg+2,w,c
  9036  00591A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9037  00591C  0EFF               	movlw	255
  9038  00591E  140E               	andwf	___xxtofl@arg+3,w,c
  9039  005920  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9040  005922  5005               	movf	??___xxtofl,w,c
  9041  005924  1006               	iorwf	??___xxtofl+1,w,c
  9042  005926  1007               	iorwf	??___xxtofl+2,w,c
  9043  005928  1008               	iorwf	??___xxtofl+3,w,c
  9044  00592A  B4D8               	btfsc	status,2,c
  9045  00592C  D007               	goto	l4590
  9046  00592E  D7E1               	goto	l4582
  9047  005930                     l4588:
  9048  005930  060A               	decf	___xxtofl@exp,f,c
  9049  005932  90D8               	bcf	status,0,c
  9050  005934  360B               	rlcf	___xxtofl@arg,f,c
  9051  005936  360C               	rlcf	___xxtofl@arg+1,f,c
  9052  005938  360D               	rlcf	___xxtofl@arg+2,f,c
  9053  00593A  360E               	rlcf	___xxtofl@arg+3,f,c
  9054  00593C                     l4590:
  9055  00593C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  9056  00593E  D003               	goto	u5420
  9057  005940  0E02               	movlw	2
  9058  005942  600A               	cpfslt	___xxtofl@exp,c
  9059  005944  D7F5               	goto	l4588
  9060  005946                     u5420:
  9061  005946  A00A               	btfss	___xxtofl@exp,0,c
  9062  005948  9E0D               	bcf	___xxtofl@arg+2,7,c
  9063  00594A  90D8               	bcf	status,0,c
  9064  00594C  320A               	rrcf	___xxtofl@exp,f,c
  9065  00594E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9066  005952  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  9067  005954  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  9068  005956  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  9069  005958  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9070  00595C  6A07               	clrf	??___xxtofl+2,c
  9071  00595E  6A06               	clrf	??___xxtofl+1,c
  9072  005960  6A05               	clrf	??___xxtofl,c
  9073  005962  5005               	movf	??___xxtofl,w,c
  9074  005964  120B               	iorwf	___xxtofl@arg,f,c
  9075  005966  5006               	movf	??___xxtofl+1,w,c
  9076  005968  120C               	iorwf	___xxtofl@arg+1,f,c
  9077  00596A  5007               	movf	??___xxtofl+2,w,c
  9078  00596C  120D               	iorwf	___xxtofl@arg+2,f,c
  9079  00596E  5008               	movf	??___xxtofl+3,w,c
  9080  005970  120E               	iorwf	___xxtofl@arg+3,f,c
  9081  005972  5009               	movf	___xxtofl@sign,w,c
  9082  005974  A4D8               	btfss	status,2,c
  9083  005976  AE04               	btfss	___xxtofl@val+3,7,c
  9084  005978  D001               	goto	l4606
  9085  00597A  8E0E               	bsf	___xxtofl@arg+3,7,c
  9086  00597C                     l4606:
  9087  00597C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9088  005980  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9089  005984  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9090  005988  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9091  00598C  0012               	return		;funcret
  9092  00598E                     __end_of___xxtofl:
  9093                           	opt callstack 0
  9094                           
  9095 ;; *************** function _Lcd_Out2 *****************
  9096 ;; Defined at:
  9097 ;;		line 115 in file "./flex_lcd.h"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  y               1    wreg     unsigned char 
  9100 ;;  x               1    3[COMRAM] unsigned char 
  9101 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  9102 ;;		 -> palabra0(17), palabra2(17), palabra(17), 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  y               1    8[COMRAM] unsigned char 
  9105 ;;  data            1    9[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9115 ;;      Params:         3       0       0       0       0       0       0       0       0
  9116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9117 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9118 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9119 ;;Total ram usage:        7 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    1
  9122 ;; This function calls:
  9123 ;;		_Lcd_Chr_CP
  9124 ;;		_Lcd_Cmd
  9125 ;; This function is called by:
  9126 ;;		_main
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text32
  9131  004E64                     __ptext32:
  9132                           	opt callstack 0
  9133  004E64                     _Lcd_Out2:
  9134                           	opt callstack 29
  9135                           
  9136                           ;incstack = 0
  9137                           ;Lcd_Out2@y stored from wreg
  9138  004E64  6E09               	movwf	Lcd_Out2@y,c
  9139                           
  9140                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  9141  004E66  D00D               	goto	l4466
  9142  004E68                     l4456:
  9143  004E68  5004               	movf	Lcd_Out2@x,w,c
  9144  004E6A  0F80               	addlw	128
  9145  004E6C  D008               	goto	L16
  9146  004E6E                     l4458:
  9147  004E6E  5004               	movf	Lcd_Out2@x,w,c
  9148  004E70  0FC0               	addlw	192
  9149  004E72  D005               	goto	L16
  9150  004E74                     l4460:
  9151  004E74  5004               	movf	Lcd_Out2@x,w,c
  9152  004E76  0F94               	addlw	148
  9153  004E78  D002               	goto	L16
  9154  004E7A                     l4462:
  9155  004E7A  5004               	movf	Lcd_Out2@x,w,c
  9156  004E7C  0FD4               	addlw	212
  9157  004E7E                     L16:
  9158  004E7E  6E0A               	movwf	Lcd_Out2@data,c
  9159  004E80  D014               	goto	l4468
  9160  004E82                     l4466:
  9161  004E82  5009               	movf	Lcd_Out2@y,w,c
  9162  004E84  6E07               	movwf	??_Lcd_Out2& (0+255),c
  9163  004E86  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  9164                           
  9165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9166                           ; Switch size 1, requested type "simple"
  9167                           ; Number of cases is 1, Range of values is 0 to 0
  9168                           ; switch strategies available:
  9169                           ; Name         Instructions Cycles
  9170                           ; simple_byte            4     3 (average)
  9171                           ;	Chosen strategy is simple_byte
  9172  004E88  5008               	movf	??_Lcd_Out2+1,w,c
  9173  004E8A  0A00               	xorlw	0	; case 0
  9174  004E8C  A4D8               	btfss	status,2,c
  9175  004E8E  D00D               	goto	l4468
  9176                           
  9177                           ; Switch size 1, requested type "simple"
  9178                           ; Number of cases is 4, Range of values is 1 to 4
  9179                           ; switch strategies available:
  9180                           ; Name         Instructions Cycles
  9181                           ; simple_byte           13     7 (average)
  9182                           ;	Chosen strategy is simple_byte
  9183  004E90  5007               	movf	??_Lcd_Out2,w,c
  9184  004E92  0A01               	xorlw	1	; case 1
  9185  004E94  B4D8               	btfsc	status,2,c
  9186  004E96  D7E8               	goto	l4456
  9187  004E98  0A03               	xorlw	3	; case 2
  9188  004E9A  B4D8               	btfsc	status,2,c
  9189  004E9C  D7E8               	goto	l4458
  9190  004E9E  0A01               	xorlw	1	; case 3
  9191  004EA0  B4D8               	btfsc	status,2,c
  9192  004EA2  D7E8               	goto	l4460
  9193  004EA4  0A07               	xorlw	7	; case 4
  9194  004EA6  B4D8               	btfsc	status,2,c
  9195  004EA8  D7E8               	goto	l4462
  9196  004EAA                     l4468:
  9197                           
  9198                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  9199  004EAA  500A               	movf	Lcd_Out2@data,w,c
  9200  004EAC  EC06  F02B         	call	_Lcd_Cmd
  9201                           
  9202                           ;./flex_lcd.h: 127: while(*buffer)
  9203  004EB0  D009               	goto	l4474
  9204  004EB2                     l4470:
  9205                           
  9206                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  9207  004EB2  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9208  004EB6  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9209  004EBA  50DF               	movf	indf2,w,c
  9210  004EBC  EC95  F02B         	call	_Lcd_Chr_CP
  9211                           
  9212                           ;./flex_lcd.h: 130:     buffer++;
  9213  004EC0  4A05               	infsnz	Lcd_Out2@buffer,f,c
  9214  004EC2  2A06               	incf	Lcd_Out2@buffer+1,f,c
  9215  004EC4                     l4474:
  9216                           
  9217                           ;./flex_lcd.h: 127: while(*buffer)
  9218  004EC4  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9219  004EC8  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9220  004ECC  50DF               	movf	indf2,w,c
  9221  004ECE  B4D8               	btfsc	status,2,c
  9222  004ED0  0012               	return	
  9223  004ED2  D7EF               	goto	l4470
  9224  004ED4                     __end_of_Lcd_Out2:
  9225                           	opt callstack 0
  9226                           
  9227 ;; *************** function _Lcd_Out *****************
  9228 ;; Defined at:
  9229 ;;		line 94 in file "./flex_lcd.h"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  y               1    wreg     unsigned char 
  9232 ;;  x               1    3[COMRAM] unsigned char 
  9233 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  9234 ;;		 -> STR_28(18), STR_27(10), STR_26(13), STR_25(15), 
  9235 ;;		 -> STR_24(18), STR_23(13), STR_21(12), STR_20(13), 
  9236 ;;		 -> STR_19(14), STR_18(13), STR_17(15), STR_16(12), 
  9237 ;;		 -> STR_15(13), STR_13(15), STR_12(16), STR_11(14), 
  9238 ;;		 -> STR_10(13), STR_9(14), STR_8(10), STR_7(13), 
  9239 ;;		 -> STR_5(15), STR_4(16), STR_3(14), STR_2(7), 
  9240 ;;		 -> STR_1(11), 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  y               1    8[COMRAM] unsigned char 
  9243 ;;  data            1    9[COMRAM] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9253 ;;      Params:         3       0       0       0       0       0       0       0       0
  9254 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9255 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9256 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9257 ;;Total ram usage:        7 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    1
  9260 ;; This function calls:
  9261 ;;		_Lcd_Chr_CP
  9262 ;;		_Lcd_Cmd
  9263 ;; This function is called by:
  9264 ;;		_main
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text33
  9269  004F44                     __ptext33:
  9270                           	opt callstack 0
  9271  004F44                     _Lcd_Out:
  9272                           	opt callstack 29
  9273                           
  9274                           ;incstack = 0
  9275                           ;Lcd_Out@y stored from wreg
  9276  004F44  6E09               	movwf	Lcd_Out@y,c
  9277                           
  9278                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  9279  004F46  D00D               	goto	l4440
  9280  004F48                     l4430:
  9281  004F48  5004               	movf	Lcd_Out@x,w,c
  9282  004F4A  0F80               	addlw	128
  9283  004F4C  D008               	goto	L19
  9284  004F4E                     l4432:
  9285  004F4E  5004               	movf	Lcd_Out@x,w,c
  9286  004F50  0FC0               	addlw	192
  9287  004F52  D005               	goto	L19
  9288  004F54                     l4434:
  9289  004F54  5004               	movf	Lcd_Out@x,w,c
  9290  004F56  0F94               	addlw	148
  9291  004F58  D002               	goto	L19
  9292  004F5A                     l4436:
  9293  004F5A  5004               	movf	Lcd_Out@x,w,c
  9294  004F5C  0FD4               	addlw	212
  9295  004F5E                     L19:
  9296  004F5E  6E0A               	movwf	Lcd_Out@data,c
  9297  004F60  D014               	goto	l4442
  9298  004F62                     l4440:
  9299  004F62  5009               	movf	Lcd_Out@y,w,c
  9300  004F64  6E07               	movwf	??_Lcd_Out& (0+255),c
  9301  004F66  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
  9302                           
  9303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9304                           ; Switch size 1, requested type "simple"
  9305                           ; Number of cases is 1, Range of values is 0 to 0
  9306                           ; switch strategies available:
  9307                           ; Name         Instructions Cycles
  9308                           ; simple_byte            4     3 (average)
  9309                           ;	Chosen strategy is simple_byte
  9310  004F68  5008               	movf	??_Lcd_Out+1,w,c
  9311  004F6A  0A00               	xorlw	0	; case 0
  9312  004F6C  A4D8               	btfss	status,2,c
  9313  004F6E  D00D               	goto	l4442
  9314                           
  9315                           ; Switch size 1, requested type "simple"
  9316                           ; Number of cases is 4, Range of values is 1 to 4
  9317                           ; switch strategies available:
  9318                           ; Name         Instructions Cycles
  9319                           ; simple_byte           13     7 (average)
  9320                           ;	Chosen strategy is simple_byte
  9321  004F70  5007               	movf	??_Lcd_Out,w,c
  9322  004F72  0A01               	xorlw	1	; case 1
  9323  004F74  B4D8               	btfsc	status,2,c
  9324  004F76  D7E8               	goto	l4430
  9325  004F78  0A03               	xorlw	3	; case 2
  9326  004F7A  B4D8               	btfsc	status,2,c
  9327  004F7C  D7E8               	goto	l4432
  9328  004F7E  0A01               	xorlw	1	; case 3
  9329  004F80  B4D8               	btfsc	status,2,c
  9330  004F82  D7E8               	goto	l4434
  9331  004F84  0A07               	xorlw	7	; case 4
  9332  004F86  B4D8               	btfsc	status,2,c
  9333  004F88  D7E8               	goto	l4436
  9334  004F8A                     l4442:
  9335                           
  9336                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  9337  004F8A  500A               	movf	Lcd_Out@data,w,c
  9338  004F8C  EC06  F02B         	call	_Lcd_Cmd
  9339                           
  9340                           ;./flex_lcd.h: 106: while(*buffer)
  9341  004F90  D00A               	goto	l4448
  9342  004F92                     l4444:
  9343                           
  9344                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  9345  004F92  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9346  004F96  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9347  004F9A                     	if	0	;tblptru may be non-zero
  9348  004F9A                     	endif
  9349  004F9A                     	if	0	;tblptru may be non-zero
  9350  004F9A                     	endif
  9351  004F9A  0008               	tblrd		*
  9352  004F9C  50F5               	movf	tablat,w,c
  9353  004F9E  EC95  F02B         	call	_Lcd_Chr_CP
  9354                           
  9355                           ;./flex_lcd.h: 109:     buffer++;
  9356  004FA2  4A05               	infsnz	Lcd_Out@buffer,f,c
  9357  004FA4  2A06               	incf	Lcd_Out@buffer+1,f,c
  9358  004FA6                     l4448:
  9359                           
  9360                           ;./flex_lcd.h: 106: while(*buffer)
  9361  004FA6  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9362  004FAA  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9363  004FAE                     	if	0	;tblptru may be non-zero
  9364  004FAE                     	endif
  9365  004FAE                     	if	0	;tblptru may be non-zero
  9366  004FAE                     	endif
  9367  004FAE  0008               	tblrd		*
  9368  004FB0  50F5               	movf	tablat,w,c
  9369  004FB2  0900               	iorlw	0
  9370  004FB4  B4D8               	btfsc	status,2,c
  9371  004FB6  0012               	return	
  9372  004FB8  D7EC               	goto	l4444
  9373  004FBA                     __end_of_Lcd_Out:
  9374                           	opt callstack 0
  9375                           
  9376 ;; *************** function _Lcd_Chr_CP *****************
  9377 ;; Defined at:
  9378 ;;		line 136 in file "./flex_lcd.h"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  data            1    wreg     unsigned char 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  data            1    2[COMRAM] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9392 ;;      Params:         0       0       0       0       0       0       0       0       0
  9393 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9394 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9395 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9396 ;;Total ram usage:        3 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_Lcd_Out
  9402 ;;		_Lcd_Out2
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text34
  9407  00572A                     __ptext34:
  9408                           	opt callstack 0
  9409  00572A                     _Lcd_Chr_CP:
  9410                           	opt callstack 29
  9411                           
  9412                           ;incstack = 0
  9413                           ;Lcd_Chr_CP@data stored from wreg
  9414  00572A  6E03               	movwf	Lcd_Chr_CP@data,c
  9415                           
  9416                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  9417  00572C  9A83               	bcf	3971,5,c	;volatile
  9418  00572E  8883               	bsf	3971,4,c	;volatile
  9419                           
  9420                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  9421  005730  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  9422  005732  AE03               	btfss	Lcd_Chr_CP@data,7,c
  9423  005734  D001               	bra	u5115
  9424  005736  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  9425  005738                     u5115:
  9426  005738  0E01               	movlw	1
  9427  00573A  1601               	andwf	??_Lcd_Chr_CP,f,c
  9428  00573C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9429  00573E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9430  005740  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9431  005742  5083               	movf	3971,w,c	;volatile
  9432  005744  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9433  005746  0BF7               	andlw	-9
  9434  005748  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9435  00574A  6E83               	movwf	3971,c	;volatile
  9436  00574C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9437  005750  0E06               	movlw	6
  9438  005752  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9439  005754                     u5125:
  9440  005754  90D8               	bcf	status,0,c
  9441  005756  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9442  005758  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9443  00575A  D7FC               	goto	u5125
  9444  00575C  0E01               	movlw	1
  9445  00575E  1601               	andwf	??_Lcd_Chr_CP,f,c
  9446  005760  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9447  005762  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9448  005764  5083               	movf	3971,w,c	;volatile
  9449  005766  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9450  005768  0BFB               	andlw	-5
  9451  00576A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9452  00576C  6E83               	movwf	3971,c	;volatile
  9453                           
  9454                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  9455  00576E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9456  005772  0E05               	movlw	5
  9457  005774  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9458  005776                     u5135:
  9459  005776  90D8               	bcf	status,0,c
  9460  005778  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9461  00577A  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9462  00577C  D7FC               	goto	u5135
  9463  00577E  0E01               	movlw	1
  9464  005780  1601               	andwf	??_Lcd_Chr_CP,f,c
  9465  005782  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9466  005784  5083               	movf	3971,w,c	;volatile
  9467  005786  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9468  005788  0BFD               	andlw	-3
  9469  00578A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9470  00578C  6E83               	movwf	3971,c	;volatile
  9471  00578E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9472  005792  3A01               	swapf	??_Lcd_Chr_CP,f,c
  9473  005794  0E0F               	movlw	15
  9474  005796  1601               	andwf	??_Lcd_Chr_CP,f,c
  9475  005798  0E01               	movlw	1
  9476  00579A  1601               	andwf	??_Lcd_Chr_CP,f,c
  9477  00579C  5083               	movf	3971,w,c	;volatile
  9478  00579E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9479  0057A0  0BFE               	andlw	-2
  9480  0057A2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9481  0057A4  6E83               	movwf	3971,c	;volatile
  9482                           
  9483                           ;./flex_lcd.h: 140: _delay(10);
  9484  0057A6  0E03               	movlw	3
  9485  0057A8                     u5887:
  9486  0057A8  2EE8               	decfsz	wreg,f,c
  9487  0057AA  D7FE               	bra	u5887
  9488  0057AC  F000               	nop	
  9489                           
  9490                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  9491  0057AE  8A83               	bsf	3971,5,c	;volatile
  9492  0057B0  0E05               	movlw	5
  9493  0057B2                     u5897:
  9494  0057B2  2EE8               	decfsz	wreg,f,c
  9495  0057B4  D7FE               	bra	u5897
  9496  0057B6  9A83               	bcf	3971,5,c	;volatile
  9497                           
  9498                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  9499  0057B8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9500  0057BC  90D8               	bcf	status,0,c
  9501  0057BE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9502  0057C0  90D8               	bcf	status,0,c
  9503  0057C2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9504  0057C4  90D8               	bcf	status,0,c
  9505  0057C6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9506  0057C8  0E01               	movlw	1
  9507  0057CA  1601               	andwf	??_Lcd_Chr_CP,f,c
  9508  0057CC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9509  0057CE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9510  0057D0  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9511  0057D2  5083               	movf	3971,w,c	;volatile
  9512  0057D4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9513  0057D6  0BF7               	andlw	-9
  9514  0057D8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9515  0057DA  6E83               	movwf	3971,c	;volatile
  9516  0057DC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9517  0057E0  90D8               	bcf	status,0,c
  9518  0057E2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9519  0057E4  90D8               	bcf	status,0,c
  9520  0057E6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9521  0057E8  0E01               	movlw	1
  9522  0057EA  1601               	andwf	??_Lcd_Chr_CP,f,c
  9523  0057EC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9524  0057EE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9525  0057F0  5083               	movf	3971,w,c	;volatile
  9526  0057F2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9527  0057F4  0BFB               	andlw	-5
  9528  0057F6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9529  0057F8  6E83               	movwf	3971,c	;volatile
  9530                           
  9531                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  9532  0057FA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9533  0057FE  90D8               	bcf	status,0,c
  9534  005800  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9535  005802  0E01               	movlw	1
  9536  005804  1601               	andwf	??_Lcd_Chr_CP,f,c
  9537  005806  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9538  005808  5083               	movf	3971,w,c	;volatile
  9539  00580A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9540  00580C  0BFD               	andlw	-3
  9541  00580E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9542  005810  6E83               	movwf	3971,c	;volatile
  9543  005812  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9544  005816  0E01               	movlw	1
  9545  005818  1601               	andwf	??_Lcd_Chr_CP,f,c
  9546  00581A  5083               	movf	3971,w,c	;volatile
  9547  00581C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9548  00581E  0BFE               	andlw	-2
  9549  005820  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9550  005822  6E83               	movwf	3971,c	;volatile
  9551                           
  9552                           ;./flex_lcd.h: 144: _delay(10);
  9553  005824  0E03               	movlw	3
  9554  005826                     u5907:
  9555  005826  2EE8               	decfsz	wreg,f,c
  9556  005828  D7FE               	bra	u5907
  9557  00582A  F000               	nop	
  9558                           
  9559                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  9560  00582C  8A83               	bsf	3971,5,c	;volatile
  9561  00582E  0E05               	movlw	5
  9562  005830                     u5917:
  9563  005830  2EE8               	decfsz	wreg,f,c
  9564  005832  D7FE               	bra	u5917
  9565  005834  9A83               	bcf	3971,5,c	;volatile
  9566                           
  9567                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(12000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(12000000/4000000.0)));
  9568  005836  0E05               	movlw	5
  9569  005838                     u5927:
  9570  005838  2EE8               	decfsz	wreg,f,c
  9571  00583A  D7FE               	bra	u5927
  9572  00583C  0E16               	movlw	22
  9573  00583E  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  9574  005840  0E6C               	movlw	108
  9575  005842                     u5937:
  9576  005842  2EE8               	decfsz	wreg,f,c
  9577  005844  D7FE               	bra	u5937
  9578  005846  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  9579  005848  D7FC               	bra	u5937
  9580  00584A  D000               	nop2	
  9581  00584C  0012               	return		;funcret
  9582  00584E                     __end_of_Lcd_Chr_CP:
  9583                           	opt callstack 0
  9584                           
  9585 ;; *************** function _Lcd_Init *****************
  9586 ;; Defined at:
  9587 ;;		line 52 in file "./flex_lcd.h"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;  data            1    4[COMRAM] unsigned char 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, status,2, status,0, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0
  9602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9603 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9604 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9605 ;;Total ram usage:        2 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:    1
  9608 ;; This function calls:
  9609 ;;		_Lcd_Cmd
  9610 ;; This function is called by:
  9611 ;;		_main
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text35
  9616  0054FA                     __ptext35:
  9617                           	opt callstack 0
  9618  0054FA                     _Lcd_Init:
  9619                           	opt callstack 29
  9620                           
  9621                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  9622                           
  9623                           ;incstack = 0
  9624  0054FA  9695               	bcf	3989,3,c	;volatile
  9625                           
  9626                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  9627  0054FC  9495               	bcf	3989,2,c	;volatile
  9628                           
  9629                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  9630  0054FE  9295               	bcf	3989,1,c	;volatile
  9631                           
  9632                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  9633  005500  9095               	bcf	3989,0,c	;volatile
  9634                           
  9635                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  9636  005502  9A95               	bcf	3989,5,c	;volatile
  9637                           
  9638                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  9639  005504  9895               	bcf	3989,4,c	;volatile
  9640                           
  9641                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  9642  005506  9683               	bcf	3971,3,c	;volatile
  9643                           
  9644                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  9645  005508  9483               	bcf	3971,2,c	;volatile
  9646                           
  9647                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  9648  00550A  9283               	bcf	3971,1,c	;volatile
  9649                           
  9650                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  9651  00550C  9083               	bcf	3971,0,c	;volatile
  9652                           
  9653                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
  9654  00550E  9A83               	bcf	3971,5,c	;volatile
  9655                           
  9656                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
  9657  005510  9883               	bcf	3971,4,c	;volatile
  9658                           
  9659                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9660  005512  0E16               	movlw	22
  9661  005514  6E04               	movwf	??_Lcd_Init& (0+255),c
  9662  005516  0E6C               	movlw	108
  9663  005518                     u5947:
  9664  005518  2EE8               	decfsz	wreg,f,c
  9665  00551A  D7FE               	bra	u5947
  9666  00551C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9667  00551E  D7FC               	bra	u5947
  9668  005520  D000               	nop2	
  9669                           
  9670                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9671  005522  0E16               	movlw	22
  9672  005524  6E04               	movwf	??_Lcd_Init& (0+255),c
  9673  005526  0E6C               	movlw	108
  9674  005528                     u5957:
  9675  005528  2EE8               	decfsz	wreg,f,c
  9676  00552A  D7FE               	bra	u5957
  9677  00552C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9678  00552E  D7FC               	bra	u5957
  9679  005530  D000               	nop2	
  9680                           
  9681                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9682  005532  0E16               	movlw	22
  9683  005534  6E04               	movwf	??_Lcd_Init& (0+255),c
  9684  005536  0E6C               	movlw	108
  9685  005538                     u5967:
  9686  005538  2EE8               	decfsz	wreg,f,c
  9687  00553A  D7FE               	bra	u5967
  9688  00553C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9689  00553E  D7FC               	bra	u5967
  9690  005540  D000               	nop2	
  9691                           
  9692                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9693  005542  0E16               	movlw	22
  9694  005544  6E04               	movwf	??_Lcd_Init& (0+255),c
  9695  005546  0E6C               	movlw	108
  9696  005548                     u5977:
  9697  005548  2EE8               	decfsz	wreg,f,c
  9698  00554A  D7FE               	bra	u5977
  9699  00554C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9700  00554E  D7FC               	bra	u5977
  9701  005550  D000               	nop2	
  9702                           
  9703                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9704  005552  0E16               	movlw	22
  9705  005554  6E04               	movwf	??_Lcd_Init& (0+255),c
  9706  005556  0E6C               	movlw	108
  9707  005558                     u5987:
  9708  005558  2EE8               	decfsz	wreg,f,c
  9709  00555A  D7FE               	bra	u5987
  9710  00555C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9711  00555E  D7FC               	bra	u5987
  9712  005560  D000               	nop2	
  9713                           
  9714                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9715  005562  0E16               	movlw	22
  9716  005564  6E04               	movwf	??_Lcd_Init& (0+255),c
  9717  005566  0E6C               	movlw	108
  9718  005568                     u5997:
  9719  005568  2EE8               	decfsz	wreg,f,c
  9720  00556A  D7FE               	bra	u5997
  9721  00556C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9722  00556E  D7FC               	bra	u5997
  9723  005570  D000               	nop2	
  9724                           
  9725                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  9726  005572  0E01               	movlw	1
  9727  005574  6E05               	movwf	Lcd_Init@data,c
  9728  005576                     l47:
  9729                           
  9730                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
  9731  005576  9683               	bcf	3971,3,c	;volatile
  9732  005578  9483               	bcf	3971,2,c	;volatile
  9733  00557A  8283               	bsf	3971,1,c	;volatile
  9734  00557C  8083               	bsf	3971,0,c	;volatile
  9735  00557E  9A83               	bcf	3971,5,c	;volatile
  9736                           
  9737                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
  9738  005580  9883               	bcf	3971,4,c	;volatile
  9739  005582  9683               	bcf	3971,3,c	;volatile
  9740  005584  9483               	bcf	3971,2,c	;volatile
  9741  005586  8283               	bsf	3971,1,c	;volatile
  9742  005588  8083               	bsf	3971,0,c	;volatile
  9743                           
  9744                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  9745  00558A  8A83               	bsf	3971,5,c	;volatile
  9746  00558C  9883               	bcf	3971,4,c	;volatile
  9747                           
  9748                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9749  00558E  0E05               	movlw	5
  9750  005590                     u6007:
  9751  005590  2EE8               	decfsz	wreg,f,c
  9752  005592  D7FE               	bra	u6007
  9753                           
  9754                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
  9755  005594  9683               	bcf	3971,3,c	;volatile
  9756  005596  9483               	bcf	3971,2,c	;volatile
  9757  005598  8283               	bsf	3971,1,c	;volatile
  9758  00559A  8083               	bsf	3971,0,c	;volatile
  9759  00559C  9A83               	bcf	3971,5,c	;volatile
  9760                           
  9761                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
  9762  00559E  9883               	bcf	3971,4,c	;volatile
  9763                           
  9764                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9765  0055A0  0E16               	movlw	22
  9766  0055A2  6E04               	movwf	??_Lcd_Init& (0+255),c
  9767  0055A4  0E6C               	movlw	108
  9768  0055A6                     u6017:
  9769  0055A6  2EE8               	decfsz	wreg,f,c
  9770  0055A8  D7FE               	bra	u6017
  9771  0055AA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9772  0055AC  D7FC               	bra	u6017
  9773  0055AE  D000               	nop2	
  9774                           
  9775                           ;./flex_lcd.h: 81: }
  9776  0055B0  2A05               	incf	Lcd_Init@data,f,c
  9777  0055B2  0E03               	movlw	3
  9778  0055B4  6405               	cpfsgt	Lcd_Init@data,c
  9779  0055B6  D7DF               	goto	l47
  9780                           
  9781                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  9782  0055B8  9683               	bcf	3971,3,c	;volatile
  9783  0055BA  9483               	bcf	3971,2,c	;volatile
  9784  0055BC  8283               	bsf	3971,1,c	;volatile
  9785  0055BE  9083               	bcf	3971,0,c	;volatile
  9786  0055C0  9A83               	bcf	3971,5,c	;volatile
  9787  0055C2  9883               	bcf	3971,4,c	;volatile
  9788                           
  9789                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  9790  0055C4  9683               	bcf	3971,3,c	;volatile
  9791  0055C6  9483               	bcf	3971,2,c	;volatile
  9792  0055C8  8283               	bsf	3971,1,c	;volatile
  9793  0055CA  9083               	bcf	3971,0,c	;volatile
  9794  0055CC  8A83               	bsf	3971,5,c	;volatile
  9795  0055CE  9883               	bcf	3971,4,c	;volatile
  9796                           
  9797                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(12000000/4000000.0)));
  9798  0055D0  0E05               	movlw	5
  9799  0055D2                     u6027:
  9800  0055D2  2EE8               	decfsz	wreg,f,c
  9801  0055D4  D7FE               	bra	u6027
  9802                           
  9803                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  9804  0055D6  9683               	bcf	3971,3,c	;volatile
  9805  0055D8  9483               	bcf	3971,2,c	;volatile
  9806  0055DA  8283               	bsf	3971,1,c	;volatile
  9807  0055DC  9083               	bcf	3971,0,c	;volatile
  9808  0055DE  9A83               	bcf	3971,5,c	;volatile
  9809  0055E0  9883               	bcf	3971,4,c	;volatile
  9810                           
  9811                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9812  0055E2  0E16               	movlw	22
  9813  0055E4  6E04               	movwf	??_Lcd_Init& (0+255),c
  9814  0055E6  0E6C               	movlw	108
  9815  0055E8                     u6037:
  9816  0055E8  2EE8               	decfsz	wreg,f,c
  9817  0055EA  D7FE               	bra	u6037
  9818  0055EC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  9819  0055EE  D7FC               	bra	u6037
  9820  0055F0  D000               	nop2	
  9821  0055F2  0E28               	movlw	40
  9822  0055F4  EC06  F02B         	call	_Lcd_Cmd
  9823  0055F8  0E10               	movlw	16
  9824  0055FA  EC06  F02B         	call	_Lcd_Cmd
  9825  0055FE  0E01               	movlw	1
  9826  005600  EC06  F02B         	call	_Lcd_Cmd
  9827  005604  0E0F               	movlw	15
  9828  005606  EC06  F02B         	call	_Lcd_Cmd
  9829  00560A  0012               	return		;funcret
  9830  00560C                     __end_of_Lcd_Init:
  9831                           	opt callstack 0
  9832                           
  9833 ;; *************** function _Lcd_Cmd *****************
  9834 ;; Defined at:
  9835 ;;		line 150 in file "./flex_lcd.h"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  data            1    wreg     unsigned char 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  data            1    2[COMRAM] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  1    wreg      void 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9849 ;;      Params:         0       0       0       0       0       0       0       0       0
  9850 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9852 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9853 ;;Total ram usage:        3 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_Lcd_Init
  9859 ;;		_Lcd_Out
  9860 ;;		_Lcd_Out2
  9861 ;;		_main
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text36
  9866  00560C                     __ptext36:
  9867                           	opt callstack 0
  9868  00560C                     _Lcd_Cmd:
  9869                           	opt callstack 29
  9870                           
  9871                           ;incstack = 0
  9872                           ;Lcd_Cmd@data stored from wreg
  9873  00560C  6E03               	movwf	Lcd_Cmd@data,c
  9874                           
  9875                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  9876  00560E  9A83               	bcf	3971,5,c	;volatile
  9877  005610  9883               	bcf	3971,4,c	;volatile
  9878                           
  9879                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  9880  005612  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  9881  005614  AE03               	btfss	Lcd_Cmd@data,7,c
  9882  005616  D001               	bra	u5085
  9883  005618  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  9884  00561A                     u5085:
  9885  00561A  0E01               	movlw	1
  9886  00561C  1601               	andwf	??_Lcd_Cmd,f,c
  9887  00561E  4601               	rlncf	??_Lcd_Cmd,f,c
  9888  005620  4601               	rlncf	??_Lcd_Cmd,f,c
  9889  005622  4601               	rlncf	??_Lcd_Cmd,f,c
  9890  005624  5083               	movf	3971,w,c	;volatile
  9891  005626  1801               	xorwf	??_Lcd_Cmd,w,c
  9892  005628  0BF7               	andlw	-9
  9893  00562A  1801               	xorwf	??_Lcd_Cmd,w,c
  9894  00562C  6E83               	movwf	3971,c	;volatile
  9895  00562E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9896  005632  0E06               	movlw	6
  9897  005634  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  9898  005636                     u5095:
  9899  005636  90D8               	bcf	status,0,c
  9900  005638  3201               	rrcf	??_Lcd_Cmd,f,c
  9901  00563A  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  9902  00563C  D7FC               	goto	u5095
  9903  00563E  0E01               	movlw	1
  9904  005640  1601               	andwf	??_Lcd_Cmd,f,c
  9905  005642  4601               	rlncf	??_Lcd_Cmd,f,c
  9906  005644  4601               	rlncf	??_Lcd_Cmd,f,c
  9907  005646  5083               	movf	3971,w,c	;volatile
  9908  005648  1801               	xorwf	??_Lcd_Cmd,w,c
  9909  00564A  0BFB               	andlw	-5
  9910  00564C  1801               	xorwf	??_Lcd_Cmd,w,c
  9911  00564E  6E83               	movwf	3971,c	;volatile
  9912                           
  9913                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  9914  005650  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9915  005654  0E05               	movlw	5
  9916  005656  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  9917  005658                     u5105:
  9918  005658  90D8               	bcf	status,0,c
  9919  00565A  3201               	rrcf	??_Lcd_Cmd,f,c
  9920  00565C  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  9921  00565E  D7FC               	goto	u5105
  9922  005660  0E01               	movlw	1
  9923  005662  1601               	andwf	??_Lcd_Cmd,f,c
  9924  005664  4601               	rlncf	??_Lcd_Cmd,f,c
  9925  005666  5083               	movf	3971,w,c	;volatile
  9926  005668  1801               	xorwf	??_Lcd_Cmd,w,c
  9927  00566A  0BFD               	andlw	-3
  9928  00566C  1801               	xorwf	??_Lcd_Cmd,w,c
  9929  00566E  6E83               	movwf	3971,c	;volatile
  9930  005670  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9931  005674  3A01               	swapf	??_Lcd_Cmd,f,c
  9932  005676  0E0F               	movlw	15
  9933  005678  1601               	andwf	??_Lcd_Cmd,f,c
  9934  00567A  0E01               	movlw	1
  9935  00567C  1601               	andwf	??_Lcd_Cmd,f,c
  9936  00567E  5083               	movf	3971,w,c	;volatile
  9937  005680  1801               	xorwf	??_Lcd_Cmd,w,c
  9938  005682  0BFE               	andlw	-2
  9939  005684  1801               	xorwf	??_Lcd_Cmd,w,c
  9940  005686  6E83               	movwf	3971,c	;volatile
  9941                           
  9942                           ;./flex_lcd.h: 154: _delay(10);
  9943  005688  0E03               	movlw	3
  9944  00568A                     u6047:
  9945  00568A  2EE8               	decfsz	wreg,f,c
  9946  00568C  D7FE               	bra	u6047
  9947  00568E  F000               	nop	
  9948                           
  9949                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  9950  005690  8A83               	bsf	3971,5,c	;volatile
  9951  005692  0E05               	movlw	5
  9952  005694                     u6057:
  9953  005694  2EE8               	decfsz	wreg,f,c
  9954  005696  D7FE               	bra	u6057
  9955  005698  9A83               	bcf	3971,5,c	;volatile
  9956                           
  9957                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  9958  00569A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9959  00569E  90D8               	bcf	status,0,c
  9960  0056A0  3201               	rrcf	??_Lcd_Cmd,f,c
  9961  0056A2  90D8               	bcf	status,0,c
  9962  0056A4  3201               	rrcf	??_Lcd_Cmd,f,c
  9963  0056A6  90D8               	bcf	status,0,c
  9964  0056A8  3201               	rrcf	??_Lcd_Cmd,f,c
  9965  0056AA  0E01               	movlw	1
  9966  0056AC  1601               	andwf	??_Lcd_Cmd,f,c
  9967  0056AE  4601               	rlncf	??_Lcd_Cmd,f,c
  9968  0056B0  4601               	rlncf	??_Lcd_Cmd,f,c
  9969  0056B2  4601               	rlncf	??_Lcd_Cmd,f,c
  9970  0056B4  5083               	movf	3971,w,c	;volatile
  9971  0056B6  1801               	xorwf	??_Lcd_Cmd,w,c
  9972  0056B8  0BF7               	andlw	-9
  9973  0056BA  1801               	xorwf	??_Lcd_Cmd,w,c
  9974  0056BC  6E83               	movwf	3971,c	;volatile
  9975  0056BE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9976  0056C2  90D8               	bcf	status,0,c
  9977  0056C4  3201               	rrcf	??_Lcd_Cmd,f,c
  9978  0056C6  90D8               	bcf	status,0,c
  9979  0056C8  3201               	rrcf	??_Lcd_Cmd,f,c
  9980  0056CA  0E01               	movlw	1
  9981  0056CC  1601               	andwf	??_Lcd_Cmd,f,c
  9982  0056CE  4601               	rlncf	??_Lcd_Cmd,f,c
  9983  0056D0  4601               	rlncf	??_Lcd_Cmd,f,c
  9984  0056D2  5083               	movf	3971,w,c	;volatile
  9985  0056D4  1801               	xorwf	??_Lcd_Cmd,w,c
  9986  0056D6  0BFB               	andlw	-5
  9987  0056D8  1801               	xorwf	??_Lcd_Cmd,w,c
  9988  0056DA  6E83               	movwf	3971,c	;volatile
  9989                           
  9990                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  9991  0056DC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9992  0056E0  90D8               	bcf	status,0,c
  9993  0056E2  3201               	rrcf	??_Lcd_Cmd,f,c
  9994  0056E4  0E01               	movlw	1
  9995  0056E6  1601               	andwf	??_Lcd_Cmd,f,c
  9996  0056E8  4601               	rlncf	??_Lcd_Cmd,f,c
  9997  0056EA  5083               	movf	3971,w,c	;volatile
  9998  0056EC  1801               	xorwf	??_Lcd_Cmd,w,c
  9999  0056EE  0BFD               	andlw	-3
 10000  0056F0  1801               	xorwf	??_Lcd_Cmd,w,c
 10001  0056F2  6E83               	movwf	3971,c	;volatile
 10002  0056F4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10003  0056F8  0E01               	movlw	1
 10004  0056FA  1601               	andwf	??_Lcd_Cmd,f,c
 10005  0056FC  5083               	movf	3971,w,c	;volatile
 10006  0056FE  1801               	xorwf	??_Lcd_Cmd,w,c
 10007  005700  0BFE               	andlw	-2
 10008  005702  1801               	xorwf	??_Lcd_Cmd,w,c
 10009  005704  6E83               	movwf	3971,c	;volatile
 10010                           
 10011                           ;./flex_lcd.h: 158: _delay(10);
 10012  005706  0E03               	movlw	3
 10013  005708                     u6067:
 10014  005708  2EE8               	decfsz	wreg,f,c
 10015  00570A  D7FE               	bra	u6067
 10016  00570C  F000               	nop	
 10017                           
 10018                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
 10019  00570E  8A83               	bsf	3971,5,c	;volatile
 10020  005710  0E05               	movlw	5
 10021  005712                     u6077:
 10022  005712  2EE8               	decfsz	wreg,f,c
 10023  005714  D7FE               	bra	u6077
 10024  005716  9A83               	bcf	3971,5,c	;volatile
 10025                           
 10026                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(12000000/4000000.0)));
 10027  005718  0E16               	movlw	22
 10028  00571A  6E01               	movwf	??_Lcd_Cmd& (0+255),c
 10029  00571C  0E6C               	movlw	108
 10030  00571E                     u6087:
 10031  00571E  2EE8               	decfsz	wreg,f,c
 10032  005720  D7FE               	bra	u6087
 10033  005722  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
 10034  005724  D7FC               	bra	u6087
 10035  005726  D000               	nop2	
 10036  005728  0012               	return		;funcret
 10037  00572A                     __end_of_Lcd_Cmd:
 10038                           	opt callstack 0
 10039                           
 10040                           	psect	rparam
 10041  0000                     tosu	equ	0xFFF
 10042                           tosh	equ	0xFFE
 10043                           tosl	equ	0xFFD
 10044                           stkptr	equ	0xFFC
 10045                           pclatu	equ	0xFFB
 10046                           pclath	equ	0xFFA
 10047                           pcl	equ	0xFF9
 10048                           tblptru	equ	0xFF8
 10049                           tblptrh	equ	0xFF7
 10050                           tblptrl	equ	0xFF6
 10051                           tablat	equ	0xFF5
 10052                           prodh	equ	0xFF4
 10053                           prodl	equ	0xFF3
 10054                           indf0	equ	0xFEF
 10055                           postinc0	equ	0xFEE
 10056                           postdec0	equ	0xFED
 10057                           preinc0	equ	0xFEC
 10058                           plusw0	equ	0xFEB
 10059                           fsr0h	equ	0xFEA
 10060                           fsr0l	equ	0xFE9
 10061                           wreg	equ	0xFE8
 10062                           indf1	equ	0xFE7
 10063                           postinc1	equ	0xFE6
 10064                           postdec1	equ	0xFE5
 10065                           preinc1	equ	0xFE4
 10066                           plusw1	equ	0xFE3
 10067                           fsr1h	equ	0xFE2
 10068                           fsr1l	equ	0xFE1
 10069                           bsr	equ	0xFE0
 10070                           indf2	equ	0xFDF
 10071                           postinc2	equ	0xFDE
 10072                           postdec2	equ	0xFDD
 10073                           preinc2	equ	0xFDC
 10074                           plusw2	equ	0xFDB
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8


Data Sizes:
    Strings     299
    Constant    0
    Data        0
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    100     153
    BANK1           256      0     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_34(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_34(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_22(CODE[7]), STR_14(CODE[8]), STR_6(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> palabra0(BANK1[17]), palabra2(BANK1[17]), palabra(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra0(BANK1[17]), palabra2(BANK1[17]), palabra(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1243_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra0(BANK1[17]), palabra2(BANK1[17]), palabra(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra0(BANK1[17]), palabra2(BANK1[17]), palabra(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_22(CODE[7]), STR_14(CODE[8]), STR_6(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_22(CODE[7]), STR_14(CODE[8]), STR_6(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_22(CODE[7]), STR_14(CODE[8]), STR_6(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra0(BANK1[17]), palabra2(BANK1[17]), palabra(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_28(CODE[18]), STR_27(CODE[10]), STR_26(CODE[13]), STR_25(CODE[15]), 
		 -> STR_24(CODE[18]), STR_23(CODE[13]), STR_21(CODE[12]), STR_20(CODE[13]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[15]), STR_16(CODE[12]), 
		 -> STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[16]), STR_11(CODE[14]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[10]), STR_7(CODE[13]), 
		 -> STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[14]), STR_2(CODE[7]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   46403
                                             94 BANK0      6     6      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   30320
                                             76 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29659
                                             92 COMRAM     2     2      0
                                             70 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   29276
                                             82 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23821
                                             70 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3193
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                             25 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1702
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     989
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3    4333
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fladd
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      83       7       51.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17A      20        0.0%
DATA                 0      0     17A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 31 14:22:28 2019

           ___fldiv@aexp 0032             ___fldiv@bexp 0031             ___fldiv@sign 002A  
                     l47 5576             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l131 5C3C  
                    l143 5BE8                      l135 5B40                      l119 7D98  
                    l233 6E52                      l139 5B94                      l192 50F8  
                    l259 7134                      l930 5FDC                      l918 5F72  
                    l599 54BE                      l863 61CA                      l864 61A8  
                    l929 5FE0                      l948 6414                      l965 66B2  
                    l957 662C                      l958 6628                      l879 629C  
                    l888 6302                      l889 62FE                      l996 590A  
                    l989 588C             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000                      _adc 00DC                      _pad 50C8  
                    _max 00D4                      _min 00D0             ___awmod@sign 0006  
                    wreg 000FE8             __CFG_FOSC$HS 000000             ___flmul@aexp 0012  
           ___flmul@bexp 0013             ___flmul@sign 000D             ___flmul@temp 0018  
           ___flmul@prod 0014             __CFG_LVP$OFF 000000             ___fltol@exp1 000A  
           __CFG_WDT$OFF 000000                     l1044 5AC4                     l1056 5D60  
                   l1136 4D60                     l3200 6226                     l3112 60FC  
                   l4000 712C                     l3210 628C                     l4002 714E  
                   l3124 6120                     l3116 6100                     l3060 4C82  
                   l4100 73F4                     l3046 517A                     l4014 71D0  
                   l3312 53E0                     l3056 4C6C                     l3064 4BB4  
                   l4200 672C                     l4130 59A0                     l3410 5E70  
                   l3218 62C0                     l3234 62E0                     l3154 615C  
                   l3066 4BB8                     l4026 71FE                     l4034 721E  
                   l4042 7242                     l4050 72DA                     l4202 672E  
                   l4140 59EA                     l4132 59A4                     l3228 62D6  
                   l3092 60B8                     l3308 53D6                     l3324 4D7A  
                   l4116 7454                     l4220 674E                     l4212 6746  
                   l4204 673E                     l4150 5A08                     l3502 607E  
                   l3406 5E6C                     l3262 636E                     l3254 6348  
                   l3190 6210                     l3182 61EE                     l3166 61B6  
                   l3318 5420                     l3342 5CC2                     l4062 731C  
                   l4152 5A30                     l3504 6080                     l3432 5ED2  
                   l3424 5EBA                     l3600 65F2                     l3192 6214  
                   l3168 61BA                     l3088 60B4                     l3360 5DEE  
                   l3352 5D82                     l4080 7372                     l4240 6828  
                   l4224 6758                     l4216 674A                     l4208 6742  
                   l4304 6AE2                     l4146 59FA                     l3450 5F4A  
                   l3442 5F22                     l3418 5EA4                     l3266 6376  
                   l3282 50E2                     l4090 73C8                     l4242 6846  
                   l4226 679A                     l4156 5A64                     l4148 5A02  
                   l3700 4EE8                     l3620 6670                     l3524 63C0  
                   l3268 6378                     l3356 5DC0                     l3292 511A  
                   l4260 692E                     l4244 6854                     l4430 4F48  
                   l3710 4F0A                     l3462 5F88                     l3390 5E30  
                   l3542 6400                     l3526 63C4                     l3286 50F0  
                   l4078 7368                     l4510 5B6C                     l4432 4F4E  
                   l4440 4F62                     l3720 4F2C                     l3704 4EF4  
                   l3456 5F70                     l3624 668E                     l3552 6432  
                   l3544 6404                     l3528 63D4                     l3800 531C  
                   l3296 5148                     l3288 5102                     l4176 522C  
                   l4272 69B4                     l4434 4F54                     l4442 4F8A  
                   l3386 5E2C                     l4178 523A                     l4370 4E48  
                   l4530 5BD4                     l4522 5BAC                     l4514 5B80  
                   l4506 5B58                     l4444 4F92                     l4436 4F5A  
                   l4460 4E74                     l3724 4F3A                     l3716 4F22  
                   l3708 4F02                     l3492 6048                     l3468 5FA6  
                   l3740 50C4                     l3732 5072                     l3636 66D0  
                   l4268 698A                     l4470 4EB2                     l4462 4E7A  
                   l4606 597C                     l3670 4FFC                     l3662 4FDE  
                   l3814 534C                     l3806 5324                     l3902 6D22  
                   l4294 6AC0                     l4550 5C40                     l4542 5C14  
                   l4526 5BC0                     ?_pad 0011                     l4448 4FA6  
                   l4456 4E68                     l3680 501C                     l3656 4FCE  
                   l3496 6072                     l3488 6024                     l3736 50A6  
                   l3752 5492                     l3808 5330                     l3912 6DE6  
                   l3840 6B60                     l4288 6A84                     l4368 4E22  
                   l4474 4EC4                     l4458 4E6E                     l4466 4E82  
                   l4570 589C                     l3826 4CD0                     l3762 54F6  
                   l3594 65D4                     l3770 4BF0                     l3906 6D5C  
                   l4298 6ACA                     l4546 5C28                     l4538 5C00  
                   l4490 5B04                     l4802 7BBA                     l4468 4EAA  
                   l4580 58CC                     l3668 4FF4                     l3684 5026  
                   l3756 54A8                     l3748 545E                     l3780 52C2  
                   l3924 6E3A                     l3908 6DAA                     l3852 6B8E  
                   l3860 6BA4                     l4716 7816                     l4652 7536  
                   l4590 593C                     l4582 58F2                     l3942 6EAA  
                   l3934 6E62                     l3870 6C10                     l4494 5B18  
                   l4822 7D6C                     l4750 79BC                     l4734 78C4  
                   l4576 58BA                     l3688 5034                     l3960 6EF0  
                   l3944 6EAE                     l3928 6E5C                     l3872 6C28  
                   l4816 7D12                     l4672 75EE                     l4578 58C0  
                   l3970 6F2A                     l3954 6ECC                     l3874 6C32  
                   l4498 5B2C                     l4588 5930                     l3796 530C  
                   l3964 6F00                     l3878 6C58                     l4790 7B70  
                   l3992 70D4                     l3888 6CC4                     l3896 6CDE  
                   l4688 76E6                     l3986 7096                     l3978 7020  
                   l4798 7BB2                     STR_1 7FB6                     STR_2 7FE4  
                   STR_3 7F4F                     STR_4 7EF5                     STR_5 7F23  
                   STR_6 7FD5                     STR_7 7F84                     STR_8 7FCB  
                   STR_9 7F41                     u3000 6190                     u3030 61D2  
                   _LATB 000F8A                     u4010 5000                     u4120 50C0  
                   u3240 6354                     u3160 62E4                     u4200 52E0  
                   u3320 539C                     u3410 4D46                     u3180 62F8  
                   u3420 4D48                     u4300 6B7E                     u4205 52D6  
                   u3325 5392                     u4070 4F0E                     u3510 5DA0  
                   u4240 5336                     u3440 5C90                     u5040 6A36  
                   u5105 5658                     u3370 5418                     u3450 5CB0  
                   u4330 6BE6                     u5050 6A38                     u5115 5738  
                   u3515 5D96                     u3540 4C2A                     u3380 541A  
                   u2820 5172                     u4420 6E0E                     u4340 6BE8  
                   u5125 5754                     u3365 53FA                     u3445 5C86  
                   u3550 4C2C                     u4270 4CCC                     u4190 52B0  
                   u3390 4DB2                     u6007 5590                     u5135 5776  
                   u3720 5FD6                     u2840 51BA                     u4520 6EC8  
                   u6017 55A6                     u3490 5D40                     u4450 6E48  
                   u4370 6C9A                     u6027 55D2                     u3475 5CDA  
                   u5420 5946                     u3476 5CE0                     u4380 6C9C  
                   u5500 78EC                     u5085 561A                     u6037 55E8  
                   u3477 5CEE                     u3397 4DA8                     u3910 6622  
                   u2870 4C5A                     u6047 568A                     u5095 5636  
                   u3495 5D36                     u3760 6032                     u2880 4C5C  
                   u4480 6E7A                     u6057 5694                     u4810 59E6  
                   u3770 6056                     u5530 7A0C                     u6067 5708  
                   u3860 6420                     u2980 617E                     u5460 7616  
                   u6077 5712                     u4830 5A94                     u3950 667E  
                   u3870 6596                     u2990 618E                     u4750 73DE  
                   u4910 5280                     u6087 571E                     u4840 5A96  
                   u3960 669C                     u5617 74E6                     u4770 743E  
                   u4690 72FE                     u3875 658C                     u5707 780A  
                   u5627 7522                     u4780 7440                     u5717 7838  
                   u5637 7542                     u5590 7D9C                     u5807 7B64  
                   u5727 7874                     u5647 757E                     u5817 7B92  
                   u5737 7894                     u5657 759E                     u4970 688C  
                   u5907 5826                     u5827 7DC6                     u5747 7A50  
                   u5667 7752                     u4980 688E                     u5917 5830  
                   u5837 7E02                     u5757 7A8C                     u5677 778E  
                   u4990 689C                     u5927 5838                     u5847 7E22  
                   u5767 7AAC                     u5687 77AE                     u5937 5842  
                   u5857 7E5E                     u5777 7AE8                     u5697 77EA  
                   u5947 5518                     u5867 7E7E                     u5787 7B08  
                   u5957 5528                     u5877 7EBA                     u5797 7B44  
                   u5967 5538                     u5887 57A8                     u5977 5548  
                   u5897 57B2                     u5987 5558                     u5997 5568  
           __CFG_PWRT$ON 000000                     _dbuf 0111                     _atoi 598E  
                   _main 7492                     _prec 00E4                     _nout 00E0  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 535E                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000          ___fldiv@new_exp 002B  
        __end_of_Lcd_Cmd 572A             _tolower$1315 000D          __end_of_Lcd_Out 4FBA  
          __CFG_MCLRE$ON 000000             ___param_bank 000000             main@caracter 00C0  
             _Lcd_Chr_CP 572A                    ??_pad 0017           Lcd_Out2@buffer 0005  
          __CFG_PLLDIV$1 000000            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 6394                    ?_main 0001          __end_of___fldiv 6088  
        __end_of___awdiv 503E          __end_of___flneg 4C02                    STR_10 7F91  
                  STR_11 7F4F                    STR_20 7F91                    STR_12 7EE5  
                  STR_21 7F9E                    STR_13 7F14                    STR_14 7FD5  
                  STR_30 7FF3                    STR_22 7FDD                    STR_15 7F84  
                  STR_23 7F6A                    STR_16 7FAA                    STR_24 7ED3  
                  STR_33 7FEF                    STR_17 7F32                    STR_25 7F05  
                  STR_34 7FF7                    STR_18 7F77                    STR_26 7F5D  
                  STR_19 7F41                    STR_27 7FC1                    STR_28 7ED3  
        __end_of___awmod 4F44                    STR_37 7FFB                    STR_29 7FEB  
                  STR_39 7FFB          __end_of___flmul 66E6          __end_of___flsub 4D1E  
        __end_of___fltol 535E          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 0055                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 00E6                    _fputc 5162                    _fputs 4C62  
        __end_of_isdigit 4C32                    _valor 00CC                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00E2  
                  _putch 4B60          __end_of_teclado 5C4A          __end_of_isspace 4CD8  
        __end_of_isupper 4C62                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 4E0E           ?___fpclassifyf 0001          __end_of_tolower 4D6A  
        __end_of_strncmp 52A4           __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 560C  
       __end_of_Lcd_Out2 4ED4          __initialization 4B62             __end_of_atoi 5ACE  
           __end_of_main 7ED2                   ??_atoi 000A                   ??_main 00BE  
          __activetblptr 000002          __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_putch 0001  
              ??_Lcd_Cmd 0001            vfpfcnvrt@done 0098                ??_Lcd_Out 0007  
       __end_of___xxtofl 598E           __CFG_XINST$OFF 000000             vfprintf@cfmt 005D  
                 ___flge 542A                   ___fleq 503E              ?_Lcd_Chr_CP 0001  
              ??___fladd 0022                   ___wmul 4B84                ??___fldiv 0022  
              ??___awdiv 0005                ??___flneg 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___flmul 0009                ??___flsub 0032  
              ??___fltol 0005                   _efgtoa 6B16                   _conver 00D8  
                 _floorf 5C4A                   clear_0 4B68                   clear_1 4B74  
       ___awdiv@quotient 0007          ___awmod@divisor 0003          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 4D6A                   _strlen 4BAA  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001                ??_teclado 0001  
           __mediumconst 7ED2                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 4E64                ??_sprintf 005F  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 001A  
             ___flge@ff2 001E          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 4B7A  
        __CFG_PBADEN$OFF 000000               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001            __end_of_fputc 5202  
          __end_of_fputs 4C9A            __end_of_putch 4B62                ?_Lcd_Init 0001  
              ?_Lcd_Out2 0004          __CFG_LPT1OSC$ON 000000                  ??_fputc 0005  
                ??_fputs 000E      __size_of_Lcd_Chr_CP 0124                  ??_putch 0001  
             __pbssBANK0 00C4               __pbssBANK1 0100               _efgtoa$710 006E  
             _efgtoa$704 0068               _efgtoa$708 006A               _efgtoa$709 006C  
             _efgtoa$698 0064               _efgtoa$699 0066                  ?___flge 001A  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0047  
                ?_floorf 0033                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 0430               ??_Lcd_Init 0004  
             ??_Lcd_Out2 0007          __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 560C  
                _Lcd_Out 4F44                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___fladd 6088  
                ___fldiv 5E00                  ___awdiv 4FBA                  ___flneg 4BD4  
                ___awmod 4ED4                  ___flmul 6394                  ___flsub 4CD8  
                ___fltol 52A4          __size_of___wmul 0026                ?_vfprintf 00A6  
        __size_of_efgtoa 097C          __size_of_floorf 01B6                  __pcinit 4B62  
                __ramtop 0800                  __ptext0 7492                  __ptext1 5ACE  
                __ptext2 4DBC                  __ptext3 4E0E                  __ptext4 66E6  
                __ptext5 5202                  __ptext6 6B16                  __ptext7 4D1E  
                __ptext8 4C32                  __ptext9 4D6A          __size_of_strcpy 0052  
        __size_of_strlen 002A                  _palabra 00E8             __size_of_pad 009A  
                _isdigit 4C02               ??___xxtofl 0005         ___awmod@dividend 0001  
                _teclado 5ACE                  _isspace 4C9A                  _isupper 4C32  
                efgtoa@c 004D                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 0049                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0074  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 0070  
                efgtoa@u 0094                  efgtoa@w 007F                  atoi@neg 000E  
                _sprintf 4DBC                  _tolower 4D1E                  _strncmp 5202  
   end_of_initialization 4B7A                  floorf@e 0041                  floorf@m 003D  
                floorf@u 0043                  floorf@x 0033                  fputc@fp 0003  
          __Lmediumconst 7ED2                  fputs@fp 000C        __end_of_vfpfcnvrt 6B16  
             efgtoa@mode 0081               efgtoa@sign 007A             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0009                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 005D                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _PORTBbits 000F81  
              _PORTDbits 000F83              ___fladd@grs 0029            ___xxtofl@sign 0009  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISDbits 000F95  
            ___fldiv@grs 002D              ___fldiv@rem 0026       __end_of_Lcd_Chr_CP 584E  
            ___flmul@grs 000E           __end_of___flge 54FA           __end_of___fleq 50C8  
            vfpfcnvrt@ap 0057              vfpfcnvrt@ct 00A2              vfpfcnvrt@fp 0053  
         __end_of___wmul 4BAA           __end_of_efgtoa 7492           __end_of_floorf 5E00  
             floorf@F524 00C4           __end_of_strcpy 4DBC           __end_of_strlen 4BD4  
    start_initialization 4B62              __end_of_pad 5162            Lcd_Out@buffer 0005  
      __size_of_Lcd_Init 0112        __size_of_Lcd_Out2 0070    __end_of___fpclassifyf 542A  
            vfprintf@fmt 00A8                 ??___flge 0022                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 004E                 ??_floorf 0037  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 001E  
              ___fladd@b 001A                ___fldiv@a 001E                ___fldiv@b 001A  
              ___flmul@a 0005                ___flmul@b 0001                ___flsub@a 002E  
              ___flsub@b 002A            __pcstackBANK0 0060        __size_of___xxtofl 0140  
               ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004                _atoi$1200 0014  
              _atoi$1201 0012                _atoi$1199 0010            __pmediumconst 7ED2  
               ?___fladd 001A                 ?___fldiv 001A                 ?___awdiv 0001  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 0001  
               ?___flsub 002A                 ?___fltol 0001        __size_of_vfprintf 0056  
               ?_isdigit 0001                 ?_teclado 0001                 ?_isspace 0001  
               ?_isupper 0001                 ?_sprintf 00AC                 ?_tolower 0007  
         __size_of_fputc 00A0           __size_of_fputs 0038                 ?_strncmp 0001  
         __size_of_putch 0002           ___wmul@product 0005                 _LATAbits 000F89  
               _LATCbits 000F8B                 Lcd_Out@x 0004         __CFG_WDTPS$32768 000000  
               Lcd_Out@y 0009                _vfpfcnvrt 66E6             Lcd_Init@data 0005  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0        ___wmul@multiplier 0001  
           _isspace$1230 0007             Lcd_Out2@data 000A                 _Lcd_Init 54FA  
               _Lcd_Out2 4E64               vfpfcnvrt@c 00A5               vfpfcnvrt@f 009E  
            _INTCON2bits 000FF1         __size_of_Lcd_Cmd 011E         __size_of_Lcd_Out 0076  
               __Hrparam 0000               vfprintf@ap 00AA                 __Lrparam 0000  
             vfprintf@fp 00A6         __size_of___fladd 030C         __size_of___fldiv 0288  
       __size_of___awdiv 0084         __size_of___flneg 002E         __size_of___awmod 0070  
       __size_of___flmul 0352         __size_of___flsub 0046         __size_of___fltol 00BA  
             ?_vfpfcnvrt 0053       ___fpclassifyf@F463 00C8               sprintf@fmt 00AE  
               ___xxtofl 584E         __size_of_isdigit 0030           Lcd_Chr_CP@data 0003  
       __size_of_teclado 017C         __size_of_isspace 003E                 __ptext10 50C8  
               __ptext11 4BAA                 __ptext20 4BD4                 __ptext12 4C62  
               __ptext21 6394                 __ptext13 5162                 __ptext30 4B84  
               __ptext22 542A                 __ptext14 4B60                 __ptext31 584E  
               __ptext23 503E                 __ptext15 5C4A                 __ptext32 4E64  
               __ptext24 5E00                 __ptext16 535E                 __ptext33 4F44  
               __ptext25 4ED4                 __ptext17 52A4                 __ptext34 572A  
               __ptext26 4FBA                 __ptext18 4CD8                 __ptext35 54FA  
               __ptext27 598E                 __ptext19 6088                 __ptext36 560C  
               __ptext28 4C9A                 __ptext29 4C02         __size_of_isupper 0030  
       __size_of_sprintf 0052         __size_of_tolower 004C               strcpy@dest 0001  
       __size_of_strncmp 00A2                 _palabra0 0172                 _palabra1 0100  
               _palabra2 0161              Lcd_Cmd@data 0003            __size_of_atoi 0140  
          __size_of_main 0A40                 efgtoa@fp 0047                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060                 _vfprintf 4E0E  
  __CFG_CPUDIV$OSC1_PLL2 000000              Lcd_Out@data 000A                 isdigit@c 0001  
              sprintf@ap 00B6                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 007E              ??_vfpfcnvrt 0059            _vfpfcnvrt$724 009A  
          _vfpfcnvrt$728 009C                 sprintf@f 00B8                 tolower@c 0007  
               sprintf@s 00AC   __size_of___fpclassifyf 00CC                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 0026  
           ___fladd@aexp 0027             ___fladd@bexp 0028  
