

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 25 18:23:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _PORTB	set	3969
    90  0000                     _PORTCbits	set	3970
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISB	set	3987
    93  0000                     _ADCON1	set	4033
    94  0000                     _PORTDbits	set	3971
    95  0000                     _TRISDbits	set	3989
    96                           
    97                           	psect	mediumconst
    98  007EFA                     __pmediumconst:
    99                           	opt callstack 0
   100  007EFA  00                 	db	0
   101  007EFB                     STR_9:
   102  007EFB  31                 	db	49	;'1'
   103  007EFC  3D                 	db	61	;'='
   104  007EFD  2B                 	db	43
   105  007EFE  20                 	db	32
   106  007EFF  32                 	db	50	;'2'
   107  007F00  3D                 	db	61	;'='
   108  007F01  2D                 	db	45
   109  007F02  20                 	db	32
   110  007F03  34                 	db	52	;'4'
   111  007F04  3D                 	db	61	;'='
   112  007F05  2A                 	db	42
   113  007F06  20                 	db	32
   114  007F07  38                 	db	56	;'8'
   115  007F08  3D                 	db	61	;'='
   116  007F09  2F                 	db	47
   117  007F0A  00                 	db	0
   118  007F0B                     STR_5:
   119  007F0B  53                 	db	83	;'S'
   120  007F0C  65                 	db	101	;'e'
   121  007F0D  67                 	db	103	;'g'
   122  007F0E  75                 	db	117	;'u'
   123  007F0F  6E                 	db	110	;'n'
   124  007F10  64                 	db	100	;'d'
   125  007F11  6F                 	db	111	;'o'
   126  007F12  20                 	db	32
   127  007F13  64                 	db	100	;'d'
   128  007F14  69                 	db	105	;'i'
   129  007F15  67                 	db	103	;'g'
   130  007F16  69                 	db	105	;'i'
   131  007F17  74                 	db	116	;'t'
   132  007F18  6F                 	db	111	;'o'
   133  007F19  3A                 	db	58	;':'
   134  007F1A  00                 	db	0
   135  007F1B                     STR_10:
   136  007F1B  53                 	db	83	;'S'
   137  007F1C  65                 	db	101	;'e'
   138  007F1D  6C                 	db	108	;'l'
   139  007F1E  65                 	db	101	;'e'
   140  007F1F  63                 	db	99	;'c'
   141  007F20  63                 	db	99	;'c'
   142  007F21  69                 	db	105	;'i'
   143  007F22  6F                 	db	111	;'o'
   144  007F23  6E                 	db	110	;'n'
   145  007F24  3A                 	db	58	;':'
   146  007F25  20                 	db	32
   147  007F26  25                 	db	37
   148  007F27  30                 	db	48	;'0'
   149  007F28  33                 	db	51	;'3'
   150  007F29  64                 	db	100	;'d'
   151  007F2A  00                 	db	0
   152  007F2B                     STR_3:
   153  007F2B  50                 	db	80	;'P'
   154  007F2C  72                 	db	114	;'r'
   155  007F2D  69                 	db	105	;'i'
   156  007F2E  6D                 	db	109	;'m'
   157  007F2F  65                 	db	101	;'e'
   158  007F30  72                 	db	114	;'r'
   159  007F31  20                 	db	32
   160  007F32  64                 	db	100	;'d'
   161  007F33  69                 	db	105	;'i'
   162  007F34  67                 	db	103	;'g'
   163  007F35  69                 	db	105	;'i'
   164  007F36  74                 	db	116	;'t'
   165  007F37  6F                 	db	111	;'o'
   166  007F38  3A                 	db	58	;':'
   167  007F39  00                 	db	0
   168  007F3A                     STR_2:
   169  007F3A  2A                 	db	42
   170  007F3B  43                 	db	67	;'C'
   171  007F3C  61                 	db	97	;'a'
   172  007F3D  6C                 	db	108	;'l'
   173  007F3E  63                 	db	99	;'c'
   174  007F3F  75                 	db	117	;'u'
   175  007F40  6C                 	db	108	;'l'
   176  007F41  61                 	db	97	;'a'
   177  007F42  64                 	db	100	;'d'
   178  007F43  6F                 	db	111	;'o'
   179  007F44  72                 	db	114	;'r'
   180  007F45  61                 	db	97	;'a'
   181  007F46  2A                 	db	42
   182  007F47  00                 	db	0
   183  007F48                     STR_7:
   184  007F48  53                 	db	83	;'S'
   185  007F49  65                 	db	101	;'e'
   186  007F4A  6C                 	db	108	;'l'
   187  007F4B  65                 	db	101	;'e'
   188  007F4C  63                 	db	99	;'c'
   189  007F4D  63                 	db	99	;'c'
   190  007F4E  69                 	db	105	;'i'
   191  007F4F  6F                 	db	111	;'o'
   192  007F50  6E                 	db	110	;'n'
   193  007F51  61                 	db	97	;'a'
   194  007F52  20                 	db	32
   195  007F53  6C                 	db	108	;'l'
   196  007F54  61                 	db	97	;'a'
   197  007F55  00                 	db	0
   198  007F56                     STR_4:
   199  007F56  4E                 	db	78	;'N'
   200  007F57  75                 	db	117	;'u'
   201  007F58  6D                 	db	109	;'m'
   202  007F59  65                 	db	101	;'e'
   203  007F5A  72                 	db	114	;'r'
   204  007F5B  6F                 	db	111	;'o'
   205  007F5C  3A                 	db	58	;':'
   206  007F5D  20                 	db	32
   207  007F5E  25                 	db	37
   208  007F5F  30                 	db	48	;'0'
   209  007F60  2E                 	db	46
   210  007F61  33                 	db	51	;'3'
   211  007F62  66                 	db	102	;'f'
   212  007F63  00                 	db	0
   213  007F64                     STR_16:
   214  007F64  52                 	db	82	;'R'
   215  007F65  65                 	db	101	;'e'
   216  007F66  73                 	db	115	;'s'
   217  007F67  74                 	db	116	;'t'
   218  007F68  61                 	db	97	;'a'
   219  007F69  3D                 	db	61	;'='
   220  007F6A  20                 	db	32
   221  007F6B  2D                 	db	45
   222  007F6C  25                 	db	37
   223  007F6D  30                 	db	48	;'0'
   224  007F6E  2E                 	db	46
   225  007F6F  33                 	db	51	;'3'
   226  007F70  66                 	db	102	;'f'
   227  007F71  00                 	db	0
   228  007F72                     STR_23:
   229  007F72  53                 	db	83	;'S'
   230  007F73  59                 	db	89	;'Y'
   231  007F74  4E                 	db	78	;'N'
   232  007F75  54                 	db	84	;'T'
   233  007F76  41                 	db	65	;'A'
   234  007F77  58                 	db	88	;'X'
   235  007F78  20                 	db	32
   236  007F79  45                 	db	69	;'E'
   237  007F7A  52                 	db	82	;'R'
   238  007F7B  52                 	db	82	;'R'
   239  007F7C  4F                 	db	79	;'O'
   240  007F7D  52                 	db	82	;'R'
   241  007F7E  00                 	db	0
   242  007F7F                     STR_19:
   243  007F7F  52                 	db	82	;'R'
   244  007F80  65                 	db	101	;'e'
   245  007F81  73                 	db	115	;'s'
   246  007F82  74                 	db	116	;'t'
   247  007F83  61                 	db	97	;'a'
   248  007F84  3D                 	db	61	;'='
   249  007F85  20                 	db	32
   250  007F86  25                 	db	37
   251  007F87  30                 	db	48	;'0'
   252  007F88  2E                 	db	46
   253  007F89  33                 	db	51	;'3'
   254  007F8A  66                 	db	102	;'f'
   255  007F8B  00                 	db	0
   256  007F8C                     STR_13:
   257  007F8C  53                 	db	83	;'S'
   258  007F8D  75                 	db	117	;'u'
   259  007F8E  6D                 	db	109	;'m'
   260  007F8F  61                 	db	97	;'a'
   261  007F90  3D                 	db	61	;'='
   262  007F91  20                 	db	32
   263  007F92  25                 	db	37
   264  007F93  30                 	db	48	;'0'
   265  007F94  2E                 	db	46
   266  007F95  33                 	db	51	;'3'
   267  007F96  66                 	db	102	;'f'
   268  007F97  00                 	db	0
   269  007F98                     STR_22:
   270  007F98  4D                 	db	77	;'M'
   271  007F99  75                 	db	117	;'u'
   272  007F9A  6C                 	db	108	;'l'
   273  007F9B  74                 	db	116	;'t'
   274  007F9C  3D                 	db	61	;'='
   275  007F9D  20                 	db	32
   276  007F9E  25                 	db	37
   277  007F9F  30                 	db	48	;'0'
   278  007FA0  2E                 	db	46
   279  007FA1  33                 	db	51	;'3'
   280  007FA2  66                 	db	102	;'f'
   281  007FA3  00                 	db	0
   282  007FA4                     STR_26:
   283  007FA4  44                 	db	68	;'D'
   284  007FA5  69                 	db	105	;'i'
   285  007FA6  76                 	db	118	;'v'
   286  007FA7  3D                 	db	61	;'='
   287  007FA8  20                 	db	32
   288  007FA9  25                 	db	37
   289  007FAA  30                 	db	48	;'0'
   290  007FAB  2E                 	db	46
   291  007FAC  33                 	db	51	;'3'
   292  007FAD  66                 	db	102	;'f'
   293  007FAE  00                 	db	0
   294  007FAF                     STR_1:
   295  007FAF  42                 	db	66	;'B'
   296  007FB0  69                 	db	105	;'i'
   297  007FB1  65                 	db	101	;'e'
   298  007FB2  6E                 	db	110	;'n'
   299  007FB3  76                 	db	118	;'v'
   300  007FB4  65                 	db	101	;'e'
   301  007FB5  6E                 	db	110	;'n'
   302  007FB6  69                 	db	105	;'i'
   303  007FB7  64                 	db	100	;'d'
   304  007FB8  6F                 	db	111	;'o'
   305  007FB9  00                 	db	0
   306  007FBA                     STR_8:
   307  007FBA  4F                 	db	79	;'O'
   308  007FBB  70                 	db	112	;'p'
   309  007FBC  65                 	db	101	;'e'
   310  007FBD  72                 	db	114	;'r'
   311  007FBE  61                 	db	97	;'a'
   312  007FBF  63                 	db	99	;'c'
   313  007FC0  69                 	db	105	;'i'
   314  007FC1  6F                 	db	111	;'o'
   315  007FC2  6E                 	db	110	;'n'
   316  007FC3  00                 	db	0
   317  007FC4                     STR_20:
   318  007FC4  25                 	db	37
   319  007FC5  30                 	db	48	;'0'
   320  007FC6  2E                 	db	46
   321  007FC7  30                 	db	48	;'0'
   322  007FC8  66                 	db	102	;'f'
   323  007FC9  20                 	db	32
   324  007FCA  2A                 	db	42
   325  007FCB  00                 	db	0
   326  007FCC                     STR_11:
   327  007FCC  25                 	db	37
   328  007FCD  30                 	db	48	;'0'
   329  007FCE  2E                 	db	46
   330  007FCF  30                 	db	48	;'0'
   331  007FD0  66                 	db	102	;'f'
   332  007FD1  20                 	db	32
   333  007FD2  2B                 	db	43
   334  007FD3  00                 	db	0
   335  007FD4                     STR_14:
   336  007FD4  25                 	db	37
   337  007FD5  30                 	db	48	;'0'
   338  007FD6  2E                 	db	46
   339  007FD7  30                 	db	48	;'0'
   340  007FD8  66                 	db	102	;'f'
   341  007FD9  20                 	db	32
   342  007FDA  2D                 	db	45
   343  007FDB  00                 	db	0
   344  007FDC                     STR_24:
   345  007FDC  25                 	db	37
   346  007FDD  30                 	db	48	;'0'
   347  007FDE  2E                 	db	46
   348  007FDF  30                 	db	48	;'0'
   349  007FE0  66                 	db	102	;'f'
   350  007FE1  20                 	db	32
   351  007FE2  2F                 	db	47
   352  007FE3  00                 	db	0
   353  007FE4                     STR_12:
   354  007FE4  20                 	db	32
   355  007FE5  25                 	db	37
   356  007FE6  30                 	db	48	;'0'
   357  007FE7  2E                 	db	46
   358  007FE8  30                 	db	48	;'0'
   359  007FE9  66                 	db	102	;'f'
   360  007FEA  00                 	db	0
   361  007FEB                     STR_27:
   362  007FEB  49                 	db	73	;'I'
   363  007FEC  4E                 	db	78	;'N'
   364  007FED  46                 	db	70	;'F'
   365  007FEE  00                 	db	0
   366  007FEF                     STR_31:
   367  007FEF  4E                 	db	78	;'N'
   368  007FF0  41                 	db	65	;'A'
   369  007FF1  4E                 	db	78	;'N'
   370  007FF2  00                 	db	0
   371  007FF3                     STR_28:
   372  007FF3  69                 	db	105	;'i'
   373  007FF4  6E                 	db	110	;'n'
   374  007FF5  66                 	db	102	;'f'
   375  007FF6  00                 	db	0
   376  007FF7                     STR_32:
   377  007FF7  6E                 	db	110	;'n'
   378  007FF8  61                 	db	97	;'a'
   379  007FF9  6E                 	db	110	;'n'
   380  007FFA  00                 	db	0
   381  007FFB                     STR_35:
   382  007FFB  6C                 	db	108	;'l'
   383  007FFC  66                 	db	102	;'f'
   384  007FFD  00                 	db	0
   385  0000                     
   386                           ; #config settings
   387  007FFE  00                 	db	0	; dummy byte at the end
   388  0000                     
   389                           	psect	cinit
   390  0047D8                     __pcinit:
   391                           	opt callstack 0
   392  0047D8                     start_initialization:
   393                           	opt callstack 0
   394  0047D8                     __initialization:
   395                           	opt callstack 0
   396                           
   397                           ; Clear objects allocated to BANK1 (114 bytes)
   398  0047D8  EE01  F000         	lfsr	0,__pbssBANK1
   399  0047DC  0E72               	movlw	114
   400  0047DE                     clear_0:
   401  0047DE  6AEE               	clrf	postinc0,c
   402  0047E0  06E8               	decf	wreg,f,c
   403  0047E2  E1FD               	bnz	clear_0
   404                           
   405                           ; Clear objects allocated to BANK0 (48 bytes)
   406  0047E4  EE00  F0C6         	lfsr	0,__pbssBANK0
   407  0047E8  0E30               	movlw	48
   408  0047EA                     clear_1:
   409  0047EA  6AEE               	clrf	postinc0,c
   410  0047EC  06E8               	decf	wreg,f,c
   411  0047EE  E1FD               	bnz	clear_1
   412                           
   413                           ; Clear objects allocated to COMRAM (2 bytes)
   414  0047F0  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   415  0047F2  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   416  0047F4                     end_of_initialization:
   417                           	opt callstack 0
   418  0047F4                     __end_of__initialization:
   419                           	opt callstack 0
   420  0047F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   421  0047F6  6EF8               	movwf	tblptru,c
   422  0047F8  0100               	movlb	0
   423  0047FA  EF25  F036         	goto	_main	;jump to C main() function
   424                           
   425                           	psect	bssCOMRAM
   426  00005E                     __pbssCOMRAM:
   427                           	opt callstack 0
   428  00005E                     _flags:
   429                           	opt callstack 0
   430  00005E                     	ds	2
   431                           
   432                           	psect	bssBANK0
   433  0000C6                     __pbssBANK0:
   434                           	opt callstack 0
   435  0000C6                     floorf@F524:
   436                           	opt callstack 0
   437  0000C6                     	ds	4
   438  0000CA                     ___fpclassifyf@F463:
   439                           	opt callstack 0
   440  0000CA                     	ds	4
   441  0000CE                     _nout:
   442                           	opt callstack 0
   443  0000CE                     	ds	2
   444  0000D0                     _width:
   445                           	opt callstack 0
   446  0000D0                     	ds	2
   447  0000D2                     _prec:
   448                           	opt callstack 0
   449  0000D2                     	ds	2
   450  0000D4                     _numero2:
   451                           	opt callstack 0
   452  0000D4                     	ds	17
   453  0000E5                     _numero1:
   454                           	opt callstack 0
   455  0000E5                     	ds	17
   456                           
   457                           	psect	bssBANK1
   458  000100                     __pbssBANK1:
   459                           	opt callstack 0
   460  000100                     _dbuf:
   461                           	opt callstack 0
   462  000100                     	ds	80
   463  000150                     _numero3:
   464                           	opt callstack 0
   465  000150                     	ds	17
   466  000161                     _palabra:
   467                           	opt callstack 0
   468  000161                     	ds	17
   469                           
   470                           	psect	cstackBANK0
   471  000060                     __pcstackBANK0:
   472                           	opt callstack 0
   473  000060                     efgtoa@ou:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0x0
   477  000060                     	ds	4
   478  000064                     _efgtoa$439:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x4
   482  000064                     	ds	2
   483  000066                     _efgtoa$440:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x6
   487  000066                     	ds	2
   488  000068                     _efgtoa$444:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x8
   492  000068                     	ds	2
   493  00006A                     _efgtoa$448:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0xA
   497  00006A                     	ds	2
   498  00006C                     _efgtoa$449:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0xC
   502  00006C                     	ds	2
   503  00006E                     _efgtoa$450:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0xE
   507  00006E                     	ds	2
   508  000070                     efgtoa@t:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x10
   512  000070                     	ds	2
   513  000072                     efgtoa@pp:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x12
   517  000072                     	ds	2
   518  000074                     efgtoa@m:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x14
   522  000074                     	ds	2
   523  000076                     efgtoa@ne:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x16
   527  000076                     	ds	2
   528  000078                     efgtoa@d:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x18
   532  000078                     	ds	2
   533  00007A                     efgtoa@sign:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00007A                     	ds	2
   538  00007C                     efgtoa@p:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x1C
   542  00007C                     	ds	2
   543  00007E                     efgtoa@nmode:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x1E
   547  00007E                     	ds	1
   548  00007F                     efgtoa@w:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x1F
   552  00007F                     	ds	2
   553  000081                     efgtoa@mode:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x21
   557  000081                     	ds	1
   558  000082                     efgtoa@h:
   559                           	opt callstack 0
   560                           
   561                           ; 4 bytes @ 0x22
   562  000082                     	ds	4
   563  000086                     efgtoa@l:
   564                           	opt callstack 0
   565                           
   566                           ; 4 bytes @ 0x26
   567  000086                     	ds	4
   568  00008A                     efgtoa@i:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x2A
   572  00008A                     	ds	2
   573  00008C                     efgtoa@g:
   574                           	opt callstack 0
   575                           
   576                           ; 4 bytes @ 0x2C
   577  00008C                     	ds	4
   578  000090                     efgtoa@e:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x30
   582  000090                     	ds	2
   583  000092                     efgtoa@n:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x32
   587  000092                     	ds	2
   588  000094                     efgtoa@u:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0x34
   592  000094                     	ds	4
   593  000098                     vfpfcnvrt@ll:
   594                           	opt callstack 0
   595                           
   596                           ; 8 bytes @ 0x38
   597  000098                     	ds	8
   598  0000A0                     vfpfcnvrt@done:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x40
   602  0000A0                     	ds	2
   603  0000A2                     _vfpfcnvrt$464:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x42
   607  0000A2                     	ds	2
   608  0000A4                     _vfpfcnvrt$465:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x44
   612  0000A4                     	ds	2
   613  0000A6                     _vfpfcnvrt$470:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x46
   617  0000A6                     	ds	2
   618  0000A8                     vfpfcnvrt@f:
   619                           	opt callstack 0
   620                           
   621                           ; 4 bytes @ 0x48
   622  0000A8                     	ds	4
   623  0000AC                     vfpfcnvrt@ct:
   624                           	opt callstack 0
   625                           
   626                           ; 3 bytes @ 0x4C
   627  0000AC                     	ds	3
   628  0000AF                     vfpfcnvrt@c:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x4F
   632  0000AF                     	ds	1
   633  0000B0                     ?_sprintf:
   634                           	opt callstack 0
   635  0000B0                     sprintf@s:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x50
   639  0000B0                     	ds	2
   640  0000B2                     sprintf@fmt:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x52
   644  0000B2                     	ds	6
   645  0000B8                     main@SEL:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x58
   649  0000B8                     	ds	2
   650  0000BA                     main@R:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x5A
   654  0000BA                     	ds	4
   655  0000BE                     main@D1:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0x5E
   659  0000BE                     	ds	4
   660  0000C2                     main@D2:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0x62
   664  0000C2                     	ds	4
   665                           
   666                           	psect	cstackCOMRAM
   667  000001                     __pcstackCOMRAM:
   668                           	opt callstack 0
   669  000001                     ??_Lcd_Cmd:
   670  000001                     ??_Lcd_Chr_CP:
   671  000001                     ?_strlen:
   672                           	opt callstack 0
   673  000001                     ?___fpclassifyf:
   674                           	opt callstack 0
   675  000001                     ?_isupper:
   676                           	opt callstack 0
   677  000001                     ?_isdigit:
   678                           	opt callstack 0
   679  000001                     ?_strncmp:
   680                           	opt callstack 0
   681  000001                     ?_isspace:
   682                           	opt callstack 0
   683  000001                     ?___wmul:
   684                           	opt callstack 0
   685  000001                     ?___awdiv:
   686                           	opt callstack 0
   687  000001                     ?___awmod:
   688                           	opt callstack 0
   689  000001                     ?___fladd:
   690                           	opt callstack 0
   691  000001                     ?___fldiv:
   692                           	opt callstack 0
   693  000001                     ?___flmul:
   694                           	opt callstack 0
   695  000001                     ?___flneg:
   696                           	opt callstack 0
   697  000001                     ?___fltol:
   698                           	opt callstack 0
   699  000001                     ?___xxtofl:
   700                           	opt callstack 0
   701  000001                     ?___aodiv:
   702                           	opt callstack 0
   703  000001                     ?___aomod:
   704                           	opt callstack 0
   705  000001                     ___wmul@multiplier:
   706                           	opt callstack 0
   707  000001                     ___awdiv@dividend:
   708                           	opt callstack 0
   709  000001                     ___awmod@dividend:
   710                           	opt callstack 0
   711  000001                     isdigit@c:
   712                           	opt callstack 0
   713  000001                     isspace@c:
   714                           	opt callstack 0
   715  000001                     isupper@c:
   716                           	opt callstack 0
   717  000001                     fputc@c:
   718                           	opt callstack 0
   719  000001                     strcpy@dest:
   720                           	opt callstack 0
   721  000001                     strlen@s:
   722                           	opt callstack 0
   723  000001                     strncmp@_l:
   724                           	opt callstack 0
   725  000001                     ___fleq@ff1:
   726                           	opt callstack 0
   727  000001                     ___flneg@f1:
   728                           	opt callstack 0
   729  000001                     ___fltol@f1:
   730                           	opt callstack 0
   731  000001                     ___fladd@b:
   732                           	opt callstack 0
   733  000001                     ___fldiv@b:
   734                           	opt callstack 0
   735  000001                     ___flmul@b:
   736                           	opt callstack 0
   737  000001                     ___xxtofl@val:
   738                           	opt callstack 0
   739  000001                     ___fpclassifyf@x:
   740                           	opt callstack 0
   741  000001                     ___aodiv@dividend:
   742                           	opt callstack 0
   743  000001                     ___aomod@dividend:
   744                           	opt callstack 0
   745                           
   746                           ; 8 bytes @ 0x0
   747  000001                     	ds	2
   748  000003                     ??_isupper:
   749  000003                     ??_isdigit:
   750  000003                     ??_isspace:
   751  000003                     Lcd_Chr_CP@data:
   752                           	opt callstack 0
   753  000003                     Lcd_Cmd@data:
   754                           	opt callstack 0
   755  000003                     ___wmul@multiplicand:
   756                           	opt callstack 0
   757  000003                     ___awdiv@divisor:
   758                           	opt callstack 0
   759  000003                     ___awmod@divisor:
   760                           	opt callstack 0
   761  000003                     fputc@fp:
   762                           	opt callstack 0
   763  000003                     strcpy@src:
   764                           	opt callstack 0
   765  000003                     strlen@a:
   766                           	opt callstack 0
   767  000003                     strncmp@_r:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x2
   771  000003                     	ds	1
   772  000004                     ??_Lcd_Init:
   773  000004                     Lcd_Out@x:
   774                           	opt callstack 0
   775  000004                     Lcd_Out2@x:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x3
   779  000004                     	ds	1
   780  000005                     ??_fputc:
   781  000005                     ??___fpclassifyf:
   782  000005                     ??_strcpy:
   783  000005                     ??___fltol:
   784  000005                     ??___xxtofl:
   785  000005                     Lcd_Init@data:
   786                           	opt callstack 0
   787  000005                     ___awdiv@counter:
   788                           	opt callstack 0
   789  000005                     ___awmod@counter:
   790                           	opt callstack 0
   791  000005                     Lcd_Out@buffer:
   792                           	opt callstack 0
   793  000005                     Lcd_Out2@buffer:
   794                           	opt callstack 0
   795  000005                     ___wmul@product:
   796                           	opt callstack 0
   797  000005                     strncmp@n:
   798                           	opt callstack 0
   799  000005                     ___fleq@ff2:
   800                           	opt callstack 0
   801  000005                     ___fladd@a:
   802                           	opt callstack 0
   803  000005                     ___fldiv@a:
   804                           	opt callstack 0
   805  000005                     ___flmul@a:
   806                           	opt callstack 0
   807                           
   808                           ; 4 bytes @ 0x4
   809  000005                     	ds	1
   810  000006                     ___awdiv@sign:
   811                           	opt callstack 0
   812  000006                     ___awmod@sign:
   813                           	opt callstack 0
   814                           
   815                           ; 1 bytes @ 0x5
   816  000006                     	ds	1
   817  000007                     ??_strncmp:
   818  000007                     ??_Lcd_Out:
   819  000007                     ??_Lcd_Out2:
   820  000007                     ?_tolower:
   821                           	opt callstack 0
   822  000007                     _isspace$974:
   823                           	opt callstack 0
   824  000007                     ___awdiv@quotient:
   825                           	opt callstack 0
   826  000007                     strcpy@s:
   827                           	opt callstack 0
   828  000007                     tolower@c:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x6
   832  000007                     	ds	1
   833  000008                     ?_atoi:
   834                           	opt callstack 0
   835  000008                     atoi@s:
   836                           	opt callstack 0
   837  000008                     strncmp@l:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x7
   841  000008                     	ds	1
   842  000009                     ??_tolower:
   843  000009                     ??___fladd:
   844  000009                     ??___fldiv:
   845  000009                     ??___flmul:
   846  000009                     ??___fleq:
   847  000009                     Lcd_Out@y:
   848                           	opt callstack 0
   849  000009                     Lcd_Out2@y:
   850                           	opt callstack 0
   851  000009                     ___fltol@sign1:
   852                           	opt callstack 0
   853  000009                     ___xxtofl@sign:
   854                           	opt callstack 0
   855  000009                     ___fpclassifyf@e:
   856                           	opt callstack 0
   857  000009                     strcpy@d:
   858                           	opt callstack 0
   859  000009                     ___aodiv@divisor:
   860                           	opt callstack 0
   861  000009                     ___aomod@divisor:
   862                           	opt callstack 0
   863                           
   864                           ; 8 bytes @ 0x8
   865  000009                     	ds	1
   866  00000A                     ??_atoi:
   867  00000A                     Lcd_Out@data:
   868                           	opt callstack 0
   869  00000A                     Lcd_Out2@data:
   870                           	opt callstack 0
   871  00000A                     ___fltol@exp1:
   872                           	opt callstack 0
   873  00000A                     ___xxtofl@exp:
   874                           	opt callstack 0
   875  00000A                     fputs@s:
   876                           	opt callstack 0
   877  00000A                     strncmp@r:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x9
   881  00000A                     	ds	1
   882  00000B                     ___xxtofl@arg:
   883                           	opt callstack 0
   884  00000B                     ___fpclassifyf@u:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0xA
   888  00000B                     	ds	1
   889  00000C                     fputs@fp:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0xB
   893  00000C                     	ds	1
   894  00000D                     ___fladd@signs:
   895                           	opt callstack 0
   896  00000D                     ___flmul@sign:
   897                           	opt callstack 0
   898  00000D                     _tolower$1059:
   899                           	opt callstack 0
   900  00000D                     ___fldiv@rem:
   901                           	opt callstack 0
   902                           
   903                           ; 4 bytes @ 0xC
   904  00000D                     	ds	1
   905  00000E                     ___fladd@aexp:
   906                           	opt callstack 0
   907  00000E                     fputs@c:
   908                           	opt callstack 0
   909  00000E                     atoi@neg:
   910                           	opt callstack 0
   911  00000E                     ___flmul@grs:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0xD
   915  00000E                     	ds	1
   916  00000F                     ___fladd@bexp:
   917                           	opt callstack 0
   918  00000F                     fputs@i:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0xE
   922  00000F                     	ds	1
   923  000010                     ___fladd@grs:
   924                           	opt callstack 0
   925  000010                     _atoi$943:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0xF
   929  000010                     	ds	1
   930  000011                     ?_pad:
   931                           	opt callstack 0
   932  000011                     ___aodiv@counter:
   933                           	opt callstack 0
   934  000011                     ___aomod@counter:
   935                           	opt callstack 0
   936  000011                     ___fldiv@sign:
   937                           	opt callstack 0
   938  000011                     pad@fp:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x10
   942  000011                     	ds	1
   943  000012                     ___aodiv@sign:
   944                           	opt callstack 0
   945  000012                     ___aomod@sign:
   946                           	opt callstack 0
   947  000012                     ___flmul@aexp:
   948                           	opt callstack 0
   949  000012                     ___fldiv@new_exp:
   950                           	opt callstack 0
   951  000012                     _atoi$945:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x11
   955  000012                     	ds	1
   956  000013                     ?_abs:
   957                           	opt callstack 0
   958  000013                     ___flmul@bexp:
   959                           	opt callstack 0
   960  000013                     pad@buf:
   961                           	opt callstack 0
   962  000013                     abs@a:
   963                           	opt callstack 0
   964  000013                     ___aodiv@quotient:
   965                           	opt callstack 0
   966                           
   967                           ; 8 bytes @ 0x12
   968  000013                     	ds	1
   969  000014                     _atoi$944:
   970                           	opt callstack 0
   971  000014                     ___fldiv@grs:
   972                           	opt callstack 0
   973  000014                     ___flmul@prod:
   974                           	opt callstack 0
   975                           
   976                           ; 4 bytes @ 0x13
   977  000014                     	ds	1
   978  000015                     ??_abs:
   979  000015                     pad@p:
   980                           	opt callstack 0
   981  000015                     atoi@n:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x14
   985  000015                     	ds	2
   986  000017                     ??_pad:
   987                           
   988                           ; 1 bytes @ 0x16
   989  000017                     	ds	1
   990  000018                     ___fldiv@bexp:
   991                           	opt callstack 0
   992  000018                     pad@i:
   993                           	opt callstack 0
   994  000018                     ___flmul@temp:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x17
   998  000018                     	ds	1
   999  000019                     ___fldiv@aexp:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x18
  1003  000019                     	ds	1
  1004  00001A                     ?_floorf:
  1005                           	opt callstack 0
  1006  00001A                     ?___flsub:
  1007                           	opt callstack 0
  1008  00001A                     pad@w:
  1009                           	opt callstack 0
  1010  00001A                     ___flge@ff1:
  1011                           	opt callstack 0
  1012  00001A                     ___flsub@b:
  1013                           	opt callstack 0
  1014  00001A                     floorf@x:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x19
  1018  00001A                     	ds	2
  1019  00001C                     ?_dtoa:
  1020                           	opt callstack 0
  1021  00001C                     dtoa@fp:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1B
  1025  00001C                     	ds	2
  1026  00001E                     ??_floorf:
  1027  00001E                     ___flge@ff2:
  1028                           	opt callstack 0
  1029  00001E                     ___flsub@a:
  1030                           	opt callstack 0
  1031  00001E                     dtoa@d:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x1D
  1035  00001E                     	ds	4
  1036  000022                     ??___flge:
  1037                           
  1038                           ; 1 bytes @ 0x21
  1039  000022                     	ds	2
  1040  000024                     floorf@m:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x23
  1044  000024                     	ds	2
  1045  000026                     ??_dtoa:
  1046                           
  1047                           ; 1 bytes @ 0x25
  1048  000026                     	ds	2
  1049  000028                     floorf@e:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x27
  1053  000028                     	ds	2
  1054  00002A                     floorf@u:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x29
  1058  00002A                     	ds	4
  1059  00002E                     ?_efgtoa:
  1060                           	opt callstack 0
  1061  00002E                     _dtoa$415:
  1062                           	opt callstack 0
  1063  00002E                     efgtoa@fp:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x2D
  1067  00002E                     	ds	2
  1068  000030                     dtoa@p:
  1069                           	opt callstack 0
  1070  000030                     efgtoa@f:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x2F
  1074  000030                     	ds	2
  1075  000032                     dtoa@w:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x31
  1079  000032                     	ds	2
  1080  000034                     efgtoa@c:
  1081                           	opt callstack 0
  1082  000034                     dtoa@s:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x33
  1086  000034                     	ds	1
  1087  000035                     ??_efgtoa:
  1088                           
  1089                           ; 1 bytes @ 0x34
  1090  000035                     	ds	1
  1091  000036                     dtoa@n:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 8 bytes @ 0x35
  1095  000036                     	ds	8
  1096  00003E                     dtoa@i:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x3D
  1100  00003E                     	ds	2
  1101  000040                     ?_vfpfcnvrt:
  1102                           	opt callstack 0
  1103  000040                     vfpfcnvrt@fp:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x3F
  1107  000040                     	ds	2
  1108  000042                     vfpfcnvrt@fmt:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x41
  1112  000042                     	ds	2
  1113  000044                     vfpfcnvrt@ap:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x43
  1117  000044                     	ds	2
  1118  000046                     ??_vfpfcnvrt:
  1119                           
  1120                           ; 1 bytes @ 0x45
  1121  000046                     	ds	4
  1122  00004A                     ?_vfprintf:
  1123                           	opt callstack 0
  1124  00004A                     vfprintf@fp:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x49
  1128  00004A                     	ds	2
  1129  00004C                     vfprintf@fmt:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x4B
  1133  00004C                     	ds	2
  1134  00004E                     vfprintf@ap:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x4D
  1138  00004E                     	ds	2
  1139  000050                     vfprintf@cfmt:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x4F
  1143  000050                     	ds	2
  1144  000052                     
  1145                           ; 1 bytes @ 0x51
  1146  000052                     	ds	2
  1147  000054                     sprintf@ap:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x53
  1151  000054                     	ds	2
  1152  000056                     sprintf@f:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 6 bytes @ 0x55
  1156  000056                     	ds	6
  1157  00005C                     ??_main:
  1158                           
  1159                           ; 1 bytes @ 0x5B
  1160  00005C                     	ds	2
  1161                           
  1162 ;;
  1163 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1164 ;;
  1165 ;; *************** function _main *****************
  1166 ;; Defined at:
  1167 ;;		line 21 in file "Practica5.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  D2              4   98[BANK0 ] float 
  1172 ;;  D1              4   94[BANK0 ] float 
  1173 ;;  R               4   90[BANK0 ] float 
  1174 ;;  SEL             2   88[BANK0 ] short 
  1175 ;;  fun1            2    0        short 
  1176 ;;  fun             2    0        short 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1188 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         2      14       0       0       0       0       0       0       0
  1190 ;;Total ram usage:       16 bytes
  1191 ;; Hardware stack levels required when called:    8
  1192 ;; This function calls:
  1193 ;;		_Lcd_Cmd
  1194 ;;		_Lcd_Init
  1195 ;;		_Lcd_Out
  1196 ;;		_Lcd_Out2
  1197 ;;		___fladd
  1198 ;;		___fldiv
  1199 ;;		___fleq
  1200 ;;		___flge
  1201 ;;		___flmul
  1202 ;;		___flsub
  1203 ;;		___xxtofl
  1204 ;;		_sprintf
  1205 ;; This function is called by:
  1206 ;;		Startup code after reset
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text0
  1211  006C4A                     __ptext0:
  1212                           	opt callstack 0
  1213  006C4A                     _main:
  1214                           	opt callstack 23
  1215                           
  1216                           ;Practica5.c: 22:     float D1,D2,R;;Practica5.c: 23:     short int SEL,fun,fun1;;Practi
      +                          ca5.c: 24:     ADCON1=0x0F;
  1217                           
  1218                           ;incstack = 0
  1219  006C4A  0E0F               	movlw	15
  1220  006C4C  6EC1               	movwf	4033,c	;volatile
  1221                           
  1222                           ;Practica5.c: 25:     TRISB=0xFF;
  1223  006C4E  6893               	setf	3987,c	;volatile
  1224                           
  1225                           ;Practica5.c: 26:     TRISCbits.RC1=1;
  1226  006C50  8294               	bsf	3988,1,c	;volatile
  1227                           
  1228                           ;Practica5.c: 27:     TRISCbits.RC2=1;
  1229  006C52  8494               	bsf	3988,2,c	;volatile
  1230                           
  1231                           ;Practica5.c: 28:     Lcd_Init();
  1232  006C54  ECBD  F028         	call	_Lcd_Init	;wreg free
  1233                           
  1234                           ;Practica5.c: 29:     Lcd_Cmd(1);
  1235  006C58  0E01               	movlw	1
  1236  006C5A  EC40  F029         	call	_Lcd_Cmd
  1237                           
  1238                           ;Practica5.c: 30:     Lcd_Cmd(12);
  1239  006C5E  0E0C               	movlw	12
  1240  006C60  EC40  F029         	call	_Lcd_Cmd
  1241                           
  1242                           ;Practica5.c: 31:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1243  006C64  0E02               	movlw	2
  1244  006C66  6E5D               	movwf	(??_main+1)& (0+255),c
  1245  006C68  0E04               	movlw	4
  1246  006C6A  6E5C               	movwf	??_main& (0+255),c
  1247  006C6C  0EBA               	movlw	186
  1248  006C6E                     u5997:
  1249  006C6E  2EE8               	decfsz	wreg,f,c
  1250  006C70  D7FE               	bra	u5997
  1251  006C72  2E5C               	decfsz	??_main& (0+255),f,c
  1252  006C74  D7FC               	bra	u5997
  1253  006C76  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1254  006C78  D7FA               	bra	u5997
  1255  006C7A  D000               	nop2	
  1256                           
  1257                           ;Practica5.c: 32:     while(PORTCbits.RC1==1){
  1258  006C7C  D012               	goto	l4844
  1259  006C7E                     l4842:
  1260                           
  1261                           ;Practica5.c: 33:     Lcd_Out(1,1,"Bienvenido");
  1262  006C7E  0E01               	movlw	1
  1263  006C80  6E04               	movwf	Lcd_Out@x,c
  1264  006C82  0EAF               	movlw	low STR_1
  1265  006C84  6E05               	movwf	Lcd_Out@buffer,c
  1266  006C86  0E7F               	movlw	high STR_1
  1267  006C88  6E06               	movwf	Lcd_Out@buffer+1,c
  1268  006C8A  0E01               	movlw	1
  1269  006C8C  ECE4  F025         	call	_Lcd_Out
  1270                           
  1271                           ;Practica5.c: 34:     Lcd_Out(2,1,"*Calculadora*");
  1272  006C90  0E01               	movlw	1
  1273  006C92  6E04               	movwf	Lcd_Out@x,c
  1274  006C94  0E3A               	movlw	low STR_2
  1275  006C96  6E05               	movwf	Lcd_Out@buffer,c
  1276  006C98  0E7F               	movlw	high STR_2
  1277  006C9A  6E06               	movwf	Lcd_Out@buffer+1,c
  1278  006C9C  0E02               	movlw	2
  1279  006C9E  ECE4  F025         	call	_Lcd_Out
  1280  006CA2                     l4844:
  1281                           
  1282                           ;Practica5.c: 32:     while(PORTCbits.RC1==1){
  1283  006CA2  B282               	btfsc	3970,1,c	;volatile
  1284  006CA4  D7EC               	goto	l4842
  1285                           
  1286                           ;Practica5.c: 36:     Lcd_Cmd(1);
  1287  006CA6  0E01               	movlw	1
  1288  006CA8  EC40  F029         	call	_Lcd_Cmd
  1289  006CAC                     l4848:
  1290                           
  1291                           ;Practica5.c: 37:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1292  006CAC  0E02               	movlw	2
  1293  006CAE  6E5D               	movwf	(??_main+1)& (0+255),c
  1294  006CB0  0E04               	movlw	4
  1295  006CB2  6E5C               	movwf	??_main& (0+255),c
  1296  006CB4  0EBA               	movlw	186
  1297  006CB6                     u6007:
  1298  006CB6  2EE8               	decfsz	wreg,f,c
  1299  006CB8  D7FE               	bra	u6007
  1300  006CBA  2E5C               	decfsz	??_main& (0+255),f,c
  1301  006CBC  D7FC               	bra	u6007
  1302  006CBE  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1303  006CC0  D7FA               	bra	u6007
  1304  006CC2  D000               	nop2	
  1305                           
  1306                           ;Practica5.c: 40:         Lcd_Out(1,1,"Primer digito:");
  1307  006CC4  0E01               	movlw	1
  1308  006CC6  6E04               	movwf	Lcd_Out@x,c
  1309  006CC8  0E2B               	movlw	low STR_3
  1310  006CCA  6E05               	movwf	Lcd_Out@buffer,c
  1311  006CCC  0E7F               	movlw	high STR_3
  1312  006CCE  6E06               	movwf	Lcd_Out@buffer+1,c
  1313  006CD0  0E01               	movlw	1
  1314  006CD2  ECE4  F025         	call	_Lcd_Out
  1315                           
  1316                           ;Practica5.c: 41:         while(PORTCbits.RC1==1){
  1317  006CD6  D02C               	goto	l4858
  1318  006CD8                     l4852:
  1319                           
  1320                           ;Practica5.c: 42:             D1=PORTB;
  1321  006CD8  5081               	movf	3969,w,c	;volatile
  1322  006CDA  6E01               	movwf	___xxtofl@val,c
  1323  006CDC  6A02               	clrf	___xxtofl@val+1,c
  1324  006CDE  6A03               	clrf	___xxtofl@val+2,c
  1325  006CE0  6A04               	clrf	___xxtofl@val+3,c
  1326  006CE2  0E00               	movlw	0
  1327  006CE4  ECF6  F02A         	call	___xxtofl
  1328  006CE8  C001  F0BE         	movff	?___xxtofl,main@D1
  1329  006CEC  C002  F0BF         	movff	?___xxtofl+1,main@D1+1
  1330  006CF0  C003  F0C0         	movff	?___xxtofl+2,main@D1+2
  1331  006CF4  C004  F0C1         	movff	?___xxtofl+3,main@D1+3
  1332                           
  1333                           ;Practica5.c: 43:             sprintf(numero1,"Numero: %0.3f",D1);
  1334  006CF8  0EE5               	movlw	low _numero1
  1335  006CFA  0100               	movlb	0	; () banked
  1336  006CFC  6FB0               	movwf	sprintf@s& (0+255),b
  1337  006CFE  0E00               	movlw	high _numero1
  1338  006D00  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1339  006D02  0E56               	movlw	low STR_4
  1340  006D04  6FB2               	movwf	sprintf@fmt& (0+255),b
  1341  006D06  0E7F               	movlw	high STR_4
  1342  006D08  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1343  006D0A  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  1344  006D0E  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  1345  006D12  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  1346  006D16  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  1347  006D1A  ECF8  F024         	call	_sprintf	;wreg free
  1348                           
  1349                           ;Practica5.c: 44:             Lcd_Out2(2,1,numero1);
  1350  006D1E  0E01               	movlw	1
  1351  006D20  6E04               	movwf	Lcd_Out2@x,c
  1352  006D22  0EE5               	movlw	low _numero1
  1353  006D24  6E05               	movwf	Lcd_Out2@buffer,c
  1354  006D26  0E00               	movlw	high _numero1
  1355  006D28  6E06               	movwf	Lcd_Out2@buffer+1,c
  1356  006D2A  0E02               	movlw	2
  1357  006D2C  EC74  F025         	call	_Lcd_Out2
  1358  006D30                     l4858:
  1359                           
  1360                           ;Practica5.c: 41:         while(PORTCbits.RC1==1){
  1361  006D30  B282               	btfsc	3970,1,c	;volatile
  1362  006D32  D7D2               	goto	l4852
  1363                           
  1364                           ;Practica5.c: 46:         Lcd_Cmd(1);
  1365  006D34  0E01               	movlw	1
  1366  006D36  EC40  F029         	call	_Lcd_Cmd
  1367                           
  1368                           ;Practica5.c: 47:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1369  006D3A  0E02               	movlw	2
  1370  006D3C  6E5D               	movwf	(??_main+1)& (0+255),c
  1371  006D3E  0E04               	movlw	4
  1372  006D40  6E5C               	movwf	??_main& (0+255),c
  1373  006D42  0EBA               	movlw	186
  1374  006D44                     u6017:
  1375  006D44  2EE8               	decfsz	wreg,f,c
  1376  006D46  D7FE               	bra	u6017
  1377  006D48  2E5C               	decfsz	??_main& (0+255),f,c
  1378  006D4A  D7FC               	bra	u6017
  1379  006D4C  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1380  006D4E  D7FA               	bra	u6017
  1381  006D50  D000               	nop2	
  1382                           
  1383                           ;Practica5.c: 48:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1384  006D52  0E06               	movlw	6
  1385  006D54  6E5D               	movwf	(??_main+1)& (0+255),c
  1386  006D56  0E13               	movlw	19
  1387  006D58  6E5C               	movwf	??_main& (0+255),c
  1388  006D5A  0EAE               	movlw	174
  1389  006D5C                     u6027:
  1390  006D5C  2EE8               	decfsz	wreg,f,c
  1391  006D5E  D7FE               	bra	u6027
  1392  006D60  2E5C               	decfsz	??_main& (0+255),f,c
  1393  006D62  D7FC               	bra	u6027
  1394  006D64  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1395  006D66  D7FA               	bra	u6027
  1396                           
  1397                           ;Practica5.c: 49:         Lcd_Out(1,1,"Segundo digito:");
  1398  006D68  0E01               	movlw	1
  1399  006D6A  6E04               	movwf	Lcd_Out@x,c
  1400  006D6C  0E0B               	movlw	low STR_5
  1401  006D6E  6E05               	movwf	Lcd_Out@buffer,c
  1402  006D70  0E7F               	movlw	high STR_5
  1403  006D72  6E06               	movwf	Lcd_Out@buffer+1,c
  1404  006D74  0E01               	movlw	1
  1405  006D76  ECE4  F025         	call	_Lcd_Out
  1406                           
  1407                           ;Practica5.c: 50:         while(PORTCbits.RC1==1){
  1408  006D7A  D02C               	goto	l4874
  1409  006D7C                     l4868:
  1410                           
  1411                           ;Practica5.c: 51:             D2=PORTB;
  1412  006D7C  5081               	movf	3969,w,c	;volatile
  1413  006D7E  6E01               	movwf	___xxtofl@val,c
  1414  006D80  6A02               	clrf	___xxtofl@val+1,c
  1415  006D82  6A03               	clrf	___xxtofl@val+2,c
  1416  006D84  6A04               	clrf	___xxtofl@val+3,c
  1417  006D86  0E00               	movlw	0
  1418  006D88  ECF6  F02A         	call	___xxtofl
  1419  006D8C  C001  F0C2         	movff	?___xxtofl,main@D2
  1420  006D90  C002  F0C3         	movff	?___xxtofl+1,main@D2+1
  1421  006D94  C003  F0C4         	movff	?___xxtofl+2,main@D2+2
  1422  006D98  C004  F0C5         	movff	?___xxtofl+3,main@D2+3
  1423                           
  1424                           ;Practica5.c: 52:             sprintf(numero2,"Numero: %0.3f",D2);
  1425  006D9C  0ED4               	movlw	low _numero2
  1426  006D9E  0100               	movlb	0	; () banked
  1427  006DA0  6FB0               	movwf	sprintf@s& (0+255),b
  1428  006DA2  0E00               	movlw	high _numero2
  1429  006DA4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1430  006DA6  0E56               	movlw	low STR_4
  1431  006DA8  6FB2               	movwf	sprintf@fmt& (0+255),b
  1432  006DAA  0E7F               	movlw	high STR_4
  1433  006DAC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1434  006DAE  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  1435  006DB2  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  1436  006DB6  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  1437  006DBA  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  1438  006DBE  ECF8  F024         	call	_sprintf	;wreg free
  1439                           
  1440                           ;Practica5.c: 53:             Lcd_Out2(2,1,numero2);
  1441  006DC2  0E01               	movlw	1
  1442  006DC4  6E04               	movwf	Lcd_Out2@x,c
  1443  006DC6  0ED4               	movlw	low _numero2
  1444  006DC8  6E05               	movwf	Lcd_Out2@buffer,c
  1445  006DCA  0E00               	movlw	high _numero2
  1446  006DCC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1447  006DCE  0E02               	movlw	2
  1448  006DD0  EC74  F025         	call	_Lcd_Out2
  1449  006DD4                     l4874:
  1450                           
  1451                           ;Practica5.c: 50:         while(PORTCbits.RC1==1){
  1452  006DD4  B282               	btfsc	3970,1,c	;volatile
  1453  006DD6  D7D2               	goto	l4868
  1454                           
  1455                           ;Practica5.c: 55:         Lcd_Cmd(1);
  1456  006DD8  0E01               	movlw	1
  1457  006DDA  EC40  F029         	call	_Lcd_Cmd
  1458                           
  1459                           ;Practica5.c: 56:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1460  006DDE  0E02               	movlw	2
  1461  006DE0  6E5D               	movwf	(??_main+1)& (0+255),c
  1462  006DE2  0E04               	movlw	4
  1463  006DE4  6E5C               	movwf	??_main& (0+255),c
  1464  006DE6  0EBA               	movlw	186
  1465  006DE8                     u6037:
  1466  006DE8  2EE8               	decfsz	wreg,f,c
  1467  006DEA  D7FE               	bra	u6037
  1468  006DEC  2E5C               	decfsz	??_main& (0+255),f,c
  1469  006DEE  D7FC               	bra	u6037
  1470  006DF0  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1471  006DF2  D7FA               	bra	u6037
  1472  006DF4  D000               	nop2	
  1473                           
  1474                           ;Practica5.c: 57:         Lcd_Out(1,1,"Selecciona la");
  1475  006DF6  0E01               	movlw	1
  1476  006DF8  6E04               	movwf	Lcd_Out@x,c
  1477  006DFA  0E48               	movlw	low STR_7
  1478  006DFC  6E05               	movwf	Lcd_Out@buffer,c
  1479  006DFE  0E7F               	movlw	high STR_7
  1480  006E00  6E06               	movwf	Lcd_Out@buffer+1,c
  1481  006E02  0E01               	movlw	1
  1482  006E04  ECE4  F025         	call	_Lcd_Out
  1483                           
  1484                           ;Practica5.c: 58:         Lcd_Out(2,3,"Operacion");
  1485  006E08  0E03               	movlw	3
  1486  006E0A  6E04               	movwf	Lcd_Out@x,c
  1487  006E0C  0EBA               	movlw	low STR_8
  1488  006E0E  6E05               	movwf	Lcd_Out@buffer,c
  1489  006E10  0E7F               	movlw	high STR_8
  1490  006E12  6E06               	movwf	Lcd_Out@buffer+1,c
  1491  006E14  0E02               	movlw	2
  1492  006E16  ECE4  F025         	call	_Lcd_Out
  1493                           
  1494                           ;Practica5.c: 59:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1495  006E1A  0E15               	movlw	21
  1496  006E1C  6E5D               	movwf	(??_main+1)& (0+255),c
  1497  006E1E  0E4B               	movlw	75
  1498  006E20  6E5C               	movwf	??_main& (0+255),c
  1499  006E22  0EBE               	movlw	190
  1500  006E24                     u6047:
  1501  006E24  2EE8               	decfsz	wreg,f,c
  1502  006E26  D7FE               	bra	u6047
  1503  006E28  2E5C               	decfsz	??_main& (0+255),f,c
  1504  006E2A  D7FC               	bra	u6047
  1505  006E2C  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1506  006E2E  D7FA               	bra	u6047
  1507  006E30  D000               	nop2	
  1508  006E32                     l83:
  1509                           
  1510                           ;Practica5.c: 61:         Lcd_Cmd(1);
  1511  006E32  0E01               	movlw	1
  1512  006E34  EC40  F029         	call	_Lcd_Cmd
  1513                           
  1514                           ;Practica5.c: 62:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1515  006E38  0E02               	movlw	2
  1516  006E3A  6E5D               	movwf	(??_main+1)& (0+255),c
  1517  006E3C  0E04               	movlw	4
  1518  006E3E  6E5C               	movwf	??_main& (0+255),c
  1519  006E40  0EBA               	movlw	186
  1520  006E42                     u6057:
  1521  006E42  2EE8               	decfsz	wreg,f,c
  1522  006E44  D7FE               	bra	u6057
  1523  006E46  2E5C               	decfsz	??_main& (0+255),f,c
  1524  006E48  D7FC               	bra	u6057
  1525  006E4A  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1526  006E4C  D7FA               	bra	u6057
  1527  006E4E  D000               	nop2	
  1528                           
  1529                           ;Practica5.c: 63:         while(PORTCbits.RC1==1){
  1530  006E50  D025               	goto	l4894
  1531  006E52                     l85:
  1532                           
  1533                           ;Practica5.c: 64:             SEL=PORTB;
  1534  006E52  CF81 F0B8          	movff	3969,main@SEL	;volatile
  1535  006E56  0100               	movlb	0	; () banked
  1536  006E58  6BB9               	clrf	(main@SEL+1)& (0+255),b
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;Practica5.c: 65:             Lcd_Out(1,1,"1=+ 2=- 4=* 8=/");
  1540  006E5A  0E01               	movlw	1
  1541  006E5C  6E04               	movwf	Lcd_Out@x,c
  1542  006E5E  0EFB               	movlw	low STR_9
  1543  006E60  6E05               	movwf	Lcd_Out@buffer,c
  1544  006E62  0E7E               	movlw	high STR_9
  1545  006E64  6E06               	movwf	Lcd_Out@buffer+1,c
  1546  006E66  0E01               	movlw	1
  1547  006E68  ECE4  F025         	call	_Lcd_Out
  1548                           
  1549                           ;Practica5.c: 66:             sprintf(numero3,"Seleccion: %03d",SEL);
  1550  006E6C  0E50               	movlw	low _numero3
  1551  006E6E  0100               	movlb	0	; () banked
  1552  006E70  6FB0               	movwf	sprintf@s& (0+255),b
  1553  006E72  0E01               	movlw	high _numero3
  1554  006E74  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1555  006E76  0E1B               	movlw	low STR_10
  1556  006E78  6FB2               	movwf	sprintf@fmt& (0+255),b
  1557  006E7A  0E7F               	movlw	high STR_10
  1558  006E7C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1559  006E7E  C0B8  F0B4         	movff	main@SEL,?_sprintf+4
  1560  006E82  C0B9  F0B5         	movff	main@SEL+1,?_sprintf+5
  1561  006E86  ECF8  F024         	call	_sprintf	;wreg free
  1562                           
  1563                           ;Practica5.c: 67:             Lcd_Out2(2,1,numero3);
  1564  006E8A  0E01               	movlw	1
  1565  006E8C  6E04               	movwf	Lcd_Out2@x,c
  1566  006E8E  0E50               	movlw	low _numero3
  1567  006E90  6E05               	movwf	Lcd_Out2@buffer,c
  1568  006E92  0E01               	movlw	high _numero3
  1569  006E94  6E06               	movwf	Lcd_Out2@buffer+1,c
  1570  006E96  0E02               	movlw	2
  1571  006E98  EC74  F025         	call	_Lcd_Out2
  1572  006E9C                     l4894:
  1573                           
  1574                           ;Practica5.c: 63:         while(PORTCbits.RC1==1){
  1575  006E9C  B282               	btfsc	3970,1,c	;volatile
  1576  006E9E  D7D9               	goto	l85
  1577                           
  1578                           ;Practica5.c: 69:          Lcd_Cmd(1);
  1579  006EA0  0E01               	movlw	1
  1580  006EA2  EC40  F029         	call	_Lcd_Cmd
  1581                           
  1582                           ;Practica5.c: 70:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1583  006EA6  0E02               	movlw	2
  1584  006EA8  6E5D               	movwf	(??_main+1)& (0+255),c
  1585  006EAA  0E04               	movlw	4
  1586  006EAC  6E5C               	movwf	??_main& (0+255),c
  1587  006EAE  0EBA               	movlw	186
  1588  006EB0                     u6067:
  1589  006EB0  2EE8               	decfsz	wreg,f,c
  1590  006EB2  D7FE               	bra	u6067
  1591  006EB4  2E5C               	decfsz	??_main& (0+255),f,c
  1592  006EB6  D7FC               	bra	u6067
  1593  006EB8  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1594  006EBA  D7FA               	bra	u6067
  1595  006EBC  D000               	nop2	
  1596                           
  1597                           ;Practica5.c: 71:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1598  006EBE  0E02               	movlw	2
  1599  006EC0  6E5D               	movwf	(??_main+1)& (0+255),c
  1600  006EC2  0E04               	movlw	4
  1601  006EC4  6E5C               	movwf	??_main& (0+255),c
  1602  006EC6  0EBA               	movlw	186
  1603  006EC8                     u6077:
  1604  006EC8  2EE8               	decfsz	wreg,f,c
  1605  006ECA  D7FE               	bra	u6077
  1606  006ECC  2E5C               	decfsz	??_main& (0+255),f,c
  1607  006ECE  D7FC               	bra	u6077
  1608  006ED0  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1609  006ED2  D7FA               	bra	u6077
  1610  006ED4  D000               	nop2	
  1611                           
  1612                           ;Practica5.c: 72:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1613  006ED6  0E02               	movlw	2
  1614  006ED8  6E5D               	movwf	(??_main+1)& (0+255),c
  1615  006EDA  0E04               	movlw	4
  1616  006EDC  6E5C               	movwf	??_main& (0+255),c
  1617  006EDE  0EBA               	movlw	186
  1618  006EE0                     u6087:
  1619  006EE0  2EE8               	decfsz	wreg,f,c
  1620  006EE2  D7FE               	bra	u6087
  1621  006EE4  2E5C               	decfsz	??_main& (0+255),f,c
  1622  006EE6  D7FC               	bra	u6087
  1623  006EE8  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1624  006EEA  D7FA               	bra	u6087
  1625  006EEC  D000               	nop2	
  1626                           
  1627                           ;Practica5.c: 73:         if(SEL==1){
  1628  006EEE  0100               	movlb	0	; () banked
  1629  006EF0  05B8               	decf	main@SEL& (0+255),w,b
  1630  006EF2  11B9               	iorwf	(main@SEL+1)& (0+255),w,b
  1631  006EF4  A4D8               	btfss	status,2,c
  1632  006EF6  D08F               	goto	l4934
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;Practica5.c: 74:             Lcd_Cmd(1);
  1636  006EF8  0E01               	movlw	1
  1637  006EFA  EC40  F029         	call	_Lcd_Cmd
  1638                           
  1639                           ;Practica5.c: 75:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1640  006EFE  0E02               	movlw	2
  1641  006F00  6E5D               	movwf	(??_main+1)& (0+255),c
  1642  006F02  0E04               	movlw	4
  1643  006F04  6E5C               	movwf	??_main& (0+255),c
  1644  006F06  0EBA               	movlw	186
  1645  006F08                     u6097:
  1646  006F08  2EE8               	decfsz	wreg,f,c
  1647  006F0A  D7FE               	bra	u6097
  1648  006F0C  2E5C               	decfsz	??_main& (0+255),f,c
  1649  006F0E  D7FC               	bra	u6097
  1650  006F10  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1651  006F12  D7FA               	bra	u6097
  1652  006F14  D000               	nop2	
  1653                           
  1654                           ;Practica5.c: 76:             while(PORTCbits.RC1==1){
  1655  006F16  D06E               	goto	l4924
  1656  006F18                     l4910:
  1657                           
  1658                           ;Practica5.c: 77:                 R=D1+D2;
  1659  006F18  C0BE  F001         	movff	main@D1,___fladd@b
  1660  006F1C  C0BF  F002         	movff	main@D1+1,___fladd@b+1
  1661  006F20  C0C0  F003         	movff	main@D1+2,___fladd@b+2
  1662  006F24  C0C1  F004         	movff	main@D1+3,___fladd@b+3
  1663  006F28  C0C2  F005         	movff	main@D2,___fladd@a
  1664  006F2C  C0C3  F006         	movff	main@D2+1,___fladd@a+1
  1665  006F30  C0C4  F007         	movff	main@D2+2,___fladd@a+2
  1666  006F34  C0C5  F008         	movff	main@D2+3,___fladd@a+3
  1667  006F38  EC1B  F030         	call	___fladd	;wreg free
  1668  006F3C  C001  F0BA         	movff	?___fladd,main@R
  1669  006F40  C002  F0BB         	movff	?___fladd+1,main@R+1
  1670  006F44  C003  F0BC         	movff	?___fladd+2,main@R+2
  1671  006F48  C004  F0BD         	movff	?___fladd+3,main@R+3
  1672                           
  1673                           ;Practica5.c: 78:                 sprintf(numero1,"%0.0f +",D1);
  1674  006F4C  0EE5               	movlw	low _numero1
  1675  006F4E  0100               	movlb	0	; () banked
  1676  006F50  6FB0               	movwf	sprintf@s& (0+255),b
  1677  006F52  0E00               	movlw	high _numero1
  1678  006F54  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1679  006F56  0ECC               	movlw	low STR_11
  1680  006F58  6FB2               	movwf	sprintf@fmt& (0+255),b
  1681  006F5A  0E7F               	movlw	high STR_11
  1682  006F5C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1683  006F5E  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  1684  006F62  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  1685  006F66  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  1686  006F6A  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  1687  006F6E  ECF8  F024         	call	_sprintf	;wreg free
  1688                           
  1689                           ;Practica5.c: 79:                 sprintf(numero2," %0.0f",D2);
  1690  006F72  0ED4               	movlw	low _numero2
  1691  006F74  0100               	movlb	0	; () banked
  1692  006F76  6FB0               	movwf	sprintf@s& (0+255),b
  1693  006F78  0E00               	movlw	high _numero2
  1694  006F7A  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1695  006F7C  0EE4               	movlw	low STR_12
  1696  006F7E  6FB2               	movwf	sprintf@fmt& (0+255),b
  1697  006F80  0E7F               	movlw	high STR_12
  1698  006F82  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1699  006F84  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  1700  006F88  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  1701  006F8C  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  1702  006F90  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  1703  006F94  ECF8  F024         	call	_sprintf	;wreg free
  1704                           
  1705                           ;Practica5.c: 80:                 sprintf(palabra,"Suma= %0.3f",R);
  1706  006F98  0E61               	movlw	low _palabra
  1707  006F9A  0100               	movlb	0	; () banked
  1708  006F9C  6FB0               	movwf	sprintf@s& (0+255),b
  1709  006F9E  0E01               	movlw	high _palabra
  1710  006FA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1711  006FA2  0E8C               	movlw	low STR_13
  1712  006FA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1713  006FA6  0E7F               	movlw	high STR_13
  1714  006FA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1715  006FAA  C0BA  F0B4         	movff	main@R,?_sprintf+4
  1716  006FAE  C0BB  F0B5         	movff	main@R+1,?_sprintf+5
  1717  006FB2  C0BC  F0B6         	movff	main@R+2,?_sprintf+6
  1718  006FB6  C0BD  F0B7         	movff	main@R+3,?_sprintf+7
  1719  006FBA  ECF8  F024         	call	_sprintf	;wreg free
  1720                           
  1721                           ;Practica5.c: 81:                 Lcd_Out2(1,1,numero1);
  1722  006FBE  0E01               	movlw	1
  1723  006FC0  6E04               	movwf	Lcd_Out2@x,c
  1724  006FC2  0EE5               	movlw	low _numero1
  1725  006FC4  6E05               	movwf	Lcd_Out2@buffer,c
  1726  006FC6  0E00               	movlw	high _numero1
  1727  006FC8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1728  006FCA  0E01               	movlw	1
  1729  006FCC  EC74  F025         	call	_Lcd_Out2
  1730                           
  1731                           ;Practica5.c: 82:                 Lcd_Out2(1,6,numero2);
  1732  006FD0  0E06               	movlw	6
  1733  006FD2  6E04               	movwf	Lcd_Out2@x,c
  1734  006FD4  0ED4               	movlw	low _numero2
  1735  006FD6  6E05               	movwf	Lcd_Out2@buffer,c
  1736  006FD8  0E00               	movlw	high _numero2
  1737  006FDA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1738  006FDC  0E01               	movlw	1
  1739  006FDE  EC74  F025         	call	_Lcd_Out2
  1740                           
  1741                           ;Practica5.c: 83:                 Lcd_Out2(2,1,palabra);
  1742  006FE2  0E01               	movlw	1
  1743  006FE4  6E04               	movwf	Lcd_Out2@x,c
  1744  006FE6  0E61               	movlw	low _palabra
  1745  006FE8  6E05               	movwf	Lcd_Out2@buffer,c
  1746  006FEA  0E01               	movlw	high _palabra
  1747  006FEC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1748  006FEE  0E02               	movlw	2
  1749  006FF0  EC74  F025         	call	_Lcd_Out2
  1750  006FF4                     l4924:
  1751                           
  1752                           ;Practica5.c: 76:             while(PORTCbits.RC1==1){
  1753  006FF4  B282               	btfsc	3970,1,c	;volatile
  1754  006FF6  D790               	goto	l4910
  1755                           
  1756                           ;Practica5.c: 85:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1757  006FF8  0E0B               	movlw	11
  1758  006FFA  6E5D               	movwf	(??_main+1)& (0+255),c
  1759  006FFC  0E26               	movlw	38
  1760  006FFE  6E5C               	movwf	??_main& (0+255),c
  1761  007000  0E5E               	movlw	94
  1762  007002                     u6107:
  1763  007002  2EE8               	decfsz	wreg,f,c
  1764  007004  D7FE               	bra	u6107
  1765  007006  2E5C               	decfsz	??_main& (0+255),f,c
  1766  007008  D7FC               	bra	u6107
  1767  00700A  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1768  00700C  D7FA               	bra	u6107
  1769                           
  1770                           ;Practica5.c: 86:             Lcd_Cmd(1);
  1771  00700E  0E01               	movlw	1
  1772  007010  EC40  F029         	call	_Lcd_Cmd
  1773  007014  D64B               	goto	l4848
  1774  007016                     l4934:
  1775                           
  1776                           ; BSR set to: 0
  1777  007016  0E02               	movlw	2
  1778  007018  19B8               	xorwf	main@SEL& (0+255),w,b
  1779  00701A  11B9               	iorwf	(main@SEL+1)& (0+255),w,b
  1780  00701C  A4D8               	btfss	status,2,c
  1781  00701E  D14C               	goto	l4994
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;Practica5.c: 91:             if(D2>D1){
  1785  007020  C0BE  F01A         	movff	main@D1,___flge@ff1
  1786  007024  C0BF  F01B         	movff	main@D1+1,___flge@ff1+1
  1787  007028  C0C0  F01C         	movff	main@D1+2,___flge@ff1+2
  1788  00702C  C0C1  F01D         	movff	main@D1+3,___flge@ff1+3
  1789  007030  C0C2  F01E         	movff	main@D2,___flge@ff2
  1790  007034  C0C3  F01F         	movff	main@D2+1,___flge@ff2+1
  1791  007038  C0C4  F020         	movff	main@D2+2,___flge@ff2+2
  1792  00703C  C0C5  F021         	movff	main@D2+3,___flge@ff2+3
  1793  007040  EC55  F028         	call	___flge	;wreg free
  1794  007044  B0D8               	btfsc	status,0,c
  1795  007046  D0A9               	goto	l4968
  1796                           
  1797                           ;Practica5.c: 92:                 Lcd_Cmd(1);
  1798  007048  0E01               	movlw	1
  1799  00704A  EC40  F029         	call	_Lcd_Cmd
  1800                           
  1801                           ;Practica5.c: 93:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1802  00704E  0E02               	movlw	2
  1803  007050  6E5D               	movwf	(??_main+1)& (0+255),c
  1804  007052  0E04               	movlw	4
  1805  007054  6E5C               	movwf	??_main& (0+255),c
  1806  007056  0EBA               	movlw	186
  1807  007058                     u6117:
  1808  007058  2EE8               	decfsz	wreg,f,c
  1809  00705A  D7FE               	bra	u6117
  1810  00705C  2E5C               	decfsz	??_main& (0+255),f,c
  1811  00705E  D7FC               	bra	u6117
  1812  007060  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1813  007062  D7FA               	bra	u6117
  1814  007064  D000               	nop2	
  1815                           
  1816                           ;Practica5.c: 94:                 while(PORTCbits.RC1==1){
  1817  007066  D088               	goto	l4958
  1818  007068                     l4942:
  1819                           
  1820                           ;Practica5.c: 95:                     R=D1-D2;
  1821  007068  C0BE  F01A         	movff	main@D1,___flsub@b
  1822  00706C  C0BF  F01B         	movff	main@D1+1,___flsub@b+1
  1823  007070  C0C0  F01C         	movff	main@D1+2,___flsub@b+2
  1824  007074  C0C1  F01D         	movff	main@D1+3,___flsub@b+3
  1825  007078  C0C2  F01E         	movff	main@D2,___flsub@a
  1826  00707C  C0C3  F01F         	movff	main@D2+1,___flsub@a+1
  1827  007080  C0C4  F020         	movff	main@D2+2,___flsub@a+2
  1828  007084  C0C5  F021         	movff	main@D2+3,___flsub@a+3
  1829  007088  ECAF  F024         	call	___flsub	;wreg free
  1830  00708C  C01A  F0BA         	movff	?___flsub,main@R
  1831  007090  C01B  F0BB         	movff	?___flsub+1,main@R+1
  1832  007094  C01C  F0BC         	movff	?___flsub+2,main@R+2
  1833  007098  C01D  F0BD         	movff	?___flsub+3,main@R+3
  1834                           
  1835                           ;Practica5.c: 96:                     R=R*(-1);
  1836  00709C  C0BA  F001         	movff	main@R,___flmul@b
  1837  0070A0  C0BB  F002         	movff	main@R+1,___flmul@b+1
  1838  0070A4  C0BC  F003         	movff	main@R+2,___flmul@b+2
  1839  0070A8  C0BD  F004         	movff	main@R+3,___flmul@b+3
  1840  0070AC  0E00               	movlw	0
  1841  0070AE  6E05               	movwf	___flmul@a,c
  1842  0070B0  0E00               	movlw	0
  1843  0070B2  6E06               	movwf	___flmul@a+1,c
  1844  0070B4  0E80               	movlw	128
  1845  0070B6  6E07               	movwf	___flmul@a+2,c
  1846  0070B8  0EBF               	movlw	191
  1847  0070BA  6E08               	movwf	___flmul@a+3,c
  1848  0070BC  ECA1  F031         	call	___flmul	;wreg free
  1849  0070C0  C001  F0BA         	movff	?___flmul,main@R
  1850  0070C4  C002  F0BB         	movff	?___flmul+1,main@R+1
  1851  0070C8  C003  F0BC         	movff	?___flmul+2,main@R+2
  1852  0070CC  C004  F0BD         	movff	?___flmul+3,main@R+3
  1853                           
  1854                           ;Practica5.c: 97:                     sprintf(numero1,"%0.0f -",D1);
  1855  0070D0  0EE5               	movlw	low _numero1
  1856  0070D2  0100               	movlb	0	; () banked
  1857  0070D4  6FB0               	movwf	sprintf@s& (0+255),b
  1858  0070D6  0E00               	movlw	high _numero1
  1859  0070D8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1860  0070DA  0ED4               	movlw	low STR_14
  1861  0070DC  6FB2               	movwf	sprintf@fmt& (0+255),b
  1862  0070DE  0E7F               	movlw	high STR_14
  1863  0070E0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1864  0070E2  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  1865  0070E6  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  1866  0070EA  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  1867  0070EE  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  1868  0070F2  ECF8  F024         	call	_sprintf	;wreg free
  1869                           
  1870                           ;Practica5.c: 98:                     sprintf(numero2," %0.0f",D2);
  1871  0070F6  0ED4               	movlw	low _numero2
  1872  0070F8  0100               	movlb	0	; () banked
  1873  0070FA  6FB0               	movwf	sprintf@s& (0+255),b
  1874  0070FC  0E00               	movlw	high _numero2
  1875  0070FE  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1876  007100  0EE4               	movlw	low STR_12
  1877  007102  6FB2               	movwf	sprintf@fmt& (0+255),b
  1878  007104  0E7F               	movlw	high STR_12
  1879  007106  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1880  007108  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  1881  00710C  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  1882  007110  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  1883  007114  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  1884  007118  ECF8  F024         	call	_sprintf	;wreg free
  1885                           
  1886                           ;Practica5.c: 99:                     sprintf(palabra,"Resta= -%0.3f",R);
  1887  00711C  0E61               	movlw	low _palabra
  1888  00711E  0100               	movlb	0	; () banked
  1889  007120  6FB0               	movwf	sprintf@s& (0+255),b
  1890  007122  0E01               	movlw	high _palabra
  1891  007124  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1892  007126  0E64               	movlw	low STR_16
  1893  007128  6FB2               	movwf	sprintf@fmt& (0+255),b
  1894  00712A  0E7F               	movlw	high STR_16
  1895  00712C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1896  00712E  C0BA  F0B4         	movff	main@R,?_sprintf+4
  1897  007132  C0BB  F0B5         	movff	main@R+1,?_sprintf+5
  1898  007136  C0BC  F0B6         	movff	main@R+2,?_sprintf+6
  1899  00713A  C0BD  F0B7         	movff	main@R+3,?_sprintf+7
  1900  00713E  ECF8  F024         	call	_sprintf	;wreg free
  1901                           
  1902                           ;Practica5.c: 100:                     Lcd_Out2(1,1,numero1);
  1903  007142  0E01               	movlw	1
  1904  007144  6E04               	movwf	Lcd_Out2@x,c
  1905  007146  0EE5               	movlw	low _numero1
  1906  007148  6E05               	movwf	Lcd_Out2@buffer,c
  1907  00714A  0E00               	movlw	high _numero1
  1908  00714C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1909  00714E  0E01               	movlw	1
  1910  007150  EC74  F025         	call	_Lcd_Out2
  1911                           
  1912                           ;Practica5.c: 101:                     Lcd_Out2(1,6,numero2);
  1913  007154  0E06               	movlw	6
  1914  007156  6E04               	movwf	Lcd_Out2@x,c
  1915  007158  0ED4               	movlw	low _numero2
  1916  00715A  6E05               	movwf	Lcd_Out2@buffer,c
  1917  00715C  0E00               	movlw	high _numero2
  1918  00715E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1919  007160  0E01               	movlw	1
  1920  007162  EC74  F025         	call	_Lcd_Out2
  1921                           
  1922                           ;Practica5.c: 102:                     Lcd_Out2(2,1,palabra);
  1923  007166  0E01               	movlw	1
  1924  007168  6E04               	movwf	Lcd_Out2@x,c
  1925  00716A  0E61               	movlw	low _palabra
  1926  00716C  6E05               	movwf	Lcd_Out2@buffer,c
  1927  00716E  0E01               	movlw	high _palabra
  1928  007170  6E06               	movwf	Lcd_Out2@buffer+1,c
  1929  007172  0E02               	movlw	2
  1930  007174  EC74  F025         	call	_Lcd_Out2
  1931  007178                     l4958:
  1932                           
  1933                           ;Practica5.c: 94:                 while(PORTCbits.RC1==1){
  1934  007178  B282               	btfsc	3970,1,c	;volatile
  1935  00717A  D776               	goto	l4942
  1936                           
  1937                           ;Practica5.c: 104:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  1938  00717C  0E0B               	movlw	11
  1939  00717E  6E5D               	movwf	(??_main+1)& (0+255),c
  1940  007180  0E26               	movlw	38
  1941  007182  6E5C               	movwf	??_main& (0+255),c
  1942  007184  0E5E               	movlw	94
  1943  007186                     u6127:
  1944  007186  2EE8               	decfsz	wreg,f,c
  1945  007188  D7FE               	bra	u6127
  1946  00718A  2E5C               	decfsz	??_main& (0+255),f,c
  1947  00718C  D7FC               	bra	u6127
  1948  00718E  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1949  007190  D7FA               	bra	u6127
  1950                           
  1951                           ;Practica5.c: 105:                 Lcd_Cmd(1);
  1952  007192  0E01               	movlw	1
  1953  007194  EC40  F029         	call	_Lcd_Cmd
  1954  007198  D589               	goto	l4848
  1955  00719A                     l4968:
  1956                           
  1957                           ;Practica5.c: 109:                 Lcd_Cmd(1);
  1958  00719A  0E01               	movlw	1
  1959  00719C  EC40  F029         	call	_Lcd_Cmd
  1960                           
  1961                           ;Practica5.c: 110:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1962  0071A0  0E02               	movlw	2
  1963  0071A2  6E5D               	movwf	(??_main+1)& (0+255),c
  1964  0071A4  0E04               	movlw	4
  1965  0071A6  6E5C               	movwf	??_main& (0+255),c
  1966  0071A8  0EBA               	movlw	186
  1967  0071AA                     u6137:
  1968  0071AA  2EE8               	decfsz	wreg,f,c
  1969  0071AC  D7FE               	bra	u6137
  1970  0071AE  2E5C               	decfsz	??_main& (0+255),f,c
  1971  0071B0  D7FC               	bra	u6137
  1972  0071B2  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1973  0071B4  D7FA               	bra	u6137
  1974  0071B6  D000               	nop2	
  1975                           
  1976                           ;Practica5.c: 111:                 while(PORTCbits.RC1==1){
  1977  0071B8  D06E               	goto	l4986
  1978  0071BA                     l4972:
  1979                           
  1980                           ;Practica5.c: 112:                     R=D1-D2;
  1981  0071BA  C0BE  F01A         	movff	main@D1,___flsub@b
  1982  0071BE  C0BF  F01B         	movff	main@D1+1,___flsub@b+1
  1983  0071C2  C0C0  F01C         	movff	main@D1+2,___flsub@b+2
  1984  0071C6  C0C1  F01D         	movff	main@D1+3,___flsub@b+3
  1985  0071CA  C0C2  F01E         	movff	main@D2,___flsub@a
  1986  0071CE  C0C3  F01F         	movff	main@D2+1,___flsub@a+1
  1987  0071D2  C0C4  F020         	movff	main@D2+2,___flsub@a+2
  1988  0071D6  C0C5  F021         	movff	main@D2+3,___flsub@a+3
  1989  0071DA  ECAF  F024         	call	___flsub	;wreg free
  1990  0071DE  C01A  F0BA         	movff	?___flsub,main@R
  1991  0071E2  C01B  F0BB         	movff	?___flsub+1,main@R+1
  1992  0071E6  C01C  F0BC         	movff	?___flsub+2,main@R+2
  1993  0071EA  C01D  F0BD         	movff	?___flsub+3,main@R+3
  1994                           
  1995                           ;Practica5.c: 113:                     sprintf(numero1,"%0.0f -",D1);
  1996  0071EE  0EE5               	movlw	low _numero1
  1997  0071F0  0100               	movlb	0	; () banked
  1998  0071F2  6FB0               	movwf	sprintf@s& (0+255),b
  1999  0071F4  0E00               	movlw	high _numero1
  2000  0071F6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2001  0071F8  0ED4               	movlw	low STR_14
  2002  0071FA  6FB2               	movwf	sprintf@fmt& (0+255),b
  2003  0071FC  0E7F               	movlw	high STR_14
  2004  0071FE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2005  007200  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  2006  007204  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  2007  007208  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  2008  00720C  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  2009  007210  ECF8  F024         	call	_sprintf	;wreg free
  2010                           
  2011                           ;Practica5.c: 114:                     sprintf(numero2," %0.0f",D2);
  2012  007214  0ED4               	movlw	low _numero2
  2013  007216  0100               	movlb	0	; () banked
  2014  007218  6FB0               	movwf	sprintf@s& (0+255),b
  2015  00721A  0E00               	movlw	high _numero2
  2016  00721C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2017  00721E  0EE4               	movlw	low STR_12
  2018  007220  6FB2               	movwf	sprintf@fmt& (0+255),b
  2019  007222  0E7F               	movlw	high STR_12
  2020  007224  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2021  007226  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  2022  00722A  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  2023  00722E  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  2024  007232  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  2025  007236  ECF8  F024         	call	_sprintf	;wreg free
  2026                           
  2027                           ;Practica5.c: 115:                     sprintf(palabra,"Resta= %0.3f",R);
  2028  00723A  0E61               	movlw	low _palabra
  2029  00723C  0100               	movlb	0	; () banked
  2030  00723E  6FB0               	movwf	sprintf@s& (0+255),b
  2031  007240  0E01               	movlw	high _palabra
  2032  007242  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2033  007244  0E7F               	movlw	low STR_19
  2034  007246  6FB2               	movwf	sprintf@fmt& (0+255),b
  2035  007248  0E7F               	movlw	high STR_19
  2036  00724A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2037  00724C  C0BA  F0B4         	movff	main@R,?_sprintf+4
  2038  007250  C0BB  F0B5         	movff	main@R+1,?_sprintf+5
  2039  007254  C0BC  F0B6         	movff	main@R+2,?_sprintf+6
  2040  007258  C0BD  F0B7         	movff	main@R+3,?_sprintf+7
  2041  00725C  ECF8  F024         	call	_sprintf	;wreg free
  2042                           
  2043                           ;Practica5.c: 116:                     Lcd_Out2(1,1,numero1);
  2044  007260  0E01               	movlw	1
  2045  007262  6E04               	movwf	Lcd_Out2@x,c
  2046  007264  0EE5               	movlw	low _numero1
  2047  007266  6E05               	movwf	Lcd_Out2@buffer,c
  2048  007268  0E00               	movlw	high _numero1
  2049  00726A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2050  00726C  0E01               	movlw	1
  2051  00726E  EC74  F025         	call	_Lcd_Out2
  2052                           
  2053                           ;Practica5.c: 117:                     Lcd_Out2(1,6,numero2);
  2054  007272  0E06               	movlw	6
  2055  007274  6E04               	movwf	Lcd_Out2@x,c
  2056  007276  0ED4               	movlw	low _numero2
  2057  007278  6E05               	movwf	Lcd_Out2@buffer,c
  2058  00727A  0E00               	movlw	high _numero2
  2059  00727C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2060  00727E  0E01               	movlw	1
  2061  007280  EC74  F025         	call	_Lcd_Out2
  2062                           
  2063                           ;Practica5.c: 118:                     Lcd_Out2(2,1,palabra);
  2064  007284  0E01               	movlw	1
  2065  007286  6E04               	movwf	Lcd_Out2@x,c
  2066  007288  0E61               	movlw	low _palabra
  2067  00728A  6E05               	movwf	Lcd_Out2@buffer,c
  2068  00728C  0E01               	movlw	high _palabra
  2069  00728E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2070  007290  0E02               	movlw	2
  2071  007292  EC74  F025         	call	_Lcd_Out2
  2072  007296                     l4986:
  2073                           
  2074                           ;Practica5.c: 111:                 while(PORTCbits.RC1==1){
  2075  007296  B282               	btfsc	3970,1,c	;volatile
  2076  007298  D790               	goto	l4972
  2077                           
  2078                           ;Practica5.c: 120:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2079  00729A  0E0B               	movlw	11
  2080  00729C  6E5D               	movwf	(??_main+1)& (0+255),c
  2081  00729E  0E26               	movlw	38
  2082  0072A0  6E5C               	movwf	??_main& (0+255),c
  2083  0072A2  0E5E               	movlw	94
  2084  0072A4                     u6147:
  2085  0072A4  2EE8               	decfsz	wreg,f,c
  2086  0072A6  D7FE               	bra	u6147
  2087  0072A8  2E5C               	decfsz	??_main& (0+255),f,c
  2088  0072AA  D7FC               	bra	u6147
  2089  0072AC  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2090  0072AE  D7FA               	bra	u6147
  2091                           
  2092                           ;Practica5.c: 121:                 Lcd_Cmd(1);
  2093  0072B0  0E01               	movlw	1
  2094  0072B2  EC40  F029         	call	_Lcd_Cmd
  2095  0072B6  D4FA               	goto	l4848
  2096  0072B8                     l4994:
  2097                           
  2098                           ; BSR set to: 0
  2099  0072B8  0E04               	movlw	4
  2100  0072BA  19B8               	xorwf	main@SEL& (0+255),w,b
  2101  0072BC  11B9               	iorwf	(main@SEL+1)& (0+255),w,b
  2102  0072BE  A4D8               	btfss	status,2,c
  2103  0072C0  D08F               	goto	l5024
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;Practica5.c: 127:             Lcd_Cmd(1);
  2107  0072C2  0E01               	movlw	1
  2108  0072C4  EC40  F029         	call	_Lcd_Cmd
  2109                           
  2110                           ;Practica5.c: 128:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2111  0072C8  0E02               	movlw	2
  2112  0072CA  6E5D               	movwf	(??_main+1)& (0+255),c
  2113  0072CC  0E04               	movlw	4
  2114  0072CE  6E5C               	movwf	??_main& (0+255),c
  2115  0072D0  0EBA               	movlw	186
  2116  0072D2                     u6157:
  2117  0072D2  2EE8               	decfsz	wreg,f,c
  2118  0072D4  D7FE               	bra	u6157
  2119  0072D6  2E5C               	decfsz	??_main& (0+255),f,c
  2120  0072D8  D7FC               	bra	u6157
  2121  0072DA  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2122  0072DC  D7FA               	bra	u6157
  2123  0072DE  D000               	nop2	
  2124                           
  2125                           ;Practica5.c: 129:             while(PORTCbits.RC1==1){
  2126  0072E0  D06E               	goto	l5014
  2127  0072E2                     l5000:
  2128                           
  2129                           ;Practica5.c: 130:                 R=D1*D2;
  2130  0072E2  C0BE  F001         	movff	main@D1,___flmul@b
  2131  0072E6  C0BF  F002         	movff	main@D1+1,___flmul@b+1
  2132  0072EA  C0C0  F003         	movff	main@D1+2,___flmul@b+2
  2133  0072EE  C0C1  F004         	movff	main@D1+3,___flmul@b+3
  2134  0072F2  C0C2  F005         	movff	main@D2,___flmul@a
  2135  0072F6  C0C3  F006         	movff	main@D2+1,___flmul@a+1
  2136  0072FA  C0C4  F007         	movff	main@D2+2,___flmul@a+2
  2137  0072FE  C0C5  F008         	movff	main@D2+3,___flmul@a+3
  2138  007302  ECA1  F031         	call	___flmul	;wreg free
  2139  007306  C001  F0BA         	movff	?___flmul,main@R
  2140  00730A  C002  F0BB         	movff	?___flmul+1,main@R+1
  2141  00730E  C003  F0BC         	movff	?___flmul+2,main@R+2
  2142  007312  C004  F0BD         	movff	?___flmul+3,main@R+3
  2143                           
  2144                           ;Practica5.c: 131:                 sprintf(numero1,"%0.0f *",D1);
  2145  007316  0EE5               	movlw	low _numero1
  2146  007318  0100               	movlb	0	; () banked
  2147  00731A  6FB0               	movwf	sprintf@s& (0+255),b
  2148  00731C  0E00               	movlw	high _numero1
  2149  00731E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2150  007320  0EC4               	movlw	low STR_20
  2151  007322  6FB2               	movwf	sprintf@fmt& (0+255),b
  2152  007324  0E7F               	movlw	high STR_20
  2153  007326  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2154  007328  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  2155  00732C  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  2156  007330  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  2157  007334  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  2158  007338  ECF8  F024         	call	_sprintf	;wreg free
  2159                           
  2160                           ;Practica5.c: 132:                 sprintf(numero2," %0.0f",D2);
  2161  00733C  0ED4               	movlw	low _numero2
  2162  00733E  0100               	movlb	0	; () banked
  2163  007340  6FB0               	movwf	sprintf@s& (0+255),b
  2164  007342  0E00               	movlw	high _numero2
  2165  007344  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2166  007346  0EE4               	movlw	low STR_12
  2167  007348  6FB2               	movwf	sprintf@fmt& (0+255),b
  2168  00734A  0E7F               	movlw	high STR_12
  2169  00734C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2170  00734E  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  2171  007352  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  2172  007356  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  2173  00735A  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  2174  00735E  ECF8  F024         	call	_sprintf	;wreg free
  2175                           
  2176                           ;Practica5.c: 133:                 sprintf(palabra,"Mult= %0.3f",R);
  2177  007362  0E61               	movlw	low _palabra
  2178  007364  0100               	movlb	0	; () banked
  2179  007366  6FB0               	movwf	sprintf@s& (0+255),b
  2180  007368  0E01               	movlw	high _palabra
  2181  00736A  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2182  00736C  0E98               	movlw	low STR_22
  2183  00736E  6FB2               	movwf	sprintf@fmt& (0+255),b
  2184  007370  0E7F               	movlw	high STR_22
  2185  007372  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2186  007374  C0BA  F0B4         	movff	main@R,?_sprintf+4
  2187  007378  C0BB  F0B5         	movff	main@R+1,?_sprintf+5
  2188  00737C  C0BC  F0B6         	movff	main@R+2,?_sprintf+6
  2189  007380  C0BD  F0B7         	movff	main@R+3,?_sprintf+7
  2190  007384  ECF8  F024         	call	_sprintf	;wreg free
  2191                           
  2192                           ;Practica5.c: 134:                 Lcd_Out2(1,1,numero1);
  2193  007388  0E01               	movlw	1
  2194  00738A  6E04               	movwf	Lcd_Out2@x,c
  2195  00738C  0EE5               	movlw	low _numero1
  2196  00738E  6E05               	movwf	Lcd_Out2@buffer,c
  2197  007390  0E00               	movlw	high _numero1
  2198  007392  6E06               	movwf	Lcd_Out2@buffer+1,c
  2199  007394  0E01               	movlw	1
  2200  007396  EC74  F025         	call	_Lcd_Out2
  2201                           
  2202                           ;Practica5.c: 135:                 Lcd_Out2(1,6,numero2);
  2203  00739A  0E06               	movlw	6
  2204  00739C  6E04               	movwf	Lcd_Out2@x,c
  2205  00739E  0ED4               	movlw	low _numero2
  2206  0073A0  6E05               	movwf	Lcd_Out2@buffer,c
  2207  0073A2  0E00               	movlw	high _numero2
  2208  0073A4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2209  0073A6  0E01               	movlw	1
  2210  0073A8  EC74  F025         	call	_Lcd_Out2
  2211                           
  2212                           ;Practica5.c: 136:                 Lcd_Out2(2,1,palabra);
  2213  0073AC  0E01               	movlw	1
  2214  0073AE  6E04               	movwf	Lcd_Out2@x,c
  2215  0073B0  0E61               	movlw	low _palabra
  2216  0073B2  6E05               	movwf	Lcd_Out2@buffer,c
  2217  0073B4  0E01               	movlw	high _palabra
  2218  0073B6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2219  0073B8  0E02               	movlw	2
  2220  0073BA  EC74  F025         	call	_Lcd_Out2
  2221  0073BE                     l5014:
  2222                           
  2223                           ;Practica5.c: 129:             while(PORTCbits.RC1==1){
  2224  0073BE  B282               	btfsc	3970,1,c	;volatile
  2225  0073C0  D790               	goto	l5000
  2226                           
  2227                           ;Practica5.c: 138:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  2228  0073C2  0E0B               	movlw	11
  2229  0073C4  6E5D               	movwf	(??_main+1)& (0+255),c
  2230  0073C6  0E26               	movlw	38
  2231  0073C8  6E5C               	movwf	??_main& (0+255),c
  2232  0073CA  0E5E               	movlw	94
  2233  0073CC                     u6167:
  2234  0073CC  2EE8               	decfsz	wreg,f,c
  2235  0073CE  D7FE               	bra	u6167
  2236  0073D0  2E5C               	decfsz	??_main& (0+255),f,c
  2237  0073D2  D7FC               	bra	u6167
  2238  0073D4  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2239  0073D6  D7FA               	bra	u6167
  2240                           
  2241                           ;Practica5.c: 139:             Lcd_Cmd(1);
  2242  0073D8  0E01               	movlw	1
  2243  0073DA  EC40  F029         	call	_Lcd_Cmd
  2244  0073DE  D466               	goto	l4848
  2245  0073E0                     l5024:
  2246                           
  2247                           ; BSR set to: 0
  2248  0073E0  0E08               	movlw	8
  2249  0073E2  19B8               	xorwf	main@SEL& (0+255),w,b
  2250  0073E4  11B9               	iorwf	(main@SEL+1)& (0+255),w,b
  2251  0073E6  A4D8               	btfss	status,2,c
  2252  0073E8  D524               	goto	l83
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;Practica5.c: 144:             R=D1/D2;
  2256  0073EA  C0BE  F001         	movff	main@D1,___fldiv@b
  2257  0073EE  C0BF  F002         	movff	main@D1+1,___fldiv@b+1
  2258  0073F2  C0C0  F003         	movff	main@D1+2,___fldiv@b+2
  2259  0073F6  C0C1  F004         	movff	main@D1+3,___fldiv@b+3
  2260  0073FA  C0C2  F005         	movff	main@D2,___fldiv@a
  2261  0073FE  C0C3  F006         	movff	main@D2+1,___fldiv@a+1
  2262  007402  C0C4  F007         	movff	main@D2+2,___fldiv@a+2
  2263  007406  C0C5  F008         	movff	main@D2+3,___fldiv@a+3
  2264  00740A  ECD7  F02E         	call	___fldiv	;wreg free
  2265  00740E  C001  F0BA         	movff	?___fldiv,main@R
  2266  007412  C002  F0BB         	movff	?___fldiv+1,main@R+1
  2267  007416  C003  F0BC         	movff	?___fldiv+2,main@R+2
  2268  00741A  C004  F0BD         	movff	?___fldiv+3,main@R+3
  2269                           
  2270                           ;Practica5.c: 145:             if(D2==0){
  2271  00741E  C0C2  F001         	movff	main@D2,___fleq@ff1
  2272  007422  C0C3  F002         	movff	main@D2+1,___fleq@ff1+1
  2273  007426  C0C4  F003         	movff	main@D2+2,___fleq@ff1+2
  2274  00742A  C0C5  F004         	movff	main@D2+3,___fleq@ff1+3
  2275  00742E  0E00               	movlw	0
  2276  007430  6E05               	movwf	___fleq@ff2,c
  2277  007432  0E00               	movlw	0
  2278  007434  6E06               	movwf	___fleq@ff2+1,c
  2279  007436  0E00               	movlw	0
  2280  007438  6E07               	movwf	___fleq@ff2+2,c
  2281  00743A  0E00               	movlw	0
  2282  00743C  6E08               	movwf	___fleq@ff2+3,c
  2283  00743E  EC61  F026         	call	___fleq	;wreg free
  2284  007442  B0D8               	btfsc	status,0,c
  2285  007444  D00A               	goto	l5032
  2286  007446  D088               	goto	l5056
  2287  007448                     l5030:
  2288                           
  2289                           ;Practica5.c: 147:                     Lcd_Out(1,3,"SYNTAX ERROR");
  2290  007448  0E03               	movlw	3
  2291  00744A  6E04               	movwf	Lcd_Out@x,c
  2292  00744C  0E72               	movlw	low STR_23
  2293  00744E  6E05               	movwf	Lcd_Out@buffer,c
  2294  007450  0E7F               	movlw	high STR_23
  2295  007452  6E06               	movwf	Lcd_Out@buffer+1,c
  2296  007454  0E01               	movlw	1
  2297  007456  ECE4  F025         	call	_Lcd_Out
  2298  00745A                     l5032:
  2299                           
  2300                           ;Practica5.c: 146:                 while(PORTCbits.RC1==1){
  2301  00745A  B282               	btfsc	3970,1,c	;volatile
  2302  00745C  D7F5               	goto	l5030
  2303                           
  2304                           ;Practica5.c: 149:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2305  00745E  0E0B               	movlw	11
  2306  007460  6E5D               	movwf	(??_main+1)& (0+255),c
  2307  007462  0E26               	movlw	38
  2308  007464  6E5C               	movwf	??_main& (0+255),c
  2309  007466  0E5E               	movlw	94
  2310  007468                     u6177:
  2311  007468  2EE8               	decfsz	wreg,f,c
  2312  00746A  D7FE               	bra	u6177
  2313  00746C  2E5C               	decfsz	??_main& (0+255),f,c
  2314  00746E  D7FC               	bra	u6177
  2315  007470  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2316  007472  D7FA               	bra	u6177
  2317                           
  2318                           ;Practica5.c: 150:                 Lcd_Cmd(1);
  2319  007474  0E01               	movlw	1
  2320  007476  EC40  F029         	call	_Lcd_Cmd
  2321  00747A  D418               	goto	l4848
  2322  00747C                     l5042:
  2323                           
  2324                           ;Practica5.c: 155:                     R=D1/D2;
  2325  00747C  C0BE  F001         	movff	main@D1,___fldiv@b
  2326  007480  C0BF  F002         	movff	main@D1+1,___fldiv@b+1
  2327  007484  C0C0  F003         	movff	main@D1+2,___fldiv@b+2
  2328  007488  C0C1  F004         	movff	main@D1+3,___fldiv@b+3
  2329  00748C  C0C2  F005         	movff	main@D2,___fldiv@a
  2330  007490  C0C3  F006         	movff	main@D2+1,___fldiv@a+1
  2331  007494  C0C4  F007         	movff	main@D2+2,___fldiv@a+2
  2332  007498  C0C5  F008         	movff	main@D2+3,___fldiv@a+3
  2333  00749C  ECD7  F02E         	call	___fldiv	;wreg free
  2334  0074A0  C001  F0BA         	movff	?___fldiv,main@R
  2335  0074A4  C002  F0BB         	movff	?___fldiv+1,main@R+1
  2336  0074A8  C003  F0BC         	movff	?___fldiv+2,main@R+2
  2337  0074AC  C004  F0BD         	movff	?___fldiv+3,main@R+3
  2338                           
  2339                           ;Practica5.c: 156:                     sprintf(numero1,"%0.0f /",D1);
  2340  0074B0  0EE5               	movlw	low _numero1
  2341  0074B2  0100               	movlb	0	; () banked
  2342  0074B4  6FB0               	movwf	sprintf@s& (0+255),b
  2343  0074B6  0E00               	movlw	high _numero1
  2344  0074B8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2345  0074BA  0EDC               	movlw	low STR_24
  2346  0074BC  6FB2               	movwf	sprintf@fmt& (0+255),b
  2347  0074BE  0E7F               	movlw	high STR_24
  2348  0074C0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2349  0074C2  C0BE  F0B4         	movff	main@D1,?_sprintf+4
  2350  0074C6  C0BF  F0B5         	movff	main@D1+1,?_sprintf+5
  2351  0074CA  C0C0  F0B6         	movff	main@D1+2,?_sprintf+6
  2352  0074CE  C0C1  F0B7         	movff	main@D1+3,?_sprintf+7
  2353  0074D2  ECF8  F024         	call	_sprintf	;wreg free
  2354                           
  2355                           ;Practica5.c: 157:                     sprintf(numero2," %0.0f",D2);
  2356  0074D6  0ED4               	movlw	low _numero2
  2357  0074D8  0100               	movlb	0	; () banked
  2358  0074DA  6FB0               	movwf	sprintf@s& (0+255),b
  2359  0074DC  0E00               	movlw	high _numero2
  2360  0074DE  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2361  0074E0  0EE4               	movlw	low STR_12
  2362  0074E2  6FB2               	movwf	sprintf@fmt& (0+255),b
  2363  0074E4  0E7F               	movlw	high STR_12
  2364  0074E6  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2365  0074E8  C0C2  F0B4         	movff	main@D2,?_sprintf+4
  2366  0074EC  C0C3  F0B5         	movff	main@D2+1,?_sprintf+5
  2367  0074F0  C0C4  F0B6         	movff	main@D2+2,?_sprintf+6
  2368  0074F4  C0C5  F0B7         	movff	main@D2+3,?_sprintf+7
  2369  0074F8  ECF8  F024         	call	_sprintf	;wreg free
  2370                           
  2371                           ;Practica5.c: 158:                     sprintf(palabra,"Div= %0.3f",R);
  2372  0074FC  0E61               	movlw	low _palabra
  2373  0074FE  0100               	movlb	0	; () banked
  2374  007500  6FB0               	movwf	sprintf@s& (0+255),b
  2375  007502  0E01               	movlw	high _palabra
  2376  007504  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2377  007506  0EA4               	movlw	low STR_26
  2378  007508  6FB2               	movwf	sprintf@fmt& (0+255),b
  2379  00750A  0E7F               	movlw	high STR_26
  2380  00750C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2381  00750E  C0BA  F0B4         	movff	main@R,?_sprintf+4
  2382  007512  C0BB  F0B5         	movff	main@R+1,?_sprintf+5
  2383  007516  C0BC  F0B6         	movff	main@R+2,?_sprintf+6
  2384  00751A  C0BD  F0B7         	movff	main@R+3,?_sprintf+7
  2385  00751E  ECF8  F024         	call	_sprintf	;wreg free
  2386                           
  2387                           ;Practica5.c: 159:                     Lcd_Out2(1,1,numero1);
  2388  007522  0E01               	movlw	1
  2389  007524  6E04               	movwf	Lcd_Out2@x,c
  2390  007526  0EE5               	movlw	low _numero1
  2391  007528  6E05               	movwf	Lcd_Out2@buffer,c
  2392  00752A  0E00               	movlw	high _numero1
  2393  00752C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2394  00752E  0E01               	movlw	1
  2395  007530  EC74  F025         	call	_Lcd_Out2
  2396                           
  2397                           ;Practica5.c: 160:                     Lcd_Out2(1,6,numero2);
  2398  007534  0E06               	movlw	6
  2399  007536  6E04               	movwf	Lcd_Out2@x,c
  2400  007538  0ED4               	movlw	low _numero2
  2401  00753A  6E05               	movwf	Lcd_Out2@buffer,c
  2402  00753C  0E00               	movlw	high _numero2
  2403  00753E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2404  007540  0E01               	movlw	1
  2405  007542  EC74  F025         	call	_Lcd_Out2
  2406                           
  2407                           ;Practica5.c: 161:                     Lcd_Out2(2,1,palabra);
  2408  007546  0E01               	movlw	1
  2409  007548  6E04               	movwf	Lcd_Out2@x,c
  2410  00754A  0E61               	movlw	low _palabra
  2411  00754C  6E05               	movwf	Lcd_Out2@buffer,c
  2412  00754E  0E01               	movlw	high _palabra
  2413  007550  6E06               	movwf	Lcd_Out2@buffer+1,c
  2414  007552  0E02               	movlw	2
  2415  007554  EC74  F025         	call	_Lcd_Out2
  2416  007558                     l5056:
  2417                           
  2418                           ;Practica5.c: 154:                 while(PORTCbits.RC1==1){
  2419  007558  B282               	btfsc	3970,1,c	;volatile
  2420  00755A  D790               	goto	l5042
  2421                           
  2422                           ;Practica5.c: 163:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2423  00755C  0E0B               	movlw	11
  2424  00755E  6E5D               	movwf	(??_main+1)& (0+255),c
  2425  007560  0E26               	movlw	38
  2426  007562  6E5C               	movwf	??_main& (0+255),c
  2427  007564  0E5E               	movlw	94
  2428  007566                     u6187:
  2429  007566  2EE8               	decfsz	wreg,f,c
  2430  007568  D7FE               	bra	u6187
  2431  00756A  2E5C               	decfsz	??_main& (0+255),f,c
  2432  00756C  D7FC               	bra	u6187
  2433  00756E  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2434  007570  D7FA               	bra	u6187
  2435                           
  2436                           ;Practica5.c: 164:                 Lcd_Cmd(1);
  2437  007572  0E01               	movlw	1
  2438  007574  EC40  F029         	call	_Lcd_Cmd
  2439  007578  EF56  F036         	goto	l4848
  2440  00757C                     __end_of_main:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _sprintf *****************
  2444 ;; Defined at:
  2445 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2448 ;;		 -> palabra(17), numero3(17), numero2(17), numero1(17), 
  2449 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2450 ;;		 -> STR_26(11), STR_25(7), STR_24(8), STR_22(12), 
  2451 ;;		 -> STR_21(7), STR_20(8), STR_19(13), STR_18(7), 
  2452 ;;		 -> STR_17(8), STR_16(14), STR_15(7), STR_14(8), 
  2453 ;;		 -> STR_13(12), STR_12(7), STR_11(8), STR_10(16), 
  2454 ;;		 -> STR_6(14), STR_4(14), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  f               6   85[COMRAM] struct _IO_FILE
  2457 ;;  ap              2   83[COMRAM] PTR void [1]
  2458 ;;		 -> ?_sprintf(2), 
  2459 ;;  ret             2    0        int 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   80[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         0       8       0       0       0       0       0       0       0
  2470 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2472 ;;      Totals:        10       8       0       0       0       0       0       0       0
  2473 ;;Total ram usage:       18 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    7
  2476 ;; This function calls:
  2477 ;;		_vfprintf
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text1
  2484  0049F0                     __ptext1:
  2485                           	opt callstack 0
  2486  0049F0                     _sprintf:
  2487                           	opt callstack 23
  2488                           
  2489                           ;incstack = 0
  2490  0049F0  0EB4               	movlw	low (?_sprintf+4)
  2491  0049F2  6E54               	movwf	sprintf@ap,c
  2492  0049F4  0E00               	movlw	high (?_sprintf+4)
  2493  0049F6  6E55               	movwf	sprintf@ap+1,c
  2494  0049F8  C0B0  F056         	movff	sprintf@s,sprintf@f
  2495  0049FC  C0B1  F057         	movff	sprintf@s+1,sprintf@f+1
  2496  004A00  0E00               	movlw	0
  2497  004A02  6E59               	movwf	sprintf@f+3,c
  2498  004A04  0E00               	movlw	0
  2499  004A06  6E58               	movwf	sprintf@f+2,c
  2500  004A08  0E00               	movlw	0
  2501  004A0A  6E5B               	movwf	sprintf@f+5,c
  2502  004A0C  0E00               	movlw	0
  2503  004A0E  6E5A               	movwf	sprintf@f+4,c
  2504  004A10  0E56               	movlw	low sprintf@f
  2505  004A12  6E4A               	movwf	vfprintf@fp,c
  2506  004A14  0E00               	movlw	high sprintf@f
  2507  004A16  6E4B               	movwf	vfprintf@fp+1,c
  2508  004A18  C0B2  F04C         	movff	sprintf@fmt,vfprintf@fmt
  2509  004A1C  C0B3  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2510  004A20  0E54               	movlw	low sprintf@ap
  2511  004A22  6E4E               	movwf	vfprintf@ap,c
  2512  004A24  0E00               	movlw	high sprintf@ap
  2513  004A26  6E4F               	movwf	vfprintf@ap+1,c
  2514  004A28  EC49  F025         	call	_vfprintf	;wreg free
  2515  004A2C  5058               	movf	sprintf@f+2,w,c
  2516  004A2E  0100               	movlb	0	; () banked
  2517  004A30  25B0               	addwf	sprintf@s& (0+255),w,b
  2518  004A32  6ED9               	movwf	fsr2l,c
  2519  004A34  5059               	movf	sprintf@f+3,w,c
  2520  004A36  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2521  004A38  6EDA               	movwf	fsr2h,c
  2522  004A3A  0E00               	movlw	0
  2523  004A3C  6EDF               	movwf	indf2,c
  2524                           
  2525                           ; BSR set to: 0
  2526  004A3E  0012               	return		;funcret
  2527  004A40                     __end_of_sprintf:
  2528                           	opt callstack 0
  2529                           
  2530 ;; *************** function _vfprintf *****************
  2531 ;; Defined at:
  2532 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  2535 ;;		 -> sprintf@f(6), 
  2536 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  2537 ;;		 -> STR_26(11), STR_25(7), STR_24(8), STR_22(12), 
  2538 ;;		 -> STR_21(7), STR_20(8), STR_19(13), STR_18(7), 
  2539 ;;		 -> STR_17(8), STR_16(14), STR_15(7), STR_14(8), 
  2540 ;;		 -> STR_13(12), STR_12(7), STR_11(8), STR_10(16), 
  2541 ;;		 -> STR_6(14), STR_4(14), 
  2542 ;;  ap              2   77[COMRAM] PTR PTR void 
  2543 ;;		 -> sprintf@ap(2), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  2546 ;;		 -> STR_26(11), STR_25(7), STR_24(8), STR_22(12), 
  2547 ;;		 -> STR_21(7), STR_20(8), STR_19(13), STR_18(7), 
  2548 ;;		 -> STR_17(8), STR_16(14), STR_15(7), STR_14(8), 
  2549 ;;		 -> STR_13(12), STR_12(7), STR_11(8), STR_10(16), 
  2550 ;;		 -> STR_6(14), STR_4(14), 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  2   73[COMRAM] int 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         6       0       0       0       0       0       0       0       0
  2561 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2563 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2564 ;;Total ram usage:        8 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    6
  2567 ;; This function calls:
  2568 ;;		_vfpfcnvrt
  2569 ;; This function is called by:
  2570 ;;		_sprintf
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text2
  2575  004A92                     __ptext2:
  2576                           	opt callstack 0
  2577  004A92                     _vfprintf:
  2578                           	opt callstack 23
  2579                           
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;incstack = 0
  2584  004A92  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  2585  004A96  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2588  004A9A  0E00               	movlw	0
  2589  004A9C  0100               	movlb	0	; () banked
  2590  004A9E  6FCF               	movwf	(_nout+1)& (0+255),b
  2591  004AA0  0E00               	movlw	0
  2592  004AA2  6FCE               	movwf	_nout& (0+255),b
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2595  004AA4  D013               	goto	l4658
  2596  004AA6                     l4656:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2600  004AA6  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2601  004AAA  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2602  004AAE  0E50               	movlw	low vfprintf@cfmt
  2603  004AB0  6E42               	movwf	vfpfcnvrt@fmt,c
  2604  004AB2  0E00               	movlw	high vfprintf@cfmt
  2605  004AB4  6E43               	movwf	vfpfcnvrt@fmt+1,c
  2606  004AB6  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2607  004ABA  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2608  004ABE  EC4A  F033         	call	_vfpfcnvrt	;wreg free
  2609  004AC2  5040               	movf	?_vfpfcnvrt,w,c
  2610  004AC4  0100               	movlb	0	; () banked
  2611  004AC6  27CE               	addwf	_nout& (0+255),f,b
  2612  004AC8  5041               	movf	?_vfpfcnvrt+1,w,c
  2613  004ACA  23CF               	addwfc	(_nout+1)& (0+255),f,b
  2614  004ACC                     l4658:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2618  004ACC  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  2619  004AD0  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2620  004AD4                     	if	0	;tblptru may be non-zero
  2621  004AD4                     	endif
  2622  004AD4                     	if	0	;tblptru may be non-zero
  2623  004AD4                     	endif
  2624  004AD4  0008               	tblrd		*
  2625  004AD6  50F5               	movf	tablat,w,c
  2626  004AD8  0900               	iorlw	0
  2627  004ADA  A4D8               	btfss	status,2,c
  2628  004ADC  D7E4               	goto	l4656
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2632  004ADE  C0CE  F04A         	movff	_nout,?_vfprintf
  2633  004AE2  C0CF  F04B         	movff	_nout+1,?_vfprintf+1
  2634                           
  2635                           ; BSR set to: 0
  2636  004AE6  0012               	return		;funcret
  2637  004AE8                     __end_of_vfprintf:
  2638                           	opt callstack 0
  2639                           
  2640 ;; *************** function _vfpfcnvrt *****************
  2641 ;; Defined at:
  2642 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2645 ;;		 -> sprintf@f(6), 
  2646 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2647 ;;		 -> vfprintf@cfmt(2), 
  2648 ;;  ap              2   67[COMRAM] PTR PTR void 
  2649 ;;		 -> sprintf@ap(2), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  ll              8   56[BANK0 ] long long 
  2652 ;;  llu             8    0        unsigned long long 
  2653 ;;  f               4   72[BANK0 ] unsigned long long 
  2654 ;;  ct              3   76[BANK0 ] unsigned char [3]
  2655 ;;  vp              3    0        PTR void 
  2656 ;;  cp              3    0        PTR unsigned char 
  2657 ;;  done            2   64[BANK0 ] int 
  2658 ;;  i               2    0        int 
  2659 ;;  c               1   79[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2   63[COMRAM] int 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         6       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2671 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2672 ;;      Totals:        10      24       0       0       0       0       0       0       0
  2673 ;;Total ram usage:       34 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    5
  2676 ;; This function calls:
  2677 ;;		_atoi
  2678 ;;		_dtoa
  2679 ;;		_efgtoa
  2680 ;;		_fputc
  2681 ;;		_isdigit
  2682 ;;		_isupper
  2683 ;;		_strncmp
  2684 ;;		_tolower
  2685 ;; This function is called by:
  2686 ;;		_vfprintf
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text3
  2691  006694                     __ptext3:
  2692                           	opt callstack 0
  2693  006694                     _vfpfcnvrt:
  2694                           	opt callstack 23
  2695                           
  2696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;incstack = 0
  2700  006694  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2701  006698  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2702  00669C  CFDE FFF6          	movff	postinc2,tblptrl
  2703  0066A0  CFDD FFF7          	movff	postdec2,tblptrh
  2704  0066A4                     	if	0	;tblptru may be non-zero
  2705  0066A4                     	endif
  2706  0066A4                     	if	0	;tblptru may be non-zero
  2707  0066A4                     	endif
  2708  0066A4  0008               	tblrd		*
  2709  0066A6  50F5               	movf	tablat,w,c
  2710  0066A8  0A25               	xorlw	37
  2711  0066AA  A4D8               	btfss	status,2,c
  2712  0066AC  D2B4               	goto	l4588
  2713                           
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2715  0066AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  0066B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  0066B6  2ADE               	incf	postinc2,f,c
  2718  0066B8  0E00               	movlw	0
  2719  0066BA  22DD               	addwfc	postdec2,f,c
  2720                           
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2722  0066BC  0E00               	movlw	0
  2723  0066BE  0100               	movlb	0	; () banked
  2724  0066C0  6FD1               	movwf	(_width+1)& (0+255),b
  2725  0066C2  0E00               	movlw	0
  2726  0066C4  6FD0               	movwf	_width& (0+255),b
  2727  0066C6  C0D0  F05E         	movff	_width,_flags
  2728  0066CA  C0D1  F05F         	movff	_width+1,_flags+1
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2732  0066CE  69D2               	setf	_prec& (0+255),b
  2733  0066D0  69D3               	setf	(_prec+1)& (0+255),b
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2737  0066D2  0E00               	movlw	0
  2738  0066D4  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2739  0066D6  0E00               	movlw	0
  2740  0066D8  D014               	goto	L1
  2741  0066DA                     l4456:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2745  0066DA  805E               	bsf	_flags,0,c
  2746  0066DC                     l4458:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2750  0066DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2751  0066E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2752  0066E4  2ADE               	incf	postinc2,f,c
  2753  0066E6  0E00               	movlw	0
  2754  0066E8  22DD               	addwfc	postdec2,f,c
  2755                           
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2757  0066EA  D02E               	goto	l4482
  2758  0066EC                     l4460:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2762  0066EC  825E               	bsf	_flags,1,c
  2763  0066EE  D7F6               	goto	l4458
  2764  0066F0                     l4464:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2768  0066F0  845E               	bsf	_flags,2,c
  2769  0066F2  D7F4               	goto	l4458
  2770  0066F4                     l4468:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2774  0066F4  865E               	bsf	_flags,3,c
  2775  0066F6  D7F2               	goto	l4458
  2776  0066F8                     l4472:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2780  0066F8  885E               	bsf	_flags,4,c
  2781  0066FA  D7F0               	goto	l4458
  2782  0066FC                     l4476:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2786  0066FC  0E00               	movlw	0
  2787  0066FE  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2788  006700  0E01               	movlw	1
  2789  006702                     L1:
  2790  006702  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  2791                           
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2793  006704  D021               	goto	l4482
  2794  006706                     l4480:
  2795                           
  2796                           ; BSR set to: 0
  2797  006706  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798  00670A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799  00670E  CFDE FFF6          	movff	postinc2,tblptrl
  2800  006712  CFDD FFF7          	movff	postdec2,tblptrh
  2801  006716                     	if	0	;tblptru may be non-zero
  2802  006716                     	endif
  2803  006716                     	if	0	;tblptru may be non-zero
  2804  006716                     	endif
  2805  006716  0008               	tblrd		*
  2806  006718  50F5               	movf	tablat,w,c
  2807  00671A  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2808  00671C  6A47               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2809                           
  2810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 1, Range of values is 0 to 0
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte            4     3 (average)
  2816                           ;	Chosen strategy is simple_byte
  2817  00671E  5047               	movf	??_vfpfcnvrt+1,w,c
  2818  006720  0A00               	xorlw	0	; case 0
  2819  006722  A4D8               	btfss	status,2,c
  2820  006724  D7EB               	goto	l4476
  2821                           
  2822                           ; BSR set to: 0
  2823                           ; Switch size 1, requested type "simple"
  2824                           ; Number of cases is 5, Range of values is 32 to 48
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte           16     9 (average)
  2828                           ;	Chosen strategy is simple_byte
  2829  006726  5046               	movf	??_vfpfcnvrt,w,c
  2830  006728  0A20               	xorlw	32	; case 32
  2831  00672A  B4D8               	btfsc	status,2,c
  2832  00672C  D7E3               	goto	l4468
  2833  00672E  0A03               	xorlw	3	; case 35
  2834  006730  B4D8               	btfsc	status,2,c
  2835  006732  D7E2               	goto	l4472
  2836  006734  0A08               	xorlw	8	; case 43
  2837  006736  B4D8               	btfsc	status,2,c
  2838  006738  D7DB               	goto	l4464
  2839  00673A  0A06               	xorlw	6	; case 45
  2840  00673C  B4D8               	btfsc	status,2,c
  2841  00673E  D7CD               	goto	l4456
  2842  006740  0A1D               	xorlw	29	; case 48
  2843  006742  B4D8               	btfsc	status,2,c
  2844  006744  D7D3               	goto	l4460
  2845  006746  D7DA               	goto	l4476
  2846  006748                     l4482:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2850  006748  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  2851  00674A  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2852  00674C  B4D8               	btfsc	status,2,c
  2853  00674E  D7DB               	goto	l4480
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2857  006750  B05E               	btfsc	_flags,0,c
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2861  006752  925E               	bcf	_flags,1,c
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2865  006754  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866  006758  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867  00675C  CFDE FFF6          	movff	postinc2,tblptrl
  2868  006760  CFDD FFF7          	movff	postdec2,tblptrh
  2869  006764                     	if	0	;tblptru may be non-zero
  2870  006764                     	endif
  2871  006764                     	if	0	;tblptru may be non-zero
  2872  006764                     	endif
  2873  006764  0008               	tblrd		*
  2874  006766  50F5               	movf	tablat,w,c
  2875  006768  0A2A               	xorlw	42
  2876  00676A  A4D8               	btfss	status,2,c
  2877  00676C  D023               	goto	l4494
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2881  00676E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2882  006772  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2883  006776  2ADE               	incf	postinc2,f,c
  2884  006778  0E00               	movlw	0
  2885  00677A  22DD               	addwfc	postdec2,f,c
  2886                           
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2888  00677C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2889  006780  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2890  006784  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2891  006788  0E02               	movlw	2
  2892  00678A  26DE               	addwf	postinc2,f,c
  2893  00678C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2894  006790  0E00               	movlw	0
  2895  006792  22DD               	addwfc	postdec2,f,c
  2896  006794  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2897  006798  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2898  00679C  CFDE F0D0          	movff	postinc2,_width
  2899  0067A0  CFDD F0D1          	movff	postdec2,_width+1
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2903  0067A4  AFD1               	btfss	(_width+1)& (0+255),7,b
  2904  0067A6  D040               	goto	u5470
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2908  0067A8  805E               	bsf	_flags,0,c
  2909                           
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2911  0067AA  6DD0               	negf	_width& (0+255),b
  2912  0067AC  1FD1               	comf	(_width+1)& (0+255),f,b
  2913  0067AE  B0D8               	btfsc	status,0,c
  2914  0067B0  2BD1               	incf	(_width+1)& (0+255),f,b
  2915  0067B2  D03A               	goto	u5470
  2916  0067B4                     l4494:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2920  0067B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2921  0067B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2922  0067BC  CFDE F008          	movff	postinc2,atoi@s
  2923  0067C0  CFDD F009          	movff	postdec2,atoi@s+1
  2924  0067C4  EC96  F02B         	call	_atoi	;wreg free
  2925  0067C8  C008  F0D0         	movff	?_atoi,_width
  2926  0067CC  C009  F0D1         	movff	?_atoi+1,_width+1
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2929  0067D0  D007               	goto	l4498
  2930  0067D2                     l4496:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2934  0067D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2935  0067D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2936  0067DA  2ADE               	incf	postinc2,f,c
  2937  0067DC  0E00               	movlw	0
  2938  0067DE  22DD               	addwfc	postdec2,f,c
  2939  0067E0                     l4498:
  2940  0067E0  0ED0               	movlw	208
  2941  0067E2  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2942  0067E4  0EFF               	movlw	255
  2943  0067E6  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2944  0067E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2945  0067EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2946  0067F0  CFDE FFF6          	movff	postinc2,tblptrl
  2947  0067F4  CFDD FFF7          	movff	postdec2,tblptrh
  2948  0067F8                     	if	0	;tblptru may be non-zero
  2949  0067F8                     	endif
  2950  0067F8                     	if	0	;tblptru may be non-zero
  2951  0067F8                     	endif
  2952  0067F8  0008               	tblrd		*
  2953  0067FA  50F5               	movf	tablat,w,c
  2954  0067FC  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2955  0067FE  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2956  006800  5046               	movf	??_vfpfcnvrt,w,c
  2957  006802  2648               	addwf	??_vfpfcnvrt+2,f,c
  2958  006804  5047               	movf	??_vfpfcnvrt+1,w,c
  2959  006806  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2960  006808  5049               	movf	??_vfpfcnvrt+3,w,c
  2961  00680A  E106               	bnz	u5450
  2962  00680C  0E0A               	movlw	10
  2963  00680E  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2964  006810  B0D8               	btfsc	status,0,c
  2965  006812  D002               	goto	u5450
  2966  006814  0E01               	movlw	1
  2967  006816  D001               	goto	u5460
  2968  006818                     u5450:
  2969  006818  0E00               	movlw	0
  2970  00681A                     u5460:
  2971  00681A  0100               	movlb	0	; () banked
  2972  00681C  6FA2               	movwf	_vfpfcnvrt$464& (0+255),b
  2973  00681E  6BA3               	clrf	(_vfpfcnvrt$464+1)& (0+255),b
  2974                           
  2975                           ; BSR set to: 0
  2976  006820  51A2               	movf	_vfpfcnvrt$464& (0+255),w,b
  2977  006822  11A3               	iorwf	(_vfpfcnvrt$464+1)& (0+255),w,b
  2978  006824  A4D8               	btfss	status,2,c
  2979  006826  D7D5               	goto	l4496
  2980  006828                     u5470:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2984  006828  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2985  00682C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2986  006830  CFDE FFF6          	movff	postinc2,tblptrl
  2987  006834  CFDD FFF7          	movff	postdec2,tblptrh
  2988  006838                     	if	0	;tblptru may be non-zero
  2989  006838                     	endif
  2990  006838                     	if	0	;tblptru may be non-zero
  2991  006838                     	endif
  2992  006838  0008               	tblrd		*
  2993  00683A  50F5               	movf	tablat,w,c
  2994  00683C  0A2E               	xorlw	46
  2995  00683E  A4D8               	btfss	status,2,c
  2996  006840  D06E               	goto	u5520
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3000  006842  0E00               	movlw	0
  3001  006844  6FD3               	movwf	(_prec+1)& (0+255),b
  3002  006846  0E00               	movlw	0
  3003  006848  6FD2               	movwf	_prec& (0+255),b
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3007  00684A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3008  00684E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3009  006852  2ADE               	incf	postinc2,f,c
  3010  006854  0E00               	movlw	0
  3011  006856  22DD               	addwfc	postdec2,f,c
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3015  006858  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3016  00685C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3017  006860  CFDE FFF6          	movff	postinc2,tblptrl
  3018  006864  CFDD FFF7          	movff	postdec2,tblptrh
  3019  006868                     	if	0	;tblptru may be non-zero
  3020  006868                     	endif
  3021  006868                     	if	0	;tblptru may be non-zero
  3022  006868                     	endif
  3023  006868  0008               	tblrd		*
  3024  00686A  50F5               	movf	tablat,w,c
  3025  00686C  0A2A               	xorlw	42
  3026  00686E  A4D8               	btfss	status,2,c
  3027  006870  D01C               	goto	l4514
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3031  006872  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3032  006876  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3033  00687A  2ADE               	incf	postinc2,f,c
  3034  00687C  0E00               	movlw	0
  3035  00687E  22DD               	addwfc	postdec2,f,c
  3036                           
  3037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3038  006880  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3039  006884  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3040  006888  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3041  00688C  0E02               	movlw	2
  3042  00688E  26DE               	addwf	postinc2,f,c
  3043  006890  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3044  006894  0E00               	movlw	0
  3045  006896  22DD               	addwfc	postdec2,f,c
  3046  006898  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3047  00689C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3048  0068A0  CFDE F0D2          	movff	postinc2,_prec
  3049  0068A4  CFDD F0D3          	movff	postdec2,_prec+1
  3050                           
  3051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3052  0068A8  D03A               	goto	u5520
  3053  0068AA                     l4514:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3057  0068AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3058  0068AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3059  0068B2  CFDE F008          	movff	postinc2,atoi@s
  3060  0068B6  CFDD F009          	movff	postdec2,atoi@s+1
  3061  0068BA  EC96  F02B         	call	_atoi	;wreg free
  3062  0068BE  C008  F0D2         	movff	?_atoi,_prec
  3063  0068C2  C009  F0D3         	movff	?_atoi+1,_prec+1
  3064                           
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3066  0068C6  D007               	goto	l4518
  3067  0068C8                     l4516:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3071  0068C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3072  0068CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3073  0068D0  2ADE               	incf	postinc2,f,c
  3074  0068D2  0E00               	movlw	0
  3075  0068D4  22DD               	addwfc	postdec2,f,c
  3076  0068D6                     l4518:
  3077  0068D6  0ED0               	movlw	208
  3078  0068D8  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3079  0068DA  0EFF               	movlw	255
  3080  0068DC  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3081  0068DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3082  0068E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3083  0068E6  CFDE FFF6          	movff	postinc2,tblptrl
  3084  0068EA  CFDD FFF7          	movff	postdec2,tblptrh
  3085  0068EE                     	if	0	;tblptru may be non-zero
  3086  0068EE                     	endif
  3087  0068EE                     	if	0	;tblptru may be non-zero
  3088  0068EE                     	endif
  3089  0068EE  0008               	tblrd		*
  3090  0068F0  50F5               	movf	tablat,w,c
  3091  0068F2  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3092  0068F4  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3093  0068F6  5046               	movf	??_vfpfcnvrt,w,c
  3094  0068F8  2648               	addwf	??_vfpfcnvrt+2,f,c
  3095  0068FA  5047               	movf	??_vfpfcnvrt+1,w,c
  3096  0068FC  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3097  0068FE  5049               	movf	??_vfpfcnvrt+3,w,c
  3098  006900  E106               	bnz	u5500
  3099  006902  0E0A               	movlw	10
  3100  006904  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3101  006906  B0D8               	btfsc	status,0,c
  3102  006908  D002               	goto	u5500
  3103  00690A  0E01               	movlw	1
  3104  00690C  D001               	goto	u5510
  3105  00690E                     u5500:
  3106  00690E  0E00               	movlw	0
  3107  006910                     u5510:
  3108  006910  0100               	movlb	0	; () banked
  3109  006912  6FA4               	movwf	_vfpfcnvrt$465& (0+255),b
  3110  006914  6BA5               	clrf	(_vfpfcnvrt$465+1)& (0+255),b
  3111                           
  3112                           ; BSR set to: 0
  3113  006916  51A4               	movf	_vfpfcnvrt$465& (0+255),w,b
  3114  006918  11A5               	iorwf	(_vfpfcnvrt$465+1)& (0+255),w,b
  3115  00691A  A4D8               	btfss	status,2,c
  3116  00691C  D7D5               	goto	l4516
  3117  00691E                     u5520:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3121  00691E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3122  006922  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3123  006926  CFDE FFF6          	movff	postinc2,tblptrl
  3124  00692A  CFDD FFF7          	movff	postdec2,tblptrh
  3125  00692E                     	if	0	;tblptru may be non-zero
  3126  00692E                     	endif
  3127  00692E                     	if	0	;tblptru may be non-zero
  3128  00692E                     	endif
  3129  00692E  0008               	tblrd		*
  3130  006930  50F5               	movf	tablat,w,c
  3131  006932  6E07               	movwf	tolower@c,c
  3132  006934  6A08               	clrf	tolower@c+1,c
  3133  006936  ECD2  F024         	call	_tolower	;wreg free
  3134  00693A  5007               	movf	?_tolower,w,c
  3135  00693C  0100               	movlb	0	; () banked
  3136  00693E  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3140  006940  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3141  006942  B4D8               	btfsc	status,2,c
  3142  006944  D035               	goto	l4534
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3146  006946  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3147  00694A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3148  00694E  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3149  006952  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3150  006956  0E01               	movlw	1
  3151  006958  2646               	addwf	??_vfpfcnvrt,f,c
  3152  00695A  0E00               	movlw	0
  3153  00695C  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3154  00695E  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3155  006962  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3156  006966                     	if	0	;tblptru may be non-zero
  3157  006966                     	endif
  3158  006966                     	if	0	;tblptru may be non-zero
  3159  006966                     	endif
  3160  006966  0008               	tblrd		*
  3161  006968  50F5               	movf	tablat,w,c
  3162  00696A  6E07               	movwf	tolower@c,c
  3163  00696C  6A08               	clrf	tolower@c+1,c
  3164  00696E  ECD2  F024         	call	_tolower	;wreg free
  3165  006972  5007               	movf	?_tolower,w,c
  3166  006974  0100               	movlb	0	; () banked
  3167  006976  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3171  006978  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3172  00697A  B4D8               	btfsc	status,2,c
  3173  00697C  D019               	goto	l4534
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3177  00697E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3178  006982  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3179  006986  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3180  00698A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3181  00698E  0E02               	movlw	2
  3182  006990  2646               	addwf	??_vfpfcnvrt,f,c
  3183  006992  0E00               	movlw	0
  3184  006994  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3185  006996  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3186  00699A  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3187  00699E                     	if	0	;tblptru may be non-zero
  3188  00699E                     	endif
  3189  00699E                     	if	0	;tblptru may be non-zero
  3190  00699E                     	endif
  3191  00699E  0008               	tblrd		*
  3192  0069A0  50F5               	movf	tablat,w,c
  3193  0069A2  6E07               	movwf	tolower@c,c
  3194  0069A4  6A08               	clrf	tolower@c+1,c
  3195  0069A6  ECD2  F024         	call	_tolower	;wreg free
  3196  0069AA  5007               	movf	?_tolower,w,c
  3197  0069AC  0100               	movlb	0	; () banked
  3198  0069AE  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3199  0069B0                     l4534:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3203  0069B0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3204  0069B4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3205  0069B8  CFDE FFF6          	movff	postinc2,tblptrl
  3206  0069BC  CFDD FFF7          	movff	postdec2,tblptrh
  3207  0069C0                     	if	0	;tblptru may be non-zero
  3208  0069C0                     	endif
  3209  0069C0                     	if	0	;tblptru may be non-zero
  3210  0069C0                     	endif
  3211  0069C0  0008               	tblrd		*
  3212  0069C2  50F5               	movf	tablat,w,c
  3213  0069C4  0A64               	xorlw	100
  3214  0069C6  B4D8               	btfsc	status,2,c
  3215  0069C8  D00D               	goto	u5560
  3216                           
  3217                           ; BSR set to: 0
  3218  0069CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3219  0069CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3220  0069D2  CFDE FFF6          	movff	postinc2,tblptrl
  3221  0069D6  CFDD FFF7          	movff	postdec2,tblptrh
  3222  0069DA                     	if	0	;tblptru may be non-zero
  3223  0069DA                     	endif
  3224  0069DA                     	if	0	;tblptru may be non-zero
  3225  0069DA                     	endif
  3226  0069DA  0008               	tblrd		*
  3227  0069DC  50F5               	movf	tablat,w,c
  3228  0069DE  0A69               	xorlw	105
  3229  0069E0  A4D8               	btfss	status,2,c
  3230  0069E2  D03F               	goto	l4544
  3231  0069E4                     u5560:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3235  0069E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3236  0069E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3237  0069EC  2ADE               	incf	postinc2,f,c
  3238  0069EE  0E00               	movlw	0
  3239  0069F0  22DD               	addwfc	postdec2,f,c
  3240                           
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3242  0069F2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3243  0069F6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3244  0069FA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3245  0069FE  0E02               	movlw	2
  3246  006A00  26DE               	addwf	postinc2,f,c
  3247  006A02  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3248  006A06  0E00               	movlw	0
  3249  006A08  22DD               	addwfc	postdec2,f,c
  3250  006A0A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3251  006A0E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3252  006A12  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3253  006A16  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3254  006A1A  0E00               	movlw	0
  3255  006A1C  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3256  006A1E  0EFF               	movlw	-1
  3257  006A20  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3258  006A22  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3259  006A24  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3260  006A26  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3261  006A28  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3262  006A2A  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3266  006A2C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3267  006A30  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3268  006A34  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3269  006A38  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3270  006A3C  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3271  006A40  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3272  006A44  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3273  006A48  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3274  006A4C  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3275  006A50  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3276  006A54  ECB5  F02D         	call	_dtoa	;wreg free
  3277  006A58  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3278  006A5C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3279  006A60  0012               	return	
  3280  006A62                     l4544:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3284  006A62  0E66               	movlw	102
  3285  006A64  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3286  006A66  A4D8               	btfss	status,2,c
  3287  006A68  D03F               	goto	l4556
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3291  006A6A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3292  006A6E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3293  006A72  CFDE FFF6          	movff	postinc2,tblptrl
  3294  006A76  CFDD FFF7          	movff	postdec2,tblptrh
  3295  006A7A                     	if	0	;tblptru may be non-zero
  3296  006A7A                     	endif
  3297  006A7A                     	if	0	;tblptru may be non-zero
  3298  006A7A                     	endif
  3299  006A7A  0008               	tblrd		*
  3300  006A7C  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3304  006A80  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3305  006A84  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3306  006A88  2ADE               	incf	postinc2,f,c
  3307  006A8A  0E00               	movlw	0
  3308  006A8C  22DD               	addwfc	postdec2,f,c
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3312  006A8E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3313  006A92  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3314  006A96  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3315  006A9A  0E04               	movlw	4
  3316  006A9C  26DE               	addwf	postinc2,f,c
  3317  006A9E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3318  006AA2  0E00               	movlw	0
  3319  006AA4  22DD               	addwfc	postdec2,f,c
  3320  006AA6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3321  006AAA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3322  006AAE  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3323  006AB2  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3324  006AB6  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3325  006ABA  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3326  006ABE                     l4552:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3330  006ABE  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3331  006AC2  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3332  006AC6  C0A8  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3333  006ACA  C0A9  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3334  006ACE  C0AA  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3335  006AD2  C0AB  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3336  006AD6  C0AF  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3337  006ADA  ECBE  F03A         	call	_efgtoa	;wreg free
  3338  006ADE  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  3339  006AE2  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3340  006AE6  0012               	return	
  3341  006AE8                     l4556:
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3345  006AE8  0EAC               	movlw	low vfpfcnvrt@ct
  3346  006AEA  6E01               	movwf	strncmp@_l,c
  3347  006AEC  0E00               	movlw	high vfpfcnvrt@ct
  3348  006AEE  6E02               	movwf	strncmp@_l+1,c
  3349  006AF0  0EFB               	movlw	low STR_35
  3350  006AF2  6E03               	movwf	strncmp@_r,c
  3351  006AF4  0E7F               	movlw	high STR_35
  3352  006AF6  6E04               	movwf	strncmp@_r+1,c
  3353  006AF8  0E00               	movlw	0
  3354  006AFA  6E06               	movwf	strncmp@n+1,c
  3355  006AFC  0E02               	movlw	2
  3356  006AFE  6E05               	movwf	strncmp@n,c
  3357  006B00  EC41  F027         	call	_strncmp	;wreg free
  3358  006B04  5001               	movf	?_strncmp,w,c
  3359  006B06  1002               	iorwf	?_strncmp+1,w,c
  3360  006B08  A4D8               	btfss	status,2,c
  3361  006B0A  D056               	goto	l4572
  3362                           
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3364  006B0C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3365  006B10  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3366  006B14  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3367  006B18  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3368  006B1C  0E01               	movlw	1
  3369  006B1E  2646               	addwf	??_vfpfcnvrt,f,c
  3370  006B20  0E00               	movlw	0
  3371  006B22  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3372  006B24  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3373  006B28  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3374  006B2C                     	if	0	;tblptru may be non-zero
  3375  006B2C                     	endif
  3376  006B2C                     	if	0	;tblptru may be non-zero
  3377  006B2C                     	endif
  3378  006B2C  0008               	tblrd		*
  3379  006B2E  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3380  006B32  0EBF               	movlw	191
  3381  006B34  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3382  006B36  0EFF               	movlw	255
  3383  006B38  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3384  006B3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3385  006B3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386  006B42  CFDE FFF6          	movff	postinc2,tblptrl
  3387  006B46  CFDD FFF7          	movff	postdec2,tblptrh
  3388  006B4A                     	if	0	;tblptru may be non-zero
  3389  006B4A                     	endif
  3390  006B4A                     	if	0	;tblptru may be non-zero
  3391  006B4A                     	endif
  3392  006B4A  0008               	tblrd		*
  3393  006B4C  50F5               	movf	tablat,w,c
  3394  006B4E  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3395  006B50  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3396  006B52  5046               	movf	??_vfpfcnvrt,w,c
  3397  006B54  2648               	addwf	??_vfpfcnvrt+2,f,c
  3398  006B56  5047               	movf	??_vfpfcnvrt+1,w,c
  3399  006B58  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3400  006B5A  5049               	movf	??_vfpfcnvrt+3,w,c
  3401  006B5C  E106               	bnz	u5590
  3402  006B5E  0E1A               	movlw	26
  3403  006B60  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3404  006B62  B0D8               	btfsc	status,0,c
  3405  006B64  D002               	goto	u5590
  3406  006B66  0E01               	movlw	1
  3407  006B68  D001               	goto	u5600
  3408  006B6A                     u5590:
  3409  006B6A  0E00               	movlw	0
  3410  006B6C                     u5600:
  3411  006B6C  0100               	movlb	0	; () banked
  3412  006B6E  6FA6               	movwf	_vfpfcnvrt$470& (0+255),b
  3413  006B70  6BA7               	clrf	(_vfpfcnvrt$470+1)& (0+255),b
  3414                           
  3415                           ; BSR set to: 0
  3416  006B72  51A6               	movf	_vfpfcnvrt$470& (0+255),w,b
  3417  006B74  11A7               	iorwf	(_vfpfcnvrt$470+1)& (0+255),w,b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3421                           
  3422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3426  006B76  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3427  006B7A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3428  006B7E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3429  006B82  0E04               	movlw	4
  3430  006B84  26DE               	addwf	postinc2,f,c
  3431  006B86  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3432  006B8A  0E00               	movlw	0
  3433  006B8C  22DD               	addwfc	postdec2,f,c
  3434  006B8E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3435  006B92  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3436  006B96  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3437  006B9A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3438  006B9E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3439  006BA2  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3443                           
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3445  006BA6  0E02               	movlw	2
  3446  006BA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3447  006BAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  006BB0  26DE               	addwf	postinc2,f,c
  3449  006BB2  0E00               	movlw	0
  3450  006BB4  22DD               	addwfc	postdec2,f,c
  3451  006BB6  D783               	goto	l4552
  3452  006BB8                     l4572:
  3453                           
  3454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3455  006BB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3456  006BBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3457  006BC0  CFDE FFF6          	movff	postinc2,tblptrl
  3458  006BC4  CFDD FFF7          	movff	postdec2,tblptrh
  3459  006BC8                     	if	0	;tblptru may be non-zero
  3460  006BC8                     	endif
  3461  006BC8                     	if	0	;tblptru may be non-zero
  3462  006BC8                     	endif
  3463  006BC8  0008               	tblrd		*
  3464  006BCA  50F5               	movf	tablat,w,c
  3465  006BCC  0A25               	xorlw	37
  3466  006BCE  A4D8               	btfss	status,2,c
  3467  006BD0  D016               	goto	l4582
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3470  006BD2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  006BD6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  006BDA  2ADE               	incf	postinc2,f,c
  3473  006BDC  0E00               	movlw	0
  3474  006BDE  22DD               	addwfc	postdec2,f,c
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3477  006BE0  0E00               	movlw	0
  3478  006BE2  6E02               	movwf	fputc@c+1,c
  3479  006BE4  0E25               	movlw	37
  3480  006BE6  6E01               	movwf	fputc@c,c
  3481  006BE8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3482  006BEC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3483  006BF0  ECF1  F026         	call	_fputc	;wreg free
  3484  006BF4                     l4578:
  3485                           
  3486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3487  006BF4  0E00               	movlw	0
  3488  006BF6  6E41               	movwf	?_vfpfcnvrt+1,c
  3489  006BF8  0E01               	movlw	1
  3490  006BFA  6E40               	movwf	?_vfpfcnvrt,c
  3491  006BFC  0012               	return	
  3492  006BFE                     l4582:
  3493                           
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3495  006BFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3496  006C02  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3497  006C06  2ADE               	incf	postinc2,f,c
  3498  006C08  0E00               	movlw	0
  3499  006C0A  22DD               	addwfc	postdec2,f,c
  3500                           
  3501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3502  006C0C  0E00               	movlw	0
  3503  006C0E  6E41               	movwf	?_vfpfcnvrt+1,c
  3504  006C10  0E00               	movlw	0
  3505  006C12  6E40               	movwf	?_vfpfcnvrt,c
  3506  006C14  0012               	return	
  3507  006C16                     l4588:
  3508                           
  3509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3510  006C16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3511  006C1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3512  006C1E  CFDE FFF6          	movff	postinc2,tblptrl
  3513  006C22  CFDD FFF7          	movff	postdec2,tblptrh
  3514  006C26                     	if	0	;tblptru may be non-zero
  3515  006C26                     	endif
  3516  006C26                     	if	0	;tblptru may be non-zero
  3517  006C26                     	endif
  3518  006C26  0008               	tblrd		*
  3519  006C28  50F5               	movf	tablat,w,c
  3520  006C2A  6E01               	movwf	fputc@c,c
  3521  006C2C  6A02               	clrf	fputc@c+1,c
  3522  006C2E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3523  006C32  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3524  006C36  ECF1  F026         	call	_fputc	;wreg free
  3525                           
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3527  006C3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3528  006C3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3529  006C42  2ADE               	incf	postinc2,f,c
  3530  006C44  0E00               	movlw	0
  3531  006C46  22DD               	addwfc	postdec2,f,c
  3532  006C48  D7D5               	goto	l4578
  3533  006C4A                     __end_of_vfpfcnvrt:
  3534                           	opt callstack 0
  3535                           
  3536 ;; *************** function _strncmp *****************
  3537 ;; Defined at:
  3538 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3541 ;;		 -> vfpfcnvrt@ct(3), 
  3542 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3543 ;;		 -> STR_37(3), 
  3544 ;;  n               2    4[COMRAM] unsigned int 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3547 ;;		 -> STR_37(3), 
  3548 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3549 ;;		 -> vfpfcnvrt@ct(3), 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2    0[COMRAM] int 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3559 ;;      Params:         6       0       0       0       0       0       0       0       0
  3560 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3561 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3562 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3563 ;;Total ram usage:       11 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_vfpfcnvrt
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text4
  3573  004E82                     __ptext4:
  3574                           	opt callstack 0
  3575  004E82                     _strncmp:
  3576                           	opt callstack 27
  3577                           
  3578                           ;incstack = 0
  3579  004E82  C001  F008         	movff	strncmp@_l,strncmp@l
  3580  004E86  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3581  004E8A  C003  F00A         	movff	strncmp@_r,strncmp@r
  3582  004E8E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3583  004E92  0605               	decf	strncmp@n,f,c
  3584  004E94  A0D8               	btfss	status,0,c
  3585  004E96  0606               	decf	strncmp@n+1,f,c
  3586  004E98  2805               	incf	strncmp@n,w,c
  3587  004E9A  E10F               	bnz	l4434
  3588  004E9C  2806               	incf	strncmp@n+1,w,c
  3589  004E9E  A4D8               	btfss	status,2,c
  3590  004EA0  D00C               	goto	l4434
  3591  004EA2  0E00               	movlw	0
  3592  004EA4  6E02               	movwf	?_strncmp+1,c
  3593  004EA6  0E00               	movlw	0
  3594  004EA8  6E01               	movwf	?_strncmp,c
  3595  004EAA  0012               	return	
  3596  004EAC                     l4432:
  3597  004EAC  4A08               	infsnz	strncmp@l,f,c
  3598  004EAE  2A09               	incf	strncmp@l+1,f,c
  3599  004EB0  4A0A               	infsnz	strncmp@r,f,c
  3600  004EB2  2A0B               	incf	strncmp@r+1,f,c
  3601  004EB4  0605               	decf	strncmp@n,f,c
  3602  004EB6  A0D8               	btfss	status,0,c
  3603  004EB8  0606               	decf	strncmp@n+1,f,c
  3604  004EBA                     l4434:
  3605  004EBA  C008  FFD9         	movff	strncmp@l,fsr2l
  3606  004EBE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3607  004EC2  50DF               	movf	indf2,w,c
  3608  004EC4  B4D8               	btfsc	status,2,c
  3609  004EC6  D01C               	goto	u5390
  3610  004EC8  C00A  FFF6         	movff	strncmp@r,tblptrl
  3611  004ECC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3612  004ED0                     	if	0	;tblptru may be non-zero
  3613  004ED0                     	endif
  3614  004ED0                     	if	0	;tblptru may be non-zero
  3615  004ED0                     	endif
  3616  004ED0  0008               	tblrd		*
  3617  004ED2  50F5               	movf	tablat,w,c
  3618  004ED4  0900               	iorlw	0
  3619  004ED6  B4D8               	btfsc	status,2,c
  3620  004ED8  D013               	goto	u5390
  3621  004EDA  5005               	movf	strncmp@n,w,c
  3622  004EDC  1006               	iorwf	strncmp@n+1,w,c
  3623  004EDE  B4D8               	btfsc	status,2,c
  3624  004EE0  D00F               	goto	u5390
  3625  004EE2  C008  FFD9         	movff	strncmp@l,fsr2l
  3626  004EE6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3627  004EEA  50DF               	movf	indf2,w,c
  3628  004EEC  6E07               	movwf	??_strncmp& (0+255),c
  3629  004EEE  C00A  FFF6         	movff	strncmp@r,tblptrl
  3630  004EF2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3631  004EF6                     	if	0	;tblptru may be non-zero
  3632  004EF6                     	endif
  3633  004EF6                     	if	0	;tblptru may be non-zero
  3634  004EF6                     	endif
  3635  004EF6  0008               	tblrd		*
  3636  004EF8  50F5               	movf	tablat,w,c
  3637  004EFA  1807               	xorwf	??_strncmp,w,c
  3638  004EFC  B4D8               	btfsc	status,2,c
  3639  004EFE  D7D6               	goto	l4432
  3640  004F00                     u5390:
  3641  004F00  C008  FFD9         	movff	strncmp@l,fsr2l
  3642  004F04  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3643  004F08  50DF               	movf	indf2,w,c
  3644  004F0A  6E07               	movwf	??_strncmp& (0+255),c
  3645  004F0C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3646  004F10  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3647  004F14                     	if	0	;tblptru may be non-zero
  3648  004F14                     	endif
  3649  004F14                     	if	0	;tblptru may be non-zero
  3650  004F14                     	endif
  3651  004F14  0008               	tblrd		*
  3652  004F16  50F5               	movf	tablat,w,c
  3653  004F18  5C07               	subwf	??_strncmp,w,c
  3654  004F1A  6E01               	movwf	?_strncmp,c
  3655  004F1C  6A02               	clrf	?_strncmp+1,c
  3656  004F1E  A0D8               	btfss	status,0,c
  3657  004F20  0602               	decf	?_strncmp+1,f,c
  3658  004F22  0012               	return		;funcret
  3659  004F24                     __end_of_strncmp:
  3660                           	opt callstack 0
  3661                           
  3662 ;; *************** function _efgtoa *****************
  3663 ;; Defined at:
  3664 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3667 ;;		 -> sprintf@f(6), 
  3668 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3669 ;;  c               1   51[COMRAM] unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  u               4   52[BANK0 ] unsigned char 
  3672 ;;  g               4   44[BANK0 ] unsigned char 
  3673 ;;  l               4   38[BANK0 ] unsigned char 
  3674 ;;  h               4   34[BANK0 ] unsigned char 
  3675 ;;  ou              4    0[BANK0 ] unsigned char 
  3676 ;;  n               2   50[BANK0 ] int 
  3677 ;;  e               2   48[BANK0 ] int 
  3678 ;;  i               2   42[BANK0 ] int 
  3679 ;;  w               2   31[BANK0 ] int 
  3680 ;;  p               2   28[BANK0 ] int 
  3681 ;;  sign            2   26[BANK0 ] int 
  3682 ;;  d               2   24[BANK0 ] int 
  3683 ;;  ne              2   22[BANK0 ] int 
  3684 ;;  m               2   20[BANK0 ] int 
  3685 ;;  pp              2   18[BANK0 ] int 
  3686 ;;  t               2   16[BANK0 ] int 
  3687 ;;  mode            1   33[BANK0 ] unsigned char 
  3688 ;;  nmode           1   30[BANK0 ] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2   45[COMRAM] int 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         7       0       0       0       0       0       0       0       0
  3699 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3700 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3701 ;;      Totals:        12      56       0       0       0       0       0       0       0
  3702 ;;Total ram usage:       68 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    4
  3705 ;; This function calls:
  3706 ;;		___awdiv
  3707 ;;		___awmod
  3708 ;;		___fladd
  3709 ;;		___fldiv
  3710 ;;		___fleq
  3711 ;;		___flge
  3712 ;;		___flmul
  3713 ;;		___flneg
  3714 ;;		___flsub
  3715 ;;		___fltol
  3716 ;;		___fpclassifyf
  3717 ;;		_floorf
  3718 ;;		_isupper
  3719 ;;		_pad
  3720 ;;		_strcpy
  3721 ;;		_tolower
  3722 ;; This function is called by:
  3723 ;;		_vfpfcnvrt
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text5
  3728  00757C                     __ptext5:
  3729                           	opt callstack 0
  3730  00757C                     _efgtoa:
  3731                           	opt callstack 23
  3732                           
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3734                           
  3735                           ;incstack = 0
  3736  00757C  0E00               	movlw	0
  3737  00757E  0100               	movlb	0	; () banked
  3738  007580  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3739  007582  0E00               	movlw	0
  3740  007584  6F7A               	movwf	efgtoa@sign& (0+255),b
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3744  007586  C030  F08C         	movff	efgtoa@f,efgtoa@g
  3745  00758A  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3746  00758E  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3747  007592  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3751  007596  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  3752  007598  D016               	goto	l4096
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3756  00759A  0E00               	movlw	0
  3757  00759C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3758  00759E  0E01               	movlw	1
  3759  0075A0  6F7A               	movwf	efgtoa@sign& (0+255),b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3763  0075A2  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3764  0075A6  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3765  0075AA  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3766  0075AE  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3767  0075B2  EC14  F024         	call	___flneg	;wreg free
  3768  0075B6  C001  F08C         	movff	?___flneg,efgtoa@g
  3769  0075BA  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3770  0075BE  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3771  0075C2  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3772  0075C6                     l4096:
  3773                           
  3774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3775  0075C6  0E00               	movlw	0
  3776  0075C8  0100               	movlb	0	; () banked
  3777  0075CA  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3778  0075CC  0E00               	movlw	0
  3779  0075CE  6F92               	movwf	efgtoa@n& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3783  0075D0  C0D0  F07F         	movff	_width,efgtoa@w
  3784  0075D4  C0D1  F080         	movff	_width+1,efgtoa@w+1
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3788  0075D8  517A               	movf	efgtoa@sign& (0+255),w,b
  3789  0075DA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3790  0075DC  A4D8               	btfss	status,2,c
  3791  0075DE  D002               	goto	u4780
  3792                           
  3793                           ; BSR set to: 0
  3794  0075E0  A45E               	btfss	_flags,2,c
  3795  0075E2  D013               	goto	l4116
  3796  0075E4                     u4780:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3800  0075E4  517A               	movf	efgtoa@sign& (0+255),w,b
  3801  0075E6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3802  0075E8  A4D8               	btfss	status,2,c
  3803  0075EA  D004               	goto	l4108
  3804                           
  3805                           ; BSR set to: 0
  3806  0075EC  0E00               	movlw	0
  3807  0075EE  6F65               	movwf	(_efgtoa$439+1)& (0+255),b
  3808  0075F0  0E2B               	movlw	43
  3809  0075F2  D003               	goto	L2
  3810  0075F4                     l4108:
  3811                           
  3812                           ; BSR set to: 0
  3813  0075F4  0E00               	movlw	0
  3814  0075F6  6F65               	movwf	(_efgtoa$439+1)& (0+255),b
  3815  0075F8  0E2D               	movlw	45
  3816  0075FA                     L2:
  3817  0075FA  6F64               	movwf	_efgtoa$439& (0+255),b
  3818                           
  3819                           ; BSR set to: 0
  3820  0075FC  C064  F100         	movff	_efgtoa$439,_dbuf
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3824  007600  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3825  007602  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3829  007604  077F               	decf	efgtoa@w& (0+255),f,b
  3830  007606  A0D8               	btfss	status,0,c
  3831  007608  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3832  00760A                     l4116:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3836  00760A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3837  00760E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3838  007612  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3839  007616  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3840  00761A  ECEF  F027         	call	___fpclassifyf	;wreg free
  3841  00761E  0401               	decf	?___fpclassifyf,w,c
  3842  007620  1002               	iorwf	?___fpclassifyf+1,w,c
  3843  007622  A4D8               	btfss	status,2,c
  3844  007624  D04C               	goto	l4134
  3845  007626  0EBF               	movlw	191
  3846  007628  6E35               	movwf	??_efgtoa& (0+255),c
  3847  00762A  0EFF               	movlw	255
  3848  00762C  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  3849  00762E  5034               	movf	efgtoa@c,w,c
  3850  007630  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  3851  007632  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  3852  007634  5035               	movf	??_efgtoa,w,c
  3853  007636  2637               	addwf	??_efgtoa+2,f,c
  3854  007638  5036               	movf	??_efgtoa+1,w,c
  3855  00763A  2238               	addwfc	??_efgtoa+3,f,c
  3856  00763C  5038               	movf	??_efgtoa+3,w,c
  3857  00763E  E106               	bnz	u4810
  3858  007640  0E1A               	movlw	26
  3859  007642  5C37               	subwf	??_efgtoa+2,w,c
  3860  007644  B0D8               	btfsc	status,0,c
  3861  007646  D002               	goto	u4810
  3862  007648  0E01               	movlw	1
  3863  00764A  D001               	goto	u4820
  3864  00764C                     u4810:
  3865  00764C  0E00               	movlw	0
  3866  00764E                     u4820:
  3867  00764E  0100               	movlb	0	; () banked
  3868  007650  6F66               	movwf	_efgtoa$440& (0+255),b
  3869  007652  6B67               	clrf	(_efgtoa$440+1)& (0+255),b
  3870                           
  3871                           ; BSR set to: 0
  3872  007654  5166               	movf	_efgtoa$440& (0+255),w,b
  3873  007656  1167               	iorwf	(_efgtoa$440+1)& (0+255),w,b
  3874  007658  B4D8               	btfsc	status,2,c
  3875  00765A  D00D               	goto	l4126
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3879  00765C  0E00               	movlw	low _dbuf
  3880  00765E  2592               	addwf	efgtoa@n& (0+255),w,b
  3881  007660  6E01               	movwf	strcpy@dest,c
  3882  007662  0E01               	movlw	high _dbuf
  3883  007664  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3884  007666  6E02               	movwf	strcpy@dest+1,c
  3885  007668  0EEB               	movlw	low STR_27
  3886  00766A  6E03               	movwf	strcpy@src,c
  3887  00766C  0E7F               	movlw	high STR_27
  3888  00766E  6E04               	movwf	strcpy@src+1,c
  3889  007670  EC20  F025         	call	_strcpy	;wreg free
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3892  007674  D00C               	goto	l4128
  3893  007676                     l4126:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3897  007676  0E00               	movlw	low _dbuf
  3898  007678  2592               	addwf	efgtoa@n& (0+255),w,b
  3899  00767A  6E01               	movwf	strcpy@dest,c
  3900  00767C  0E01               	movlw	high _dbuf
  3901  00767E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3902  007680  6E02               	movwf	strcpy@dest+1,c
  3903  007682  0EF3               	movlw	low STR_28
  3904  007684  6E03               	movwf	strcpy@src,c
  3905  007686  0E7F               	movlw	high STR_28
  3906  007688  6E04               	movwf	strcpy@src+1,c
  3907  00768A  EC20  F025         	call	_strcpy	;wreg free
  3908  00768E                     l4128:
  3909                           
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3911  00768E  0100               	movlb	0	; () banked
  3912  007690  0EFD               	movlw	253
  3913  007692  277F               	addwf	efgtoa@w& (0+255),f,b
  3914  007694  0EFF               	movlw	255
  3915  007696  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3916  007698                     l4130:
  3917                           
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3919  007698  C02E  F011         	movff	efgtoa@fp,pad@fp
  3920  00769C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3921  0076A0  0E00               	movlw	low _dbuf
  3922  0076A2  6E13               	movwf	pad@buf,c
  3923  0076A4  0E01               	movlw	high _dbuf
  3924  0076A6  6E14               	movwf	pad@buf+1,c
  3925  0076A8  C07F  F015         	movff	efgtoa@w,pad@p
  3926  0076AC  C080  F016         	movff	efgtoa@w+1,pad@p+1
  3927  0076B0  ECA6  F026         	call	_pad	;wreg free
  3928  0076B4  C011  F02E         	movff	?_pad,?_efgtoa
  3929  0076B8  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3930  0076BC  0012               	return	
  3931  0076BE                     l4134:
  3932                           
  3933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3934  0076BE  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3935  0076C2  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3936  0076C6  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3937  0076CA  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3938  0076CE  ECEF  F027         	call	___fpclassifyf	;wreg free
  3939  0076D2  5001               	movf	?___fpclassifyf,w,c
  3940  0076D4  1002               	iorwf	?___fpclassifyf+1,w,c
  3941  0076D6  A4D8               	btfss	status,2,c
  3942  0076D8  D035               	goto	l4152
  3943  0076DA  0EBF               	movlw	191
  3944  0076DC  6E35               	movwf	??_efgtoa& (0+255),c
  3945  0076DE  0EFF               	movlw	255
  3946  0076E0  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  3947  0076E2  5034               	movf	efgtoa@c,w,c
  3948  0076E4  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  3949  0076E6  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  3950  0076E8  5035               	movf	??_efgtoa,w,c
  3951  0076EA  2637               	addwf	??_efgtoa+2,f,c
  3952  0076EC  5036               	movf	??_efgtoa+1,w,c
  3953  0076EE  2238               	addwfc	??_efgtoa+3,f,c
  3954  0076F0  5038               	movf	??_efgtoa+3,w,c
  3955  0076F2  E106               	bnz	u4850
  3956  0076F4  0E1A               	movlw	26
  3957  0076F6  5C37               	subwf	??_efgtoa+2,w,c
  3958  0076F8  B0D8               	btfsc	status,0,c
  3959  0076FA  D002               	goto	u4850
  3960  0076FC  0E01               	movlw	1
  3961  0076FE  D001               	goto	u4860
  3962  007700                     u4850:
  3963  007700  0E00               	movlw	0
  3964  007702                     u4860:
  3965  007702  0100               	movlb	0	; () banked
  3966  007704  6F68               	movwf	_efgtoa$444& (0+255),b
  3967  007706  6B69               	clrf	(_efgtoa$444+1)& (0+255),b
  3968                           
  3969                           ; BSR set to: 0
  3970  007708  5168               	movf	_efgtoa$444& (0+255),w,b
  3971  00770A  1169               	iorwf	(_efgtoa$444+1)& (0+255),w,b
  3972  00770C  B4D8               	btfsc	status,2,c
  3973  00770E  D00D               	goto	l4144
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3977  007710  0E00               	movlw	low _dbuf
  3978  007712  2592               	addwf	efgtoa@n& (0+255),w,b
  3979  007714  6E01               	movwf	strcpy@dest,c
  3980  007716  0E01               	movlw	high _dbuf
  3981  007718  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3982  00771A  6E02               	movwf	strcpy@dest+1,c
  3983  00771C  0EEF               	movlw	low STR_31
  3984  00771E  6E03               	movwf	strcpy@src,c
  3985  007720  0E7F               	movlw	high STR_31
  3986  007722  6E04               	movwf	strcpy@src+1,c
  3987  007724  EC20  F025         	call	_strcpy	;wreg free
  3988                           
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3990  007728  D7B2               	goto	l4128
  3991  00772A                     l4144:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3995  00772A  0E00               	movlw	low _dbuf
  3996  00772C  2592               	addwf	efgtoa@n& (0+255),w,b
  3997  00772E  6E01               	movwf	strcpy@dest,c
  3998  007730  0E01               	movlw	high _dbuf
  3999  007732  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4000  007734  6E02               	movwf	strcpy@dest+1,c
  4001  007736  0EF7               	movlw	low STR_32
  4002  007738  6E03               	movwf	strcpy@src,c
  4003  00773A  0E7F               	movlw	high STR_32
  4004  00773C  6E04               	movwf	strcpy@src+1,c
  4005  00773E  EC20  F025         	call	_strcpy	;wreg free
  4006  007742  D7A5               	goto	l4128
  4007  007744                     l4152:
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4010  007744  0E00               	movlw	0
  4011  007746  0100               	movlb	0	; () banked
  4012  007748  6F94               	movwf	efgtoa@u& (0+255),b
  4013  00774A  0E00               	movlw	0
  4014  00774C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4015  00774E  0E80               	movlw	128
  4016  007750  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4017  007752  0E3F               	movlw	63
  4018  007754  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4021  007756  0E00               	movlw	0
  4022  007758  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4023  00775A  0E00               	movlw	0
  4024  00775C  6F90               	movwf	efgtoa@e& (0+255),b
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4028  00775E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4029  007762  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4030  007766  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4031  00776A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4032  00776E  0E00               	movlw	0
  4033  007770  6E05               	movwf	___fleq@ff2,c
  4034  007772  0E00               	movlw	0
  4035  007774  6E06               	movwf	___fleq@ff2+1,c
  4036  007776  0E00               	movlw	0
  4037  007778  6E07               	movwf	___fleq@ff2+2,c
  4038  00777A  0E00               	movlw	0
  4039  00777C  6E08               	movwf	___fleq@ff2+3,c
  4040  00777E  EC61  F026         	call	___fleq	;wreg free
  4041  007782  A0D8               	btfss	status,0,c
  4042  007784  D01E               	goto	l4162
  4043  007786  D076               	goto	u4900
  4044  007788                     l4158:
  4045                           
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4047  007788  C094  F001         	movff	efgtoa@u,___flmul@b
  4048  00778C  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4049  007790  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4050  007794  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4051  007798  0E00               	movlw	0
  4052  00779A  6E05               	movwf	___flmul@a,c
  4053  00779C  0E00               	movlw	0
  4054  00779E  6E06               	movwf	___flmul@a+1,c
  4055  0077A0  0E20               	movlw	32
  4056  0077A2  6E07               	movwf	___flmul@a+2,c
  4057  0077A4  0E41               	movlw	65
  4058  0077A6  6E08               	movwf	___flmul@a+3,c
  4059  0077A8  ECA1  F031         	call	___flmul	;wreg free
  4060  0077AC  C001  F094         	movff	?___flmul,efgtoa@u
  4061  0077B0  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4062  0077B4  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4063  0077B8  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4064                           
  4065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4066  0077BC  0100               	movlb	0	; () banked
  4067  0077BE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4068  0077C0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4069  0077C2                     l4162:
  4070                           
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4072  0077C2  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4073  0077C6  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4074  0077CA  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4075  0077CE  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4076  0077D2  0E00               	movlw	0
  4077  0077D4  6E05               	movwf	___flmul@a,c
  4078  0077D6  0E00               	movlw	0
  4079  0077D8  6E06               	movwf	___flmul@a+1,c
  4080  0077DA  0E20               	movlw	32
  4081  0077DC  6E07               	movwf	___flmul@a+2,c
  4082  0077DE  0E41               	movlw	65
  4083  0077E0  6E08               	movwf	___flmul@a+3,c
  4084  0077E2  C094  F001         	movff	efgtoa@u,___flmul@b
  4085  0077E6  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4086  0077EA  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4087  0077EE  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4088  0077F2  ECA1  F031         	call	___flmul	;wreg free
  4089  0077F6  C001  F01E         	movff	?___flmul,___flge@ff2
  4090  0077FA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4091  0077FE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4092  007802  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4093  007806  EC55  F028         	call	___flge	;wreg free
  4094  00780A  A0D8               	btfss	status,0,c
  4095  00780C  D01F               	goto	l4168
  4096  00780E  D7BC               	goto	l4158
  4097  007810                     l4164:
  4098                           
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4100  007810  C094  F001         	movff	efgtoa@u,___fldiv@b
  4101  007814  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4102  007818  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4103  00781C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4104  007820  0E00               	movlw	0
  4105  007822  6E05               	movwf	___fldiv@a,c
  4106  007824  0E00               	movlw	0
  4107  007826  6E06               	movwf	___fldiv@a+1,c
  4108  007828  0E20               	movlw	32
  4109  00782A  6E07               	movwf	___fldiv@a+2,c
  4110  00782C  0E41               	movlw	65
  4111  00782E  6E08               	movwf	___fldiv@a+3,c
  4112  007830  ECD7  F02E         	call	___fldiv	;wreg free
  4113  007834  C001  F094         	movff	?___fldiv,efgtoa@u
  4114  007838  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4115  00783C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4116  007840  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4117                           
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4119  007844  0100               	movlb	0	; () banked
  4120  007846  0790               	decf	efgtoa@e& (0+255),f,b
  4121  007848  A0D8               	btfss	status,0,c
  4122  00784A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4123  00784C                     l4168:
  4124                           
  4125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4126  00784C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4127  007850  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4128  007854  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4129  007858  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4130  00785C  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4131  007860  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4132  007864  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4133  007868  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4134  00786C  EC55  F028         	call	___flge	;wreg free
  4135  007870  A0D8               	btfss	status,0,c
  4136  007872  D7CE               	goto	l4164
  4137  007874                     u4900:
  4138                           
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4140  007874  C034  F007         	movff	efgtoa@c,tolower@c
  4141  007878  6A08               	clrf	tolower@c+1,c
  4142  00787A  ECD2  F024         	call	_tolower	;wreg free
  4143  00787E  5007               	movf	?_tolower,w,c
  4144  007880  0100               	movlb	0	; () banked
  4145  007882  6F81               	movwf	efgtoa@mode& (0+255),b
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4149  007884  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4153  007888  0E67               	movlw	103
  4154  00788A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4155  00788C  A4D8               	btfss	status,2,c
  4156  00788E  D019               	goto	l4184
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4160  007890  51D2               	movf	_prec& (0+255),w,b
  4161  007892  11D3               	iorwf	(_prec+1)& (0+255),w,b
  4162  007894  A4D8               	btfss	status,2,c
  4163  007896  D004               	goto	l4180
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4167  007898  0E00               	movlw	0
  4168  00789A  6FD3               	movwf	(_prec+1)& (0+255),b
  4169  00789C  0E01               	movlw	1
  4170  00789E  6FD2               	movwf	_prec& (0+255),b
  4171  0078A0                     l4180:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4175  0078A0  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  4176  0078A2  D005               	goto	u4930
  4177  0078A4  51D3               	movf	(_prec+1)& (0+255),w,b
  4178  0078A6  E108               	bnz	l229
  4179  0078A8  05D2               	decf	_prec& (0+255),w,b
  4180  0078AA  B0D8               	btfsc	status,0,c
  4181  0078AC  D005               	goto	l229
  4182  0078AE                     u4930:
  4183                           
  4184                           ; BSR set to: 0
  4185  0078AE  0E00               	movlw	0
  4186  0078B0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4187  0078B2  0E06               	movlw	6
  4188  0078B4  6F7C               	movwf	efgtoa@p& (0+255),b
  4189  0078B6  D008               	goto	l4190
  4190  0078B8                     l229:
  4191                           
  4192                           ; BSR set to: 0
  4193  0078B8  C0D2  F07C         	movff	_prec,efgtoa@p
  4194  0078BC  C0D3  F07D         	movff	_prec+1,efgtoa@p+1
  4195  0078C0  D003               	goto	l4190
  4196  0078C2                     l4184:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4200  0078C2  AFD3               	btfss	(_prec+1)& (0+255),7,b
  4201  0078C4  D7F9               	goto	l229
  4202  0078C6  D7F3               	goto	u4930
  4203  0078C8                     l4190:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4207  0078C8  0E67               	movlw	103
  4208  0078CA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4209  0078CC  A4D8               	btfss	status,2,c
  4210  0078CE  D022               	goto	l4200
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4214  0078D0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4215  0078D2  D006               	goto	u4960
  4216  0078D4  0EFC               	movlw	252
  4217  0078D6  5D90               	subwf	efgtoa@e& (0+255),w,b
  4218  0078D8  0EFF               	movlw	255
  4219  0078DA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4220  0078DC  A0D8               	btfss	status,0,c
  4221  0078DE  D018               	goto	l4198
  4222  0078E0                     u4960:
  4223                           
  4224                           ; BSR set to: 0
  4225  0078E0  0EFF               	movlw	255
  4226  0078E2  6E35               	movwf	??_efgtoa& (0+255),c
  4227  0078E4  0EFF               	movlw	255
  4228  0078E6  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4229  0078E8  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  4230  0078EC  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4231  0078F0  5035               	movf	??_efgtoa,w,c
  4232  0078F2  2637               	addwf	??_efgtoa+2,f,c
  4233  0078F4  5036               	movf	??_efgtoa+1,w,c
  4234  0078F6  2238               	addwfc	??_efgtoa+3,f,c
  4235  0078F8  5190               	movf	efgtoa@e& (0+255),w,b
  4236  0078FA  5C37               	subwf	??_efgtoa+2,w,c
  4237  0078FC  5038               	movf	??_efgtoa+3,w,c
  4238  0078FE  0A80               	xorlw	128
  4239  007900  6E39               	movwf	(??_efgtoa+4)& (0+255),c
  4240  007902  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4241  007904  0A80               	xorlw	128
  4242  007906  5839               	subwfb	(??_efgtoa+4)& (0+255),w,c
  4243  007908  A0D8               	btfss	status,0,c
  4244  00790A  D002               	goto	l4198
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4248  00790C  0E66               	movlw	102
  4249  00790E  D001               	goto	L3
  4250  007910                     l4198:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4254  007910  0E65               	movlw	101
  4255  007912                     L3:
  4256  007912  6F7E               	movwf	efgtoa@nmode& (0+255),b
  4257  007914                     l4200:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4261  007914  C07C  F074         	movff	efgtoa@p,efgtoa@m
  4262  007918  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4266  00791C  0E67               	movlw	103
  4267  00791E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4268  007920  A4D8               	btfss	status,2,c
  4269  007922  D005               	goto	u5000
  4270                           
  4271                           ; BSR set to: 0
  4272  007924  0E66               	movlw	102
  4273  007926  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4274  007928  B4D8               	btfsc	status,2,c
  4275                           
  4276                           ; BSR set to: 0
  4277  00792A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4278  00792C  D002               	goto	l4210
  4279  00792E                     u5000:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4283  00792E  4B74               	infsnz	efgtoa@m& (0+255),f,b
  4284  007930  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  4285  007932                     l4210:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4289  007932  0E66               	movlw	102
  4290  007934  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4291  007936  A4D8               	btfss	status,2,c
  4292  007938  D016               	goto	l4220
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4296  00793A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4297  00793C  D00C               	goto	l4216
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4301  00793E  0E00               	movlw	0
  4302  007940  6F94               	movwf	efgtoa@u& (0+255),b
  4303  007942  0E00               	movlw	0
  4304  007944  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4305  007946  0E80               	movlw	128
  4306  007948  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4307  00794A  0E3F               	movlw	63
  4308  00794C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4309                           
  4310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4311  00794E  0E00               	movlw	0
  4312  007950  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4313  007952  0E00               	movlw	0
  4314  007954  6F90               	movwf	efgtoa@e& (0+255),b
  4315  007956                     l4216:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4319  007956  0E67               	movlw	103
  4320  007958  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4321  00795A  B4D8               	btfsc	status,2,c
  4322  00795C  D004               	goto	l4220
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4326  00795E  5190               	movf	efgtoa@e& (0+255),w,b
  4327  007960  2774               	addwf	efgtoa@m& (0+255),f,b
  4328  007962  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4329  007964  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4330  007966                     l4220:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4334  007966  0E00               	movlw	0
  4335  007968  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4336  00796A  0E00               	movlw	0
  4337  00796C  6F8A               	movwf	efgtoa@i& (0+255),b
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4341  00796E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4342  007972  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4343  007976  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4344  00797A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4348  00797E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  4349  007982  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  4350  007986  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  4351  00798A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  4352                           
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4354  00798E  D07B               	goto	l4234
  4355  007990                     l4226:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4359  007990  C082  F001         	movff	efgtoa@h,___fldiv@b
  4360  007994  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4361  007998  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4362  00799C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4363  0079A0  C094  F005         	movff	efgtoa@u,___fldiv@a
  4364  0079A4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4365  0079A8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4366  0079AC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4367  0079B0  ECD7  F02E         	call	___fldiv	;wreg free
  4368  0079B4  C001  F01A         	movff	?___fldiv,floorf@x
  4369  0079B8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4370  0079BC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4371  0079C0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4372  0079C4  ECDA  F02C         	call	_floorf	;wreg free
  4373  0079C8  C01A  F086         	movff	?_floorf,efgtoa@l
  4374  0079CC  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4375  0079D0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4376  0079D4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4377                           
  4378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4379  0079D8  C086  F001         	movff	efgtoa@l,___fltol@f1
  4380  0079DC  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4381  0079E0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4382  0079E4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4383  0079E8  EC92  F027         	call	___fltol	;wreg free
  4384  0079EC  C001  F078         	movff	?___fltol,efgtoa@d
  4385  0079F0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4388  0079F4  C082  F01A         	movff	efgtoa@h,___flsub@b
  4389  0079F8  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4390  0079FC  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4391  007A00  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4392  007A04  C094  F005         	movff	efgtoa@u,___flmul@a
  4393  007A08  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4394  007A0C  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4395  007A10  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4396  007A14  C086  F001         	movff	efgtoa@l,___flmul@b
  4397  007A18  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4398  007A1C  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4399  007A20  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4400  007A24  ECA1  F031         	call	___flmul	;wreg free
  4401  007A28  C001  F01E         	movff	?___flmul,___flsub@a
  4402  007A2C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4403  007A30  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4404  007A34  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4405  007A38  ECAF  F024         	call	___flsub	;wreg free
  4406  007A3C  C01A  F082         	movff	?___flsub,efgtoa@h
  4407  007A40  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4408  007A44  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4409  007A48  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4410                           
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4412  007A4C  C094  F001         	movff	efgtoa@u,___fldiv@b
  4413  007A50  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4414  007A54  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4415  007A58  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4416  007A5C  0E00               	movlw	0
  4417  007A5E  6E05               	movwf	___fldiv@a,c
  4418  007A60  0E00               	movlw	0
  4419  007A62  6E06               	movwf	___fldiv@a+1,c
  4420  007A64  0E20               	movlw	32
  4421  007A66  6E07               	movwf	___fldiv@a+2,c
  4422  007A68  0E41               	movlw	65
  4423  007A6A  6E08               	movwf	___fldiv@a+3,c
  4424  007A6C  ECD7  F02E         	call	___fldiv	;wreg free
  4425  007A70  C001  F094         	movff	?___fldiv,efgtoa@u
  4426  007A74  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4427  007A78  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4428  007A7C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4429                           
  4430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4431  007A80  0100               	movlb	0	; () banked
  4432  007A82  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4433  007A84  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4434  007A86                     l4234:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4438  007A86  5174               	movf	efgtoa@m& (0+255),w,b
  4439  007A88  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4440  007A8A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4441  007A8C  0A80               	xorlw	128
  4442  007A8E  6E35               	movwf	??_efgtoa& (0+255),c
  4443  007A90  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4444  007A92  0A80               	xorlw	128
  4445  007A94  5835               	subwfb	??_efgtoa& (0+255),w,c
  4446  007A96  A0D8               	btfss	status,0,c
  4447  007A98  D77B               	goto	l4226
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4451  007A9A  C094  F001         	movff	efgtoa@u,___flmul@b
  4452  007A9E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4453  007AA2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4454  007AA6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4455  007AAA  0E00               	movlw	0
  4456  007AAC  6E05               	movwf	___flmul@a,c
  4457  007AAE  0E00               	movlw	0
  4458  007AB0  6E06               	movwf	___flmul@a+1,c
  4459  007AB2  0EA0               	movlw	160
  4460  007AB4  6E07               	movwf	___flmul@a+2,c
  4461  007AB6  0E40               	movlw	64
  4462  007AB8  6E08               	movwf	___flmul@a+3,c
  4463  007ABA  ECA1  F031         	call	___flmul	;wreg free
  4464  007ABE  C001  F086         	movff	?___flmul,efgtoa@l
  4465  007AC2  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4466  007AC6  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4467  007ACA  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4470  007ACE  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4471  007AD2  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4472  007AD6  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4473  007ADA  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4474  007ADE  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4475  007AE2  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4476  007AE6  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4477  007AEA  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4478  007AEE  EC55  F028         	call	___flge	;wreg free
  4479  007AF2  B0D8               	btfsc	status,0,c
  4480  007AF4  D003               	goto	l4242
  4481                           
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4483  007AF6  0E00               	movlw	0
  4484  007AF8  0100               	movlb	0	; () banked
  4485  007AFA  D018               	goto	L4
  4486  007AFC                     l4242:
  4487                           
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4489  007AFC  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4490  007B00  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4491  007B04  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4492  007B08  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4493  007B0C  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4494  007B10  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4495  007B14  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4496  007B18  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4497  007B1C  EC61  F026         	call	___fleq	;wreg free
  4498  007B20  A0D8               	btfss	status,0,c
  4499  007B22  D00B               	goto	l4248
  4500  007B24  0100               	movlb	0	; () banked
  4501  007B26  B178               	btfsc	efgtoa@d& (0+255),0,b
  4502  007B28  D008               	goto	l4248
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4506  007B2A  0E00               	movlw	0
  4507  007B2C                     L4:
  4508  007B2C  6F86               	movwf	efgtoa@l& (0+255),b
  4509  007B2E  0E00               	movlw	0
  4510  007B30  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4511  007B32  0E00               	movlw	0
  4512  007B34  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4513  007B36  0E00               	movlw	0
  4514  007B38  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4515  007B3A                     l4248:
  4516                           
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4518  007B3A  C08C  F001         	movff	efgtoa@g,___fladd@b
  4519  007B3E  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4520  007B42  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4521  007B46  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4522  007B4A  C086  F005         	movff	efgtoa@l,___fladd@a
  4523  007B4E  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4524  007B52  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4525  007B56  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4526  007B5A  EC1B  F030         	call	___fladd	;wreg free
  4527  007B5E  C001  F082         	movff	?___fladd,efgtoa@h
  4528  007B62  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4529  007B66  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4530  007B6A  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4531                           
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4533  007B6E  C060  F094         	movff	efgtoa@ou,efgtoa@u
  4534  007B72  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4535  007B76  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4536  007B7A  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4537                           
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4539  007B7E  0E65               	movlw	101
  4540  007B80  0100               	movlb	0	; () banked
  4541  007B82  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4542  007B84  B4D8               	btfsc	status,2,c
  4543  007B86  D005               	goto	l4256
  4544                           
  4545                           ; BSR set to: 0
  4546  007B88  C090  F076         	movff	efgtoa@e,efgtoa@ne
  4547  007B8C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  4548  007B90  D004               	goto	l255
  4549  007B92                     l4256:
  4550                           
  4551                           ; BSR set to: 0
  4552  007B92  0E00               	movlw	0
  4553  007B94  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4554  007B96  0E00               	movlw	0
  4555  007B98  6F76               	movwf	efgtoa@ne& (0+255),b
  4556  007B9A                     l255:
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4560  007B9A  0E00               	movlw	0
  4561  007B9C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4562  007B9E  0E00               	movlw	0
  4563  007BA0  6F72               	movwf	efgtoa@pp& (0+255),b
  4564                           
  4565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4566  007BA2  0E00               	movlw	0
  4567  007BA4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4568  007BA6  0E00               	movlw	0
  4569  007BA8  6F70               	movwf	efgtoa@t& (0+255),b
  4570                           
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4572  007BAA  0E00               	movlw	0
  4573  007BAC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4574  007BAE  0E00               	movlw	0
  4575  007BB0  6F8A               	movwf	efgtoa@i& (0+255),b
  4576                           
  4577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4578  007BB2  D0C7               	goto	l4306
  4579  007BB4                     l4258:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4583  007BB4  C082  F001         	movff	efgtoa@h,___fldiv@b
  4584  007BB8  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4585  007BBC  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4586  007BC0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4587  007BC4  C094  F005         	movff	efgtoa@u,___fldiv@a
  4588  007BC8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4589  007BCC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4590  007BD0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4591  007BD4  ECD7  F02E         	call	___fldiv	;wreg free
  4592  007BD8  C001  F01A         	movff	?___fldiv,floorf@x
  4593  007BDC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4594  007BE0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4595  007BE4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4596  007BE8  ECDA  F02C         	call	_floorf	;wreg free
  4597  007BEC  C01A  F086         	movff	?_floorf,efgtoa@l
  4598  007BF0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4599  007BF4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4600  007BF8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4601                           
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4603  007BFC  C086  F001         	movff	efgtoa@l,___fltol@f1
  4604  007C00  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4605  007C04  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4606  007C08  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4607  007C0C  EC92  F027         	call	___fltol	;wreg free
  4608  007C10  C001  F078         	movff	?___fltol,efgtoa@d
  4609  007C14  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4610                           
  4611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4612  007C18  B85E               	btfsc	_flags,4,c
  4613  007C1A  D00D               	goto	l4270
  4614  007C1C  0100               	movlb	0	; () banked
  4615  007C1E  5178               	movf	efgtoa@d& (0+255),w,b
  4616  007C20  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4617  007C22  A4D8               	btfss	status,2,c
  4618  007C24  D008               	goto	l4270
  4619                           
  4620                           ; BSR set to: 0
  4621  007C26  0E67               	movlw	103
  4622  007C28  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4623  007C2A  B4D8               	btfsc	status,2,c
  4624                           
  4625                           ; BSR set to: 0
  4626  007C2C  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4627  007C2E  D003               	goto	l4270
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4631  007C30  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4632  007C32  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4633                           
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4635  007C34  D03A               	goto	l4298
  4636  007C36                     l4270:
  4637                           
  4638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4639  007C36  0100               	movlb	0	; () banked
  4640  007C38  5172               	movf	efgtoa@pp& (0+255),w,b
  4641  007C3A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4642  007C3C  B4D8               	btfsc	status,2,c
  4643                           
  4644                           ; BSR set to: 0
  4645  007C3E  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4646  007C40  D022               	goto	l4290
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4650  007C42  0E00               	movlw	low _dbuf
  4651  007C44  2592               	addwf	efgtoa@n& (0+255),w,b
  4652  007C46  6ED9               	movwf	fsr2l,c
  4653  007C48  0E01               	movlw	high _dbuf
  4654  007C4A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4655  007C4C  6EDA               	movwf	fsr2h,c
  4656  007C4E  0E2E               	movlw	46
  4657  007C50  6EDF               	movwf	indf2,c
  4658                           
  4659                           ; BSR set to: 0
  4660  007C52  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4661  007C54  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4665  007C56  077F               	decf	efgtoa@w& (0+255),f,b
  4666  007C58  A0D8               	btfss	status,0,c
  4667  007C5A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4671  007C5C  0E00               	movlw	0
  4672  007C5E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4673  007C60  0E01               	movlw	1
  4674  007C62  6F72               	movwf	efgtoa@pp& (0+255),b
  4675  007C64  D010               	goto	l4290
  4676  007C66                     l4282:
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4680  007C66  0E00               	movlw	low _dbuf
  4681  007C68  2592               	addwf	efgtoa@n& (0+255),w,b
  4682  007C6A  6ED9               	movwf	fsr2l,c
  4683  007C6C  0E01               	movlw	high _dbuf
  4684  007C6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4685  007C70  6EDA               	movwf	fsr2h,c
  4686  007C72  0E30               	movlw	48
  4687  007C74  6EDF               	movwf	indf2,c
  4688                           
  4689                           ; BSR set to: 0
  4690  007C76  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4691  007C78  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4695  007C7A  077F               	decf	efgtoa@w& (0+255),f,b
  4696  007C7C  A0D8               	btfss	status,0,c
  4697  007C7E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4701  007C80  0770               	decf	efgtoa@t& (0+255),f,b
  4702  007C82  A0D8               	btfss	status,0,c
  4703  007C84  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4704  007C86                     l4290:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4708  007C86  5170               	movf	efgtoa@t& (0+255),w,b
  4709  007C88  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4710  007C8A  A4D8               	btfss	status,2,c
  4711  007C8C  D7EC               	goto	l4282
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4715  007C8E  0E00               	movlw	low _dbuf
  4716  007C90  2592               	addwf	efgtoa@n& (0+255),w,b
  4717  007C92  6ED9               	movwf	fsr2l,c
  4718  007C94  0E01               	movlw	high _dbuf
  4719  007C96  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4720  007C98  6EDA               	movwf	fsr2h,c
  4721  007C9A  5178               	movf	efgtoa@d& (0+255),w,b
  4722  007C9C  0F30               	addlw	48
  4723  007C9E  6EDF               	movwf	indf2,c
  4724                           
  4725                           ; BSR set to: 0
  4726  007CA0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4727  007CA2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4731  007CA4  077F               	decf	efgtoa@w& (0+255),f,b
  4732  007CA6  A0D8               	btfss	status,0,c
  4733  007CA8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4734  007CAA                     l4298:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4738  007CAA  C082  F01A         	movff	efgtoa@h,___flsub@b
  4739  007CAE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4740  007CB2  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4741  007CB6  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4742  007CBA  C094  F005         	movff	efgtoa@u,___flmul@a
  4743  007CBE  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4744  007CC2  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4745  007CC6  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4746  007CCA  C086  F001         	movff	efgtoa@l,___flmul@b
  4747  007CCE  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4748  007CD2  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4749  007CD6  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4750  007CDA  ECA1  F031         	call	___flmul	;wreg free
  4751  007CDE  C001  F01E         	movff	?___flmul,___flsub@a
  4752  007CE2  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4753  007CE6  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4754  007CEA  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4755  007CEE  ECAF  F024         	call	___flsub	;wreg free
  4756  007CF2  C01A  F082         	movff	?___flsub,efgtoa@h
  4757  007CF6  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4758  007CFA  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4759  007CFE  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4762  007D02  C094  F001         	movff	efgtoa@u,___fldiv@b
  4763  007D06  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4764  007D0A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4765  007D0E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4766  007D12  0E00               	movlw	0
  4767  007D14  6E05               	movwf	___fldiv@a,c
  4768  007D16  0E00               	movlw	0
  4769  007D18  6E06               	movwf	___fldiv@a+1,c
  4770  007D1A  0E20               	movlw	32
  4771  007D1C  6E07               	movwf	___fldiv@a+2,c
  4772  007D1E  0E41               	movlw	65
  4773  007D20  6E08               	movwf	___fldiv@a+3,c
  4774  007D22  ECD7  F02E         	call	___fldiv	;wreg free
  4775  007D26  C001  F094         	movff	?___fldiv,efgtoa@u
  4776  007D2A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4777  007D2E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4778  007D32  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4779                           
  4780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4781  007D36  0100               	movlb	0	; () banked
  4782  007D38  0776               	decf	efgtoa@ne& (0+255),f,b
  4783  007D3A  A0D8               	btfss	status,0,c
  4784  007D3C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4788  007D3E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4789  007D40  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4790  007D42                     l4306:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4794  007D42  5174               	movf	efgtoa@m& (0+255),w,b
  4795  007D44  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4796  007D46  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4797  007D48  0A80               	xorlw	128
  4798  007D4A  6E35               	movwf	??_efgtoa& (0+255),c
  4799  007D4C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4800  007D4E  0A80               	xorlw	128
  4801  007D50  5835               	subwfb	??_efgtoa& (0+255),w,c
  4802  007D52  B0D8               	btfsc	status,0,c
  4803  007D54  D008               	goto	u5170
  4804                           
  4805                           ; BSR set to: 0
  4806  007D56  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4807  007D58  D72D               	goto	l4258
  4808  007D5A  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4809  007D5C  E104               	bnz	u5170
  4810  007D5E  0E4B               	movlw	75
  4811  007D60  5D92               	subwf	efgtoa@n& (0+255),w,b
  4812  007D62  A0D8               	btfss	status,0,c
  4813  007D64  D727               	goto	l4258
  4814  007D66                     u5170:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4818  007D66  5172               	movf	efgtoa@pp& (0+255),w,b
  4819  007D68  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4820  007D6A  B4D8               	btfsc	status,2,c
  4821                           
  4822                           ; BSR set to: 0
  4823  007D6C  A85E               	btfss	_flags,4,c
  4824  007D6E  D00A               	goto	l4318
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4828  007D70  0E00               	movlw	low _dbuf
  4829  007D72  2592               	addwf	efgtoa@n& (0+255),w,b
  4830  007D74  6ED9               	movwf	fsr2l,c
  4831  007D76  0E01               	movlw	high _dbuf
  4832  007D78  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4833  007D7A  6EDA               	movwf	fsr2h,c
  4834  007D7C  0E2E               	movlw	46
  4835  007D7E  6EDF               	movwf	indf2,c
  4836                           
  4837                           ; BSR set to: 0
  4838  007D80  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4839  007D82  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4840  007D84                     l4318:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4844  007D84  0E00               	movlw	low _dbuf
  4845  007D86  2592               	addwf	efgtoa@n& (0+255),w,b
  4846  007D88  6ED9               	movwf	fsr2l,c
  4847  007D8A  0E01               	movlw	high _dbuf
  4848  007D8C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4849  007D8E  6EDA               	movwf	fsr2h,c
  4850  007D90  0E00               	movlw	0
  4851  007D92  6EDF               	movwf	indf2,c
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4855  007D94  0E65               	movlw	101
  4856  007D96  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4857  007D98  A4D8               	btfss	status,2,c
  4858  007D9A  D47E               	goto	l4130
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4862  007D9C  0E00               	movlw	0
  4863  007D9E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4864  007DA0  0E4F               	movlw	79
  4865  007DA2  6F8A               	movwf	efgtoa@i& (0+255),b
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4869  007DA4  0E00               	movlw	low _dbuf
  4870  007DA6  258A               	addwf	efgtoa@i& (0+255),w,b
  4871  007DA8  6ED9               	movwf	fsr2l,c
  4872  007DAA  0E01               	movlw	high _dbuf
  4873  007DAC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4874  007DAE  6EDA               	movwf	fsr2h,c
  4875  007DB0  0E00               	movlw	0
  4876  007DB2  6EDF               	movwf	indf2,c
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4880  007DB4  0E00               	movlw	0
  4881  007DB6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4882  007DB8  0E00               	movlw	0
  4883  007DBA  6F7A               	movwf	efgtoa@sign& (0+255),b
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4887  007DBC  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4888  007DBE  D008               	goto	l4334
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4892  007DC0  0E00               	movlw	0
  4893  007DC2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4894  007DC4  0E01               	movlw	1
  4895  007DC6  6F7A               	movwf	efgtoa@sign& (0+255),b
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4899  007DC8  6D90               	negf	efgtoa@e& (0+255),b
  4900  007DCA  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4901  007DCC  B0D8               	btfsc	status,0,c
  4902  007DCE  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4903  007DD0                     l4334:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4907  007DD0  0E00               	movlw	0
  4908  007DD2  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4909  007DD4  0E02               	movlw	2
  4910  007DD6  6F7C               	movwf	efgtoa@p& (0+255),b
  4911                           
  4912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4913  007DD8  D02B               	goto	l4346
  4914  007DDA                     l4336:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4918  007DDA  078A               	decf	efgtoa@i& (0+255),f,b
  4919  007DDC  A0D8               	btfss	status,0,c
  4920  007DDE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4924  007DE0  0E00               	movlw	low _dbuf
  4925  007DE2  258A               	addwf	efgtoa@i& (0+255),w,b
  4926  007DE4  6ED9               	movwf	fsr2l,c
  4927  007DE6  0E01               	movlw	high _dbuf
  4928  007DE8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4929  007DEA  6EDA               	movwf	fsr2h,c
  4930  007DEC  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4931  007DF0  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4932  007DF4  0E00               	movlw	0
  4933  007DF6  6E04               	movwf	___awmod@divisor+1,c
  4934  007DF8  0E0A               	movlw	10
  4935  007DFA  6E03               	movwf	___awmod@divisor,c
  4936  007DFC  ECAC  F025         	call	___awmod	;wreg free
  4937  007E00  5001               	movf	?___awmod,w,c
  4938  007E02  0F30               	addlw	48
  4939  007E04  6EDF               	movwf	indf2,c
  4940                           
  4941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4942  007E06  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4943  007E0A  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4944  007E0E  0E00               	movlw	0
  4945  007E10  6E04               	movwf	___awdiv@divisor+1,c
  4946  007E12  0E0A               	movlw	10
  4947  007E14  6E03               	movwf	___awdiv@divisor,c
  4948  007E16  EC1F  F026         	call	___awdiv	;wreg free
  4949  007E1A  C001  F090         	movff	?___awdiv,efgtoa@e
  4950  007E1E  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4953  007E22  0100               	movlb	0	; () banked
  4954  007E24  077C               	decf	efgtoa@p& (0+255),f,b
  4955  007E26  A0D8               	btfss	status,0,c
  4956  007E28  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4960  007E2A  077F               	decf	efgtoa@w& (0+255),f,b
  4961  007E2C  A0D8               	btfss	status,0,c
  4962  007E2E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4963  007E30                     l4346:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4967  007E30  5190               	movf	efgtoa@e& (0+255),w,b
  4968  007E32  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4969  007E34  A4D8               	btfss	status,2,c
  4970  007E36  D7D1               	goto	l4336
  4971                           
  4972                           ; BSR set to: 0
  4973  007E38  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4974  007E3A  D005               	goto	u5230
  4975  007E3C  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4976  007E3E  E1CD               	bnz	l4336
  4977  007E40  057C               	decf	efgtoa@p& (0+255),w,b
  4978  007E42  B0D8               	btfsc	status,0,c
  4979  007E44  D7CA               	goto	l4336
  4980  007E46                     u5230:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4984  007E46  078A               	decf	efgtoa@i& (0+255),f,b
  4985  007E48  A0D8               	btfss	status,0,c
  4986  007E4A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4990  007E4C  517A               	movf	efgtoa@sign& (0+255),w,b
  4991  007E4E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4992  007E50  A4D8               	btfss	status,2,c
  4993  007E52  D004               	goto	l4356
  4994                           
  4995                           ; BSR set to: 0
  4996  007E54  0E00               	movlw	0
  4997  007E56  6F6B               	movwf	(_efgtoa$448+1)& (0+255),b
  4998  007E58  0E2B               	movlw	43
  4999  007E5A  D003               	goto	L5
  5000  007E5C                     l4356:
  5001                           
  5002                           ; BSR set to: 0
  5003  007E5C  0E00               	movlw	0
  5004  007E5E  6F6B               	movwf	(_efgtoa$448+1)& (0+255),b
  5005  007E60  0E2D               	movlw	45
  5006  007E62                     L5:
  5007  007E62  6F6A               	movwf	_efgtoa$448& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010  007E64  0E00               	movlw	low _dbuf
  5011  007E66  258A               	addwf	efgtoa@i& (0+255),w,b
  5012  007E68  6ED9               	movwf	fsr2l,c
  5013  007E6A  0E01               	movlw	high _dbuf
  5014  007E6C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5015  007E6E  6EDA               	movwf	fsr2h,c
  5016  007E70  C06A  FFDF         	movff	_efgtoa$448,indf2
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5020  007E74  077F               	decf	efgtoa@w& (0+255),f,b
  5021  007E76  A0D8               	btfss	status,0,c
  5022  007E78  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5026  007E7A  078A               	decf	efgtoa@i& (0+255),f,b
  5027  007E7C  A0D8               	btfss	status,0,c
  5028  007E7E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5029                           
  5030                           ; BSR set to: 0
  5031  007E80  0EBF               	movlw	191
  5032  007E82  6E35               	movwf	??_efgtoa& (0+255),c
  5033  007E84  0EFF               	movlw	255
  5034  007E86  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  5035  007E88  5034               	movf	efgtoa@c,w,c
  5036  007E8A  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  5037  007E8C  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  5038  007E8E  5035               	movf	??_efgtoa,w,c
  5039  007E90  2637               	addwf	??_efgtoa+2,f,c
  5040  007E92  5036               	movf	??_efgtoa+1,w,c
  5041  007E94  2238               	addwfc	??_efgtoa+3,f,c
  5042  007E96  5038               	movf	??_efgtoa+3,w,c
  5043  007E98  E106               	bnz	u5250
  5044  007E9A  0E1A               	movlw	26
  5045  007E9C  5C37               	subwf	??_efgtoa+2,w,c
  5046  007E9E  B0D8               	btfsc	status,0,c
  5047  007EA0  D002               	goto	u5250
  5048  007EA2  0E01               	movlw	1
  5049  007EA4  D001               	goto	u5260
  5050  007EA6                     u5250:
  5051  007EA6  0E00               	movlw	0
  5052  007EA8                     u5260:
  5053  007EA8  6F6E               	movwf	_efgtoa$450& (0+255),b
  5054  007EAA  6B6F               	clrf	(_efgtoa$450+1)& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057  007EAC  516E               	movf	_efgtoa$450& (0+255),w,b
  5058  007EAE  116F               	iorwf	(_efgtoa$450+1)& (0+255),w,b
  5059  007EB0  A4D8               	btfss	status,2,c
  5060  007EB2  D004               	goto	l4372
  5061                           
  5062                           ; BSR set to: 0
  5063  007EB4  0E00               	movlw	0
  5064  007EB6  6F6D               	movwf	(_efgtoa$449+1)& (0+255),b
  5065  007EB8  0E65               	movlw	101
  5066  007EBA  D003               	goto	L6
  5067  007EBC                     l4372:
  5068                           
  5069                           ; BSR set to: 0
  5070  007EBC  0E00               	movlw	0
  5071  007EBE  6F6D               	movwf	(_efgtoa$449+1)& (0+255),b
  5072  007EC0  0E45               	movlw	69
  5073  007EC2                     L6:
  5074  007EC2  6F6C               	movwf	_efgtoa$449& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077  007EC4  0E00               	movlw	low _dbuf
  5078  007EC6  258A               	addwf	efgtoa@i& (0+255),w,b
  5079  007EC8  6ED9               	movwf	fsr2l,c
  5080  007ECA  0E01               	movlw	high _dbuf
  5081  007ECC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5082  007ECE  6EDA               	movwf	fsr2h,c
  5083  007ED0  C06C  FFDF         	movff	_efgtoa$449,indf2
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5087  007ED4  077F               	decf	efgtoa@w& (0+255),f,b
  5088  007ED6  A0D8               	btfss	status,0,c
  5089  007ED8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5093  007EDA  0E00               	movlw	low _dbuf
  5094  007EDC  2592               	addwf	efgtoa@n& (0+255),w,b
  5095  007EDE  6E01               	movwf	strcpy@dest,c
  5096  007EE0  0E01               	movlw	high _dbuf
  5097  007EE2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5098  007EE4  6E02               	movwf	strcpy@dest+1,c
  5099  007EE6  0E00               	movlw	low _dbuf
  5100  007EE8  258A               	addwf	efgtoa@i& (0+255),w,b
  5101  007EEA  6E03               	movwf	strcpy@src,c
  5102  007EEC  0E01               	movlw	high _dbuf
  5103  007EEE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5104  007EF0  6E04               	movwf	strcpy@src+1,c
  5105  007EF2  EC20  F025         	call	_strcpy	;wreg free
  5106  007EF6  EF4C  F03B         	goto	l4130
  5107  007EFA                     __end_of_efgtoa:
  5108                           	opt callstack 0
  5109                           
  5110 ;; *************** function _tolower *****************
  5111 ;; Defined at:
  5112 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  c               2    6[COMRAM] int 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    6[COMRAM] int 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5126 ;;      Params:         2       0       0       0       0       0       0       0       0
  5127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5128 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5129 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5130 ;;Total ram usage:        8 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    1
  5133 ;; This function calls:
  5134 ;;		_isupper
  5135 ;; This function is called by:
  5136 ;;		_efgtoa
  5137 ;;		_vfpfcnvrt
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text6
  5142  0049A4                     __ptext6:
  5143                           	opt callstack 0
  5144  0049A4                     _tolower:
  5145                           	opt callstack 26
  5146                           
  5147                           ;incstack = 0
  5148  0049A4  0EBF               	movlw	191
  5149  0049A6  6E09               	movwf	??_tolower& (0+255),c
  5150  0049A8  0EFF               	movlw	255
  5151  0049AA  6E0A               	movwf	(??_tolower+1)& (0+255),c
  5152  0049AC  C007  F00B         	movff	tolower@c,??_tolower+2
  5153  0049B0  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5154  0049B4  5009               	movf	??_tolower,w,c
  5155  0049B6  260B               	addwf	??_tolower+2,f,c
  5156  0049B8  500A               	movf	??_tolower+1,w,c
  5157  0049BA  220C               	addwfc	??_tolower+3,f,c
  5158  0049BC  500C               	movf	??_tolower+3,w,c
  5159  0049BE  E106               	bnz	u3610
  5160  0049C0  0E1A               	movlw	26
  5161  0049C2  5C0B               	subwf	??_tolower+2,w,c
  5162  0049C4  B0D8               	btfsc	status,0,c
  5163  0049C6  D002               	goto	u3610
  5164  0049C8  0E01               	movlw	1
  5165  0049CA  D001               	goto	u3620
  5166  0049CC                     u3610:
  5167  0049CC  0E00               	movlw	0
  5168  0049CE                     u3620:
  5169  0049CE  6E0D               	movwf	_tolower$1059,c
  5170  0049D0  6A0E               	clrf	_tolower$1059+1,c
  5171  0049D2  500D               	movf	_tolower$1059,w,c
  5172  0049D4  100E               	iorwf	_tolower$1059+1,w,c
  5173  0049D6  B4D8               	btfsc	status,2,c
  5174  0049D8  D006               	goto	l1152
  5175  0049DA  0E20               	movlw	32
  5176  0049DC  1007               	iorwf	tolower@c,w,c
  5177  0049DE  6E07               	movwf	?_tolower,c
  5178  0049E0  5008               	movf	tolower@c+1,w,c
  5179  0049E2  6E08               	movwf	?_tolower+1,c
  5180  0049E4  0012               	return	
  5181  0049E6                     l1152:
  5182  0049E6  C007  F007         	movff	tolower@c,?_tolower
  5183  0049EA  C008  F008         	movff	tolower@c+1,?_tolower+1
  5184  0049EE  0012               	return		;funcret
  5185  0049F0                     __end_of_tolower:
  5186                           	opt callstack 0
  5187                           
  5188 ;; *************** function _isupper *****************
  5189 ;; Defined at:
  5190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  c               2    0[COMRAM] int 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMRAM] int 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5204 ;;      Params:         2       0       0       0       0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5206 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5207 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5208 ;;Total ram usage:        6 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_efgtoa
  5214 ;;		_vfpfcnvrt
  5215 ;;		_tolower
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text7
  5220  004886                     __ptext7:
  5221                           	opt callstack 0
  5222  004886                     _isupper:
  5223                           	opt callstack 26
  5224                           
  5225                           ;incstack = 0
  5226  004886  0EBF               	movlw	191
  5227  004888  6E03               	movwf	??_isupper& (0+255),c
  5228  00488A  0EFF               	movlw	255
  5229  00488C  6E04               	movwf	(??_isupper+1)& (0+255),c
  5230  00488E  C001  F005         	movff	isupper@c,??_isupper+2
  5231  004892  C002  F006         	movff	isupper@c+1,??_isupper+3
  5232  004896  5003               	movf	??_isupper,w,c
  5233  004898  2605               	addwf	??_isupper+2,f,c
  5234  00489A  5004               	movf	??_isupper+1,w,c
  5235  00489C  2206               	addwfc	??_isupper+3,f,c
  5236  00489E  5006               	movf	??_isupper+3,w,c
  5237  0048A0  E106               	bnz	u3060
  5238  0048A2  0E1A               	movlw	26
  5239  0048A4  5C05               	subwf	??_isupper+2,w,c
  5240  0048A6  B0D8               	btfsc	status,0,c
  5241  0048A8  D002               	goto	u3060
  5242  0048AA  0E01               	movlw	1
  5243  0048AC  D001               	goto	u3070
  5244  0048AE                     u3060:
  5245  0048AE  0E00               	movlw	0
  5246  0048B0                     u3070:
  5247  0048B0  6E01               	movwf	?_isupper,c
  5248  0048B2  6A02               	clrf	?_isupper+1,c
  5249  0048B4  0012               	return		;funcret
  5250  0048B6                     __end_of_isupper:
  5251                           	opt callstack 0
  5252                           
  5253 ;; *************** function _strcpy *****************
  5254 ;; Defined at:
  5255 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5258 ;;		 -> dbuf(80), 
  5259 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5260 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
  5261 ;;		 -> dbuf(80), 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  d               2    8[COMRAM] PTR unsigned char 
  5264 ;;		 -> dbuf(80), 
  5265 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5266 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
  5267 ;;		 -> dbuf(80), 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2    0[COMRAM] PTR unsigned char 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5277 ;;      Params:         4       0       0       0       0       0       0       0       0
  5278 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5279 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5280 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5281 ;;Total ram usage:       10 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_efgtoa
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text8
  5291  004A40                     __ptext8:
  5292                           	opt callstack 0
  5293  004A40                     _strcpy:
  5294                           	opt callstack 26
  5295                           
  5296                           ;incstack = 0
  5297  004A40  C003  F007         	movff	strcpy@src,strcpy@s
  5298  004A44  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5299  004A48  C001  F009         	movff	strcpy@dest,strcpy@d
  5300  004A4C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5301  004A50                     l3438:
  5302  004A50  5007               	movf	strcpy@s,w,c
  5303  004A52  6E05               	movwf	??_strcpy& (0+255),c
  5304  004A54  5008               	movf	strcpy@s+1,w,c
  5305  004A56  6E06               	movwf	(??_strcpy+1)& (0+255),c
  5306  004A58  4A07               	infsnz	strcpy@s,f,c
  5307  004A5A  2A08               	incf	strcpy@s+1,f,c
  5308  004A5C  C005  FFF6         	movff	??_strcpy,tblptrl
  5309  004A60  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5310  004A64  6AF8               	clrf	tblptru,c
  5311  004A66  C009  FFD9         	movff	strcpy@d,fsr2l
  5312  004A6A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5313  004A6E  4A09               	infsnz	strcpy@d,f,c
  5314  004A70  2A0A               	incf	strcpy@d+1,f,c
  5315  004A72  0E07               	movlw	(high __ramtop+-1)
  5316  004A74  64F7               	cpfsgt	tblptrh,c
  5317  004A76  D003               	bra	u3597
  5318  004A78  0008               	tblrd		*
  5319  004A7A  50F5               	movf	tablat,w,c
  5320  004A7C  D005               	bra	u3590
  5321  004A7E                     u3597:
  5322  004A7E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5323  004A82  CFF7 FFE2          	movff	tblptrh,fsr1h
  5324  004A86  50E7               	movf	indf1,w,c
  5325  004A88                     u3590:
  5326  004A88  6EDF               	movwf	indf2,c
  5327  004A8A  50DF               	movf	indf2,w,c
  5328  004A8C  B4D8               	btfsc	status,2,c
  5329  004A8E  0012               	return	
  5330  004A90  D7DF               	goto	l3438
  5331  004A92                     __end_of_strcpy:
  5332                           	opt callstack 0
  5333                           
  5334 ;; *************** function _floorf *****************
  5335 ;; Defined at:
  5336 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  x               4   25[COMRAM] float 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  u               4   41[COMRAM] struct .
  5341 ;;  m               4   35[COMRAM] unsigned long 
  5342 ;;  e               2   39[COMRAM] int 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4   25[COMRAM] float 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5352 ;;      Params:         4       0       0       0       0       0       0       0       0
  5353 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5354 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5355 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5356 ;;Total ram usage:       20 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_efgtoa
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text9
  5366  0059B4                     __ptext9:
  5367                           	opt callstack 0
  5368  0059B4                     _floorf:
  5369                           	opt callstack 26
  5370                           
  5371                           ;incstack = 0
  5372  0059B4  C0C6  F02A         	movff	floorf@F524,floorf@u
  5373  0059B8  C0C7  F02B         	movff	floorf@F524+1,floorf@u+1
  5374  0059BC  C0C8  F02C         	movff	floorf@F524+2,floorf@u+2
  5375  0059C0  C0C9  F02D         	movff	floorf@F524+3,floorf@u+3
  5376  0059C4  C01A  F02A         	movff	floorf@x,floorf@u
  5377  0059C8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5378  0059CC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5379  0059D0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5380  0059D4  0E81               	movlw	129
  5381  0059D6  6E1E               	movwf	??_floorf& (0+255),c
  5382  0059D8  0EFF               	movlw	255
  5383  0059DA  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5384  0059DC  C02A  F020         	movff	floorf@u,??_floorf+2
  5385  0059E0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5386  0059E4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5387  0059E8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5388  0059EC  0E18               	movlw	24
  5389  0059EE  D005               	goto	u3640
  5390  0059F0                     u3645:
  5391  0059F0  90D8               	bcf	status,0,c
  5392  0059F2  3223               	rrcf	??_floorf+5,f,c
  5393  0059F4  3222               	rrcf	??_floorf+4,f,c
  5394  0059F6  3221               	rrcf	??_floorf+3,f,c
  5395  0059F8  3220               	rrcf	??_floorf+2,f,c
  5396  0059FA                     u3640:
  5397  0059FA  2EE8               	decfsz	wreg,f,c
  5398  0059FC  D7F9               	goto	u3645
  5399  0059FE  5020               	movf	??_floorf+2,w,c
  5400  005A00  241E               	addwf	??_floorf,w,c
  5401  005A02  6E28               	movwf	floorf@e,c
  5402  005A04  0E00               	movlw	0
  5403  005A06  201F               	addwfc	??_floorf+1,w,c
  5404  005A08  6E29               	movwf	floorf@e+1,c
  5405  005A0A  BE29               	btfsc	floorf@e+1,7,c
  5406  005A0C  D00F               	goto	l3456
  5407  005A0E  5029               	movf	floorf@e+1,w,c
  5408  005A10  E104               	bnz	u3650
  5409  005A12  0E17               	movlw	23
  5410  005A14  5C28               	subwf	floorf@e,w,c
  5411  005A16  A0D8               	btfss	status,0,c
  5412  005A18  D009               	goto	l3456
  5413  005A1A                     u3650:
  5414  005A1A  C01A  F01A         	movff	floorf@x,?_floorf
  5415  005A1E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5416  005A22  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5417  005A26  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5418  005A2A  0012               	return	
  5419  005A2C                     l3456:
  5420  005A2C  BE29               	btfsc	floorf@e+1,7,c
  5421  005A2E  D05E               	goto	l3466
  5422  005A30  C028  F01E         	movff	floorf@e,??_floorf
  5423  005A34  0EFF               	movlw	255
  5424  005A36  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5425  005A38  0EFF               	movlw	255
  5426  005A3A  6E20               	movwf	(??_floorf+2)& (0+255),c
  5427  005A3C  0E7F               	movlw	127
  5428  005A3E  6E21               	movwf	(??_floorf+3)& (0+255),c
  5429  005A40  0E00               	movlw	0
  5430  005A42  6E22               	movwf	(??_floorf+4)& (0+255),c
  5431  005A44                     u3675:
  5432  005A44  661E               	tstfsz	??_floorf,c
  5433  005A46  D001               	goto	u3676
  5434  005A48  D007               	goto	u3677
  5435  005A4A                     u3676:
  5436  005A4A  3422               	rlcf	??_floorf+4,w,c
  5437  005A4C  3222               	rrcf	??_floorf+4,f,c
  5438  005A4E  3221               	rrcf	??_floorf+3,f,c
  5439  005A50  3220               	rrcf	??_floorf+2,f,c
  5440  005A52  321F               	rrcf	??_floorf+1,f,c
  5441  005A54  2E1E               	decfsz	??_floorf,f,c
  5442  005A56  D7F6               	goto	u3675
  5443  005A58                     u3677:
  5444  005A58  C01F  F024         	movff	??_floorf+1,floorf@m
  5445  005A5C  C020  F025         	movff	??_floorf+2,floorf@m+1
  5446  005A60  C021  F026         	movff	??_floorf+3,floorf@m+2
  5447  005A64  C022  F027         	movff	??_floorf+4,floorf@m+3
  5448  005A68  5024               	movf	floorf@m,w,c
  5449  005A6A  142A               	andwf	floorf@u,w,c
  5450  005A6C  6E1E               	movwf	??_floorf& (0+255),c
  5451  005A6E  5025               	movf	floorf@m+1,w,c
  5452  005A70  142B               	andwf	floorf@u+1,w,c
  5453  005A72  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5454  005A74  5026               	movf	floorf@m+2,w,c
  5455  005A76  142C               	andwf	floorf@u+2,w,c
  5456  005A78  6E20               	movwf	(??_floorf+2)& (0+255),c
  5457  005A7A  5027               	movf	floorf@m+3,w,c
  5458  005A7C  142D               	andwf	floorf@u+3,w,c
  5459  005A7E  6E21               	movwf	(??_floorf+3)& (0+255),c
  5460  005A80  501E               	movf	??_floorf,w,c
  5461  005A82  101F               	iorwf	??_floorf+1,w,c
  5462  005A84  1020               	iorwf	??_floorf+2,w,c
  5463  005A86  1021               	iorwf	??_floorf+3,w,c
  5464  005A88  B4D8               	btfsc	status,2,c
  5465  005A8A  D7C7               	goto	u3650
  5466  005A8C  C02A  F01E         	movff	floorf@u,??_floorf
  5467  005A90  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5468  005A94  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5469  005A98  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5470  005A9C  0E20               	movlw	32
  5471  005A9E  D005               	goto	u3690
  5472  005AA0                     u3695:
  5473  005AA0  90D8               	bcf	status,0,c
  5474  005AA2  3221               	rrcf	??_floorf+3,f,c
  5475  005AA4  3220               	rrcf	??_floorf+2,f,c
  5476  005AA6  321F               	rrcf	??_floorf+1,f,c
  5477  005AA8  321E               	rrcf	??_floorf,f,c
  5478  005AAA                     u3690:
  5479  005AAA  2EE8               	decfsz	wreg,f,c
  5480  005AAC  D7F9               	goto	u3695
  5481  005AAE  501E               	movf	??_floorf,w,c
  5482  005AB0  101F               	iorwf	??_floorf+1,w,c
  5483  005AB2  1020               	iorwf	??_floorf+2,w,c
  5484  005AB4  1021               	iorwf	??_floorf+3,w,c
  5485  005AB6  B4D8               	btfsc	status,2,c
  5486  005AB8  D008               	goto	l1072
  5487  005ABA  5024               	movf	floorf@m,w,c
  5488  005ABC  262A               	addwf	floorf@u,f,c
  5489  005ABE  5025               	movf	floorf@m+1,w,c
  5490  005AC0  222B               	addwfc	floorf@u+1,f,c
  5491  005AC2  5026               	movf	floorf@m+2,w,c
  5492  005AC4  222C               	addwfc	floorf@u+2,f,c
  5493  005AC6  5027               	movf	floorf@m+3,w,c
  5494  005AC8  222D               	addwfc	floorf@u+3,f,c
  5495  005ACA                     l1072:
  5496  005ACA  1C24               	comf	floorf@m,w,c
  5497  005ACC  6E1E               	movwf	??_floorf& (0+255),c
  5498  005ACE  1C25               	comf	floorf@m+1,w,c
  5499  005AD0  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5500  005AD2  1C26               	comf	floorf@m+2,w,c
  5501  005AD4  6E20               	movwf	(??_floorf+2)& (0+255),c
  5502  005AD6  1C27               	comf	floorf@m+3,w,c
  5503  005AD8  6E21               	movwf	(??_floorf+3)& (0+255),c
  5504  005ADA  501E               	movf	??_floorf,w,c
  5505  005ADC  162A               	andwf	floorf@u,f,c
  5506  005ADE  501F               	movf	??_floorf+1,w,c
  5507  005AE0  162B               	andwf	floorf@u+1,f,c
  5508  005AE2  5020               	movf	??_floorf+2,w,c
  5509  005AE4  162C               	andwf	floorf@u+2,f,c
  5510  005AE6  5021               	movf	??_floorf+3,w,c
  5511  005AE8  162D               	andwf	floorf@u+3,f,c
  5512  005AEA  D036               	goto	l3474
  5513  005AEC                     l3466:
  5514  005AEC  C02A  F01E         	movff	floorf@u,??_floorf
  5515  005AF0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5516  005AF4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5517  005AF8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5518  005AFC  0E20               	movlw	32
  5519  005AFE  D005               	goto	u3710
  5520  005B00                     u3715:
  5521  005B00  90D8               	bcf	status,0,c
  5522  005B02  3221               	rrcf	??_floorf+3,f,c
  5523  005B04  3220               	rrcf	??_floorf+2,f,c
  5524  005B06  321F               	rrcf	??_floorf+1,f,c
  5525  005B08  321E               	rrcf	??_floorf,f,c
  5526  005B0A                     u3710:
  5527  005B0A  2EE8               	decfsz	wreg,f,c
  5528  005B0C  D7F9               	goto	u3715
  5529  005B0E  501E               	movf	??_floorf,w,c
  5530  005B10  101F               	iorwf	??_floorf+1,w,c
  5531  005B12  1020               	iorwf	??_floorf+2,w,c
  5532  005B14  1021               	iorwf	??_floorf+3,w,c
  5533  005B16  A4D8               	btfss	status,2,c
  5534  005B18  D008               	goto	l3470
  5535  005B1A  0E00               	movlw	0
  5536  005B1C  6E2A               	movwf	floorf@u,c
  5537  005B1E  0E00               	movlw	0
  5538  005B20  6E2B               	movwf	floorf@u+1,c
  5539  005B22  0E00               	movlw	0
  5540  005B24  6E2C               	movwf	floorf@u+2,c
  5541  005B26  0E00               	movlw	0
  5542  005B28  D016               	goto	L7
  5543  005B2A                     l3470:
  5544  005B2A  90D8               	bcf	status,0,c
  5545  005B2C  342A               	rlcf	floorf@u,w,c
  5546  005B2E  6E1E               	movwf	??_floorf& (0+255),c
  5547  005B30  342B               	rlcf	floorf@u+1,w,c
  5548  005B32  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5549  005B34  342C               	rlcf	floorf@u+2,w,c
  5550  005B36  6E20               	movwf	(??_floorf+2)& (0+255),c
  5551  005B38  342D               	rlcf	floorf@u+3,w,c
  5552  005B3A  6E21               	movwf	(??_floorf+3)& (0+255),c
  5553  005B3C  501E               	movf	??_floorf,w,c
  5554  005B3E  101F               	iorwf	??_floorf+1,w,c
  5555  005B40  1020               	iorwf	??_floorf+2,w,c
  5556  005B42  1021               	iorwf	??_floorf+3,w,c
  5557  005B44  B4D8               	btfsc	status,2,c
  5558  005B46  D008               	goto	l3474
  5559  005B48  0E00               	movlw	0
  5560  005B4A  6E2A               	movwf	floorf@u,c
  5561  005B4C  0E00               	movlw	0
  5562  005B4E  6E2B               	movwf	floorf@u+1,c
  5563  005B50  0E80               	movlw	128
  5564  005B52  6E2C               	movwf	floorf@u+2,c
  5565  005B54  0EBF               	movlw	191
  5566  005B56                     L7:
  5567  005B56  6E2D               	movwf	floorf@u+3,c
  5568  005B58                     l3474:
  5569  005B58  C02A  F01A         	movff	floorf@u,?_floorf
  5570  005B5C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5571  005B60  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5572  005B64  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5573  005B68  0012               	return		;funcret
  5574  005B6A                     __end_of_floorf:
  5575                           	opt callstack 0
  5576                           
  5577 ;; *************** function ___fpclassifyf *****************
  5578 ;; Defined at:
  5579 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  x               4    0[COMRAM] float 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  u               4   10[COMRAM] struct .
  5584 ;;  e               2    8[COMRAM] int 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2    0[COMRAM] int 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5594 ;;      Params:         4       0       0       0       0       0       0       0       0
  5595 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5596 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5597 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5598 ;;Total ram usage:       14 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_efgtoa
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text10
  5608  004FDE                     __ptext10:
  5609                           	opt callstack 0
  5610  004FDE                     ___fpclassifyf:
  5611                           	opt callstack 26
  5612                           
  5613                           ;incstack = 0
  5614  004FDE  C0CA  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5615  004FE2  C0CB  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5616  004FE6  C0CC  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5617  004FEA  C0CD  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5618  004FEE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5619  004FF2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5620  004FF6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5621  004FFA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5622  004FFE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5623  005002  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5624  005006  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5625  00500A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5626  00500E  0E18               	movlw	24
  5627  005010  D005               	goto	u3520
  5628  005012                     u3525:
  5629  005012  90D8               	bcf	status,0,c
  5630  005014  3208               	rrcf	??___fpclassifyf+3,f,c
  5631  005016  3207               	rrcf	??___fpclassifyf+2,f,c
  5632  005018  3206               	rrcf	??___fpclassifyf+1,f,c
  5633  00501A  3205               	rrcf	??___fpclassifyf,f,c
  5634  00501C                     u3520:
  5635  00501C  2EE8               	decfsz	wreg,f,c
  5636  00501E  D7F9               	goto	u3525
  5637  005020  5005               	movf	??___fpclassifyf,w,c
  5638  005022  6E09               	movwf	___fpclassifyf@e,c
  5639  005024  6A0A               	clrf	___fpclassifyf@e+1,c
  5640  005026  5009               	movf	___fpclassifyf@e,w,c
  5641  005028  100A               	iorwf	___fpclassifyf@e+1,w,c
  5642  00502A  A4D8               	btfss	status,2,c
  5643  00502C  D019               	goto	l3426
  5644  00502E  90D8               	bcf	status,0,c
  5645  005030  340B               	rlcf	___fpclassifyf@u,w,c
  5646  005032  6E05               	movwf	??___fpclassifyf& (0+255),c
  5647  005034  340C               	rlcf	___fpclassifyf@u+1,w,c
  5648  005036  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5649  005038  340D               	rlcf	___fpclassifyf@u+2,w,c
  5650  00503A  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5651  00503C  340E               	rlcf	___fpclassifyf@u+3,w,c
  5652  00503E  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5653  005040  5005               	movf	??___fpclassifyf,w,c
  5654  005042  1006               	iorwf	??___fpclassifyf+1,w,c
  5655  005044  1007               	iorwf	??___fpclassifyf+2,w,c
  5656  005046  1008               	iorwf	??___fpclassifyf+3,w,c
  5657  005048  A4D8               	btfss	status,2,c
  5658  00504A  D005               	goto	l3422
  5659  00504C  0E00               	movlw	0
  5660  00504E  6E02               	movwf	?___fpclassifyf+1,c
  5661  005050  0E02               	movlw	2
  5662  005052  6E01               	movwf	?___fpclassifyf,c
  5663  005054  0012               	return	
  5664  005056                     l3422:
  5665  005056  0E00               	movlw	0
  5666  005058  6E02               	movwf	?___fpclassifyf+1,c
  5667  00505A  0E03               	movlw	3
  5668  00505C  6E01               	movwf	?___fpclassifyf,c
  5669  00505E  0012               	return	
  5670  005060                     l3426:
  5671  005060  2809               	incf	___fpclassifyf@e,w,c
  5672  005062  100A               	iorwf	___fpclassifyf@e+1,w,c
  5673  005064  A4D8               	btfss	status,2,c
  5674  005066  D01C               	goto	l3432
  5675  005068  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5676  00506C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5677  005070  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5678  005074  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5679  005078  0E09               	movlw	9
  5680  00507A                     u3565:
  5681  00507A  90D8               	bcf	status,0,c
  5682  00507C  3605               	rlcf	??___fpclassifyf,f,c
  5683  00507E  3606               	rlcf	??___fpclassifyf+1,f,c
  5684  005080  3607               	rlcf	??___fpclassifyf+2,f,c
  5685  005082  3608               	rlcf	??___fpclassifyf+3,f,c
  5686  005084  2EE8               	decfsz	wreg,f,c
  5687  005086  D7F9               	goto	u3565
  5688  005088  5005               	movf	??___fpclassifyf,w,c
  5689  00508A  1006               	iorwf	??___fpclassifyf+1,w,c
  5690  00508C  1007               	iorwf	??___fpclassifyf+2,w,c
  5691  00508E  1008               	iorwf	??___fpclassifyf+3,w,c
  5692  005090  A4D8               	btfss	status,2,c
  5693  005092  D002               	goto	u3570
  5694  005094  0E01               	movlw	1
  5695  005096  D001               	goto	u3580
  5696  005098                     u3570:
  5697  005098  0E00               	movlw	0
  5698  00509A                     u3580:
  5699  00509A  6E01               	movwf	?___fpclassifyf,c
  5700  00509C  6A02               	clrf	?___fpclassifyf+1,c
  5701  00509E  0012               	return	
  5702  0050A0                     l3432:
  5703  0050A0  0E00               	movlw	0
  5704  0050A2  6E02               	movwf	?___fpclassifyf+1,c
  5705  0050A4  0E04               	movlw	4
  5706  0050A6  6E01               	movwf	?___fpclassifyf,c
  5707  0050A8  0012               	return		;funcret
  5708  0050AA                     __end_of___fpclassifyf:
  5709                           	opt callstack 0
  5710                           
  5711 ;; *************** function ___fltol *****************
  5712 ;; Defined at:
  5713 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  f1              4    0[COMRAM] int 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  exp1            1    9[COMRAM] unsigned char 
  5718 ;;  sign1           1    8[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  4    0[COMRAM] long 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5728 ;;      Params:         4       0       0       0       0       0       0       0       0
  5729 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5730 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5731 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5732 ;;Total ram usage:       10 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_efgtoa
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text11
  5742  004F24                     __ptext11:
  5743                           	opt callstack 0
  5744  004F24                     ___fltol:
  5745                           	opt callstack 26
  5746                           
  5747                           ;incstack = 0
  5748  004F24  3403               	rlcf	___fltol@f1+2,w,c
  5749  004F26  3404               	rlcf	___fltol@f1+3,w,c
  5750  004F28  6E0A               	movwf	___fltol@exp1,c
  5751  004F2A  500A               	movf	___fltol@exp1,w,c
  5752  004F2C  A4D8               	btfss	status,2,c
  5753  004F2E  D009               	goto	l3974
  5754  004F30                     u4520:
  5755  004F30  0E00               	movlw	0
  5756  004F32  6E01               	movwf	?___fltol,c
  5757  004F34  0E00               	movlw	0
  5758  004F36  6E02               	movwf	?___fltol+1,c
  5759  004F38  0E00               	movlw	0
  5760  004F3A  6E03               	movwf	?___fltol+2,c
  5761  004F3C  0E00               	movlw	0
  5762  004F3E  6E04               	movwf	?___fltol+3,c
  5763  004F40  0012               	return	
  5764  004F42                     l3974:
  5765  004F42  C001  F005         	movff	___fltol@f1,??___fltol
  5766  004F46  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5767  004F4A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5768  004F4E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5769  004F52  0E20               	movlw	32
  5770  004F54  D005               	goto	u4530
  5771  004F56                     u4535:
  5772  004F56  90D8               	bcf	status,0,c
  5773  004F58  3208               	rrcf	??___fltol+3,f,c
  5774  004F5A  3207               	rrcf	??___fltol+2,f,c
  5775  004F5C  3206               	rrcf	??___fltol+1,f,c
  5776  004F5E  3205               	rrcf	??___fltol,f,c
  5777  004F60                     u4530:
  5778  004F60  2EE8               	decfsz	wreg,f,c
  5779  004F62  D7F9               	goto	u4535
  5780  004F64  5005               	movf	??___fltol,w,c
  5781  004F66  6E09               	movwf	___fltol@sign1,c
  5782  004F68  8E03               	bsf	___fltol@f1+2,7,c
  5783  004F6A  0EFF               	movlw	255
  5784  004F6C  1601               	andwf	___fltol@f1,f,c
  5785  004F6E  0EFF               	movlw	255
  5786  004F70  1602               	andwf	___fltol@f1+1,f,c
  5787  004F72  0EFF               	movlw	255
  5788  004F74  1603               	andwf	___fltol@f1+2,f,c
  5789  004F76  0E00               	movlw	0
  5790  004F78  1604               	andwf	___fltol@f1+3,f,c
  5791  004F7A  0E96               	movlw	150
  5792  004F7C  5E0A               	subwf	___fltol@exp1,f,c
  5793  004F7E  AE0A               	btfss	___fltol@exp1,7,c
  5794  004F80  D00D               	goto	l3994
  5795  004F82  500A               	movf	___fltol@exp1,w,c
  5796  004F84  0A80               	xorlw	128
  5797  004F86  0F97               	addlw	151
  5798  004F88  A0D8               	btfss	status,0,c
  5799  004F8A  D7D2               	goto	u4520
  5800  004F8C                     l3990:
  5801  004F8C  90D8               	bcf	status,0,c
  5802  004F8E  3204               	rrcf	___fltol@f1+3,f,c
  5803  004F90  3203               	rrcf	___fltol@f1+2,f,c
  5804  004F92  3202               	rrcf	___fltol@f1+1,f,c
  5805  004F94  3201               	rrcf	___fltol@f1,f,c
  5806  004F96  3E0A               	incfsz	___fltol@exp1,f,c
  5807  004F98  D7F9               	goto	l3990
  5808  004F9A  D00D               	goto	u4570
  5809  004F9C                     l3994:
  5810  004F9C  0E1F               	movlw	31
  5811  004F9E  640A               	cpfsgt	___fltol@exp1,c
  5812  004FA0  D007               	goto	l4002
  5813  004FA2  D7C6               	goto	u4520
  5814  004FA4                     l4000:
  5815  004FA4  90D8               	bcf	status,0,c
  5816  004FA6  3601               	rlcf	___fltol@f1,f,c
  5817  004FA8  3602               	rlcf	___fltol@f1+1,f,c
  5818  004FAA  3603               	rlcf	___fltol@f1+2,f,c
  5819  004FAC  3604               	rlcf	___fltol@f1+3,f,c
  5820  004FAE  060A               	decf	___fltol@exp1,f,c
  5821  004FB0                     l4002:
  5822  004FB0  500A               	movf	___fltol@exp1,w,c
  5823  004FB2  A4D8               	btfss	status,2,c
  5824  004FB4  D7F7               	goto	l4000
  5825  004FB6                     u4570:
  5826  004FB6  5009               	movf	___fltol@sign1,w,c
  5827  004FB8  B4D8               	btfsc	status,2,c
  5828  004FBA  D008               	goto	l4008
  5829  004FBC  1E04               	comf	___fltol@f1+3,f,c
  5830  004FBE  1E03               	comf	___fltol@f1+2,f,c
  5831  004FC0  1E02               	comf	___fltol@f1+1,f,c
  5832  004FC2  6C01               	negf	___fltol@f1,c
  5833  004FC4  0E00               	movlw	0
  5834  004FC6  2202               	addwfc	___fltol@f1+1,f,c
  5835  004FC8  2203               	addwfc	___fltol@f1+2,f,c
  5836  004FCA  2204               	addwfc	___fltol@f1+3,f,c
  5837  004FCC                     l4008:
  5838  004FCC  C001  F001         	movff	___fltol@f1,?___fltol
  5839  004FD0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5840  004FD4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5841  004FD8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5842  004FDC  0012               	return		;funcret
  5843  004FDE                     __end_of___fltol:
  5844                           	opt callstack 0
  5845                           
  5846 ;; *************** function ___flsub *****************
  5847 ;; Defined at:
  5848 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  b               4   25[COMRAM] long 
  5851 ;;  a               4   29[COMRAM] long 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  4   25[COMRAM] long 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5863 ;;      Params:         8       0       0       0       0       0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5866 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5867 ;;Total ram usage:        8 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    1
  5870 ;; This function calls:
  5871 ;;		___fladd
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;;		_efgtoa
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text12
  5879  00495E                     __ptext12:
  5880                           	opt callstack 0
  5881  00495E                     ___flsub:
  5882                           	opt callstack 25
  5883                           
  5884                           ;incstack = 0
  5885  00495E  0E00               	movlw	0
  5886  004960  1A1E               	xorwf	___flsub@a,f,c
  5887  004962  0E00               	movlw	0
  5888  004964  1A1F               	xorwf	___flsub@a+1,f,c
  5889  004966  0E00               	movlw	0
  5890  004968  1A20               	xorwf	___flsub@a+2,f,c
  5891  00496A  0E80               	movlw	128
  5892  00496C  1A21               	xorwf	___flsub@a+3,f,c
  5893  00496E  C01A  F001         	movff	___flsub@b,___fladd@b
  5894  004972  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5895  004976  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5896  00497A  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5897  00497E  C01E  F005         	movff	___flsub@a,___fladd@a
  5898  004982  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5899  004986  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5900  00498A  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5901  00498E  EC1B  F030         	call	___fladd	;wreg free
  5902  004992  C001  F01A         	movff	?___fladd,?___flsub
  5903  004996  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5904  00499A  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5905  00499E  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5906  0049A2  0012               	return		;funcret
  5907  0049A4                     __end_of___flsub:
  5908                           	opt callstack 0
  5909                           
  5910 ;; *************** function ___fladd *****************
  5911 ;; Defined at:
  5912 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  b               4    0[COMRAM] long 
  5915 ;;  a               4    4[COMRAM] long 
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  grs             1   15[COMRAM] unsigned char 
  5918 ;;  bexp            1   14[COMRAM] unsigned char 
  5919 ;;  aexp            1   13[COMRAM] unsigned char 
  5920 ;;  signs           1   12[COMRAM] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  4    0[COMRAM] unsigned char 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         8       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5933 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5934 ;;Total ram usage:       16 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_main
  5940 ;;		_efgtoa
  5941 ;;		___flsub
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text13
  5946  006036                     __ptext13:
  5947                           	opt callstack 0
  5948  006036                     ___fladd:
  5949                           	opt callstack 25
  5950                           
  5951                           ;incstack = 0
  5952  006036  5004               	movf	___fladd@b+3,w,c
  5953  006038  0B80               	andlw	128
  5954  00603A  6E0D               	movwf	___fladd@signs,c
  5955  00603C  5004               	movf	___fladd@b+3,w,c
  5956  00603E  2404               	addwf	___fladd@b+3,w,c
  5957  006040  6E0F               	movwf	___fladd@bexp,c
  5958  006042  BE03               	btfsc	___fladd@b+2,7,c
  5959  006044  800F               	bsf	___fladd@bexp,0,c
  5960  006046  500F               	movf	___fladd@bexp,w,c
  5961  006048  B4D8               	btfsc	status,2,c
  5962  00604A  D00D               	goto	l3202
  5963  00604C  280F               	incf	___fladd@bexp,w,c
  5964  00604E  A4D8               	btfss	status,2,c
  5965  006050  D008               	goto	l3198
  5966  006052  0E00               	movlw	0
  5967  006054  6E01               	movwf	___fladd@b,c
  5968  006056  0E00               	movlw	0
  5969  006058  6E02               	movwf	___fladd@b+1,c
  5970  00605A  0E00               	movlw	0
  5971  00605C  6E03               	movwf	___fladd@b+2,c
  5972  00605E  0E00               	movlw	0
  5973  006060  6E04               	movwf	___fladd@b+3,c
  5974  006062                     l3198:
  5975  006062  8E03               	bsf	___fladd@b+2,7,c
  5976  006064  D006               	goto	L8
  5977  006066                     l3202:
  5978  006066  0E00               	movlw	0
  5979  006068  6E01               	movwf	___fladd@b,c
  5980  00606A  0E00               	movlw	0
  5981  00606C  6E02               	movwf	___fladd@b+1,c
  5982  00606E  0E00               	movlw	0
  5983  006070  6E03               	movwf	___fladd@b+2,c
  5984  006072                     L8:
  5985  006072  0E00               	movlw	0
  5986  006074  6E04               	movwf	___fladd@b+3,c
  5987  006076  5008               	movf	___fladd@a+3,w,c
  5988  006078  0B80               	andlw	128
  5989  00607A  6E0E               	movwf	___fladd@aexp,c
  5990  00607C  500D               	movf	___fladd@signs,w,c
  5991  00607E  180E               	xorwf	___fladd@aexp,w,c
  5992  006080  A4D8               	btfss	status,2,c
  5993  006082  8C0D               	bsf	___fladd@signs,6,c
  5994  006084  5008               	movf	___fladd@a+3,w,c
  5995  006086  2408               	addwf	___fladd@a+3,w,c
  5996  006088  6E0E               	movwf	___fladd@aexp,c
  5997  00608A  BE07               	btfsc	___fladd@a+2,7,c
  5998  00608C  800E               	bsf	___fladd@aexp,0,c
  5999  00608E  500E               	movf	___fladd@aexp,w,c
  6000  006090  B4D8               	btfsc	status,2,c
  6001  006092  D00D               	goto	l3226
  6002  006094  280E               	incf	___fladd@aexp,w,c
  6003  006096  A4D8               	btfss	status,2,c
  6004  006098  D008               	goto	l3222
  6005  00609A  0E00               	movlw	0
  6006  00609C  6E05               	movwf	___fladd@a,c
  6007  00609E  0E00               	movlw	0
  6008  0060A0  6E06               	movwf	___fladd@a+1,c
  6009  0060A2  0E00               	movlw	0
  6010  0060A4  6E07               	movwf	___fladd@a+2,c
  6011  0060A6  0E00               	movlw	0
  6012  0060A8  6E08               	movwf	___fladd@a+3,c
  6013  0060AA                     l3222:
  6014  0060AA  8E07               	bsf	___fladd@a+2,7,c
  6015  0060AC  D006               	goto	L9
  6016  0060AE                     l3226:
  6017  0060AE  0E00               	movlw	0
  6018  0060B0  6E05               	movwf	___fladd@a,c
  6019  0060B2  0E00               	movlw	0
  6020  0060B4  6E06               	movwf	___fladd@a+1,c
  6021  0060B6  0E00               	movlw	0
  6022  0060B8  6E07               	movwf	___fladd@a+2,c
  6023  0060BA                     L9:
  6024  0060BA  0E00               	movlw	0
  6025  0060BC  6E08               	movwf	___fladd@a+3,c
  6026  0060BE  500F               	movf	___fladd@bexp,w,c
  6027  0060C0  5C0E               	subwf	___fladd@aexp,w,c
  6028  0060C2  B0D8               	btfsc	status,0,c
  6029  0060C4  D022               	goto	l3264
  6030  0060C6  AC0D               	btfss	___fladd@signs,6,c
  6031  0060C8  D002               	goto	l3234
  6032  0060CA  0E80               	movlw	128
  6033  0060CC  1A0D               	xorwf	___fladd@signs,f,c
  6034  0060CE                     l3234:
  6035  0060CE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6036  0060D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6037  0060D6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6038  0060DA  C001  F010         	movff	___fladd@b,___fladd@grs
  6039  0060DE  C005  F001         	movff	___fladd@a,___fladd@b
  6040  0060E2  C010  F005         	movff	___fladd@grs,___fladd@a
  6041  0060E6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6042  0060EA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6043  0060EE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6044  0060F2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6045  0060F6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6046  0060FA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6047  0060FE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6048  006102  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6049  006106  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6050  00610A                     l3264:
  6051  00610A  0E00               	movlw	0
  6052  00610C  6E10               	movwf	___fladd@grs,c
  6053  00610E  500F               	movf	___fladd@bexp,w,c
  6054  006110  C00E  F009         	movff	___fladd@aexp,??___fladd
  6055  006114  6A0A               	clrf	(??___fladd+1)& (0+255),c
  6056  006116  5E09               	subwf	??___fladd,f,c
  6057  006118  0E00               	movlw	0
  6058  00611A  5A0A               	subwfb	??___fladd+1,f,c
  6059  00611C  BE0A               	btfsc	??___fladd+1,7,c
  6060  00611E  D02C               	goto	l872
  6061  006120  500A               	movf	??___fladd+1,w,c
  6062  006122  E104               	bnz	u3170
  6063  006124  0E1A               	movlw	26
  6064  006126  5C09               	subwf	??___fladd,w,c
  6065  006128  A0D8               	btfss	status,0,c
  6066  00612A  D026               	goto	l872
  6067  00612C                     u3170:
  6068  00612C  5001               	movf	___fladd@b,w,c
  6069  00612E  1002               	iorwf	___fladd@b+1,w,c
  6070  006130  1003               	iorwf	___fladd@b+2,w,c
  6071  006132  1004               	iorwf	___fladd@b+3,w,c
  6072  006134  B4D8               	btfsc	status,2,c
  6073  006136  D002               	goto	u3180
  6074  006138  0E01               	movlw	1
  6075  00613A  D001               	goto	u3190
  6076  00613C                     u3180:
  6077  00613C  0E00               	movlw	0
  6078  00613E                     u3190:
  6079  00613E  6E10               	movwf	___fladd@grs,c
  6080  006140  0E00               	movlw	0
  6081  006142  6E01               	movwf	___fladd@b,c
  6082  006144  0E00               	movlw	0
  6083  006146  6E02               	movwf	___fladd@b+1,c
  6084  006148  0E00               	movlw	0
  6085  00614A  6E03               	movwf	___fladd@b+2,c
  6086  00614C  0E00               	movlw	0
  6087  00614E  6E04               	movwf	___fladd@b+3,c
  6088  006150  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6089  006154  D015               	goto	u3220
  6090  006156                     l873:
  6091  006156  A010               	btfss	___fladd@grs,0,c
  6092  006158  D005               	goto	l3276
  6093  00615A  90D8               	bcf	status,0,c
  6094  00615C  3010               	rrcf	___fladd@grs,w,c
  6095  00615E  0901               	iorlw	1
  6096  006160  6E10               	movwf	___fladd@grs,c
  6097  006162  D002               	goto	l3278
  6098  006164                     l3276:
  6099  006164  90D8               	bcf	status,0,c
  6100  006166  3210               	rrcf	___fladd@grs,f,c
  6101  006168                     l3278:
  6102  006168  B001               	btfsc	___fladd@b,0,c
  6103  00616A  8E10               	bsf	___fladd@grs,7,c
  6104  00616C  3404               	rlcf	___fladd@b+3,w,c
  6105  00616E  3204               	rrcf	___fladd@b+3,f,c
  6106  006170  3203               	rrcf	___fladd@b+2,f,c
  6107  006172  3202               	rrcf	___fladd@b+1,f,c
  6108  006174  3201               	rrcf	___fladd@b,f,c
  6109  006176  2A0F               	incf	___fladd@bexp,f,c
  6110  006178                     l872:
  6111  006178  500E               	movf	___fladd@aexp,w,c
  6112  00617A  5C0F               	subwf	___fladd@bexp,w,c
  6113  00617C  A0D8               	btfss	status,0,c
  6114  00617E  D7EB               	goto	l873
  6115  006180                     u3220:
  6116  006180  BC0D               	btfsc	___fladd@signs,6,c
  6117  006182  D028               	goto	l3310
  6118  006184  500F               	movf	___fladd@bexp,w,c
  6119  006186  A4D8               	btfss	status,2,c
  6120  006188  D009               	goto	l3292
  6121  00618A  0E00               	movlw	0
  6122  00618C  6E01               	movwf	?___fladd,c
  6123  00618E  0E00               	movlw	0
  6124  006190  6E02               	movwf	?___fladd+1,c
  6125  006192  0E00               	movlw	0
  6126  006194  6E03               	movwf	?___fladd+2,c
  6127  006196  0E00               	movlw	0
  6128  006198  6E04               	movwf	?___fladd+3,c
  6129  00619A  0012               	return	
  6130  00619C                     l3292:
  6131  00619C  5005               	movf	___fladd@a,w,c
  6132  00619E  2601               	addwf	___fladd@b,f,c
  6133  0061A0  5006               	movf	___fladd@a+1,w,c
  6134  0061A2  2202               	addwfc	___fladd@b+1,f,c
  6135  0061A4  5007               	movf	___fladd@a+2,w,c
  6136  0061A6  2203               	addwfc	___fladd@b+2,f,c
  6137  0061A8  5008               	movf	___fladd@a+3,w,c
  6138  0061AA  2204               	addwfc	___fladd@b+3,f,c
  6139  0061AC  A004               	btfss	___fladd@b+3,0,c
  6140  0061AE  D071               	goto	u3350
  6141  0061B0  A010               	btfss	___fladd@grs,0,c
  6142  0061B2  D005               	goto	l3300
  6143  0061B4  90D8               	bcf	status,0,c
  6144  0061B6  3010               	rrcf	___fladd@grs,w,c
  6145  0061B8  0901               	iorlw	1
  6146  0061BA  6E10               	movwf	___fladd@grs,c
  6147  0061BC  D002               	goto	l3302
  6148  0061BE                     l3300:
  6149  0061BE  90D8               	bcf	status,0,c
  6150  0061C0  3210               	rrcf	___fladd@grs,f,c
  6151  0061C2                     l3302:
  6152  0061C2  B001               	btfsc	___fladd@b,0,c
  6153  0061C4  8E10               	bsf	___fladd@grs,7,c
  6154  0061C6  3404               	rlcf	___fladd@b+3,w,c
  6155  0061C8  3204               	rrcf	___fladd@b+3,f,c
  6156  0061CA  3203               	rrcf	___fladd@b+2,f,c
  6157  0061CC  3202               	rrcf	___fladd@b+1,f,c
  6158  0061CE  3201               	rrcf	___fladd@b,f,c
  6159  0061D0  2A0F               	incf	___fladd@bexp,f,c
  6160  0061D2  D05F               	goto	u3350
  6161  0061D4                     l3310:
  6162  0061D4  5005               	movf	___fladd@a,w,c
  6163  0061D6  5C01               	subwf	___fladd@b,w,c
  6164  0061D8  5006               	movf	___fladd@a+1,w,c
  6165  0061DA  5802               	subwfb	___fladd@b+1,w,c
  6166  0061DC  5007               	movf	___fladd@a+2,w,c
  6167  0061DE  5803               	subwfb	___fladd@b+2,w,c
  6168  0061E0  5004               	movf	___fladd@b+3,w,c
  6169  0061E2  0A80               	xorlw	128
  6170  0061E4  6E09               	movwf	??___fladd& (0+255),c
  6171  0061E6  5008               	movf	___fladd@a+3,w,c
  6172  0061E8  0A80               	xorlw	128
  6173  0061EA  5809               	subwfb	??___fladd& (0+255),w,c
  6174  0061EC  B0D8               	btfsc	status,0,c
  6175  0061EE  D025               	goto	l3320
  6176  0061F0  5001               	movf	___fladd@b,w,c
  6177  0061F2  5C05               	subwf	___fladd@a,w,c
  6178  0061F4  6E09               	movwf	??___fladd& (0+255),c
  6179  0061F6  5002               	movf	___fladd@b+1,w,c
  6180  0061F8  5806               	subwfb	___fladd@a+1,w,c
  6181  0061FA  6E0A               	movwf	(??___fladd+1)& (0+255),c
  6182  0061FC  5003               	movf	___fladd@b+2,w,c
  6183  0061FE  5807               	subwfb	___fladd@a+2,w,c
  6184  006200  6E0B               	movwf	(??___fladd+2)& (0+255),c
  6185  006202  5004               	movf	___fladd@b+3,w,c
  6186  006204  5808               	subwfb	___fladd@a+3,w,c
  6187  006206  6E0C               	movwf	(??___fladd+3)& (0+255),c
  6188  006208  0EFF               	movlw	255
  6189  00620A  2409               	addwf	??___fladd,w,c
  6190  00620C  6E01               	movwf	___fladd@b,c
  6191  00620E  0EFF               	movlw	255
  6192  006210  200A               	addwfc	??___fladd+1,w,c
  6193  006212  6E02               	movwf	___fladd@b+1,c
  6194  006214  0EFF               	movlw	255
  6195  006216  200B               	addwfc	??___fladd+2,w,c
  6196  006218  6E03               	movwf	___fladd@b+2,c
  6197  00621A  0EFF               	movlw	255
  6198  00621C  200C               	addwfc	??___fladd+3,w,c
  6199  00621E  6E04               	movwf	___fladd@b+3,c
  6200  006220  0E80               	movlw	128
  6201  006222  1A0D               	xorwf	___fladd@signs,f,c
  6202  006224  6C10               	negf	___fladd@grs,c
  6203  006226  5010               	movf	___fladd@grs,w,c
  6204  006228  A4D8               	btfss	status,2,c
  6205  00622A  D00F               	goto	l888
  6206  00622C  0E01               	movlw	1
  6207  00622E  2601               	addwf	___fladd@b,f,c
  6208  006230  0E00               	movlw	0
  6209  006232  2202               	addwfc	___fladd@b+1,f,c
  6210  006234  2203               	addwfc	___fladd@b+2,f,c
  6211  006236  2204               	addwfc	___fladd@b+3,f,c
  6212  006238  D008               	goto	l888
  6213  00623A                     l3320:
  6214  00623A  5005               	movf	___fladd@a,w,c
  6215  00623C  5E01               	subwf	___fladd@b,f,c
  6216  00623E  5006               	movf	___fladd@a+1,w,c
  6217  006240  5A02               	subwfb	___fladd@b+1,f,c
  6218  006242  5007               	movf	___fladd@a+2,w,c
  6219  006244  5A03               	subwfb	___fladd@b+2,f,c
  6220  006246  5008               	movf	___fladd@a+3,w,c
  6221  006248  5A04               	subwfb	___fladd@b+3,f,c
  6222  00624A                     l888:
  6223  00624A  5001               	movf	___fladd@b,w,c
  6224  00624C  1002               	iorwf	___fladd@b+1,w,c
  6225  00624E  1003               	iorwf	___fladd@b+2,w,c
  6226  006250  1004               	iorwf	___fladd@b+3,w,c
  6227  006252  A4D8               	btfss	status,2,c
  6228  006254  D01C               	goto	l3344
  6229  006256  5010               	movf	___fladd@grs,w,c
  6230  006258  A4D8               	btfss	status,2,c
  6231  00625A  D019               	goto	l3344
  6232  00625C  0E00               	movlw	0
  6233  00625E  6E01               	movwf	?___fladd,c
  6234  006260  0E00               	movlw	0
  6235  006262  6E02               	movwf	?___fladd+1,c
  6236  006264  0E00               	movlw	0
  6237  006266  6E03               	movwf	?___fladd+2,c
  6238  006268  0E00               	movlw	0
  6239  00626A  6E04               	movwf	?___fladd+3,c
  6240  00626C  0012               	return	
  6241  00626E                     l3328:
  6242  00626E  90D8               	bcf	status,0,c
  6243  006270  3601               	rlcf	___fladd@b,f,c
  6244  006272  3602               	rlcf	___fladd@b+1,f,c
  6245  006274  3603               	rlcf	___fladd@b+2,f,c
  6246  006276  3604               	rlcf	___fladd@b+3,f,c
  6247  006278  BE10               	btfsc	___fladd@grs,7,c
  6248  00627A  8001               	bsf	___fladd@b,0,c
  6249  00627C  A010               	btfss	___fladd@grs,0,c
  6250  00627E  D002               	goto	l3338
  6251  006280  80D8               	bsf	status,0,c
  6252  006282  D001               	goto	L10
  6253  006284                     l3338:
  6254  006284  90D8               	bcf	status,0,c
  6255  006286                     L10:
  6256  006286  3610               	rlcf	___fladd@grs,f,c
  6257  006288  500F               	movf	___fladd@bexp,w,c
  6258  00628A  A4D8               	btfss	status,2,c
  6259  00628C  060F               	decf	___fladd@bexp,f,c
  6260  00628E                     l3344:
  6261  00628E  AE03               	btfss	___fladd@b+2,7,c
  6262  006290  D7EE               	goto	l3328
  6263  006292                     u3350:
  6264  006292  0E00               	movlw	0
  6265  006294  6E0E               	movwf	___fladd@aexp,c
  6266  006296  AE10               	btfss	___fladd@grs,7,c
  6267  006298  D00B               	goto	l897
  6268  00629A  C010  F009         	movff	___fladd@grs,??___fladd
  6269  00629E  0E7F               	movlw	127
  6270  0062A0  1609               	andwf	??___fladd,f,c
  6271  0062A2  B4D8               	btfsc	status,2,c
  6272  0062A4  D003               	goto	l898
  6273  0062A6                     u3370:
  6274  0062A6  0E01               	movlw	1
  6275  0062A8  6E0E               	movwf	___fladd@aexp,c
  6276  0062AA  D002               	goto	l897
  6277  0062AC                     l898:
  6278  0062AC  B001               	btfsc	___fladd@b,0,c
  6279  0062AE  D7FB               	goto	u3370
  6280  0062B0                     l897:
  6281  0062B0  500E               	movf	___fladd@aexp,w,c
  6282  0062B2  B4D8               	btfsc	status,2,c
  6283  0062B4  D020               	goto	l3364
  6284  0062B6  0E01               	movlw	1
  6285  0062B8  2601               	addwf	___fladd@b,f,c
  6286  0062BA  0E00               	movlw	0
  6287  0062BC  2202               	addwfc	___fladd@b+1,f,c
  6288  0062BE  2203               	addwfc	___fladd@b+2,f,c
  6289  0062C0  2204               	addwfc	___fladd@b+3,f,c
  6290  0062C2  A004               	btfss	___fladd@b+3,0,c
  6291  0062C4  D018               	goto	l3364
  6292  0062C6  C001  F009         	movff	___fladd@b,??___fladd
  6293  0062CA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6294  0062CE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6295  0062D2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6296  0062D6  340C               	rlcf	??___fladd+3,w,c
  6297  0062D8  320C               	rrcf	??___fladd+3,f,c
  6298  0062DA  320B               	rrcf	??___fladd+2,f,c
  6299  0062DC  320A               	rrcf	??___fladd+1,f,c
  6300  0062DE  3209               	rrcf	??___fladd,f,c
  6301  0062E0  C009  F001         	movff	??___fladd,___fladd@b
  6302  0062E4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6303  0062E8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6304  0062EC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6305  0062F0  280F               	incf	___fladd@bexp,w,c
  6306  0062F2  A4D8               	btfss	status,2,c
  6307  0062F4  2A0F               	incf	___fladd@bexp,f,c
  6308  0062F6                     l3364:
  6309  0062F6  280F               	incf	___fladd@bexp,w,c
  6310  0062F8  B4D8               	btfsc	status,2,c
  6311  0062FA  D003               	goto	u3430
  6312  0062FC  500F               	movf	___fladd@bexp,w,c
  6313  0062FE  A4D8               	btfss	status,2,c
  6314  006300  D00D               	goto	l3372
  6315  006302                     u3430:
  6316  006302  0E00               	movlw	0
  6317  006304  6E01               	movwf	___fladd@b,c
  6318  006306  0E00               	movlw	0
  6319  006308  6E02               	movwf	___fladd@b+1,c
  6320  00630A  0E00               	movlw	0
  6321  00630C  6E03               	movwf	___fladd@b+2,c
  6322  00630E  0E00               	movlw	0
  6323  006310  6E04               	movwf	___fladd@b+3,c
  6324  006312  500F               	movf	___fladd@bexp,w,c
  6325  006314  A4D8               	btfss	status,2,c
  6326  006316  D002               	goto	l3372
  6327  006318  0E00               	movlw	0
  6328  00631A  6E0D               	movwf	___fladd@signs,c
  6329  00631C                     l3372:
  6330  00631C  A00F               	btfss	___fladd@bexp,0,c
  6331  00631E  D002               	goto	l3376
  6332  006320  8E03               	bsf	___fladd@b+2,7,c
  6333  006322  D001               	goto	l3378
  6334  006324                     l3376:
  6335  006324  9E03               	bcf	___fladd@b+2,7,c
  6336  006326                     l3378:
  6337  006326  90D8               	bcf	status,0,c
  6338  006328  300F               	rrcf	___fladd@bexp,w,c
  6339  00632A  6E04               	movwf	___fladd@b+3,c
  6340  00632C  BE0D               	btfsc	___fladd@signs,7,c
  6341  00632E  8E04               	bsf	___fladd@b+3,7,c
  6342  006330  C001  F001         	movff	___fladd@b,?___fladd
  6343  006334  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6344  006338  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6345  00633C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6346  006340  0012               	return		;funcret
  6347  006342                     __end_of___fladd:
  6348                           	opt callstack 0
  6349                           
  6350 ;; *************** function ___flneg *****************
  6351 ;; Defined at:
  6352 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  f1              4    0[COMRAM] unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  4    0[COMRAM] unsigned char 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         4       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        4 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_efgtoa
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text14
  6380  004828                     __ptext14:
  6381                           	opt callstack 0
  6382  004828                     ___flneg:
  6383                           	opt callstack 26
  6384                           
  6385                           ;incstack = 0
  6386  004828  5001               	movf	___flneg@f1,w,c
  6387  00482A  1002               	iorwf	___flneg@f1+1,w,c
  6388  00482C  1003               	iorwf	___flneg@f1+2,w,c
  6389  00482E  1004               	iorwf	___flneg@f1+3,w,c
  6390  004830  B4D8               	btfsc	status,2,c
  6391  004832  D008               	goto	l3964
  6392  004834  0E00               	movlw	0
  6393  004836  1A01               	xorwf	___flneg@f1,f,c
  6394  004838  0E00               	movlw	0
  6395  00483A  1A02               	xorwf	___flneg@f1+1,f,c
  6396  00483C  0E00               	movlw	0
  6397  00483E  1A03               	xorwf	___flneg@f1+2,f,c
  6398  004840  0E80               	movlw	128
  6399  004842  1A04               	xorwf	___flneg@f1+3,f,c
  6400  004844                     l3964:
  6401  004844  C001  F001         	movff	___flneg@f1,?___flneg
  6402  004848  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6403  00484C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6404  004850  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6405  004854  0012               	return		;funcret
  6406  004856                     __end_of___flneg:
  6407                           	opt callstack 0
  6408                           
  6409 ;; *************** function ___flmul *****************
  6410 ;; Defined at:
  6411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  b               4    0[COMRAM] unsigned char 
  6414 ;;  a               4    4[COMRAM] unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  prod            4   19[COMRAM] struct .
  6417 ;;  grs             4   13[COMRAM] unsigned long 
  6418 ;;  temp            2   23[COMRAM] struct .
  6419 ;;  bexp            1   18[COMRAM] unsigned char 
  6420 ;;  aexp            1   17[COMRAM] unsigned char 
  6421 ;;  sign            1   12[COMRAM] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  4    0[COMRAM] unsigned char 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, prodl, prodh
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6431 ;;      Params:         8       0       0       0       0       0       0       0       0
  6432 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6433 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6434 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6435 ;;Total ram usage:       25 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;;		_efgtoa
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text15
  6446  006342                     __ptext15:
  6447                           	opt callstack 0
  6448  006342                     ___flmul:
  6449                           	opt callstack 26
  6450                           
  6451                           ;incstack = 0
  6452  006342  5004               	movf	___flmul@b+3,w,c
  6453  006344  0B80               	andlw	128
  6454  006346  6E0D               	movwf	___flmul@sign,c
  6455  006348  5004               	movf	___flmul@b+3,w,c
  6456  00634A  2404               	addwf	___flmul@b+3,w,c
  6457  00634C  6E13               	movwf	___flmul@bexp,c
  6458  00634E  BE03               	btfsc	___flmul@b+2,7,c
  6459  006350  8013               	bsf	___flmul@bexp,0,c
  6460  006352  5013               	movf	___flmul@bexp,w,c
  6461  006354  B4D8               	btfsc	status,2,c
  6462  006356  D00D               	goto	l3720
  6463  006358  2813               	incf	___flmul@bexp,w,c
  6464  00635A  A4D8               	btfss	status,2,c
  6465  00635C  D008               	goto	l3718
  6466  00635E  0E00               	movlw	0
  6467  006360  6E01               	movwf	___flmul@b,c
  6468  006362  0E00               	movlw	0
  6469  006364  6E02               	movwf	___flmul@b+1,c
  6470  006366  0E00               	movlw	0
  6471  006368  6E03               	movwf	___flmul@b+2,c
  6472  00636A  0E00               	movlw	0
  6473  00636C  6E04               	movwf	___flmul@b+3,c
  6474  00636E                     l3718:
  6475  00636E  8E03               	bsf	___flmul@b+2,7,c
  6476  006370  D008               	goto	l3722
  6477  006372                     l3720:
  6478  006372  0E00               	movlw	0
  6479  006374  6E01               	movwf	___flmul@b,c
  6480  006376  0E00               	movlw	0
  6481  006378  6E02               	movwf	___flmul@b+1,c
  6482  00637A  0E00               	movlw	0
  6483  00637C  6E03               	movwf	___flmul@b+2,c
  6484  00637E  0E00               	movlw	0
  6485  006380  6E04               	movwf	___flmul@b+3,c
  6486  006382                     l3722:
  6487  006382  5008               	movf	___flmul@a+3,w,c
  6488  006384  0B80               	andlw	128
  6489  006386  1A0D               	xorwf	___flmul@sign,f,c
  6490  006388  5008               	movf	___flmul@a+3,w,c
  6491  00638A  2408               	addwf	___flmul@a+3,w,c
  6492  00638C  6E12               	movwf	___flmul@aexp,c
  6493  00638E  BE07               	btfsc	___flmul@a+2,7,c
  6494  006390  8012               	bsf	___flmul@aexp,0,c
  6495  006392  5012               	movf	___flmul@aexp,w,c
  6496  006394  B4D8               	btfsc	status,2,c
  6497  006396  D00D               	goto	l3738
  6498  006398  2812               	incf	___flmul@aexp,w,c
  6499  00639A  A4D8               	btfss	status,2,c
  6500  00639C  D008               	goto	l3736
  6501  00639E  0E00               	movlw	0
  6502  0063A0  6E05               	movwf	___flmul@a,c
  6503  0063A2  0E00               	movlw	0
  6504  0063A4  6E06               	movwf	___flmul@a+1,c
  6505  0063A6  0E00               	movlw	0
  6506  0063A8  6E07               	movwf	___flmul@a+2,c
  6507  0063AA  0E00               	movlw	0
  6508  0063AC  6E08               	movwf	___flmul@a+3,c
  6509  0063AE                     l3736:
  6510  0063AE  8E07               	bsf	___flmul@a+2,7,c
  6511  0063B0  D008               	goto	l957
  6512  0063B2                     l3738:
  6513  0063B2  0E00               	movlw	0
  6514  0063B4  6E05               	movwf	___flmul@a,c
  6515  0063B6  0E00               	movlw	0
  6516  0063B8  6E06               	movwf	___flmul@a+1,c
  6517  0063BA  0E00               	movlw	0
  6518  0063BC  6E07               	movwf	___flmul@a+2,c
  6519  0063BE  0E00               	movlw	0
  6520  0063C0  6E08               	movwf	___flmul@a+3,c
  6521  0063C2                     l957:
  6522  0063C2  5012               	movf	___flmul@aexp,w,c
  6523  0063C4  B4D8               	btfsc	status,2,c
  6524  0063C6  D003               	goto	u4190
  6525  0063C8  5013               	movf	___flmul@bexp,w,c
  6526  0063CA  A4D8               	btfss	status,2,c
  6527  0063CC  D009               	goto	l3746
  6528  0063CE                     u4190:
  6529  0063CE  0E00               	movlw	0
  6530  0063D0  6E01               	movwf	?___flmul,c
  6531  0063D2  0E00               	movlw	0
  6532  0063D4  6E02               	movwf	?___flmul+1,c
  6533  0063D6  0E00               	movlw	0
  6534  0063D8  6E03               	movwf	?___flmul+2,c
  6535  0063DA  0E00               	movlw	0
  6536  0063DC  6E04               	movwf	?___flmul+3,c
  6537  0063DE  0012               	return	
  6538  0063E0                     l3746:
  6539  0063E0  5007               	movf	___flmul@a+2,w,c
  6540  0063E2  0201               	mulwf	___flmul@b,c
  6541  0063E4  CFF3 F018          	movff	prodl,___flmul@temp
  6542  0063E8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6543  0063EC  5018               	movf	___flmul@temp,w,c
  6544  0063EE  6E0E               	movwf	___flmul@grs,c
  6545  0063F0  6A0F               	clrf	___flmul@grs+1,c
  6546  0063F2  6A10               	clrf	___flmul@grs+2,c
  6547  0063F4  6A11               	clrf	___flmul@grs+3,c
  6548  0063F6  5019               	movf	___flmul@temp+1,w,c
  6549  0063F8  6E14               	movwf	___flmul@prod,c
  6550  0063FA  6A15               	clrf	___flmul@prod+1,c
  6551  0063FC  6A16               	clrf	___flmul@prod+2,c
  6552  0063FE  6A17               	clrf	___flmul@prod+3,c
  6553  006400  5006               	movf	___flmul@a+1,w,c
  6554  006402  0202               	mulwf	___flmul@b+1,c
  6555  006404  CFF3 F018          	movff	prodl,___flmul@temp
  6556  006408  CFF4 F019          	movff	prodh,___flmul@temp+1
  6557  00640C  5018               	movf	___flmul@temp,w,c
  6558  00640E  260E               	addwf	___flmul@grs,f,c
  6559  006410  0E00               	movlw	0
  6560  006412  220F               	addwfc	___flmul@grs+1,f,c
  6561  006414  2210               	addwfc	___flmul@grs+2,f,c
  6562  006416  2211               	addwfc	___flmul@grs+3,f,c
  6563  006418  5019               	movf	___flmul@temp+1,w,c
  6564  00641A  2614               	addwf	___flmul@prod,f,c
  6565  00641C  0E00               	movlw	0
  6566  00641E  2215               	addwfc	___flmul@prod+1,f,c
  6567  006420  2216               	addwfc	___flmul@prod+2,f,c
  6568  006422  2217               	addwfc	___flmul@prod+3,f,c
  6569  006424  5005               	movf	___flmul@a,w,c
  6570  006426  0203               	mulwf	___flmul@b+2,c
  6571  006428  CFF3 F018          	movff	prodl,___flmul@temp
  6572  00642C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6573  006430  5018               	movf	___flmul@temp,w,c
  6574  006432  260E               	addwf	___flmul@grs,f,c
  6575  006434  0E00               	movlw	0
  6576  006436  220F               	addwfc	___flmul@grs+1,f,c
  6577  006438  2210               	addwfc	___flmul@grs+2,f,c
  6578  00643A  2211               	addwfc	___flmul@grs+3,f,c
  6579  00643C  5019               	movf	___flmul@temp+1,w,c
  6580  00643E  2614               	addwf	___flmul@prod,f,c
  6581  006440  0E00               	movlw	0
  6582  006442  2215               	addwfc	___flmul@prod+1,f,c
  6583  006444  2216               	addwfc	___flmul@prod+2,f,c
  6584  006446  2217               	addwfc	___flmul@prod+3,f,c
  6585  006448  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6586  00644C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6587  006450  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6588  006454  6A0E               	clrf	___flmul@grs,c
  6589  006456  5005               	movf	___flmul@a,w,c
  6590  006458  0202               	mulwf	___flmul@b+1,c
  6591  00645A  CFF3 F018          	movff	prodl,___flmul@temp
  6592  00645E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6593  006462  5018               	movf	___flmul@temp,w,c
  6594  006464  260E               	addwf	___flmul@grs,f,c
  6595  006466  5019               	movf	___flmul@temp+1,w,c
  6596  006468  220F               	addwfc	___flmul@grs+1,f,c
  6597  00646A  0E00               	movlw	0
  6598  00646C  2210               	addwfc	___flmul@grs+2,f,c
  6599  00646E  0E00               	movlw	0
  6600  006470  2211               	addwfc	___flmul@grs+3,f,c
  6601  006472  5006               	movf	___flmul@a+1,w,c
  6602  006474  0201               	mulwf	___flmul@b,c
  6603  006476  CFF3 F018          	movff	prodl,___flmul@temp
  6604  00647A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6605  00647E  5018               	movf	___flmul@temp,w,c
  6606  006480  260E               	addwf	___flmul@grs,f,c
  6607  006482  5019               	movf	___flmul@temp+1,w,c
  6608  006484  220F               	addwfc	___flmul@grs+1,f,c
  6609  006486  0E00               	movlw	0
  6610  006488  2210               	addwfc	___flmul@grs+2,f,c
  6611  00648A  0E00               	movlw	0
  6612  00648C  2211               	addwfc	___flmul@grs+3,f,c
  6613  00648E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6614  006492  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6615  006496  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6616  00649A  6A0E               	clrf	___flmul@grs,c
  6617  00649C  5005               	movf	___flmul@a,w,c
  6618  00649E  0201               	mulwf	___flmul@b,c
  6619  0064A0  CFF3 F018          	movff	prodl,___flmul@temp
  6620  0064A4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6621  0064A8  5018               	movf	___flmul@temp,w,c
  6622  0064AA  260E               	addwf	___flmul@grs,f,c
  6623  0064AC  5019               	movf	___flmul@temp+1,w,c
  6624  0064AE  220F               	addwfc	___flmul@grs+1,f,c
  6625  0064B0  0E00               	movlw	0
  6626  0064B2  2210               	addwfc	___flmul@grs+2,f,c
  6627  0064B4  0E00               	movlw	0
  6628  0064B6  2211               	addwfc	___flmul@grs+3,f,c
  6629  0064B8  5007               	movf	___flmul@a+2,w,c
  6630  0064BA  0202               	mulwf	___flmul@b+1,c
  6631  0064BC  CFF3 F018          	movff	prodl,___flmul@temp
  6632  0064C0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6633  0064C4  5018               	movf	___flmul@temp,w,c
  6634  0064C6  2614               	addwf	___flmul@prod,f,c
  6635  0064C8  5019               	movf	___flmul@temp+1,w,c
  6636  0064CA  2215               	addwfc	___flmul@prod+1,f,c
  6637  0064CC  0E00               	movlw	0
  6638  0064CE  2216               	addwfc	___flmul@prod+2,f,c
  6639  0064D0  0E00               	movlw	0
  6640  0064D2  2217               	addwfc	___flmul@prod+3,f,c
  6641  0064D4  5006               	movf	___flmul@a+1,w,c
  6642  0064D6  0203               	mulwf	___flmul@b+2,c
  6643  0064D8  CFF3 F018          	movff	prodl,___flmul@temp
  6644  0064DC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6645  0064E0  5018               	movf	___flmul@temp,w,c
  6646  0064E2  2614               	addwf	___flmul@prod,f,c
  6647  0064E4  5019               	movf	___flmul@temp+1,w,c
  6648  0064E6  2215               	addwfc	___flmul@prod+1,f,c
  6649  0064E8  0E00               	movlw	0
  6650  0064EA  2216               	addwfc	___flmul@prod+2,f,c
  6651  0064EC  0E00               	movlw	0
  6652  0064EE  2217               	addwfc	___flmul@prod+3,f,c
  6653  0064F0  5007               	movf	___flmul@a+2,w,c
  6654  0064F2  0203               	mulwf	___flmul@b+2,c
  6655  0064F4  CFF3 F018          	movff	prodl,___flmul@temp
  6656  0064F8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6657  0064FC  5018               	movf	___flmul@temp,w,c
  6658  0064FE  6E09               	movwf	??___flmul& (0+255),c
  6659  006500  5019               	movf	___flmul@temp+1,w,c
  6660  006502  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6661  006504  6A0B               	clrf	(??___flmul+2)& (0+255),c
  6662  006506  6A0C               	clrf	(??___flmul+3)& (0+255),c
  6663  006508  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6664  00650C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6665  006510  C009  F00A         	movff	??___flmul,??___flmul+1
  6666  006514  6A09               	clrf	??___flmul,c
  6667  006516  5009               	movf	??___flmul,w,c
  6668  006518  2614               	addwf	___flmul@prod,f,c
  6669  00651A  500A               	movf	??___flmul+1,w,c
  6670  00651C  2215               	addwfc	___flmul@prod+1,f,c
  6671  00651E  500B               	movf	??___flmul+2,w,c
  6672  006520  2216               	addwfc	___flmul@prod+2,f,c
  6673  006522  500C               	movf	??___flmul+3,w,c
  6674  006524  2217               	addwfc	___flmul@prod+3,f,c
  6675  006526  C00E  F009         	movff	___flmul@grs,??___flmul
  6676  00652A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6677  00652E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6678  006532  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6679  006536  0E19               	movlw	25
  6680  006538  D005               	goto	u4200
  6681  00653A                     u4205:
  6682  00653A  90D8               	bcf	status,0,c
  6683  00653C  320C               	rrcf	??___flmul+3,f,c
  6684  00653E  320B               	rrcf	??___flmul+2,f,c
  6685  006540  320A               	rrcf	??___flmul+1,f,c
  6686  006542  3209               	rrcf	??___flmul,f,c
  6687  006544                     u4200:
  6688  006544  2EE8               	decfsz	wreg,f,c
  6689  006546  D7F9               	goto	u4205
  6690  006548  5009               	movf	??___flmul,w,c
  6691  00654A  2614               	addwf	___flmul@prod,f,c
  6692  00654C  500A               	movf	??___flmul+1,w,c
  6693  00654E  2215               	addwfc	___flmul@prod+1,f,c
  6694  006550  500B               	movf	??___flmul+2,w,c
  6695  006552  2216               	addwfc	___flmul@prod+2,f,c
  6696  006554  500C               	movf	??___flmul+3,w,c
  6697  006556  2217               	addwfc	___flmul@prod+3,f,c
  6698  006558  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6699  00655C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6700  006560  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6701  006564  6A0E               	clrf	___flmul@grs,c
  6702  006566  5012               	movf	___flmul@aexp,w,c
  6703  006568  C013  F009         	movff	___flmul@bexp,??___flmul
  6704  00656C  6A0A               	clrf	(??___flmul+1)& (0+255),c
  6705  00656E  2609               	addwf	??___flmul,f,c
  6706  006570  0E00               	movlw	0
  6707  006572  220A               	addwfc	??___flmul+1,f,c
  6708  006574  0E82               	movlw	130
  6709  006576  2409               	addwf	??___flmul,w,c
  6710  006578  6E18               	movwf	___flmul@temp,c
  6711  00657A  0EFF               	movlw	255
  6712  00657C  200A               	addwfc	??___flmul+1,w,c
  6713  00657E  6E19               	movwf	___flmul@temp+1,c
  6714  006580  D00F               	goto	l3794
  6715  006582                     l3788:
  6716  006582  90D8               	bcf	status,0,c
  6717  006584  3614               	rlcf	___flmul@prod,f,c
  6718  006586  3615               	rlcf	___flmul@prod+1,f,c
  6719  006588  3616               	rlcf	___flmul@prod+2,f,c
  6720  00658A  3617               	rlcf	___flmul@prod+3,f,c
  6721  00658C  BE11               	btfsc	___flmul@grs+3,7,c
  6722  00658E  8014               	bsf	___flmul@prod,0,c
  6723  006590  90D8               	bcf	status,0,c
  6724  006592  360E               	rlcf	___flmul@grs,f,c
  6725  006594  360F               	rlcf	___flmul@grs+1,f,c
  6726  006596  3610               	rlcf	___flmul@grs+2,f,c
  6727  006598  3611               	rlcf	___flmul@grs+3,f,c
  6728  00659A  0618               	decf	___flmul@temp,f,c
  6729  00659C  A0D8               	btfss	status,0,c
  6730  00659E  0619               	decf	___flmul@temp+1,f,c
  6731  0065A0                     l3794:
  6732  0065A0  AE16               	btfss	___flmul@prod+2,7,c
  6733  0065A2  D7EF               	goto	l3788
  6734  0065A4  0E00               	movlw	0
  6735  0065A6  6E12               	movwf	___flmul@aexp,c
  6736  0065A8  AE11               	btfss	___flmul@grs+3,7,c
  6737  0065AA  D017               	goto	l966
  6738  0065AC  0EFF               	movlw	255
  6739  0065AE  140E               	andwf	___flmul@grs,w,c
  6740  0065B0  6E09               	movwf	??___flmul& (0+255),c
  6741  0065B2  0EFF               	movlw	255
  6742  0065B4  140F               	andwf	___flmul@grs+1,w,c
  6743  0065B6  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6744  0065B8  0EFF               	movlw	255
  6745  0065BA  1410               	andwf	___flmul@grs+2,w,c
  6746  0065BC  6E0B               	movwf	(??___flmul+2)& (0+255),c
  6747  0065BE  0E7F               	movlw	127
  6748  0065C0  1411               	andwf	___flmul@grs+3,w,c
  6749  0065C2  6E0C               	movwf	(??___flmul+3)& (0+255),c
  6750  0065C4  5009               	movf	??___flmul,w,c
  6751  0065C6  100A               	iorwf	??___flmul+1,w,c
  6752  0065C8  100B               	iorwf	??___flmul+2,w,c
  6753  0065CA  100C               	iorwf	??___flmul+3,w,c
  6754  0065CC  B4D8               	btfsc	status,2,c
  6755  0065CE  D003               	goto	l967
  6756  0065D0                     u4240:
  6757  0065D0  0E01               	movlw	1
  6758  0065D2  6E12               	movwf	___flmul@aexp,c
  6759  0065D4  D002               	goto	l966
  6760  0065D6                     l967:
  6761  0065D6  B014               	btfsc	___flmul@prod,0,c
  6762  0065D8  D7FB               	goto	u4240
  6763  0065DA                     l966:
  6764  0065DA  5012               	movf	___flmul@aexp,w,c
  6765  0065DC  B4D8               	btfsc	status,2,c
  6766  0065DE  D01F               	goto	l3814
  6767  0065E0  0E01               	movlw	1
  6768  0065E2  2614               	addwf	___flmul@prod,f,c
  6769  0065E4  0E00               	movlw	0
  6770  0065E6  2215               	addwfc	___flmul@prod+1,f,c
  6771  0065E8  2216               	addwfc	___flmul@prod+2,f,c
  6772  0065EA  2217               	addwfc	___flmul@prod+3,f,c
  6773  0065EC  A017               	btfss	___flmul@prod+3,0,c
  6774  0065EE  D017               	goto	l3814
  6775  0065F0  C014  F009         	movff	___flmul@prod,??___flmul
  6776  0065F4  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6777  0065F8  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6778  0065FC  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6779  006600  340C               	rlcf	??___flmul+3,w,c
  6780  006602  320C               	rrcf	??___flmul+3,f,c
  6781  006604  320B               	rrcf	??___flmul+2,f,c
  6782  006606  320A               	rrcf	??___flmul+1,f,c
  6783  006608  3209               	rrcf	??___flmul,f,c
  6784  00660A  C009  F014         	movff	??___flmul,___flmul@prod
  6785  00660E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6786  006612  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6787  006616  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6788  00661A  4A18               	infsnz	___flmul@temp,f,c
  6789  00661C  2A19               	incf	___flmul@temp+1,f,c
  6790  00661E                     l3814:
  6791  00661E  BE19               	btfsc	___flmul@temp+1,7,c
  6792  006620  D00D               	goto	l3818
  6793  006622  5019               	movf	___flmul@temp+1,w,c
  6794  006624  E103               	bnz	u4280
  6795  006626  2818               	incf	___flmul@temp,w,c
  6796  006628  A0D8               	btfss	status,0,c
  6797  00662A  D008               	goto	l3818
  6798  00662C                     u4280:
  6799  00662C  0E00               	movlw	0
  6800  00662E  6E14               	movwf	___flmul@prod,c
  6801  006630  0E00               	movlw	0
  6802  006632  6E15               	movwf	___flmul@prod+1,c
  6803  006634  0E80               	movlw	128
  6804  006636  6E16               	movwf	___flmul@prod+2,c
  6805  006638  0E7F               	movlw	127
  6806  00663A  D020               	goto	L11
  6807  00663C                     l3818:
  6808  00663C  BE19               	btfsc	___flmul@temp+1,7,c
  6809  00663E  D005               	goto	u4290
  6810  006640  5019               	movf	___flmul@temp+1,w,c
  6811  006642  E10E               	bnz	l974
  6812  006644  0418               	decf	___flmul@temp,w,c
  6813  006646  B0D8               	btfsc	status,0,c
  6814  006648  D00B               	goto	l974
  6815  00664A                     u4290:
  6816  00664A  0E00               	movlw	0
  6817  00664C  6E14               	movwf	___flmul@prod,c
  6818  00664E  0E00               	movlw	0
  6819  006650  6E15               	movwf	___flmul@prod+1,c
  6820  006652  0E00               	movlw	0
  6821  006654  6E16               	movwf	___flmul@prod+2,c
  6822  006656  0E00               	movlw	0
  6823  006658  6E17               	movwf	___flmul@prod+3,c
  6824  00665A  0E00               	movlw	0
  6825  00665C  6E0D               	movwf	___flmul@sign,c
  6826  00665E  D00F               	goto	l3830
  6827  006660                     l974:
  6828  006660  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6829  006664  0EFF               	movlw	255
  6830  006666  1614               	andwf	___flmul@prod,f,c
  6831  006668  0EFF               	movlw	255
  6832  00666A  1615               	andwf	___flmul@prod+1,f,c
  6833  00666C  0E7F               	movlw	127
  6834  00666E  1616               	andwf	___flmul@prod+2,f,c
  6835  006670  0E00               	movlw	0
  6836  006672  1617               	andwf	___flmul@prod+3,f,c
  6837  006674  B013               	btfsc	___flmul@bexp,0,c
  6838  006676  8E16               	bsf	___flmul@prod+2,7,c
  6839  006678  90D8               	bcf	status,0,c
  6840  00667A  3013               	rrcf	___flmul@bexp,w,c
  6841  00667C                     L11:
  6842  00667C  6E17               	movwf	___flmul@prod+3,c
  6843  00667E                     l3830:
  6844  00667E  500D               	movf	___flmul@sign,w,c
  6845  006680  1217               	iorwf	___flmul@prod+3,f,c
  6846  006682  C014  F001         	movff	___flmul@prod,?___flmul
  6847  006686  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6848  00668A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6849  00668E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6850  006692  0012               	return		;funcret
  6851  006694                     __end_of___flmul:
  6852                           	opt callstack 0
  6853                           
  6854 ;; *************** function ___flge *****************
  6855 ;; Defined at:
  6856 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  ff1             4   25[COMRAM] unsigned char 
  6859 ;;  ff2             4   29[COMRAM] unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6871 ;;      Params:         8       0       0       0       0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6873 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6874 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6875 ;;Total ram usage:       12 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_main
  6881 ;;		_efgtoa
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text16
  6886  0050AA                     __ptext16:
  6887                           	opt callstack 0
  6888  0050AA                     ___flge:
  6889                           	opt callstack 26
  6890                           
  6891                           ;incstack = 0
  6892  0050AA  0E00               	movlw	0
  6893  0050AC  141A               	andwf	___flge@ff1,w,c
  6894  0050AE  6E22               	movwf	??___flge& (0+255),c
  6895  0050B0  0E00               	movlw	0
  6896  0050B2  141B               	andwf	___flge@ff1+1,w,c
  6897  0050B4  6E23               	movwf	(??___flge+1)& (0+255),c
  6898  0050B6  0E80               	movlw	128
  6899  0050B8  141C               	andwf	___flge@ff1+2,w,c
  6900  0050BA  6E24               	movwf	(??___flge+2)& (0+255),c
  6901  0050BC  0E7F               	movlw	127
  6902  0050BE  141D               	andwf	___flge@ff1+3,w,c
  6903  0050C0  6E25               	movwf	(??___flge+3)& (0+255),c
  6904  0050C2  5022               	movf	??___flge,w,c
  6905  0050C4  1023               	iorwf	??___flge+1,w,c
  6906  0050C6  1024               	iorwf	??___flge+2,w,c
  6907  0050C8  1025               	iorwf	??___flge+3,w,c
  6908  0050CA  A4D8               	btfss	status,2,c
  6909  0050CC  D008               	goto	l3942
  6910  0050CE  0E00               	movlw	0
  6911  0050D0  6E1A               	movwf	___flge@ff1,c
  6912  0050D2  0E00               	movlw	0
  6913  0050D4  6E1B               	movwf	___flge@ff1+1,c
  6914  0050D6  0E00               	movlw	0
  6915  0050D8  6E1C               	movwf	___flge@ff1+2,c
  6916  0050DA  0E00               	movlw	0
  6917  0050DC  6E1D               	movwf	___flge@ff1+3,c
  6918  0050DE                     l3942:
  6919  0050DE  0E00               	movlw	0
  6920  0050E0  141E               	andwf	___flge@ff2,w,c
  6921  0050E2  6E22               	movwf	??___flge& (0+255),c
  6922  0050E4  0E00               	movlw	0
  6923  0050E6  141F               	andwf	___flge@ff2+1,w,c
  6924  0050E8  6E23               	movwf	(??___flge+1)& (0+255),c
  6925  0050EA  0E80               	movlw	128
  6926  0050EC  1420               	andwf	___flge@ff2+2,w,c
  6927  0050EE  6E24               	movwf	(??___flge+2)& (0+255),c
  6928  0050F0  0E7F               	movlw	127
  6929  0050F2  1421               	andwf	___flge@ff2+3,w,c
  6930  0050F4  6E25               	movwf	(??___flge+3)& (0+255),c
  6931  0050F6  5022               	movf	??___flge,w,c
  6932  0050F8  1023               	iorwf	??___flge+1,w,c
  6933  0050FA  1024               	iorwf	??___flge+2,w,c
  6934  0050FC  1025               	iorwf	??___flge+3,w,c
  6935  0050FE  A4D8               	btfss	status,2,c
  6936  005100  D008               	goto	l3946
  6937  005102  0E00               	movlw	0
  6938  005104  6E1E               	movwf	___flge@ff2,c
  6939  005106  0E00               	movlw	0
  6940  005108  6E1F               	movwf	___flge@ff2+1,c
  6941  00510A  0E00               	movlw	0
  6942  00510C  6E20               	movwf	___flge@ff2+2,c
  6943  00510E  0E00               	movlw	0
  6944  005110  6E21               	movwf	___flge@ff2+3,c
  6945  005112                     l3946:
  6946  005112  AE1D               	btfss	___flge@ff1+3,7,c
  6947  005114  D009               	goto	l3950
  6948  005116  6C1A               	negf	___flge@ff1,c
  6949  005118  1E1B               	comf	___flge@ff1+1,f,c
  6950  00511A  B0D8               	btfsc	status,0,c
  6951  00511C  2A1B               	incf	___flge@ff1+1,f,c
  6952  00511E  1E1C               	comf	___flge@ff1+2,f,c
  6953  005120  B0D8               	btfsc	status,0,c
  6954  005122  2A1C               	incf	___flge@ff1+2,f,c
  6955  005124  0E80               	movlw	128
  6956  005126  561D               	subfwb	___flge@ff1+3,f,c
  6957  005128                     l3950:
  6958  005128  AE21               	btfss	___flge@ff2+3,7,c
  6959  00512A  D009               	goto	l608
  6960  00512C  6C1E               	negf	___flge@ff2,c
  6961  00512E  1E1F               	comf	___flge@ff2+1,f,c
  6962  005130  B0D8               	btfsc	status,0,c
  6963  005132  2A1F               	incf	___flge@ff2+1,f,c
  6964  005134  1E20               	comf	___flge@ff2+2,f,c
  6965  005136  B0D8               	btfsc	status,0,c
  6966  005138  2A20               	incf	___flge@ff2+2,f,c
  6967  00513A  0E80               	movlw	128
  6968  00513C  5621               	subfwb	___flge@ff2+3,f,c
  6969  00513E                     l608:
  6970  00513E  0E00               	movlw	0
  6971  005140  1A1A               	xorwf	___flge@ff1,f,c
  6972  005142  0E00               	movlw	0
  6973  005144  1A1B               	xorwf	___flge@ff1+1,f,c
  6974  005146  0E00               	movlw	0
  6975  005148  1A1C               	xorwf	___flge@ff1+2,f,c
  6976  00514A  0E80               	movlw	128
  6977  00514C  1A1D               	xorwf	___flge@ff1+3,f,c
  6978  00514E  0E00               	movlw	0
  6979  005150  1A1E               	xorwf	___flge@ff2,f,c
  6980  005152  0E00               	movlw	0
  6981  005154  1A1F               	xorwf	___flge@ff2+1,f,c
  6982  005156  0E00               	movlw	0
  6983  005158  1A20               	xorwf	___flge@ff2+2,f,c
  6984  00515A  0E80               	movlw	128
  6985  00515C  1A21               	xorwf	___flge@ff2+3,f,c
  6986  00515E  501E               	movf	___flge@ff2,w,c
  6987  005160  5C1A               	subwf	___flge@ff1,w,c
  6988  005162  501F               	movf	___flge@ff2+1,w,c
  6989  005164  581B               	subwfb	___flge@ff1+1,w,c
  6990  005166  5020               	movf	___flge@ff2+2,w,c
  6991  005168  581C               	subwfb	___flge@ff1+2,w,c
  6992  00516A  5021               	movf	___flge@ff2+3,w,c
  6993  00516C  581D               	subwfb	___flge@ff1+3,w,c
  6994  00516E  B0D8               	btfsc	status,0,c
  6995  005170  D002               	goto	l3956
  6996  005172  90D8               	bcf	status,0,c
  6997  005174  0012               	return	
  6998  005176                     l3956:
  6999  005176  80D8               	bsf	status,0,c
  7000  005178  0012               	return		;funcret
  7001  00517A                     __end_of___flge:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function ___fleq *****************
  7005 ;; Defined at:
  7006 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  ff1             4    0[COMRAM] unsigned char 
  7009 ;;  ff2             4    4[COMRAM] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;		None               void
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         8       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7024 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:       12 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_main
  7031 ;;		_efgtoa
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text17
  7036  004CC2                     __ptext17:
  7037                           	opt callstack 0
  7038  004CC2                     ___fleq:
  7039                           	opt callstack 26
  7040                           
  7041                           ;incstack = 0
  7042  004CC2  0E00               	movlw	0
  7043  004CC4  1401               	andwf	___fleq@ff1,w,c
  7044  004CC6  6E09               	movwf	??___fleq& (0+255),c
  7045  004CC8  0E00               	movlw	0
  7046  004CCA  1402               	andwf	___fleq@ff1+1,w,c
  7047  004CCC  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7048  004CCE  0E80               	movlw	128
  7049  004CD0  1403               	andwf	___fleq@ff1+2,w,c
  7050  004CD2  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7051  004CD4  0E7F               	movlw	127
  7052  004CD6  1404               	andwf	___fleq@ff1+3,w,c
  7053  004CD8  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7054  004CDA  5009               	movf	??___fleq,w,c
  7055  004CDC  100A               	iorwf	??___fleq+1,w,c
  7056  004CDE  100B               	iorwf	??___fleq+2,w,c
  7057  004CE0  100C               	iorwf	??___fleq+3,w,c
  7058  004CE2  A4D8               	btfss	status,2,c
  7059  004CE4  D008               	goto	l3926
  7060  004CE6  0E00               	movlw	0
  7061  004CE8  6E01               	movwf	___fleq@ff1,c
  7062  004CEA  0E00               	movlw	0
  7063  004CEC  6E02               	movwf	___fleq@ff1+1,c
  7064  004CEE  0E00               	movlw	0
  7065  004CF0  6E03               	movwf	___fleq@ff1+2,c
  7066  004CF2  0E00               	movlw	0
  7067  004CF4  6E04               	movwf	___fleq@ff1+3,c
  7068  004CF6                     l3926:
  7069  004CF6  0E00               	movlw	0
  7070  004CF8  1405               	andwf	___fleq@ff2,w,c
  7071  004CFA  6E09               	movwf	??___fleq& (0+255),c
  7072  004CFC  0E00               	movlw	0
  7073  004CFE  1406               	andwf	___fleq@ff2+1,w,c
  7074  004D00  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7075  004D02  0E80               	movlw	128
  7076  004D04  1407               	andwf	___fleq@ff2+2,w,c
  7077  004D06  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7078  004D08  0E7F               	movlw	127
  7079  004D0A  1408               	andwf	___fleq@ff2+3,w,c
  7080  004D0C  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7081  004D0E  5009               	movf	??___fleq,w,c
  7082  004D10  100A               	iorwf	??___fleq+1,w,c
  7083  004D12  100B               	iorwf	??___fleq+2,w,c
  7084  004D14  100C               	iorwf	??___fleq+3,w,c
  7085  004D16  A4D8               	btfss	status,2,c
  7086  004D18  D008               	goto	l3930
  7087  004D1A  0E00               	movlw	0
  7088  004D1C  6E05               	movwf	___fleq@ff2,c
  7089  004D1E  0E00               	movlw	0
  7090  004D20  6E06               	movwf	___fleq@ff2+1,c
  7091  004D22  0E00               	movlw	0
  7092  004D24  6E07               	movwf	___fleq@ff2+2,c
  7093  004D26  0E00               	movlw	0
  7094  004D28  6E08               	movwf	___fleq@ff2+3,c
  7095  004D2A                     l3930:
  7096  004D2A  5005               	movf	___fleq@ff2,w,c
  7097  004D2C  1801               	xorwf	___fleq@ff1,w,c
  7098  004D2E  E10A               	bnz	u4450
  7099  004D30  5006               	movf	___fleq@ff2+1,w,c
  7100  004D32  1802               	xorwf	___fleq@ff1+1,w,c
  7101  004D34  E107               	bnz	u4450
  7102  004D36  5007               	movf	___fleq@ff2+2,w,c
  7103  004D38  1803               	xorwf	___fleq@ff1+2,w,c
  7104  004D3A  E104               	bnz	u4450
  7105  004D3C  5008               	movf	___fleq@ff2+3,w,c
  7106  004D3E  1804               	xorwf	___fleq@ff1+3,w,c
  7107  004D40  B4D8               	btfsc	status,2,c
  7108  004D42  D002               	goto	l3934
  7109  004D44                     u4450:
  7110  004D44  90D8               	bcf	status,0,c
  7111  004D46  0012               	return	
  7112  004D48                     l3934:
  7113  004D48  80D8               	bsf	status,0,c
  7114  004D4A  0012               	return		;funcret
  7115  004D4C                     __end_of___fleq:
  7116                           	opt callstack 0
  7117                           
  7118 ;; *************** function ___fldiv *****************
  7119 ;; Defined at:
  7120 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  b               4    0[COMRAM] unsigned char 
  7123 ;;  a               4    4[COMRAM] unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  grs             4   19[COMRAM] unsigned long 
  7126 ;;  rem             4   12[COMRAM] unsigned long 
  7127 ;;  new_exp         2   17[COMRAM] short 
  7128 ;;  aexp            1   24[COMRAM] unsigned char 
  7129 ;;  bexp            1   23[COMRAM] unsigned char 
  7130 ;;  sign            1   16[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  4    0[COMRAM] unsigned char 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:         8       0       0       0       0       0       0       0       0
  7141 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7143 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:       25 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_main
  7150 ;;		_efgtoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text18
  7155  005DAE                     __ptext18:
  7156                           	opt callstack 0
  7157  005DAE                     ___fldiv:
  7158                           	opt callstack 26
  7159                           
  7160                           ;incstack = 0
  7161  005DAE  5004               	movf	___fldiv@b+3,w,c
  7162  005DB0  0B80               	andlw	128
  7163  005DB2  6E11               	movwf	___fldiv@sign,c
  7164  005DB4  5004               	movf	___fldiv@b+3,w,c
  7165  005DB6  2404               	addwf	___fldiv@b+3,w,c
  7166  005DB8  6E18               	movwf	___fldiv@bexp,c
  7167  005DBA  BE03               	btfsc	___fldiv@b+2,7,c
  7168  005DBC  8018               	bsf	___fldiv@bexp,0,c
  7169  005DBE  5018               	movf	___fldiv@bexp,w,c
  7170  005DC0  B4D8               	btfsc	status,2,c
  7171  005DC2  D00D               	goto	l3584
  7172  005DC4  2818               	incf	___fldiv@bexp,w,c
  7173  005DC6  A4D8               	btfss	status,2,c
  7174  005DC8  D008               	goto	l3580
  7175  005DCA  0E00               	movlw	0
  7176  005DCC  6E01               	movwf	___fldiv@b,c
  7177  005DCE  0E00               	movlw	0
  7178  005DD0  6E02               	movwf	___fldiv@b+1,c
  7179  005DD2  0E00               	movlw	0
  7180  005DD4  6E03               	movwf	___fldiv@b+2,c
  7181  005DD6  0E00               	movlw	0
  7182  005DD8  6E04               	movwf	___fldiv@b+3,c
  7183  005DDA                     l3580:
  7184  005DDA  8E03               	bsf	___fldiv@b+2,7,c
  7185  005DDC  D006               	goto	L12
  7186  005DDE                     l3584:
  7187  005DDE  0E00               	movlw	0
  7188  005DE0  6E01               	movwf	___fldiv@b,c
  7189  005DE2  0E00               	movlw	0
  7190  005DE4  6E02               	movwf	___fldiv@b+1,c
  7191  005DE6  0E00               	movlw	0
  7192  005DE8  6E03               	movwf	___fldiv@b+2,c
  7193  005DEA                     L12:
  7194  005DEA  0E00               	movlw	0
  7195  005DEC  6E04               	movwf	___fldiv@b+3,c
  7196  005DEE  5008               	movf	___fldiv@a+3,w,c
  7197  005DF0  0B80               	andlw	128
  7198  005DF2  1A11               	xorwf	___fldiv@sign,f,c
  7199  005DF4  5008               	movf	___fldiv@a+3,w,c
  7200  005DF6  2408               	addwf	___fldiv@a+3,w,c
  7201  005DF8  6E19               	movwf	___fldiv@aexp,c
  7202  005DFA  BE07               	btfsc	___fldiv@a+2,7,c
  7203  005DFC  8019               	bsf	___fldiv@aexp,0,c
  7204  005DFE  5019               	movf	___fldiv@aexp,w,c
  7205  005E00  B4D8               	btfsc	status,2,c
  7206  005E02  D00D               	goto	l3604
  7207  005E04  2819               	incf	___fldiv@aexp,w,c
  7208  005E06  A4D8               	btfss	status,2,c
  7209  005E08  D008               	goto	l3600
  7210  005E0A  0E00               	movlw	0
  7211  005E0C  6E05               	movwf	___fldiv@a,c
  7212  005E0E  0E00               	movlw	0
  7213  005E10  6E06               	movwf	___fldiv@a+1,c
  7214  005E12  0E00               	movlw	0
  7215  005E14  6E07               	movwf	___fldiv@a+2,c
  7216  005E16  0E00               	movlw	0
  7217  005E18  6E08               	movwf	___fldiv@a+3,c
  7218  005E1A                     l3600:
  7219  005E1A  8E07               	bsf	___fldiv@a+2,7,c
  7220  005E1C  D006               	goto	L13
  7221  005E1E                     l3604:
  7222  005E1E  0E00               	movlw	0
  7223  005E20  6E05               	movwf	___fldiv@a,c
  7224  005E22  0E00               	movlw	0
  7225  005E24  6E06               	movwf	___fldiv@a+1,c
  7226  005E26  0E00               	movlw	0
  7227  005E28  6E07               	movwf	___fldiv@a+2,c
  7228  005E2A                     L13:
  7229  005E2A  0E00               	movlw	0
  7230  005E2C  6E08               	movwf	___fldiv@a+3,c
  7231  005E2E  5005               	movf	___fldiv@a,w,c
  7232  005E30  1006               	iorwf	___fldiv@a+1,w,c
  7233  005E32  1007               	iorwf	___fldiv@a+2,w,c
  7234  005E34  1008               	iorwf	___fldiv@a+3,w,c
  7235  005E36  A4D8               	btfss	status,2,c
  7236  005E38  D017               	goto	l3618
  7237  005E3A  0E00               	movlw	0
  7238  005E3C  6E01               	movwf	___fldiv@b,c
  7239  005E3E  0E00               	movlw	0
  7240  005E40  6E02               	movwf	___fldiv@b+1,c
  7241  005E42  0E00               	movlw	0
  7242  005E44  6E03               	movwf	___fldiv@b+2,c
  7243  005E46  0E00               	movlw	0
  7244  005E48  6E04               	movwf	___fldiv@b+3,c
  7245  005E4A  0E80               	movlw	128
  7246  005E4C  1203               	iorwf	___fldiv@b+2,f,c
  7247  005E4E  0E7F               	movlw	127
  7248  005E50  1204               	iorwf	___fldiv@b+3,f,c
  7249  005E52                     l3612:
  7250  005E52  5011               	movf	___fldiv@sign,w,c
  7251  005E54  1204               	iorwf	___fldiv@b+3,f,c
  7252  005E56  C001  F001         	movff	___fldiv@b,?___fldiv
  7253  005E5A  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7254  005E5E  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7255  005E62  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7256  005E66  0012               	return	
  7257  005E68                     l3618:
  7258  005E68  5018               	movf	___fldiv@bexp,w,c
  7259  005E6A  A4D8               	btfss	status,2,c
  7260  005E6C  D009               	goto	l3626
  7261  005E6E  0E00               	movlw	0
  7262  005E70  6E01               	movwf	?___fldiv,c
  7263  005E72  0E00               	movlw	0
  7264  005E74  6E02               	movwf	?___fldiv+1,c
  7265  005E76  0E00               	movlw	0
  7266  005E78  6E03               	movwf	?___fldiv+2,c
  7267  005E7A  0E00               	movlw	0
  7268  005E7C  6E04               	movwf	?___fldiv+3,c
  7269  005E7E  0012               	return	
  7270  005E80                     l3626:
  7271  005E80  5019               	movf	___fldiv@aexp,w,c
  7272  005E82  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7273  005E86  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7274  005E88  5E09               	subwf	??___fldiv,f,c
  7275  005E8A  0E00               	movlw	0
  7276  005E8C  5A0A               	subwfb	??___fldiv+1,f,c
  7277  005E8E  0E7F               	movlw	127
  7278  005E90  2409               	addwf	??___fldiv,w,c
  7279  005E92  6E12               	movwf	___fldiv@new_exp,c
  7280  005E94  0E00               	movlw	0
  7281  005E96  200A               	addwfc	??___fldiv+1,w,c
  7282  005E98  6E13               	movwf	___fldiv@new_exp+1,c
  7283  005E9A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7284  005E9E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7285  005EA2  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7286  005EA6  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7287  005EAA  0E00               	movlw	0
  7288  005EAC  6E01               	movwf	___fldiv@b,c
  7289  005EAE  0E00               	movlw	0
  7290  005EB0  6E02               	movwf	___fldiv@b+1,c
  7291  005EB2  0E00               	movlw	0
  7292  005EB4  6E03               	movwf	___fldiv@b+2,c
  7293  005EB6  0E00               	movlw	0
  7294  005EB8  6E04               	movwf	___fldiv@b+3,c
  7295  005EBA  0E00               	movlw	0
  7296  005EBC  6E14               	movwf	___fldiv@grs,c
  7297  005EBE  0E00               	movlw	0
  7298  005EC0  6E15               	movwf	___fldiv@grs+1,c
  7299  005EC2  0E00               	movlw	0
  7300  005EC4  6E16               	movwf	___fldiv@grs+2,c
  7301  005EC6  0E00               	movlw	0
  7302  005EC8  6E17               	movwf	___fldiv@grs+3,c
  7303  005ECA  0E00               	movlw	0
  7304  005ECC  6E19               	movwf	___fldiv@aexp,c
  7305  005ECE  D028               	goto	l927
  7306  005ED0                     l3636:
  7307  005ED0  5019               	movf	___fldiv@aexp,w,c
  7308  005ED2  B4D8               	btfsc	status,2,c
  7309  005ED4  D011               	goto	l3644
  7310  005ED6  90D8               	bcf	status,0,c
  7311  005ED8  360D               	rlcf	___fldiv@rem,f,c
  7312  005EDA  360E               	rlcf	___fldiv@rem+1,f,c
  7313  005EDC  360F               	rlcf	___fldiv@rem+2,f,c
  7314  005EDE  3610               	rlcf	___fldiv@rem+3,f,c
  7315  005EE0  90D8               	bcf	status,0,c
  7316  005EE2  3601               	rlcf	___fldiv@b,f,c
  7317  005EE4  3602               	rlcf	___fldiv@b+1,f,c
  7318  005EE6  3603               	rlcf	___fldiv@b+2,f,c
  7319  005EE8  3604               	rlcf	___fldiv@b+3,f,c
  7320  005EEA  BE17               	btfsc	___fldiv@grs+3,7,c
  7321  005EEC  8001               	bsf	___fldiv@b,0,c
  7322  005EEE  90D8               	bcf	status,0,c
  7323  005EF0  3614               	rlcf	___fldiv@grs,f,c
  7324  005EF2  3615               	rlcf	___fldiv@grs+1,f,c
  7325  005EF4  3616               	rlcf	___fldiv@grs+2,f,c
  7326  005EF6  3617               	rlcf	___fldiv@grs+3,f,c
  7327  005EF8                     l3644:
  7328  005EF8  5005               	movf	___fldiv@a,w,c
  7329  005EFA  5C0D               	subwf	___fldiv@rem,w,c
  7330  005EFC  5006               	movf	___fldiv@a+1,w,c
  7331  005EFE  580E               	subwfb	___fldiv@rem+1,w,c
  7332  005F00  5007               	movf	___fldiv@a+2,w,c
  7333  005F02  580F               	subwfb	___fldiv@rem+2,w,c
  7334  005F04  5008               	movf	___fldiv@a+3,w,c
  7335  005F06  5810               	subwfb	___fldiv@rem+3,w,c
  7336  005F08  A0D8               	btfss	status,0,c
  7337  005F0A  D009               	goto	l3650
  7338  005F0C  8C17               	bsf	___fldiv@grs+3,6,c
  7339  005F0E  5005               	movf	___fldiv@a,w,c
  7340  005F10  5E0D               	subwf	___fldiv@rem,f,c
  7341  005F12  5006               	movf	___fldiv@a+1,w,c
  7342  005F14  5A0E               	subwfb	___fldiv@rem+1,f,c
  7343  005F16  5007               	movf	___fldiv@a+2,w,c
  7344  005F18  5A0F               	subwfb	___fldiv@rem+2,f,c
  7345  005F1A  5008               	movf	___fldiv@a+3,w,c
  7346  005F1C  5A10               	subwfb	___fldiv@rem+3,f,c
  7347  005F1E                     l3650:
  7348  005F1E  2A19               	incf	___fldiv@aexp,f,c
  7349  005F20                     l927:
  7350  005F20  0E19               	movlw	25
  7351  005F22  6419               	cpfsgt	___fldiv@aexp,c
  7352  005F24  D7D5               	goto	l3636
  7353  005F26  500D               	movf	___fldiv@rem,w,c
  7354  005F28  100E               	iorwf	___fldiv@rem+1,w,c
  7355  005F2A  100F               	iorwf	___fldiv@rem+2,w,c
  7356  005F2C  1010               	iorwf	___fldiv@rem+3,w,c
  7357  005F2E  B4D8               	btfsc	status,2,c
  7358  005F30  D011               	goto	l3662
  7359  005F32  8014               	bsf	___fldiv@grs,0,c
  7360  005F34  D00F               	goto	l3662
  7361  005F36                     l3656:
  7362  005F36  90D8               	bcf	status,0,c
  7363  005F38  3601               	rlcf	___fldiv@b,f,c
  7364  005F3A  3602               	rlcf	___fldiv@b+1,f,c
  7365  005F3C  3603               	rlcf	___fldiv@b+2,f,c
  7366  005F3E  3604               	rlcf	___fldiv@b+3,f,c
  7367  005F40  BE17               	btfsc	___fldiv@grs+3,7,c
  7368  005F42  8001               	bsf	___fldiv@b,0,c
  7369  005F44  90D8               	bcf	status,0,c
  7370  005F46  3614               	rlcf	___fldiv@grs,f,c
  7371  005F48  3615               	rlcf	___fldiv@grs+1,f,c
  7372  005F4A  3616               	rlcf	___fldiv@grs+2,f,c
  7373  005F4C  3617               	rlcf	___fldiv@grs+3,f,c
  7374  005F4E  0612               	decf	___fldiv@new_exp,f,c
  7375  005F50  A0D8               	btfss	status,0,c
  7376  005F52  0613               	decf	___fldiv@new_exp+1,f,c
  7377  005F54                     l3662:
  7378  005F54  AE03               	btfss	___fldiv@b+2,7,c
  7379  005F56  D7EF               	goto	l3656
  7380  005F58  0E00               	movlw	0
  7381  005F5A  6E19               	movwf	___fldiv@aexp,c
  7382  005F5C  AE17               	btfss	___fldiv@grs+3,7,c
  7383  005F5E  D017               	goto	l938
  7384  005F60  0EFF               	movlw	255
  7385  005F62  1414               	andwf	___fldiv@grs,w,c
  7386  005F64  6E09               	movwf	??___fldiv& (0+255),c
  7387  005F66  0EFF               	movlw	255
  7388  005F68  1415               	andwf	___fldiv@grs+1,w,c
  7389  005F6A  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7390  005F6C  0EFF               	movlw	255
  7391  005F6E  1416               	andwf	___fldiv@grs+2,w,c
  7392  005F70  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7393  005F72  0E7F               	movlw	127
  7394  005F74  1417               	andwf	___fldiv@grs+3,w,c
  7395  005F76  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7396  005F78  5009               	movf	??___fldiv,w,c
  7397  005F7A  100A               	iorwf	??___fldiv+1,w,c
  7398  005F7C  100B               	iorwf	??___fldiv+2,w,c
  7399  005F7E  100C               	iorwf	??___fldiv+3,w,c
  7400  005F80  B4D8               	btfsc	status,2,c
  7401  005F82  D003               	goto	l939
  7402  005F84                     u4050:
  7403  005F84  0E01               	movlw	1
  7404  005F86  6E19               	movwf	___fldiv@aexp,c
  7405  005F88  D002               	goto	l938
  7406  005F8A                     l939:
  7407  005F8A  B001               	btfsc	___fldiv@b,0,c
  7408  005F8C  D7FB               	goto	u4050
  7409  005F8E                     l938:
  7410  005F8E  5019               	movf	___fldiv@aexp,w,c
  7411  005F90  B4D8               	btfsc	status,2,c
  7412  005F92  D01F               	goto	l3682
  7413  005F94  0E01               	movlw	1
  7414  005F96  2601               	addwf	___fldiv@b,f,c
  7415  005F98  0E00               	movlw	0
  7416  005F9A  2202               	addwfc	___fldiv@b+1,f,c
  7417  005F9C  2203               	addwfc	___fldiv@b+2,f,c
  7418  005F9E  2204               	addwfc	___fldiv@b+3,f,c
  7419  005FA0  A004               	btfss	___fldiv@b+3,0,c
  7420  005FA2  D017               	goto	l3682
  7421  005FA4  C001  F009         	movff	___fldiv@b,??___fldiv
  7422  005FA8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7423  005FAC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7424  005FB0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7425  005FB4  340C               	rlcf	??___fldiv+3,w,c
  7426  005FB6  320C               	rrcf	??___fldiv+3,f,c
  7427  005FB8  320B               	rrcf	??___fldiv+2,f,c
  7428  005FBA  320A               	rrcf	??___fldiv+1,f,c
  7429  005FBC  3209               	rrcf	??___fldiv,f,c
  7430  005FBE  C009  F001         	movff	??___fldiv,___fldiv@b
  7431  005FC2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7432  005FC6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7433  005FCA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7434  005FCE  4A12               	infsnz	___fldiv@new_exp,f,c
  7435  005FD0  2A13               	incf	___fldiv@new_exp+1,f,c
  7436  005FD2                     l3682:
  7437  005FD2  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7438  005FD4  D010               	goto	l3686
  7439  005FD6  5013               	movf	___fldiv@new_exp+1,w,c
  7440  005FD8  E103               	bnz	u4090
  7441  005FDA  2812               	incf	___fldiv@new_exp,w,c
  7442  005FDC  A0D8               	btfss	status,0,c
  7443  005FDE  D00B               	goto	l3686
  7444  005FE0                     u4090:
  7445  005FE0  0E00               	movlw	0
  7446  005FE2  6E13               	movwf	___fldiv@new_exp+1,c
  7447  005FE4  6812               	setf	___fldiv@new_exp,c
  7448  005FE6  0E00               	movlw	0
  7449  005FE8  6E01               	movwf	___fldiv@b,c
  7450  005FEA  0E00               	movlw	0
  7451  005FEC  6E02               	movwf	___fldiv@b+1,c
  7452  005FEE  0E00               	movlw	0
  7453  005FF0  6E03               	movwf	___fldiv@b+2,c
  7454  005FF2  0E00               	movlw	0
  7455  005FF4  6E04               	movwf	___fldiv@b+3,c
  7456  005FF6                     l3686:
  7457  005FF6  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7458  005FF8  D005               	goto	u4100
  7459  005FFA  5013               	movf	___fldiv@new_exp+1,w,c
  7460  005FFC  E111               	bnz	l3690
  7461  005FFE  0412               	decf	___fldiv@new_exp,w,c
  7462  006000  B0D8               	btfsc	status,0,c
  7463  006002  D00E               	goto	l3690
  7464  006004                     u4100:
  7465  006004  0E00               	movlw	0
  7466  006006  6E13               	movwf	___fldiv@new_exp+1,c
  7467  006008  0E00               	movlw	0
  7468  00600A  6E12               	movwf	___fldiv@new_exp,c
  7469  00600C  0E00               	movlw	0
  7470  00600E  6E01               	movwf	___fldiv@b,c
  7471  006010  0E00               	movlw	0
  7472  006012  6E02               	movwf	___fldiv@b+1,c
  7473  006014  0E00               	movlw	0
  7474  006016  6E03               	movwf	___fldiv@b+2,c
  7475  006018  0E00               	movlw	0
  7476  00601A  6E04               	movwf	___fldiv@b+3,c
  7477  00601C  0E00               	movlw	0
  7478  00601E  6E11               	movwf	___fldiv@sign,c
  7479  006020                     l3690:
  7480  006020  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7481  006024  A018               	btfss	___fldiv@bexp,0,c
  7482  006026  D002               	goto	l3696
  7483  006028  8E03               	bsf	___fldiv@b+2,7,c
  7484  00602A  D001               	goto	l3698
  7485  00602C                     l3696:
  7486  00602C  9E03               	bcf	___fldiv@b+2,7,c
  7487  00602E                     l3698:
  7488  00602E  90D8               	bcf	status,0,c
  7489  006030  3018               	rrcf	___fldiv@bexp,w,c
  7490  006032  6E04               	movwf	___fldiv@b+3,c
  7491  006034  D70E               	goto	l3612
  7492  006036                     __end_of___fldiv:
  7493                           	opt callstack 0
  7494                           
  7495 ;; *************** function ___awmod *****************
  7496 ;; Defined at:
  7497 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  dividend        2    0[COMRAM] int 
  7500 ;;  divisor         2    2[COMRAM] int 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  sign            1    5[COMRAM] unsigned char 
  7503 ;;  counter         1    4[COMRAM] unsigned char 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2    0[COMRAM] int 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7513 ;;      Params:         4       0       0       0       0       0       0       0       0
  7514 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7516 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7517 ;;Total ram usage:        6 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_efgtoa
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text19
  7527  004B58                     __ptext19:
  7528                           	opt callstack 0
  7529  004B58                     ___awmod:
  7530                           	opt callstack 26
  7531                           
  7532                           ;incstack = 0
  7533  004B58  0E00               	movlw	0
  7534  004B5A  6E06               	movwf	___awmod@sign,c
  7535  004B5C  AE02               	btfss	___awmod@dividend+1,7,c
  7536  004B5E  D006               	goto	l3894
  7537  004B60  6C01               	negf	___awmod@dividend,c
  7538  004B62  1E02               	comf	___awmod@dividend+1,f,c
  7539  004B64  B0D8               	btfsc	status,0,c
  7540  004B66  2A02               	incf	___awmod@dividend+1,f,c
  7541  004B68  0E01               	movlw	1
  7542  004B6A  6E06               	movwf	___awmod@sign,c
  7543  004B6C                     l3894:
  7544  004B6C  AE04               	btfss	___awmod@divisor+1,7,c
  7545  004B6E  D004               	goto	l3898
  7546  004B70  6C03               	negf	___awmod@divisor,c
  7547  004B72  1E04               	comf	___awmod@divisor+1,f,c
  7548  004B74  B0D8               	btfsc	status,0,c
  7549  004B76  2A04               	incf	___awmod@divisor+1,f,c
  7550  004B78                     l3898:
  7551  004B78  5003               	movf	___awmod@divisor,w,c
  7552  004B7A  1004               	iorwf	___awmod@divisor+1,w,c
  7553  004B7C  B4D8               	btfsc	status,2,c
  7554  004B7E  D018               	goto	l3914
  7555  004B80  0E01               	movlw	1
  7556  004B82  6E05               	movwf	___awmod@counter,c
  7557  004B84  D004               	goto	l3904
  7558  004B86                     l3902:
  7559  004B86  90D8               	bcf	status,0,c
  7560  004B88  3603               	rlcf	___awmod@divisor,f,c
  7561  004B8A  3604               	rlcf	___awmod@divisor+1,f,c
  7562  004B8C  2A05               	incf	___awmod@counter,f,c
  7563  004B8E                     l3904:
  7564  004B8E  AE04               	btfss	___awmod@divisor+1,7,c
  7565  004B90  D7FA               	goto	l3902
  7566  004B92                     u4400:
  7567  004B92  5003               	movf	___awmod@divisor,w,c
  7568  004B94  5C01               	subwf	___awmod@dividend,w,c
  7569  004B96  5004               	movf	___awmod@divisor+1,w,c
  7570  004B98  5802               	subwfb	___awmod@dividend+1,w,c
  7571  004B9A  A0D8               	btfss	status,0,c
  7572  004B9C  D004               	goto	l3910
  7573  004B9E  5003               	movf	___awmod@divisor,w,c
  7574  004BA0  5E01               	subwf	___awmod@dividend,f,c
  7575  004BA2  5004               	movf	___awmod@divisor+1,w,c
  7576  004BA4  5A02               	subwfb	___awmod@dividend+1,f,c
  7577  004BA6                     l3910:
  7578  004BA6  90D8               	bcf	status,0,c
  7579  004BA8  3204               	rrcf	___awmod@divisor+1,f,c
  7580  004BAA  3203               	rrcf	___awmod@divisor,f,c
  7581  004BAC  2E05               	decfsz	___awmod@counter,f,c
  7582  004BAE  D7F1               	goto	u4400
  7583  004BB0                     l3914:
  7584  004BB0  5006               	movf	___awmod@sign,w,c
  7585  004BB2  B4D8               	btfsc	status,2,c
  7586  004BB4  D004               	goto	l3918
  7587  004BB6  6C01               	negf	___awmod@dividend,c
  7588  004BB8  1E02               	comf	___awmod@dividend+1,f,c
  7589  004BBA  B0D8               	btfsc	status,0,c
  7590  004BBC  2A02               	incf	___awmod@dividend+1,f,c
  7591  004BBE                     l3918:
  7592  004BBE  C001  F001         	movff	___awmod@dividend,?___awmod
  7593  004BC2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7594  004BC6  0012               	return		;funcret
  7595  004BC8                     __end_of___awmod:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function ___awdiv *****************
  7599 ;; Defined at:
  7600 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  dividend        2    0[COMRAM] int 
  7603 ;;  divisor         2    2[COMRAM] int 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  quotient        2    6[COMRAM] int 
  7606 ;;  sign            1    5[COMRAM] unsigned char 
  7607 ;;  counter         1    4[COMRAM] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2    0[COMRAM] int 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7617 ;;      Params:         4       0       0       0       0       0       0       0       0
  7618 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7620 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7621 ;;Total ram usage:        8 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_efgtoa
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text20
  7631  004C3E                     __ptext20:
  7632                           	opt callstack 0
  7633  004C3E                     ___awdiv:
  7634                           	opt callstack 26
  7635                           
  7636                           ;incstack = 0
  7637  004C3E  0E00               	movlw	0
  7638  004C40  6E06               	movwf	___awdiv@sign,c
  7639  004C42  AE04               	btfss	___awdiv@divisor+1,7,c
  7640  004C44  D006               	goto	l3850
  7641  004C46  6C03               	negf	___awdiv@divisor,c
  7642  004C48  1E04               	comf	___awdiv@divisor+1,f,c
  7643  004C4A  B0D8               	btfsc	status,0,c
  7644  004C4C  2A04               	incf	___awdiv@divisor+1,f,c
  7645  004C4E  0E01               	movlw	1
  7646  004C50  6E06               	movwf	___awdiv@sign,c
  7647  004C52                     l3850:
  7648  004C52  AE02               	btfss	___awdiv@dividend+1,7,c
  7649  004C54  D006               	goto	l3856
  7650  004C56  6C01               	negf	___awdiv@dividend,c
  7651  004C58  1E02               	comf	___awdiv@dividend+1,f,c
  7652  004C5A  B0D8               	btfsc	status,0,c
  7653  004C5C  2A02               	incf	___awdiv@dividend+1,f,c
  7654  004C5E  0E01               	movlw	1
  7655  004C60  1A06               	xorwf	___awdiv@sign,f,c
  7656  004C62                     l3856:
  7657  004C62  0E00               	movlw	0
  7658  004C64  6E08               	movwf	___awdiv@quotient+1,c
  7659  004C66  0E00               	movlw	0
  7660  004C68  6E07               	movwf	___awdiv@quotient,c
  7661  004C6A  5003               	movf	___awdiv@divisor,w,c
  7662  004C6C  1004               	iorwf	___awdiv@divisor+1,w,c
  7663  004C6E  B4D8               	btfsc	status,2,c
  7664  004C70  D01C               	goto	l3878
  7665  004C72  0E01               	movlw	1
  7666  004C74  6E05               	movwf	___awdiv@counter,c
  7667  004C76  D004               	goto	l3864
  7668  004C78                     l3862:
  7669  004C78  90D8               	bcf	status,0,c
  7670  004C7A  3603               	rlcf	___awdiv@divisor,f,c
  7671  004C7C  3604               	rlcf	___awdiv@divisor+1,f,c
  7672  004C7E  2A05               	incf	___awdiv@counter,f,c
  7673  004C80                     l3864:
  7674  004C80  AE04               	btfss	___awdiv@divisor+1,7,c
  7675  004C82  D7FA               	goto	l3862
  7676  004C84                     u4340:
  7677  004C84  90D8               	bcf	status,0,c
  7678  004C86  3607               	rlcf	___awdiv@quotient,f,c
  7679  004C88  3608               	rlcf	___awdiv@quotient+1,f,c
  7680  004C8A  5003               	movf	___awdiv@divisor,w,c
  7681  004C8C  5C01               	subwf	___awdiv@dividend,w,c
  7682  004C8E  5004               	movf	___awdiv@divisor+1,w,c
  7683  004C90  5802               	subwfb	___awdiv@dividend+1,w,c
  7684  004C92  A0D8               	btfss	status,0,c
  7685  004C94  D005               	goto	l3874
  7686  004C96  5003               	movf	___awdiv@divisor,w,c
  7687  004C98  5E01               	subwf	___awdiv@dividend,f,c
  7688  004C9A  5004               	movf	___awdiv@divisor+1,w,c
  7689  004C9C  5A02               	subwfb	___awdiv@dividend+1,f,c
  7690  004C9E  8007               	bsf	___awdiv@quotient,0,c
  7691  004CA0                     l3874:
  7692  004CA0  90D8               	bcf	status,0,c
  7693  004CA2  3204               	rrcf	___awdiv@divisor+1,f,c
  7694  004CA4  3203               	rrcf	___awdiv@divisor,f,c
  7695  004CA6  2E05               	decfsz	___awdiv@counter,f,c
  7696  004CA8  D7ED               	goto	u4340
  7697  004CAA                     l3878:
  7698  004CAA  5006               	movf	___awdiv@sign,w,c
  7699  004CAC  B4D8               	btfsc	status,2,c
  7700  004CAE  D004               	goto	l3882
  7701  004CB0  6C07               	negf	___awdiv@quotient,c
  7702  004CB2  1E08               	comf	___awdiv@quotient+1,f,c
  7703  004CB4  B0D8               	btfsc	status,0,c
  7704  004CB6  2A08               	incf	___awdiv@quotient+1,f,c
  7705  004CB8                     l3882:
  7706  004CB8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7707  004CBC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7708  004CC0  0012               	return		;funcret
  7709  004CC2                     __end_of___awdiv:
  7710                           	opt callstack 0
  7711                           
  7712 ;; *************** function _dtoa *****************
  7713 ;; Defined at:
  7714 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7717 ;;		 -> sprintf@f(6), 
  7718 ;;  d               8   29[COMRAM] long long 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  n               8   53[COMRAM] long long 
  7721 ;;  i               2   61[COMRAM] int 
  7722 ;;  s               2   51[COMRAM] int 
  7723 ;;  w               2   49[COMRAM] int 
  7724 ;;  p               2   47[COMRAM] int 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  2   27[COMRAM] int 
  7727 ;; Registers used:
  7728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7734 ;;      Params:        10       0       0       0       0       0       0       0       0
  7735 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7736 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7737 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7738 ;;Total ram usage:       36 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    4
  7741 ;; This function calls:
  7742 ;;		___aodiv
  7743 ;;		___aomod
  7744 ;;		_abs
  7745 ;;		_pad
  7746 ;; This function is called by:
  7747 ;;		_vfpfcnvrt
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text21
  7752  005B6A                     __ptext21:
  7753                           	opt callstack 0
  7754  005B6A                     _dtoa:
  7755                           	opt callstack 23
  7756                           
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7758                           
  7759                           ;incstack = 0
  7760  005B6A  C01E  F036         	movff	dtoa@d,dtoa@n
  7761  005B6E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7762  005B72  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7763  005B76  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7764  005B7A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7765  005B7E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7766  005B82  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7767  005B86  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7768                           
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7770  005B8A  AE3D               	btfss	dtoa@n+7,7,c
  7771  005B8C  D002               	goto	u4610
  7772  005B8E  0E01               	movlw	1
  7773  005B90  D001               	goto	u4620
  7774  005B92                     u4610:
  7775  005B92  0E00               	movlw	0
  7776  005B94                     u4620:
  7777  005B94  6E34               	movwf	dtoa@s,c
  7778  005B96  6A35               	clrf	dtoa@s+1,c
  7779                           
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7781  005B98  5034               	movf	dtoa@s,w,c
  7782  005B9A  1035               	iorwf	dtoa@s+1,w,c
  7783  005B9C  B4D8               	btfsc	status,2,c
  7784  005B9E  D010               	goto	l4030
  7785                           
  7786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7787  005BA0  1E3D               	comf	dtoa@n+7,f,c
  7788  005BA2  1E3C               	comf	dtoa@n+6,f,c
  7789  005BA4  1E3B               	comf	dtoa@n+5,f,c
  7790  005BA6  1E3A               	comf	dtoa@n+4,f,c
  7791  005BA8  1E39               	comf	dtoa@n+3,f,c
  7792  005BAA  1E38               	comf	dtoa@n+2,f,c
  7793  005BAC  1E37               	comf	dtoa@n+1,f,c
  7794  005BAE  6C36               	negf	dtoa@n,c
  7795  005BB0  0E00               	movlw	0
  7796  005BB2  2237               	addwfc	dtoa@n+1,f,c
  7797  005BB4  2238               	addwfc	dtoa@n+2,f,c
  7798  005BB6  2239               	addwfc	dtoa@n+3,f,c
  7799  005BB8  223A               	addwfc	dtoa@n+4,f,c
  7800  005BBA  223B               	addwfc	dtoa@n+5,f,c
  7801  005BBC  223C               	addwfc	dtoa@n+6,f,c
  7802  005BBE  223D               	addwfc	dtoa@n+7,f,c
  7803  005BC0                     l4030:
  7804                           
  7805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7806  005BC0  0100               	movlb	0	; () banked
  7807  005BC2  AFD3               	btfss	(_prec+1)& (0+255),7,b
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7811  005BC4  925E               	bcf	_flags,1,c
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7815  005BC6  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  7816  005BC8  D005               	goto	u4650
  7817  005BCA  51D3               	movf	(_prec+1)& (0+255),w,b
  7818  005BCC  E108               	bnz	l173
  7819  005BCE  05D2               	decf	_prec& (0+255),w,b
  7820  005BD0  B0D8               	btfsc	status,0,c
  7821  005BD2  D005               	goto	l173
  7822  005BD4                     u4650:
  7823                           
  7824                           ; BSR set to: 0
  7825  005BD4  0E00               	movlw	0
  7826  005BD6  6E31               	movwf	dtoa@p+1,c
  7827  005BD8  0E01               	movlw	1
  7828  005BDA  6E30               	movwf	dtoa@p,c
  7829  005BDC  D004               	goto	l175
  7830  005BDE                     l173:
  7831                           
  7832                           ; BSR set to: 0
  7833  005BDE  C0D2  F030         	movff	_prec,dtoa@p
  7834  005BE2  C0D3  F031         	movff	_prec+1,dtoa@p+1
  7835  005BE6                     l175:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7839  005BE6  C0D0  F032         	movff	_width,dtoa@w
  7840  005BEA  C0D1  F033         	movff	_width+1,dtoa@w+1
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7844  005BEE  5034               	movf	dtoa@s,w,c
  7845  005BF0  1035               	iorwf	dtoa@s+1,w,c
  7846  005BF2  A4D8               	btfss	status,2,c
  7847  005BF4  D002               	goto	u4670
  7848                           
  7849                           ; BSR set to: 0
  7850  005BF6  A45E               	btfss	_flags,2,c
  7851  005BF8  D003               	goto	l4044
  7852  005BFA                     u4670:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7856  005BFA  0632               	decf	dtoa@w,f,c
  7857  005BFC  A0D8               	btfss	status,0,c
  7858  005BFE  0633               	decf	dtoa@w+1,f,c
  7859  005C00                     l4044:
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7863  005C00  0E00               	movlw	0
  7864  005C02  6E3F               	movwf	dtoa@i+1,c
  7865  005C04  0E4F               	movlw	79
  7866  005C06  6E3E               	movwf	dtoa@i,c
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7870  005C08  0E00               	movlw	0
  7871  005C0A  0101               	movlb	1	; () banked
  7872  005C0C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7873                           
  7874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7875  005C0E  D07C               	goto	l4058
  7876  005C10                     l4048:
  7877                           
  7878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7879  005C10  063E               	decf	dtoa@i,f,c
  7880  005C12  A0D8               	btfss	status,0,c
  7881  005C14  063F               	decf	dtoa@i+1,f,c
  7882                           
  7883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7884  005C16  0E00               	movlw	low _dbuf
  7885  005C18  243E               	addwf	dtoa@i,w,c
  7886  005C1A  6ED9               	movwf	fsr2l,c
  7887  005C1C  0E01               	movlw	high _dbuf
  7888  005C1E  203F               	addwfc	dtoa@i+1,w,c
  7889  005C20  6EDA               	movwf	fsr2h,c
  7890  005C22  C036  F001         	movff	dtoa@n,___aomod@dividend
  7891  005C26  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7892  005C2A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7893  005C2E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7894  005C32  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7895  005C36  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7896  005C3A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7897  005C3E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7898  005C42  0E0A               	movlw	10
  7899  005C44  6E09               	movwf	___aomod@divisor,c
  7900  005C46  0E00               	movlw	0
  7901  005C48  6E0A               	movwf	___aomod@divisor+1,c
  7902  005C4A  0E00               	movlw	0
  7903  005C4C  6E0B               	movwf	___aomod@divisor+2,c
  7904  005C4E  0E00               	movlw	0
  7905  005C50  6E0C               	movwf	___aomod@divisor+3,c
  7906  005C52  0E00               	movlw	0
  7907  005C54  6E0D               	movwf	___aomod@divisor+4,c
  7908  005C56  0E00               	movlw	0
  7909  005C58  6E0E               	movwf	___aomod@divisor+5,c
  7910  005C5A  0E00               	movlw	0
  7911  005C5C  6E0F               	movwf	___aomod@divisor+6,c
  7912  005C5E  0E00               	movlw	0
  7913  005C60  6E10               	movwf	___aomod@divisor+7,c
  7914  005C62  ECD0  F029         	call	___aomod	;wreg free
  7915  005C66  C001  F026         	movff	?___aomod,??_dtoa
  7916  005C6A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7917  005C6E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7918  005C72  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7919  005C76  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7920  005C7A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7921  005C7E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7922  005C82  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7923  005C86  C026  F013         	movff	??_dtoa,abs@a
  7924  005C8A  C028  F014         	movff	??_dtoa+2,abs@a+1
  7925  005C8E  EC5B  F024         	call	_abs	;wreg free
  7926  005C92  5013               	movf	?_abs,w,c
  7927  005C94  0F30               	addlw	48
  7928  005C96  6EDF               	movwf	indf2,c
  7929                           
  7930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7931  005C98  0630               	decf	dtoa@p,f,c
  7932  005C9A  A0D8               	btfss	status,0,c
  7933  005C9C  0631               	decf	dtoa@p+1,f,c
  7934                           
  7935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7936  005C9E  0632               	decf	dtoa@w,f,c
  7937  005CA0  A0D8               	btfss	status,0,c
  7938  005CA2  0633               	decf	dtoa@w+1,f,c
  7939                           
  7940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7941  005CA4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7942  005CA8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7943  005CAC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7944  005CB0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7945  005CB4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7946  005CB8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7947  005CBC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7948  005CC0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7949  005CC4  0E0A               	movlw	10
  7950  005CC6  6E09               	movwf	___aodiv@divisor,c
  7951  005CC8  0E00               	movlw	0
  7952  005CCA  6E0A               	movwf	___aodiv@divisor+1,c
  7953  005CCC  0E00               	movlw	0
  7954  005CCE  6E0B               	movwf	___aodiv@divisor+2,c
  7955  005CD0  0E00               	movlw	0
  7956  005CD2  6E0C               	movwf	___aodiv@divisor+3,c
  7957  005CD4  0E00               	movlw	0
  7958  005CD6  6E0D               	movwf	___aodiv@divisor+4,c
  7959  005CD8  0E00               	movlw	0
  7960  005CDA  6E0E               	movwf	___aodiv@divisor+5,c
  7961  005CDC  0E00               	movlw	0
  7962  005CDE  6E0F               	movwf	___aodiv@divisor+6,c
  7963  005CE0  0E00               	movlw	0
  7964  005CE2  6E10               	movwf	___aodiv@divisor+7,c
  7965  005CE4  EC36  F02C         	call	___aodiv	;wreg free
  7966  005CE8  C001  F036         	movff	?___aodiv,dtoa@n
  7967  005CEC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7968  005CF0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7969  005CF4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7970  005CF8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7971  005CFC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7972  005D00  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7973  005D04  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7974  005D08                     l4058:
  7975                           
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7977  005D08  BE3F               	btfsc	dtoa@i+1,7,c
  7978  005D0A  D01F               	goto	u4720
  7979  005D0C  503F               	movf	dtoa@i+1,w,c
  7980  005D0E  E103               	bnz	u4680
  7981  005D10  043E               	decf	dtoa@i,w,c
  7982  005D12  A0D8               	btfss	status,0,c
  7983  005D14  D01A               	goto	u4720
  7984  005D16                     u4680:
  7985  005D16  5036               	movf	dtoa@n,w,c
  7986  005D18  1037               	iorwf	dtoa@n+1,w,c
  7987  005D1A  1038               	iorwf	dtoa@n+2,w,c
  7988  005D1C  1039               	iorwf	dtoa@n+3,w,c
  7989  005D1E  103A               	iorwf	dtoa@n+4,w,c
  7990  005D20  103B               	iorwf	dtoa@n+5,w,c
  7991  005D22  103C               	iorwf	dtoa@n+6,w,c
  7992  005D24  103D               	iorwf	dtoa@n+7,w,c
  7993  005D26  A4D8               	btfss	status,2,c
  7994  005D28  D773               	goto	l4048
  7995  005D2A  BE31               	btfsc	dtoa@p+1,7,c
  7996  005D2C  D005               	goto	u4700
  7997  005D2E  5031               	movf	dtoa@p+1,w,c
  7998  005D30  E102               	bnz	u4701
  7999  005D32  0430               	decf	dtoa@p,w,c
  8000  005D34  B0D8               	btfsc	status,0,c
  8001  005D36                     u4701:
  8002  005D36  D76C               	goto	l4048
  8003  005D38                     u4700:
  8004  005D38  BE33               	btfsc	dtoa@w+1,7,c
  8005  005D3A  D007               	goto	u4720
  8006  005D3C  5033               	movf	dtoa@w+1,w,c
  8007  005D3E  E103               	bnz	u4710
  8008  005D40  0432               	decf	dtoa@w,w,c
  8009  005D42  A0D8               	btfss	status,0,c
  8010  005D44  D002               	goto	u4720
  8011  005D46                     u4710:
  8012  005D46  B25E               	btfsc	_flags,1,c
  8013  005D48  D763               	goto	l4048
  8014  005D4A                     u4720:
  8015                           
  8016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8017  005D4A  5034               	movf	dtoa@s,w,c
  8018  005D4C  1035               	iorwf	dtoa@s+1,w,c
  8019  005D4E  A4D8               	btfss	status,2,c
  8020  005D50  D002               	goto	u4740
  8021  005D52  A45E               	btfss	_flags,2,c
  8022  005D54  D017               	goto	l4082
  8023  005D56                     u4740:
  8024                           
  8025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8026  005D56  063E               	decf	dtoa@i,f,c
  8027  005D58  A0D8               	btfss	status,0,c
  8028  005D5A  063F               	decf	dtoa@i+1,f,c
  8029                           
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8031  005D5C  5034               	movf	dtoa@s,w,c
  8032  005D5E  1035               	iorwf	dtoa@s+1,w,c
  8033  005D60  A4D8               	btfss	status,2,c
  8034  005D62  D004               	goto	l4078
  8035  005D64  0E00               	movlw	0
  8036  005D66  6E2F               	movwf	_dtoa$415+1,c
  8037  005D68  0E2B               	movlw	43
  8038  005D6A  D003               	goto	L14
  8039  005D6C                     l4078:
  8040  005D6C  0E00               	movlw	0
  8041  005D6E  6E2F               	movwf	_dtoa$415+1,c
  8042  005D70  0E2D               	movlw	45
  8043  005D72                     L14:
  8044  005D72  6E2E               	movwf	_dtoa$415,c
  8045  005D74  0E00               	movlw	low _dbuf
  8046  005D76  243E               	addwf	dtoa@i,w,c
  8047  005D78  6ED9               	movwf	fsr2l,c
  8048  005D7A  0E01               	movlw	high _dbuf
  8049  005D7C  203F               	addwfc	dtoa@i+1,w,c
  8050  005D7E  6EDA               	movwf	fsr2h,c
  8051  005D80  C02E  FFDF         	movff	_dtoa$415,indf2
  8052  005D84                     l4082:
  8053                           
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8055  005D84  C01C  F011         	movff	dtoa@fp,pad@fp
  8056  005D88  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8057  005D8C  0E00               	movlw	low _dbuf
  8058  005D8E  243E               	addwf	dtoa@i,w,c
  8059  005D90  6E13               	movwf	pad@buf,c
  8060  005D92  0E01               	movlw	high _dbuf
  8061  005D94  203F               	addwfc	dtoa@i+1,w,c
  8062  005D96  6E14               	movwf	pad@buf+1,c
  8063  005D98  C032  F015         	movff	dtoa@w,pad@p
  8064  005D9C  C033  F016         	movff	dtoa@w+1,pad@p+1
  8065  005DA0  ECA6  F026         	call	_pad	;wreg free
  8066  005DA4  C011  F01C         	movff	?_pad,?_dtoa
  8067  005DA8  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8068  005DAC  0012               	return		;funcret
  8069  005DAE                     __end_of_dtoa:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function _pad *****************
  8073 ;; Defined at:
  8074 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8077 ;;		 -> sprintf@f(6), 
  8078 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8079 ;;		 -> dbuf(80), 
  8080 ;;  p               2   20[COMRAM] int 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  w               2   25[COMRAM] int 
  8083 ;;  i               2   23[COMRAM] int 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  2   16[COMRAM] int 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8093 ;;      Params:         6       0       0       0       0       0       0       0       0
  8094 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8095 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8096 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8097 ;;Total ram usage:       11 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    3
  8100 ;; This function calls:
  8101 ;;		_fputc
  8102 ;;		_fputs
  8103 ;;		_strlen
  8104 ;; This function is called by:
  8105 ;;		_dtoa
  8106 ;;		_efgtoa
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text22
  8111  004D4C                     __ptext22:
  8112                           	opt callstack 0
  8113  004D4C                     _pad:
  8114                           	opt callstack 23
  8115                           
  8116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8117                           
  8118                           ;incstack = 0
  8119  004D4C  A05E               	btfss	_flags,0,c
  8120  004D4E  D00A               	goto	l3392
  8121                           
  8122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8123  004D50  C013  F00A         	movff	pad@buf,fputs@s
  8124  004D54  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8125  004D58  C011  F00C         	movff	pad@fp,fputs@fp
  8126  004D5C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8127  004D60  EC74  F024         	call	_fputs	;wreg free
  8128  004D64                     l3392:
  8129                           
  8130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8131  004D64  BE16               	btfsc	pad@p+1,7,c
  8132  004D66  D005               	goto	l3396
  8133  004D68  C015  F01A         	movff	pad@p,pad@w
  8134  004D6C  C016  F01B         	movff	pad@p+1,pad@w+1
  8135  004D70  D004               	goto	l162
  8136  004D72                     l3396:
  8137  004D72  0E00               	movlw	0
  8138  004D74  6E1B               	movwf	pad@w+1,c
  8139  004D76  0E00               	movlw	0
  8140  004D78  6E1A               	movwf	pad@w,c
  8141  004D7A                     l162:
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8144  004D7A  0E00               	movlw	0
  8145  004D7C  6E19               	movwf	pad@i+1,c
  8146  004D7E  0E00               	movlw	0
  8147  004D80  6E18               	movwf	pad@i,c
  8148                           
  8149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8150  004D82  D00C               	goto	l3402
  8151  004D84                     l3398:
  8152                           
  8153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8154  004D84  0E00               	movlw	0
  8155  004D86  6E02               	movwf	fputc@c+1,c
  8156  004D88  0E20               	movlw	32
  8157  004D8A  6E01               	movwf	fputc@c,c
  8158  004D8C  C011  F003         	movff	pad@fp,fputc@fp
  8159  004D90  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8160  004D94  ECF1  F026         	call	_fputc	;wreg free
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8163  004D98  4A18               	infsnz	pad@i,f,c
  8164  004D9A  2A19               	incf	pad@i+1,f,c
  8165  004D9C                     l3402:
  8166                           
  8167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8168  004D9C  501A               	movf	pad@w,w,c
  8169  004D9E  5C18               	subwf	pad@i,w,c
  8170  004DA0  5019               	movf	pad@i+1,w,c
  8171  004DA2  0A80               	xorlw	128
  8172  004DA4  6E17               	movwf	??_pad& (0+255),c
  8173  004DA6  501B               	movf	pad@w+1,w,c
  8174  004DA8  0A80               	xorlw	128
  8175  004DAA  5817               	subwfb	??_pad& (0+255),w,c
  8176  004DAC  A0D8               	btfss	status,0,c
  8177  004DAE  D7EA               	goto	l3398
  8178                           
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8180  004DB0  B05E               	btfsc	_flags,0,c
  8181  004DB2  D00A               	goto	l3406
  8182                           
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8184  004DB4  C013  F00A         	movff	pad@buf,fputs@s
  8185  004DB8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8186  004DBC  C011  F00C         	movff	pad@fp,fputs@fp
  8187  004DC0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8188  004DC4  EC74  F024         	call	_fputs	;wreg free
  8189  004DC8                     l3406:
  8190                           
  8191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8192  004DC8  C013  F001         	movff	pad@buf,strlen@s
  8193  004DCC  C014  F002         	movff	pad@buf+1,strlen@s+1
  8194  004DD0  ECFF  F023         	call	_strlen	;wreg free
  8195  004DD4  501A               	movf	pad@w,w,c
  8196  004DD6  2401               	addwf	?_strlen,w,c
  8197  004DD8  6E11               	movwf	?_pad,c
  8198  004DDA  501B               	movf	pad@w+1,w,c
  8199  004DDC  2002               	addwfc	?_strlen+1,w,c
  8200  004DDE  6E12               	movwf	?_pad+1,c
  8201  004DE0  0012               	return		;funcret
  8202  004DE2                     __end_of_pad:
  8203                           	opt callstack 0
  8204                           
  8205 ;; *************** function _strlen *****************
  8206 ;; Defined at:
  8207 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8210 ;;		 -> dbuf(80), 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8213 ;;		 -> dbuf(80), 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2    0[COMRAM] unsigned int 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8223 ;;      Params:         2       0       0       0       0       0       0       0       0
  8224 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8226 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8227 ;;Total ram usage:        4 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_pad
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text23
  8237  0047FE                     __ptext23:
  8238                           	opt callstack 0
  8239  0047FE                     _strlen:
  8240                           	opt callstack 25
  8241                           
  8242                           ;incstack = 0
  8243  0047FE  C001  F003         	movff	strlen@s,strlen@a
  8244  004802  C002  F004         	movff	strlen@s+1,strlen@a+1
  8245  004806  D002               	goto	l3176
  8246  004808                     l3174:
  8247  004808  4A01               	infsnz	strlen@s,f,c
  8248  00480A  2A02               	incf	strlen@s+1,f,c
  8249  00480C                     l3176:
  8250  00480C  C001  FFD9         	movff	strlen@s,fsr2l
  8251  004810  C002  FFDA         	movff	strlen@s+1,fsr2h
  8252  004814  50DF               	movf	indf2,w,c
  8253  004816  A4D8               	btfss	status,2,c
  8254  004818  D7F7               	goto	l3174
  8255  00481A  5003               	movf	strlen@a,w,c
  8256  00481C  5C01               	subwf	strlen@s,w,c
  8257  00481E  6E01               	movwf	?_strlen,c
  8258  004820  5004               	movf	strlen@a+1,w,c
  8259  004822  5802               	subwfb	strlen@s+1,w,c
  8260  004824  6E02               	movwf	?_strlen+1,c
  8261  004826  0012               	return		;funcret
  8262  004828                     __end_of_strlen:
  8263                           	opt callstack 0
  8264                           
  8265 ;; *************** function _fputs *****************
  8266 ;; Defined at:
  8267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8270 ;;		 -> dbuf(80), 
  8271 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8272 ;;		 -> sprintf@f(6), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  i               2   14[COMRAM] int 
  8275 ;;  c               1   13[COMRAM] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  2    9[COMRAM] int 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8285 ;;      Params:         4       0       0       0       0       0       0       0       0
  8286 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8288 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8289 ;;Total ram usage:        7 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    2
  8292 ;; This function calls:
  8293 ;;		_fputc
  8294 ;; This function is called by:
  8295 ;;		_pad
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text24
  8300  0048E8                     __ptext24:
  8301                           	opt callstack 0
  8302  0048E8                     _fputs:
  8303                           	opt callstack 23
  8304                           
  8305                           ;incstack = 0
  8306  0048E8  0E00               	movlw	0
  8307  0048EA  6E10               	movwf	fputs@i+1,c
  8308  0048EC  0E00               	movlw	0
  8309  0048EE  6E0F               	movwf	fputs@i,c
  8310  0048F0  D00B               	goto	l3170
  8311  0048F2                     l3166:
  8312  0048F2  C00E  F001         	movff	fputs@c,fputc@c
  8313  0048F6  6A02               	clrf	fputc@c+1,c
  8314  0048F8  C00C  F003         	movff	fputs@fp,fputc@fp
  8315  0048FC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8316  004900  ECF1  F026         	call	_fputc	;wreg free
  8317  004904  4A0F               	infsnz	fputs@i,f,c
  8318  004906  2A10               	incf	fputs@i+1,f,c
  8319  004908                     l3170:
  8320  004908  500F               	movf	fputs@i,w,c
  8321  00490A  240A               	addwf	fputs@s,w,c
  8322  00490C  6ED9               	movwf	fsr2l,c
  8323  00490E  5010               	movf	fputs@i+1,w,c
  8324  004910  200B               	addwfc	fputs@s+1,w,c
  8325  004912  6EDA               	movwf	fsr2h,c
  8326  004914  50DF               	movf	indf2,w,c
  8327  004916  6E0E               	movwf	fputs@c,c
  8328  004918  500E               	movf	fputs@c,w,c
  8329  00491A  B4D8               	btfsc	status,2,c
  8330  00491C  0012               	return	
  8331  00491E  D7E9               	goto	l3166
  8332  004920                     __end_of_fputs:
  8333                           	opt callstack 0
  8334                           
  8335 ;; *************** function _fputc *****************
  8336 ;; Defined at:
  8337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  c               2    0[COMRAM] int 
  8340 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8341 ;;		 -> sprintf@f(6), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2    0[COMRAM] int 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8353 ;;      Params:         4       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:        9 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    1
  8360 ;; This function calls:
  8361 ;;		_putch
  8362 ;; This function is called by:
  8363 ;;		_pad
  8364 ;;		_vfpfcnvrt
  8365 ;;		_fputs
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text25
  8370  004DE2                     __ptext25:
  8371                           	opt callstack 0
  8372  004DE2                     _fputc:
  8373                           	opt callstack 26
  8374                           
  8375                           ;incstack = 0
  8376  004DE2  5003               	movf	fputc@fp,w,c
  8377  004DE4  1004               	iorwf	fputc@fp+1,w,c
  8378  004DE6  B4D8               	btfsc	status,2,c
  8379  004DE8  D004               	goto	u3010
  8380  004DEA  5003               	movf	fputc@fp,w,c
  8381  004DEC  1004               	iorwf	fputc@fp+1,w,c
  8382  004DEE  A4D8               	btfss	status,2,c
  8383  004DF0  D004               	goto	l3156
  8384  004DF2                     u3010:
  8385  004DF2  5001               	movf	fputc@c,w,c
  8386  004DF4  ECD8  F023         	call	_putch
  8387  004DF8  0012               	return	
  8388  004DFA                     l3156:
  8389  004DFA  EE20 F004          	lfsr	2,4
  8390  004DFE  5003               	movf	fputc@fp,w,c
  8391  004E00  26D9               	addwf	fsr2l,f,c
  8392  004E02  5004               	movf	fputc@fp+1,w,c
  8393  004E04  22DA               	addwfc	fsr2h,f,c
  8394  004E06  50DE               	movf	postinc2,w,c
  8395  004E08  10DE               	iorwf	postinc2,w,c
  8396  004E0A  B4D8               	btfsc	status,2,c
  8397  004E0C  D016               	goto	u3030
  8398  004E0E  EE20 F004          	lfsr	2,4
  8399  004E12  5003               	movf	fputc@fp,w,c
  8400  004E14  26D9               	addwf	fsr2l,f,c
  8401  004E16  5004               	movf	fputc@fp+1,w,c
  8402  004E18  22DA               	addwfc	fsr2h,f,c
  8403  004E1A  EE10 F002          	lfsr	1,2
  8404  004E1E  5003               	movf	fputc@fp,w,c
  8405  004E20  26E1               	addwf	fsr1l,f,c
  8406  004E22  5004               	movf	fputc@fp+1,w,c
  8407  004E24  22E2               	addwfc	fsr1h,f,c
  8408  004E26  50DE               	movf	postinc2,w,c
  8409  004E28  5CE6               	subwf	postinc1,w,c
  8410  004E2A  50E6               	movf	postinc1,w,c
  8411  004E2C  0A80               	xorlw	128
  8412  004E2E  6E09               	movwf	(??_fputc+4)& (0+255),c
  8413  004E30  50DE               	movf	postinc2,w,c
  8414  004E32  0A80               	xorlw	128
  8415  004E34  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  8416  004E36  B0D8               	btfsc	status,0,c
  8417  004E38  0012               	return	
  8418  004E3A                     u3030:
  8419  004E3A  EE20 F002          	lfsr	2,2
  8420  004E3E  5003               	movf	fputc@fp,w,c
  8421  004E40  26D9               	addwf	fsr2l,f,c
  8422  004E42  5004               	movf	fputc@fp+1,w,c
  8423  004E44  22DA               	addwfc	fsr2h,f,c
  8424  004E46  CFDE F005          	movff	postinc2,??_fputc
  8425  004E4A  CFDD F006          	movff	postdec2,??_fputc+1
  8426  004E4E  C003  FFD9         	movff	fputc@fp,fsr2l
  8427  004E52  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8428  004E56  CFDE F007          	movff	postinc2,??_fputc+2
  8429  004E5A  CFDD F008          	movff	postdec2,??_fputc+3
  8430  004E5E  5005               	movf	??_fputc,w,c
  8431  004E60  2407               	addwf	??_fputc+2,w,c
  8432  004E62  6ED9               	movwf	fsr2l,c
  8433  004E64  5006               	movf	??_fputc+1,w,c
  8434  004E66  2008               	addwfc	??_fputc+3,w,c
  8435  004E68  6EDA               	movwf	fsr2h,c
  8436  004E6A  C001  FFDF         	movff	fputc@c,indf2
  8437  004E6E  EE20 F002          	lfsr	2,2
  8438  004E72  5003               	movf	fputc@fp,w,c
  8439  004E74  26D9               	addwf	fsr2l,f,c
  8440  004E76  5004               	movf	fputc@fp+1,w,c
  8441  004E78  22DA               	addwfc	fsr2h,f,c
  8442  004E7A  2ADE               	incf	postinc2,f,c
  8443  004E7C  0E00               	movlw	0
  8444  004E7E  22DD               	addwfc	postdec2,f,c
  8445  004E80  0012               	return		;funcret
  8446  004E82                     __end_of_fputc:
  8447                           	opt callstack 0
  8448                           
  8449 ;; *************** function _putch *****************
  8450 ;; Defined at:
  8451 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  c               1    wreg     unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  c               1    0[COMRAM] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8468 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8469 ;;Total ram usage:        0 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_fputc
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text26
  8479  0047B0                     __ptext26:
  8480                           	opt callstack 0
  8481  0047B0                     _putch:
  8482                           	opt callstack 26
  8483                           
  8484                           ;incstack = 0
  8485  0047B0  0012               	return		;funcret
  8486  0047B2                     __end_of_putch:
  8487                           	opt callstack 0
  8488                           
  8489 ;; *************** function _abs *****************
  8490 ;; Defined at:
  8491 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  a               2   18[COMRAM] int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  2   18[COMRAM] int 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8505 ;;      Params:         2       0       0       0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8507 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8508 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8509 ;;Total ram usage:        4 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_dtoa
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text27
  8519  0048B6                     __ptext27:
  8520                           	opt callstack 0
  8521  0048B6                     _abs:
  8522                           	opt callstack 26
  8523                           
  8524                           ;incstack = 0
  8525  0048B6  BE14               	btfsc	abs@a+1,7,c
  8526  0048B8  D005               	goto	u3510
  8527  0048BA  5014               	movf	abs@a+1,w,c
  8528  0048BC  E110               	bnz	l1029
  8529  0048BE  0413               	decf	abs@a,w,c
  8530  0048C0  B0D8               	btfsc	status,0,c
  8531  0048C2  D00D               	goto	l1029
  8532  0048C4                     u3510:
  8533  0048C4  C013  F015         	movff	abs@a,??_abs
  8534  0048C8  C014  F016         	movff	abs@a+1,??_abs+1
  8535  0048CC  1E15               	comf	??_abs,f,c
  8536  0048CE  1E16               	comf	??_abs+1,f,c
  8537  0048D0  4A15               	infsnz	??_abs,f,c
  8538  0048D2  2A16               	incf	??_abs+1,f,c
  8539  0048D4  C015  F013         	movff	??_abs,?_abs
  8540  0048D8  C016  F014         	movff	??_abs+1,?_abs+1
  8541  0048DC  0012               	return	
  8542  0048DE                     l1029:
  8543  0048DE  C013  F013         	movff	abs@a,?_abs
  8544  0048E2  C014  F014         	movff	abs@a+1,?_abs+1
  8545  0048E6  0012               	return		;funcret
  8546  0048E8                     __end_of_abs:
  8547                           	opt callstack 0
  8548                           
  8549 ;; *************** function ___aomod *****************
  8550 ;; Defined at:
  8551 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  dividend        8    0[COMRAM] long long 
  8554 ;;  divisor         8    8[COMRAM] long long 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  sign            1   17[COMRAM] unsigned char 
  8557 ;;  counter         1   16[COMRAM] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  8    0[COMRAM] long long 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8567 ;;      Params:        16       0       0       0       0       0       0       0       0
  8568 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8570 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8571 ;;Total ram usage:       18 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_dtoa
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text28
  8581  0053A0                     __ptext28:
  8582                           	opt callstack 0
  8583  0053A0                     ___aomod:
  8584                           	opt callstack 26
  8585                           
  8586                           ;incstack = 0
  8587  0053A0  0E00               	movlw	0
  8588  0053A2  6E12               	movwf	___aomod@sign,c
  8589  0053A4  AE08               	btfss	___aomod@dividend+7,7,c
  8590  0053A6  D012               	goto	l3540
  8591  0053A8  1E08               	comf	___aomod@dividend+7,f,c
  8592  0053AA  1E07               	comf	___aomod@dividend+6,f,c
  8593  0053AC  1E06               	comf	___aomod@dividend+5,f,c
  8594  0053AE  1E05               	comf	___aomod@dividend+4,f,c
  8595  0053B0  1E04               	comf	___aomod@dividend+3,f,c
  8596  0053B2  1E03               	comf	___aomod@dividend+2,f,c
  8597  0053B4  1E02               	comf	___aomod@dividend+1,f,c
  8598  0053B6  6C01               	negf	___aomod@dividend,c
  8599  0053B8  0E00               	movlw	0
  8600  0053BA  2202               	addwfc	___aomod@dividend+1,f,c
  8601  0053BC  2203               	addwfc	___aomod@dividend+2,f,c
  8602  0053BE  2204               	addwfc	___aomod@dividend+3,f,c
  8603  0053C0  2205               	addwfc	___aomod@dividend+4,f,c
  8604  0053C2  2206               	addwfc	___aomod@dividend+5,f,c
  8605  0053C4  2207               	addwfc	___aomod@dividend+6,f,c
  8606  0053C6  2208               	addwfc	___aomod@dividend+7,f,c
  8607  0053C8  0E01               	movlw	1
  8608  0053CA  6E12               	movwf	___aomod@sign,c
  8609  0053CC                     l3540:
  8610  0053CC  AE10               	btfss	___aomod@divisor+7,7,c
  8611  0053CE  D010               	goto	l3544
  8612  0053D0  1E10               	comf	___aomod@divisor+7,f,c
  8613  0053D2  1E0F               	comf	___aomod@divisor+6,f,c
  8614  0053D4  1E0E               	comf	___aomod@divisor+5,f,c
  8615  0053D6  1E0D               	comf	___aomod@divisor+4,f,c
  8616  0053D8  1E0C               	comf	___aomod@divisor+3,f,c
  8617  0053DA  1E0B               	comf	___aomod@divisor+2,f,c
  8618  0053DC  1E0A               	comf	___aomod@divisor+1,f,c
  8619  0053DE  6C09               	negf	___aomod@divisor,c
  8620  0053E0  0E00               	movlw	0
  8621  0053E2  220A               	addwfc	___aomod@divisor+1,f,c
  8622  0053E4  220B               	addwfc	___aomod@divisor+2,f,c
  8623  0053E6  220C               	addwfc	___aomod@divisor+3,f,c
  8624  0053E8  220D               	addwfc	___aomod@divisor+4,f,c
  8625  0053EA  220E               	addwfc	___aomod@divisor+5,f,c
  8626  0053EC  220F               	addwfc	___aomod@divisor+6,f,c
  8627  0053EE  2210               	addwfc	___aomod@divisor+7,f,c
  8628  0053F0                     l3544:
  8629  0053F0  5009               	movf	___aomod@divisor,w,c
  8630  0053F2  100A               	iorwf	___aomod@divisor+1,w,c
  8631  0053F4  100B               	iorwf	___aomod@divisor+2,w,c
  8632  0053F6  100C               	iorwf	___aomod@divisor+3,w,c
  8633  0053F8  100D               	iorwf	___aomod@divisor+4,w,c
  8634  0053FA  100E               	iorwf	___aomod@divisor+5,w,c
  8635  0053FC  100F               	iorwf	___aomod@divisor+6,w,c
  8636  0053FE  1010               	iorwf	___aomod@divisor+7,w,c
  8637  005400  B4D8               	btfsc	status,2,c
  8638  005402  D03C               	goto	l3560
  8639  005404  0E01               	movlw	1
  8640  005406  6E11               	movwf	___aomod@counter,c
  8641  005408  D00A               	goto	l3550
  8642  00540A                     l3548:
  8643  00540A  90D8               	bcf	status,0,c
  8644  00540C  3609               	rlcf	___aomod@divisor,f,c
  8645  00540E  360A               	rlcf	___aomod@divisor+1,f,c
  8646  005410  360B               	rlcf	___aomod@divisor+2,f,c
  8647  005412  360C               	rlcf	___aomod@divisor+3,f,c
  8648  005414  360D               	rlcf	___aomod@divisor+4,f,c
  8649  005416  360E               	rlcf	___aomod@divisor+5,f,c
  8650  005418  360F               	rlcf	___aomod@divisor+6,f,c
  8651  00541A  3610               	rlcf	___aomod@divisor+7,f,c
  8652  00541C  2A11               	incf	___aomod@counter,f,c
  8653  00541E                     l3550:
  8654  00541E  AE10               	btfss	___aomod@divisor+7,7,c
  8655  005420  D7F4               	goto	l3548
  8656  005422                     u3860:
  8657  005422  5009               	movf	___aomod@divisor,w,c
  8658  005424  5C01               	subwf	___aomod@dividend,w,c
  8659  005426  500A               	movf	___aomod@divisor+1,w,c
  8660  005428  5802               	subwfb	___aomod@dividend+1,w,c
  8661  00542A  500B               	movf	___aomod@divisor+2,w,c
  8662  00542C  5803               	subwfb	___aomod@dividend+2,w,c
  8663  00542E  500C               	movf	___aomod@divisor+3,w,c
  8664  005430  5804               	subwfb	___aomod@dividend+3,w,c
  8665  005432  500D               	movf	___aomod@divisor+4,w,c
  8666  005434  5805               	subwfb	___aomod@dividend+4,w,c
  8667  005436  500E               	movf	___aomod@divisor+5,w,c
  8668  005438  5806               	subwfb	___aomod@dividend+5,w,c
  8669  00543A  500F               	movf	___aomod@divisor+6,w,c
  8670  00543C  5807               	subwfb	___aomod@dividend+6,w,c
  8671  00543E  5010               	movf	___aomod@divisor+7,w,c
  8672  005440  5808               	subwfb	___aomod@dividend+7,w,c
  8673  005442  A0D8               	btfss	status,0,c
  8674  005444  D010               	goto	l3556
  8675  005446  5009               	movf	___aomod@divisor,w,c
  8676  005448  5E01               	subwf	___aomod@dividend,f,c
  8677  00544A  500A               	movf	___aomod@divisor+1,w,c
  8678  00544C  5A02               	subwfb	___aomod@dividend+1,f,c
  8679  00544E  500B               	movf	___aomod@divisor+2,w,c
  8680  005450  5A03               	subwfb	___aomod@dividend+2,f,c
  8681  005452  500C               	movf	___aomod@divisor+3,w,c
  8682  005454  5A04               	subwfb	___aomod@dividend+3,f,c
  8683  005456  500D               	movf	___aomod@divisor+4,w,c
  8684  005458  5A05               	subwfb	___aomod@dividend+4,f,c
  8685  00545A  500E               	movf	___aomod@divisor+5,w,c
  8686  00545C  5A06               	subwfb	___aomod@dividend+5,f,c
  8687  00545E  500F               	movf	___aomod@divisor+6,w,c
  8688  005460  5A07               	subwfb	___aomod@dividend+6,f,c
  8689  005462  5010               	movf	___aomod@divisor+7,w,c
  8690  005464  5A08               	subwfb	___aomod@dividend+7,f,c
  8691  005466                     l3556:
  8692  005466  90D8               	bcf	status,0,c
  8693  005468  3210               	rrcf	___aomod@divisor+7,f,c
  8694  00546A  320F               	rrcf	___aomod@divisor+6,f,c
  8695  00546C  320E               	rrcf	___aomod@divisor+5,f,c
  8696  00546E  320D               	rrcf	___aomod@divisor+4,f,c
  8697  005470  320C               	rrcf	___aomod@divisor+3,f,c
  8698  005472  320B               	rrcf	___aomod@divisor+2,f,c
  8699  005474  320A               	rrcf	___aomod@divisor+1,f,c
  8700  005476  3209               	rrcf	___aomod@divisor,f,c
  8701  005478  2E11               	decfsz	___aomod@counter,f,c
  8702  00547A  D7D3               	goto	u3860
  8703  00547C                     l3560:
  8704  00547C  5012               	movf	___aomod@sign,w,c
  8705  00547E  B4D8               	btfsc	status,2,c
  8706  005480  D010               	goto	l3564
  8707  005482  1E08               	comf	___aomod@dividend+7,f,c
  8708  005484  1E07               	comf	___aomod@dividend+6,f,c
  8709  005486  1E06               	comf	___aomod@dividend+5,f,c
  8710  005488  1E05               	comf	___aomod@dividend+4,f,c
  8711  00548A  1E04               	comf	___aomod@dividend+3,f,c
  8712  00548C  1E03               	comf	___aomod@dividend+2,f,c
  8713  00548E  1E02               	comf	___aomod@dividend+1,f,c
  8714  005490  6C01               	negf	___aomod@dividend,c
  8715  005492  0E00               	movlw	0
  8716  005494  2202               	addwfc	___aomod@dividend+1,f,c
  8717  005496  2203               	addwfc	___aomod@dividend+2,f,c
  8718  005498  2204               	addwfc	___aomod@dividend+3,f,c
  8719  00549A  2205               	addwfc	___aomod@dividend+4,f,c
  8720  00549C  2206               	addwfc	___aomod@dividend+5,f,c
  8721  00549E  2207               	addwfc	___aomod@dividend+6,f,c
  8722  0054A0  2208               	addwfc	___aomod@dividend+7,f,c
  8723  0054A2                     l3564:
  8724  0054A2  C001  F001         	movff	___aomod@dividend,?___aomod
  8725  0054A6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8726  0054AA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8727  0054AE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8728  0054B2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8729  0054B6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8730  0054BA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8731  0054BE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8732  0054C2  0012               	return		;funcret
  8733  0054C4                     __end_of___aomod:
  8734                           	opt callstack 0
  8735                           
  8736 ;; *************** function ___aodiv *****************
  8737 ;; Defined at:
  8738 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  dividend        8    0[COMRAM] long long 
  8741 ;;  divisor         8    8[COMRAM] long long 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  quotient        8   18[COMRAM] long long 
  8744 ;;  sign            1   17[COMRAM] unsigned char 
  8745 ;;  counter         1   16[COMRAM] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  8    0[COMRAM] long long 
  8748 ;; Registers used:
  8749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8755 ;;      Params:        16       0       0       0       0       0       0       0       0
  8756 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8758 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8759 ;;Total ram usage:       26 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_dtoa
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text29
  8769  00586C                     __ptext29:
  8770                           	opt callstack 0
  8771  00586C                     ___aodiv:
  8772                           	opt callstack 26
  8773                           
  8774                           ;incstack = 0
  8775  00586C  0E00               	movlw	0
  8776  00586E  6E12               	movwf	___aodiv@sign,c
  8777  005870  AE10               	btfss	___aodiv@divisor+7,7,c
  8778  005872  D012               	goto	l3496
  8779  005874  1E10               	comf	___aodiv@divisor+7,f,c
  8780  005876  1E0F               	comf	___aodiv@divisor+6,f,c
  8781  005878  1E0E               	comf	___aodiv@divisor+5,f,c
  8782  00587A  1E0D               	comf	___aodiv@divisor+4,f,c
  8783  00587C  1E0C               	comf	___aodiv@divisor+3,f,c
  8784  00587E  1E0B               	comf	___aodiv@divisor+2,f,c
  8785  005880  1E0A               	comf	___aodiv@divisor+1,f,c
  8786  005882  6C09               	negf	___aodiv@divisor,c
  8787  005884  0E00               	movlw	0
  8788  005886  220A               	addwfc	___aodiv@divisor+1,f,c
  8789  005888  220B               	addwfc	___aodiv@divisor+2,f,c
  8790  00588A  220C               	addwfc	___aodiv@divisor+3,f,c
  8791  00588C  220D               	addwfc	___aodiv@divisor+4,f,c
  8792  00588E  220E               	addwfc	___aodiv@divisor+5,f,c
  8793  005890  220F               	addwfc	___aodiv@divisor+6,f,c
  8794  005892  2210               	addwfc	___aodiv@divisor+7,f,c
  8795  005894  0E01               	movlw	1
  8796  005896  6E12               	movwf	___aodiv@sign,c
  8797  005898                     l3496:
  8798  005898  AE08               	btfss	___aodiv@dividend+7,7,c
  8799  00589A  D012               	goto	l3502
  8800  00589C  1E08               	comf	___aodiv@dividend+7,f,c
  8801  00589E  1E07               	comf	___aodiv@dividend+6,f,c
  8802  0058A0  1E06               	comf	___aodiv@dividend+5,f,c
  8803  0058A2  1E05               	comf	___aodiv@dividend+4,f,c
  8804  0058A4  1E04               	comf	___aodiv@dividend+3,f,c
  8805  0058A6  1E03               	comf	___aodiv@dividend+2,f,c
  8806  0058A8  1E02               	comf	___aodiv@dividend+1,f,c
  8807  0058AA  6C01               	negf	___aodiv@dividend,c
  8808  0058AC  0E00               	movlw	0
  8809  0058AE  2202               	addwfc	___aodiv@dividend+1,f,c
  8810  0058B0  2203               	addwfc	___aodiv@dividend+2,f,c
  8811  0058B2  2204               	addwfc	___aodiv@dividend+3,f,c
  8812  0058B4  2205               	addwfc	___aodiv@dividend+4,f,c
  8813  0058B6  2206               	addwfc	___aodiv@dividend+5,f,c
  8814  0058B8  2207               	addwfc	___aodiv@dividend+6,f,c
  8815  0058BA  2208               	addwfc	___aodiv@dividend+7,f,c
  8816  0058BC  0E01               	movlw	1
  8817  0058BE  1A12               	xorwf	___aodiv@sign,f,c
  8818  0058C0                     l3502:
  8819  0058C0  EE20  F013         	lfsr	2,___aodiv@quotient
  8820  0058C4  0E07               	movlw	7
  8821  0058C6                     u3781:
  8822  0058C6  6ADE               	clrf	postinc2,c
  8823  0058C8  06E8               	decf	wreg,f,c
  8824  0058CA  E2FD               	bc	u3781
  8825  0058CC  5009               	movf	___aodiv@divisor,w,c
  8826  0058CE  100A               	iorwf	___aodiv@divisor+1,w,c
  8827  0058D0  100B               	iorwf	___aodiv@divisor+2,w,c
  8828  0058D2  100C               	iorwf	___aodiv@divisor+3,w,c
  8829  0058D4  100D               	iorwf	___aodiv@divisor+4,w,c
  8830  0058D6  100E               	iorwf	___aodiv@divisor+5,w,c
  8831  0058D8  100F               	iorwf	___aodiv@divisor+6,w,c
  8832  0058DA  1010               	iorwf	___aodiv@divisor+7,w,c
  8833  0058DC  B4D8               	btfsc	status,2,c
  8834  0058DE  D046               	goto	l3524
  8835  0058E0  0E01               	movlw	1
  8836  0058E2  6E11               	movwf	___aodiv@counter,c
  8837  0058E4  D00A               	goto	l3510
  8838  0058E6                     l3508:
  8839  0058E6  90D8               	bcf	status,0,c
  8840  0058E8  3609               	rlcf	___aodiv@divisor,f,c
  8841  0058EA  360A               	rlcf	___aodiv@divisor+1,f,c
  8842  0058EC  360B               	rlcf	___aodiv@divisor+2,f,c
  8843  0058EE  360C               	rlcf	___aodiv@divisor+3,f,c
  8844  0058F0  360D               	rlcf	___aodiv@divisor+4,f,c
  8845  0058F2  360E               	rlcf	___aodiv@divisor+5,f,c
  8846  0058F4  360F               	rlcf	___aodiv@divisor+6,f,c
  8847  0058F6  3610               	rlcf	___aodiv@divisor+7,f,c
  8848  0058F8  2A11               	incf	___aodiv@counter,f,c
  8849  0058FA                     l3510:
  8850  0058FA  AE10               	btfss	___aodiv@divisor+7,7,c
  8851  0058FC  D7F4               	goto	l3508
  8852  0058FE                     u3800:
  8853  0058FE  90D8               	bcf	status,0,c
  8854  005900  3613               	rlcf	___aodiv@quotient,f,c
  8855  005902  3614               	rlcf	___aodiv@quotient+1,f,c
  8856  005904  3615               	rlcf	___aodiv@quotient+2,f,c
  8857  005906  3616               	rlcf	___aodiv@quotient+3,f,c
  8858  005908  3617               	rlcf	___aodiv@quotient+4,f,c
  8859  00590A  3618               	rlcf	___aodiv@quotient+5,f,c
  8860  00590C  3619               	rlcf	___aodiv@quotient+6,f,c
  8861  00590E  361A               	rlcf	___aodiv@quotient+7,f,c
  8862  005910  5009               	movf	___aodiv@divisor,w,c
  8863  005912  5C01               	subwf	___aodiv@dividend,w,c
  8864  005914  500A               	movf	___aodiv@divisor+1,w,c
  8865  005916  5802               	subwfb	___aodiv@dividend+1,w,c
  8866  005918  500B               	movf	___aodiv@divisor+2,w,c
  8867  00591A  5803               	subwfb	___aodiv@dividend+2,w,c
  8868  00591C  500C               	movf	___aodiv@divisor+3,w,c
  8869  00591E  5804               	subwfb	___aodiv@dividend+3,w,c
  8870  005920  500D               	movf	___aodiv@divisor+4,w,c
  8871  005922  5805               	subwfb	___aodiv@dividend+4,w,c
  8872  005924  500E               	movf	___aodiv@divisor+5,w,c
  8873  005926  5806               	subwfb	___aodiv@dividend+5,w,c
  8874  005928  500F               	movf	___aodiv@divisor+6,w,c
  8875  00592A  5807               	subwfb	___aodiv@dividend+6,w,c
  8876  00592C  5010               	movf	___aodiv@divisor+7,w,c
  8877  00592E  5808               	subwfb	___aodiv@dividend+7,w,c
  8878  005930  A0D8               	btfss	status,0,c
  8879  005932  D011               	goto	l3520
  8880  005934  5009               	movf	___aodiv@divisor,w,c
  8881  005936  5E01               	subwf	___aodiv@dividend,f,c
  8882  005938  500A               	movf	___aodiv@divisor+1,w,c
  8883  00593A  5A02               	subwfb	___aodiv@dividend+1,f,c
  8884  00593C  500B               	movf	___aodiv@divisor+2,w,c
  8885  00593E  5A03               	subwfb	___aodiv@dividend+2,f,c
  8886  005940  500C               	movf	___aodiv@divisor+3,w,c
  8887  005942  5A04               	subwfb	___aodiv@dividend+3,f,c
  8888  005944  500D               	movf	___aodiv@divisor+4,w,c
  8889  005946  5A05               	subwfb	___aodiv@dividend+4,f,c
  8890  005948  500E               	movf	___aodiv@divisor+5,w,c
  8891  00594A  5A06               	subwfb	___aodiv@dividend+5,f,c
  8892  00594C  500F               	movf	___aodiv@divisor+6,w,c
  8893  00594E  5A07               	subwfb	___aodiv@dividend+6,f,c
  8894  005950  5010               	movf	___aodiv@divisor+7,w,c
  8895  005952  5A08               	subwfb	___aodiv@dividend+7,f,c
  8896  005954  8013               	bsf	___aodiv@quotient,0,c
  8897  005956                     l3520:
  8898  005956  90D8               	bcf	status,0,c
  8899  005958  3210               	rrcf	___aodiv@divisor+7,f,c
  8900  00595A  320F               	rrcf	___aodiv@divisor+6,f,c
  8901  00595C  320E               	rrcf	___aodiv@divisor+5,f,c
  8902  00595E  320D               	rrcf	___aodiv@divisor+4,f,c
  8903  005960  320C               	rrcf	___aodiv@divisor+3,f,c
  8904  005962  320B               	rrcf	___aodiv@divisor+2,f,c
  8905  005964  320A               	rrcf	___aodiv@divisor+1,f,c
  8906  005966  3209               	rrcf	___aodiv@divisor,f,c
  8907  005968  2E11               	decfsz	___aodiv@counter,f,c
  8908  00596A  D7C9               	goto	u3800
  8909  00596C                     l3524:
  8910  00596C  5012               	movf	___aodiv@sign,w,c
  8911  00596E  B4D8               	btfsc	status,2,c
  8912  005970  D010               	goto	l3528
  8913  005972  1E1A               	comf	___aodiv@quotient+7,f,c
  8914  005974  1E19               	comf	___aodiv@quotient+6,f,c
  8915  005976  1E18               	comf	___aodiv@quotient+5,f,c
  8916  005978  1E17               	comf	___aodiv@quotient+4,f,c
  8917  00597A  1E16               	comf	___aodiv@quotient+3,f,c
  8918  00597C  1E15               	comf	___aodiv@quotient+2,f,c
  8919  00597E  1E14               	comf	___aodiv@quotient+1,f,c
  8920  005980  6C13               	negf	___aodiv@quotient,c
  8921  005982  0E00               	movlw	0
  8922  005984  2214               	addwfc	___aodiv@quotient+1,f,c
  8923  005986  2215               	addwfc	___aodiv@quotient+2,f,c
  8924  005988  2216               	addwfc	___aodiv@quotient+3,f,c
  8925  00598A  2217               	addwfc	___aodiv@quotient+4,f,c
  8926  00598C  2218               	addwfc	___aodiv@quotient+5,f,c
  8927  00598E  2219               	addwfc	___aodiv@quotient+6,f,c
  8928  005990  221A               	addwfc	___aodiv@quotient+7,f,c
  8929  005992                     l3528:
  8930  005992  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8931  005996  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8932  00599A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8933  00599E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8934  0059A2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8935  0059A6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8936  0059AA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8937  0059AE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8938  0059B2  0012               	return		;funcret
  8939  0059B4                     __end_of___aodiv:
  8940                           	opt callstack 0
  8941                           
  8942 ;; *************** function _atoi *****************
  8943 ;; Defined at:
  8944 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8947 ;;		 -> STR_26(11), STR_25(7), STR_24(8), STR_22(12), 
  8948 ;;		 -> STR_21(7), STR_20(8), STR_19(13), STR_18(7), 
  8949 ;;		 -> STR_17(8), STR_16(14), STR_15(7), STR_14(8), 
  8950 ;;		 -> STR_13(12), STR_12(7), STR_11(8), STR_10(16), 
  8951 ;;		 -> STR_6(14), STR_4(14), 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  n               2   20[COMRAM] int 
  8954 ;;  neg             2   13[COMRAM] int 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  2    7[COMRAM] int 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8964 ;;      Params:         2       0       0       0       0       0       0       0       0
  8965 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8966 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8967 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8968 ;;Total ram usage:       15 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    1
  8971 ;; This function calls:
  8972 ;;		___wmul
  8973 ;;		_isdigit
  8974 ;;		_isspace
  8975 ;; This function is called by:
  8976 ;;		_vfpfcnvrt
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text30
  8981  00572C                     __ptext30:
  8982                           	opt callstack 0
  8983  00572C                     _atoi:
  8984                           	opt callstack 26
  8985                           
  8986                           ;incstack = 0
  8987  00572C  0E00               	movlw	0
  8988  00572E  6E16               	movwf	atoi@n+1,c
  8989  005730  0E00               	movlw	0
  8990  005732  6E15               	movwf	atoi@n,c
  8991  005734  0E00               	movlw	0
  8992  005736  6E0F               	movwf	atoi@neg+1,c
  8993  005738  0E00               	movlw	0
  8994  00573A  6E0E               	movwf	atoi@neg,c
  8995  00573C  D002               	goto	l4388
  8996  00573E                     l4386:
  8997  00573E  4A08               	infsnz	atoi@s,f,c
  8998  005740  2A09               	incf	atoi@s+1,f,c
  8999  005742                     l4388:
  9000  005742  0E01               	movlw	1
  9001  005744  6E14               	movwf	_atoi$944,c
  9002  005746  C008  FFF6         	movff	atoi@s,tblptrl
  9003  00574A  C009  FFF7         	movff	atoi@s+1,tblptrh
  9004  00574E                     	if	0	;tblptru may be non-zero
  9005  00574E                     	endif
  9006  00574E                     	if	0	;tblptru may be non-zero
  9007  00574E                     	endif
  9008  00574E  0008               	tblrd		*
  9009  005750  50F5               	movf	tablat,w,c
  9010  005752  0A20               	xorlw	32
  9011  005754  B4D8               	btfsc	status,2,c
  9012  005756  D018               	goto	l4396
  9013  005758  0EF7               	movlw	247
  9014  00575A  6E0A               	movwf	??_atoi& (0+255),c
  9015  00575C  0EFF               	movlw	255
  9016  00575E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  9017  005760  C008  FFF6         	movff	atoi@s,tblptrl
  9018  005764  C009  FFF7         	movff	atoi@s+1,tblptrh
  9019  005768                     	if	0	;tblptru may be non-zero
  9020  005768                     	endif
  9021  005768                     	if	0	;tblptru may be non-zero
  9022  005768                     	endif
  9023  005768  0008               	tblrd		*
  9024  00576A  50F5               	movf	tablat,w,c
  9025  00576C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  9026  00576E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  9027  005770  500A               	movf	??_atoi,w,c
  9028  005772  260C               	addwf	??_atoi+2,f,c
  9029  005774  500B               	movf	??_atoi+1,w,c
  9030  005776  220D               	addwfc	??_atoi+3,f,c
  9031  005778  500D               	movf	??_atoi+3,w,c
  9032  00577A  E104               	bnz	u5290
  9033  00577C  0E05               	movlw	5
  9034  00577E  5C0C               	subwf	??_atoi+2,w,c
  9035  005780  A0D8               	btfss	status,0,c
  9036  005782  D002               	goto	l4396
  9037  005784                     u5290:
  9038  005784  0E00               	movlw	0
  9039  005786  6E14               	movwf	_atoi$944,c
  9040  005788                     l4396:
  9041  005788  C014  F010         	movff	_atoi$944,_atoi$943
  9042  00578C  6A11               	clrf	_atoi$943+1,c
  9043  00578E  5010               	movf	_atoi$943,w,c
  9044  005790  1011               	iorwf	_atoi$943+1,w,c
  9045  005792  B4D8               	btfsc	status,2,c
  9046  005794  D008               	goto	l4406
  9047  005796  D7D3               	goto	l4386
  9048  005798                     l4402:
  9049  005798  0E00               	movlw	0
  9050  00579A  6E0F               	movwf	atoi@neg+1,c
  9051  00579C  0E01               	movlw	1
  9052  00579E  6E0E               	movwf	atoi@neg,c
  9053  0057A0                     l4404:
  9054  0057A0  4A08               	infsnz	atoi@s,f,c
  9055  0057A2  2A09               	incf	atoi@s+1,f,c
  9056  0057A4  D02E               	goto	l4412
  9057  0057A6                     l4406:
  9058  0057A6  C008  FFF6         	movff	atoi@s,tblptrl
  9059  0057AA  C009  FFF7         	movff	atoi@s+1,tblptrh
  9060  0057AE                     	if	0	;tblptru may be non-zero
  9061  0057AE                     	endif
  9062  0057AE                     	if	0	;tblptru may be non-zero
  9063  0057AE                     	endif
  9064  0057AE  0008               	tblrd		*
  9065  0057B0  50F5               	movf	tablat,w,c
  9066  0057B2  6E0A               	movwf	??_atoi& (0+255),c
  9067  0057B4  6A0B               	clrf	(??_atoi+1)& (0+255),c
  9068                           
  9069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9070                           ; Switch size 1, requested type "simple"
  9071                           ; Number of cases is 1, Range of values is 0 to 0
  9072                           ; switch strategies available:
  9073                           ; Name         Instructions Cycles
  9074                           ; simple_byte            4     3 (average)
  9075                           ;	Chosen strategy is simple_byte
  9076  0057B6  500B               	movf	??_atoi+1,w,c
  9077  0057B8  0A00               	xorlw	0	; case 0
  9078  0057BA  A4D8               	btfss	status,2,c
  9079  0057BC  D022               	goto	l4412
  9080                           
  9081                           ; Switch size 1, requested type "simple"
  9082                           ; Number of cases is 2, Range of values is 43 to 45
  9083                           ; switch strategies available:
  9084                           ; Name         Instructions Cycles
  9085                           ; simple_byte            7     4 (average)
  9086                           ;	Chosen strategy is simple_byte
  9087  0057BE  500A               	movf	??_atoi,w,c
  9088  0057C0  0A2B               	xorlw	43	; case 43
  9089  0057C2  B4D8               	btfsc	status,2,c
  9090  0057C4  D7ED               	goto	l4404
  9091  0057C6  0A06               	xorlw	6	; case 45
  9092  0057C8  B4D8               	btfsc	status,2,c
  9093  0057CA  D7E6               	goto	l4402
  9094  0057CC  D01A               	goto	l4412
  9095  0057CE                     l4408:
  9096  0057CE  C015  F001         	movff	atoi@n,___wmul@multiplier
  9097  0057D2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9098  0057D6  0E00               	movlw	0
  9099  0057D8  6E04               	movwf	___wmul@multiplicand+1,c
  9100  0057DA  0E0A               	movlw	10
  9101  0057DC  6E03               	movwf	___wmul@multiplicand,c
  9102  0057DE  ECD9  F023         	call	___wmul	;wreg free
  9103  0057E2  C008  FFF6         	movff	atoi@s,tblptrl
  9104  0057E6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9105  0057EA                     	if	0	;tblptru may be non-zero
  9106  0057EA                     	endif
  9107  0057EA                     	if	0	;tblptru may be non-zero
  9108  0057EA                     	endif
  9109  0057EA  0008               	tblrd		*
  9110  0057EC  50F5               	movf	tablat,w,c
  9111  0057EE  5E01               	subwf	?___wmul,f,c
  9112  0057F0  0E00               	movlw	0
  9113  0057F2  5A02               	subwfb	?___wmul+1,f,c
  9114  0057F4  0E30               	movlw	48
  9115  0057F6  2401               	addwf	?___wmul,w,c
  9116  0057F8  6E15               	movwf	atoi@n,c
  9117  0057FA  0E00               	movlw	0
  9118  0057FC  2002               	addwfc	?___wmul+1,w,c
  9119  0057FE  6E16               	movwf	atoi@n+1,c
  9120  005800  D7CF               	goto	l4404
  9121  005802                     l4412:
  9122  005802  0ED0               	movlw	208
  9123  005804  6E0A               	movwf	??_atoi& (0+255),c
  9124  005806  0EFF               	movlw	255
  9125  005808  6E0B               	movwf	(??_atoi+1)& (0+255),c
  9126  00580A  C008  FFF6         	movff	atoi@s,tblptrl
  9127  00580E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9128  005812                     	if	0	;tblptru may be non-zero
  9129  005812                     	endif
  9130  005812                     	if	0	;tblptru may be non-zero
  9131  005812                     	endif
  9132  005812  0008               	tblrd		*
  9133  005814  50F5               	movf	tablat,w,c
  9134  005816  6E0C               	movwf	(??_atoi+2)& (0+255),c
  9135  005818  6A0D               	clrf	(??_atoi+3)& (0+255),c
  9136  00581A  500A               	movf	??_atoi,w,c
  9137  00581C  260C               	addwf	??_atoi+2,f,c
  9138  00581E  500B               	movf	??_atoi+1,w,c
  9139  005820  220D               	addwfc	??_atoi+3,f,c
  9140  005822  500D               	movf	??_atoi+3,w,c
  9141  005824  E106               	bnz	u5310
  9142  005826  0E0A               	movlw	10
  9143  005828  5C0C               	subwf	??_atoi+2,w,c
  9144  00582A  B0D8               	btfsc	status,0,c
  9145  00582C  D002               	goto	u5310
  9146  00582E  0E01               	movlw	1
  9147  005830  D001               	goto	u5320
  9148  005832                     u5310:
  9149  005832  0E00               	movlw	0
  9150  005834                     u5320:
  9151  005834  6E12               	movwf	_atoi$945,c
  9152  005836  6A13               	clrf	_atoi$945+1,c
  9153  005838  5012               	movf	_atoi$945,w,c
  9154  00583A  1013               	iorwf	_atoi$945+1,w,c
  9155  00583C  A4D8               	btfss	status,2,c
  9156  00583E  D7C7               	goto	l4408
  9157  005840  500E               	movf	atoi@neg,w,c
  9158  005842  100F               	iorwf	atoi@neg+1,w,c
  9159  005844  A4D8               	btfss	status,2,c
  9160  005846  D00D               	goto	l1060
  9161  005848  C015  F00A         	movff	atoi@n,??_atoi
  9162  00584C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9163  005850  1E0A               	comf	??_atoi,f,c
  9164  005852  1E0B               	comf	??_atoi+1,f,c
  9165  005854  4A0A               	infsnz	??_atoi,f,c
  9166  005856  2A0B               	incf	??_atoi+1,f,c
  9167  005858  C00A  F008         	movff	??_atoi,?_atoi
  9168  00585C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9169  005860  0012               	return	
  9170  005862                     l1060:
  9171  005862  C015  F008         	movff	atoi@n,?_atoi
  9172  005866  C016  F009         	movff	atoi@n+1,?_atoi+1
  9173  00586A  0012               	return		;funcret
  9174  00586C                     __end_of_atoi:
  9175                           	opt callstack 0
  9176                           
  9177 ;; *************** function _isspace *****************
  9178 ;; Defined at:
  9179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  c               2    0[COMRAM] int 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  2    0[COMRAM] int 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9193 ;;      Params:         2       0       0       0       0       0       0       0       0
  9194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9195 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9196 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9197 ;;Total ram usage:        7 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_atoi
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text31
  9207  004920                     __ptext31:
  9208                           	opt callstack 0
  9209  004920                     _isspace:
  9210                           	opt callstack 26
  9211                           
  9212                           ;incstack = 0
  9213  004920  0E01               	movlw	1
  9214  004922  6E07               	movwf	_isspace$974,c
  9215  004924  0E20               	movlw	32
  9216  004926  1801               	xorwf	isspace@c,w,c
  9217  004928  1002               	iorwf	isspace@c+1,w,c
  9218  00492A  B4D8               	btfsc	status,2,c
  9219  00492C  D014               	goto	l4020
  9220  00492E  0EF7               	movlw	247
  9221  004930  6E03               	movwf	??_isspace& (0+255),c
  9222  004932  0EFF               	movlw	255
  9223  004934  6E04               	movwf	(??_isspace+1)& (0+255),c
  9224  004936  C001  F005         	movff	isspace@c,??_isspace+2
  9225  00493A  C002  F006         	movff	isspace@c+1,??_isspace+3
  9226  00493E  5003               	movf	??_isspace,w,c
  9227  004940  2605               	addwf	??_isspace+2,f,c
  9228  004942  5004               	movf	??_isspace+1,w,c
  9229  004944  2206               	addwfc	??_isspace+3,f,c
  9230  004946  5006               	movf	??_isspace+3,w,c
  9231  004948  E104               	bnz	u4600
  9232  00494A  0E05               	movlw	5
  9233  00494C  5C05               	subwf	??_isspace+2,w,c
  9234  00494E  A0D8               	btfss	status,0,c
  9235  004950  D002               	goto	l4020
  9236  004952                     u4600:
  9237  004952  0E00               	movlw	0
  9238  004954  6E07               	movwf	_isspace$974,c
  9239  004956                     l4020:
  9240  004956  C007  F001         	movff	_isspace$974,?_isspace
  9241  00495A  6A02               	clrf	?_isspace+1,c
  9242  00495C  0012               	return		;funcret
  9243  00495E                     __end_of_isspace:
  9244                           	opt callstack 0
  9245                           
  9246 ;; *************** function _isdigit *****************
  9247 ;; Defined at:
  9248 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  c               2    0[COMRAM] int 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  2    0[COMRAM] int 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9262 ;;      Params:         2       0       0       0       0       0       0       0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9264 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9265 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9266 ;;Total ram usage:        6 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_vfpfcnvrt
  9272 ;;		_atoi
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text32
  9277  004856                     __ptext32:
  9278                           	opt callstack 0
  9279  004856                     _isdigit:
  9280                           	opt callstack 27
  9281                           
  9282                           ;incstack = 0
  9283  004856  0ED0               	movlw	208
  9284  004858  6E03               	movwf	??_isdigit& (0+255),c
  9285  00485A  0EFF               	movlw	255
  9286  00485C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  9287  00485E  C001  F005         	movff	isdigit@c,??_isdigit+2
  9288  004862  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9289  004866  5003               	movf	??_isdigit,w,c
  9290  004868  2605               	addwf	??_isdigit+2,f,c
  9291  00486A  5004               	movf	??_isdigit+1,w,c
  9292  00486C  2206               	addwfc	??_isdigit+3,f,c
  9293  00486E  5006               	movf	??_isdigit+3,w,c
  9294  004870  E106               	bnz	u3740
  9295  004872  0E0A               	movlw	10
  9296  004874  5C05               	subwf	??_isdigit+2,w,c
  9297  004876  B0D8               	btfsc	status,0,c
  9298  004878  D002               	goto	u3740
  9299  00487A  0E01               	movlw	1
  9300  00487C  D001               	goto	u3750
  9301  00487E                     u3740:
  9302  00487E  0E00               	movlw	0
  9303  004880                     u3750:
  9304  004880  6E01               	movwf	?_isdigit,c
  9305  004882  6A02               	clrf	?_isdigit+1,c
  9306  004884  0012               	return		;funcret
  9307  004886                     __end_of_isdigit:
  9308                           	opt callstack 0
  9309                           
  9310 ;; *************** function ___wmul *****************
  9311 ;; Defined at:
  9312 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  multiplier      2    0[COMRAM] unsigned int 
  9315 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  product         2    4[COMRAM] unsigned int 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  2    0[COMRAM] unsigned int 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0, prodl, prodh
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9327 ;;      Params:         4       0       0       0       0       0       0       0       0
  9328 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9330 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9331 ;;Total ram usage:        6 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_atoi
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text33
  9341  0047B2                     __ptext33:
  9342                           	opt callstack 0
  9343  0047B2                     ___wmul:
  9344                           	opt callstack 26
  9345                           
  9346                           ;incstack = 0
  9347  0047B2  5001               	movf	___wmul@multiplier,w,c
  9348  0047B4  0203               	mulwf	___wmul@multiplicand,c
  9349  0047B6  CFF3 F005          	movff	prodl,___wmul@product
  9350  0047BA  CFF4 F006          	movff	prodh,___wmul@product+1
  9351  0047BE  5001               	movf	___wmul@multiplier,w,c
  9352  0047C0  0204               	mulwf	___wmul@multiplicand+1,c
  9353  0047C2  50F3               	movf	prodl,w,c
  9354  0047C4  2606               	addwf	___wmul@product+1,f,c
  9355  0047C6  5002               	movf	___wmul@multiplier+1,w,c
  9356  0047C8  0203               	mulwf	___wmul@multiplicand,c
  9357  0047CA  50F3               	movf	prodl,w,c
  9358  0047CC  2606               	addwf	___wmul@product+1,f,c
  9359  0047CE  C005  F001         	movff	___wmul@product,?___wmul
  9360  0047D2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9361  0047D6  0012               	return		;funcret
  9362  0047D8                     __end_of___wmul:
  9363                           	opt callstack 0
  9364                           
  9365 ;; *************** function ___xxtofl *****************
  9366 ;; Defined at:
  9367 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  sign            1    wreg     unsigned char 
  9370 ;;  val             4    0[COMRAM] long 
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  sign            1    8[COMRAM] unsigned char 
  9373 ;;  arg             4   10[COMRAM] unsigned long 
  9374 ;;  exp             1    9[COMRAM] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  4    0[COMRAM] unsigned char 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9384 ;;      Params:         4       0       0       0       0       0       0       0       0
  9385 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9386 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9387 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9388 ;;Total ram usage:       14 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_main
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text34
  9398  0055EC                     __ptext34:
  9399                           	opt callstack 0
  9400  0055EC                     ___xxtofl:
  9401                           	opt callstack 30
  9402                           
  9403                           ;incstack = 0
  9404                           ;___xxtofl@sign stored from wreg
  9405  0055EC  6E09               	movwf	___xxtofl@sign,c
  9406  0055EE  5009               	movf	___xxtofl@sign,w,c
  9407  0055F0  A4D8               	btfss	status,2,c
  9408  0055F2  AE04               	btfss	___xxtofl@val+3,7,c
  9409  0055F4  D01A               	goto	l998
  9410  0055F6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9411  0055FA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9412  0055FE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9413  005602  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9414  005606  1E05               	comf	??___xxtofl,f,c
  9415  005608  1E06               	comf	??___xxtofl+1,f,c
  9416  00560A  1E07               	comf	??___xxtofl+2,f,c
  9417  00560C  1E08               	comf	??___xxtofl+3,f,c
  9418  00560E  2A05               	incf	??___xxtofl,f,c
  9419  005610  0E00               	movlw	0
  9420  005612  2206               	addwfc	??___xxtofl+1,f,c
  9421  005614  2207               	addwfc	??___xxtofl+2,f,c
  9422  005616  2208               	addwfc	??___xxtofl+3,f,c
  9423  005618  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9424  00561C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9425  005620  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9426  005624  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9427  005628  D008               	goto	l4786
  9428  00562A                     l998:
  9429  00562A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9430  00562E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9431  005632  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9432  005636  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9433  00563A                     l4786:
  9434  00563A  5001               	movf	___xxtofl@val,w,c
  9435  00563C  1002               	iorwf	___xxtofl@val+1,w,c
  9436  00563E  1003               	iorwf	___xxtofl@val+2,w,c
  9437  005640  1004               	iorwf	___xxtofl@val+3,w,c
  9438  005642  A4D8               	btfss	status,2,c
  9439  005644  D009               	goto	l4792
  9440  005646  0E00               	movlw	0
  9441  005648  6E01               	movwf	?___xxtofl,c
  9442  00564A  0E00               	movlw	0
  9443  00564C  6E02               	movwf	?___xxtofl+1,c
  9444  00564E  0E00               	movlw	0
  9445  005650  6E03               	movwf	?___xxtofl+2,c
  9446  005652  0E00               	movlw	0
  9447  005654  6E04               	movwf	?___xxtofl+3,c
  9448  005656  0012               	return	
  9449  005658                     l4792:
  9450  005658  0E96               	movlw	150
  9451  00565A  6E0A               	movwf	___xxtofl@exp,c
  9452  00565C  D006               	goto	l4796
  9453  00565E                     l4794:
  9454  00565E  2A0A               	incf	___xxtofl@exp,f,c
  9455  005660  90D8               	bcf	status,0,c
  9456  005662  320E               	rrcf	___xxtofl@arg+3,f,c
  9457  005664  320D               	rrcf	___xxtofl@arg+2,f,c
  9458  005666  320C               	rrcf	___xxtofl@arg+1,f,c
  9459  005668  320B               	rrcf	___xxtofl@arg,f,c
  9460  00566A                     l4796:
  9461  00566A  0E00               	movlw	0
  9462  00566C  140B               	andwf	___xxtofl@arg,w,c
  9463  00566E  6E05               	movwf	??___xxtofl& (0+255),c
  9464  005670  0E00               	movlw	0
  9465  005672  140C               	andwf	___xxtofl@arg+1,w,c
  9466  005674  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9467  005676  0E00               	movlw	0
  9468  005678  140D               	andwf	___xxtofl@arg+2,w,c
  9469  00567A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9470  00567C  0EFE               	movlw	254
  9471  00567E  140E               	andwf	___xxtofl@arg+3,w,c
  9472  005680  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9473  005682  5005               	movf	??___xxtofl,w,c
  9474  005684  1006               	iorwf	??___xxtofl+1,w,c
  9475  005686  1007               	iorwf	??___xxtofl+2,w,c
  9476  005688  1008               	iorwf	??___xxtofl+3,w,c
  9477  00568A  B4D8               	btfsc	status,2,c
  9478  00568C  D00D               	goto	l1005
  9479  00568E  D7E7               	goto	l4794
  9480  005690                     l4798:
  9481  005690  2A0A               	incf	___xxtofl@exp,f,c
  9482  005692  0E01               	movlw	1
  9483  005694  260B               	addwf	___xxtofl@arg,f,c
  9484  005696  0E00               	movlw	0
  9485  005698  220C               	addwfc	___xxtofl@arg+1,f,c
  9486  00569A  220D               	addwfc	___xxtofl@arg+2,f,c
  9487  00569C  220E               	addwfc	___xxtofl@arg+3,f,c
  9488  00569E  90D8               	bcf	status,0,c
  9489  0056A0  320E               	rrcf	___xxtofl@arg+3,f,c
  9490  0056A2  320D               	rrcf	___xxtofl@arg+2,f,c
  9491  0056A4  320C               	rrcf	___xxtofl@arg+1,f,c
  9492  0056A6  320B               	rrcf	___xxtofl@arg,f,c
  9493  0056A8                     l1005:
  9494  0056A8  0E00               	movlw	0
  9495  0056AA  140B               	andwf	___xxtofl@arg,w,c
  9496  0056AC  6E05               	movwf	??___xxtofl& (0+255),c
  9497  0056AE  0E00               	movlw	0
  9498  0056B0  140C               	andwf	___xxtofl@arg+1,w,c
  9499  0056B2  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9500  0056B4  0E00               	movlw	0
  9501  0056B6  140D               	andwf	___xxtofl@arg+2,w,c
  9502  0056B8  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9503  0056BA  0EFF               	movlw	255
  9504  0056BC  140E               	andwf	___xxtofl@arg+3,w,c
  9505  0056BE  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9506  0056C0  5005               	movf	??___xxtofl,w,c
  9507  0056C2  1006               	iorwf	??___xxtofl+1,w,c
  9508  0056C4  1007               	iorwf	??___xxtofl+2,w,c
  9509  0056C6  1008               	iorwf	??___xxtofl+3,w,c
  9510  0056C8  B4D8               	btfsc	status,2,c
  9511  0056CA  D007               	goto	l4806
  9512  0056CC  D7E1               	goto	l4798
  9513  0056CE                     l4804:
  9514  0056CE  060A               	decf	___xxtofl@exp,f,c
  9515  0056D0  90D8               	bcf	status,0,c
  9516  0056D2  360B               	rlcf	___xxtofl@arg,f,c
  9517  0056D4  360C               	rlcf	___xxtofl@arg+1,f,c
  9518  0056D6  360D               	rlcf	___xxtofl@arg+2,f,c
  9519  0056D8  360E               	rlcf	___xxtofl@arg+3,f,c
  9520  0056DA                     l4806:
  9521  0056DA  BE0D               	btfsc	___xxtofl@arg+2,7,c
  9522  0056DC  D003               	goto	u5790
  9523  0056DE  0E02               	movlw	2
  9524  0056E0  600A               	cpfslt	___xxtofl@exp,c
  9525  0056E2  D7F5               	goto	l4804
  9526  0056E4                     u5790:
  9527  0056E4  A00A               	btfss	___xxtofl@exp,0,c
  9528  0056E6  9E0D               	bcf	___xxtofl@arg+2,7,c
  9529  0056E8  90D8               	bcf	status,0,c
  9530  0056EA  320A               	rrcf	___xxtofl@exp,f,c
  9531  0056EC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9532  0056F0  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  9533  0056F2  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  9534  0056F4  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  9535  0056F6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9536  0056FA  6A07               	clrf	??___xxtofl+2,c
  9537  0056FC  6A06               	clrf	??___xxtofl+1,c
  9538  0056FE  6A05               	clrf	??___xxtofl,c
  9539  005700  5005               	movf	??___xxtofl,w,c
  9540  005702  120B               	iorwf	___xxtofl@arg,f,c
  9541  005704  5006               	movf	??___xxtofl+1,w,c
  9542  005706  120C               	iorwf	___xxtofl@arg+1,f,c
  9543  005708  5007               	movf	??___xxtofl+2,w,c
  9544  00570A  120D               	iorwf	___xxtofl@arg+2,f,c
  9545  00570C  5008               	movf	??___xxtofl+3,w,c
  9546  00570E  120E               	iorwf	___xxtofl@arg+3,f,c
  9547  005710  5009               	movf	___xxtofl@sign,w,c
  9548  005712  A4D8               	btfss	status,2,c
  9549  005714  AE04               	btfss	___xxtofl@val+3,7,c
  9550  005716  D001               	goto	l4822
  9551  005718  8E0E               	bsf	___xxtofl@arg+3,7,c
  9552  00571A                     l4822:
  9553  00571A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9554  00571E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9555  005722  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9556  005726  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9557  00572A  0012               	return		;funcret
  9558  00572C                     __end_of___xxtofl:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _Lcd_Out2 *****************
  9562 ;; Defined at:
  9563 ;;		line 115 in file "./flex_lcd.h"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  y               1    wreg     unsigned char 
  9566 ;;  x               1    3[COMRAM] unsigned char 
  9567 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  9568 ;;		 -> palabra(17), numero3(17), numero2(17), numero1(17), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  y               1    8[COMRAM] unsigned char 
  9571 ;;  data            1    9[COMRAM] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9581 ;;      Params:         3       0       0       0       0       0       0       0       0
  9582 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9583 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9584 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9585 ;;Total ram usage:        7 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    1
  9588 ;; This function calls:
  9589 ;;		_Lcd_Chr_CP
  9590 ;;		_Lcd_Cmd
  9591 ;; This function is called by:
  9592 ;;		_main
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text35
  9597  004AE8                     __ptext35:
  9598                           	opt callstack 0
  9599  004AE8                     _Lcd_Out2:
  9600                           	opt callstack 29
  9601                           
  9602                           ;incstack = 0
  9603                           ;Lcd_Out2@y stored from wreg
  9604  004AE8  6E09               	movwf	Lcd_Out2@y,c
  9605                           
  9606                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  9607  004AEA  D00D               	goto	l4754
  9608  004AEC                     l4744:
  9609  004AEC  5004               	movf	Lcd_Out2@x,w,c
  9610  004AEE  0F80               	addlw	128
  9611  004AF0  D008               	goto	L17
  9612  004AF2                     l4746:
  9613  004AF2  5004               	movf	Lcd_Out2@x,w,c
  9614  004AF4  0FC0               	addlw	192
  9615  004AF6  D005               	goto	L17
  9616  004AF8                     l4748:
  9617  004AF8  5004               	movf	Lcd_Out2@x,w,c
  9618  004AFA  0F94               	addlw	148
  9619  004AFC  D002               	goto	L17
  9620  004AFE                     l4750:
  9621  004AFE  5004               	movf	Lcd_Out2@x,w,c
  9622  004B00  0FD4               	addlw	212
  9623  004B02                     L17:
  9624  004B02  6E0A               	movwf	Lcd_Out2@data,c
  9625  004B04  D014               	goto	l4756
  9626  004B06                     l4754:
  9627  004B06  5009               	movf	Lcd_Out2@y,w,c
  9628  004B08  6E07               	movwf	??_Lcd_Out2& (0+255),c
  9629  004B0A  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  9630                           
  9631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9632                           ; Switch size 1, requested type "simple"
  9633                           ; Number of cases is 1, Range of values is 0 to 0
  9634                           ; switch strategies available:
  9635                           ; Name         Instructions Cycles
  9636                           ; simple_byte            4     3 (average)
  9637                           ;	Chosen strategy is simple_byte
  9638  004B0C  5008               	movf	??_Lcd_Out2+1,w,c
  9639  004B0E  0A00               	xorlw	0	; case 0
  9640  004B10  A4D8               	btfss	status,2,c
  9641  004B12  D00D               	goto	l4756
  9642                           
  9643                           ; Switch size 1, requested type "simple"
  9644                           ; Number of cases is 4, Range of values is 1 to 4
  9645                           ; switch strategies available:
  9646                           ; Name         Instructions Cycles
  9647                           ; simple_byte           13     7 (average)
  9648                           ;	Chosen strategy is simple_byte
  9649  004B14  5007               	movf	??_Lcd_Out2,w,c
  9650  004B16  0A01               	xorlw	1	; case 1
  9651  004B18  B4D8               	btfsc	status,2,c
  9652  004B1A  D7E8               	goto	l4744
  9653  004B1C  0A03               	xorlw	3	; case 2
  9654  004B1E  B4D8               	btfsc	status,2,c
  9655  004B20  D7E8               	goto	l4746
  9656  004B22  0A01               	xorlw	1	; case 3
  9657  004B24  B4D8               	btfsc	status,2,c
  9658  004B26  D7E8               	goto	l4748
  9659  004B28  0A07               	xorlw	7	; case 4
  9660  004B2A  B4D8               	btfsc	status,2,c
  9661  004B2C  D7E8               	goto	l4750
  9662  004B2E                     l4756:
  9663                           
  9664                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  9665  004B2E  500A               	movf	Lcd_Out2@data,w,c
  9666  004B30  EC40  F029         	call	_Lcd_Cmd
  9667                           
  9668                           ;./flex_lcd.h: 127: while(*buffer)
  9669  004B34  D009               	goto	l4762
  9670  004B36                     l4758:
  9671                           
  9672                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  9673  004B36  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9674  004B3A  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9675  004B3E  50DF               	movf	indf2,w,c
  9676  004B40  EC62  F02A         	call	_Lcd_Chr_CP
  9677                           
  9678                           ;./flex_lcd.h: 130:     buffer++;
  9679  004B44  4A05               	infsnz	Lcd_Out2@buffer,f,c
  9680  004B46  2A06               	incf	Lcd_Out2@buffer+1,f,c
  9681  004B48                     l4762:
  9682                           
  9683                           ;./flex_lcd.h: 127: while(*buffer)
  9684  004B48  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9685  004B4C  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9686  004B50  50DF               	movf	indf2,w,c
  9687  004B52  B4D8               	btfsc	status,2,c
  9688  004B54  0012               	return	
  9689  004B56  D7EF               	goto	l4758
  9690  004B58                     __end_of_Lcd_Out2:
  9691                           	opt callstack 0
  9692                           
  9693 ;; *************** function _Lcd_Out *****************
  9694 ;; Defined at:
  9695 ;;		line 94 in file "./flex_lcd.h"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  y               1    wreg     unsigned char 
  9698 ;;  x               1    3[COMRAM] unsigned char 
  9699 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  9700 ;;		 -> STR_23(13), STR_9(16), STR_8(10), STR_7(14), 
  9701 ;;		 -> STR_5(16), STR_3(15), STR_2(14), STR_1(11), 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  y               1    8[COMRAM] unsigned char 
  9704 ;;  data            1    9[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9714 ;;      Params:         3       0       0       0       0       0       0       0       0
  9715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9717 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9718 ;;Total ram usage:        7 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    1
  9721 ;; This function calls:
  9722 ;;		_Lcd_Chr_CP
  9723 ;;		_Lcd_Cmd
  9724 ;; This function is called by:
  9725 ;;		_main
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text36
  9730  004BC8                     __ptext36:
  9731                           	opt callstack 0
  9732  004BC8                     _Lcd_Out:
  9733                           	opt callstack 29
  9734                           
  9735                           ;incstack = 0
  9736                           ;Lcd_Out@y stored from wreg
  9737  004BC8  6E09               	movwf	Lcd_Out@y,c
  9738                           
  9739                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  9740  004BCA  D00D               	goto	l4728
  9741  004BCC                     l4718:
  9742  004BCC  5004               	movf	Lcd_Out@x,w,c
  9743  004BCE  0F80               	addlw	128
  9744  004BD0  D008               	goto	L20
  9745  004BD2                     l4720:
  9746  004BD2  5004               	movf	Lcd_Out@x,w,c
  9747  004BD4  0FC0               	addlw	192
  9748  004BD6  D005               	goto	L20
  9749  004BD8                     l4722:
  9750  004BD8  5004               	movf	Lcd_Out@x,w,c
  9751  004BDA  0F94               	addlw	148
  9752  004BDC  D002               	goto	L20
  9753  004BDE                     l4724:
  9754  004BDE  5004               	movf	Lcd_Out@x,w,c
  9755  004BE0  0FD4               	addlw	212
  9756  004BE2                     L20:
  9757  004BE2  6E0A               	movwf	Lcd_Out@data,c
  9758  004BE4  D014               	goto	l4730
  9759  004BE6                     l4728:
  9760  004BE6  5009               	movf	Lcd_Out@y,w,c
  9761  004BE8  6E07               	movwf	??_Lcd_Out& (0+255),c
  9762  004BEA  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
  9763                           
  9764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9765                           ; Switch size 1, requested type "simple"
  9766                           ; Number of cases is 1, Range of values is 0 to 0
  9767                           ; switch strategies available:
  9768                           ; Name         Instructions Cycles
  9769                           ; simple_byte            4     3 (average)
  9770                           ;	Chosen strategy is simple_byte
  9771  004BEC  5008               	movf	??_Lcd_Out+1,w,c
  9772  004BEE  0A00               	xorlw	0	; case 0
  9773  004BF0  A4D8               	btfss	status,2,c
  9774  004BF2  D00D               	goto	l4730
  9775                           
  9776                           ; Switch size 1, requested type "simple"
  9777                           ; Number of cases is 4, Range of values is 1 to 4
  9778                           ; switch strategies available:
  9779                           ; Name         Instructions Cycles
  9780                           ; simple_byte           13     7 (average)
  9781                           ;	Chosen strategy is simple_byte
  9782  004BF4  5007               	movf	??_Lcd_Out,w,c
  9783  004BF6  0A01               	xorlw	1	; case 1
  9784  004BF8  B4D8               	btfsc	status,2,c
  9785  004BFA  D7E8               	goto	l4718
  9786  004BFC  0A03               	xorlw	3	; case 2
  9787  004BFE  B4D8               	btfsc	status,2,c
  9788  004C00  D7E8               	goto	l4720
  9789  004C02  0A01               	xorlw	1	; case 3
  9790  004C04  B4D8               	btfsc	status,2,c
  9791  004C06  D7E8               	goto	l4722
  9792  004C08  0A07               	xorlw	7	; case 4
  9793  004C0A  B4D8               	btfsc	status,2,c
  9794  004C0C  D7E8               	goto	l4724
  9795  004C0E                     l4730:
  9796                           
  9797                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  9798  004C0E  500A               	movf	Lcd_Out@data,w,c
  9799  004C10  EC40  F029         	call	_Lcd_Cmd
  9800                           
  9801                           ;./flex_lcd.h: 106: while(*buffer)
  9802  004C14  D00A               	goto	l4736
  9803  004C16                     l4732:
  9804                           
  9805                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  9806  004C16  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9807  004C1A  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9808  004C1E                     	if	0	;tblptru may be non-zero
  9809  004C1E                     	endif
  9810  004C1E                     	if	0	;tblptru may be non-zero
  9811  004C1E                     	endif
  9812  004C1E  0008               	tblrd		*
  9813  004C20  50F5               	movf	tablat,w,c
  9814  004C22  EC62  F02A         	call	_Lcd_Chr_CP
  9815                           
  9816                           ;./flex_lcd.h: 109:     buffer++;
  9817  004C26  4A05               	infsnz	Lcd_Out@buffer,f,c
  9818  004C28  2A06               	incf	Lcd_Out@buffer+1,f,c
  9819  004C2A                     l4736:
  9820                           
  9821                           ;./flex_lcd.h: 106: while(*buffer)
  9822  004C2A  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9823  004C2E  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9824  004C32                     	if	0	;tblptru may be non-zero
  9825  004C32                     	endif
  9826  004C32                     	if	0	;tblptru may be non-zero
  9827  004C32                     	endif
  9828  004C32  0008               	tblrd		*
  9829  004C34  50F5               	movf	tablat,w,c
  9830  004C36  0900               	iorlw	0
  9831  004C38  B4D8               	btfsc	status,2,c
  9832  004C3A  0012               	return	
  9833  004C3C  D7EC               	goto	l4732
  9834  004C3E                     __end_of_Lcd_Out:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _Lcd_Chr_CP *****************
  9838 ;; Defined at:
  9839 ;;		line 136 in file "./flex_lcd.h"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  data            1    wreg     unsigned char 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  data            1    2[COMRAM] unsigned char 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, status,2, status,0
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0
  9854 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9855 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9856 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9857 ;;Total ram usage:        3 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; This function calls:
  9860 ;;		Nothing
  9861 ;; This function is called by:
  9862 ;;		_Lcd_Out
  9863 ;;		_Lcd_Out2
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text37
  9868  0054C4                     __ptext37:
  9869                           	opt callstack 0
  9870  0054C4                     _Lcd_Chr_CP:
  9871                           	opt callstack 29
  9872                           
  9873                           ;incstack = 0
  9874                           ;Lcd_Chr_CP@data stored from wreg
  9875  0054C4  6E03               	movwf	Lcd_Chr_CP@data,c
  9876                           
  9877                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  9878  0054C6  9A83               	bcf	3971,5,c	;volatile
  9879  0054C8  8883               	bsf	3971,4,c	;volatile
  9880                           
  9881                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  9882  0054CA  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  9883  0054CC  AE03               	btfss	Lcd_Chr_CP@data,7,c
  9884  0054CE  D001               	bra	u5665
  9885  0054D0  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  9886  0054D2                     u5665:
  9887  0054D2  0E01               	movlw	1
  9888  0054D4  1601               	andwf	??_Lcd_Chr_CP,f,c
  9889  0054D6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9890  0054D8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9891  0054DA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9892  0054DC  5083               	movf	3971,w,c	;volatile
  9893  0054DE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9894  0054E0  0BF7               	andlw	-9
  9895  0054E2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9896  0054E4  6E83               	movwf	3971,c	;volatile
  9897  0054E6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9898  0054EA  0E06               	movlw	6
  9899  0054EC  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9900  0054EE                     u5675:
  9901  0054EE  90D8               	bcf	status,0,c
  9902  0054F0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9903  0054F2  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9904  0054F4  D7FC               	goto	u5675
  9905  0054F6  0E01               	movlw	1
  9906  0054F8  1601               	andwf	??_Lcd_Chr_CP,f,c
  9907  0054FA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9908  0054FC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9909  0054FE  5083               	movf	3971,w,c	;volatile
  9910  005500  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9911  005502  0BFB               	andlw	-5
  9912  005504  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9913  005506  6E83               	movwf	3971,c	;volatile
  9914                           
  9915                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  9916  005508  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9917  00550C  0E05               	movlw	5
  9918  00550E  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9919  005510                     u5685:
  9920  005510  90D8               	bcf	status,0,c
  9921  005512  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9922  005514  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9923  005516  D7FC               	goto	u5685
  9924  005518  0E01               	movlw	1
  9925  00551A  1601               	andwf	??_Lcd_Chr_CP,f,c
  9926  00551C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9927  00551E  5083               	movf	3971,w,c	;volatile
  9928  005520  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9929  005522  0BFD               	andlw	-3
  9930  005524  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9931  005526  6E83               	movwf	3971,c	;volatile
  9932  005528  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9933  00552C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  9934  00552E  0E0F               	movlw	15
  9935  005530  1601               	andwf	??_Lcd_Chr_CP,f,c
  9936  005532  0E01               	movlw	1
  9937  005534  1601               	andwf	??_Lcd_Chr_CP,f,c
  9938  005536  5083               	movf	3971,w,c	;volatile
  9939  005538  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9940  00553A  0BFE               	andlw	-2
  9941  00553C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9942  00553E  6E83               	movwf	3971,c	;volatile
  9943                           
  9944                           ;./flex_lcd.h: 140: _delay(10);
  9945  005540  0E03               	movlw	3
  9946  005542                     u6197:
  9947  005542  2EE8               	decfsz	wreg,f,c
  9948  005544  D7FE               	bra	u6197
  9949  005546  F000               	nop	
  9950                           
  9951                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  9952  005548  8A83               	bsf	3971,5,c	;volatile
  9953  00554A  0E03               	movlw	3
  9954  00554C                     u6207:
  9955  00554C  2EE8               	decfsz	wreg,f,c
  9956  00554E  D7FE               	bra	u6207
  9957  005550  F000               	nop	
  9958  005552  9A83               	bcf	3971,5,c	;volatile
  9959                           
  9960                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  9961  005554  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9962  005558  90D8               	bcf	status,0,c
  9963  00555A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9964  00555C  90D8               	bcf	status,0,c
  9965  00555E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9966  005560  90D8               	bcf	status,0,c
  9967  005562  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9968  005564  0E01               	movlw	1
  9969  005566  1601               	andwf	??_Lcd_Chr_CP,f,c
  9970  005568  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9971  00556A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9972  00556C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9973  00556E  5083               	movf	3971,w,c	;volatile
  9974  005570  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9975  005572  0BF7               	andlw	-9
  9976  005574  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9977  005576  6E83               	movwf	3971,c	;volatile
  9978  005578  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9979  00557C  90D8               	bcf	status,0,c
  9980  00557E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9981  005580  90D8               	bcf	status,0,c
  9982  005582  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9983  005584  0E01               	movlw	1
  9984  005586  1601               	andwf	??_Lcd_Chr_CP,f,c
  9985  005588  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9986  00558A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9987  00558C  5083               	movf	3971,w,c	;volatile
  9988  00558E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9989  005590  0BFB               	andlw	-5
  9990  005592  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9991  005594  6E83               	movwf	3971,c	;volatile
  9992                           
  9993                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  9994  005596  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9995  00559A  90D8               	bcf	status,0,c
  9996  00559C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9997  00559E  0E01               	movlw	1
  9998  0055A0  1601               	andwf	??_Lcd_Chr_CP,f,c
  9999  0055A2  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10000  0055A4  5083               	movf	3971,w,c	;volatile
 10001  0055A6  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10002  0055A8  0BFD               	andlw	-3
 10003  0055AA  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10004  0055AC  6E83               	movwf	3971,c	;volatile
 10005  0055AE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10006  0055B2  0E01               	movlw	1
 10007  0055B4  1601               	andwf	??_Lcd_Chr_CP,f,c
 10008  0055B6  5083               	movf	3971,w,c	;volatile
 10009  0055B8  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10010  0055BA  0BFE               	andlw	-2
 10011  0055BC  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10012  0055BE  6E83               	movwf	3971,c	;volatile
 10013                           
 10014                           ;./flex_lcd.h: 144: _delay(10);
 10015  0055C0  0E03               	movlw	3
 10016  0055C2                     u6217:
 10017  0055C2  2EE8               	decfsz	wreg,f,c
 10018  0055C4  D7FE               	bra	u6217
 10019  0055C6  F000               	nop	
 10020                           
 10021                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10022  0055C8  8A83               	bsf	3971,5,c	;volatile
 10023  0055CA  0E03               	movlw	3
 10024  0055CC                     u6227:
 10025  0055CC  2EE8               	decfsz	wreg,f,c
 10026  0055CE  D7FE               	bra	u6227
 10027  0055D0  F000               	nop	
 10028  0055D2  9A83               	bcf	3971,5,c	;volatile
 10029                           
 10030                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(8000000/4000000.0)));
 10031  0055D4  0E03               	movlw	3
 10032  0055D6                     u6237:
 10033  0055D6  2EE8               	decfsz	wreg,f,c
 10034  0055D8  D7FE               	bra	u6237
 10035  0055DA  F000               	nop	
 10036  0055DC  0E0F               	movlw	15
 10037  0055DE  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
 10038  0055E0  0E48               	movlw	72
 10039  0055E2                     u6247:
 10040  0055E2  2EE8               	decfsz	wreg,f,c
 10041  0055E4  D7FE               	bra	u6247
 10042  0055E6  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
 10043  0055E8  D7FC               	bra	u6247
 10044  0055EA  0012               	return		;funcret
 10045  0055EC                     __end_of_Lcd_Chr_CP:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _Lcd_Init *****************
 10049 ;; Defined at:
 10050 ;;		line 52 in file "./flex_lcd.h"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;		None
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  data            1    4[COMRAM] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0, cstack
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0
 10065 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10066 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10067 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10068 ;;Total ram usage:        2 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    1
 10071 ;; This function calls:
 10072 ;;		_Lcd_Cmd
 10073 ;; This function is called by:
 10074 ;;		_main
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text38
 10079  00517A                     __ptext38:
 10080                           	opt callstack 0
 10081  00517A                     _Lcd_Init:
 10082                           	opt callstack 29
 10083                           
 10084                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
 10085                           
 10086                           ;incstack = 0
 10087  00517A  9695               	bcf	3989,3,c	;volatile
 10088                           
 10089                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
 10090  00517C  9495               	bcf	3989,2,c	;volatile
 10091                           
 10092                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
 10093  00517E  9295               	bcf	3989,1,c	;volatile
 10094                           
 10095                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
 10096  005180  9095               	bcf	3989,0,c	;volatile
 10097                           
 10098                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
 10099  005182  9A95               	bcf	3989,5,c	;volatile
 10100                           
 10101                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
 10102  005184  9895               	bcf	3989,4,c	;volatile
 10103                           
 10104                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
 10105  005186  9683               	bcf	3971,3,c	;volatile
 10106                           
 10107                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
 10108  005188  9483               	bcf	3971,2,c	;volatile
 10109                           
 10110                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
 10111  00518A  9283               	bcf	3971,1,c	;volatile
 10112                           
 10113                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
 10114  00518C  9083               	bcf	3971,0,c	;volatile
 10115                           
 10116                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
 10117  00518E  9A83               	bcf	3971,5,c	;volatile
 10118                           
 10119                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
 10120  005190  9883               	bcf	3971,4,c	;volatile
 10121                           
 10122                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10123  005192  0E0F               	movlw	15
 10124  005194  6E04               	movwf	??_Lcd_Init& (0+255),c
 10125  005196  0E48               	movlw	72
 10126  005198                     u6257:
 10127  005198  2EE8               	decfsz	wreg,f,c
 10128  00519A  D7FE               	bra	u6257
 10129  00519C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10130  00519E  D7FC               	bra	u6257
 10131                           
 10132                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10133  0051A0  0E0F               	movlw	15
 10134  0051A2  6E04               	movwf	??_Lcd_Init& (0+255),c
 10135  0051A4  0E48               	movlw	72
 10136  0051A6                     u6267:
 10137  0051A6  2EE8               	decfsz	wreg,f,c
 10138  0051A8  D7FE               	bra	u6267
 10139  0051AA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10140  0051AC  D7FC               	bra	u6267
 10141                           
 10142                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10143  0051AE  0E0F               	movlw	15
 10144  0051B0  6E04               	movwf	??_Lcd_Init& (0+255),c
 10145  0051B2  0E48               	movlw	72
 10146  0051B4                     u6277:
 10147  0051B4  2EE8               	decfsz	wreg,f,c
 10148  0051B6  D7FE               	bra	u6277
 10149  0051B8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10150  0051BA  D7FC               	bra	u6277
 10151                           
 10152                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10153  0051BC  0E0F               	movlw	15
 10154  0051BE  6E04               	movwf	??_Lcd_Init& (0+255),c
 10155  0051C0  0E48               	movlw	72
 10156  0051C2                     u6287:
 10157  0051C2  2EE8               	decfsz	wreg,f,c
 10158  0051C4  D7FE               	bra	u6287
 10159  0051C6  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10160  0051C8  D7FC               	bra	u6287
 10161                           
 10162                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10163  0051CA  0E0F               	movlw	15
 10164  0051CC  6E04               	movwf	??_Lcd_Init& (0+255),c
 10165  0051CE  0E48               	movlw	72
 10166  0051D0                     u6297:
 10167  0051D0  2EE8               	decfsz	wreg,f,c
 10168  0051D2  D7FE               	bra	u6297
 10169  0051D4  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10170  0051D6  D7FC               	bra	u6297
 10171                           
 10172                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10173  0051D8  0E0F               	movlw	15
 10174  0051DA  6E04               	movwf	??_Lcd_Init& (0+255),c
 10175  0051DC  0E48               	movlw	72
 10176  0051DE                     u6307:
 10177  0051DE  2EE8               	decfsz	wreg,f,c
 10178  0051E0  D7FE               	bra	u6307
 10179  0051E2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10180  0051E4  D7FC               	bra	u6307
 10181                           
 10182                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
 10183  0051E6  0E01               	movlw	1
 10184  0051E8  6E05               	movwf	Lcd_Init@data,c
 10185  0051EA                     l25:
 10186                           
 10187                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
 10188  0051EA  9683               	bcf	3971,3,c	;volatile
 10189  0051EC  9483               	bcf	3971,2,c	;volatile
 10190  0051EE  8283               	bsf	3971,1,c	;volatile
 10191  0051F0  8083               	bsf	3971,0,c	;volatile
 10192  0051F2  9A83               	bcf	3971,5,c	;volatile
 10193                           
 10194                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
 10195  0051F4  9883               	bcf	3971,4,c	;volatile
 10196  0051F6  9683               	bcf	3971,3,c	;volatile
 10197  0051F8  9483               	bcf	3971,2,c	;volatile
 10198  0051FA  8283               	bsf	3971,1,c	;volatile
 10199  0051FC  8083               	bsf	3971,0,c	;volatile
 10200                           
 10201                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10202  0051FE  8A83               	bsf	3971,5,c	;volatile
 10203  005200  9883               	bcf	3971,4,c	;volatile
 10204                           
 10205                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(8000000/4000000.0)));
 10206  005202  0E03               	movlw	3
 10207  005204                     u6317:
 10208  005204  2EE8               	decfsz	wreg,f,c
 10209  005206  D7FE               	bra	u6317
 10210  005208  F000               	nop	
 10211                           
 10212                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
 10213  00520A  9683               	bcf	3971,3,c	;volatile
 10214  00520C  9483               	bcf	3971,2,c	;volatile
 10215  00520E  8283               	bsf	3971,1,c	;volatile
 10216  005210  8083               	bsf	3971,0,c	;volatile
 10217  005212  9A83               	bcf	3971,5,c	;volatile
 10218                           
 10219                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
 10220  005214  9883               	bcf	3971,4,c	;volatile
 10221                           
 10222                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10223  005216  0E0F               	movlw	15
 10224  005218  6E04               	movwf	??_Lcd_Init& (0+255),c
 10225  00521A  0E48               	movlw	72
 10226  00521C                     u6327:
 10227  00521C  2EE8               	decfsz	wreg,f,c
 10228  00521E  D7FE               	bra	u6327
 10229  005220  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10230  005222  D7FC               	bra	u6327
 10231                           
 10232                           ;./flex_lcd.h: 81: }
 10233  005224  2A05               	incf	Lcd_Init@data,f,c
 10234  005226  0E03               	movlw	3
 10235  005228  6405               	cpfsgt	Lcd_Init@data,c
 10236  00522A  D7DF               	goto	l25
 10237                           
 10238                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10239  00522C  9683               	bcf	3971,3,c	;volatile
 10240  00522E  9483               	bcf	3971,2,c	;volatile
 10241  005230  8283               	bsf	3971,1,c	;volatile
 10242  005232  9083               	bcf	3971,0,c	;volatile
 10243  005234  9A83               	bcf	3971,5,c	;volatile
 10244  005236  9883               	bcf	3971,4,c	;volatile
 10245                           
 10246                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10247  005238  9683               	bcf	3971,3,c	;volatile
 10248  00523A  9483               	bcf	3971,2,c	;volatile
 10249  00523C  8283               	bsf	3971,1,c	;volatile
 10250  00523E  9083               	bcf	3971,0,c	;volatile
 10251  005240  8A83               	bsf	3971,5,c	;volatile
 10252  005242  9883               	bcf	3971,4,c	;volatile
 10253                           
 10254                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000/4000000.0)));
 10255  005244  0E03               	movlw	3
 10256  005246                     u6337:
 10257  005246  2EE8               	decfsz	wreg,f,c
 10258  005248  D7FE               	bra	u6337
 10259  00524A  F000               	nop	
 10260                           
 10261                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10262  00524C  9683               	bcf	3971,3,c	;volatile
 10263  00524E  9483               	bcf	3971,2,c	;volatile
 10264  005250  8283               	bsf	3971,1,c	;volatile
 10265  005252  9083               	bcf	3971,0,c	;volatile
 10266  005254  9A83               	bcf	3971,5,c	;volatile
 10267  005256  9883               	bcf	3971,4,c	;volatile
 10268                           
 10269                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10270  005258  0E0F               	movlw	15
 10271  00525A  6E04               	movwf	??_Lcd_Init& (0+255),c
 10272  00525C  0E48               	movlw	72
 10273  00525E                     u6347:
 10274  00525E  2EE8               	decfsz	wreg,f,c
 10275  005260  D7FE               	bra	u6347
 10276  005262  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10277  005264  D7FC               	bra	u6347
 10278  005266  0E28               	movlw	40
 10279  005268  EC40  F029         	call	_Lcd_Cmd
 10280  00526C  0E10               	movlw	16
 10281  00526E  EC40  F029         	call	_Lcd_Cmd
 10282  005272  0E01               	movlw	1
 10283  005274  EC40  F029         	call	_Lcd_Cmd
 10284  005278  0E0F               	movlw	15
 10285  00527A  EC40  F029         	call	_Lcd_Cmd
 10286  00527E  0012               	return		;funcret
 10287  005280                     __end_of_Lcd_Init:
 10288                           	opt callstack 0
 10289                           
 10290 ;; *************** function _Lcd_Cmd *****************
 10291 ;; Defined at:
 10292 ;;		line 150 in file "./flex_lcd.h"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  data            1    wreg     unsigned char 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  data            1    2[COMRAM] unsigned char 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg, status,2, status,0
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0
 10307 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10308 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10309 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10310 ;;Total ram usage:        3 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_Lcd_Init
 10316 ;;		_Lcd_Out
 10317 ;;		_Lcd_Out2
 10318 ;;		_main
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text39
 10323  005280                     __ptext39:
 10324                           	opt callstack 0
 10325  005280                     _Lcd_Cmd:
 10326                           	opt callstack 29
 10327                           
 10328                           ;incstack = 0
 10329                           ;Lcd_Cmd@data stored from wreg
 10330  005280  6E03               	movwf	Lcd_Cmd@data,c
 10331                           
 10332                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10333  005282  9A83               	bcf	3971,5,c	;volatile
 10334  005284  9883               	bcf	3971,4,c	;volatile
 10335                           
 10336                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
 10337  005286  6A01               	clrf	??_Lcd_Cmd& (0+255),c
 10338  005288  AE03               	btfss	Lcd_Cmd@data,7,c
 10339  00528A  D001               	bra	u5635
 10340  00528C  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
 10341  00528E                     u5635:
 10342  00528E  0E01               	movlw	1
 10343  005290  1601               	andwf	??_Lcd_Cmd,f,c
 10344  005292  4601               	rlncf	??_Lcd_Cmd,f,c
 10345  005294  4601               	rlncf	??_Lcd_Cmd,f,c
 10346  005296  4601               	rlncf	??_Lcd_Cmd,f,c
 10347  005298  5083               	movf	3971,w,c	;volatile
 10348  00529A  1801               	xorwf	??_Lcd_Cmd,w,c
 10349  00529C  0BF7               	andlw	-9
 10350  00529E  1801               	xorwf	??_Lcd_Cmd,w,c
 10351  0052A0  6E83               	movwf	3971,c	;volatile
 10352  0052A2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10353  0052A6  0E06               	movlw	6
 10354  0052A8  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10355  0052AA                     u5645:
 10356  0052AA  90D8               	bcf	status,0,c
 10357  0052AC  3201               	rrcf	??_Lcd_Cmd,f,c
 10358  0052AE  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10359  0052B0  D7FC               	goto	u5645
 10360  0052B2  0E01               	movlw	1
 10361  0052B4  1601               	andwf	??_Lcd_Cmd,f,c
 10362  0052B6  4601               	rlncf	??_Lcd_Cmd,f,c
 10363  0052B8  4601               	rlncf	??_Lcd_Cmd,f,c
 10364  0052BA  5083               	movf	3971,w,c	;volatile
 10365  0052BC  1801               	xorwf	??_Lcd_Cmd,w,c
 10366  0052BE  0BFB               	andlw	-5
 10367  0052C0  1801               	xorwf	??_Lcd_Cmd,w,c
 10368  0052C2  6E83               	movwf	3971,c	;volatile
 10369                           
 10370                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
 10371  0052C4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10372  0052C8  0E05               	movlw	5
 10373  0052CA  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10374  0052CC                     u5655:
 10375  0052CC  90D8               	bcf	status,0,c
 10376  0052CE  3201               	rrcf	??_Lcd_Cmd,f,c
 10377  0052D0  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10378  0052D2  D7FC               	goto	u5655
 10379  0052D4  0E01               	movlw	1
 10380  0052D6  1601               	andwf	??_Lcd_Cmd,f,c
 10381  0052D8  4601               	rlncf	??_Lcd_Cmd,f,c
 10382  0052DA  5083               	movf	3971,w,c	;volatile
 10383  0052DC  1801               	xorwf	??_Lcd_Cmd,w,c
 10384  0052DE  0BFD               	andlw	-3
 10385  0052E0  1801               	xorwf	??_Lcd_Cmd,w,c
 10386  0052E2  6E83               	movwf	3971,c	;volatile
 10387  0052E4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10388  0052E8  3A01               	swapf	??_Lcd_Cmd,f,c
 10389  0052EA  0E0F               	movlw	15
 10390  0052EC  1601               	andwf	??_Lcd_Cmd,f,c
 10391  0052EE  0E01               	movlw	1
 10392  0052F0  1601               	andwf	??_Lcd_Cmd,f,c
 10393  0052F2  5083               	movf	3971,w,c	;volatile
 10394  0052F4  1801               	xorwf	??_Lcd_Cmd,w,c
 10395  0052F6  0BFE               	andlw	-2
 10396  0052F8  1801               	xorwf	??_Lcd_Cmd,w,c
 10397  0052FA  6E83               	movwf	3971,c	;volatile
 10398                           
 10399                           ;./flex_lcd.h: 154: _delay(10);
 10400  0052FC  0E03               	movlw	3
 10401  0052FE                     u6357:
 10402  0052FE  2EE8               	decfsz	wreg,f,c
 10403  005300  D7FE               	bra	u6357
 10404  005302  F000               	nop	
 10405                           
 10406                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10407  005304  8A83               	bsf	3971,5,c	;volatile
 10408  005306  0E03               	movlw	3
 10409  005308                     u6367:
 10410  005308  2EE8               	decfsz	wreg,f,c
 10411  00530A  D7FE               	bra	u6367
 10412  00530C  F000               	nop	
 10413  00530E  9A83               	bcf	3971,5,c	;volatile
 10414                           
 10415                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
 10416  005310  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10417  005314  90D8               	bcf	status,0,c
 10418  005316  3201               	rrcf	??_Lcd_Cmd,f,c
 10419  005318  90D8               	bcf	status,0,c
 10420  00531A  3201               	rrcf	??_Lcd_Cmd,f,c
 10421  00531C  90D8               	bcf	status,0,c
 10422  00531E  3201               	rrcf	??_Lcd_Cmd,f,c
 10423  005320  0E01               	movlw	1
 10424  005322  1601               	andwf	??_Lcd_Cmd,f,c
 10425  005324  4601               	rlncf	??_Lcd_Cmd,f,c
 10426  005326  4601               	rlncf	??_Lcd_Cmd,f,c
 10427  005328  4601               	rlncf	??_Lcd_Cmd,f,c
 10428  00532A  5083               	movf	3971,w,c	;volatile
 10429  00532C  1801               	xorwf	??_Lcd_Cmd,w,c
 10430  00532E  0BF7               	andlw	-9
 10431  005330  1801               	xorwf	??_Lcd_Cmd,w,c
 10432  005332  6E83               	movwf	3971,c	;volatile
 10433  005334  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10434  005338  90D8               	bcf	status,0,c
 10435  00533A  3201               	rrcf	??_Lcd_Cmd,f,c
 10436  00533C  90D8               	bcf	status,0,c
 10437  00533E  3201               	rrcf	??_Lcd_Cmd,f,c
 10438  005340  0E01               	movlw	1
 10439  005342  1601               	andwf	??_Lcd_Cmd,f,c
 10440  005344  4601               	rlncf	??_Lcd_Cmd,f,c
 10441  005346  4601               	rlncf	??_Lcd_Cmd,f,c
 10442  005348  5083               	movf	3971,w,c	;volatile
 10443  00534A  1801               	xorwf	??_Lcd_Cmd,w,c
 10444  00534C  0BFB               	andlw	-5
 10445  00534E  1801               	xorwf	??_Lcd_Cmd,w,c
 10446  005350  6E83               	movwf	3971,c	;volatile
 10447                           
 10448                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
 10449  005352  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10450  005356  90D8               	bcf	status,0,c
 10451  005358  3201               	rrcf	??_Lcd_Cmd,f,c
 10452  00535A  0E01               	movlw	1
 10453  00535C  1601               	andwf	??_Lcd_Cmd,f,c
 10454  00535E  4601               	rlncf	??_Lcd_Cmd,f,c
 10455  005360  5083               	movf	3971,w,c	;volatile
 10456  005362  1801               	xorwf	??_Lcd_Cmd,w,c
 10457  005364  0BFD               	andlw	-3
 10458  005366  1801               	xorwf	??_Lcd_Cmd,w,c
 10459  005368  6E83               	movwf	3971,c	;volatile
 10460  00536A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10461  00536E  0E01               	movlw	1
 10462  005370  1601               	andwf	??_Lcd_Cmd,f,c
 10463  005372  5083               	movf	3971,w,c	;volatile
 10464  005374  1801               	xorwf	??_Lcd_Cmd,w,c
 10465  005376  0BFE               	andlw	-2
 10466  005378  1801               	xorwf	??_Lcd_Cmd,w,c
 10467  00537A  6E83               	movwf	3971,c	;volatile
 10468                           
 10469                           ;./flex_lcd.h: 158: _delay(10);
 10470  00537C  0E03               	movlw	3
 10471  00537E                     u6377:
 10472  00537E  2EE8               	decfsz	wreg,f,c
 10473  005380  D7FE               	bra	u6377
 10474  005382  F000               	nop	
 10475                           
 10476                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10477  005384  8A83               	bsf	3971,5,c	;volatile
 10478  005386  0E03               	movlw	3
 10479  005388                     u6387:
 10480  005388  2EE8               	decfsz	wreg,f,c
 10481  00538A  D7FE               	bra	u6387
 10482  00538C  F000               	nop	
 10483  00538E  9A83               	bcf	3971,5,c	;volatile
 10484                           
 10485                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10486  005390  0E0F               	movlw	15
 10487  005392  6E01               	movwf	??_Lcd_Cmd& (0+255),c
 10488  005394  0E48               	movlw	72
 10489  005396                     u6397:
 10490  005396  2EE8               	decfsz	wreg,f,c
 10491  005398  D7FE               	bra	u6397
 10492  00539A  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
 10493  00539C  D7FC               	bra	u6397
 10494  00539E  0012               	return		;funcret
 10495  0053A0                     __end_of_Lcd_Cmd:
 10496                           	opt callstack 0
 10497                           
 10498                           	psect	rparam
 10499  0000                     tosu	equ	0xFFF
 10500                           tosh	equ	0xFFE
 10501                           tosl	equ	0xFFD
 10502                           stkptr	equ	0xFFC
 10503                           pclatu	equ	0xFFB
 10504                           pclath	equ	0xFFA
 10505                           pcl	equ	0xFF9
 10506                           tblptru	equ	0xFF8
 10507                           tblptrh	equ	0xFF7
 10508                           tblptrl	equ	0xFF6
 10509                           tablat	equ	0xFF5
 10510                           prodh	equ	0xFF4
 10511                           prodl	equ	0xFF3
 10512                           indf0	equ	0xFEF
 10513                           postinc0	equ	0xFEE
 10514                           postdec0	equ	0xFED
 10515                           preinc0	equ	0xFEC
 10516                           plusw0	equ	0xFEB
 10517                           fsr0h	equ	0xFEA
 10518                           fsr0l	equ	0xFE9
 10519                           wreg	equ	0xFE8
 10520                           indf1	equ	0xFE7
 10521                           postinc1	equ	0xFE6
 10522                           postdec1	equ	0xFE5
 10523                           preinc1	equ	0xFE4
 10524                           plusw1	equ	0xFE3
 10525                           fsr1h	equ	0xFE2
 10526                           fsr1l	equ	0xFE1
 10527                           bsr	equ	0xFE0
 10528                           indf2	equ	0xFDF
 10529                           postinc2	equ	0xFDE
 10530                           postdec2	equ	0xFDD
 10531                           preinc2	equ	0xFDC
 10532                           plusw2	equ	0xFDB
 10533                           fsr2h	equ	0xFDA
 10534                           fsr2l	equ	0xFD9
 10535                           status	equ	0xFD8


Data Sizes:
    Strings     259
    Constant    0
    Data        0
    BSS         164
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    102     150
    BANK1           256      0     114
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_37(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_37(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[8]), STR_22(CODE[12]), 
		 -> STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[13]), STR_18(CODE[7]), 
		 -> STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[7]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK0[17]), numero1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK0[17]), numero1(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S987_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK0[17]), numero1(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK0[17]), numero1(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[8]), STR_22(CODE[12]), 
		 -> STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[13]), STR_18(CODE[7]), 
		 -> STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[7]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[8]), STR_22(CODE[12]), 
		 -> STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[13]), STR_18(CODE[7]), 
		 -> STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[7]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[8]), STR_22(CODE[12]), 
		 -> STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[13]), STR_18(CODE[7]), 
		 -> STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[7]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK0[17]), numero1(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[13]), STR_9(CODE[16]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_5(CODE[16]), STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   57051
                                             91 COMRAM     2     2      0
                                             88 BANK0     14    14      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   37757
                                             81 COMRAM    10    10      0
                                             80 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34812
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   34417
                                             63 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23289
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3345
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3    3269
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3    1749
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fladd
   ___fldiv
   ___fleq
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___flmul (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      72       7       44.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167      20        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 25 18:23:00 2019

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l25 51EA                       l83 6E32                       l85 6E52  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l162 4D7A                      l173 5BDE  
                    l229 78B8                      l175 5BE6                      l255 7B9A  
                    l608 513E                      l927 5F20                      l872 6178  
                    l873 6156                      l938 5F8E                      l939 5F8A  
                    l957 63C2                      l974 6660                      l966 65DA  
                    l967 65D6                      l888 624A                      l897 62B0  
                    l898 62AC                      l998 562A             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      _abs 48B6  
                    _pad 4D4C             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_FOSC$HS 000000             ___flmul@aexp 0012             ___flmul@bexp 0013  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
           __CFG_LVP$OFF 000000             ___fltol@exp1 000A             __CFG_WDT$OFF 000000  
                   l1005 56A8                     ?_abs 0013                     l1060 5862  
                   l1029 48DE                     l1072 5ACA                     l1152 49E6  
                   l4000 4FA4                     l3202 6066                     l4002 4FB0  
                   l4020 4956                     l3300 61BE                     l4030 5BC0  
                   l3302 61C2                     l3310 61D4                     l3222 60AA  
                   l3320 623A                     l4008 4FCC                     l4200 7914  
                   l5000 72E2                     l3170 4908                     l3402 4D9C  
                   l3234 60CE                     l3226 60AE                     l4210 7932  
                   l4130 7698                     l3156 4DFA                     l4044 5C00  
                   l4220 7966                     l4108 75F4                     l4116 760A  
                   l3510 58FA                     l3502 58C0                     l3166 48F2  
                   l3174 4808                     l3406 4DC8                     l3422 5056  
                   l4126 7676                     l4134 76BE                     l5030 7448  
                   l5014 73BE                     l3520 5956                     l3176 480C  
                   l4048 5C10                     l3600 5E1A                     l3328 626E  
                   l3344 628E                     l3264 610A                     l3432 50A0  
                   l4216 7956                     l4144 772A                     l4152 7744  
                   l4128 768E                     l5032 745A                     l5024 73E0  
                   l4402 5798                     l4082 5D84                     l4058 5D08  
                   l3338 6284                     l3426 5060                     l4306 7D42  
                   l4242 7AFC                     l4226 7990                     l4234 7A86  
                   l4162 77C2                     l5042 747C                     l4412 5802  
                   l4404 57A0                     l3508 58E6                     l3524 596C  
                   l3540 53CC                     l3612 5E52                     l3604 5E1E  
                   l3372 631C                     l3364 62F6                     l3292 619C  
                   l3276 6164                     l4180 78A0                     l4164 7810  
                   l4406 57A6                     l3550 541E                     l4078 5D6C  
                   l3278 6168                     l3198 6062                     l3470 5B2A  
                   l3438 4A50                     l4334 7DD0                     l4318 7D84  
                   l4270 7C36                     l4190 78C8                     l4158 7788  
                   l4408 57CE                     l3528 5992                     l3560 547C  
                   l3544 53F0                     l3392 4D64                     l3720 6372  
                   l3376 6324                     l3456 5A2C                     l4336 7DDA  
                   l4256 7B92                     l4248 7B3A                     l4184 78C2  
                   l4168 784C                     l4096 75C6                     l4432 4EAC  
                   l5056 7558                     l3650 5F1E                     l3626 5E80  
                   l3618 5E68                     l3722 6382                     l3378 6326  
                   l3474 5B58                     l3466 5AEC                     l4346 7E30  
                   l4282 7C66                     l4290 7C86                     l4258 7BB4  
                   l4434 4EBA                     l4514 68AA                     l3564 54A2  
                   l3556 5466                     l3548 540A                     l3396 4D72  
                   l3644 5EF8                     l3636 5ED0                     l3580 5DDA  
                   l4372 7EBC                     l4356 7E5C                     l4516 68C8  
                   l4460 66EC                     l3398 4D84                     l3910 4BA6  
                   l3902 4B86                     l3662 5F54                     l3830 667E  
                   l3814 661E                     l3718 636E                     l4198 7910  
                   l4534 69B0                     l4518 68D6                     ?_pad 0011  
                   l4720 4BD2                     l3496 5898                     l3904 4B8E  
                   l3656 5F36                     l3584 5DDE                     l3736 63AE  
                   l4552 6ABE                     l4544 6A62                     l4480 6706  
                   l4472 66F8                     l4464 66F0                     l4456 66DA  
                   l4722 4BD8                     l4730 4C0E                     l4386 573E  
                   l3850 4C52                     l3914 4BB0                     l3690 6020  
                   l3682 5FD2                     l3930 4D2A                     l3818 663C  
                   l3746 63E0                     l3738 63B2                     l4298 7CAA  
                   l4458 66DC                     l4482 6748                     l4732 4C16  
                   l4724 4BDE                     l4804 56CE                     l4396 5788  
                   l4388 5742                     l4572 6BB8                     l4556 6AE8  
                   l4476 66FC                     l4468 66F4                     l4718 4BCC  
                   l4750 4AFE                     l4822 571A                     l4806 56DA  
                   l3862 4C78                     l3918 4BBE                     l3686 5FF6  
                   l3934 4D48                     l3926 4CF6                     l3950 5128  
                   l3942 50DE                     l4582 6BFE                     l4494 67B4  
                   l4910 6F18                     l4736 4C2A                     l4728 4BE6  
                   l4744 4AEC                     l3864 4C80                     l3856 4C62  
                   l3696 602C                     l4496 67D2                     l4656 4AA6  
                   l4762 4B48                     l4746 4AF2                     l4754 4B06  
                   l3882 4CB8                     l3874 4CA0                     l3698 602E  
                   l3946 5112                     l3794 65A0                     l4578 6BF4  
                   l4498 67E0                     l4658 4ACC                     l4842 6C7E  
                   l4748 4AF8                     l4756 4B2E                     l3956 5176  
                   l3788 6582                     l3964 4844                     l4588 6C16  
                   l4924 6FF4                     l4852 6CD8                     l4844 6CA2  
                   l4758 4B36                     l3878 4CAA                     l3894 4B6C  
                   l3990 4F8C                     l3974 4F42                     l4942 7068  
                   l4934 7016                     l4792 5658                     l4848 6CAC  
                   l4794 565E                     l4786 563A                     l3898 4B78  
                   l3994 4F9C                     l4874 6DD4                     l4858 6D30  
                   l4796 566A                     l4972 71BA                     l4868 6D7C  
                   l4798 5690                     l4958 7178                     l4894 6E9C  
                   l4968 719A                     l4986 7296                     l4994 72B8  
                   STR_1 7FAF                     STR_2 7F3A                     STR_3 7F2B  
                   STR_4 7F56                     STR_5 7F0B                     STR_6 7F56  
                   STR_7 7F48                     STR_8 7FBA                     STR_9 7EFB  
                   u3010 4DF2                     u3030 4E3A                     u4100 6004  
                   u3220 6180                     u3060 48AE                     u3070 48B0  
                   u4200 6544                     u5000 792E                     u4050 5F84  
                   u3170 612C                     u3180 613C                     u4205 653A  
                   u3510 48C4                     u3430 6302                     u3350 6292  
                   u3190 613E                     u4400 4B92                     u4240 65D0  
                   u3520 501C                     u4090 5FE0                     u3370 62A6  
                   u3610 49CC                     u4340 4C84                     u3620 49CE  
                   u3525 5012                     u5310 5832                     u4190 63CE  
                   u3710 5B0A                     u5230 7E46                     u6007 6CB6  
                   u4600 4952                     u5320 5834                     u3800 58FE  
                   u4280 662C                     u4520 4F30                     u3640 59FA  
                   u6017 6D44                     u4610 5B92                     u4450 4D44  
                   u4290 664A                     u4530 4F60                     u3570 5098  
                   u3650 5A1A                     u5250 7EA6                     u5170 7D66  
                   u3715 5B00                     u6107 7002                     u6027 6D5C  
                   u3740 487E                     u4700 5D38                     u4620 5B94  
                   u3580 509A                     u5260 7EA8                     u5500 690E  
                   u4701 5D36                     u3565 507A                     u3645 59F0  
                   u6117 7058                     u6037 6DE8                     u3750 4880  
                   u4710 5D46                     u3590 4A88                     u5510 6910  
                   u6207 554C                     u4535 4F56                     u6127 7186  
                   u6047 6E24                     u4720 5D4A                     u5600 6B6C  
                   u5520 691E                     u6217 55C2                     u6137 71AA  
                   u6057 6E42                     u5290 5784                     u4650 5BD4  
                   u4570 4FB6                     u3690 5AAA                     u4810 764C  
                   u5450 6818                     u6307 51DE                     u6227 55CC  
                   u3675 5A44                     u6147 72A4                     u6067 6EB0  
                   u3860 5422                     u4740 5D56                     u3676 5A4A  
                   u4900 7874                     u4820 764E                     u5460 681A  
                   u6317 5204                     u6237 55D6                     u3781 58C6  
                   u3677 5A58                     u3597 4A7E                     u6157 72D2  
                   u6077 6EC8                     u4670 5BFA                     u5390 4F00  
                   u5470 6828                     u6327 521C                     u6247 55E2  
                   u3695 5AA0                     u6167 73CC                     u6087 6EE0  
                   u4680 5D16                     u5560 69E4                     u6337 5246  
                   u6257 5198                     u6177 7468                     u6097 6F08  
                   u4930 78AE                     u4850 7700                     u5635 528E  
                   u6347 525E                     u6267 51A6                     u6187 7566  
                   u4860 7702                     u4780 75E4                     u6357 52FE  
                   u5645 52AA                     u6277 51B4                     u6197 5542  
                   u5590 6B6A                     u6367 5308                     u5655 52CC  
                   u6287 51C2                     u4960 78E0                     u6377 537E  
                   u6297 51D0                     u5665 54D2                     u6387 5388  
                   u5675 54EE                     u6397 5396                     u5685 5510  
                   u5790 56E4                     u5997 6C6E             __CFG_PWRT$ON 000000  
                   abs@a 0013                     _dbuf 0100                     _atoi 572C  
                   _main 6C4A                     _dtoa 5B6A                     _prec 00D2  
                   _nout 00CE                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 4FDE                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0012          __end_of_Lcd_Cmd 53A0             _tolower$1059 000D  
        __end_of_Lcd_Out 4C3E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
             _Lcd_Chr_CP 54C4                    ??_abs 0015                    ??_pad 0017  
         Lcd_Out2@buffer 0005            __CFG_PLLDIV$1 000000            ___fltol@sign1 0009  
        __end_of___aodiv 59B4                    ?_atoi 0008          __end_of___fladd 6342  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 54C4  
        __end_of___fldiv 6036          __end_of___awdiv 4CC2          __end_of___flneg 4856  
                  STR_10 7F1B                    STR_11 7FCC                    STR_12 7FE4  
                  STR_20 7FC4                    STR_21 7FE4                    STR_13 7F8C  
                  STR_14 7FD4                    STR_22 7F98                    STR_15 7FE4  
                  STR_31 7FEF                    STR_23 7F72                    STR_32 7FF7  
                  STR_24 7FDC                    STR_16 7F64                    STR_17 7FD4  
                  STR_25 7FE4                    STR_18 7FE4                    STR_26 7FA4  
                  STR_35 7FFB                    STR_27 7FEB                    STR_19 7F7F  
                  STR_28 7FF3          __end_of___awmod 4BC8                    STR_37 7FFB  
        __end_of___flmul 6694          __end_of___flsub 49A4          __end_of___fltol 4FDE  
        ___awdiv@divisor 0003          ___awdiv@counter 0005             vfpfcnvrt@fmt 0042  
                  _PORTB 000F81            __CFG_USBDIV$1 000000                    _TRISB 000F93  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 005E                    _fputc 4DE2  
                  _fputs 48E8          __end_of_isdigit 4886                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00D0  
                  main@R 00BA                    _putch 47B0                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032          __end_of_isspace 495E  
        __end_of_isupper 48B6                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 4A40           ?___fpclassifyf 0001          __end_of_tolower 49F0  
        __end_of_strncmp 4F24           __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 5280  
       __end_of_Lcd_Out2 4B58          __initialization 47D8             __end_of_atoi 586C  
           __end_of_main 757C             __end_of_dtoa 5DAE                   ??_atoi 000A  
                 ??_main 005C                   ??_dtoa 0026            __activetblptr 000002  
        __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1                   ?_fputc 0001  
                 ?_fputs 000A         ___awdiv@dividend 0001                   ?_putch 0001  
              ??_Lcd_Cmd 0001            vfpfcnvrt@done 00A0                ??_Lcd_Out 0007  
       __end_of___xxtofl 572C           __CFG_XINST$OFF 000000             vfprintf@cfmt 0050  
                 ___flge 50AA                   ___fleq 4CC2              ?_Lcd_Chr_CP 0001  
              ??___aodiv 0011                ??___fladd 0009                ??___aomod 0011  
                 ___wmul 47B2                ??___fldiv 0009                ??___awdiv 0005  
              ??___flneg 0005           __CFG_STVREN$ON 000000                ??___awmod 0005  
              ??___flmul 0009                ??___flsub 0022                ??___fltol 0005  
                 _efgtoa 757C                   _floorf 59B4                   clear_0 47DE  
                 clear_1 47EA         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 main@D1 00BE                   main@D2 00C2          ___awmod@counter 0005  
                 pad@buf 0013                   dtoa@fp 001C                   _strcpy 4A40  
                 _strlen 47FE                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 7EFA                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 4AE8                ??_sprintf 0052  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 001A  
             ___flge@ff2 001E          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 47F4  
        __CFG_PBADEN$OFF 000000               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001            __end_of_fputc 4E82  
          __end_of_fputs 4920            __end_of_putch 47B2                ?_Lcd_Init 0001  
              ?_Lcd_Out2 0004          __CFG_LPT1OSC$ON 000000                  ??_fputc 0005  
                ??_fputs 000E      __size_of_Lcd_Chr_CP 0128                  ??_putch 0001  
             __pbssBANK0 00C6               __pbssBANK1 0100               _efgtoa$440 0066  
             _efgtoa$450 006E               _efgtoa$444 0068               _efgtoa$439 0064  
             _efgtoa$448 006A               _efgtoa$449 006C                  ?___flge 001A  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 002E  
                ?_floorf 001A                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 05B6               ??_Lcd_Init 0004  
             ??_Lcd_Out2 0007          __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 5280  
                _Lcd_Out 4BC8                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___aodiv 586C  
                ___fladd 6036                  ___aomod 53A0                  ___fldiv 5DAE  
                ___awdiv 4C3E                  ___flneg 4828                  ___awmod 4B58  
                ___flmul 6342                  ___flsub 495E                  ___fltol 4F24  
        __size_of___wmul 0026                ?_vfprintf 004A          __size_of_efgtoa 097E  
        __size_of_floorf 01B6                  __pcinit 47D8                  __ramtop 0800  
                __ptext0 6C4A                  __ptext1 49F0                  __ptext2 4A92  
                __ptext3 6694                  __ptext4 4E82                  __ptext5 757C  
                __ptext6 49A4                  __ptext7 4886                  __ptext8 4A40  
                __ptext9 59B4          __size_of_strcpy 0052          __size_of_strlen 002A  
                _palabra 0161             __size_of_abs 0032             __size_of_pad 0096  
                _isdigit 4856               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 4920                  _isupper 4886                  efgtoa@c 0034  
                efgtoa@d 0078                  efgtoa@e 0090                  efgtoa@f 0030  
                efgtoa@g 008C                  efgtoa@h 0082                  efgtoa@i 008A  
                efgtoa@l 0086                  efgtoa@m 0074                  efgtoa@n 0092  
                efgtoa@p 007C                  efgtoa@t 0070                  efgtoa@u 0094  
                efgtoa@w 007F                  _numero1 00E5                  _numero2 00D4  
                _numero3 0150                  atoi@neg 000E                  main@SEL 00B8  
                _sprintf 49F0                  _tolower 49A4                  _strncmp 4E82  
   end_of_initialization 47F4                  floorf@e 0028                  floorf@m 0024  
                floorf@u 002A                  floorf@x 001A                  fputc@fp 0003  
          __Lmediumconst 7EFA                  fputs@fp 000C        __end_of_vfpfcnvrt 6C4A  
             efgtoa@mode 0081               efgtoa@sign 007A             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0009                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0050                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _PORTCbits 000F82  
              _PORTDbits 000F83              ___fladd@grs 0010            ___xxtofl@sign 0009  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 0014  
            ___fldiv@rem 000D       __end_of_Lcd_Chr_CP 55EC              ___flmul@grs 000E  
         __end_of___flge 517A           __end_of___fleq 4D4C              vfpfcnvrt@ap 0044  
            vfpfcnvrt@ct 00AC              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0098  
         __end_of___wmul 47D8           __end_of_efgtoa 7EFA           __end_of_floorf 5B6A  
             floorf@F524 00C6           __end_of_strcpy 4A92           __end_of_strlen 4828  
    start_initialization 47D8              __end_of_abs 48E8              __end_of_pad 4DE2  
          Lcd_Out@buffer 0005        __size_of_Lcd_Init 0106        __size_of_Lcd_Out2 0070  
  __end_of___fpclassifyf 50AA              vfprintf@fmt 004C                 ??___flge 0022  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0035  
               ??_floorf 001E                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 0005  
              ___fldiv@b 0001                ___flmul@a 0005                ___flmul@b 0001  
            __pbssCOMRAM 005E                ___flsub@a 001E                ___flsub@b 001A  
          __pcstackBANK0 0060         ___aodiv@dividend 0001        __size_of___xxtofl 0140  
               ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004            __pmediumconst 7EFA  
               ?___aodiv 0001                 ?___fladd 0001                 ?___aomod 0001  
               ?___fldiv 0001                 ?___awdiv 0001         ___aodiv@quotient 0013  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 0001  
               ?___flsub 001A                 ?___fltol 0001        __size_of_vfprintf 0056  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00B0                 ?_tolower 0007           __size_of_fputc 00A0  
         __size_of_fputs 0038                 ?_strncmp 0001           __size_of_putch 0002  
         ___wmul@product 0005                 Lcd_Out@x 0004         __CFG_WDTPS$32768 000000  
               Lcd_Out@y 0009                _vfpfcnvrt 6694             Lcd_Init@data 0005  
      ___wmul@multiplier 0001             Lcd_Out2@data 000A                 _Lcd_Init 517A  
               _Lcd_Out2 4AE8               vfpfcnvrt@c 00AF               vfpfcnvrt@f 00A8  
       __size_of_Lcd_Cmd 0120         __size_of_Lcd_Out 0076                 __Hrparam 0000  
             vfprintf@ap 004E                 __Lrparam 0000               vfprintf@fp 004A  
       __size_of___aodiv 0148         __size_of___fladd 030C         __size_of___aomod 0124  
       __size_of___fldiv 0288         __size_of___awdiv 0084         __size_of___flneg 002E  
       __size_of___awmod 0070         __size_of___flmul 0352         __size_of___flsub 0046  
       __size_of___fltol 00BA               ?_vfpfcnvrt 0040          ___aodiv@divisor 0009  
        ___aodiv@counter 0011       ___fpclassifyf@F463 00CA               sprintf@fmt 00B2  
               ___xxtofl 55EC                 _atoi$943 0010                 _atoi$944 0014  
               _atoi$945 0012         __size_of_isdigit 0030           Lcd_Chr_CP@data 0003  
               _dtoa$415 002E         __size_of_isspace 003E                 __ptext10 4FDE  
               __ptext11 4F24                 __ptext20 4C3E                 __ptext12 495E  
               __ptext21 5B6A                 __ptext13 6036                 __ptext30 572C  
               __ptext22 4D4C                 __ptext14 4828                 __ptext31 4920  
               __ptext23 47FE                 __ptext15 6342                 __ptext32 4856  
               __ptext24 48E8                 __ptext16 50AA                 __ptext33 47B2  
               __ptext25 4DE2                 __ptext17 4CC2                 __ptext34 55EC  
               __ptext26 47B0                 __ptext18 5DAE                 __ptext35 4AE8  
               __ptext27 48B6                 __ptext19 4B58                 __ptext36 4BC8  
               __ptext28 53A0                 __ptext37 54C4                 __ptext29 586C  
               __ptext38 517A                 __ptext39 5280         __size_of_isupper 0030  
       __size_of_sprintf 0050         __size_of_tolower 004C               strcpy@dest 0001  
       __size_of_strncmp 00A2              Lcd_Cmd@data 0003            __size_of_atoi 0140  
          __size_of_main 0932            __size_of_dtoa 0244                 efgtoa@fp 002E  
               efgtoa@ne 0076                 efgtoa@pp 0072                 efgtoa@ou 0060  
               _vfprintf 4A92              _isspace$974 0007         ___aomod@dividend 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000              Lcd_Out@data 000A                 isdigit@c 0001  
              sprintf@ap 0054                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 007E          ___aomod@divisor 0009              ??_vfpfcnvrt 0046  
          _vfpfcnvrt$470 00A6          ___aomod@counter 0011            _vfpfcnvrt$464 00A2  
          _vfpfcnvrt$465 00A4                 sprintf@f 0056                 tolower@c 0007  
               sprintf@s 00B0   __size_of___fpclassifyf 00CC                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___aodiv@sign 0012             ___fladd@aexp 000E             ___fladd@bexp 000F  
           ___aomod@sign 0012  
