

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 26 16:38:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _PORTB	set	3969
    90  0000                     _PORTCbits	set	3970
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISB	set	3987
    93  0000                     _TRISD	set	3989
    94  0000                     _PORTDbits	set	3971
    95  0000                     _TRISDbits	set	3989
    96                           
    97                           	psect	smallconst
    98  000800                     __psmallconst:
    99                           	opt callstack 0
   100  000800  00                 	db	0
   101  000801                     STR_9:
   102  000801  31                 	db	49	;'1'
   103  000802  3D                 	db	61	;'='
   104  000803  2B                 	db	43
   105  000804  20                 	db	32
   106  000805  33                 	db	51	;'3'
   107  000806  3D                 	db	61	;'='
   108  000807  2D                 	db	45
   109  000808  20                 	db	32
   110  000809  37                 	db	55	;'7'
   111  00080A  3D                 	db	61	;'='
   112  00080B  2A                 	db	42
   113  00080C  20                 	db	32
   114  00080D  31                 	db	49	;'1'
   115  00080E  35                 	db	53	;'5'
   116  00080F  3D                 	db	61	;'='
   117  000810  2F                 	db	47
   118  000811  00                 	db	0
   119  000812                     STR_10:
   120  000812  53                 	db	83	;'S'
   121  000813  65                 	db	101	;'e'
   122  000814  6C                 	db	108	;'l'
   123  000815  65                 	db	101	;'e'
   124  000816  63                 	db	99	;'c'
   125  000817  63                 	db	99	;'c'
   126  000818  69                 	db	105	;'i'
   127  000819  6F                 	db	111	;'o'
   128  00081A  6E                 	db	110	;'n'
   129  00081B  3A                 	db	58	;':'
   130  00081C  20                 	db	32
   131  00081D  25                 	db	37
   132  00081E  30                 	db	48	;'0'
   133  00081F  33                 	db	51	;'3'
   134  000820  64                 	db	100	;'d'
   135  000821  00                 	db	0
   136  000822                     STR_8:
   137  000822  4F                 	db	79	;'O'
   138  000823  70                 	db	112	;'p'
   139  000824  65                 	db	101	;'e'
   140  000825  72                 	db	114	;'r'
   141  000826  61                 	db	97	;'a'
   142  000827  63                 	db	99	;'c'
   143  000828  69                 	db	105	;'i'
   144  000829  6F                 	db	111	;'o'
   145  00082A  6E                 	db	110	;'n'
   146  00082B  20                 	db	32
   147  00082C  50                 	db	80	;'P'
   148  00082D  72                 	db	114	;'r'
   149  00082E  72                 	db	114	;'r'
   150  00082F  6F                 	db	111	;'o'
   151  000830  00                 	db	0
   152  000831                     STR_6:
   153  000831  4E                 	db	78	;'N'
   154  000832  75                 	db	117	;'u'
   155  000833  6D                 	db	109	;'m'
   156  000834  62                 	db	98	;'b'
   157  000835  65                 	db	101	;'e'
   158  000836  72                 	db	114	;'r'
   159  000837  3A                 	db	58	;':'
   160  000838  25                 	db	37
   161  000839  30                 	db	48	;'0'
   162  00083A  2E                 	db	46
   163  00083B  30                 	db	48	;'0'
   164  00083C  33                 	db	51	;'3'
   165  00083D  66                 	db	102	;'f'
   166  00083E  00                 	db	0
   167  00083F                     STR_16:
   168  00083F  52                 	db	82	;'R'
   169  000840  65                 	db	101	;'e'
   170  000841  73                 	db	115	;'s'
   171  000842  74                 	db	116	;'t'
   172  000843  61                 	db	97	;'a'
   173  000844  3D                 	db	61	;'='
   174  000845  20                 	db	32
   175  000846  25                 	db	37
   176  000847  30                 	db	48	;'0'
   177  000848  2E                 	db	46
   178  000849  30                 	db	48	;'0'
   179  00084A  66                 	db	102	;'f'
   180  00084B  00                 	db	0
   181  00084C                     STR_4:
   182  00084C  4E                 	db	78	;'N'
   183  00084D  75                 	db	117	;'u'
   184  00084E  6D                 	db	109	;'m'
   185  00084F  62                 	db	98	;'b'
   186  000850  65                 	db	101	;'e'
   187  000851  72                 	db	114	;'r'
   188  000852  3A                 	db	58	;':'
   189  000853  25                 	db	37
   190  000854  30                 	db	48	;'0'
   191  000855  2E                 	db	46
   192  000856  33                 	db	51	;'3'
   193  000857  66                 	db	102	;'f'
   194  000858  00                 	db	0
   195  000859                     STR_13:
   196  000859  53                 	db	83	;'S'
   197  00085A  75                 	db	117	;'u'
   198  00085B  6D                 	db	109	;'m'
   199  00085C  61                 	db	97	;'a'
   200  00085D  3D                 	db	61	;'='
   201  00085E  20                 	db	32
   202  00085F  25                 	db	37
   203  000860  30                 	db	48	;'0'
   204  000861  2E                 	db	46
   205  000862  30                 	db	48	;'0'
   206  000863  66                 	db	102	;'f'
   207  000864  00                 	db	0
   208  000865                     STR_22:
   209  000865  4D                 	db	77	;'M'
   210  000866  75                 	db	117	;'u'
   211  000867  6C                 	db	108	;'l'
   212  000868  74                 	db	116	;'t'
   213  000869  3D                 	db	61	;'='
   214  00086A  20                 	db	32
   215  00086B  25                 	db	37
   216  00086C  30                 	db	48	;'0'
   217  00086D  2E                 	db	46
   218  00086E  30                 	db	48	;'0'
   219  00086F  66                 	db	102	;'f'
   220  000870  00                 	db	0
   221  000871                     STR_26:
   222  000871  44                 	db	68	;'D'
   223  000872  69                 	db	105	;'i'
   224  000873  76                 	db	118	;'v'
   225  000874  3D                 	db	61	;'='
   226  000875  20                 	db	32
   227  000876  25                 	db	37
   228  000877  30                 	db	48	;'0'
   229  000878  2E                 	db	46
   230  000879  30                 	db	48	;'0'
   231  00087A  66                 	db	102	;'f'
   232  00087B  00                 	db	0
   233  00087C                     STR_5:
   234  00087C  4E                 	db	78	;'N'
   235  00087D  75                 	db	117	;'u'
   236  00087E  6D                 	db	109	;'m'
   237  00087F  65                 	db	101	;'e'
   238  000880  72                 	db	114	;'r'
   239  000881  6F                 	db	111	;'o'
   240  000882  32                 	db	50	;'2'
   241  000883  00                 	db	0
   242  000884                     STR_23:
   243  000884  4E                 	db	78	;'N'
   244  000885  65                 	db	101	;'e'
   245  000886  6C                 	db	108	;'l'
   246  000887  50                 	db	80	;'P'
   247  000888  72                 	db	114	;'r'
   248  000889  72                 	db	114	;'r'
   249  00088A  6F                 	db	111	;'o'
   250  00088B  00                 	db	0
   251  00088C                     STR_20:
   252  00088C  25                 	db	37
   253  00088D  30                 	db	48	;'0'
   254  00088E  2E                 	db	46
   255  00088F  30                 	db	48	;'0'
   256  000890  66                 	db	102	;'f'
   257  000891  2A                 	db	42
   258  000892  00                 	db	0
   259  000893                     STR_11:
   260  000893  25                 	db	37
   261  000894  30                 	db	48	;'0'
   262  000895  2E                 	db	46
   263  000896  30                 	db	48	;'0'
   264  000897  66                 	db	102	;'f'
   265  000898  2B                 	db	43
   266  000899  00                 	db	0
   267  00089A                     STR_24:
   268  00089A  25                 	db	37
   269  00089B  30                 	db	48	;'0'
   270  00089C  2E                 	db	46
   271  00089D  30                 	db	48	;'0'
   272  00089E  66                 	db	102	;'f'
   273  00089F  2F                 	db	47
   274  0008A0  00                 	db	0
   275  0008A1                     STR_3:
   276  0008A1  44                 	db	68	;'D'
   277  0008A2  61                 	db	97	;'a'
   278  0008A3  74                 	db	116	;'t'
   279  0008A4  6F                 	db	111	;'o'
   280  0008A5  31                 	db	49	;'1'
   281  0008A6  00                 	db	0
   282  0008A7                     STR_2:
   283  0008A7  43                 	db	67	;'C'
   284  0008A8  61                 	db	97	;'a'
   285  0008A9  6C                 	db	108	;'l'
   286  0008AA  63                 	db	99	;'c'
   287  0008AB  75                 	db	117	;'u'
   288  0008AC  00                 	db	0
   289  0008AD                     STR_7:
   290  0008AD  43                 	db	67	;'C'
   291  0008AE  75                 	db	117	;'u'
   292  0008AF  61                 	db	97	;'a'
   293  0008B0  6C                 	db	108	;'l'
   294  0008B1  00                 	db	0
   295  0008B2                     STR_1:
   296  0008B2  57                 	db	87	;'W'
   297  0008B3  6F                 	db	111	;'o'
   298  0008B4  6C                 	db	108	;'l'
   299  0008B5  6F                 	db	111	;'o'
   300  0008B6  00                 	db	0
   301  0008B7                     STR_27:
   302  0008B7  49                 	db	73	;'I'
   303  0008B8  4E                 	db	78	;'N'
   304  0008B9  46                 	db	70	;'F'
   305  0008BA  00                 	db	0
   306  0008BB                     STR_31:
   307  0008BB  4E                 	db	78	;'N'
   308  0008BC  41                 	db	65	;'A'
   309  0008BD  4E                 	db	78	;'N'
   310  0008BE  00                 	db	0
   311  0008BF                     STR_28:
   312  0008BF  69                 	db	105	;'i'
   313  0008C0  6E                 	db	110	;'n'
   314  0008C1  66                 	db	102	;'f'
   315  0008C2  00                 	db	0
   316  0008C3                     STR_32:
   317  0008C3  6E                 	db	110	;'n'
   318  0008C4  61                 	db	97	;'a'
   319  0008C5  6E                 	db	110	;'n'
   320  0008C6  00                 	db	0
   321  0008C7                     STR_35:
   322  0008C7  6C                 	db	108	;'l'
   323  0008C8  66                 	db	102	;'f'
   324  0008C9  00                 	db	0
   325  0000                     
   326                           ; #config settings
   327  0008CA  00                 	db	0	; dummy byte at the end
   328  0000                     
   329                           	psect	cinit
   330  003F60                     __pcinit:
   331                           	opt callstack 0
   332  003F60                     start_initialization:
   333                           	opt callstack 0
   334  003F60                     __initialization:
   335                           	opt callstack 0
   336                           
   337                           ; Clear objects allocated to BANK1 (112 bytes)
   338  003F60  EE01  F000         	lfsr	0,__pbssBANK1
   339  003F64  0E70               	movlw	112
   340  003F66                     clear_0:
   341  003F66  6AEE               	clrf	postinc0,c
   342  003F68  06E8               	decf	wreg,f,c
   343  003F6A  E1FD               	bnz	clear_0
   344                           
   345                           ; Clear objects allocated to BANK0 (64 bytes)
   346  003F6C  EE00  F0B8         	lfsr	0,__pbssBANK0
   347  003F70  0E40               	movlw	64
   348  003F72                     clear_1:
   349  003F72  6AEE               	clrf	postinc0,c
   350  003F74  06E8               	decf	wreg,f,c
   351  003F76  E1FD               	bnz	clear_1
   352                           
   353                           ; Clear objects allocated to COMRAM (2 bytes)
   354  003F78  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   355  003F7A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   356  003F7C                     end_of_initialization:
   357                           	opt callstack 0
   358  003F7C                     __end_of__initialization:
   359                           	opt callstack 0
   360  003F7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   361  003F7E  6EF8               	movwf	tblptru,c
   362  003F80  0100               	movlb	0
   363  003F82  EF25  F009         	goto	_main	;jump to C main() function
   364                           
   365                           	psect	bssCOMRAM
   366  00005E                     __pbssCOMRAM:
   367                           	opt callstack 0
   368  00005E                     _flags:
   369                           	opt callstack 0
   370  00005E                     	ds	2
   371                           
   372                           	psect	bssBANK0
   373  0000B8                     __pbssBANK0:
   374                           	opt callstack 0
   375  0000B8                     floorf@F524:
   376                           	opt callstack 0
   377  0000B8                     	ds	4
   378  0000BC                     ___fpclassifyf@F463:
   379                           	opt callstack 0
   380  0000BC                     	ds	4
   381  0000C0                     _Num2:
   382                           	opt callstack 0
   383  0000C0                     	ds	4
   384  0000C4                     _Num1:
   385                           	opt callstack 0
   386  0000C4                     	ds	4
   387  0000C8                     _nout:
   388                           	opt callstack 0
   389  0000C8                     	ds	2
   390  0000CA                     _width:
   391                           	opt callstack 0
   392  0000CA                     	ds	2
   393  0000CC                     _prec:
   394                           	opt callstack 0
   395  0000CC                     	ds	2
   396  0000CE                     _Selector3:
   397                           	opt callstack 0
   398  0000CE                     	ds	2
   399  0000D0                     _Selector2:
   400                           	opt callstack 0
   401  0000D0                     	ds	2
   402  0000D2                     _Selector:
   403                           	opt callstack 0
   404  0000D2                     	ds	2
   405  0000D4                     _numero2:
   406                           	opt callstack 0
   407  0000D4                     	ds	16
   408  0000E4                     _numero1:
   409                           	opt callstack 0
   410  0000E4                     	ds	16
   411  0000F4                     _Resultado:
   412                           	opt callstack 0
   413  0000F4                     	ds	4
   414                           
   415                           	psect	bssBANK1
   416  000100                     __pbssBANK1:
   417                           	opt callstack 0
   418  000100                     _dbuf:
   419                           	opt callstack 0
   420  000100                     	ds	80
   421  000150                     _numero3:
   422                           	opt callstack 0
   423  000150                     	ds	16
   424  000160                     _Word:
   425                           	opt callstack 0
   426  000160                     	ds	16
   427                           
   428                           	psect	cstackBANK0
   429  000060                     __pcstackBANK0:
   430                           	opt callstack 0
   431  000060                     efgtoa@ou:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x0
   435  000060                     	ds	4
   436  000064                     _efgtoa$439:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x4
   440  000064                     	ds	2
   441  000066                     _efgtoa$440:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  000066                     	ds	2
   446  000068                     _efgtoa$444:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x8
   450  000068                     	ds	2
   451  00006A                     _efgtoa$448:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0xA
   455  00006A                     	ds	2
   456  00006C                     _efgtoa$449:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0xC
   460  00006C                     	ds	2
   461  00006E                     _efgtoa$450:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0xE
   465  00006E                     	ds	2
   466  000070                     efgtoa@t:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x10
   470  000070                     	ds	2
   471  000072                     efgtoa@pp:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475  000072                     	ds	2
   476  000074                     efgtoa@m:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480  000074                     	ds	2
   481  000076                     efgtoa@ne:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485  000076                     	ds	2
   486  000078                     efgtoa@d:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  000078                     	ds	2
   491  00007A                     efgtoa@sign:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x1A
   495  00007A                     	ds	2
   496  00007C                     efgtoa@p:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x1C
   500  00007C                     	ds	2
   501  00007E                     efgtoa@nmode:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x1E
   505  00007E                     	ds	1
   506  00007F                     efgtoa@w:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x1F
   510  00007F                     	ds	2
   511  000081                     efgtoa@mode:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0x21
   515  000081                     	ds	1
   516  000082                     efgtoa@h:
   517                           	opt callstack 0
   518                           
   519                           ; 4 bytes @ 0x22
   520  000082                     	ds	4
   521  000086                     efgtoa@l:
   522                           	opt callstack 0
   523                           
   524                           ; 4 bytes @ 0x26
   525  000086                     	ds	4
   526  00008A                     efgtoa@i:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x2A
   530  00008A                     	ds	2
   531  00008C                     efgtoa@g:
   532                           	opt callstack 0
   533                           
   534                           ; 4 bytes @ 0x2C
   535  00008C                     	ds	4
   536  000090                     efgtoa@e:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x30
   540  000090                     	ds	2
   541  000092                     efgtoa@n:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x32
   545  000092                     	ds	2
   546  000094                     efgtoa@u:
   547                           	opt callstack 0
   548                           
   549                           ; 4 bytes @ 0x34
   550  000094                     	ds	4
   551  000098                     vfpfcnvrt@ll:
   552                           	opt callstack 0
   553                           
   554                           ; 8 bytes @ 0x38
   555  000098                     	ds	8
   556  0000A0                     vfpfcnvrt@done:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x40
   560  0000A0                     	ds	2
   561  0000A2                     _vfpfcnvrt$464:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x42
   565  0000A2                     	ds	2
   566  0000A4                     _vfpfcnvrt$465:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x44
   570  0000A4                     	ds	2
   571  0000A6                     _vfpfcnvrt$470:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x46
   575  0000A6                     	ds	2
   576  0000A8                     vfpfcnvrt@f:
   577                           	opt callstack 0
   578                           
   579                           ; 4 bytes @ 0x48
   580  0000A8                     	ds	4
   581  0000AC                     vfpfcnvrt@ct:
   582                           	opt callstack 0
   583                           
   584                           ; 3 bytes @ 0x4C
   585  0000AC                     	ds	3
   586  0000AF                     vfpfcnvrt@c:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x4F
   590  0000AF                     	ds	1
   591  0000B0                     ?_sprintf:
   592                           	opt callstack 0
   593  0000B0                     sprintf@s:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x50
   597  0000B0                     	ds	2
   598  0000B2                     sprintf@fmt:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x52
   602  0000B2                     	ds	6
   603                           
   604                           	psect	cstackCOMRAM
   605  000001                     __pcstackCOMRAM:
   606                           	opt callstack 0
   607  000001                     ??_Lcd_Cmd:
   608  000001                     ??_Lcd_Chr_CP:
   609  000001                     ?_strlen:
   610                           	opt callstack 0
   611  000001                     ?___fpclassifyf:
   612                           	opt callstack 0
   613  000001                     ?_isupper:
   614                           	opt callstack 0
   615  000001                     ?_isdigit:
   616                           	opt callstack 0
   617  000001                     ?_strncmp:
   618                           	opt callstack 0
   619  000001                     ?_isspace:
   620                           	opt callstack 0
   621  000001                     ?___wmul:
   622                           	opt callstack 0
   623  000001                     ?___awdiv:
   624                           	opt callstack 0
   625  000001                     ?___awmod:
   626                           	opt callstack 0
   627  000001                     ?___fladd:
   628                           	opt callstack 0
   629  000001                     ?___fldiv:
   630                           	opt callstack 0
   631  000001                     ?___flmul:
   632                           	opt callstack 0
   633  000001                     ?___flneg:
   634                           	opt callstack 0
   635  000001                     ?___fltol:
   636                           	opt callstack 0
   637  000001                     ?___xxtofl:
   638                           	opt callstack 0
   639  000001                     ?___aodiv:
   640                           	opt callstack 0
   641  000001                     ?___aomod:
   642                           	opt callstack 0
   643  000001                     ___wmul@multiplier:
   644                           	opt callstack 0
   645  000001                     ___awdiv@dividend:
   646                           	opt callstack 0
   647  000001                     ___awmod@dividend:
   648                           	opt callstack 0
   649  000001                     isdigit@c:
   650                           	opt callstack 0
   651  000001                     isspace@c:
   652                           	opt callstack 0
   653  000001                     isupper@c:
   654                           	opt callstack 0
   655  000001                     fputc@c:
   656                           	opt callstack 0
   657  000001                     strcpy@dest:
   658                           	opt callstack 0
   659  000001                     strlen@s:
   660                           	opt callstack 0
   661  000001                     strncmp@_l:
   662                           	opt callstack 0
   663  000001                     ___fleq@ff1:
   664                           	opt callstack 0
   665  000001                     ___flneg@f1:
   666                           	opt callstack 0
   667  000001                     ___fltol@f1:
   668                           	opt callstack 0
   669  000001                     ___fladd@b:
   670                           	opt callstack 0
   671  000001                     ___fldiv@b:
   672                           	opt callstack 0
   673  000001                     ___flmul@b:
   674                           	opt callstack 0
   675  000001                     ___xxtofl@val:
   676                           	opt callstack 0
   677  000001                     ___fpclassifyf@x:
   678                           	opt callstack 0
   679  000001                     ___aodiv@dividend:
   680                           	opt callstack 0
   681  000001                     ___aomod@dividend:
   682                           	opt callstack 0
   683                           
   684                           ; 8 bytes @ 0x0
   685  000001                     	ds	2
   686  000003                     ??_isupper:
   687  000003                     ??_isdigit:
   688  000003                     ??_isspace:
   689  000003                     Lcd_Chr_CP@data:
   690                           	opt callstack 0
   691  000003                     Lcd_Cmd@data:
   692                           	opt callstack 0
   693  000003                     ___wmul@multiplicand:
   694                           	opt callstack 0
   695  000003                     ___awdiv@divisor:
   696                           	opt callstack 0
   697  000003                     ___awmod@divisor:
   698                           	opt callstack 0
   699  000003                     fputc@fp:
   700                           	opt callstack 0
   701  000003                     strcpy@src:
   702                           	opt callstack 0
   703  000003                     strlen@a:
   704                           	opt callstack 0
   705  000003                     strncmp@_r:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000003                     	ds	1
   710  000004                     ??_Lcd_Init:
   711  000004                     Lcd_Out@x:
   712                           	opt callstack 0
   713  000004                     Lcd_Out2@x:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x3
   717  000004                     	ds	1
   718  000005                     ??_fputc:
   719  000005                     ??___fpclassifyf:
   720  000005                     ??_strcpy:
   721  000005                     ??___fltol:
   722  000005                     ??___xxtofl:
   723  000005                     Lcd_Init@data:
   724                           	opt callstack 0
   725  000005                     ___awdiv@counter:
   726                           	opt callstack 0
   727  000005                     ___awmod@counter:
   728                           	opt callstack 0
   729  000005                     Lcd_Out@buffer:
   730                           	opt callstack 0
   731  000005                     Lcd_Out2@buffer:
   732                           	opt callstack 0
   733  000005                     ___wmul@product:
   734                           	opt callstack 0
   735  000005                     strncmp@n:
   736                           	opt callstack 0
   737  000005                     ___fleq@ff2:
   738                           	opt callstack 0
   739  000005                     ___fladd@a:
   740                           	opt callstack 0
   741  000005                     ___fldiv@a:
   742                           	opt callstack 0
   743  000005                     ___flmul@a:
   744                           	opt callstack 0
   745                           
   746                           ; 4 bytes @ 0x4
   747  000005                     	ds	1
   748  000006                     ___awdiv@sign:
   749                           	opt callstack 0
   750  000006                     ___awmod@sign:
   751                           	opt callstack 0
   752                           
   753                           ; 1 bytes @ 0x5
   754  000006                     	ds	1
   755  000007                     ??_strncmp:
   756  000007                     ??_Lcd_Out:
   757  000007                     ??_Lcd_Out2:
   758  000007                     ?_tolower:
   759                           	opt callstack 0
   760  000007                     _isspace$974:
   761                           	opt callstack 0
   762  000007                     ___awdiv@quotient:
   763                           	opt callstack 0
   764  000007                     strcpy@s:
   765                           	opt callstack 0
   766  000007                     tolower@c:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x6
   770  000007                     	ds	1
   771  000008                     ?_atoi:
   772                           	opt callstack 0
   773  000008                     atoi@s:
   774                           	opt callstack 0
   775  000008                     strncmp@l:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x7
   779  000008                     	ds	1
   780  000009                     ??_tolower:
   781  000009                     ??___fladd:
   782  000009                     ??___fldiv:
   783  000009                     ??___flmul:
   784  000009                     ??___fleq:
   785  000009                     Lcd_Out@y:
   786                           	opt callstack 0
   787  000009                     Lcd_Out2@y:
   788                           	opt callstack 0
   789  000009                     ___fltol@sign1:
   790                           	opt callstack 0
   791  000009                     ___xxtofl@sign:
   792                           	opt callstack 0
   793  000009                     ___fpclassifyf@e:
   794                           	opt callstack 0
   795  000009                     strcpy@d:
   796                           	opt callstack 0
   797  000009                     ___aodiv@divisor:
   798                           	opt callstack 0
   799  000009                     ___aomod@divisor:
   800                           	opt callstack 0
   801                           
   802                           ; 8 bytes @ 0x8
   803  000009                     	ds	1
   804  00000A                     ??_atoi:
   805  00000A                     Lcd_Out@data:
   806                           	opt callstack 0
   807  00000A                     Lcd_Out2@data:
   808                           	opt callstack 0
   809  00000A                     ___fltol@exp1:
   810                           	opt callstack 0
   811  00000A                     ___xxtofl@exp:
   812                           	opt callstack 0
   813  00000A                     fputs@s:
   814                           	opt callstack 0
   815  00000A                     strncmp@r:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x9
   819  00000A                     	ds	1
   820  00000B                     ___xxtofl@arg:
   821                           	opt callstack 0
   822  00000B                     ___fpclassifyf@u:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0xA
   826  00000B                     	ds	1
   827  00000C                     fputs@fp:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0xB
   831  00000C                     	ds	1
   832  00000D                     ___fladd@signs:
   833                           	opt callstack 0
   834  00000D                     ___flmul@sign:
   835                           	opt callstack 0
   836  00000D                     _tolower$1059:
   837                           	opt callstack 0
   838  00000D                     ___fldiv@rem:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0xC
   842  00000D                     	ds	1
   843  00000E                     ___fladd@aexp:
   844                           	opt callstack 0
   845  00000E                     fputs@c:
   846                           	opt callstack 0
   847  00000E                     atoi@neg:
   848                           	opt callstack 0
   849  00000E                     ___flmul@grs:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0xD
   853  00000E                     	ds	1
   854  00000F                     ___fladd@bexp:
   855                           	opt callstack 0
   856  00000F                     fputs@i:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0xE
   860  00000F                     	ds	1
   861  000010                     ___fladd@grs:
   862                           	opt callstack 0
   863  000010                     _atoi$943:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0xF
   867  000010                     	ds	1
   868  000011                     ?_pad:
   869                           	opt callstack 0
   870  000011                     ___aodiv@counter:
   871                           	opt callstack 0
   872  000011                     ___aomod@counter:
   873                           	opt callstack 0
   874  000011                     ___fldiv@sign:
   875                           	opt callstack 0
   876  000011                     pad@fp:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x10
   880  000011                     	ds	1
   881  000012                     ___aodiv@sign:
   882                           	opt callstack 0
   883  000012                     ___aomod@sign:
   884                           	opt callstack 0
   885  000012                     ___flmul@aexp:
   886                           	opt callstack 0
   887  000012                     ___fldiv@new_exp:
   888                           	opt callstack 0
   889  000012                     _atoi$945:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x11
   893  000012                     	ds	1
   894  000013                     ?_abs:
   895                           	opt callstack 0
   896  000013                     ___flmul@bexp:
   897                           	opt callstack 0
   898  000013                     pad@buf:
   899                           	opt callstack 0
   900  000013                     abs@a:
   901                           	opt callstack 0
   902  000013                     ___aodiv@quotient:
   903                           	opt callstack 0
   904                           
   905                           ; 8 bytes @ 0x12
   906  000013                     	ds	1
   907  000014                     _atoi$944:
   908                           	opt callstack 0
   909  000014                     ___fldiv@grs:
   910                           	opt callstack 0
   911  000014                     ___flmul@prod:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x13
   915  000014                     	ds	1
   916  000015                     ??_abs:
   917  000015                     pad@p:
   918                           	opt callstack 0
   919  000015                     atoi@n:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x14
   923  000015                     	ds	2
   924  000017                     ??_pad:
   925                           
   926                           ; 1 bytes @ 0x16
   927  000017                     	ds	1
   928  000018                     ___fldiv@bexp:
   929                           	opt callstack 0
   930  000018                     pad@i:
   931                           	opt callstack 0
   932  000018                     ___flmul@temp:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x17
   936  000018                     	ds	1
   937  000019                     ___fldiv@aexp:
   938                           	opt callstack 0
   939                           
   940                           ; 1 bytes @ 0x18
   941  000019                     	ds	1
   942  00001A                     ?_floorf:
   943                           	opt callstack 0
   944  00001A                     ?___flsub:
   945                           	opt callstack 0
   946  00001A                     pad@w:
   947                           	opt callstack 0
   948  00001A                     ___flge@ff1:
   949                           	opt callstack 0
   950  00001A                     ___flsub@b:
   951                           	opt callstack 0
   952  00001A                     floorf@x:
   953                           	opt callstack 0
   954                           
   955                           ; 4 bytes @ 0x19
   956  00001A                     	ds	2
   957  00001C                     ?_dtoa:
   958                           	opt callstack 0
   959  00001C                     dtoa@fp:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x1B
   963  00001C                     	ds	2
   964  00001E                     ??_floorf:
   965  00001E                     ___flge@ff2:
   966                           	opt callstack 0
   967  00001E                     ___flsub@a:
   968                           	opt callstack 0
   969  00001E                     dtoa@d:
   970                           	opt callstack 0
   971                           
   972                           ; 8 bytes @ 0x1D
   973  00001E                     	ds	4
   974  000022                     ??___flge:
   975                           
   976                           ; 1 bytes @ 0x21
   977  000022                     	ds	2
   978  000024                     floorf@m:
   979                           	opt callstack 0
   980                           
   981                           ; 4 bytes @ 0x23
   982  000024                     	ds	2
   983  000026                     ??_dtoa:
   984                           
   985                           ; 1 bytes @ 0x25
   986  000026                     	ds	2
   987  000028                     floorf@e:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x27
   991  000028                     	ds	2
   992  00002A                     floorf@u:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0x29
   996  00002A                     	ds	4
   997  00002E                     ?_efgtoa:
   998                           	opt callstack 0
   999  00002E                     _dtoa$415:
  1000                           	opt callstack 0
  1001  00002E                     efgtoa@fp:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x2D
  1005  00002E                     	ds	2
  1006  000030                     dtoa@p:
  1007                           	opt callstack 0
  1008  000030                     efgtoa@f:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x2F
  1012  000030                     	ds	2
  1013  000032                     dtoa@w:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x31
  1017  000032                     	ds	2
  1018  000034                     efgtoa@c:
  1019                           	opt callstack 0
  1020  000034                     dtoa@s:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x33
  1024  000034                     	ds	1
  1025  000035                     ??_efgtoa:
  1026                           
  1027                           ; 1 bytes @ 0x34
  1028  000035                     	ds	1
  1029  000036                     dtoa@n:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 8 bytes @ 0x35
  1033  000036                     	ds	8
  1034  00003E                     dtoa@i:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x3D
  1038  00003E                     	ds	2
  1039  000040                     ?_vfpfcnvrt:
  1040                           	opt callstack 0
  1041  000040                     vfpfcnvrt@fp:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x3F
  1045  000040                     	ds	2
  1046  000042                     vfpfcnvrt@fmt:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x41
  1050  000042                     	ds	2
  1051  000044                     vfpfcnvrt@ap:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x43
  1055  000044                     	ds	2
  1056  000046                     ??_vfpfcnvrt:
  1057                           
  1058                           ; 1 bytes @ 0x45
  1059  000046                     	ds	4
  1060  00004A                     ?_vfprintf:
  1061                           	opt callstack 0
  1062  00004A                     vfprintf@fp:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x49
  1066  00004A                     	ds	2
  1067  00004C                     vfprintf@fmt:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x4B
  1071  00004C                     	ds	2
  1072  00004E                     vfprintf@ap:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x4D
  1076  00004E                     	ds	2
  1077  000050                     vfprintf@cfmt:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x4F
  1081  000050                     	ds	2
  1082  000052                     
  1083                           ; 1 bytes @ 0x51
  1084  000052                     	ds	2
  1085  000054                     sprintf@ap:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x53
  1089  000054                     	ds	2
  1090  000056                     sprintf@f:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 6 bytes @ 0x55
  1094  000056                     	ds	6
  1095  00005C                     ??_main:
  1096                           
  1097                           ; 1 bytes @ 0x5B
  1098  00005C                     	ds	2
  1099                           
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 26 in file "calcu.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1121 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels required when called:    8
  1125 ;; This function calls:
  1126 ;;		_Lcd_Cmd
  1127 ;;		_Lcd_Init
  1128 ;;		_Lcd_Out
  1129 ;;		_Lcd_Out2
  1130 ;;		___fladd
  1131 ;;		___fldiv
  1132 ;;		___fleq
  1133 ;;		___flge
  1134 ;;		___flmul
  1135 ;;		___flsub
  1136 ;;		___xxtofl
  1137 ;;		_sprintf
  1138 ;; This function is called by:
  1139 ;;		Startup code after reset
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text0
  1144  00124A                     __ptext0:
  1145                           	opt callstack 0
  1146  00124A                     _main:
  1147                           	opt callstack 23
  1148                           
  1149                           ;calcu.c: 28:     TRISD=0x00;
  1150                           
  1151                           ;incstack = 0
  1152  00124A  0E00               	movlw	0
  1153  00124C  6E95               	movwf	3989,c	;volatile
  1154                           
  1155                           ;calcu.c: 29:     TRISB=0xFF;
  1156  00124E  6893               	setf	3987,c	;volatile
  1157                           
  1158                           ;calcu.c: 30:     TRISCbits.RC0=1;
  1159  001250  8094               	bsf	3988,0,c	;volatile
  1160                           
  1161                           ;calcu.c: 31:     TRISCbits.RC1=1;
  1162  001252  8294               	bsf	3988,1,c	;volatile
  1163                           
  1164                           ;calcu.c: 32:     Lcd_Init();
  1165  001254  EC6F  F01A         	call	_Lcd_Init	;wreg free
  1166                           
  1167                           ;calcu.c: 33:     Lcd_Cmd(1);
  1168  001258  0E01               	movlw	1
  1169  00125A  ECDF  F019         	call	_Lcd_Cmd
  1170                           
  1171                           ;calcu.c: 34:     Lcd_Cmd(12);
  1172  00125E  0E0C               	movlw	12
  1173  001260  ECDF  F019         	call	_Lcd_Cmd
  1174                           
  1175                           ;calcu.c: 35:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1176  001264  0E02               	movlw	2
  1177  001266  6E5D               	movwf	(??_main+1)& (0+255),c
  1178  001268  0E04               	movlw	4
  1179  00126A  6E5C               	movwf	??_main& (0+255),c
  1180  00126C  0EBA               	movlw	186
  1181  00126E                     u5897:
  1182  00126E  2EE8               	decfsz	wreg,f,c
  1183  001270  D7FE               	bra	u5897
  1184  001272  2E5C               	decfsz	??_main& (0+255),f,c
  1185  001274  D7FC               	bra	u5897
  1186  001276  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1187  001278  D7FA               	bra	u5897
  1188  00127A  D000               	nop2	
  1189                           
  1190                           ;calcu.c: 36:     while(PORTCbits.RC1==1){
  1191  00127C  D012               	goto	l4847
  1192  00127E                     l4845:
  1193                           
  1194                           ;calcu.c: 37:         Lcd_Out(1,1,"Wolo");
  1195  00127E  0E01               	movlw	1
  1196  001280  6E04               	movwf	Lcd_Out@x,c
  1197  001282  0EB2               	movlw	low STR_1
  1198  001284  6E05               	movwf	Lcd_Out@buffer,c
  1199  001286  0E08               	movlw	high STR_1
  1200  001288  6E06               	movwf	Lcd_Out@buffer+1,c
  1201  00128A  0E01               	movlw	1
  1202  00128C  EC90  F01D         	call	_Lcd_Out
  1203                           
  1204                           ;calcu.c: 38:         Lcd_Out(2,1,"Calcu");
  1205  001290  0E01               	movlw	1
  1206  001292  6E04               	movwf	Lcd_Out@x,c
  1207  001294  0EA7               	movlw	low STR_2
  1208  001296  6E05               	movwf	Lcd_Out@buffer,c
  1209  001298  0E08               	movlw	high STR_2
  1210  00129A  6E06               	movwf	Lcd_Out@buffer+1,c
  1211  00129C  0E02               	movlw	2
  1212  00129E  EC90  F01D         	call	_Lcd_Out
  1213  0012A2                     l4847:
  1214                           
  1215                           ;calcu.c: 36:     while(PORTCbits.RC1==1){
  1216  0012A2  B282               	btfsc	3970,1,c	;volatile
  1217  0012A4  D7EC               	goto	l4845
  1218                           
  1219                           ;calcu.c: 41:     Lcd_Cmd(1);
  1220  0012A6  0E01               	movlw	1
  1221  0012A8  ECDF  F019         	call	_Lcd_Cmd
  1222                           
  1223                           ;calcu.c: 42:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1224  0012AC  0E02               	movlw	2
  1225  0012AE  6E5D               	movwf	(??_main+1)& (0+255),c
  1226  0012B0  0E04               	movlw	4
  1227  0012B2  6E5C               	movwf	??_main& (0+255),c
  1228  0012B4  0EBA               	movlw	186
  1229  0012B6                     u5907:
  1230  0012B6  2EE8               	decfsz	wreg,f,c
  1231  0012B8  D7FE               	bra	u5907
  1232  0012BA  2E5C               	decfsz	??_main& (0+255),f,c
  1233  0012BC  D7FC               	bra	u5907
  1234  0012BE  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1235  0012C0  D7FA               	bra	u5907
  1236  0012C2  D000               	nop2	
  1237  0012C4                     l4853:
  1238                           
  1239                           ;calcu.c: 43:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1240  0012C4  0E02               	movlw	2
  1241  0012C6  6E5D               	movwf	(??_main+1)& (0+255),c
  1242  0012C8  0E04               	movlw	4
  1243  0012CA  6E5C               	movwf	??_main& (0+255),c
  1244  0012CC  0EBA               	movlw	186
  1245  0012CE                     u5917:
  1246  0012CE  2EE8               	decfsz	wreg,f,c
  1247  0012D0  D7FE               	bra	u5917
  1248  0012D2  2E5C               	decfsz	??_main& (0+255),f,c
  1249  0012D4  D7FC               	bra	u5917
  1250  0012D6  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1251  0012D8  D7FA               	bra	u5917
  1252  0012DA  D000               	nop2	
  1253  0012DC                     l4855:
  1254                           
  1255                           ;calcu.c: 47:       Lcd_Out(1,1,"Dato1");
  1256  0012DC  0E01               	movlw	1
  1257  0012DE  6E04               	movwf	Lcd_Out@x,c
  1258  0012E0  0EA1               	movlw	low STR_3
  1259  0012E2  6E05               	movwf	Lcd_Out@buffer,c
  1260  0012E4  0E08               	movlw	high STR_3
  1261  0012E6  6E06               	movwf	Lcd_Out@buffer+1,c
  1262  0012E8  0E01               	movlw	1
  1263  0012EA  EC90  F01D         	call	_Lcd_Out
  1264                           
  1265                           ;calcu.c: 48:       while(PORTCbits.RC1==1){
  1266  0012EE  D02C               	goto	l4863
  1267  0012F0                     l4857:
  1268                           
  1269                           ;calcu.c: 49:           Num1=PORTB;
  1270  0012F0  5081               	movf	3969,w,c	;volatile
  1271  0012F2  6E01               	movwf	___xxtofl@val,c
  1272  0012F4  6A02               	clrf	___xxtofl@val+1,c
  1273  0012F6  6A03               	clrf	___xxtofl@val+2,c
  1274  0012F8  6A04               	clrf	___xxtofl@val+3,c
  1275  0012FA  0E00               	movlw	0
  1276  0012FC  EC19  F018         	call	___xxtofl
  1277  001300  C001  F0C4         	movff	?___xxtofl,_Num1
  1278  001304  C002  F0C5         	movff	?___xxtofl+1,_Num1+1
  1279  001308  C003  F0C6         	movff	?___xxtofl+2,_Num1+2
  1280  00130C  C004  F0C7         	movff	?___xxtofl+3,_Num1+3
  1281                           
  1282                           ;calcu.c: 50:           sprintf(numero1,"Number:%0.3f",Num1);
  1283  001310  0EE4               	movlw	low _numero1
  1284  001312  0100               	movlb	0	; () banked
  1285  001314  6FB0               	movwf	sprintf@s& (0+255),b
  1286  001316  0E00               	movlw	high _numero1
  1287  001318  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1288  00131A  0E4C               	movlw	low STR_4
  1289  00131C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1290  00131E  0E08               	movlw	high STR_4
  1291  001320  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1292  001322  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  1293  001326  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  1294  00132A  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  1295  00132E  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  1296  001332  EC8F  F01E         	call	_sprintf	;wreg free
  1297                           
  1298                           ;calcu.c: 51:           Lcd_Out2(2,1,numero1);
  1299  001336  0E01               	movlw	1
  1300  001338  6E04               	movwf	Lcd_Out2@x,c
  1301  00133A  0EE4               	movlw	low _numero1
  1302  00133C  6E05               	movwf	Lcd_Out2@buffer,c
  1303  00133E  0E00               	movlw	high _numero1
  1304  001340  6E06               	movwf	Lcd_Out2@buffer+1,c
  1305  001342  0E02               	movlw	2
  1306  001344  EC03  F01E         	call	_Lcd_Out2
  1307  001348                     l4863:
  1308                           
  1309                           ;calcu.c: 48:       while(PORTCbits.RC1==1){
  1310  001348  B282               	btfsc	3970,1,c	;volatile
  1311  00134A  D7D2               	goto	l4857
  1312                           
  1313                           ;calcu.c: 54:       Lcd_Cmd(1);
  1314  00134C  0E01               	movlw	1
  1315  00134E  ECDF  F019         	call	_Lcd_Cmd
  1316                           
  1317                           ;calcu.c: 55:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1318  001352  0E02               	movlw	2
  1319  001354  6E5D               	movwf	(??_main+1)& (0+255),c
  1320  001356  0E04               	movlw	4
  1321  001358  6E5C               	movwf	??_main& (0+255),c
  1322  00135A  0EBA               	movlw	186
  1323  00135C                     u5927:
  1324  00135C  2EE8               	decfsz	wreg,f,c
  1325  00135E  D7FE               	bra	u5927
  1326  001360  2E5C               	decfsz	??_main& (0+255),f,c
  1327  001362  D7FC               	bra	u5927
  1328  001364  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1329  001366  D7FA               	bra	u5927
  1330  001368  D000               	nop2	
  1331                           
  1332                           ;calcu.c: 56:       _delay((unsigned long)((500)*(8000000/4000.0)));
  1333  00136A  0E06               	movlw	6
  1334  00136C  6E5D               	movwf	(??_main+1)& (0+255),c
  1335  00136E  0E13               	movlw	19
  1336  001370  6E5C               	movwf	??_main& (0+255),c
  1337  001372  0EAE               	movlw	174
  1338  001374                     u5937:
  1339  001374  2EE8               	decfsz	wreg,f,c
  1340  001376  D7FE               	bra	u5937
  1341  001378  2E5C               	decfsz	??_main& (0+255),f,c
  1342  00137A  D7FC               	bra	u5937
  1343  00137C  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1344  00137E  D7FA               	bra	u5937
  1345                           
  1346                           ;calcu.c: 57:       Lcd_Out(1,1,"Numero2");
  1347  001380  0E01               	movlw	1
  1348  001382  6E04               	movwf	Lcd_Out@x,c
  1349  001384  0E7C               	movlw	low STR_5
  1350  001386  6E05               	movwf	Lcd_Out@buffer,c
  1351  001388  0E08               	movlw	high STR_5
  1352  00138A  6E06               	movwf	Lcd_Out@buffer+1,c
  1353  00138C  0E01               	movlw	1
  1354  00138E  EC90  F01D         	call	_Lcd_Out
  1355                           
  1356                           ;calcu.c: 58:       while(PORTCbits.RC1==1)
  1357  001392  D02C               	goto	l4879
  1358  001394                     l4873:
  1359                           
  1360                           ;calcu.c: 59:       {;calcu.c: 60:           Num2=PORTB;
  1361  001394  5081               	movf	3969,w,c	;volatile
  1362  001396  6E01               	movwf	___xxtofl@val,c
  1363  001398  6A02               	clrf	___xxtofl@val+1,c
  1364  00139A  6A03               	clrf	___xxtofl@val+2,c
  1365  00139C  6A04               	clrf	___xxtofl@val+3,c
  1366  00139E  0E00               	movlw	0
  1367  0013A0  EC19  F018         	call	___xxtofl
  1368  0013A4  C001  F0C0         	movff	?___xxtofl,_Num2
  1369  0013A8  C002  F0C1         	movff	?___xxtofl+1,_Num2+1
  1370  0013AC  C003  F0C2         	movff	?___xxtofl+2,_Num2+2
  1371  0013B0  C004  F0C3         	movff	?___xxtofl+3,_Num2+3
  1372                           
  1373                           ;calcu.c: 61:           sprintf(numero2,"Number:%0.03f",Num2);
  1374  0013B4  0ED4               	movlw	low _numero2
  1375  0013B6  0100               	movlb	0	; () banked
  1376  0013B8  6FB0               	movwf	sprintf@s& (0+255),b
  1377  0013BA  0E00               	movlw	high _numero2
  1378  0013BC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1379  0013BE  0E31               	movlw	low STR_6
  1380  0013C0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1381  0013C2  0E08               	movlw	high STR_6
  1382  0013C4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1383  0013C6  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  1384  0013CA  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  1385  0013CE  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  1386  0013D2  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  1387  0013D6  EC8F  F01E         	call	_sprintf	;wreg free
  1388                           
  1389                           ;calcu.c: 62:           Lcd_Out2(2,1,numero2);
  1390  0013DA  0E01               	movlw	1
  1391  0013DC  6E04               	movwf	Lcd_Out2@x,c
  1392  0013DE  0ED4               	movlw	low _numero2
  1393  0013E0  6E05               	movwf	Lcd_Out2@buffer,c
  1394  0013E2  0E00               	movlw	high _numero2
  1395  0013E4  6E06               	movwf	Lcd_Out2@buffer+1,c
  1396  0013E6  0E02               	movlw	2
  1397  0013E8  EC03  F01E         	call	_Lcd_Out2
  1398  0013EC                     l4879:
  1399                           
  1400                           ;calcu.c: 58:       while(PORTCbits.RC1==1)
  1401  0013EC  B282               	btfsc	3970,1,c	;volatile
  1402  0013EE  D7D2               	goto	l4873
  1403                           
  1404                           ;calcu.c: 65:       Lcd_Cmd(1);
  1405  0013F0  0E01               	movlw	1
  1406  0013F2  ECDF  F019         	call	_Lcd_Cmd
  1407                           
  1408                           ;calcu.c: 66:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1409  0013F6  0E02               	movlw	2
  1410  0013F8  6E5D               	movwf	(??_main+1)& (0+255),c
  1411  0013FA  0E04               	movlw	4
  1412  0013FC  6E5C               	movwf	??_main& (0+255),c
  1413  0013FE  0EBA               	movlw	186
  1414  001400                     u5947:
  1415  001400  2EE8               	decfsz	wreg,f,c
  1416  001402  D7FE               	bra	u5947
  1417  001404  2E5C               	decfsz	??_main& (0+255),f,c
  1418  001406  D7FC               	bra	u5947
  1419  001408  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1420  00140A  D7FA               	bra	u5947
  1421  00140C  D000               	nop2	
  1422                           
  1423                           ;calcu.c: 67:       Lcd_Out(1,1,"Cual");
  1424  00140E  0E01               	movlw	1
  1425  001410  6E04               	movwf	Lcd_Out@x,c
  1426  001412  0EAD               	movlw	low STR_7
  1427  001414  6E05               	movwf	Lcd_Out@buffer,c
  1428  001416  0E08               	movlw	high STR_7
  1429  001418  6E06               	movwf	Lcd_Out@buffer+1,c
  1430  00141A  0E01               	movlw	1
  1431  00141C  EC90  F01D         	call	_Lcd_Out
  1432                           
  1433                           ;calcu.c: 68:         Lcd_Out(2,1,"Operacion Prro");
  1434  001420  0E01               	movlw	1
  1435  001422  6E04               	movwf	Lcd_Out@x,c
  1436  001424  0E22               	movlw	low STR_8
  1437  001426  6E05               	movwf	Lcd_Out@buffer,c
  1438  001428  0E08               	movlw	high STR_8
  1439  00142A  6E06               	movwf	Lcd_Out@buffer+1,c
  1440  00142C  0E02               	movlw	2
  1441  00142E  EC90  F01D         	call	_Lcd_Out
  1442                           
  1443                           ;calcu.c: 69:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1444  001432  0E15               	movlw	21
  1445  001434  6E5D               	movwf	(??_main+1)& (0+255),c
  1446  001436  0E4B               	movlw	75
  1447  001438  6E5C               	movwf	??_main& (0+255),c
  1448  00143A  0EBE               	movlw	190
  1449  00143C                     u5957:
  1450  00143C  2EE8               	decfsz	wreg,f,c
  1451  00143E  D7FE               	bra	u5957
  1452  001440  2E5C               	decfsz	??_main& (0+255),f,c
  1453  001442  D7FC               	bra	u5957
  1454  001444  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1455  001446  D7FA               	bra	u5957
  1456  001448  D000               	nop2	
  1457                           
  1458                           ;calcu.c: 71:         Lcd_Cmd(1);
  1459                           
  1460                           ;calcu.c: 70:         Selector:
  1461  00144A  0E01               	movlw	1
  1462  00144C  ECDF  F019         	call	_Lcd_Cmd
  1463                           
  1464                           ;calcu.c: 72:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1465  001450  0E02               	movlw	2
  1466  001452  6E5D               	movwf	(??_main+1)& (0+255),c
  1467  001454  0E04               	movlw	4
  1468  001456  6E5C               	movwf	??_main& (0+255),c
  1469  001458  0EBA               	movlw	186
  1470  00145A                     u5967:
  1471  00145A  2EE8               	decfsz	wreg,f,c
  1472  00145C  D7FE               	bra	u5967
  1473  00145E  2E5C               	decfsz	??_main& (0+255),f,c
  1474  001460  D7FC               	bra	u5967
  1475  001462  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1476  001464  D7FA               	bra	u5967
  1477  001466  D000               	nop2	
  1478                           
  1479                           ;calcu.c: 73:         while(PORTCbits.RC1==1){
  1480  001468  D025               	goto	l4899
  1481  00146A                     l97:
  1482                           
  1483                           ;calcu.c: 74:             Selector=PORTB;
  1484  00146A  CF81 F0D2          	movff	3969,_Selector	;volatile
  1485  00146E  0100               	movlb	0	; () banked
  1486  001470  6BD3               	clrf	(_Selector+1)& (0+255),b
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;calcu.c: 75:             Lcd_Out(1,1,"1=+ 3=- 7=* 15=/");
  1490  001472  0E01               	movlw	1
  1491  001474  6E04               	movwf	Lcd_Out@x,c
  1492  001476  0E01               	movlw	low STR_9
  1493  001478  6E05               	movwf	Lcd_Out@buffer,c
  1494  00147A  0E08               	movlw	high STR_9
  1495  00147C  6E06               	movwf	Lcd_Out@buffer+1,c
  1496  00147E  0E01               	movlw	1
  1497  001480  EC90  F01D         	call	_Lcd_Out
  1498                           
  1499                           ;calcu.c: 76:             sprintf(numero3,"Seleccion: %03d",Selector);
  1500  001484  0E50               	movlw	low _numero3
  1501  001486  0100               	movlb	0	; () banked
  1502  001488  6FB0               	movwf	sprintf@s& (0+255),b
  1503  00148A  0E01               	movlw	high _numero3
  1504  00148C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1505  00148E  0E12               	movlw	low STR_10
  1506  001490  6FB2               	movwf	sprintf@fmt& (0+255),b
  1507  001492  0E08               	movlw	high STR_10
  1508  001494  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1509  001496  C0D2  F0B4         	movff	_Selector,?_sprintf+4
  1510  00149A  C0D3  F0B5         	movff	_Selector+1,?_sprintf+5
  1511  00149E  EC8F  F01E         	call	_sprintf	;wreg free
  1512                           
  1513                           ;calcu.c: 77:             Lcd_Out2(2,1,numero3);
  1514  0014A2  0E01               	movlw	1
  1515  0014A4  6E04               	movwf	Lcd_Out2@x,c
  1516  0014A6  0E50               	movlw	low _numero3
  1517  0014A8  6E05               	movwf	Lcd_Out2@buffer,c
  1518  0014AA  0E01               	movlw	high _numero3
  1519  0014AC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1520  0014AE  0E02               	movlw	2
  1521  0014B0  EC03  F01E         	call	_Lcd_Out2
  1522  0014B4                     l4899:
  1523                           
  1524                           ;calcu.c: 73:         while(PORTCbits.RC1==1){
  1525  0014B4  B282               	btfsc	3970,1,c	;volatile
  1526  0014B6  D7D9               	goto	l97
  1527                           
  1528                           ;calcu.c: 79:         Lcd_Cmd(1);
  1529  0014B8  0E01               	movlw	1
  1530  0014BA  ECDF  F019         	call	_Lcd_Cmd
  1531                           
  1532                           ;calcu.c: 80:         _delay((unsigned long)((400)*(8000000/4000.0)));
  1533  0014BE  0E05               	movlw	5
  1534  0014C0  6E5D               	movwf	(??_main+1)& (0+255),c
  1535  0014C2  0E0F               	movlw	15
  1536  0014C4  6E5C               	movwf	??_main& (0+255),c
  1537  0014C6  0EF1               	movlw	241
  1538  0014C8                     u5977:
  1539  0014C8  2EE8               	decfsz	wreg,f,c
  1540  0014CA  D7FE               	bra	u5977
  1541  0014CC  2E5C               	decfsz	??_main& (0+255),f,c
  1542  0014CE  D7FC               	bra	u5977
  1543  0014D0  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1544  0014D2  D7FA               	bra	u5977
  1545  0014D4  F000               	nop	
  1546                           
  1547                           ;calcu.c: 81:         switch(Selector){
  1548  0014D6  D306               	goto	l5037
  1549  0014D8                     l4905:
  1550                           
  1551                           ;calcu.c: 84:             Lcd_Cmd(1);
  1552  0014D8  0E01               	movlw	1
  1553  0014DA  ECDF  F019         	call	_Lcd_Cmd
  1554                           
  1555                           ;calcu.c: 85:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1556  0014DE  0E02               	movlw	2
  1557  0014E0  6E5D               	movwf	(??_main+1)& (0+255),c
  1558  0014E2  0E04               	movlw	4
  1559  0014E4  6E5C               	movwf	??_main& (0+255),c
  1560  0014E6  0EBA               	movlw	186
  1561  0014E8                     u5987:
  1562  0014E8  2EE8               	decfsz	wreg,f,c
  1563  0014EA  D7FE               	bra	u5987
  1564  0014EC  2E5C               	decfsz	??_main& (0+255),f,c
  1565  0014EE  D7FC               	bra	u5987
  1566  0014F0  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1567  0014F2  D7FA               	bra	u5987
  1568  0014F4  D000               	nop2	
  1569                           
  1570                           ;calcu.c: 86:             while(PORTCbits.RC1==1){
  1571  0014F6  D06E               	goto	l4923
  1572  0014F8                     l4909:
  1573                           
  1574                           ;calcu.c: 87:                 Resultado=Num1+Num2;
  1575  0014F8  C0C4  F001         	movff	_Num1,___fladd@b
  1576  0014FC  C0C5  F002         	movff	_Num1+1,___fladd@b+1
  1577  001500  C0C6  F003         	movff	_Num1+2,___fladd@b+2
  1578  001504  C0C7  F004         	movff	_Num1+3,___fladd@b+3
  1579  001508  C0C0  F005         	movff	_Num2,___fladd@a
  1580  00150C  C0C1  F006         	movff	_Num2+1,___fladd@a+1
  1581  001510  C0C2  F007         	movff	_Num2+2,___fladd@a+2
  1582  001514  C0C3  F008         	movff	_Num2+3,___fladd@a+3
  1583  001518  EC0E  F012         	call	___fladd	;wreg free
  1584  00151C  C001  F0F4         	movff	?___fladd,_Resultado
  1585  001520  C002  F0F5         	movff	?___fladd+1,_Resultado+1
  1586  001524  C003  F0F6         	movff	?___fladd+2,_Resultado+2
  1587  001528  C004  F0F7         	movff	?___fladd+3,_Resultado+3
  1588                           
  1589                           ;calcu.c: 88:                 sprintf(numero1,"%0.0f+",Num1);
  1590  00152C  0EE4               	movlw	low _numero1
  1591  00152E  0100               	movlb	0	; () banked
  1592  001530  6FB0               	movwf	sprintf@s& (0+255),b
  1593  001532  0E00               	movlw	high _numero1
  1594  001534  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1595  001536  0E93               	movlw	low STR_11
  1596  001538  6FB2               	movwf	sprintf@fmt& (0+255),b
  1597  00153A  0E08               	movlw	high STR_11
  1598  00153C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1599  00153E  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  1600  001542  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  1601  001546  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  1602  00154A  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  1603  00154E  EC8F  F01E         	call	_sprintf	;wreg free
  1604                           
  1605                           ;calcu.c: 89:                 sprintf(numero2,"%0.0f",Num2);
  1606  001552  0ED4               	movlw	low _numero2
  1607  001554  0100               	movlb	0	; () banked
  1608  001556  6FB0               	movwf	sprintf@s& (0+255),b
  1609  001558  0E00               	movlw	high _numero2
  1610  00155A  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1611  00155C  0E5F               	movlw	low (STR_13+6)
  1612  00155E  6FB2               	movwf	sprintf@fmt& (0+255),b
  1613  001560  0E08               	movlw	high (STR_13+6)
  1614  001562  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1615  001564  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  1616  001568  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  1617  00156C  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  1618  001570  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  1619  001574  EC8F  F01E         	call	_sprintf	;wreg free
  1620                           
  1621                           ;calcu.c: 90:                 sprintf(Word,"Suma= %0.0f",Resultado);
  1622  001578  0E60               	movlw	low _Word
  1623  00157A  0100               	movlb	0	; () banked
  1624  00157C  6FB0               	movwf	sprintf@s& (0+255),b
  1625  00157E  0E01               	movlw	high _Word
  1626  001580  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1627  001582  0E59               	movlw	low STR_13
  1628  001584  6FB2               	movwf	sprintf@fmt& (0+255),b
  1629  001586  0E08               	movlw	high STR_13
  1630  001588  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1631  00158A  C0F4  F0B4         	movff	_Resultado,?_sprintf+4
  1632  00158E  C0F5  F0B5         	movff	_Resultado+1,?_sprintf+5
  1633  001592  C0F6  F0B6         	movff	_Resultado+2,?_sprintf+6
  1634  001596  C0F7  F0B7         	movff	_Resultado+3,?_sprintf+7
  1635  00159A  EC8F  F01E         	call	_sprintf	;wreg free
  1636                           
  1637                           ;calcu.c: 91:                 Lcd_Out2(1,1,numero1);
  1638  00159E  0E01               	movlw	1
  1639  0015A0  6E04               	movwf	Lcd_Out2@x,c
  1640  0015A2  0EE4               	movlw	low _numero1
  1641  0015A4  6E05               	movwf	Lcd_Out2@buffer,c
  1642  0015A6  0E00               	movlw	high _numero1
  1643  0015A8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1644  0015AA  0E01               	movlw	1
  1645  0015AC  EC03  F01E         	call	_Lcd_Out2
  1646                           
  1647                           ;calcu.c: 92:                 Lcd_Out2(1,4,numero2);
  1648  0015B0  0E04               	movlw	4
  1649  0015B2  6E04               	movwf	Lcd_Out2@x,c
  1650  0015B4  0ED4               	movlw	low _numero2
  1651  0015B6  6E05               	movwf	Lcd_Out2@buffer,c
  1652  0015B8  0E00               	movlw	high _numero2
  1653  0015BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1654  0015BC  0E01               	movlw	1
  1655  0015BE  EC03  F01E         	call	_Lcd_Out2
  1656                           
  1657                           ;calcu.c: 93:                 Lcd_Out2(2,1,Word);
  1658  0015C2  0E01               	movlw	1
  1659  0015C4  6E04               	movwf	Lcd_Out2@x,c
  1660  0015C6  0E60               	movlw	low _Word
  1661  0015C8  6E05               	movwf	Lcd_Out2@buffer,c
  1662  0015CA  0E01               	movlw	high _Word
  1663  0015CC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1664  0015CE  0E02               	movlw	2
  1665  0015D0  EC03  F01E         	call	_Lcd_Out2
  1666  0015D4                     l4923:
  1667                           
  1668                           ;calcu.c: 86:             while(PORTCbits.RC1==1){
  1669  0015D4  B282               	btfsc	3970,1,c	;volatile
  1670  0015D6  D790               	goto	l4909
  1671                           
  1672                           ;calcu.c: 95:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1673  0015D8  0E0B               	movlw	11
  1674  0015DA  6E5D               	movwf	(??_main+1)& (0+255),c
  1675  0015DC  0E26               	movlw	38
  1676  0015DE  6E5C               	movwf	??_main& (0+255),c
  1677  0015E0  0E5E               	movlw	94
  1678  0015E2                     u5997:
  1679  0015E2  2EE8               	decfsz	wreg,f,c
  1680  0015E4  D7FE               	bra	u5997
  1681  0015E6  2E5C               	decfsz	??_main& (0+255),f,c
  1682  0015E8  D7FC               	bra	u5997
  1683  0015EA  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1684  0015EC  D7FA               	bra	u5997
  1685                           
  1686                           ;calcu.c: 96:             Lcd_Cmd(1);
  1687  0015EE  0E01               	movlw	1
  1688  0015F0  ECDF  F019         	call	_Lcd_Cmd
  1689  0015F4  D667               	goto	l4853
  1690  0015F6                     l4931:
  1691                           
  1692                           ;calcu.c: 102:                 if(Num2>Num1){
  1693  0015F6  C0C4  F01A         	movff	_Num1,___flge@ff1
  1694  0015FA  C0C5  F01B         	movff	_Num1+1,___flge@ff1+1
  1695  0015FE  C0C6  F01C         	movff	_Num1+2,___flge@ff1+2
  1696  001602  C0C7  F01D         	movff	_Num1+3,___flge@ff1+3
  1697  001606  C0C0  F01E         	movff	_Num2,___flge@ff2
  1698  00160A  C0C1  F01F         	movff	_Num2+1,___flge@ff2+1
  1699  00160E  C0C2  F020         	movff	_Num2+2,___flge@ff2+2
  1700  001612  C0C3  F021         	movff	_Num2+3,___flge@ff2+3
  1701  001616  ECF2  F01A         	call	___flge	;wreg free
  1702  00161A  B0D8               	btfsc	status,0,c
  1703  00161C  D09B               	goto	l4955
  1704                           
  1705                           ;calcu.c: 104:             Lcd_Cmd(1);
  1706  00161E  0E01               	movlw	1
  1707  001620  ECDF  F019         	call	_Lcd_Cmd
  1708                           
  1709                           ;calcu.c: 105:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1710  001624  0E02               	movlw	2
  1711  001626  6E5D               	movwf	(??_main+1)& (0+255),c
  1712  001628  0E04               	movlw	4
  1713  00162A  6E5C               	movwf	??_main& (0+255),c
  1714  00162C  0EBA               	movlw	186
  1715  00162E                     u6007:
  1716  00162E  2EE8               	decfsz	wreg,f,c
  1717  001630  D7FE               	bra	u6007
  1718  001632  2E5C               	decfsz	??_main& (0+255),f,c
  1719  001634  D7FC               	bra	u6007
  1720  001636  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1721  001638  D7FA               	bra	u6007
  1722  00163A  D000               	nop2	
  1723                           
  1724                           ;calcu.c: 106:             while(PORTCbits.RC1==1){
  1725  00163C  D088               	goto	l4953
  1726  00163E                     l4937:
  1727                           
  1728                           ;calcu.c: 107:                 Resultado=Num1-Num2;
  1729  00163E  C0C4  F01A         	movff	_Num1,___flsub@b
  1730  001642  C0C5  F01B         	movff	_Num1+1,___flsub@b+1
  1731  001646  C0C6  F01C         	movff	_Num1+2,___flsub@b+2
  1732  00164A  C0C7  F01D         	movff	_Num1+3,___flsub@b+3
  1733  00164E  C0C0  F01E         	movff	_Num2,___flsub@a
  1734  001652  C0C1  F01F         	movff	_Num2+1,___flsub@a+1
  1735  001656  C0C2  F020         	movff	_Num2+2,___flsub@a+2
  1736  00165A  C0C3  F021         	movff	_Num2+3,___flsub@a+3
  1737  00165E  ECDD  F01E         	call	___flsub	;wreg free
  1738  001662  C01A  F0F4         	movff	?___flsub,_Resultado
  1739  001666  C01B  F0F5         	movff	?___flsub+1,_Resultado+1
  1740  00166A  C01C  F0F6         	movff	?___flsub+2,_Resultado+2
  1741  00166E  C01D  F0F7         	movff	?___flsub+3,_Resultado+3
  1742                           
  1743                           ;calcu.c: 108:                 Resultado=Resultado*(-1);
  1744  001672  C0F4  F001         	movff	_Resultado,___flmul@b
  1745  001676  C0F5  F002         	movff	_Resultado+1,___flmul@b+1
  1746  00167A  C0F6  F003         	movff	_Resultado+2,___flmul@b+2
  1747  00167E  C0F7  F004         	movff	_Resultado+3,___flmul@b+3
  1748  001682  0E00               	movlw	0
  1749  001684  6E05               	movwf	___flmul@a,c
  1750  001686  0E00               	movlw	0
  1751  001688  6E06               	movwf	___flmul@a+1,c
  1752  00168A  0E80               	movlw	128
  1753  00168C  6E07               	movwf	___flmul@a+2,c
  1754  00168E  0EBF               	movlw	191
  1755  001690  6E08               	movwf	___flmul@a+3,c
  1756  001692  EC65  F010         	call	___flmul	;wreg free
  1757  001696  C001  F0F4         	movff	?___flmul,_Resultado
  1758  00169A  C002  F0F5         	movff	?___flmul+1,_Resultado+1
  1759  00169E  C003  F0F6         	movff	?___flmul+2,_Resultado+2
  1760  0016A2  C004  F0F7         	movff	?___flmul+3,_Resultado+3
  1761                           
  1762                           ;calcu.c: 109:                 sprintf(numero1,"%0.0f+",Num1);
  1763  0016A6  0EE4               	movlw	low _numero1
  1764  0016A8  0100               	movlb	0	; () banked
  1765  0016AA  6FB0               	movwf	sprintf@s& (0+255),b
  1766  0016AC  0E00               	movlw	high _numero1
  1767  0016AE  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1768  0016B0  0E93               	movlw	low STR_11
  1769  0016B2  6FB2               	movwf	sprintf@fmt& (0+255),b
  1770  0016B4  0E08               	movlw	high STR_11
  1771  0016B6  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1772  0016B8  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  1773  0016BC  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  1774  0016C0  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  1775  0016C4  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  1776  0016C8  EC8F  F01E         	call	_sprintf	;wreg free
  1777                           
  1778                           ;calcu.c: 110:                 sprintf(numero2,"%0.0f",Num2);
  1779  0016CC  0ED4               	movlw	low _numero2
  1780  0016CE  0100               	movlb	0	; () banked
  1781  0016D0  6FB0               	movwf	sprintf@s& (0+255),b
  1782  0016D2  0E00               	movlw	high _numero2
  1783  0016D4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1784  0016D6  0E5F               	movlw	low (STR_13+6)
  1785  0016D8  6FB2               	movwf	sprintf@fmt& (0+255),b
  1786  0016DA  0E08               	movlw	high (STR_13+6)
  1787  0016DC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1788  0016DE  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  1789  0016E2  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  1790  0016E6  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  1791  0016EA  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  1792  0016EE  EC8F  F01E         	call	_sprintf	;wreg free
  1793                           
  1794                           ;calcu.c: 111:                 sprintf(Word,"Resta= %0.0f",Resultado);
  1795  0016F2  0E60               	movlw	low _Word
  1796  0016F4  0100               	movlb	0	; () banked
  1797  0016F6  6FB0               	movwf	sprintf@s& (0+255),b
  1798  0016F8  0E01               	movlw	high _Word
  1799  0016FA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1800  0016FC  0E3F               	movlw	low STR_16
  1801  0016FE  6FB2               	movwf	sprintf@fmt& (0+255),b
  1802  001700  0E08               	movlw	high STR_16
  1803  001702  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1804  001704  C0F4  F0B4         	movff	_Resultado,?_sprintf+4
  1805  001708  C0F5  F0B5         	movff	_Resultado+1,?_sprintf+5
  1806  00170C  C0F6  F0B6         	movff	_Resultado+2,?_sprintf+6
  1807  001710  C0F7  F0B7         	movff	_Resultado+3,?_sprintf+7
  1808  001714  EC8F  F01E         	call	_sprintf	;wreg free
  1809                           
  1810                           ;calcu.c: 112:                 Lcd_Out2(1,1,numero1);
  1811  001718  0E01               	movlw	1
  1812  00171A  6E04               	movwf	Lcd_Out2@x,c
  1813  00171C  0EE4               	movlw	low _numero1
  1814  00171E  6E05               	movwf	Lcd_Out2@buffer,c
  1815  001720  0E00               	movlw	high _numero1
  1816  001722  6E06               	movwf	Lcd_Out2@buffer+1,c
  1817  001724  0E01               	movlw	1
  1818  001726  EC03  F01E         	call	_Lcd_Out2
  1819                           
  1820                           ;calcu.c: 113:                 Lcd_Out2(1,4,numero2);
  1821  00172A  0E04               	movlw	4
  1822  00172C  6E04               	movwf	Lcd_Out2@x,c
  1823  00172E  0ED4               	movlw	low _numero2
  1824  001730  6E05               	movwf	Lcd_Out2@buffer,c
  1825  001732  0E00               	movlw	high _numero2
  1826  001734  6E06               	movwf	Lcd_Out2@buffer+1,c
  1827  001736  0E01               	movlw	1
  1828  001738  EC03  F01E         	call	_Lcd_Out2
  1829                           
  1830                           ;calcu.c: 114:                 Lcd_Out2(2,1,Word);
  1831  00173C  0E01               	movlw	1
  1832  00173E  6E04               	movwf	Lcd_Out2@x,c
  1833  001740  0E60               	movlw	low _Word
  1834  001742  6E05               	movwf	Lcd_Out2@buffer,c
  1835  001744  0E01               	movlw	high _Word
  1836  001746  6E06               	movwf	Lcd_Out2@buffer+1,c
  1837  001748  0E02               	movlw	2
  1838  00174A  EC03  F01E         	call	_Lcd_Out2
  1839  00174E                     l4953:
  1840                           
  1841                           ;calcu.c: 106:             while(PORTCbits.RC1==1){
  1842  00174E  A282               	btfss	3970,1,c	;volatile
  1843  001750  D06F               	goto	l4969
  1844  001752  D775               	goto	l4937
  1845  001754                     l4955:
  1846                           
  1847                           ;calcu.c: 118:                 Resultado=Num1-Num2;
  1848  001754  C0C4  F01A         	movff	_Num1,___flsub@b
  1849  001758  C0C5  F01B         	movff	_Num1+1,___flsub@b+1
  1850  00175C  C0C6  F01C         	movff	_Num1+2,___flsub@b+2
  1851  001760  C0C7  F01D         	movff	_Num1+3,___flsub@b+3
  1852  001764  C0C0  F01E         	movff	_Num2,___flsub@a
  1853  001768  C0C1  F01F         	movff	_Num2+1,___flsub@a+1
  1854  00176C  C0C2  F020         	movff	_Num2+2,___flsub@a+2
  1855  001770  C0C3  F021         	movff	_Num2+3,___flsub@a+3
  1856  001774  ECDD  F01E         	call	___flsub	;wreg free
  1857  001778  C01A  F0F4         	movff	?___flsub,_Resultado
  1858  00177C  C01B  F0F5         	movff	?___flsub+1,_Resultado+1
  1859  001780  C01C  F0F6         	movff	?___flsub+2,_Resultado+2
  1860  001784  C01D  F0F7         	movff	?___flsub+3,_Resultado+3
  1861                           
  1862                           ;calcu.c: 119:                 sprintf(numero1,"%0.0f+",Num1);
  1863  001788  0EE4               	movlw	low _numero1
  1864  00178A  0100               	movlb	0	; () banked
  1865  00178C  6FB0               	movwf	sprintf@s& (0+255),b
  1866  00178E  0E00               	movlw	high _numero1
  1867  001790  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1868  001792  0E93               	movlw	low STR_11
  1869  001794  6FB2               	movwf	sprintf@fmt& (0+255),b
  1870  001796  0E08               	movlw	high STR_11
  1871  001798  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1872  00179A  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  1873  00179E  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  1874  0017A2  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  1875  0017A6  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  1876  0017AA  EC8F  F01E         	call	_sprintf	;wreg free
  1877                           
  1878                           ;calcu.c: 120:                 sprintf(numero2,"%0.0f",Num2);
  1879  0017AE  0ED4               	movlw	low _numero2
  1880  0017B0  0100               	movlb	0	; () banked
  1881  0017B2  6FB0               	movwf	sprintf@s& (0+255),b
  1882  0017B4  0E00               	movlw	high _numero2
  1883  0017B6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1884  0017B8  0E5F               	movlw	low (STR_13+6)
  1885  0017BA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1886  0017BC  0E08               	movlw	high (STR_13+6)
  1887  0017BE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1888  0017C0  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  1889  0017C4  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  1890  0017C8  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  1891  0017CC  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  1892  0017D0  EC8F  F01E         	call	_sprintf	;wreg free
  1893                           
  1894                           ;calcu.c: 121:                 sprintf(Word,"Resta= %0.0f",Resultado);
  1895  0017D4  0E60               	movlw	low _Word
  1896  0017D6  0100               	movlb	0	; () banked
  1897  0017D8  6FB0               	movwf	sprintf@s& (0+255),b
  1898  0017DA  0E01               	movlw	high _Word
  1899  0017DC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1900  0017DE  0E3F               	movlw	low STR_16
  1901  0017E0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1902  0017E2  0E08               	movlw	high STR_16
  1903  0017E4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1904  0017E6  C0F4  F0B4         	movff	_Resultado,?_sprintf+4
  1905  0017EA  C0F5  F0B5         	movff	_Resultado+1,?_sprintf+5
  1906  0017EE  C0F6  F0B6         	movff	_Resultado+2,?_sprintf+6
  1907  0017F2  C0F7  F0B7         	movff	_Resultado+3,?_sprintf+7
  1908  0017F6  EC8F  F01E         	call	_sprintf	;wreg free
  1909                           
  1910                           ;calcu.c: 122:                 Lcd_Out2(1,1,numero1);
  1911  0017FA  0E01               	movlw	1
  1912  0017FC  6E04               	movwf	Lcd_Out2@x,c
  1913  0017FE  0EE4               	movlw	low _numero1
  1914  001800  6E05               	movwf	Lcd_Out2@buffer,c
  1915  001802  0E00               	movlw	high _numero1
  1916  001804  6E06               	movwf	Lcd_Out2@buffer+1,c
  1917  001806  0E01               	movlw	1
  1918  001808  EC03  F01E         	call	_Lcd_Out2
  1919                           
  1920                           ;calcu.c: 123:                 Lcd_Out2(1,4,numero2);
  1921  00180C  0E04               	movlw	4
  1922  00180E  6E04               	movwf	Lcd_Out2@x,c
  1923  001810  0ED4               	movlw	low _numero2
  1924  001812  6E05               	movwf	Lcd_Out2@buffer,c
  1925  001814  0E00               	movlw	high _numero2
  1926  001816  6E06               	movwf	Lcd_Out2@buffer+1,c
  1927  001818  0E01               	movlw	1
  1928  00181A  EC03  F01E         	call	_Lcd_Out2
  1929                           
  1930                           ;calcu.c: 124:                 Lcd_Out2(2,1,Word);
  1931  00181E  0E01               	movlw	1
  1932  001820  6E04               	movwf	Lcd_Out2@x,c
  1933  001822  0E60               	movlw	low _Word
  1934  001824  6E05               	movwf	Lcd_Out2@buffer,c
  1935  001826  0E01               	movlw	high _Word
  1936  001828  6E06               	movwf	Lcd_Out2@buffer+1,c
  1937  00182A  0E02               	movlw	2
  1938  00182C  EC03  F01E         	call	_Lcd_Out2
  1939  001830                     l4969:
  1940                           
  1941                           ;calcu.c: 127:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  1942  001830  0E0B               	movlw	11
  1943  001832  6E5D               	movwf	(??_main+1)& (0+255),c
  1944  001834  0E26               	movlw	38
  1945  001836  6E5C               	movwf	??_main& (0+255),c
  1946  001838  0E5E               	movlw	94
  1947  00183A                     u6017:
  1948  00183A  2EE8               	decfsz	wreg,f,c
  1949  00183C  D7FE               	bra	u6017
  1950  00183E  2E5C               	decfsz	??_main& (0+255),f,c
  1951  001840  D7FC               	bra	u6017
  1952  001842  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1953  001844  D7FA               	bra	u6017
  1954                           
  1955                           ;calcu.c: 128:             Lcd_Cmd(1);
  1956  001846  0E01               	movlw	1
  1957  001848  ECDF  F019         	call	_Lcd_Cmd
  1958  00184C  D53B               	goto	l4853
  1959  00184E                     l4975:
  1960                           
  1961                           ;calcu.c: 133:             {;calcu.c: 134:                 Lcd_Cmd(1);
  1962  00184E  0E01               	movlw	1
  1963  001850  ECDF  F019         	call	_Lcd_Cmd
  1964                           
  1965                           ;calcu.c: 135:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1966  001854  0E02               	movlw	2
  1967  001856  6E5D               	movwf	(??_main+1)& (0+255),c
  1968  001858  0E04               	movlw	4
  1969  00185A  6E5C               	movwf	??_main& (0+255),c
  1970  00185C  0EBA               	movlw	186
  1971  00185E                     u6027:
  1972  00185E  2EE8               	decfsz	wreg,f,c
  1973  001860  D7FE               	bra	u6027
  1974  001862  2E5C               	decfsz	??_main& (0+255),f,c
  1975  001864  D7FC               	bra	u6027
  1976  001866  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  1977  001868  D7FA               	bra	u6027
  1978  00186A  D000               	nop2	
  1979                           
  1980                           ;calcu.c: 136:                 while(PORTCbits.RC1==1){
  1981  00186C  D06E               	goto	l4993
  1982  00186E                     l4979:
  1983                           
  1984                           ;calcu.c: 137:                     Resultado=Num1*Num2;
  1985  00186E  C0C4  F001         	movff	_Num1,___flmul@b
  1986  001872  C0C5  F002         	movff	_Num1+1,___flmul@b+1
  1987  001876  C0C6  F003         	movff	_Num1+2,___flmul@b+2
  1988  00187A  C0C7  F004         	movff	_Num1+3,___flmul@b+3
  1989  00187E  C0C0  F005         	movff	_Num2,___flmul@a
  1990  001882  C0C1  F006         	movff	_Num2+1,___flmul@a+1
  1991  001886  C0C2  F007         	movff	_Num2+2,___flmul@a+2
  1992  00188A  C0C3  F008         	movff	_Num2+3,___flmul@a+3
  1993  00188E  EC65  F010         	call	___flmul	;wreg free
  1994  001892  C001  F0F4         	movff	?___flmul,_Resultado
  1995  001896  C002  F0F5         	movff	?___flmul+1,_Resultado+1
  1996  00189A  C003  F0F6         	movff	?___flmul+2,_Resultado+2
  1997  00189E  C004  F0F7         	movff	?___flmul+3,_Resultado+3
  1998                           
  1999                           ;calcu.c: 138:                     sprintf(numero1,"%0.0f*",Num1);
  2000  0018A2  0EE4               	movlw	low _numero1
  2001  0018A4  0100               	movlb	0	; () banked
  2002  0018A6  6FB0               	movwf	sprintf@s& (0+255),b
  2003  0018A8  0E00               	movlw	high _numero1
  2004  0018AA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2005  0018AC  0E8C               	movlw	low STR_20
  2006  0018AE  6FB2               	movwf	sprintf@fmt& (0+255),b
  2007  0018B0  0E08               	movlw	high STR_20
  2008  0018B2  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2009  0018B4  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  2010  0018B8  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  2011  0018BC  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  2012  0018C0  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  2013  0018C4  EC8F  F01E         	call	_sprintf	;wreg free
  2014                           
  2015                           ;calcu.c: 139:                     sprintf(numero2,"%0.0f",Num2);
  2016  0018C8  0ED4               	movlw	low _numero2
  2017  0018CA  0100               	movlb	0	; () banked
  2018  0018CC  6FB0               	movwf	sprintf@s& (0+255),b
  2019  0018CE  0E00               	movlw	high _numero2
  2020  0018D0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2021  0018D2  0E5F               	movlw	low (STR_13+6)
  2022  0018D4  6FB2               	movwf	sprintf@fmt& (0+255),b
  2023  0018D6  0E08               	movlw	high (STR_13+6)
  2024  0018D8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2025  0018DA  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  2026  0018DE  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  2027  0018E2  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  2028  0018E6  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  2029  0018EA  EC8F  F01E         	call	_sprintf	;wreg free
  2030                           
  2031                           ;calcu.c: 140:                     sprintf(Word,"Mult= %0.0f",Resultado);
  2032  0018EE  0E60               	movlw	low _Word
  2033  0018F0  0100               	movlb	0	; () banked
  2034  0018F2  6FB0               	movwf	sprintf@s& (0+255),b
  2035  0018F4  0E01               	movlw	high _Word
  2036  0018F6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2037  0018F8  0E65               	movlw	low STR_22
  2038  0018FA  6FB2               	movwf	sprintf@fmt& (0+255),b
  2039  0018FC  0E08               	movlw	high STR_22
  2040  0018FE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2041  001900  C0F4  F0B4         	movff	_Resultado,?_sprintf+4
  2042  001904  C0F5  F0B5         	movff	_Resultado+1,?_sprintf+5
  2043  001908  C0F6  F0B6         	movff	_Resultado+2,?_sprintf+6
  2044  00190C  C0F7  F0B7         	movff	_Resultado+3,?_sprintf+7
  2045  001910  EC8F  F01E         	call	_sprintf	;wreg free
  2046                           
  2047                           ;calcu.c: 141:                     Lcd_Out2(1,1,numero1);
  2048  001914  0E01               	movlw	1
  2049  001916  6E04               	movwf	Lcd_Out2@x,c
  2050  001918  0EE4               	movlw	low _numero1
  2051  00191A  6E05               	movwf	Lcd_Out2@buffer,c
  2052  00191C  0E00               	movlw	high _numero1
  2053  00191E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2054  001920  0E01               	movlw	1
  2055  001922  EC03  F01E         	call	_Lcd_Out2
  2056                           
  2057                           ;calcu.c: 142:                     Lcd_Out2(1,6,numero2);
  2058  001926  0E06               	movlw	6
  2059  001928  6E04               	movwf	Lcd_Out2@x,c
  2060  00192A  0ED4               	movlw	low _numero2
  2061  00192C  6E05               	movwf	Lcd_Out2@buffer,c
  2062  00192E  0E00               	movlw	high _numero2
  2063  001930  6E06               	movwf	Lcd_Out2@buffer+1,c
  2064  001932  0E01               	movlw	1
  2065  001934  EC03  F01E         	call	_Lcd_Out2
  2066                           
  2067                           ;calcu.c: 143:                     Lcd_Out2(2,1,Word);
  2068  001938  0E01               	movlw	1
  2069  00193A  6E04               	movwf	Lcd_Out2@x,c
  2070  00193C  0E60               	movlw	low _Word
  2071  00193E  6E05               	movwf	Lcd_Out2@buffer,c
  2072  001940  0E01               	movlw	high _Word
  2073  001942  6E06               	movwf	Lcd_Out2@buffer+1,c
  2074  001944  0E02               	movlw	2
  2075  001946  EC03  F01E         	call	_Lcd_Out2
  2076  00194A                     l4993:
  2077                           
  2078                           ;calcu.c: 136:                 while(PORTCbits.RC1==1){
  2079  00194A  B282               	btfsc	3970,1,c	;volatile
  2080  00194C  D790               	goto	l4979
  2081                           
  2082                           ;calcu.c: 146:                  _delay((unsigned long)((1000)*(8000000/4000.0)));
  2083  00194E  0E0B               	movlw	11
  2084  001950  6E5D               	movwf	(??_main+1)& (0+255),c
  2085  001952  0E26               	movlw	38
  2086  001954  6E5C               	movwf	??_main& (0+255),c
  2087  001956  0E5E               	movlw	94
  2088  001958                     u6037:
  2089  001958  2EE8               	decfsz	wreg,f,c
  2090  00195A  D7FE               	bra	u6037
  2091  00195C  2E5C               	decfsz	??_main& (0+255),f,c
  2092  00195E  D7FC               	bra	u6037
  2093  001960  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2094  001962  D7FA               	bra	u6037
  2095                           
  2096                           ;calcu.c: 147:                  Lcd_Cmd(1);
  2097  001964  0E01               	movlw	1
  2098  001966  ECDF  F019         	call	_Lcd_Cmd
  2099  00196A  D4AC               	goto	l4853
  2100  00196C                     l5001:
  2101                           
  2102                           ;calcu.c: 152:             {;calcu.c: 153:                 Lcd_Cmd(1);
  2103  00196C  0E01               	movlw	1
  2104  00196E  ECDF  F019         	call	_Lcd_Cmd
  2105                           
  2106                           ;calcu.c: 154:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  2107  001972  0E02               	movlw	2
  2108  001974  6E5D               	movwf	(??_main+1)& (0+255),c
  2109  001976  0E04               	movlw	4
  2110  001978  6E5C               	movwf	??_main& (0+255),c
  2111  00197A  0EBA               	movlw	186
  2112  00197C                     u6047:
  2113  00197C  2EE8               	decfsz	wreg,f,c
  2114  00197E  D7FE               	bra	u6047
  2115  001980  2E5C               	decfsz	??_main& (0+255),f,c
  2116  001982  D7FC               	bra	u6047
  2117  001984  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2118  001986  D7FA               	bra	u6047
  2119  001988  D000               	nop2	
  2120                           
  2121                           ;calcu.c: 155:                 if(Num2==0)
  2122  00198A  C0C0  F001         	movff	_Num2,___fleq@ff1
  2123  00198E  C0C1  F002         	movff	_Num2+1,___fleq@ff1+1
  2124  001992  C0C2  F003         	movff	_Num2+2,___fleq@ff1+2
  2125  001996  C0C3  F004         	movff	_Num2+3,___fleq@ff1+3
  2126  00199A  0E00               	movlw	0
  2127  00199C  6E05               	movwf	___fleq@ff2,c
  2128  00199E  0E00               	movlw	0
  2129  0019A0  6E06               	movwf	___fleq@ff2+1,c
  2130  0019A2  0E00               	movlw	0
  2131  0019A4  6E07               	movwf	___fleq@ff2+2,c
  2132  0019A6  0E00               	movlw	0
  2133  0019A8  6E08               	movwf	___fleq@ff2+3,c
  2134  0019AA  EC09  F01D         	call	___fleq	;wreg free
  2135  0019AE  B0D8               	btfsc	status,0,c
  2136  0019B0  D00A               	goto	l5011
  2137  0019B2  D094               	goto	l5033
  2138  0019B4                     l5009:
  2139                           
  2140                           ;calcu.c: 158:                       Lcd_Out(1,1,"NelPrro");
  2141  0019B4  0E01               	movlw	1
  2142  0019B6  6E04               	movwf	Lcd_Out@x,c
  2143  0019B8  0E84               	movlw	low STR_23
  2144  0019BA  6E05               	movwf	Lcd_Out@buffer,c
  2145  0019BC  0E08               	movlw	high STR_23
  2146  0019BE  6E06               	movwf	Lcd_Out@buffer+1,c
  2147  0019C0  0E01               	movlw	1
  2148  0019C2  EC90  F01D         	call	_Lcd_Out
  2149  0019C6                     l5011:
  2150                           
  2151                           ;calcu.c: 157:                      while(PORTCbits.RC1==1)
  2152  0019C6  A282               	btfss	3970,1,c	;volatile
  2153  0019C8  D489               	goto	l4855
  2154  0019CA  D7F4               	goto	l5009
  2155  0019CC                     l5013:
  2156                           
  2157                           ;calcu.c: 163:                 {;calcu.c: 164:                   Resultado=Num1/Num2;
  2158  0019CC  C0C4  F001         	movff	_Num1,___fldiv@b
  2159  0019D0  C0C5  F002         	movff	_Num1+1,___fldiv@b+1
  2160  0019D4  C0C6  F003         	movff	_Num1+2,___fldiv@b+2
  2161  0019D8  C0C7  F004         	movff	_Num1+3,___fldiv@b+3
  2162  0019DC  C0C0  F005         	movff	_Num2,___fldiv@a
  2163  0019E0  C0C1  F006         	movff	_Num2+1,___fldiv@a+1
  2164  0019E4  C0C2  F007         	movff	_Num2+2,___fldiv@a+2
  2165  0019E8  C0C3  F008         	movff	_Num2+3,___fldiv@a+3
  2166  0019EC  EC94  F013         	call	___fldiv	;wreg free
  2167  0019F0  C001  F0F4         	movff	?___fldiv,_Resultado
  2168  0019F4  C002  F0F5         	movff	?___fldiv+1,_Resultado+1
  2169  0019F8  C003  F0F6         	movff	?___fldiv+2,_Resultado+2
  2170  0019FC  C004  F0F7         	movff	?___fldiv+3,_Resultado+3
  2171                           
  2172                           ;calcu.c: 165:                   sprintf(numero1,"%0.0f/",Num1);
  2173  001A00  0EE4               	movlw	low _numero1
  2174  001A02  0100               	movlb	0	; () banked
  2175  001A04  6FB0               	movwf	sprintf@s& (0+255),b
  2176  001A06  0E00               	movlw	high _numero1
  2177  001A08  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2178  001A0A  0E9A               	movlw	low STR_24
  2179  001A0C  6FB2               	movwf	sprintf@fmt& (0+255),b
  2180  001A0E  0E08               	movlw	high STR_24
  2181  001A10  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2182  001A12  C0C4  F0B4         	movff	_Num1,?_sprintf+4
  2183  001A16  C0C5  F0B5         	movff	_Num1+1,?_sprintf+5
  2184  001A1A  C0C6  F0B6         	movff	_Num1+2,?_sprintf+6
  2185  001A1E  C0C7  F0B7         	movff	_Num1+3,?_sprintf+7
  2186  001A22  EC8F  F01E         	call	_sprintf	;wreg free
  2187                           
  2188                           ;calcu.c: 166:                   sprintf(numero2,"%0.0f",Num2);
  2189  001A26  0ED4               	movlw	low _numero2
  2190  001A28  0100               	movlb	0	; () banked
  2191  001A2A  6FB0               	movwf	sprintf@s& (0+255),b
  2192  001A2C  0E00               	movlw	high _numero2
  2193  001A2E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2194  001A30  0E5F               	movlw	low (STR_13+6)
  2195  001A32  6FB2               	movwf	sprintf@fmt& (0+255),b
  2196  001A34  0E08               	movlw	high (STR_13+6)
  2197  001A36  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2198  001A38  C0C0  F0B4         	movff	_Num2,?_sprintf+4
  2199  001A3C  C0C1  F0B5         	movff	_Num2+1,?_sprintf+5
  2200  001A40  C0C2  F0B6         	movff	_Num2+2,?_sprintf+6
  2201  001A44  C0C3  F0B7         	movff	_Num2+3,?_sprintf+7
  2202  001A48  EC8F  F01E         	call	_sprintf	;wreg free
  2203                           
  2204                           ;calcu.c: 167:                   sprintf(Word,"Div= %0.0f",Resultado);
  2205  001A4C  0E60               	movlw	low _Word
  2206  001A4E  0100               	movlb	0	; () banked
  2207  001A50  6FB0               	movwf	sprintf@s& (0+255),b
  2208  001A52  0E01               	movlw	high _Word
  2209  001A54  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2210  001A56  0E71               	movlw	low STR_26
  2211  001A58  6FB2               	movwf	sprintf@fmt& (0+255),b
  2212  001A5A  0E08               	movlw	high STR_26
  2213  001A5C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2214  001A5E  C0F4  F0B4         	movff	_Resultado,?_sprintf+4
  2215  001A62  C0F5  F0B5         	movff	_Resultado+1,?_sprintf+5
  2216  001A66  C0F6  F0B6         	movff	_Resultado+2,?_sprintf+6
  2217  001A6A  C0F7  F0B7         	movff	_Resultado+3,?_sprintf+7
  2218  001A6E  EC8F  F01E         	call	_sprintf	;wreg free
  2219                           
  2220                           ;calcu.c: 168:                   Lcd_Out2(1,1,numero1);
  2221  001A72  0E01               	movlw	1
  2222  001A74  6E04               	movwf	Lcd_Out2@x,c
  2223  001A76  0EE4               	movlw	low _numero1
  2224  001A78  6E05               	movwf	Lcd_Out2@buffer,c
  2225  001A7A  0E00               	movlw	high _numero1
  2226  001A7C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2227  001A7E  0E01               	movlw	1
  2228  001A80  EC03  F01E         	call	_Lcd_Out2
  2229                           
  2230                           ;calcu.c: 169:                   Lcd_Out2(1,4,numero2);
  2231  001A84  0E04               	movlw	4
  2232  001A86  6E04               	movwf	Lcd_Out2@x,c
  2233  001A88  0ED4               	movlw	low _numero2
  2234  001A8A  6E05               	movwf	Lcd_Out2@buffer,c
  2235  001A8C  0E00               	movlw	high _numero2
  2236  001A8E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2237  001A90  0E01               	movlw	1
  2238  001A92  EC03  F01E         	call	_Lcd_Out2
  2239                           
  2240                           ;calcu.c: 170:                   Lcd_Out2(2,1,Word);
  2241  001A96  0E01               	movlw	1
  2242  001A98  6E04               	movwf	Lcd_Out2@x,c
  2243  001A9A  0E60               	movlw	low _Word
  2244  001A9C  6E05               	movwf	Lcd_Out2@buffer,c
  2245  001A9E  0E01               	movlw	high _Word
  2246  001AA0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2247  001AA2  0E02               	movlw	2
  2248  001AA4  EC03  F01E         	call	_Lcd_Out2
  2249                           
  2250                           ;calcu.c: 171:                  _delay((unsigned long)((1000)*(8000000/4000.0)));
  2251  001AA8  0E0B               	movlw	11
  2252  001AAA  6E5D               	movwf	(??_main+1)& (0+255),c
  2253  001AAC  0E26               	movlw	38
  2254  001AAE  6E5C               	movwf	??_main& (0+255),c
  2255  001AB0  0E5E               	movlw	94
  2256  001AB2                     u6057:
  2257  001AB2  2EE8               	decfsz	wreg,f,c
  2258  001AB4  D7FE               	bra	u6057
  2259  001AB6  2E5C               	decfsz	??_main& (0+255),f,c
  2260  001AB8  D7FC               	bra	u6057
  2261  001ABA  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2262  001ABC  D7FA               	bra	u6057
  2263                           
  2264                           ;calcu.c: 172:                  Lcd_Cmd(1);
  2265  001ABE  0E01               	movlw	1
  2266  001AC0  ECDF  F019         	call	_Lcd_Cmd
  2267                           
  2268                           ;calcu.c: 173:                  _delay((unsigned long)((100)*(8000000/4000.0)));
  2269  001AC4  0E02               	movlw	2
  2270  001AC6  6E5D               	movwf	(??_main+1)& (0+255),c
  2271  001AC8  0E04               	movlw	4
  2272  001ACA  6E5C               	movwf	??_main& (0+255),c
  2273  001ACC  0EBA               	movlw	186
  2274  001ACE                     u6067:
  2275  001ACE  2EE8               	decfsz	wreg,f,c
  2276  001AD0  D7FE               	bra	u6067
  2277  001AD2  2E5C               	decfsz	??_main& (0+255),f,c
  2278  001AD4  D7FC               	bra	u6067
  2279  001AD6  2E5D               	decfsz	(??_main+1)& (0+255),f,c
  2280  001AD8  D7FA               	bra	u6067
  2281  001ADA  D000               	nop2	
  2282  001ADC                     l5033:
  2283                           
  2284                           ;calcu.c: 162:                 while(PORTCbits.RC1==1)
  2285  001ADC  A282               	btfss	3970,1,c	;volatile
  2286  001ADE  EF6E  F009         	goto	l4855
  2287  001AE2  D774               	goto	l5013
  2288  001AE4                     l5037:
  2289  001AE4  C0D2  F05C         	movff	_Selector,??_main
  2290  001AE8  C0D3  F05D         	movff	_Selector+1,??_main+1
  2291                           
  2292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2293                           ; Switch size 1, requested type "simple"
  2294                           ; Number of cases is 1, Range of values is 0 to 0
  2295                           ; switch strategies available:
  2296                           ; Name         Instructions Cycles
  2297                           ; simple_byte            4     3 (average)
  2298                           ;	Chosen strategy is simple_byte
  2299  001AEC  505D               	movf	??_main+1,w,c
  2300  001AEE  0A00               	xorlw	0	; case 0
  2301  001AF0  A4D8               	btfss	status,2,c
  2302  001AF2  EF00  F000         	goto	start
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 4, Range of values is 1 to 15
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte           13     7 (average)
  2309                           ;	Chosen strategy is simple_byte
  2310  001AF6  505C               	movf	??_main,w,c
  2311  001AF8  0A01               	xorlw	1	; case 1
  2312  001AFA  B4D8               	btfsc	status,2,c
  2313  001AFC  D4ED               	goto	l4905
  2314  001AFE  0A02               	xorlw	2	; case 3
  2315  001B00  B4D8               	btfsc	status,2,c
  2316  001B02  D579               	goto	l4931
  2317  001B04  0A04               	xorlw	4	; case 7
  2318  001B06  B4D8               	btfsc	status,2,c
  2319  001B08  D6A2               	goto	l4975
  2320  001B0A  0A08               	xorlw	8	; case 15
  2321  001B0C  B4D8               	btfsc	status,2,c
  2322  001B0E  D72E               	goto	l5001
  2323  001B10  EF00  F000         	goto	start
  2324  001B14                     __end_of_main:
  2325                           	opt callstack 0
  2326                           
  2327 ;; *************** function _sprintf *****************
  2328 ;; Defined at:
  2329 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2332 ;;		 -> Word(16), numero3(16), numero2(16), numero1(16), 
  2333 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2334 ;;		 -> STR_26(11), STR_25(6), STR_24(7), STR_22(12), 
  2335 ;;		 -> STR_21(6), STR_20(7), STR_19(13), STR_18(6), 
  2336 ;;		 -> STR_17(7), STR_16(13), STR_15(6), STR_14(7), 
  2337 ;;		 -> STR_13(12), STR_12(6), STR_11(7), STR_10(16), 
  2338 ;;		 -> STR_6(14), STR_4(13), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  f               6   85[COMRAM] struct _IO_FILE
  2341 ;;  ap              2   83[COMRAM] PTR void [1]
  2342 ;;		 -> ?_sprintf(2), 
  2343 ;;  ret             2    0        int 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  2   80[BANK0 ] int 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         0       8       0       0       0       0       0       0       0
  2354 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2356 ;;      Totals:        10       8       0       0       0       0       0       0       0
  2357 ;;Total ram usage:       18 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    7
  2360 ;; This function calls:
  2361 ;;		_vfprintf
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text1
  2368  003D1E                     __ptext1:
  2369                           	opt callstack 0
  2370  003D1E                     _sprintf:
  2371                           	opt callstack 23
  2372                           
  2373                           ;incstack = 0
  2374  003D1E  0EB4               	movlw	low (?_sprintf+4)
  2375  003D20  6E54               	movwf	sprintf@ap,c
  2376  003D22  0E00               	movlw	high (?_sprintf+4)
  2377  003D24  6E55               	movwf	sprintf@ap+1,c
  2378  003D26  C0B0  F056         	movff	sprintf@s,sprintf@f
  2379  003D2A  C0B1  F057         	movff	sprintf@s+1,sprintf@f+1
  2380  003D2E  0E00               	movlw	0
  2381  003D30  6E59               	movwf	sprintf@f+3,c
  2382  003D32  0E00               	movlw	0
  2383  003D34  6E58               	movwf	sprintf@f+2,c
  2384  003D36  0E00               	movlw	0
  2385  003D38  6E5B               	movwf	sprintf@f+5,c
  2386  003D3A  0E00               	movlw	0
  2387  003D3C  6E5A               	movwf	sprintf@f+4,c
  2388  003D3E  0E56               	movlw	low sprintf@f
  2389  003D40  6E4A               	movwf	vfprintf@fp,c
  2390  003D42  0E00               	movlw	high sprintf@f
  2391  003D44  6E4B               	movwf	vfprintf@fp+1,c
  2392  003D46  C0B2  F04C         	movff	sprintf@fmt,vfprintf@fmt
  2393  003D4A  C0B3  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2394  003D4E  0E54               	movlw	low sprintf@ap
  2395  003D50  6E4E               	movwf	vfprintf@ap,c
  2396  003D52  0E00               	movlw	high sprintf@ap
  2397  003D54  6E4F               	movwf	vfprintf@ap+1,c
  2398  003D56  EC3B  F01E         	call	_vfprintf	;wreg free
  2399  003D5A  5058               	movf	sprintf@f+2,w,c
  2400  003D5C  0100               	movlb	0	; () banked
  2401  003D5E  25B0               	addwf	sprintf@s& (0+255),w,b
  2402  003D60  6ED9               	movwf	fsr2l,c
  2403  003D62  5059               	movf	sprintf@f+3,w,c
  2404  003D64  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2405  003D66  6EDA               	movwf	fsr2h,c
  2406  003D68  0E00               	movlw	0
  2407  003D6A  6EDF               	movwf	indf2,c
  2408                           
  2409                           ; BSR set to: 0
  2410  003D6C  0012               	return		;funcret
  2411  003D6E                     __end_of_sprintf:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _vfprintf *****************
  2415 ;; Defined at:
  2416 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  2419 ;;		 -> sprintf@f(6), 
  2420 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  2421 ;;		 -> STR_26(11), STR_25(6), STR_24(7), STR_22(12), 
  2422 ;;		 -> STR_21(6), STR_20(7), STR_19(13), STR_18(6), 
  2423 ;;		 -> STR_17(7), STR_16(13), STR_15(6), STR_14(7), 
  2424 ;;		 -> STR_13(12), STR_12(6), STR_11(7), STR_10(16), 
  2425 ;;		 -> STR_6(14), STR_4(13), 
  2426 ;;  ap              2   77[COMRAM] PTR PTR void 
  2427 ;;		 -> sprintf@ap(2), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  2430 ;;		 -> STR_26(11), STR_25(6), STR_24(7), STR_22(12), 
  2431 ;;		 -> STR_21(6), STR_20(7), STR_19(13), STR_18(6), 
  2432 ;;		 -> STR_17(7), STR_16(13), STR_15(6), STR_14(7), 
  2433 ;;		 -> STR_13(12), STR_12(6), STR_11(7), STR_10(16), 
  2434 ;;		 -> STR_6(14), STR_4(13), 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2   73[COMRAM] int 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         6       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        8 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    6
  2451 ;; This function calls:
  2452 ;;		_vfpfcnvrt
  2453 ;; This function is called by:
  2454 ;;		_sprintf
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text2
  2459  003C76                     __ptext2:
  2460                           	opt callstack 0
  2461  003C76                     _vfprintf:
  2462                           	opt callstack 23
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;incstack = 0
  2468  003C76  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  2469  003C7A  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2470                           
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2472  003C7E  0E00               	movlw	0
  2473  003C80  0100               	movlb	0	; () banked
  2474  003C82  6FC9               	movwf	(_nout+1)& (0+255),b
  2475  003C84  0E00               	movlw	0
  2476  003C86  6FC8               	movwf	_nout& (0+255),b
  2477                           
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2479  003C88  D013               	goto	l4661
  2480  003C8A                     l4659:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2484  003C8A  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2485  003C8E  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2486  003C92  0E50               	movlw	low vfprintf@cfmt
  2487  003C94  6E42               	movwf	vfpfcnvrt@fmt,c
  2488  003C96  0E00               	movlw	high vfprintf@cfmt
  2489  003C98  6E43               	movwf	vfpfcnvrt@fmt+1,c
  2490  003C9A  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2491  003C9E  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2492  003CA2  EC8A  F00D         	call	_vfpfcnvrt	;wreg free
  2493  003CA6  5040               	movf	?_vfpfcnvrt,w,c
  2494  003CA8  0100               	movlb	0	; () banked
  2495  003CAA  27C8               	addwf	_nout& (0+255),f,b
  2496  003CAC  5041               	movf	?_vfpfcnvrt+1,w,c
  2497  003CAE  23C9               	addwfc	(_nout+1)& (0+255),f,b
  2498  003CB0                     l4661:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2502  003CB0  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  2503  003CB4  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2504  003CB8                     	if	0	;tblptru may be non-zero
  2505  003CB8                     	endif
  2506  003CB8                     	if	0	;tblptru may be non-zero
  2507  003CB8                     	endif
  2508  003CB8  0008               	tblrd		*
  2509  003CBA  50F5               	movf	tablat,w,c
  2510  003CBC  0900               	iorlw	0
  2511  003CBE  A4D8               	btfss	status,2,c
  2512  003CC0  D7E4               	goto	l4659
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2516  003CC2  C0C8  F04A         	movff	_nout,?_vfprintf
  2517  003CC6  C0C9  F04B         	movff	_nout+1,?_vfprintf+1
  2518                           
  2519                           ; BSR set to: 0
  2520  003CCA  0012               	return		;funcret
  2521  003CCC                     __end_of_vfprintf:
  2522                           	opt callstack 0
  2523                           
  2524 ;; *************** function _vfpfcnvrt *****************
  2525 ;; Defined at:
  2526 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2529 ;;		 -> sprintf@f(6), 
  2530 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2531 ;;		 -> vfprintf@cfmt(2), 
  2532 ;;  ap              2   67[COMRAM] PTR PTR void 
  2533 ;;		 -> sprintf@ap(2), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  ll              8   56[BANK0 ] long long 
  2536 ;;  llu             8    0        unsigned long long 
  2537 ;;  f               4   72[BANK0 ] unsigned long long 
  2538 ;;  ct              3   76[BANK0 ] unsigned char [3]
  2539 ;;  vp              3    0        PTR void 
  2540 ;;  cp              3    0        PTR unsigned char 
  2541 ;;  done            2   64[BANK0 ] int 
  2542 ;;  i               2    0        int 
  2543 ;;  c               1   79[BANK0 ] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   63[COMRAM] int 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         6       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2555 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2556 ;;      Totals:        10      24       0       0       0       0       0       0       0
  2557 ;;Total ram usage:       34 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    5
  2560 ;; This function calls:
  2561 ;;		_atoi
  2562 ;;		_dtoa
  2563 ;;		_efgtoa
  2564 ;;		_fputc
  2565 ;;		_isdigit
  2566 ;;		_isupper
  2567 ;;		_strncmp
  2568 ;;		_tolower
  2569 ;; This function is called by:
  2570 ;;		_vfprintf
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text3
  2575  001B14                     __ptext3:
  2576                           	opt callstack 0
  2577  001B14                     _vfpfcnvrt:
  2578                           	opt callstack 23
  2579                           
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;incstack = 0
  2584  001B14  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2585  001B18  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2586  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  2587  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  2588  001B24                     	if	0	;tblptru may be non-zero
  2589  001B24                     	endif
  2590  001B24                     	if	0	;tblptru may be non-zero
  2591  001B24                     	endif
  2592  001B24  0008               	tblrd		*
  2593  001B26  50F5               	movf	tablat,w,c
  2594  001B28  0A25               	xorlw	37
  2595  001B2A  A4D8               	btfss	status,2,c
  2596  001B2C  D2B4               	goto	l4591
  2597                           
  2598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2599  001B2E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2600  001B32  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2601  001B36  2ADE               	incf	postinc2,f,c
  2602  001B38  0E00               	movlw	0
  2603  001B3A  22DD               	addwfc	postdec2,f,c
  2604                           
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2606  001B3C  0E00               	movlw	0
  2607  001B3E  0100               	movlb	0	; () banked
  2608  001B40  6FCB               	movwf	(_width+1)& (0+255),b
  2609  001B42  0E00               	movlw	0
  2610  001B44  6FCA               	movwf	_width& (0+255),b
  2611  001B46  C0CA  F05E         	movff	_width,_flags
  2612  001B4A  C0CB  F05F         	movff	_width+1,_flags+1
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2616  001B4E  69CC               	setf	_prec& (0+255),b
  2617  001B50  69CD               	setf	(_prec+1)& (0+255),b
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2621  001B52  0E00               	movlw	0
  2622  001B54  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2623  001B56  0E00               	movlw	0
  2624  001B58  D014               	goto	L1
  2625  001B5A                     l4459:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2629  001B5A  805E               	bsf	_flags,0,c
  2630  001B5C                     l4461:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2634  001B5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  001B60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  001B64  2ADE               	incf	postinc2,f,c
  2637  001B66  0E00               	movlw	0
  2638  001B68  22DD               	addwfc	postdec2,f,c
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2641  001B6A  D02E               	goto	l4485
  2642  001B6C                     l4463:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2646  001B6C  825E               	bsf	_flags,1,c
  2647  001B6E  D7F6               	goto	l4461
  2648  001B70                     l4467:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2652  001B70  845E               	bsf	_flags,2,c
  2653  001B72  D7F4               	goto	l4461
  2654  001B74                     l4471:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2658  001B74  865E               	bsf	_flags,3,c
  2659  001B76  D7F2               	goto	l4461
  2660  001B78                     l4475:
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2664  001B78  885E               	bsf	_flags,4,c
  2665  001B7A  D7F0               	goto	l4461
  2666  001B7C                     l4479:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2670  001B7C  0E00               	movlw	0
  2671  001B7E  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2672  001B80  0E01               	movlw	1
  2673  001B82                     L1:
  2674  001B82  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  2675                           
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2677  001B84  D021               	goto	l4485
  2678  001B86                     l4483:
  2679                           
  2680                           ; BSR set to: 0
  2681  001B86  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2682  001B8A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2683  001B8E  CFDE FFF6          	movff	postinc2,tblptrl
  2684  001B92  CFDD FFF7          	movff	postdec2,tblptrh
  2685  001B96                     	if	0	;tblptru may be non-zero
  2686  001B96                     	endif
  2687  001B96                     	if	0	;tblptru may be non-zero
  2688  001B96                     	endif
  2689  001B96  0008               	tblrd		*
  2690  001B98  50F5               	movf	tablat,w,c
  2691  001B9A  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2692  001B9C  6A47               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2693                           
  2694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2695                           ; Switch size 1, requested type "simple"
  2696                           ; Number of cases is 1, Range of values is 0 to 0
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte            4     3 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701  001B9E  5047               	movf	??_vfpfcnvrt+1,w,c
  2702  001BA0  0A00               	xorlw	0	; case 0
  2703  001BA2  A4D8               	btfss	status,2,c
  2704  001BA4  D7EB               	goto	l4479
  2705                           
  2706                           ; BSR set to: 0
  2707                           ; Switch size 1, requested type "simple"
  2708                           ; Number of cases is 5, Range of values is 32 to 48
  2709                           ; switch strategies available:
  2710                           ; Name         Instructions Cycles
  2711                           ; simple_byte           16     9 (average)
  2712                           ;	Chosen strategy is simple_byte
  2713  001BA6  5046               	movf	??_vfpfcnvrt,w,c
  2714  001BA8  0A20               	xorlw	32	; case 32
  2715  001BAA  B4D8               	btfsc	status,2,c
  2716  001BAC  D7E3               	goto	l4471
  2717  001BAE  0A03               	xorlw	3	; case 35
  2718  001BB0  B4D8               	btfsc	status,2,c
  2719  001BB2  D7E2               	goto	l4475
  2720  001BB4  0A08               	xorlw	8	; case 43
  2721  001BB6  B4D8               	btfsc	status,2,c
  2722  001BB8  D7DB               	goto	l4467
  2723  001BBA  0A06               	xorlw	6	; case 45
  2724  001BBC  B4D8               	btfsc	status,2,c
  2725  001BBE  D7CD               	goto	l4459
  2726  001BC0  0A1D               	xorlw	29	; case 48
  2727  001BC2  B4D8               	btfsc	status,2,c
  2728  001BC4  D7D3               	goto	l4463
  2729  001BC6  D7DA               	goto	l4479
  2730  001BC8                     l4485:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2734  001BC8  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  2735  001BCA  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2736  001BCC  B4D8               	btfsc	status,2,c
  2737  001BCE  D7DB               	goto	l4483
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2741  001BD0  B05E               	btfsc	_flags,0,c
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2745  001BD2  925E               	bcf	_flags,1,c
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2749  001BD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  001BD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  001BDC  CFDE FFF6          	movff	postinc2,tblptrl
  2752  001BE0  CFDD FFF7          	movff	postdec2,tblptrh
  2753  001BE4                     	if	0	;tblptru may be non-zero
  2754  001BE4                     	endif
  2755  001BE4                     	if	0	;tblptru may be non-zero
  2756  001BE4                     	endif
  2757  001BE4  0008               	tblrd		*
  2758  001BE6  50F5               	movf	tablat,w,c
  2759  001BE8  0A2A               	xorlw	42
  2760  001BEA  A4D8               	btfss	status,2,c
  2761  001BEC  D023               	goto	l4497
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2765  001BEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2766  001BF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2767  001BF6  2ADE               	incf	postinc2,f,c
  2768  001BF8  0E00               	movlw	0
  2769  001BFA  22DD               	addwfc	postdec2,f,c
  2770                           
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2772  001BFC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2773  001C00  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2774  001C04  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2775  001C08  0E02               	movlw	2
  2776  001C0A  26DE               	addwf	postinc2,f,c
  2777  001C0C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2778  001C10  0E00               	movlw	0
  2779  001C12  22DD               	addwfc	postdec2,f,c
  2780  001C14  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2781  001C18  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2782  001C1C  CFDE F0CA          	movff	postinc2,_width
  2783  001C20  CFDD F0CB          	movff	postdec2,_width+1
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2787  001C24  AFCB               	btfss	(_width+1)& (0+255),7,b
  2788  001C26  D040               	goto	u5420
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2792  001C28  805E               	bsf	_flags,0,c
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2795  001C2A  6DCA               	negf	_width& (0+255),b
  2796  001C2C  1FCB               	comf	(_width+1)& (0+255),f,b
  2797  001C2E  B0D8               	btfsc	status,0,c
  2798  001C30  2BCB               	incf	(_width+1)& (0+255),f,b
  2799  001C32  D03A               	goto	u5420
  2800  001C34                     l4497:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2804  001C34  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  001C38  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  001C3C  CFDE F008          	movff	postinc2,atoi@s
  2807  001C40  CFDD F009          	movff	postdec2,atoi@s+1
  2808  001C44  EC79  F017         	call	_atoi	;wreg free
  2809  001C48  C008  F0CA         	movff	?_atoi,_width
  2810  001C4C  C009  F0CB         	movff	?_atoi+1,_width+1
  2811                           
  2812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2813  001C50  D007               	goto	l4501
  2814  001C52                     l4499:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2818  001C52  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2819  001C56  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2820  001C5A  2ADE               	incf	postinc2,f,c
  2821  001C5C  0E00               	movlw	0
  2822  001C5E  22DD               	addwfc	postdec2,f,c
  2823  001C60                     l4501:
  2824  001C60  0ED0               	movlw	208
  2825  001C62  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2826  001C64  0EFF               	movlw	255
  2827  001C66  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2828  001C68  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2829  001C6C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2830  001C70  CFDE FFF6          	movff	postinc2,tblptrl
  2831  001C74  CFDD FFF7          	movff	postdec2,tblptrh
  2832  001C78                     	if	0	;tblptru may be non-zero
  2833  001C78                     	endif
  2834  001C78                     	if	0	;tblptru may be non-zero
  2835  001C78                     	endif
  2836  001C78  0008               	tblrd		*
  2837  001C7A  50F5               	movf	tablat,w,c
  2838  001C7C  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2839  001C7E  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2840  001C80  5046               	movf	??_vfpfcnvrt,w,c
  2841  001C82  2648               	addwf	??_vfpfcnvrt+2,f,c
  2842  001C84  5047               	movf	??_vfpfcnvrt+1,w,c
  2843  001C86  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2844  001C88  5049               	movf	??_vfpfcnvrt+3,w,c
  2845  001C8A  E106               	bnz	u5400
  2846  001C8C  0E0A               	movlw	10
  2847  001C8E  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2848  001C90  B0D8               	btfsc	status,0,c
  2849  001C92  D002               	goto	u5400
  2850  001C94  0E01               	movlw	1
  2851  001C96  D001               	goto	u5410
  2852  001C98                     u5400:
  2853  001C98  0E00               	movlw	0
  2854  001C9A                     u5410:
  2855  001C9A  0100               	movlb	0	; () banked
  2856  001C9C  6FA2               	movwf	_vfpfcnvrt$464& (0+255),b
  2857  001C9E  6BA3               	clrf	(_vfpfcnvrt$464+1)& (0+255),b
  2858                           
  2859                           ; BSR set to: 0
  2860  001CA0  51A2               	movf	_vfpfcnvrt$464& (0+255),w,b
  2861  001CA2  11A3               	iorwf	(_vfpfcnvrt$464+1)& (0+255),w,b
  2862  001CA4  A4D8               	btfss	status,2,c
  2863  001CA6  D7D5               	goto	l4499
  2864  001CA8                     u5420:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2868  001CA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2869  001CAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2870  001CB0  CFDE FFF6          	movff	postinc2,tblptrl
  2871  001CB4  CFDD FFF7          	movff	postdec2,tblptrh
  2872  001CB8                     	if	0	;tblptru may be non-zero
  2873  001CB8                     	endif
  2874  001CB8                     	if	0	;tblptru may be non-zero
  2875  001CB8                     	endif
  2876  001CB8  0008               	tblrd		*
  2877  001CBA  50F5               	movf	tablat,w,c
  2878  001CBC  0A2E               	xorlw	46
  2879  001CBE  A4D8               	btfss	status,2,c
  2880  001CC0  D06E               	goto	u5470
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2884  001CC2  0E00               	movlw	0
  2885  001CC4  6FCD               	movwf	(_prec+1)& (0+255),b
  2886  001CC6  0E00               	movlw	0
  2887  001CC8  6FCC               	movwf	_prec& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2891  001CCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  001CCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  001CD2  2ADE               	incf	postinc2,f,c
  2894  001CD4  0E00               	movlw	0
  2895  001CD6  22DD               	addwfc	postdec2,f,c
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2899  001CD8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2900  001CDC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2901  001CE0  CFDE FFF6          	movff	postinc2,tblptrl
  2902  001CE4  CFDD FFF7          	movff	postdec2,tblptrh
  2903  001CE8                     	if	0	;tblptru may be non-zero
  2904  001CE8                     	endif
  2905  001CE8                     	if	0	;tblptru may be non-zero
  2906  001CE8                     	endif
  2907  001CE8  0008               	tblrd		*
  2908  001CEA  50F5               	movf	tablat,w,c
  2909  001CEC  0A2A               	xorlw	42
  2910  001CEE  A4D8               	btfss	status,2,c
  2911  001CF0  D01C               	goto	l4517
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2915  001CF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  001CF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  001CFA  2ADE               	incf	postinc2,f,c
  2918  001CFC  0E00               	movlw	0
  2919  001CFE  22DD               	addwfc	postdec2,f,c
  2920                           
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2922  001D00  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2923  001D04  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2924  001D08  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2925  001D0C  0E02               	movlw	2
  2926  001D0E  26DE               	addwf	postinc2,f,c
  2927  001D10  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2928  001D14  0E00               	movlw	0
  2929  001D16  22DD               	addwfc	postdec2,f,c
  2930  001D18  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2931  001D1C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2932  001D20  CFDE F0CC          	movff	postinc2,_prec
  2933  001D24  CFDD F0CD          	movff	postdec2,_prec+1
  2934                           
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2936  001D28  D03A               	goto	u5470
  2937  001D2A                     l4517:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2941  001D2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2942  001D2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2943  001D32  CFDE F008          	movff	postinc2,atoi@s
  2944  001D36  CFDD F009          	movff	postdec2,atoi@s+1
  2945  001D3A  EC79  F017         	call	_atoi	;wreg free
  2946  001D3E  C008  F0CC         	movff	?_atoi,_prec
  2947  001D42  C009  F0CD         	movff	?_atoi+1,_prec+1
  2948                           
  2949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2950  001D46  D007               	goto	l4521
  2951  001D48                     l4519:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2955  001D48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956  001D4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957  001D50  2ADE               	incf	postinc2,f,c
  2958  001D52  0E00               	movlw	0
  2959  001D54  22DD               	addwfc	postdec2,f,c
  2960  001D56                     l4521:
  2961  001D56  0ED0               	movlw	208
  2962  001D58  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2963  001D5A  0EFF               	movlw	255
  2964  001D5C  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2965  001D5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2966  001D62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2967  001D66  CFDE FFF6          	movff	postinc2,tblptrl
  2968  001D6A  CFDD FFF7          	movff	postdec2,tblptrh
  2969  001D6E                     	if	0	;tblptru may be non-zero
  2970  001D6E                     	endif
  2971  001D6E                     	if	0	;tblptru may be non-zero
  2972  001D6E                     	endif
  2973  001D6E  0008               	tblrd		*
  2974  001D70  50F5               	movf	tablat,w,c
  2975  001D72  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2976  001D74  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2977  001D76  5046               	movf	??_vfpfcnvrt,w,c
  2978  001D78  2648               	addwf	??_vfpfcnvrt+2,f,c
  2979  001D7A  5047               	movf	??_vfpfcnvrt+1,w,c
  2980  001D7C  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2981  001D7E  5049               	movf	??_vfpfcnvrt+3,w,c
  2982  001D80  E106               	bnz	u5450
  2983  001D82  0E0A               	movlw	10
  2984  001D84  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2985  001D86  B0D8               	btfsc	status,0,c
  2986  001D88  D002               	goto	u5450
  2987  001D8A  0E01               	movlw	1
  2988  001D8C  D001               	goto	u5460
  2989  001D8E                     u5450:
  2990  001D8E  0E00               	movlw	0
  2991  001D90                     u5460:
  2992  001D90  0100               	movlb	0	; () banked
  2993  001D92  6FA4               	movwf	_vfpfcnvrt$465& (0+255),b
  2994  001D94  6BA5               	clrf	(_vfpfcnvrt$465+1)& (0+255),b
  2995                           
  2996                           ; BSR set to: 0
  2997  001D96  51A4               	movf	_vfpfcnvrt$465& (0+255),w,b
  2998  001D98  11A5               	iorwf	(_vfpfcnvrt$465+1)& (0+255),w,b
  2999  001D9A  A4D8               	btfss	status,2,c
  3000  001D9C  D7D5               	goto	l4519
  3001  001D9E                     u5470:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3005  001D9E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3006  001DA2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3007  001DA6  CFDE FFF6          	movff	postinc2,tblptrl
  3008  001DAA  CFDD FFF7          	movff	postdec2,tblptrh
  3009  001DAE                     	if	0	;tblptru may be non-zero
  3010  001DAE                     	endif
  3011  001DAE                     	if	0	;tblptru may be non-zero
  3012  001DAE                     	endif
  3013  001DAE  0008               	tblrd		*
  3014  001DB0  50F5               	movf	tablat,w,c
  3015  001DB2  6E07               	movwf	tolower@c,c
  3016  001DB4  6A08               	clrf	tolower@c+1,c
  3017  001DB6  ECB7  F01E         	call	_tolower	;wreg free
  3018  001DBA  5007               	movf	?_tolower,w,c
  3019  001DBC  0100               	movlb	0	; () banked
  3020  001DBE  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3024  001DC0  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3025  001DC2  B4D8               	btfsc	status,2,c
  3026  001DC4  D035               	goto	l4537
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3030  001DC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3031  001DCA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3032  001DCE  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3033  001DD2  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3034  001DD6  0E01               	movlw	1
  3035  001DD8  2646               	addwf	??_vfpfcnvrt,f,c
  3036  001DDA  0E00               	movlw	0
  3037  001DDC  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3038  001DDE  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3039  001DE2  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3040  001DE6                     	if	0	;tblptru may be non-zero
  3041  001DE6                     	endif
  3042  001DE6                     	if	0	;tblptru may be non-zero
  3043  001DE6                     	endif
  3044  001DE6  0008               	tblrd		*
  3045  001DE8  50F5               	movf	tablat,w,c
  3046  001DEA  6E07               	movwf	tolower@c,c
  3047  001DEC  6A08               	clrf	tolower@c+1,c
  3048  001DEE  ECB7  F01E         	call	_tolower	;wreg free
  3049  001DF2  5007               	movf	?_tolower,w,c
  3050  001DF4  0100               	movlb	0	; () banked
  3051  001DF6  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3055  001DF8  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3056  001DFA  B4D8               	btfsc	status,2,c
  3057  001DFC  D019               	goto	l4537
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3061  001DFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3062  001E02  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3063  001E06  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3064  001E0A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3065  001E0E  0E02               	movlw	2
  3066  001E10  2646               	addwf	??_vfpfcnvrt,f,c
  3067  001E12  0E00               	movlw	0
  3068  001E14  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3069  001E16  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3070  001E1A  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3071  001E1E                     	if	0	;tblptru may be non-zero
  3072  001E1E                     	endif
  3073  001E1E                     	if	0	;tblptru may be non-zero
  3074  001E1E                     	endif
  3075  001E1E  0008               	tblrd		*
  3076  001E20  50F5               	movf	tablat,w,c
  3077  001E22  6E07               	movwf	tolower@c,c
  3078  001E24  6A08               	clrf	tolower@c+1,c
  3079  001E26  ECB7  F01E         	call	_tolower	;wreg free
  3080  001E2A  5007               	movf	?_tolower,w,c
  3081  001E2C  0100               	movlb	0	; () banked
  3082  001E2E  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3083  001E30                     l4537:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3087  001E30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088  001E34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089  001E38  CFDE FFF6          	movff	postinc2,tblptrl
  3090  001E3C  CFDD FFF7          	movff	postdec2,tblptrh
  3091  001E40                     	if	0	;tblptru may be non-zero
  3092  001E40                     	endif
  3093  001E40                     	if	0	;tblptru may be non-zero
  3094  001E40                     	endif
  3095  001E40  0008               	tblrd		*
  3096  001E42  50F5               	movf	tablat,w,c
  3097  001E44  0A64               	xorlw	100
  3098  001E46  B4D8               	btfsc	status,2,c
  3099  001E48  D00D               	goto	u5510
  3100                           
  3101                           ; BSR set to: 0
  3102  001E4A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3103  001E4E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3104  001E52  CFDE FFF6          	movff	postinc2,tblptrl
  3105  001E56  CFDD FFF7          	movff	postdec2,tblptrh
  3106  001E5A                     	if	0	;tblptru may be non-zero
  3107  001E5A                     	endif
  3108  001E5A                     	if	0	;tblptru may be non-zero
  3109  001E5A                     	endif
  3110  001E5A  0008               	tblrd		*
  3111  001E5C  50F5               	movf	tablat,w,c
  3112  001E5E  0A69               	xorlw	105
  3113  001E60  A4D8               	btfss	status,2,c
  3114  001E62  D03F               	goto	l4547
  3115  001E64                     u5510:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3119  001E64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3120  001E68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3121  001E6C  2ADE               	incf	postinc2,f,c
  3122  001E6E  0E00               	movlw	0
  3123  001E70  22DD               	addwfc	postdec2,f,c
  3124                           
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3126  001E72  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3127  001E76  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3128  001E7A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3129  001E7E  0E02               	movlw	2
  3130  001E80  26DE               	addwf	postinc2,f,c
  3131  001E82  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3132  001E86  0E00               	movlw	0
  3133  001E88  22DD               	addwfc	postdec2,f,c
  3134  001E8A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3135  001E8E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3136  001E92  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3137  001E96  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3138  001E9A  0E00               	movlw	0
  3139  001E9C  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3140  001E9E  0EFF               	movlw	-1
  3141  001EA0  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3142  001EA2  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3143  001EA4  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3144  001EA6  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3145  001EA8  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3146  001EAA  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3150  001EAC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3151  001EB0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3152  001EB4  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3153  001EB8  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3154  001EBC  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3155  001EC0  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3156  001EC4  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3157  001EC8  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3158  001ECC  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3159  001ED0  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3160  001ED4  ECD8  F014         	call	_dtoa	;wreg free
  3161  001ED8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3162  001EDC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3163  001EE0  0012               	return	
  3164  001EE2                     l4547:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3168  001EE2  0E66               	movlw	102
  3169  001EE4  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3170  001EE6  A4D8               	btfss	status,2,c
  3171  001EE8  D03F               	goto	l4559
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3175  001EEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3176  001EEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3177  001EF2  CFDE FFF6          	movff	postinc2,tblptrl
  3178  001EF6  CFDD FFF7          	movff	postdec2,tblptrh
  3179  001EFA                     	if	0	;tblptru may be non-zero
  3180  001EFA                     	endif
  3181  001EFA                     	if	0	;tblptru may be non-zero
  3182  001EFA                     	endif
  3183  001EFA  0008               	tblrd		*
  3184  001EFC  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3188  001F00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3189  001F04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3190  001F08  2ADE               	incf	postinc2,f,c
  3191  001F0A  0E00               	movlw	0
  3192  001F0C  22DD               	addwfc	postdec2,f,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3196  001F0E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3197  001F12  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3198  001F16  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3199  001F1A  0E04               	movlw	4
  3200  001F1C  26DE               	addwf	postinc2,f,c
  3201  001F1E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3202  001F22  0E00               	movlw	0
  3203  001F24  22DD               	addwfc	postdec2,f,c
  3204  001F26  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3205  001F2A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3206  001F2E  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3207  001F32  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3208  001F36  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3209  001F3A  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3210  001F3E                     l4555:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3214  001F3E  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3215  001F42  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3216  001F46  C0A8  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3217  001F4A  C0A9  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3218  001F4E  C0AA  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3219  001F52  C0AB  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3220  001F56  C0AF  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3221  001F5A  EC66  F004         	call	_efgtoa	;wreg free
  3222  001F5E  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  3223  001F62  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3224  001F66  0012               	return	
  3225  001F68                     l4559:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3229  001F68  0EAC               	movlw	low vfpfcnvrt@ct
  3230  001F6A  6E01               	movwf	strncmp@_l,c
  3231  001F6C  0E00               	movlw	high vfpfcnvrt@ct
  3232  001F6E  6E02               	movwf	strncmp@_l+1,c
  3233  001F70  0EC7               	movlw	low STR_35
  3234  001F72  6E03               	movwf	strncmp@_r,c
  3235  001F74  0E08               	movlw	high STR_35
  3236  001F76  6E04               	movwf	strncmp@_r+1,c
  3237  001F78  0E00               	movlw	0
  3238  001F7A  6E06               	movwf	strncmp@n+1,c
  3239  001F7C  0E02               	movlw	2
  3240  001F7E  6E05               	movwf	strncmp@n,c
  3241  001F80  EC1D  F01C         	call	_strncmp	;wreg free
  3242  001F84  5001               	movf	?_strncmp,w,c
  3243  001F86  1002               	iorwf	?_strncmp+1,w,c
  3244  001F88  A4D8               	btfss	status,2,c
  3245  001F8A  D056               	goto	l4575
  3246                           
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3248  001F8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3249  001F90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3250  001F94  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3251  001F98  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3252  001F9C  0E01               	movlw	1
  3253  001F9E  2646               	addwf	??_vfpfcnvrt,f,c
  3254  001FA0  0E00               	movlw	0
  3255  001FA2  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3256  001FA4  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3257  001FA8  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3258  001FAC                     	if	0	;tblptru may be non-zero
  3259  001FAC                     	endif
  3260  001FAC                     	if	0	;tblptru may be non-zero
  3261  001FAC                     	endif
  3262  001FAC  0008               	tblrd		*
  3263  001FAE  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3264  001FB2  0EBF               	movlw	191
  3265  001FB4  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3266  001FB6  0EFF               	movlw	255
  3267  001FB8  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3268  001FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3269  001FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3270  001FC2  CFDE FFF6          	movff	postinc2,tblptrl
  3271  001FC6  CFDD FFF7          	movff	postdec2,tblptrh
  3272  001FCA                     	if	0	;tblptru may be non-zero
  3273  001FCA                     	endif
  3274  001FCA                     	if	0	;tblptru may be non-zero
  3275  001FCA                     	endif
  3276  001FCA  0008               	tblrd		*
  3277  001FCC  50F5               	movf	tablat,w,c
  3278  001FCE  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3279  001FD0  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3280  001FD2  5046               	movf	??_vfpfcnvrt,w,c
  3281  001FD4  2648               	addwf	??_vfpfcnvrt+2,f,c
  3282  001FD6  5047               	movf	??_vfpfcnvrt+1,w,c
  3283  001FD8  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3284  001FDA  5049               	movf	??_vfpfcnvrt+3,w,c
  3285  001FDC  E106               	bnz	u5540
  3286  001FDE  0E1A               	movlw	26
  3287  001FE0  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3288  001FE2  B0D8               	btfsc	status,0,c
  3289  001FE4  D002               	goto	u5540
  3290  001FE6  0E01               	movlw	1
  3291  001FE8  D001               	goto	u5550
  3292  001FEA                     u5540:
  3293  001FEA  0E00               	movlw	0
  3294  001FEC                     u5550:
  3295  001FEC  0100               	movlb	0	; () banked
  3296  001FEE  6FA6               	movwf	_vfpfcnvrt$470& (0+255),b
  3297  001FF0  6BA7               	clrf	(_vfpfcnvrt$470+1)& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300  001FF2  51A6               	movf	_vfpfcnvrt$470& (0+255),w,b
  3301  001FF4  11A7               	iorwf	(_vfpfcnvrt$470+1)& (0+255),w,b
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3305                           
  3306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3310  001FF6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3311  001FFA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3312  001FFE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3313  002002  0E04               	movlw	4
  3314  002004  26DE               	addwf	postinc2,f,c
  3315  002006  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3316  00200A  0E00               	movlw	0
  3317  00200C  22DD               	addwfc	postdec2,f,c
  3318  00200E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3319  002012  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3320  002016  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3321  00201A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3322  00201E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3323  002022  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3329  002026  0E02               	movlw	2
  3330  002028  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  00202C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  002030  26DE               	addwf	postinc2,f,c
  3333  002032  0E00               	movlw	0
  3334  002034  22DD               	addwfc	postdec2,f,c
  3335  002036  D783               	goto	l4555
  3336  002038                     l4575:
  3337                           
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3339  002038  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  00203C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  002040  CFDE FFF6          	movff	postinc2,tblptrl
  3342  002044  CFDD FFF7          	movff	postdec2,tblptrh
  3343  002048                     	if	0	;tblptru may be non-zero
  3344  002048                     	endif
  3345  002048                     	if	0	;tblptru may be non-zero
  3346  002048                     	endif
  3347  002048  0008               	tblrd		*
  3348  00204A  50F5               	movf	tablat,w,c
  3349  00204C  0A25               	xorlw	37
  3350  00204E  A4D8               	btfss	status,2,c
  3351  002050  D016               	goto	l4585
  3352                           
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3354  002052  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3355  002056  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3356  00205A  2ADE               	incf	postinc2,f,c
  3357  00205C  0E00               	movlw	0
  3358  00205E  22DD               	addwfc	postdec2,f,c
  3359                           
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3361  002060  0E00               	movlw	0
  3362  002062  6E02               	movwf	fputc@c+1,c
  3363  002064  0E25               	movlw	37
  3364  002066  6E01               	movwf	fputc@c,c
  3365  002068  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3366  00206C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3367  002070  EC6E  F01C         	call	_fputc	;wreg free
  3368  002074                     l4581:
  3369                           
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3371  002074  0E00               	movlw	0
  3372  002076  6E41               	movwf	?_vfpfcnvrt+1,c
  3373  002078  0E01               	movlw	1
  3374  00207A  6E40               	movwf	?_vfpfcnvrt,c
  3375  00207C  0012               	return	
  3376  00207E                     l4585:
  3377                           
  3378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3379  00207E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  002082  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  002086  2ADE               	incf	postinc2,f,c
  3382  002088  0E00               	movlw	0
  3383  00208A  22DD               	addwfc	postdec2,f,c
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3386  00208C  0E00               	movlw	0
  3387  00208E  6E41               	movwf	?_vfpfcnvrt+1,c
  3388  002090  0E00               	movlw	0
  3389  002092  6E40               	movwf	?_vfpfcnvrt,c
  3390  002094  0012               	return	
  3391  002096                     l4591:
  3392                           
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3394  002096  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3395  00209A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3396  00209E  CFDE FFF6          	movff	postinc2,tblptrl
  3397  0020A2  CFDD FFF7          	movff	postdec2,tblptrh
  3398  0020A6                     	if	0	;tblptru may be non-zero
  3399  0020A6                     	endif
  3400  0020A6                     	if	0	;tblptru may be non-zero
  3401  0020A6                     	endif
  3402  0020A6  0008               	tblrd		*
  3403  0020A8  50F5               	movf	tablat,w,c
  3404  0020AA  6E01               	movwf	fputc@c,c
  3405  0020AC  6A02               	clrf	fputc@c+1,c
  3406  0020AE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3407  0020B2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3408  0020B6  EC6E  F01C         	call	_fputc	;wreg free
  3409                           
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3411  0020BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3412  0020BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3413  0020C2  2ADE               	incf	postinc2,f,c
  3414  0020C4  0E00               	movlw	0
  3415  0020C6  22DD               	addwfc	postdec2,f,c
  3416  0020C8  D7D5               	goto	l4581
  3417  0020CA                     __end_of_vfpfcnvrt:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function _strncmp *****************
  3421 ;; Defined at:
  3422 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3425 ;;		 -> vfpfcnvrt@ct(3), 
  3426 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3427 ;;		 -> STR_37(3), 
  3428 ;;  n               2    4[COMRAM] unsigned int 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3431 ;;		 -> STR_37(3), 
  3432 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3433 ;;		 -> vfpfcnvrt@ct(3), 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2    0[COMRAM] int 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3443 ;;      Params:         6       0       0       0       0       0       0       0       0
  3444 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3445 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3446 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:       11 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_vfpfcnvrt
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text4
  3457  00383A                     __ptext4:
  3458                           	opt callstack 0
  3459  00383A                     _strncmp:
  3460                           	opt callstack 27
  3461                           
  3462                           ;incstack = 0
  3463  00383A  C001  F008         	movff	strncmp@_l,strncmp@l
  3464  00383E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3465  003842  C003  F00A         	movff	strncmp@_r,strncmp@r
  3466  003846  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3467  00384A  0605               	decf	strncmp@n,f,c
  3468  00384C  A0D8               	btfss	status,0,c
  3469  00384E  0606               	decf	strncmp@n+1,f,c
  3470  003850  2805               	incf	strncmp@n,w,c
  3471  003852  E10F               	bnz	l4437
  3472  003854  2806               	incf	strncmp@n+1,w,c
  3473  003856  A4D8               	btfss	status,2,c
  3474  003858  D00C               	goto	l4437
  3475  00385A  0E00               	movlw	0
  3476  00385C  6E02               	movwf	?_strncmp+1,c
  3477  00385E  0E00               	movlw	0
  3478  003860  6E01               	movwf	?_strncmp,c
  3479  003862  0012               	return	
  3480  003864                     l4435:
  3481  003864  4A08               	infsnz	strncmp@l,f,c
  3482  003866  2A09               	incf	strncmp@l+1,f,c
  3483  003868  4A0A               	infsnz	strncmp@r,f,c
  3484  00386A  2A0B               	incf	strncmp@r+1,f,c
  3485  00386C  0605               	decf	strncmp@n,f,c
  3486  00386E  A0D8               	btfss	status,0,c
  3487  003870  0606               	decf	strncmp@n+1,f,c
  3488  003872                     l4437:
  3489  003872  C008  FFD9         	movff	strncmp@l,fsr2l
  3490  003876  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3491  00387A  50DF               	movf	indf2,w,c
  3492  00387C  B4D8               	btfsc	status,2,c
  3493  00387E  D01C               	goto	u5340
  3494  003880  C00A  FFF6         	movff	strncmp@r,tblptrl
  3495  003884  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3496  003888                     	if	0	;tblptru may be non-zero
  3497  003888                     	endif
  3498  003888                     	if	0	;tblptru may be non-zero
  3499  003888                     	endif
  3500  003888  0008               	tblrd		*
  3501  00388A  50F5               	movf	tablat,w,c
  3502  00388C  0900               	iorlw	0
  3503  00388E  B4D8               	btfsc	status,2,c
  3504  003890  D013               	goto	u5340
  3505  003892  5005               	movf	strncmp@n,w,c
  3506  003894  1006               	iorwf	strncmp@n+1,w,c
  3507  003896  B4D8               	btfsc	status,2,c
  3508  003898  D00F               	goto	u5340
  3509  00389A  C008  FFD9         	movff	strncmp@l,fsr2l
  3510  00389E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3511  0038A2  50DF               	movf	indf2,w,c
  3512  0038A4  6E07               	movwf	??_strncmp& (0+255),c
  3513  0038A6  C00A  FFF6         	movff	strncmp@r,tblptrl
  3514  0038AA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3515  0038AE                     	if	0	;tblptru may be non-zero
  3516  0038AE                     	endif
  3517  0038AE                     	if	0	;tblptru may be non-zero
  3518  0038AE                     	endif
  3519  0038AE  0008               	tblrd		*
  3520  0038B0  50F5               	movf	tablat,w,c
  3521  0038B2  1807               	xorwf	??_strncmp,w,c
  3522  0038B4  B4D8               	btfsc	status,2,c
  3523  0038B6  D7D6               	goto	l4435
  3524  0038B8                     u5340:
  3525  0038B8  C008  FFD9         	movff	strncmp@l,fsr2l
  3526  0038BC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3527  0038C0  50DF               	movf	indf2,w,c
  3528  0038C2  6E07               	movwf	??_strncmp& (0+255),c
  3529  0038C4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3530  0038C8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3531  0038CC                     	if	0	;tblptru may be non-zero
  3532  0038CC                     	endif
  3533  0038CC                     	if	0	;tblptru may be non-zero
  3534  0038CC                     	endif
  3535  0038CC  0008               	tblrd		*
  3536  0038CE  50F5               	movf	tablat,w,c
  3537  0038D0  5C07               	subwf	??_strncmp,w,c
  3538  0038D2  6E01               	movwf	?_strncmp,c
  3539  0038D4  6A02               	clrf	?_strncmp+1,c
  3540  0038D6  A0D8               	btfss	status,0,c
  3541  0038D8  0602               	decf	?_strncmp+1,f,c
  3542  0038DA  0012               	return		;funcret
  3543  0038DC                     __end_of_strncmp:
  3544                           	opt callstack 0
  3545                           
  3546 ;; *************** function _efgtoa *****************
  3547 ;; Defined at:
  3548 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3551 ;;		 -> sprintf@f(6), 
  3552 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3553 ;;  c               1   51[COMRAM] unsigned char 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  u               4   52[BANK0 ] unsigned char 
  3556 ;;  g               4   44[BANK0 ] unsigned char 
  3557 ;;  l               4   38[BANK0 ] unsigned char 
  3558 ;;  h               4   34[BANK0 ] unsigned char 
  3559 ;;  ou              4    0[BANK0 ] unsigned char 
  3560 ;;  n               2   50[BANK0 ] int 
  3561 ;;  e               2   48[BANK0 ] int 
  3562 ;;  i               2   42[BANK0 ] int 
  3563 ;;  w               2   31[BANK0 ] int 
  3564 ;;  p               2   28[BANK0 ] int 
  3565 ;;  sign            2   26[BANK0 ] int 
  3566 ;;  d               2   24[BANK0 ] int 
  3567 ;;  ne              2   22[BANK0 ] int 
  3568 ;;  m               2   20[BANK0 ] int 
  3569 ;;  pp              2   18[BANK0 ] int 
  3570 ;;  t               2   16[BANK0 ] int 
  3571 ;;  mode            1   33[BANK0 ] unsigned char 
  3572 ;;  nmode           1   30[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2   45[COMRAM] int 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3582 ;;      Params:         7       0       0       0       0       0       0       0       0
  3583 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3584 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3585 ;;      Totals:        12      56       0       0       0       0       0       0       0
  3586 ;;Total ram usage:       68 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    4
  3589 ;; This function calls:
  3590 ;;		___awdiv
  3591 ;;		___awmod
  3592 ;;		___fladd
  3593 ;;		___fldiv
  3594 ;;		___fleq
  3595 ;;		___flge
  3596 ;;		___flmul
  3597 ;;		___flneg
  3598 ;;		___flsub
  3599 ;;		___fltol
  3600 ;;		___fpclassifyf
  3601 ;;		_floorf
  3602 ;;		_isupper
  3603 ;;		_pad
  3604 ;;		_strcpy
  3605 ;;		_tolower
  3606 ;; This function is called by:
  3607 ;;		_vfpfcnvrt
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text5
  3612  0008CC                     __ptext5:
  3613                           	opt callstack 0
  3614  0008CC                     _efgtoa:
  3615                           	opt callstack 23
  3616                           
  3617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3618                           
  3619                           ;incstack = 0
  3620  0008CC  0E00               	movlw	0
  3621  0008CE  0100               	movlb	0	; () banked
  3622  0008D0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3623  0008D2  0E00               	movlw	0
  3624  0008D4  6F7A               	movwf	efgtoa@sign& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3628  0008D6  C030  F08C         	movff	efgtoa@f,efgtoa@g
  3629  0008DA  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3630  0008DE  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3631  0008E2  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3635  0008E6  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  3636  0008E8  D016               	goto	l4099
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3640  0008EA  0E00               	movlw	0
  3641  0008EC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3642  0008EE  0E01               	movlw	1
  3643  0008F0  6F7A               	movwf	efgtoa@sign& (0+255),b
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3647  0008F2  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3648  0008F6  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3649  0008FA  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3650  0008FE  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3651  000902  EC84  F01F         	call	___flneg	;wreg free
  3652  000906  C001  F08C         	movff	?___flneg,efgtoa@g
  3653  00090A  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3654  00090E  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3655  000912  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3656  000916                     l4099:
  3657                           
  3658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3659  000916  0E00               	movlw	0
  3660  000918  0100               	movlb	0	; () banked
  3661  00091A  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3662  00091C  0E00               	movlw	0
  3663  00091E  6F92               	movwf	efgtoa@n& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3667  000920  C0CA  F07F         	movff	_width,efgtoa@w
  3668  000924  C0CB  F080         	movff	_width+1,efgtoa@w+1
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3672  000928  517A               	movf	efgtoa@sign& (0+255),w,b
  3673  00092A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3674  00092C  A4D8               	btfss	status,2,c
  3675  00092E  D002               	goto	u4730
  3676                           
  3677                           ; BSR set to: 0
  3678  000930  A45E               	btfss	_flags,2,c
  3679  000932  D013               	goto	l4119
  3680  000934                     u4730:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3684  000934  517A               	movf	efgtoa@sign& (0+255),w,b
  3685  000936  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3686  000938  A4D8               	btfss	status,2,c
  3687  00093A  D004               	goto	l4111
  3688                           
  3689                           ; BSR set to: 0
  3690  00093C  0E00               	movlw	0
  3691  00093E  6F65               	movwf	(_efgtoa$439+1)& (0+255),b
  3692  000940  0E2B               	movlw	43
  3693  000942  D003               	goto	L2
  3694  000944                     l4111:
  3695                           
  3696                           ; BSR set to: 0
  3697  000944  0E00               	movlw	0
  3698  000946  6F65               	movwf	(_efgtoa$439+1)& (0+255),b
  3699  000948  0E2D               	movlw	45
  3700  00094A                     L2:
  3701  00094A  6F64               	movwf	_efgtoa$439& (0+255),b
  3702                           
  3703                           ; BSR set to: 0
  3704  00094C  C064  F100         	movff	_efgtoa$439,_dbuf
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3708  000950  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3709  000952  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3713  000954  077F               	decf	efgtoa@w& (0+255),f,b
  3714  000956  A0D8               	btfss	status,0,c
  3715  000958  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3716  00095A                     l4119:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3720  00095A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3721  00095E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3722  000962  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3723  000966  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3724  00096A  EC5A  F01B         	call	___fpclassifyf	;wreg free
  3725  00096E  0401               	decf	?___fpclassifyf,w,c
  3726  000970  1002               	iorwf	?___fpclassifyf+1,w,c
  3727  000972  A4D8               	btfss	status,2,c
  3728  000974  D04C               	goto	l4137
  3729  000976  0EBF               	movlw	191
  3730  000978  6E35               	movwf	??_efgtoa& (0+255),c
  3731  00097A  0EFF               	movlw	255
  3732  00097C  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  3733  00097E  5034               	movf	efgtoa@c,w,c
  3734  000980  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  3735  000982  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  3736  000984  5035               	movf	??_efgtoa,w,c
  3737  000986  2637               	addwf	??_efgtoa+2,f,c
  3738  000988  5036               	movf	??_efgtoa+1,w,c
  3739  00098A  2238               	addwfc	??_efgtoa+3,f,c
  3740  00098C  5038               	movf	??_efgtoa+3,w,c
  3741  00098E  E106               	bnz	u4760
  3742  000990  0E1A               	movlw	26
  3743  000992  5C37               	subwf	??_efgtoa+2,w,c
  3744  000994  B0D8               	btfsc	status,0,c
  3745  000996  D002               	goto	u4760
  3746  000998  0E01               	movlw	1
  3747  00099A  D001               	goto	u4770
  3748  00099C                     u4760:
  3749  00099C  0E00               	movlw	0
  3750  00099E                     u4770:
  3751  00099E  0100               	movlb	0	; () banked
  3752  0009A0  6F66               	movwf	_efgtoa$440& (0+255),b
  3753  0009A2  6B67               	clrf	(_efgtoa$440+1)& (0+255),b
  3754                           
  3755                           ; BSR set to: 0
  3756  0009A4  5166               	movf	_efgtoa$440& (0+255),w,b
  3757  0009A6  1167               	iorwf	(_efgtoa$440+1)& (0+255),w,b
  3758  0009A8  B4D8               	btfsc	status,2,c
  3759  0009AA  D00D               	goto	l4129
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3763  0009AC  0E00               	movlw	low _dbuf
  3764  0009AE  2592               	addwf	efgtoa@n& (0+255),w,b
  3765  0009B0  6E01               	movwf	strcpy@dest,c
  3766  0009B2  0E01               	movlw	high _dbuf
  3767  0009B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3768  0009B6  6E02               	movwf	strcpy@dest+1,c
  3769  0009B8  0EB7               	movlw	low STR_27
  3770  0009BA  6E03               	movwf	strcpy@src,c
  3771  0009BC  0E08               	movlw	high STR_27
  3772  0009BE  6E04               	movwf	strcpy@src+1,c
  3773  0009C0  EC66  F01E         	call	_strcpy	;wreg free
  3774                           
  3775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3776  0009C4  D00C               	goto	l4131
  3777  0009C6                     l4129:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3781  0009C6  0E00               	movlw	low _dbuf
  3782  0009C8  2592               	addwf	efgtoa@n& (0+255),w,b
  3783  0009CA  6E01               	movwf	strcpy@dest,c
  3784  0009CC  0E01               	movlw	high _dbuf
  3785  0009CE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3786  0009D0  6E02               	movwf	strcpy@dest+1,c
  3787  0009D2  0EBF               	movlw	low STR_28
  3788  0009D4  6E03               	movwf	strcpy@src,c
  3789  0009D6  0E08               	movlw	high STR_28
  3790  0009D8  6E04               	movwf	strcpy@src+1,c
  3791  0009DA  EC66  F01E         	call	_strcpy	;wreg free
  3792  0009DE                     l4131:
  3793                           
  3794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3795  0009DE  0100               	movlb	0	; () banked
  3796  0009E0  0EFD               	movlw	253
  3797  0009E2  277F               	addwf	efgtoa@w& (0+255),f,b
  3798  0009E4  0EFF               	movlw	255
  3799  0009E6  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3800  0009E8                     l4133:
  3801                           
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3803  0009E8  C02E  F011         	movff	efgtoa@fp,pad@fp
  3804  0009EC  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3805  0009F0  0E00               	movlw	low _dbuf
  3806  0009F2  6E13               	movwf	pad@buf,c
  3807  0009F4  0E01               	movlw	high _dbuf
  3808  0009F6  6E14               	movwf	pad@buf+1,c
  3809  0009F8  C07F  F015         	movff	efgtoa@w,pad@p
  3810  0009FC  C080  F016         	movff	efgtoa@w+1,pad@p+1
  3811  000A00  ECBE  F01C         	call	_pad	;wreg free
  3812  000A04  C011  F02E         	movff	?_pad,?_efgtoa
  3813  000A08  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3814  000A0C  0012               	return	
  3815  000A0E                     l4137:
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3818  000A0E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3819  000A12  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3820  000A16  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3821  000A1A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3822  000A1E  EC5A  F01B         	call	___fpclassifyf	;wreg free
  3823  000A22  5001               	movf	?___fpclassifyf,w,c
  3824  000A24  1002               	iorwf	?___fpclassifyf+1,w,c
  3825  000A26  A4D8               	btfss	status,2,c
  3826  000A28  D035               	goto	l4155
  3827  000A2A  0EBF               	movlw	191
  3828  000A2C  6E35               	movwf	??_efgtoa& (0+255),c
  3829  000A2E  0EFF               	movlw	255
  3830  000A30  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  3831  000A32  5034               	movf	efgtoa@c,w,c
  3832  000A34  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  3833  000A36  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  3834  000A38  5035               	movf	??_efgtoa,w,c
  3835  000A3A  2637               	addwf	??_efgtoa+2,f,c
  3836  000A3C  5036               	movf	??_efgtoa+1,w,c
  3837  000A3E  2238               	addwfc	??_efgtoa+3,f,c
  3838  000A40  5038               	movf	??_efgtoa+3,w,c
  3839  000A42  E106               	bnz	u4800
  3840  000A44  0E1A               	movlw	26
  3841  000A46  5C37               	subwf	??_efgtoa+2,w,c
  3842  000A48  B0D8               	btfsc	status,0,c
  3843  000A4A  D002               	goto	u4800
  3844  000A4C  0E01               	movlw	1
  3845  000A4E  D001               	goto	u4810
  3846  000A50                     u4800:
  3847  000A50  0E00               	movlw	0
  3848  000A52                     u4810:
  3849  000A52  0100               	movlb	0	; () banked
  3850  000A54  6F68               	movwf	_efgtoa$444& (0+255),b
  3851  000A56  6B69               	clrf	(_efgtoa$444+1)& (0+255),b
  3852                           
  3853                           ; BSR set to: 0
  3854  000A58  5168               	movf	_efgtoa$444& (0+255),w,b
  3855  000A5A  1169               	iorwf	(_efgtoa$444+1)& (0+255),w,b
  3856  000A5C  B4D8               	btfsc	status,2,c
  3857  000A5E  D00D               	goto	l4147
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3861  000A60  0E00               	movlw	low _dbuf
  3862  000A62  2592               	addwf	efgtoa@n& (0+255),w,b
  3863  000A64  6E01               	movwf	strcpy@dest,c
  3864  000A66  0E01               	movlw	high _dbuf
  3865  000A68  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3866  000A6A  6E02               	movwf	strcpy@dest+1,c
  3867  000A6C  0EBB               	movlw	low STR_31
  3868  000A6E  6E03               	movwf	strcpy@src,c
  3869  000A70  0E08               	movlw	high STR_31
  3870  000A72  6E04               	movwf	strcpy@src+1,c
  3871  000A74  EC66  F01E         	call	_strcpy	;wreg free
  3872                           
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3874  000A78  D7B2               	goto	l4131
  3875  000A7A                     l4147:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3879  000A7A  0E00               	movlw	low _dbuf
  3880  000A7C  2592               	addwf	efgtoa@n& (0+255),w,b
  3881  000A7E  6E01               	movwf	strcpy@dest,c
  3882  000A80  0E01               	movlw	high _dbuf
  3883  000A82  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3884  000A84  6E02               	movwf	strcpy@dest+1,c
  3885  000A86  0EC3               	movlw	low STR_32
  3886  000A88  6E03               	movwf	strcpy@src,c
  3887  000A8A  0E08               	movlw	high STR_32
  3888  000A8C  6E04               	movwf	strcpy@src+1,c
  3889  000A8E  EC66  F01E         	call	_strcpy	;wreg free
  3890  000A92  D7A5               	goto	l4131
  3891  000A94                     l4155:
  3892                           
  3893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3894  000A94  0E00               	movlw	0
  3895  000A96  0100               	movlb	0	; () banked
  3896  000A98  6F94               	movwf	efgtoa@u& (0+255),b
  3897  000A9A  0E00               	movlw	0
  3898  000A9C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3899  000A9E  0E80               	movlw	128
  3900  000AA0  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3901  000AA2  0E3F               	movlw	63
  3902  000AA4  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3903                           
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3905  000AA6  0E00               	movlw	0
  3906  000AA8  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3907  000AAA  0E00               	movlw	0
  3908  000AAC  6F90               	movwf	efgtoa@e& (0+255),b
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3912  000AAE  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3913  000AB2  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3914  000AB6  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3915  000ABA  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3916  000ABE  0E00               	movlw	0
  3917  000AC0  6E05               	movwf	___fleq@ff2,c
  3918  000AC2  0E00               	movlw	0
  3919  000AC4  6E06               	movwf	___fleq@ff2+1,c
  3920  000AC6  0E00               	movlw	0
  3921  000AC8  6E07               	movwf	___fleq@ff2+2,c
  3922  000ACA  0E00               	movlw	0
  3923  000ACC  6E08               	movwf	___fleq@ff2+3,c
  3924  000ACE  EC09  F01D         	call	___fleq	;wreg free
  3925  000AD2  A0D8               	btfss	status,0,c
  3926  000AD4  D01E               	goto	l4165
  3927  000AD6  D076               	goto	u4850
  3928  000AD8                     l4161:
  3929                           
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3931  000AD8  C094  F001         	movff	efgtoa@u,___flmul@b
  3932  000ADC  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3933  000AE0  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3934  000AE4  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3935  000AE8  0E00               	movlw	0
  3936  000AEA  6E05               	movwf	___flmul@a,c
  3937  000AEC  0E00               	movlw	0
  3938  000AEE  6E06               	movwf	___flmul@a+1,c
  3939  000AF0  0E20               	movlw	32
  3940  000AF2  6E07               	movwf	___flmul@a+2,c
  3941  000AF4  0E41               	movlw	65
  3942  000AF6  6E08               	movwf	___flmul@a+3,c
  3943  000AF8  EC65  F010         	call	___flmul	;wreg free
  3944  000AFC  C001  F094         	movff	?___flmul,efgtoa@u
  3945  000B00  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3946  000B04  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3947  000B08  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3948                           
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3950  000B0C  0100               	movlb	0	; () banked
  3951  000B0E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3952  000B10  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3953  000B12                     l4165:
  3954                           
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3956  000B12  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3957  000B16  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3958  000B1A  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3959  000B1E  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3960  000B22  0E00               	movlw	0
  3961  000B24  6E05               	movwf	___flmul@a,c
  3962  000B26  0E00               	movlw	0
  3963  000B28  6E06               	movwf	___flmul@a+1,c
  3964  000B2A  0E20               	movlw	32
  3965  000B2C  6E07               	movwf	___flmul@a+2,c
  3966  000B2E  0E41               	movlw	65
  3967  000B30  6E08               	movwf	___flmul@a+3,c
  3968  000B32  C094  F001         	movff	efgtoa@u,___flmul@b
  3969  000B36  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3970  000B3A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3971  000B3E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3972  000B42  EC65  F010         	call	___flmul	;wreg free
  3973  000B46  C001  F01E         	movff	?___flmul,___flge@ff2
  3974  000B4A  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3975  000B4E  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3976  000B52  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3977  000B56  ECF2  F01A         	call	___flge	;wreg free
  3978  000B5A  A0D8               	btfss	status,0,c
  3979  000B5C  D01F               	goto	l4171
  3980  000B5E  D7BC               	goto	l4161
  3981  000B60                     l4167:
  3982                           
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3984  000B60  C094  F001         	movff	efgtoa@u,___fldiv@b
  3985  000B64  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3986  000B68  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3987  000B6C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3988  000B70  0E00               	movlw	0
  3989  000B72  6E05               	movwf	___fldiv@a,c
  3990  000B74  0E00               	movlw	0
  3991  000B76  6E06               	movwf	___fldiv@a+1,c
  3992  000B78  0E20               	movlw	32
  3993  000B7A  6E07               	movwf	___fldiv@a+2,c
  3994  000B7C  0E41               	movlw	65
  3995  000B7E  6E08               	movwf	___fldiv@a+3,c
  3996  000B80  EC94  F013         	call	___fldiv	;wreg free
  3997  000B84  C001  F094         	movff	?___fldiv,efgtoa@u
  3998  000B88  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3999  000B8C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4000  000B90  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4001                           
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4003  000B94  0100               	movlb	0	; () banked
  4004  000B96  0790               	decf	efgtoa@e& (0+255),f,b
  4005  000B98  A0D8               	btfss	status,0,c
  4006  000B9A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4007  000B9C                     l4171:
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4010  000B9C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4011  000BA0  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4012  000BA4  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4013  000BA8  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4014  000BAC  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4015  000BB0  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4016  000BB4  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4017  000BB8  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4018  000BBC  ECF2  F01A         	call	___flge	;wreg free
  4019  000BC0  A0D8               	btfss	status,0,c
  4020  000BC2  D7CE               	goto	l4167
  4021  000BC4                     u4850:
  4022                           
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4024  000BC4  C034  F007         	movff	efgtoa@c,tolower@c
  4025  000BC8  6A08               	clrf	tolower@c+1,c
  4026  000BCA  ECB7  F01E         	call	_tolower	;wreg free
  4027  000BCE  5007               	movf	?_tolower,w,c
  4028  000BD0  0100               	movlb	0	; () banked
  4029  000BD2  6F81               	movwf	efgtoa@mode& (0+255),b
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4033  000BD4  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4037  000BD8  0E67               	movlw	103
  4038  000BDA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4039  000BDC  A4D8               	btfss	status,2,c
  4040  000BDE  D019               	goto	l4187
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4044  000BE0  51CC               	movf	_prec& (0+255),w,b
  4045  000BE2  11CD               	iorwf	(_prec+1)& (0+255),w,b
  4046  000BE4  A4D8               	btfss	status,2,c
  4047  000BE6  D004               	goto	l4183
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4051  000BE8  0E00               	movlw	0
  4052  000BEA  6FCD               	movwf	(_prec+1)& (0+255),b
  4053  000BEC  0E01               	movlw	1
  4054  000BEE  6FCC               	movwf	_prec& (0+255),b
  4055  000BF0                     l4183:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4059  000BF0  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  4060  000BF2  D005               	goto	u4880
  4061  000BF4  51CD               	movf	(_prec+1)& (0+255),w,b
  4062  000BF6  E108               	bnz	l236
  4063  000BF8  05CC               	decf	_prec& (0+255),w,b
  4064  000BFA  B0D8               	btfsc	status,0,c
  4065  000BFC  D005               	goto	l236
  4066  000BFE                     u4880:
  4067                           
  4068                           ; BSR set to: 0
  4069  000BFE  0E00               	movlw	0
  4070  000C00  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4071  000C02  0E06               	movlw	6
  4072  000C04  6F7C               	movwf	efgtoa@p& (0+255),b
  4073  000C06  D008               	goto	l4193
  4074  000C08                     l236:
  4075                           
  4076                           ; BSR set to: 0
  4077  000C08  C0CC  F07C         	movff	_prec,efgtoa@p
  4078  000C0C  C0CD  F07D         	movff	_prec+1,efgtoa@p+1
  4079  000C10  D003               	goto	l4193
  4080  000C12                     l4187:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4084  000C12  AFCD               	btfss	(_prec+1)& (0+255),7,b
  4085  000C14  D7F9               	goto	l236
  4086  000C16  D7F3               	goto	u4880
  4087  000C18                     l4193:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4091  000C18  0E67               	movlw	103
  4092  000C1A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4093  000C1C  A4D8               	btfss	status,2,c
  4094  000C1E  D022               	goto	l4203
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4098  000C20  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4099  000C22  D006               	goto	u4910
  4100  000C24  0EFC               	movlw	252
  4101  000C26  5D90               	subwf	efgtoa@e& (0+255),w,b
  4102  000C28  0EFF               	movlw	255
  4103  000C2A  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4104  000C2C  A0D8               	btfss	status,0,c
  4105  000C2E  D018               	goto	l4201
  4106  000C30                     u4910:
  4107                           
  4108                           ; BSR set to: 0
  4109  000C30  0EFF               	movlw	255
  4110  000C32  6E35               	movwf	??_efgtoa& (0+255),c
  4111  000C34  0EFF               	movlw	255
  4112  000C36  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4113  000C38  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  4114  000C3C  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4115  000C40  5035               	movf	??_efgtoa,w,c
  4116  000C42  2637               	addwf	??_efgtoa+2,f,c
  4117  000C44  5036               	movf	??_efgtoa+1,w,c
  4118  000C46  2238               	addwfc	??_efgtoa+3,f,c
  4119  000C48  5190               	movf	efgtoa@e& (0+255),w,b
  4120  000C4A  5C37               	subwf	??_efgtoa+2,w,c
  4121  000C4C  5038               	movf	??_efgtoa+3,w,c
  4122  000C4E  0A80               	xorlw	128
  4123  000C50  6E39               	movwf	(??_efgtoa+4)& (0+255),c
  4124  000C52  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4125  000C54  0A80               	xorlw	128
  4126  000C56  5839               	subwfb	(??_efgtoa+4)& (0+255),w,c
  4127  000C58  A0D8               	btfss	status,0,c
  4128  000C5A  D002               	goto	l4201
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4132  000C5C  0E66               	movlw	102
  4133  000C5E  D001               	goto	L3
  4134  000C60                     l4201:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4138  000C60  0E65               	movlw	101
  4139  000C62                     L3:
  4140  000C62  6F7E               	movwf	efgtoa@nmode& (0+255),b
  4141  000C64                     l4203:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4145  000C64  C07C  F074         	movff	efgtoa@p,efgtoa@m
  4146  000C68  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4150  000C6C  0E67               	movlw	103
  4151  000C6E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4152  000C70  A4D8               	btfss	status,2,c
  4153  000C72  D005               	goto	u4950
  4154                           
  4155                           ; BSR set to: 0
  4156  000C74  0E66               	movlw	102
  4157  000C76  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4158  000C78  B4D8               	btfsc	status,2,c
  4159                           
  4160                           ; BSR set to: 0
  4161  000C7A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4162  000C7C  D002               	goto	l4213
  4163  000C7E                     u4950:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4167  000C7E  4B74               	infsnz	efgtoa@m& (0+255),f,b
  4168  000C80  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  4169  000C82                     l4213:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4173  000C82  0E66               	movlw	102
  4174  000C84  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4175  000C86  A4D8               	btfss	status,2,c
  4176  000C88  D016               	goto	l4223
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4180  000C8A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4181  000C8C  D00C               	goto	l4219
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4185  000C8E  0E00               	movlw	0
  4186  000C90  6F94               	movwf	efgtoa@u& (0+255),b
  4187  000C92  0E00               	movlw	0
  4188  000C94  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4189  000C96  0E80               	movlw	128
  4190  000C98  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4191  000C9A  0E3F               	movlw	63
  4192  000C9C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4193                           
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4195  000C9E  0E00               	movlw	0
  4196  000CA0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4197  000CA2  0E00               	movlw	0
  4198  000CA4  6F90               	movwf	efgtoa@e& (0+255),b
  4199  000CA6                     l4219:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4203  000CA6  0E67               	movlw	103
  4204  000CA8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4205  000CAA  B4D8               	btfsc	status,2,c
  4206  000CAC  D004               	goto	l4223
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4210  000CAE  5190               	movf	efgtoa@e& (0+255),w,b
  4211  000CB0  2774               	addwf	efgtoa@m& (0+255),f,b
  4212  000CB2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4213  000CB4  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4214  000CB6                     l4223:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4218  000CB6  0E00               	movlw	0
  4219  000CB8  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4220  000CBA  0E00               	movlw	0
  4221  000CBC  6F8A               	movwf	efgtoa@i& (0+255),b
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4225  000CBE  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4226  000CC2  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4227  000CC6  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4228  000CCA  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4232  000CCE  C094  F060         	movff	efgtoa@u,efgtoa@ou
  4233  000CD2  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  4234  000CD6  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  4235  000CDA  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  4236                           
  4237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4238  000CDE  D07B               	goto	l4237
  4239  000CE0                     l4229:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4243  000CE0  C082  F001         	movff	efgtoa@h,___fldiv@b
  4244  000CE4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4245  000CE8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4246  000CEC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4247  000CF0  C094  F005         	movff	efgtoa@u,___fldiv@a
  4248  000CF4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4249  000CF8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4250  000CFC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4251  000D00  EC94  F013         	call	___fldiv	;wreg free
  4252  000D04  C001  F01A         	movff	?___fldiv,floorf@x
  4253  000D08  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4254  000D0C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4255  000D10  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4256  000D14  ECFA  F015         	call	_floorf	;wreg free
  4257  000D18  C01A  F086         	movff	?_floorf,efgtoa@l
  4258  000D1C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4259  000D20  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4260  000D24  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4261                           
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4263  000D28  C086  F001         	movff	efgtoa@l,___fltol@f1
  4264  000D2C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4265  000D30  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4266  000D34  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4267  000D38  ECC0  F01B         	call	___fltol	;wreg free
  4268  000D3C  C001  F078         	movff	?___fltol,efgtoa@d
  4269  000D40  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4270                           
  4271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4272  000D44  C082  F01A         	movff	efgtoa@h,___flsub@b
  4273  000D48  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4274  000D4C  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4275  000D50  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4276  000D54  C094  F005         	movff	efgtoa@u,___flmul@a
  4277  000D58  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4278  000D5C  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4279  000D60  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4280  000D64  C086  F001         	movff	efgtoa@l,___flmul@b
  4281  000D68  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4282  000D6C  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4283  000D70  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4284  000D74  EC65  F010         	call	___flmul	;wreg free
  4285  000D78  C001  F01E         	movff	?___flmul,___flsub@a
  4286  000D7C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4287  000D80  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4288  000D84  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4289  000D88  ECDD  F01E         	call	___flsub	;wreg free
  4290  000D8C  C01A  F082         	movff	?___flsub,efgtoa@h
  4291  000D90  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4292  000D94  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4293  000D98  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4296  000D9C  C094  F001         	movff	efgtoa@u,___fldiv@b
  4297  000DA0  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4298  000DA4  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4299  000DA8  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4300  000DAC  0E00               	movlw	0
  4301  000DAE  6E05               	movwf	___fldiv@a,c
  4302  000DB0  0E00               	movlw	0
  4303  000DB2  6E06               	movwf	___fldiv@a+1,c
  4304  000DB4  0E20               	movlw	32
  4305  000DB6  6E07               	movwf	___fldiv@a+2,c
  4306  000DB8  0E41               	movlw	65
  4307  000DBA  6E08               	movwf	___fldiv@a+3,c
  4308  000DBC  EC94  F013         	call	___fldiv	;wreg free
  4309  000DC0  C001  F094         	movff	?___fldiv,efgtoa@u
  4310  000DC4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4311  000DC8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4312  000DCC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4313                           
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4315  000DD0  0100               	movlb	0	; () banked
  4316  000DD2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4317  000DD4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4318  000DD6                     l4237:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4322  000DD6  5174               	movf	efgtoa@m& (0+255),w,b
  4323  000DD8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4324  000DDA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4325  000DDC  0A80               	xorlw	128
  4326  000DDE  6E35               	movwf	??_efgtoa& (0+255),c
  4327  000DE0  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4328  000DE2  0A80               	xorlw	128
  4329  000DE4  5835               	subwfb	??_efgtoa& (0+255),w,c
  4330  000DE6  A0D8               	btfss	status,0,c
  4331  000DE8  D77B               	goto	l4229
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4335  000DEA  C094  F001         	movff	efgtoa@u,___flmul@b
  4336  000DEE  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4337  000DF2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4338  000DF6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4339  000DFA  0E00               	movlw	0
  4340  000DFC  6E05               	movwf	___flmul@a,c
  4341  000DFE  0E00               	movlw	0
  4342  000E00  6E06               	movwf	___flmul@a+1,c
  4343  000E02  0EA0               	movlw	160
  4344  000E04  6E07               	movwf	___flmul@a+2,c
  4345  000E06  0E40               	movlw	64
  4346  000E08  6E08               	movwf	___flmul@a+3,c
  4347  000E0A  EC65  F010         	call	___flmul	;wreg free
  4348  000E0E  C001  F086         	movff	?___flmul,efgtoa@l
  4349  000E12  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4350  000E16  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4351  000E1A  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4352                           
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4354  000E1E  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4355  000E22  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4356  000E26  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4357  000E2A  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4358  000E2E  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4359  000E32  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4360  000E36  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4361  000E3A  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4362  000E3E  ECF2  F01A         	call	___flge	;wreg free
  4363  000E42  B0D8               	btfsc	status,0,c
  4364  000E44  D003               	goto	l4245
  4365                           
  4366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4367  000E46  0E00               	movlw	0
  4368  000E48  0100               	movlb	0	; () banked
  4369  000E4A  D018               	goto	L4
  4370  000E4C                     l4245:
  4371                           
  4372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4373  000E4C  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4374  000E50  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4375  000E54  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4376  000E58  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4377  000E5C  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4378  000E60  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4379  000E64  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4380  000E68  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4381  000E6C  EC09  F01D         	call	___fleq	;wreg free
  4382  000E70  A0D8               	btfss	status,0,c
  4383  000E72  D00B               	goto	l4251
  4384  000E74  0100               	movlb	0	; () banked
  4385  000E76  B178               	btfsc	efgtoa@d& (0+255),0,b
  4386  000E78  D008               	goto	l4251
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4390  000E7A  0E00               	movlw	0
  4391  000E7C                     L4:
  4392  000E7C  6F86               	movwf	efgtoa@l& (0+255),b
  4393  000E7E  0E00               	movlw	0
  4394  000E80  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4395  000E82  0E00               	movlw	0
  4396  000E84  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4397  000E86  0E00               	movlw	0
  4398  000E88  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4399  000E8A                     l4251:
  4400                           
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4402  000E8A  C08C  F001         	movff	efgtoa@g,___fladd@b
  4403  000E8E  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4404  000E92  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4405  000E96  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4406  000E9A  C086  F005         	movff	efgtoa@l,___fladd@a
  4407  000E9E  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4408  000EA2  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4409  000EA6  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4410  000EAA  EC0E  F012         	call	___fladd	;wreg free
  4411  000EAE  C001  F082         	movff	?___fladd,efgtoa@h
  4412  000EB2  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4413  000EB6  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4414  000EBA  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4415                           
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4417  000EBE  C060  F094         	movff	efgtoa@ou,efgtoa@u
  4418  000EC2  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4419  000EC6  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4420  000ECA  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4421                           
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4423  000ECE  0E65               	movlw	101
  4424  000ED0  0100               	movlb	0	; () banked
  4425  000ED2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4426  000ED4  B4D8               	btfsc	status,2,c
  4427  000ED6  D005               	goto	l4259
  4428                           
  4429                           ; BSR set to: 0
  4430  000ED8  C090  F076         	movff	efgtoa@e,efgtoa@ne
  4431  000EDC  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  4432  000EE0  D004               	goto	l262
  4433  000EE2                     l4259:
  4434                           
  4435                           ; BSR set to: 0
  4436  000EE2  0E00               	movlw	0
  4437  000EE4  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4438  000EE6  0E00               	movlw	0
  4439  000EE8  6F76               	movwf	efgtoa@ne& (0+255),b
  4440  000EEA                     l262:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4444  000EEA  0E00               	movlw	0
  4445  000EEC  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4446  000EEE  0E00               	movlw	0
  4447  000EF0  6F72               	movwf	efgtoa@pp& (0+255),b
  4448                           
  4449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4450  000EF2  0E00               	movlw	0
  4451  000EF4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4452  000EF6  0E00               	movlw	0
  4453  000EF8  6F70               	movwf	efgtoa@t& (0+255),b
  4454                           
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4456  000EFA  0E00               	movlw	0
  4457  000EFC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4458  000EFE  0E00               	movlw	0
  4459  000F00  6F8A               	movwf	efgtoa@i& (0+255),b
  4460                           
  4461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4462  000F02  D0C7               	goto	l4309
  4463  000F04                     l4261:
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4467  000F04  C082  F001         	movff	efgtoa@h,___fldiv@b
  4468  000F08  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4469  000F0C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4470  000F10  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4471  000F14  C094  F005         	movff	efgtoa@u,___fldiv@a
  4472  000F18  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4473  000F1C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4474  000F20  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4475  000F24  EC94  F013         	call	___fldiv	;wreg free
  4476  000F28  C001  F01A         	movff	?___fldiv,floorf@x
  4477  000F2C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4478  000F30  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4479  000F34  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4480  000F38  ECFA  F015         	call	_floorf	;wreg free
  4481  000F3C  C01A  F086         	movff	?_floorf,efgtoa@l
  4482  000F40  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4483  000F44  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4484  000F48  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4487  000F4C  C086  F001         	movff	efgtoa@l,___fltol@f1
  4488  000F50  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4489  000F54  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4490  000F58  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4491  000F5C  ECC0  F01B         	call	___fltol	;wreg free
  4492  000F60  C001  F078         	movff	?___fltol,efgtoa@d
  4493  000F64  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4494                           
  4495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4496  000F68  B85E               	btfsc	_flags,4,c
  4497  000F6A  D00D               	goto	l4273
  4498  000F6C  0100               	movlb	0	; () banked
  4499  000F6E  5178               	movf	efgtoa@d& (0+255),w,b
  4500  000F70  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4501  000F72  A4D8               	btfss	status,2,c
  4502  000F74  D008               	goto	l4273
  4503                           
  4504                           ; BSR set to: 0
  4505  000F76  0E67               	movlw	103
  4506  000F78  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4507  000F7A  B4D8               	btfsc	status,2,c
  4508                           
  4509                           ; BSR set to: 0
  4510  000F7C  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4511  000F7E  D003               	goto	l4273
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4515  000F80  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4516  000F82  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4517                           
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4519  000F84  D03A               	goto	l4301
  4520  000F86                     l4273:
  4521                           
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4523  000F86  0100               	movlb	0	; () banked
  4524  000F88  5172               	movf	efgtoa@pp& (0+255),w,b
  4525  000F8A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4526  000F8C  B4D8               	btfsc	status,2,c
  4527                           
  4528                           ; BSR set to: 0
  4529  000F8E  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4530  000F90  D022               	goto	l4293
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4534  000F92  0E00               	movlw	low _dbuf
  4535  000F94  2592               	addwf	efgtoa@n& (0+255),w,b
  4536  000F96  6ED9               	movwf	fsr2l,c
  4537  000F98  0E01               	movlw	high _dbuf
  4538  000F9A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4539  000F9C  6EDA               	movwf	fsr2h,c
  4540  000F9E  0E2E               	movlw	46
  4541  000FA0  6EDF               	movwf	indf2,c
  4542                           
  4543                           ; BSR set to: 0
  4544  000FA2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4545  000FA4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4549  000FA6  077F               	decf	efgtoa@w& (0+255),f,b
  4550  000FA8  A0D8               	btfss	status,0,c
  4551  000FAA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4555  000FAC  0E00               	movlw	0
  4556  000FAE  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4557  000FB0  0E01               	movlw	1
  4558  000FB2  6F72               	movwf	efgtoa@pp& (0+255),b
  4559  000FB4  D010               	goto	l4293
  4560  000FB6                     l4285:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4564  000FB6  0E00               	movlw	low _dbuf
  4565  000FB8  2592               	addwf	efgtoa@n& (0+255),w,b
  4566  000FBA  6ED9               	movwf	fsr2l,c
  4567  000FBC  0E01               	movlw	high _dbuf
  4568  000FBE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4569  000FC0  6EDA               	movwf	fsr2h,c
  4570  000FC2  0E30               	movlw	48
  4571  000FC4  6EDF               	movwf	indf2,c
  4572                           
  4573                           ; BSR set to: 0
  4574  000FC6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4575  000FC8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4579  000FCA  077F               	decf	efgtoa@w& (0+255),f,b
  4580  000FCC  A0D8               	btfss	status,0,c
  4581  000FCE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4585  000FD0  0770               	decf	efgtoa@t& (0+255),f,b
  4586  000FD2  A0D8               	btfss	status,0,c
  4587  000FD4  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4588  000FD6                     l4293:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4592  000FD6  5170               	movf	efgtoa@t& (0+255),w,b
  4593  000FD8  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4594  000FDA  A4D8               	btfss	status,2,c
  4595  000FDC  D7EC               	goto	l4285
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4599  000FDE  0E00               	movlw	low _dbuf
  4600  000FE0  2592               	addwf	efgtoa@n& (0+255),w,b
  4601  000FE2  6ED9               	movwf	fsr2l,c
  4602  000FE4  0E01               	movlw	high _dbuf
  4603  000FE6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4604  000FE8  6EDA               	movwf	fsr2h,c
  4605  000FEA  5178               	movf	efgtoa@d& (0+255),w,b
  4606  000FEC  0F30               	addlw	48
  4607  000FEE  6EDF               	movwf	indf2,c
  4608                           
  4609                           ; BSR set to: 0
  4610  000FF0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4611  000FF2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4615  000FF4  077F               	decf	efgtoa@w& (0+255),f,b
  4616  000FF6  A0D8               	btfss	status,0,c
  4617  000FF8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4618  000FFA                     l4301:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4622  000FFA  C082  F01A         	movff	efgtoa@h,___flsub@b
  4623  000FFE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4624  001002  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4625  001006  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4626  00100A  C094  F005         	movff	efgtoa@u,___flmul@a
  4627  00100E  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4628  001012  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4629  001016  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4630  00101A  C086  F001         	movff	efgtoa@l,___flmul@b
  4631  00101E  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4632  001022  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4633  001026  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4634  00102A  EC65  F010         	call	___flmul	;wreg free
  4635  00102E  C001  F01E         	movff	?___flmul,___flsub@a
  4636  001032  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4637  001036  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4638  00103A  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4639  00103E  ECDD  F01E         	call	___flsub	;wreg free
  4640  001042  C01A  F082         	movff	?___flsub,efgtoa@h
  4641  001046  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4642  00104A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4643  00104E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4644                           
  4645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4646  001052  C094  F001         	movff	efgtoa@u,___fldiv@b
  4647  001056  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4648  00105A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4649  00105E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4650  001062  0E00               	movlw	0
  4651  001064  6E05               	movwf	___fldiv@a,c
  4652  001066  0E00               	movlw	0
  4653  001068  6E06               	movwf	___fldiv@a+1,c
  4654  00106A  0E20               	movlw	32
  4655  00106C  6E07               	movwf	___fldiv@a+2,c
  4656  00106E  0E41               	movlw	65
  4657  001070  6E08               	movwf	___fldiv@a+3,c
  4658  001072  EC94  F013         	call	___fldiv	;wreg free
  4659  001076  C001  F094         	movff	?___fldiv,efgtoa@u
  4660  00107A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4661  00107E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4662  001082  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4663                           
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4665  001086  0100               	movlb	0	; () banked
  4666  001088  0776               	decf	efgtoa@ne& (0+255),f,b
  4667  00108A  A0D8               	btfss	status,0,c
  4668  00108C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4672  00108E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4673  001090  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4674  001092                     l4309:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4678  001092  5174               	movf	efgtoa@m& (0+255),w,b
  4679  001094  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4680  001096  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4681  001098  0A80               	xorlw	128
  4682  00109A  6E35               	movwf	??_efgtoa& (0+255),c
  4683  00109C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4684  00109E  0A80               	xorlw	128
  4685  0010A0  5835               	subwfb	??_efgtoa& (0+255),w,c
  4686  0010A2  B0D8               	btfsc	status,0,c
  4687  0010A4  D008               	goto	u5120
  4688                           
  4689                           ; BSR set to: 0
  4690  0010A6  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4691  0010A8  D72D               	goto	l4261
  4692  0010AA  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4693  0010AC  E104               	bnz	u5120
  4694  0010AE  0E4B               	movlw	75
  4695  0010B0  5D92               	subwf	efgtoa@n& (0+255),w,b
  4696  0010B2  A0D8               	btfss	status,0,c
  4697  0010B4  D727               	goto	l4261
  4698  0010B6                     u5120:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4702  0010B6  5172               	movf	efgtoa@pp& (0+255),w,b
  4703  0010B8  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4704  0010BA  B4D8               	btfsc	status,2,c
  4705                           
  4706                           ; BSR set to: 0
  4707  0010BC  A85E               	btfss	_flags,4,c
  4708  0010BE  D00A               	goto	l4321
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4712  0010C0  0E00               	movlw	low _dbuf
  4713  0010C2  2592               	addwf	efgtoa@n& (0+255),w,b
  4714  0010C4  6ED9               	movwf	fsr2l,c
  4715  0010C6  0E01               	movlw	high _dbuf
  4716  0010C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4717  0010CA  6EDA               	movwf	fsr2h,c
  4718  0010CC  0E2E               	movlw	46
  4719  0010CE  6EDF               	movwf	indf2,c
  4720                           
  4721                           ; BSR set to: 0
  4722  0010D0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4723  0010D2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4724  0010D4                     l4321:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4728  0010D4  0E00               	movlw	low _dbuf
  4729  0010D6  2592               	addwf	efgtoa@n& (0+255),w,b
  4730  0010D8  6ED9               	movwf	fsr2l,c
  4731  0010DA  0E01               	movlw	high _dbuf
  4732  0010DC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4733  0010DE  6EDA               	movwf	fsr2h,c
  4734  0010E0  0E00               	movlw	0
  4735  0010E2  6EDF               	movwf	indf2,c
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4739  0010E4  0E65               	movlw	101
  4740  0010E6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4741  0010E8  A4D8               	btfss	status,2,c
  4742  0010EA  D47E               	goto	l4133
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4746  0010EC  0E00               	movlw	0
  4747  0010EE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4748  0010F0  0E4F               	movlw	79
  4749  0010F2  6F8A               	movwf	efgtoa@i& (0+255),b
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4753  0010F4  0E00               	movlw	low _dbuf
  4754  0010F6  258A               	addwf	efgtoa@i& (0+255),w,b
  4755  0010F8  6ED9               	movwf	fsr2l,c
  4756  0010FA  0E01               	movlw	high _dbuf
  4757  0010FC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4758  0010FE  6EDA               	movwf	fsr2h,c
  4759  001100  0E00               	movlw	0
  4760  001102  6EDF               	movwf	indf2,c
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4764  001104  0E00               	movlw	0
  4765  001106  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4766  001108  0E00               	movlw	0
  4767  00110A  6F7A               	movwf	efgtoa@sign& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4771  00110C  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4772  00110E  D008               	goto	l4337
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4776  001110  0E00               	movlw	0
  4777  001112  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4778  001114  0E01               	movlw	1
  4779  001116  6F7A               	movwf	efgtoa@sign& (0+255),b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4783  001118  6D90               	negf	efgtoa@e& (0+255),b
  4784  00111A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4785  00111C  B0D8               	btfsc	status,0,c
  4786  00111E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4787  001120                     l4337:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4791  001120  0E00               	movlw	0
  4792  001122  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4793  001124  0E02               	movlw	2
  4794  001126  6F7C               	movwf	efgtoa@p& (0+255),b
  4795                           
  4796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4797  001128  D02B               	goto	l4349
  4798  00112A                     l4339:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4802  00112A  078A               	decf	efgtoa@i& (0+255),f,b
  4803  00112C  A0D8               	btfss	status,0,c
  4804  00112E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4808  001130  0E00               	movlw	low _dbuf
  4809  001132  258A               	addwf	efgtoa@i& (0+255),w,b
  4810  001134  6ED9               	movwf	fsr2l,c
  4811  001136  0E01               	movlw	high _dbuf
  4812  001138  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4813  00113A  6EDA               	movwf	fsr2h,c
  4814  00113C  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4815  001140  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4816  001144  0E00               	movlw	0
  4817  001146  6E04               	movwf	___awmod@divisor+1,c
  4818  001148  0E0A               	movlw	10
  4819  00114A  6E03               	movwf	___awmod@divisor,c
  4820  00114C  ECCB  F01D         	call	___awmod	;wreg free
  4821  001150  5001               	movf	?___awmod,w,c
  4822  001152  0F30               	addlw	48
  4823  001154  6EDF               	movwf	indf2,c
  4824                           
  4825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4826  001156  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4827  00115A  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4828  00115E  0E00               	movlw	0
  4829  001160  6E04               	movwf	___awdiv@divisor+1,c
  4830  001162  0E0A               	movlw	10
  4831  001164  6E03               	movwf	___awdiv@divisor,c
  4832  001166  EC4E  F01D         	call	___awdiv	;wreg free
  4833  00116A  C001  F090         	movff	?___awdiv,efgtoa@e
  4834  00116E  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4835                           
  4836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4837  001172  0100               	movlb	0	; () banked
  4838  001174  077C               	decf	efgtoa@p& (0+255),f,b
  4839  001176  A0D8               	btfss	status,0,c
  4840  001178  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4844  00117A  077F               	decf	efgtoa@w& (0+255),f,b
  4845  00117C  A0D8               	btfss	status,0,c
  4846  00117E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4847  001180                     l4349:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4851  001180  5190               	movf	efgtoa@e& (0+255),w,b
  4852  001182  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4853  001184  A4D8               	btfss	status,2,c
  4854  001186  D7D1               	goto	l4339
  4855                           
  4856                           ; BSR set to: 0
  4857  001188  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4858  00118A  D005               	goto	u5180
  4859  00118C  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4860  00118E  E1CD               	bnz	l4339
  4861  001190  057C               	decf	efgtoa@p& (0+255),w,b
  4862  001192  B0D8               	btfsc	status,0,c
  4863  001194  D7CA               	goto	l4339
  4864  001196                     u5180:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4868  001196  078A               	decf	efgtoa@i& (0+255),f,b
  4869  001198  A0D8               	btfss	status,0,c
  4870  00119A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4874  00119C  517A               	movf	efgtoa@sign& (0+255),w,b
  4875  00119E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4876  0011A0  A4D8               	btfss	status,2,c
  4877  0011A2  D004               	goto	l4359
  4878                           
  4879                           ; BSR set to: 0
  4880  0011A4  0E00               	movlw	0
  4881  0011A6  6F6B               	movwf	(_efgtoa$448+1)& (0+255),b
  4882  0011A8  0E2B               	movlw	43
  4883  0011AA  D003               	goto	L5
  4884  0011AC                     l4359:
  4885                           
  4886                           ; BSR set to: 0
  4887  0011AC  0E00               	movlw	0
  4888  0011AE  6F6B               	movwf	(_efgtoa$448+1)& (0+255),b
  4889  0011B0  0E2D               	movlw	45
  4890  0011B2                     L5:
  4891  0011B2  6F6A               	movwf	_efgtoa$448& (0+255),b
  4892                           
  4893                           ; BSR set to: 0
  4894  0011B4  0E00               	movlw	low _dbuf
  4895  0011B6  258A               	addwf	efgtoa@i& (0+255),w,b
  4896  0011B8  6ED9               	movwf	fsr2l,c
  4897  0011BA  0E01               	movlw	high _dbuf
  4898  0011BC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4899  0011BE  6EDA               	movwf	fsr2h,c
  4900  0011C0  C06A  FFDF         	movff	_efgtoa$448,indf2
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4904  0011C4  077F               	decf	efgtoa@w& (0+255),f,b
  4905  0011C6  A0D8               	btfss	status,0,c
  4906  0011C8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4910  0011CA  078A               	decf	efgtoa@i& (0+255),f,b
  4911  0011CC  A0D8               	btfss	status,0,c
  4912  0011CE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4913                           
  4914                           ; BSR set to: 0
  4915  0011D0  0EBF               	movlw	191
  4916  0011D2  6E35               	movwf	??_efgtoa& (0+255),c
  4917  0011D4  0EFF               	movlw	255
  4918  0011D6  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4919  0011D8  5034               	movf	efgtoa@c,w,c
  4920  0011DA  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  4921  0011DC  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  4922  0011DE  5035               	movf	??_efgtoa,w,c
  4923  0011E0  2637               	addwf	??_efgtoa+2,f,c
  4924  0011E2  5036               	movf	??_efgtoa+1,w,c
  4925  0011E4  2238               	addwfc	??_efgtoa+3,f,c
  4926  0011E6  5038               	movf	??_efgtoa+3,w,c
  4927  0011E8  E106               	bnz	u5200
  4928  0011EA  0E1A               	movlw	26
  4929  0011EC  5C37               	subwf	??_efgtoa+2,w,c
  4930  0011EE  B0D8               	btfsc	status,0,c
  4931  0011F0  D002               	goto	u5200
  4932  0011F2  0E01               	movlw	1
  4933  0011F4  D001               	goto	u5210
  4934  0011F6                     u5200:
  4935  0011F6  0E00               	movlw	0
  4936  0011F8                     u5210:
  4937  0011F8  6F6E               	movwf	_efgtoa$450& (0+255),b
  4938  0011FA  6B6F               	clrf	(_efgtoa$450+1)& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941  0011FC  516E               	movf	_efgtoa$450& (0+255),w,b
  4942  0011FE  116F               	iorwf	(_efgtoa$450+1)& (0+255),w,b
  4943  001200  A4D8               	btfss	status,2,c
  4944  001202  D004               	goto	l4375
  4945                           
  4946                           ; BSR set to: 0
  4947  001204  0E00               	movlw	0
  4948  001206  6F6D               	movwf	(_efgtoa$449+1)& (0+255),b
  4949  001208  0E65               	movlw	101
  4950  00120A  D003               	goto	L6
  4951  00120C                     l4375:
  4952                           
  4953                           ; BSR set to: 0
  4954  00120C  0E00               	movlw	0
  4955  00120E  6F6D               	movwf	(_efgtoa$449+1)& (0+255),b
  4956  001210  0E45               	movlw	69
  4957  001212                     L6:
  4958  001212  6F6C               	movwf	_efgtoa$449& (0+255),b
  4959                           
  4960                           ; BSR set to: 0
  4961  001214  0E00               	movlw	low _dbuf
  4962  001216  258A               	addwf	efgtoa@i& (0+255),w,b
  4963  001218  6ED9               	movwf	fsr2l,c
  4964  00121A  0E01               	movlw	high _dbuf
  4965  00121C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4966  00121E  6EDA               	movwf	fsr2h,c
  4967  001220  C06C  FFDF         	movff	_efgtoa$449,indf2
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4971  001224  077F               	decf	efgtoa@w& (0+255),f,b
  4972  001226  A0D8               	btfss	status,0,c
  4973  001228  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4977  00122A  0E00               	movlw	low _dbuf
  4978  00122C  2592               	addwf	efgtoa@n& (0+255),w,b
  4979  00122E  6E01               	movwf	strcpy@dest,c
  4980  001230  0E01               	movlw	high _dbuf
  4981  001232  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4982  001234  6E02               	movwf	strcpy@dest+1,c
  4983  001236  0E00               	movlw	low _dbuf
  4984  001238  258A               	addwf	efgtoa@i& (0+255),w,b
  4985  00123A  6E03               	movwf	strcpy@src,c
  4986  00123C  0E01               	movlw	high _dbuf
  4987  00123E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4988  001240  6E04               	movwf	strcpy@src+1,c
  4989  001242  EC66  F01E         	call	_strcpy	;wreg free
  4990  001246  EFF4  F004         	goto	l4133
  4991  00124A                     __end_of_efgtoa:
  4992                           	opt callstack 0
  4993                           
  4994 ;; *************** function _tolower *****************
  4995 ;; Defined at:
  4996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  c               2    6[COMRAM] int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  2    6[COMRAM] int 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5010 ;;      Params:         2       0       0       0       0       0       0       0       0
  5011 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5012 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5013 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5014 ;;Total ram usage:        8 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    1
  5017 ;; This function calls:
  5018 ;;		_isupper
  5019 ;; This function is called by:
  5020 ;;		_efgtoa
  5021 ;;		_vfpfcnvrt
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text6
  5026  003D6E                     __ptext6:
  5027                           	opt callstack 0
  5028  003D6E                     _tolower:
  5029                           	opt callstack 26
  5030                           
  5031                           ;incstack = 0
  5032  003D6E  0EBF               	movlw	191
  5033  003D70  6E09               	movwf	??_tolower& (0+255),c
  5034  003D72  0EFF               	movlw	255
  5035  003D74  6E0A               	movwf	(??_tolower+1)& (0+255),c
  5036  003D76  C007  F00B         	movff	tolower@c,??_tolower+2
  5037  003D7A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5038  003D7E  5009               	movf	??_tolower,w,c
  5039  003D80  260B               	addwf	??_tolower+2,f,c
  5040  003D82  500A               	movf	??_tolower+1,w,c
  5041  003D84  220C               	addwfc	??_tolower+3,f,c
  5042  003D86  500C               	movf	??_tolower+3,w,c
  5043  003D88  E106               	bnz	u3560
  5044  003D8A  0E1A               	movlw	26
  5045  003D8C  5C0B               	subwf	??_tolower+2,w,c
  5046  003D8E  B0D8               	btfsc	status,0,c
  5047  003D90  D002               	goto	u3560
  5048  003D92  0E01               	movlw	1
  5049  003D94  D001               	goto	u3570
  5050  003D96                     u3560:
  5051  003D96  0E00               	movlw	0
  5052  003D98                     u3570:
  5053  003D98  6E0D               	movwf	_tolower$1059,c
  5054  003D9A  6A0E               	clrf	_tolower$1059+1,c
  5055  003D9C  500D               	movf	_tolower$1059,w,c
  5056  003D9E  100E               	iorwf	_tolower$1059+1,w,c
  5057  003DA0  B4D8               	btfsc	status,2,c
  5058  003DA2  D006               	goto	l1159
  5059  003DA4  0E20               	movlw	32
  5060  003DA6  1007               	iorwf	tolower@c,w,c
  5061  003DA8  6E07               	movwf	?_tolower,c
  5062  003DAA  5008               	movf	tolower@c+1,w,c
  5063  003DAC  6E08               	movwf	?_tolower+1,c
  5064  003DAE  0012               	return	
  5065  003DB0                     l1159:
  5066  003DB0  C007  F007         	movff	tolower@c,?_tolower
  5067  003DB4  C008  F008         	movff	tolower@c+1,?_tolower+1
  5068  003DB8  0012               	return		;funcret
  5069  003DBA                     __end_of_tolower:
  5070                           	opt callstack 0
  5071                           
  5072 ;; *************** function _isupper *****************
  5073 ;; Defined at:
  5074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  c               2    0[COMRAM] int 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    0[COMRAM] int 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         2       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5090 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        6 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_efgtoa
  5098 ;;		_vfpfcnvrt
  5099 ;;		_tolower
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text7
  5104  003EA8                     __ptext7:
  5105                           	opt callstack 0
  5106  003EA8                     _isupper:
  5107                           	opt callstack 26
  5108                           
  5109                           ;incstack = 0
  5110  003EA8  0EBF               	movlw	191
  5111  003EAA  6E03               	movwf	??_isupper& (0+255),c
  5112  003EAC  0EFF               	movlw	255
  5113  003EAE  6E04               	movwf	(??_isupper+1)& (0+255),c
  5114  003EB0  C001  F005         	movff	isupper@c,??_isupper+2
  5115  003EB4  C002  F006         	movff	isupper@c+1,??_isupper+3
  5116  003EB8  5003               	movf	??_isupper,w,c
  5117  003EBA  2605               	addwf	??_isupper+2,f,c
  5118  003EBC  5004               	movf	??_isupper+1,w,c
  5119  003EBE  2206               	addwfc	??_isupper+3,f,c
  5120  003EC0  5006               	movf	??_isupper+3,w,c
  5121  003EC2  E106               	bnz	u3010
  5122  003EC4  0E1A               	movlw	26
  5123  003EC6  5C05               	subwf	??_isupper+2,w,c
  5124  003EC8  B0D8               	btfsc	status,0,c
  5125  003ECA  D002               	goto	u3010
  5126  003ECC  0E01               	movlw	1
  5127  003ECE  D001               	goto	u3020
  5128  003ED0                     u3010:
  5129  003ED0  0E00               	movlw	0
  5130  003ED2                     u3020:
  5131  003ED2  6E01               	movwf	?_isupper,c
  5132  003ED4  6A02               	clrf	?_isupper+1,c
  5133  003ED6  0012               	return		;funcret
  5134  003ED8                     __end_of_isupper:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function _strcpy *****************
  5138 ;; Defined at:
  5139 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5142 ;;		 -> dbuf(80), 
  5143 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5144 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
  5145 ;;		 -> dbuf(80), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  d               2    8[COMRAM] PTR unsigned char 
  5148 ;;		 -> dbuf(80), 
  5149 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5150 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
  5151 ;;		 -> dbuf(80), 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[COMRAM] PTR unsigned char 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0
  5162 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5163 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5164 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5165 ;;Total ram usage:       10 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_efgtoa
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text8
  5175  003CCC                     __ptext8:
  5176                           	opt callstack 0
  5177  003CCC                     _strcpy:
  5178                           	opt callstack 26
  5179                           
  5180                           ;incstack = 0
  5181  003CCC  C003  F007         	movff	strcpy@src,strcpy@s
  5182  003CD0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5183  003CD4  C001  F009         	movff	strcpy@dest,strcpy@d
  5184  003CD8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5185  003CDC                     l3441:
  5186  003CDC  5007               	movf	strcpy@s,w,c
  5187  003CDE  6E05               	movwf	??_strcpy& (0+255),c
  5188  003CE0  5008               	movf	strcpy@s+1,w,c
  5189  003CE2  6E06               	movwf	(??_strcpy+1)& (0+255),c
  5190  003CE4  4A07               	infsnz	strcpy@s,f,c
  5191  003CE6  2A08               	incf	strcpy@s+1,f,c
  5192  003CE8  C005  FFF6         	movff	??_strcpy,tblptrl
  5193  003CEC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5194  003CF0  6AF8               	clrf	tblptru,c
  5195  003CF2  C009  FFD9         	movff	strcpy@d,fsr2l
  5196  003CF6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5197  003CFA  4A09               	infsnz	strcpy@d,f,c
  5198  003CFC  2A0A               	incf	strcpy@d+1,f,c
  5199  003CFE  0E07               	movlw	(high __ramtop+-1)
  5200  003D00  64F7               	cpfsgt	tblptrh,c
  5201  003D02  D003               	bra	u3547
  5202  003D04  0008               	tblrd		*
  5203  003D06  50F5               	movf	tablat,w,c
  5204  003D08  D005               	bra	u3540
  5205  003D0A                     u3547:
  5206  003D0A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5207  003D0E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5208  003D12  50E7               	movf	indf1,w,c
  5209  003D14                     u3540:
  5210  003D14  6EDF               	movwf	indf2,c
  5211  003D16  50DF               	movf	indf2,w,c
  5212  003D18  B4D8               	btfsc	status,2,c
  5213  003D1A  0012               	return	
  5214  003D1C  D7DF               	goto	l3441
  5215  003D1E                     __end_of_strcpy:
  5216                           	opt callstack 0
  5217                           
  5218 ;; *************** function _floorf *****************
  5219 ;; Defined at:
  5220 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  x               4   25[COMRAM] float 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  u               4   41[COMRAM] struct .
  5225 ;;  m               4   35[COMRAM] unsigned long 
  5226 ;;  e               2   39[COMRAM] int 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  4   25[COMRAM] float 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5236 ;;      Params:         4       0       0       0       0       0       0       0       0
  5237 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5238 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5239 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5240 ;;Total ram usage:       20 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_efgtoa
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text9
  5250  002BF4                     __ptext9:
  5251                           	opt callstack 0
  5252  002BF4                     _floorf:
  5253                           	opt callstack 26
  5254                           
  5255                           ;incstack = 0
  5256  002BF4  C0B8  F02A         	movff	floorf@F524,floorf@u
  5257  002BF8  C0B9  F02B         	movff	floorf@F524+1,floorf@u+1
  5258  002BFC  C0BA  F02C         	movff	floorf@F524+2,floorf@u+2
  5259  002C00  C0BB  F02D         	movff	floorf@F524+3,floorf@u+3
  5260  002C04  C01A  F02A         	movff	floorf@x,floorf@u
  5261  002C08  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5262  002C0C  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5263  002C10  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5264  002C14  0E81               	movlw	129
  5265  002C16  6E1E               	movwf	??_floorf& (0+255),c
  5266  002C18  0EFF               	movlw	255
  5267  002C1A  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5268  002C1C  C02A  F020         	movff	floorf@u,??_floorf+2
  5269  002C20  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5270  002C24  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5271  002C28  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5272  002C2C  0E18               	movlw	24
  5273  002C2E  D005               	goto	u3590
  5274  002C30                     u3595:
  5275  002C30  90D8               	bcf	status,0,c
  5276  002C32  3223               	rrcf	??_floorf+5,f,c
  5277  002C34  3222               	rrcf	??_floorf+4,f,c
  5278  002C36  3221               	rrcf	??_floorf+3,f,c
  5279  002C38  3220               	rrcf	??_floorf+2,f,c
  5280  002C3A                     u3590:
  5281  002C3A  2EE8               	decfsz	wreg,f,c
  5282  002C3C  D7F9               	goto	u3595
  5283  002C3E  5020               	movf	??_floorf+2,w,c
  5284  002C40  241E               	addwf	??_floorf,w,c
  5285  002C42  6E28               	movwf	floorf@e,c
  5286  002C44  0E00               	movlw	0
  5287  002C46  201F               	addwfc	??_floorf+1,w,c
  5288  002C48  6E29               	movwf	floorf@e+1,c
  5289  002C4A  BE29               	btfsc	floorf@e+1,7,c
  5290  002C4C  D00F               	goto	l3459
  5291  002C4E  5029               	movf	floorf@e+1,w,c
  5292  002C50  E104               	bnz	u3600
  5293  002C52  0E17               	movlw	23
  5294  002C54  5C28               	subwf	floorf@e,w,c
  5295  002C56  A0D8               	btfss	status,0,c
  5296  002C58  D009               	goto	l3459
  5297  002C5A                     u3600:
  5298  002C5A  C01A  F01A         	movff	floorf@x,?_floorf
  5299  002C5E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5300  002C62  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5301  002C66  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5302  002C6A  0012               	return	
  5303  002C6C                     l3459:
  5304  002C6C  BE29               	btfsc	floorf@e+1,7,c
  5305  002C6E  D05E               	goto	l3469
  5306  002C70  C028  F01E         	movff	floorf@e,??_floorf
  5307  002C74  0EFF               	movlw	255
  5308  002C76  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5309  002C78  0EFF               	movlw	255
  5310  002C7A  6E20               	movwf	(??_floorf+2)& (0+255),c
  5311  002C7C  0E7F               	movlw	127
  5312  002C7E  6E21               	movwf	(??_floorf+3)& (0+255),c
  5313  002C80  0E00               	movlw	0
  5314  002C82  6E22               	movwf	(??_floorf+4)& (0+255),c
  5315  002C84                     u3625:
  5316  002C84  661E               	tstfsz	??_floorf,c
  5317  002C86  D001               	goto	u3626
  5318  002C88  D007               	goto	u3627
  5319  002C8A                     u3626:
  5320  002C8A  3422               	rlcf	??_floorf+4,w,c
  5321  002C8C  3222               	rrcf	??_floorf+4,f,c
  5322  002C8E  3221               	rrcf	??_floorf+3,f,c
  5323  002C90  3220               	rrcf	??_floorf+2,f,c
  5324  002C92  321F               	rrcf	??_floorf+1,f,c
  5325  002C94  2E1E               	decfsz	??_floorf,f,c
  5326  002C96  D7F6               	goto	u3625
  5327  002C98                     u3627:
  5328  002C98  C01F  F024         	movff	??_floorf+1,floorf@m
  5329  002C9C  C020  F025         	movff	??_floorf+2,floorf@m+1
  5330  002CA0  C021  F026         	movff	??_floorf+3,floorf@m+2
  5331  002CA4  C022  F027         	movff	??_floorf+4,floorf@m+3
  5332  002CA8  5024               	movf	floorf@m,w,c
  5333  002CAA  142A               	andwf	floorf@u,w,c
  5334  002CAC  6E1E               	movwf	??_floorf& (0+255),c
  5335  002CAE  5025               	movf	floorf@m+1,w,c
  5336  002CB0  142B               	andwf	floorf@u+1,w,c
  5337  002CB2  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5338  002CB4  5026               	movf	floorf@m+2,w,c
  5339  002CB6  142C               	andwf	floorf@u+2,w,c
  5340  002CB8  6E20               	movwf	(??_floorf+2)& (0+255),c
  5341  002CBA  5027               	movf	floorf@m+3,w,c
  5342  002CBC  142D               	andwf	floorf@u+3,w,c
  5343  002CBE  6E21               	movwf	(??_floorf+3)& (0+255),c
  5344  002CC0  501E               	movf	??_floorf,w,c
  5345  002CC2  101F               	iorwf	??_floorf+1,w,c
  5346  002CC4  1020               	iorwf	??_floorf+2,w,c
  5347  002CC6  1021               	iorwf	??_floorf+3,w,c
  5348  002CC8  B4D8               	btfsc	status,2,c
  5349  002CCA  D7C7               	goto	u3600
  5350  002CCC  C02A  F01E         	movff	floorf@u,??_floorf
  5351  002CD0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5352  002CD4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5353  002CD8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5354  002CDC  0E20               	movlw	32
  5355  002CDE  D005               	goto	u3640
  5356  002CE0                     u3645:
  5357  002CE0  90D8               	bcf	status,0,c
  5358  002CE2  3221               	rrcf	??_floorf+3,f,c
  5359  002CE4  3220               	rrcf	??_floorf+2,f,c
  5360  002CE6  321F               	rrcf	??_floorf+1,f,c
  5361  002CE8  321E               	rrcf	??_floorf,f,c
  5362  002CEA                     u3640:
  5363  002CEA  2EE8               	decfsz	wreg,f,c
  5364  002CEC  D7F9               	goto	u3645
  5365  002CEE  501E               	movf	??_floorf,w,c
  5366  002CF0  101F               	iorwf	??_floorf+1,w,c
  5367  002CF2  1020               	iorwf	??_floorf+2,w,c
  5368  002CF4  1021               	iorwf	??_floorf+3,w,c
  5369  002CF6  B4D8               	btfsc	status,2,c
  5370  002CF8  D008               	goto	l1079
  5371  002CFA  5024               	movf	floorf@m,w,c
  5372  002CFC  262A               	addwf	floorf@u,f,c
  5373  002CFE  5025               	movf	floorf@m+1,w,c
  5374  002D00  222B               	addwfc	floorf@u+1,f,c
  5375  002D02  5026               	movf	floorf@m+2,w,c
  5376  002D04  222C               	addwfc	floorf@u+2,f,c
  5377  002D06  5027               	movf	floorf@m+3,w,c
  5378  002D08  222D               	addwfc	floorf@u+3,f,c
  5379  002D0A                     l1079:
  5380  002D0A  1C24               	comf	floorf@m,w,c
  5381  002D0C  6E1E               	movwf	??_floorf& (0+255),c
  5382  002D0E  1C25               	comf	floorf@m+1,w,c
  5383  002D10  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5384  002D12  1C26               	comf	floorf@m+2,w,c
  5385  002D14  6E20               	movwf	(??_floorf+2)& (0+255),c
  5386  002D16  1C27               	comf	floorf@m+3,w,c
  5387  002D18  6E21               	movwf	(??_floorf+3)& (0+255),c
  5388  002D1A  501E               	movf	??_floorf,w,c
  5389  002D1C  162A               	andwf	floorf@u,f,c
  5390  002D1E  501F               	movf	??_floorf+1,w,c
  5391  002D20  162B               	andwf	floorf@u+1,f,c
  5392  002D22  5020               	movf	??_floorf+2,w,c
  5393  002D24  162C               	andwf	floorf@u+2,f,c
  5394  002D26  5021               	movf	??_floorf+3,w,c
  5395  002D28  162D               	andwf	floorf@u+3,f,c
  5396  002D2A  D036               	goto	l3477
  5397  002D2C                     l3469:
  5398  002D2C  C02A  F01E         	movff	floorf@u,??_floorf
  5399  002D30  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5400  002D34  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5401  002D38  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5402  002D3C  0E20               	movlw	32
  5403  002D3E  D005               	goto	u3660
  5404  002D40                     u3665:
  5405  002D40  90D8               	bcf	status,0,c
  5406  002D42  3221               	rrcf	??_floorf+3,f,c
  5407  002D44  3220               	rrcf	??_floorf+2,f,c
  5408  002D46  321F               	rrcf	??_floorf+1,f,c
  5409  002D48  321E               	rrcf	??_floorf,f,c
  5410  002D4A                     u3660:
  5411  002D4A  2EE8               	decfsz	wreg,f,c
  5412  002D4C  D7F9               	goto	u3665
  5413  002D4E  501E               	movf	??_floorf,w,c
  5414  002D50  101F               	iorwf	??_floorf+1,w,c
  5415  002D52  1020               	iorwf	??_floorf+2,w,c
  5416  002D54  1021               	iorwf	??_floorf+3,w,c
  5417  002D56  A4D8               	btfss	status,2,c
  5418  002D58  D008               	goto	l3473
  5419  002D5A  0E00               	movlw	0
  5420  002D5C  6E2A               	movwf	floorf@u,c
  5421  002D5E  0E00               	movlw	0
  5422  002D60  6E2B               	movwf	floorf@u+1,c
  5423  002D62  0E00               	movlw	0
  5424  002D64  6E2C               	movwf	floorf@u+2,c
  5425  002D66  0E00               	movlw	0
  5426  002D68  D016               	goto	L7
  5427  002D6A                     l3473:
  5428  002D6A  90D8               	bcf	status,0,c
  5429  002D6C  342A               	rlcf	floorf@u,w,c
  5430  002D6E  6E1E               	movwf	??_floorf& (0+255),c
  5431  002D70  342B               	rlcf	floorf@u+1,w,c
  5432  002D72  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5433  002D74  342C               	rlcf	floorf@u+2,w,c
  5434  002D76  6E20               	movwf	(??_floorf+2)& (0+255),c
  5435  002D78  342D               	rlcf	floorf@u+3,w,c
  5436  002D7A  6E21               	movwf	(??_floorf+3)& (0+255),c
  5437  002D7C  501E               	movf	??_floorf,w,c
  5438  002D7E  101F               	iorwf	??_floorf+1,w,c
  5439  002D80  1020               	iorwf	??_floorf+2,w,c
  5440  002D82  1021               	iorwf	??_floorf+3,w,c
  5441  002D84  B4D8               	btfsc	status,2,c
  5442  002D86  D008               	goto	l3477
  5443  002D88  0E00               	movlw	0
  5444  002D8A  6E2A               	movwf	floorf@u,c
  5445  002D8C  0E00               	movlw	0
  5446  002D8E  6E2B               	movwf	floorf@u+1,c
  5447  002D90  0E80               	movlw	128
  5448  002D92  6E2C               	movwf	floorf@u+2,c
  5449  002D94  0EBF               	movlw	191
  5450  002D96                     L7:
  5451  002D96  6E2D               	movwf	floorf@u+3,c
  5452  002D98                     l3477:
  5453  002D98  C02A  F01A         	movff	floorf@u,?_floorf
  5454  002D9C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5455  002DA0  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5456  002DA4  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5457  002DA8  0012               	return		;funcret
  5458  002DAA                     __end_of_floorf:
  5459                           	opt callstack 0
  5460                           
  5461 ;; *************** function ___fpclassifyf *****************
  5462 ;; Defined at:
  5463 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  x               4    0[COMRAM] float 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  u               4   10[COMRAM] struct .
  5468 ;;  e               2    8[COMRAM] int 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2    0[COMRAM] int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5481 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:       14 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_efgtoa
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text10
  5492  0036B4                     __ptext10:
  5493                           	opt callstack 0
  5494  0036B4                     ___fpclassifyf:
  5495                           	opt callstack 26
  5496                           
  5497                           ;incstack = 0
  5498  0036B4  C0BC  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5499  0036B8  C0BD  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5500  0036BC  C0BE  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5501  0036C0  C0BF  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5502  0036C4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5503  0036C8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5504  0036CC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5505  0036D0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5506  0036D4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5507  0036D8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5508  0036DC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5509  0036E0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5510  0036E4  0E18               	movlw	24
  5511  0036E6  D005               	goto	u3470
  5512  0036E8                     u3475:
  5513  0036E8  90D8               	bcf	status,0,c
  5514  0036EA  3208               	rrcf	??___fpclassifyf+3,f,c
  5515  0036EC  3207               	rrcf	??___fpclassifyf+2,f,c
  5516  0036EE  3206               	rrcf	??___fpclassifyf+1,f,c
  5517  0036F0  3205               	rrcf	??___fpclassifyf,f,c
  5518  0036F2                     u3470:
  5519  0036F2  2EE8               	decfsz	wreg,f,c
  5520  0036F4  D7F9               	goto	u3475
  5521  0036F6  5005               	movf	??___fpclassifyf,w,c
  5522  0036F8  6E09               	movwf	___fpclassifyf@e,c
  5523  0036FA  6A0A               	clrf	___fpclassifyf@e+1,c
  5524  0036FC  5009               	movf	___fpclassifyf@e,w,c
  5525  0036FE  100A               	iorwf	___fpclassifyf@e+1,w,c
  5526  003700  A4D8               	btfss	status,2,c
  5527  003702  D019               	goto	l3429
  5528  003704  90D8               	bcf	status,0,c
  5529  003706  340B               	rlcf	___fpclassifyf@u,w,c
  5530  003708  6E05               	movwf	??___fpclassifyf& (0+255),c
  5531  00370A  340C               	rlcf	___fpclassifyf@u+1,w,c
  5532  00370C  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5533  00370E  340D               	rlcf	___fpclassifyf@u+2,w,c
  5534  003710  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5535  003712  340E               	rlcf	___fpclassifyf@u+3,w,c
  5536  003714  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5537  003716  5005               	movf	??___fpclassifyf,w,c
  5538  003718  1006               	iorwf	??___fpclassifyf+1,w,c
  5539  00371A  1007               	iorwf	??___fpclassifyf+2,w,c
  5540  00371C  1008               	iorwf	??___fpclassifyf+3,w,c
  5541  00371E  A4D8               	btfss	status,2,c
  5542  003720  D005               	goto	l3425
  5543  003722  0E00               	movlw	0
  5544  003724  6E02               	movwf	?___fpclassifyf+1,c
  5545  003726  0E02               	movlw	2
  5546  003728  6E01               	movwf	?___fpclassifyf,c
  5547  00372A  0012               	return	
  5548  00372C                     l3425:
  5549  00372C  0E00               	movlw	0
  5550  00372E  6E02               	movwf	?___fpclassifyf+1,c
  5551  003730  0E03               	movlw	3
  5552  003732  6E01               	movwf	?___fpclassifyf,c
  5553  003734  0012               	return	
  5554  003736                     l3429:
  5555  003736  2809               	incf	___fpclassifyf@e,w,c
  5556  003738  100A               	iorwf	___fpclassifyf@e+1,w,c
  5557  00373A  A4D8               	btfss	status,2,c
  5558  00373C  D01C               	goto	l3435
  5559  00373E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5560  003742  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5561  003746  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5562  00374A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5563  00374E  0E09               	movlw	9
  5564  003750                     u3515:
  5565  003750  90D8               	bcf	status,0,c
  5566  003752  3605               	rlcf	??___fpclassifyf,f,c
  5567  003754  3606               	rlcf	??___fpclassifyf+1,f,c
  5568  003756  3607               	rlcf	??___fpclassifyf+2,f,c
  5569  003758  3608               	rlcf	??___fpclassifyf+3,f,c
  5570  00375A  2EE8               	decfsz	wreg,f,c
  5571  00375C  D7F9               	goto	u3515
  5572  00375E  5005               	movf	??___fpclassifyf,w,c
  5573  003760  1006               	iorwf	??___fpclassifyf+1,w,c
  5574  003762  1007               	iorwf	??___fpclassifyf+2,w,c
  5575  003764  1008               	iorwf	??___fpclassifyf+3,w,c
  5576  003766  A4D8               	btfss	status,2,c
  5577  003768  D002               	goto	u3520
  5578  00376A  0E01               	movlw	1
  5579  00376C  D001               	goto	u3530
  5580  00376E                     u3520:
  5581  00376E  0E00               	movlw	0
  5582  003770                     u3530:
  5583  003770  6E01               	movwf	?___fpclassifyf,c
  5584  003772  6A02               	clrf	?___fpclassifyf+1,c
  5585  003774  0012               	return	
  5586  003776                     l3435:
  5587  003776  0E00               	movlw	0
  5588  003778  6E02               	movwf	?___fpclassifyf+1,c
  5589  00377A  0E04               	movlw	4
  5590  00377C  6E01               	movwf	?___fpclassifyf,c
  5591  00377E  0012               	return		;funcret
  5592  003780                     __end_of___fpclassifyf:
  5593                           	opt callstack 0
  5594                           
  5595 ;; *************** function ___fltol *****************
  5596 ;; Defined at:
  5597 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  f1              4    0[COMRAM] int 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  exp1            1    9[COMRAM] unsigned char 
  5602 ;;  sign1           1    8[COMRAM] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  4    0[COMRAM] long 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5612 ;;      Params:         4       0       0       0       0       0       0       0       0
  5613 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5614 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5615 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:       10 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_efgtoa
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text11
  5626  003780                     __ptext11:
  5627                           	opt callstack 0
  5628  003780                     ___fltol:
  5629                           	opt callstack 26
  5630                           
  5631                           ;incstack = 0
  5632  003780  3403               	rlcf	___fltol@f1+2,w,c
  5633  003782  3404               	rlcf	___fltol@f1+3,w,c
  5634  003784  6E0A               	movwf	___fltol@exp1,c
  5635  003786  500A               	movf	___fltol@exp1,w,c
  5636  003788  A4D8               	btfss	status,2,c
  5637  00378A  D009               	goto	l3977
  5638  00378C                     u4470:
  5639  00378C  0E00               	movlw	0
  5640  00378E  6E01               	movwf	?___fltol,c
  5641  003790  0E00               	movlw	0
  5642  003792  6E02               	movwf	?___fltol+1,c
  5643  003794  0E00               	movlw	0
  5644  003796  6E03               	movwf	?___fltol+2,c
  5645  003798  0E00               	movlw	0
  5646  00379A  6E04               	movwf	?___fltol+3,c
  5647  00379C  0012               	return	
  5648  00379E                     l3977:
  5649  00379E  C001  F005         	movff	___fltol@f1,??___fltol
  5650  0037A2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5651  0037A6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5652  0037AA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5653  0037AE  0E20               	movlw	32
  5654  0037B0  D005               	goto	u4480
  5655  0037B2                     u4485:
  5656  0037B2  90D8               	bcf	status,0,c
  5657  0037B4  3208               	rrcf	??___fltol+3,f,c
  5658  0037B6  3207               	rrcf	??___fltol+2,f,c
  5659  0037B8  3206               	rrcf	??___fltol+1,f,c
  5660  0037BA  3205               	rrcf	??___fltol,f,c
  5661  0037BC                     u4480:
  5662  0037BC  2EE8               	decfsz	wreg,f,c
  5663  0037BE  D7F9               	goto	u4485
  5664  0037C0  5005               	movf	??___fltol,w,c
  5665  0037C2  6E09               	movwf	___fltol@sign1,c
  5666  0037C4  8E03               	bsf	___fltol@f1+2,7,c
  5667  0037C6  0EFF               	movlw	255
  5668  0037C8  1601               	andwf	___fltol@f1,f,c
  5669  0037CA  0EFF               	movlw	255
  5670  0037CC  1602               	andwf	___fltol@f1+1,f,c
  5671  0037CE  0EFF               	movlw	255
  5672  0037D0  1603               	andwf	___fltol@f1+2,f,c
  5673  0037D2  0E00               	movlw	0
  5674  0037D4  1604               	andwf	___fltol@f1+3,f,c
  5675  0037D6  0E96               	movlw	150
  5676  0037D8  5E0A               	subwf	___fltol@exp1,f,c
  5677  0037DA  AE0A               	btfss	___fltol@exp1,7,c
  5678  0037DC  D00D               	goto	l3997
  5679  0037DE  500A               	movf	___fltol@exp1,w,c
  5680  0037E0  0A80               	xorlw	128
  5681  0037E2  0F97               	addlw	151
  5682  0037E4  A0D8               	btfss	status,0,c
  5683  0037E6  D7D2               	goto	u4470
  5684  0037E8                     l3993:
  5685  0037E8  90D8               	bcf	status,0,c
  5686  0037EA  3204               	rrcf	___fltol@f1+3,f,c
  5687  0037EC  3203               	rrcf	___fltol@f1+2,f,c
  5688  0037EE  3202               	rrcf	___fltol@f1+1,f,c
  5689  0037F0  3201               	rrcf	___fltol@f1,f,c
  5690  0037F2  3E0A               	incfsz	___fltol@exp1,f,c
  5691  0037F4  D7F9               	goto	l3993
  5692  0037F6  D00D               	goto	u4520
  5693  0037F8                     l3997:
  5694  0037F8  0E1F               	movlw	31
  5695  0037FA  640A               	cpfsgt	___fltol@exp1,c
  5696  0037FC  D007               	goto	l4005
  5697  0037FE  D7C6               	goto	u4470
  5698  003800                     l4003:
  5699  003800  90D8               	bcf	status,0,c
  5700  003802  3601               	rlcf	___fltol@f1,f,c
  5701  003804  3602               	rlcf	___fltol@f1+1,f,c
  5702  003806  3603               	rlcf	___fltol@f1+2,f,c
  5703  003808  3604               	rlcf	___fltol@f1+3,f,c
  5704  00380A  060A               	decf	___fltol@exp1,f,c
  5705  00380C                     l4005:
  5706  00380C  500A               	movf	___fltol@exp1,w,c
  5707  00380E  A4D8               	btfss	status,2,c
  5708  003810  D7F7               	goto	l4003
  5709  003812                     u4520:
  5710  003812  5009               	movf	___fltol@sign1,w,c
  5711  003814  B4D8               	btfsc	status,2,c
  5712  003816  D008               	goto	l4011
  5713  003818  1E04               	comf	___fltol@f1+3,f,c
  5714  00381A  1E03               	comf	___fltol@f1+2,f,c
  5715  00381C  1E02               	comf	___fltol@f1+1,f,c
  5716  00381E  6C01               	negf	___fltol@f1,c
  5717  003820  0E00               	movlw	0
  5718  003822  2202               	addwfc	___fltol@f1+1,f,c
  5719  003824  2203               	addwfc	___fltol@f1+2,f,c
  5720  003826  2204               	addwfc	___fltol@f1+3,f,c
  5721  003828                     l4011:
  5722  003828  C001  F001         	movff	___fltol@f1,?___fltol
  5723  00382C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5724  003830  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5725  003834  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5726  003838  0012               	return		;funcret
  5727  00383A                     __end_of___fltol:
  5728                           	opt callstack 0
  5729                           
  5730 ;; *************** function ___flsub *****************
  5731 ;; Defined at:
  5732 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  b               4   25[COMRAM] long 
  5735 ;;  a               4   29[COMRAM] long 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  4   25[COMRAM] long 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5747 ;;      Params:         8       0       0       0       0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5750 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5751 ;;Total ram usage:        8 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    1
  5754 ;; This function calls:
  5755 ;;		___fladd
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;;		_efgtoa
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text12
  5763  003DBA                     __ptext12:
  5764                           	opt callstack 0
  5765  003DBA                     ___flsub:
  5766                           	opt callstack 25
  5767                           
  5768                           ;incstack = 0
  5769  003DBA  0E00               	movlw	0
  5770  003DBC  1A1E               	xorwf	___flsub@a,f,c
  5771  003DBE  0E00               	movlw	0
  5772  003DC0  1A1F               	xorwf	___flsub@a+1,f,c
  5773  003DC2  0E00               	movlw	0
  5774  003DC4  1A20               	xorwf	___flsub@a+2,f,c
  5775  003DC6  0E80               	movlw	128
  5776  003DC8  1A21               	xorwf	___flsub@a+3,f,c
  5777  003DCA  C01A  F001         	movff	___flsub@b,___fladd@b
  5778  003DCE  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5779  003DD2  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5780  003DD6  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5781  003DDA  C01E  F005         	movff	___flsub@a,___fladd@a
  5782  003DDE  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5783  003DE2  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5784  003DE6  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5785  003DEA  EC0E  F012         	call	___fladd	;wreg free
  5786  003DEE  C001  F01A         	movff	?___fladd,?___flsub
  5787  003DF2  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5788  003DF6  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5789  003DFA  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5790  003DFE  0012               	return		;funcret
  5791  003E00                     __end_of___flsub:
  5792                           	opt callstack 0
  5793                           
  5794 ;; *************** function ___fladd *****************
  5795 ;; Defined at:
  5796 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  b               4    0[COMRAM] long 
  5799 ;;  a               4    4[COMRAM] long 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  grs             1   15[COMRAM] unsigned char 
  5802 ;;  bexp            1   14[COMRAM] unsigned char 
  5803 ;;  aexp            1   13[COMRAM] unsigned char 
  5804 ;;  signs           1   12[COMRAM] unsigned char 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  4    0[COMRAM] unsigned char 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5814 ;;      Params:         8       0       0       0       0       0       0       0       0
  5815 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5816 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5817 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5818 ;;Total ram usage:       16 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;;		_efgtoa
  5825 ;;		___flsub
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text13
  5830  00241C                     __ptext13:
  5831                           	opt callstack 0
  5832  00241C                     ___fladd:
  5833                           	opt callstack 25
  5834                           
  5835                           ;incstack = 0
  5836  00241C  5004               	movf	___fladd@b+3,w,c
  5837  00241E  0B80               	andlw	128
  5838  002420  6E0D               	movwf	___fladd@signs,c
  5839  002422  5004               	movf	___fladd@b+3,w,c
  5840  002424  2404               	addwf	___fladd@b+3,w,c
  5841  002426  6E0F               	movwf	___fladd@bexp,c
  5842  002428  BE03               	btfsc	___fladd@b+2,7,c
  5843  00242A  800F               	bsf	___fladd@bexp,0,c
  5844  00242C  500F               	movf	___fladd@bexp,w,c
  5845  00242E  B4D8               	btfsc	status,2,c
  5846  002430  D00D               	goto	l3205
  5847  002432  280F               	incf	___fladd@bexp,w,c
  5848  002434  A4D8               	btfss	status,2,c
  5849  002436  D008               	goto	l3201
  5850  002438  0E00               	movlw	0
  5851  00243A  6E01               	movwf	___fladd@b,c
  5852  00243C  0E00               	movlw	0
  5853  00243E  6E02               	movwf	___fladd@b+1,c
  5854  002440  0E00               	movlw	0
  5855  002442  6E03               	movwf	___fladd@b+2,c
  5856  002444  0E00               	movlw	0
  5857  002446  6E04               	movwf	___fladd@b+3,c
  5858  002448                     l3201:
  5859  002448  8E03               	bsf	___fladd@b+2,7,c
  5860  00244A  D006               	goto	L8
  5861  00244C                     l3205:
  5862  00244C  0E00               	movlw	0
  5863  00244E  6E01               	movwf	___fladd@b,c
  5864  002450  0E00               	movlw	0
  5865  002452  6E02               	movwf	___fladd@b+1,c
  5866  002454  0E00               	movlw	0
  5867  002456  6E03               	movwf	___fladd@b+2,c
  5868  002458                     L8:
  5869  002458  0E00               	movlw	0
  5870  00245A  6E04               	movwf	___fladd@b+3,c
  5871  00245C  5008               	movf	___fladd@a+3,w,c
  5872  00245E  0B80               	andlw	128
  5873  002460  6E0E               	movwf	___fladd@aexp,c
  5874  002462  500D               	movf	___fladd@signs,w,c
  5875  002464  180E               	xorwf	___fladd@aexp,w,c
  5876  002466  A4D8               	btfss	status,2,c
  5877  002468  8C0D               	bsf	___fladd@signs,6,c
  5878  00246A  5008               	movf	___fladd@a+3,w,c
  5879  00246C  2408               	addwf	___fladd@a+3,w,c
  5880  00246E  6E0E               	movwf	___fladd@aexp,c
  5881  002470  BE07               	btfsc	___fladd@a+2,7,c
  5882  002472  800E               	bsf	___fladd@aexp,0,c
  5883  002474  500E               	movf	___fladd@aexp,w,c
  5884  002476  B4D8               	btfsc	status,2,c
  5885  002478  D00D               	goto	l3229
  5886  00247A  280E               	incf	___fladd@aexp,w,c
  5887  00247C  A4D8               	btfss	status,2,c
  5888  00247E  D008               	goto	l3225
  5889  002480  0E00               	movlw	0
  5890  002482  6E05               	movwf	___fladd@a,c
  5891  002484  0E00               	movlw	0
  5892  002486  6E06               	movwf	___fladd@a+1,c
  5893  002488  0E00               	movlw	0
  5894  00248A  6E07               	movwf	___fladd@a+2,c
  5895  00248C  0E00               	movlw	0
  5896  00248E  6E08               	movwf	___fladd@a+3,c
  5897  002490                     l3225:
  5898  002490  8E07               	bsf	___fladd@a+2,7,c
  5899  002492  D006               	goto	L9
  5900  002494                     l3229:
  5901  002494  0E00               	movlw	0
  5902  002496  6E05               	movwf	___fladd@a,c
  5903  002498  0E00               	movlw	0
  5904  00249A  6E06               	movwf	___fladd@a+1,c
  5905  00249C  0E00               	movlw	0
  5906  00249E  6E07               	movwf	___fladd@a+2,c
  5907  0024A0                     L9:
  5908  0024A0  0E00               	movlw	0
  5909  0024A2  6E08               	movwf	___fladd@a+3,c
  5910  0024A4  500F               	movf	___fladd@bexp,w,c
  5911  0024A6  5C0E               	subwf	___fladd@aexp,w,c
  5912  0024A8  B0D8               	btfsc	status,0,c
  5913  0024AA  D022               	goto	l3267
  5914  0024AC  AC0D               	btfss	___fladd@signs,6,c
  5915  0024AE  D002               	goto	l3237
  5916  0024B0  0E80               	movlw	128
  5917  0024B2  1A0D               	xorwf	___fladd@signs,f,c
  5918  0024B4                     l3237:
  5919  0024B4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5920  0024B8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5921  0024BC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5922  0024C0  C001  F010         	movff	___fladd@b,___fladd@grs
  5923  0024C4  C005  F001         	movff	___fladd@a,___fladd@b
  5924  0024C8  C010  F005         	movff	___fladd@grs,___fladd@a
  5925  0024CC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5926  0024D0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5927  0024D4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5928  0024D8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5929  0024DC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5930  0024E0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5931  0024E4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5932  0024E8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5933  0024EC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5934  0024F0                     l3267:
  5935  0024F0  0E00               	movlw	0
  5936  0024F2  6E10               	movwf	___fladd@grs,c
  5937  0024F4  500F               	movf	___fladd@bexp,w,c
  5938  0024F6  C00E  F009         	movff	___fladd@aexp,??___fladd
  5939  0024FA  6A0A               	clrf	(??___fladd+1)& (0+255),c
  5940  0024FC  5E09               	subwf	??___fladd,f,c
  5941  0024FE  0E00               	movlw	0
  5942  002500  5A0A               	subwfb	??___fladd+1,f,c
  5943  002502  BE0A               	btfsc	??___fladd+1,7,c
  5944  002504  D02C               	goto	l879
  5945  002506  500A               	movf	??___fladd+1,w,c
  5946  002508  E104               	bnz	u3120
  5947  00250A  0E1A               	movlw	26
  5948  00250C  5C09               	subwf	??___fladd,w,c
  5949  00250E  A0D8               	btfss	status,0,c
  5950  002510  D026               	goto	l879
  5951  002512                     u3120:
  5952  002512  5001               	movf	___fladd@b,w,c
  5953  002514  1002               	iorwf	___fladd@b+1,w,c
  5954  002516  1003               	iorwf	___fladd@b+2,w,c
  5955  002518  1004               	iorwf	___fladd@b+3,w,c
  5956  00251A  B4D8               	btfsc	status,2,c
  5957  00251C  D002               	goto	u3130
  5958  00251E  0E01               	movlw	1
  5959  002520  D001               	goto	u3140
  5960  002522                     u3130:
  5961  002522  0E00               	movlw	0
  5962  002524                     u3140:
  5963  002524  6E10               	movwf	___fladd@grs,c
  5964  002526  0E00               	movlw	0
  5965  002528  6E01               	movwf	___fladd@b,c
  5966  00252A  0E00               	movlw	0
  5967  00252C  6E02               	movwf	___fladd@b+1,c
  5968  00252E  0E00               	movlw	0
  5969  002530  6E03               	movwf	___fladd@b+2,c
  5970  002532  0E00               	movlw	0
  5971  002534  6E04               	movwf	___fladd@b+3,c
  5972  002536  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5973  00253A  D015               	goto	u3170
  5974  00253C                     l880:
  5975  00253C  A010               	btfss	___fladd@grs,0,c
  5976  00253E  D005               	goto	l3279
  5977  002540  90D8               	bcf	status,0,c
  5978  002542  3010               	rrcf	___fladd@grs,w,c
  5979  002544  0901               	iorlw	1
  5980  002546  6E10               	movwf	___fladd@grs,c
  5981  002548  D002               	goto	l3281
  5982  00254A                     l3279:
  5983  00254A  90D8               	bcf	status,0,c
  5984  00254C  3210               	rrcf	___fladd@grs,f,c
  5985  00254E                     l3281:
  5986  00254E  B001               	btfsc	___fladd@b,0,c
  5987  002550  8E10               	bsf	___fladd@grs,7,c
  5988  002552  3404               	rlcf	___fladd@b+3,w,c
  5989  002554  3204               	rrcf	___fladd@b+3,f,c
  5990  002556  3203               	rrcf	___fladd@b+2,f,c
  5991  002558  3202               	rrcf	___fladd@b+1,f,c
  5992  00255A  3201               	rrcf	___fladd@b,f,c
  5993  00255C  2A0F               	incf	___fladd@bexp,f,c
  5994  00255E                     l879:
  5995  00255E  500E               	movf	___fladd@aexp,w,c
  5996  002560  5C0F               	subwf	___fladd@bexp,w,c
  5997  002562  A0D8               	btfss	status,0,c
  5998  002564  D7EB               	goto	l880
  5999  002566                     u3170:
  6000  002566  BC0D               	btfsc	___fladd@signs,6,c
  6001  002568  D028               	goto	l3313
  6002  00256A  500F               	movf	___fladd@bexp,w,c
  6003  00256C  A4D8               	btfss	status,2,c
  6004  00256E  D009               	goto	l3295
  6005  002570  0E00               	movlw	0
  6006  002572  6E01               	movwf	?___fladd,c
  6007  002574  0E00               	movlw	0
  6008  002576  6E02               	movwf	?___fladd+1,c
  6009  002578  0E00               	movlw	0
  6010  00257A  6E03               	movwf	?___fladd+2,c
  6011  00257C  0E00               	movlw	0
  6012  00257E  6E04               	movwf	?___fladd+3,c
  6013  002580  0012               	return	
  6014  002582                     l3295:
  6015  002582  5005               	movf	___fladd@a,w,c
  6016  002584  2601               	addwf	___fladd@b,f,c
  6017  002586  5006               	movf	___fladd@a+1,w,c
  6018  002588  2202               	addwfc	___fladd@b+1,f,c
  6019  00258A  5007               	movf	___fladd@a+2,w,c
  6020  00258C  2203               	addwfc	___fladd@b+2,f,c
  6021  00258E  5008               	movf	___fladd@a+3,w,c
  6022  002590  2204               	addwfc	___fladd@b+3,f,c
  6023  002592  A004               	btfss	___fladd@b+3,0,c
  6024  002594  D071               	goto	u3300
  6025  002596  A010               	btfss	___fladd@grs,0,c
  6026  002598  D005               	goto	l3303
  6027  00259A  90D8               	bcf	status,0,c
  6028  00259C  3010               	rrcf	___fladd@grs,w,c
  6029  00259E  0901               	iorlw	1
  6030  0025A0  6E10               	movwf	___fladd@grs,c
  6031  0025A2  D002               	goto	l3305
  6032  0025A4                     l3303:
  6033  0025A4  90D8               	bcf	status,0,c
  6034  0025A6  3210               	rrcf	___fladd@grs,f,c
  6035  0025A8                     l3305:
  6036  0025A8  B001               	btfsc	___fladd@b,0,c
  6037  0025AA  8E10               	bsf	___fladd@grs,7,c
  6038  0025AC  3404               	rlcf	___fladd@b+3,w,c
  6039  0025AE  3204               	rrcf	___fladd@b+3,f,c
  6040  0025B0  3203               	rrcf	___fladd@b+2,f,c
  6041  0025B2  3202               	rrcf	___fladd@b+1,f,c
  6042  0025B4  3201               	rrcf	___fladd@b,f,c
  6043  0025B6  2A0F               	incf	___fladd@bexp,f,c
  6044  0025B8  D05F               	goto	u3300
  6045  0025BA                     l3313:
  6046  0025BA  5005               	movf	___fladd@a,w,c
  6047  0025BC  5C01               	subwf	___fladd@b,w,c
  6048  0025BE  5006               	movf	___fladd@a+1,w,c
  6049  0025C0  5802               	subwfb	___fladd@b+1,w,c
  6050  0025C2  5007               	movf	___fladd@a+2,w,c
  6051  0025C4  5803               	subwfb	___fladd@b+2,w,c
  6052  0025C6  5004               	movf	___fladd@b+3,w,c
  6053  0025C8  0A80               	xorlw	128
  6054  0025CA  6E09               	movwf	??___fladd& (0+255),c
  6055  0025CC  5008               	movf	___fladd@a+3,w,c
  6056  0025CE  0A80               	xorlw	128
  6057  0025D0  5809               	subwfb	??___fladd& (0+255),w,c
  6058  0025D2  B0D8               	btfsc	status,0,c
  6059  0025D4  D025               	goto	l3323
  6060  0025D6  5001               	movf	___fladd@b,w,c
  6061  0025D8  5C05               	subwf	___fladd@a,w,c
  6062  0025DA  6E09               	movwf	??___fladd& (0+255),c
  6063  0025DC  5002               	movf	___fladd@b+1,w,c
  6064  0025DE  5806               	subwfb	___fladd@a+1,w,c
  6065  0025E0  6E0A               	movwf	(??___fladd+1)& (0+255),c
  6066  0025E2  5003               	movf	___fladd@b+2,w,c
  6067  0025E4  5807               	subwfb	___fladd@a+2,w,c
  6068  0025E6  6E0B               	movwf	(??___fladd+2)& (0+255),c
  6069  0025E8  5004               	movf	___fladd@b+3,w,c
  6070  0025EA  5808               	subwfb	___fladd@a+3,w,c
  6071  0025EC  6E0C               	movwf	(??___fladd+3)& (0+255),c
  6072  0025EE  0EFF               	movlw	255
  6073  0025F0  2409               	addwf	??___fladd,w,c
  6074  0025F2  6E01               	movwf	___fladd@b,c
  6075  0025F4  0EFF               	movlw	255
  6076  0025F6  200A               	addwfc	??___fladd+1,w,c
  6077  0025F8  6E02               	movwf	___fladd@b+1,c
  6078  0025FA  0EFF               	movlw	255
  6079  0025FC  200B               	addwfc	??___fladd+2,w,c
  6080  0025FE  6E03               	movwf	___fladd@b+2,c
  6081  002600  0EFF               	movlw	255
  6082  002602  200C               	addwfc	??___fladd+3,w,c
  6083  002604  6E04               	movwf	___fladd@b+3,c
  6084  002606  0E80               	movlw	128
  6085  002608  1A0D               	xorwf	___fladd@signs,f,c
  6086  00260A  6C10               	negf	___fladd@grs,c
  6087  00260C  5010               	movf	___fladd@grs,w,c
  6088  00260E  A4D8               	btfss	status,2,c
  6089  002610  D00F               	goto	l895
  6090  002612  0E01               	movlw	1
  6091  002614  2601               	addwf	___fladd@b,f,c
  6092  002616  0E00               	movlw	0
  6093  002618  2202               	addwfc	___fladd@b+1,f,c
  6094  00261A  2203               	addwfc	___fladd@b+2,f,c
  6095  00261C  2204               	addwfc	___fladd@b+3,f,c
  6096  00261E  D008               	goto	l895
  6097  002620                     l3323:
  6098  002620  5005               	movf	___fladd@a,w,c
  6099  002622  5E01               	subwf	___fladd@b,f,c
  6100  002624  5006               	movf	___fladd@a+1,w,c
  6101  002626  5A02               	subwfb	___fladd@b+1,f,c
  6102  002628  5007               	movf	___fladd@a+2,w,c
  6103  00262A  5A03               	subwfb	___fladd@b+2,f,c
  6104  00262C  5008               	movf	___fladd@a+3,w,c
  6105  00262E  5A04               	subwfb	___fladd@b+3,f,c
  6106  002630                     l895:
  6107  002630  5001               	movf	___fladd@b,w,c
  6108  002632  1002               	iorwf	___fladd@b+1,w,c
  6109  002634  1003               	iorwf	___fladd@b+2,w,c
  6110  002636  1004               	iorwf	___fladd@b+3,w,c
  6111  002638  A4D8               	btfss	status,2,c
  6112  00263A  D01C               	goto	l3347
  6113  00263C  5010               	movf	___fladd@grs,w,c
  6114  00263E  A4D8               	btfss	status,2,c
  6115  002640  D019               	goto	l3347
  6116  002642  0E00               	movlw	0
  6117  002644  6E01               	movwf	?___fladd,c
  6118  002646  0E00               	movlw	0
  6119  002648  6E02               	movwf	?___fladd+1,c
  6120  00264A  0E00               	movlw	0
  6121  00264C  6E03               	movwf	?___fladd+2,c
  6122  00264E  0E00               	movlw	0
  6123  002650  6E04               	movwf	?___fladd+3,c
  6124  002652  0012               	return	
  6125  002654                     l3331:
  6126  002654  90D8               	bcf	status,0,c
  6127  002656  3601               	rlcf	___fladd@b,f,c
  6128  002658  3602               	rlcf	___fladd@b+1,f,c
  6129  00265A  3603               	rlcf	___fladd@b+2,f,c
  6130  00265C  3604               	rlcf	___fladd@b+3,f,c
  6131  00265E  BE10               	btfsc	___fladd@grs,7,c
  6132  002660  8001               	bsf	___fladd@b,0,c
  6133  002662  A010               	btfss	___fladd@grs,0,c
  6134  002664  D002               	goto	l3341
  6135  002666  80D8               	bsf	status,0,c
  6136  002668  D001               	goto	L10
  6137  00266A                     l3341:
  6138  00266A  90D8               	bcf	status,0,c
  6139  00266C                     L10:
  6140  00266C  3610               	rlcf	___fladd@grs,f,c
  6141  00266E  500F               	movf	___fladd@bexp,w,c
  6142  002670  A4D8               	btfss	status,2,c
  6143  002672  060F               	decf	___fladd@bexp,f,c
  6144  002674                     l3347:
  6145  002674  AE03               	btfss	___fladd@b+2,7,c
  6146  002676  D7EE               	goto	l3331
  6147  002678                     u3300:
  6148  002678  0E00               	movlw	0
  6149  00267A  6E0E               	movwf	___fladd@aexp,c
  6150  00267C  AE10               	btfss	___fladd@grs,7,c
  6151  00267E  D00B               	goto	l904
  6152  002680  C010  F009         	movff	___fladd@grs,??___fladd
  6153  002684  0E7F               	movlw	127
  6154  002686  1609               	andwf	??___fladd,f,c
  6155  002688  B4D8               	btfsc	status,2,c
  6156  00268A  D003               	goto	l905
  6157  00268C                     u3320:
  6158  00268C  0E01               	movlw	1
  6159  00268E  6E0E               	movwf	___fladd@aexp,c
  6160  002690  D002               	goto	l904
  6161  002692                     l905:
  6162  002692  B001               	btfsc	___fladd@b,0,c
  6163  002694  D7FB               	goto	u3320
  6164  002696                     l904:
  6165  002696  500E               	movf	___fladd@aexp,w,c
  6166  002698  B4D8               	btfsc	status,2,c
  6167  00269A  D020               	goto	l3367
  6168  00269C  0E01               	movlw	1
  6169  00269E  2601               	addwf	___fladd@b,f,c
  6170  0026A0  0E00               	movlw	0
  6171  0026A2  2202               	addwfc	___fladd@b+1,f,c
  6172  0026A4  2203               	addwfc	___fladd@b+2,f,c
  6173  0026A6  2204               	addwfc	___fladd@b+3,f,c
  6174  0026A8  A004               	btfss	___fladd@b+3,0,c
  6175  0026AA  D018               	goto	l3367
  6176  0026AC  C001  F009         	movff	___fladd@b,??___fladd
  6177  0026B0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6178  0026B4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6179  0026B8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6180  0026BC  340C               	rlcf	??___fladd+3,w,c
  6181  0026BE  320C               	rrcf	??___fladd+3,f,c
  6182  0026C0  320B               	rrcf	??___fladd+2,f,c
  6183  0026C2  320A               	rrcf	??___fladd+1,f,c
  6184  0026C4  3209               	rrcf	??___fladd,f,c
  6185  0026C6  C009  F001         	movff	??___fladd,___fladd@b
  6186  0026CA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6187  0026CE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6188  0026D2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6189  0026D6  280F               	incf	___fladd@bexp,w,c
  6190  0026D8  A4D8               	btfss	status,2,c
  6191  0026DA  2A0F               	incf	___fladd@bexp,f,c
  6192  0026DC                     l3367:
  6193  0026DC  280F               	incf	___fladd@bexp,w,c
  6194  0026DE  B4D8               	btfsc	status,2,c
  6195  0026E0  D003               	goto	u3380
  6196  0026E2  500F               	movf	___fladd@bexp,w,c
  6197  0026E4  A4D8               	btfss	status,2,c
  6198  0026E6  D00D               	goto	l3375
  6199  0026E8                     u3380:
  6200  0026E8  0E00               	movlw	0
  6201  0026EA  6E01               	movwf	___fladd@b,c
  6202  0026EC  0E00               	movlw	0
  6203  0026EE  6E02               	movwf	___fladd@b+1,c
  6204  0026F0  0E00               	movlw	0
  6205  0026F2  6E03               	movwf	___fladd@b+2,c
  6206  0026F4  0E00               	movlw	0
  6207  0026F6  6E04               	movwf	___fladd@b+3,c
  6208  0026F8  500F               	movf	___fladd@bexp,w,c
  6209  0026FA  A4D8               	btfss	status,2,c
  6210  0026FC  D002               	goto	l3375
  6211  0026FE  0E00               	movlw	0
  6212  002700  6E0D               	movwf	___fladd@signs,c
  6213  002702                     l3375:
  6214  002702  A00F               	btfss	___fladd@bexp,0,c
  6215  002704  D002               	goto	l3379
  6216  002706  8E03               	bsf	___fladd@b+2,7,c
  6217  002708  D001               	goto	l3381
  6218  00270A                     l3379:
  6219  00270A  9E03               	bcf	___fladd@b+2,7,c
  6220  00270C                     l3381:
  6221  00270C  90D8               	bcf	status,0,c
  6222  00270E  300F               	rrcf	___fladd@bexp,w,c
  6223  002710  6E04               	movwf	___fladd@b+3,c
  6224  002712  BE0D               	btfsc	___fladd@signs,7,c
  6225  002714  8E04               	bsf	___fladd@b+3,7,c
  6226  002716  C001  F001         	movff	___fladd@b,?___fladd
  6227  00271A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6228  00271E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6229  002722  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6230  002726  0012               	return		;funcret
  6231  002728                     __end_of___fladd:
  6232                           	opt callstack 0
  6233                           
  6234 ;; *************** function ___flneg *****************
  6235 ;; Defined at:
  6236 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  f1              4    0[COMRAM] unsigned char 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  4    0[COMRAM] unsigned char 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6250 ;;      Params:         4       0       0       0       0       0       0       0       0
  6251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6253 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6254 ;;Total ram usage:        4 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_efgtoa
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text14
  6264  003F08                     __ptext14:
  6265                           	opt callstack 0
  6266  003F08                     ___flneg:
  6267                           	opt callstack 26
  6268                           
  6269                           ;incstack = 0
  6270  003F08  5001               	movf	___flneg@f1,w,c
  6271  003F0A  1002               	iorwf	___flneg@f1+1,w,c
  6272  003F0C  1003               	iorwf	___flneg@f1+2,w,c
  6273  003F0E  1004               	iorwf	___flneg@f1+3,w,c
  6274  003F10  B4D8               	btfsc	status,2,c
  6275  003F12  D008               	goto	l3967
  6276  003F14  0E00               	movlw	0
  6277  003F16  1A01               	xorwf	___flneg@f1,f,c
  6278  003F18  0E00               	movlw	0
  6279  003F1A  1A02               	xorwf	___flneg@f1+1,f,c
  6280  003F1C  0E00               	movlw	0
  6281  003F1E  1A03               	xorwf	___flneg@f1+2,f,c
  6282  003F20  0E80               	movlw	128
  6283  003F22  1A04               	xorwf	___flneg@f1+3,f,c
  6284  003F24                     l3967:
  6285  003F24  C001  F001         	movff	___flneg@f1,?___flneg
  6286  003F28  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6287  003F2C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6288  003F30  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6289  003F34  0012               	return		;funcret
  6290  003F36                     __end_of___flneg:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function ___flmul *****************
  6294 ;; Defined at:
  6295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  b               4    0[COMRAM] unsigned char 
  6298 ;;  a               4    4[COMRAM] unsigned char 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  prod            4   19[COMRAM] struct .
  6301 ;;  grs             4   13[COMRAM] unsigned long 
  6302 ;;  temp            2   23[COMRAM] struct .
  6303 ;;  bexp            1   18[COMRAM] unsigned char 
  6304 ;;  aexp            1   17[COMRAM] unsigned char 
  6305 ;;  sign            1   12[COMRAM] unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  4    0[COMRAM] unsigned char 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0, prodl, prodh
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6315 ;;      Params:         8       0       0       0       0       0       0       0       0
  6316 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6318 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6319 ;;Total ram usage:       25 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_main
  6325 ;;		_efgtoa
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text15
  6330  0020CA                     __ptext15:
  6331                           	opt callstack 0
  6332  0020CA                     ___flmul:
  6333                           	opt callstack 26
  6334                           
  6335                           ;incstack = 0
  6336  0020CA  5004               	movf	___flmul@b+3,w,c
  6337  0020CC  0B80               	andlw	128
  6338  0020CE  6E0D               	movwf	___flmul@sign,c
  6339  0020D0  5004               	movf	___flmul@b+3,w,c
  6340  0020D2  2404               	addwf	___flmul@b+3,w,c
  6341  0020D4  6E13               	movwf	___flmul@bexp,c
  6342  0020D6  BE03               	btfsc	___flmul@b+2,7,c
  6343  0020D8  8013               	bsf	___flmul@bexp,0,c
  6344  0020DA  5013               	movf	___flmul@bexp,w,c
  6345  0020DC  B4D8               	btfsc	status,2,c
  6346  0020DE  D00D               	goto	l3723
  6347  0020E0  2813               	incf	___flmul@bexp,w,c
  6348  0020E2  A4D8               	btfss	status,2,c
  6349  0020E4  D008               	goto	l3721
  6350  0020E6  0E00               	movlw	0
  6351  0020E8  6E01               	movwf	___flmul@b,c
  6352  0020EA  0E00               	movlw	0
  6353  0020EC  6E02               	movwf	___flmul@b+1,c
  6354  0020EE  0E00               	movlw	0
  6355  0020F0  6E03               	movwf	___flmul@b+2,c
  6356  0020F2  0E00               	movlw	0
  6357  0020F4  6E04               	movwf	___flmul@b+3,c
  6358  0020F6                     l3721:
  6359  0020F6  8E03               	bsf	___flmul@b+2,7,c
  6360  0020F8  D008               	goto	l3725
  6361  0020FA                     l3723:
  6362  0020FA  0E00               	movlw	0
  6363  0020FC  6E01               	movwf	___flmul@b,c
  6364  0020FE  0E00               	movlw	0
  6365  002100  6E02               	movwf	___flmul@b+1,c
  6366  002102  0E00               	movlw	0
  6367  002104  6E03               	movwf	___flmul@b+2,c
  6368  002106  0E00               	movlw	0
  6369  002108  6E04               	movwf	___flmul@b+3,c
  6370  00210A                     l3725:
  6371  00210A  5008               	movf	___flmul@a+3,w,c
  6372  00210C  0B80               	andlw	128
  6373  00210E  1A0D               	xorwf	___flmul@sign,f,c
  6374  002110  5008               	movf	___flmul@a+3,w,c
  6375  002112  2408               	addwf	___flmul@a+3,w,c
  6376  002114  6E12               	movwf	___flmul@aexp,c
  6377  002116  BE07               	btfsc	___flmul@a+2,7,c
  6378  002118  8012               	bsf	___flmul@aexp,0,c
  6379  00211A  5012               	movf	___flmul@aexp,w,c
  6380  00211C  B4D8               	btfsc	status,2,c
  6381  00211E  D00D               	goto	l3741
  6382  002120  2812               	incf	___flmul@aexp,w,c
  6383  002122  A4D8               	btfss	status,2,c
  6384  002124  D008               	goto	l3739
  6385  002126  0E00               	movlw	0
  6386  002128  6E05               	movwf	___flmul@a,c
  6387  00212A  0E00               	movlw	0
  6388  00212C  6E06               	movwf	___flmul@a+1,c
  6389  00212E  0E00               	movlw	0
  6390  002130  6E07               	movwf	___flmul@a+2,c
  6391  002132  0E00               	movlw	0
  6392  002134  6E08               	movwf	___flmul@a+3,c
  6393  002136                     l3739:
  6394  002136  8E07               	bsf	___flmul@a+2,7,c
  6395  002138  D008               	goto	l964
  6396  00213A                     l3741:
  6397  00213A  0E00               	movlw	0
  6398  00213C  6E05               	movwf	___flmul@a,c
  6399  00213E  0E00               	movlw	0
  6400  002140  6E06               	movwf	___flmul@a+1,c
  6401  002142  0E00               	movlw	0
  6402  002144  6E07               	movwf	___flmul@a+2,c
  6403  002146  0E00               	movlw	0
  6404  002148  6E08               	movwf	___flmul@a+3,c
  6405  00214A                     l964:
  6406  00214A  5012               	movf	___flmul@aexp,w,c
  6407  00214C  B4D8               	btfsc	status,2,c
  6408  00214E  D003               	goto	u4140
  6409  002150  5013               	movf	___flmul@bexp,w,c
  6410  002152  A4D8               	btfss	status,2,c
  6411  002154  D009               	goto	l3749
  6412  002156                     u4140:
  6413  002156  0E00               	movlw	0
  6414  002158  6E01               	movwf	?___flmul,c
  6415  00215A  0E00               	movlw	0
  6416  00215C  6E02               	movwf	?___flmul+1,c
  6417  00215E  0E00               	movlw	0
  6418  002160  6E03               	movwf	?___flmul+2,c
  6419  002162  0E00               	movlw	0
  6420  002164  6E04               	movwf	?___flmul+3,c
  6421  002166  0012               	return	
  6422  002168                     l3749:
  6423  002168  5007               	movf	___flmul@a+2,w,c
  6424  00216A  0201               	mulwf	___flmul@b,c
  6425  00216C  CFF3 F018          	movff	prodl,___flmul@temp
  6426  002170  CFF4 F019          	movff	prodh,___flmul@temp+1
  6427  002174  5018               	movf	___flmul@temp,w,c
  6428  002176  6E0E               	movwf	___flmul@grs,c
  6429  002178  6A0F               	clrf	___flmul@grs+1,c
  6430  00217A  6A10               	clrf	___flmul@grs+2,c
  6431  00217C  6A11               	clrf	___flmul@grs+3,c
  6432  00217E  5019               	movf	___flmul@temp+1,w,c
  6433  002180  6E14               	movwf	___flmul@prod,c
  6434  002182  6A15               	clrf	___flmul@prod+1,c
  6435  002184  6A16               	clrf	___flmul@prod+2,c
  6436  002186  6A17               	clrf	___flmul@prod+3,c
  6437  002188  5006               	movf	___flmul@a+1,w,c
  6438  00218A  0202               	mulwf	___flmul@b+1,c
  6439  00218C  CFF3 F018          	movff	prodl,___flmul@temp
  6440  002190  CFF4 F019          	movff	prodh,___flmul@temp+1
  6441  002194  5018               	movf	___flmul@temp,w,c
  6442  002196  260E               	addwf	___flmul@grs,f,c
  6443  002198  0E00               	movlw	0
  6444  00219A  220F               	addwfc	___flmul@grs+1,f,c
  6445  00219C  2210               	addwfc	___flmul@grs+2,f,c
  6446  00219E  2211               	addwfc	___flmul@grs+3,f,c
  6447  0021A0  5019               	movf	___flmul@temp+1,w,c
  6448  0021A2  2614               	addwf	___flmul@prod,f,c
  6449  0021A4  0E00               	movlw	0
  6450  0021A6  2215               	addwfc	___flmul@prod+1,f,c
  6451  0021A8  2216               	addwfc	___flmul@prod+2,f,c
  6452  0021AA  2217               	addwfc	___flmul@prod+3,f,c
  6453  0021AC  5005               	movf	___flmul@a,w,c
  6454  0021AE  0203               	mulwf	___flmul@b+2,c
  6455  0021B0  CFF3 F018          	movff	prodl,___flmul@temp
  6456  0021B4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6457  0021B8  5018               	movf	___flmul@temp,w,c
  6458  0021BA  260E               	addwf	___flmul@grs,f,c
  6459  0021BC  0E00               	movlw	0
  6460  0021BE  220F               	addwfc	___flmul@grs+1,f,c
  6461  0021C0  2210               	addwfc	___flmul@grs+2,f,c
  6462  0021C2  2211               	addwfc	___flmul@grs+3,f,c
  6463  0021C4  5019               	movf	___flmul@temp+1,w,c
  6464  0021C6  2614               	addwf	___flmul@prod,f,c
  6465  0021C8  0E00               	movlw	0
  6466  0021CA  2215               	addwfc	___flmul@prod+1,f,c
  6467  0021CC  2216               	addwfc	___flmul@prod+2,f,c
  6468  0021CE  2217               	addwfc	___flmul@prod+3,f,c
  6469  0021D0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6470  0021D4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6471  0021D8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6472  0021DC  6A0E               	clrf	___flmul@grs,c
  6473  0021DE  5005               	movf	___flmul@a,w,c
  6474  0021E0  0202               	mulwf	___flmul@b+1,c
  6475  0021E2  CFF3 F018          	movff	prodl,___flmul@temp
  6476  0021E6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6477  0021EA  5018               	movf	___flmul@temp,w,c
  6478  0021EC  260E               	addwf	___flmul@grs,f,c
  6479  0021EE  5019               	movf	___flmul@temp+1,w,c
  6480  0021F0  220F               	addwfc	___flmul@grs+1,f,c
  6481  0021F2  0E00               	movlw	0
  6482  0021F4  2210               	addwfc	___flmul@grs+2,f,c
  6483  0021F6  0E00               	movlw	0
  6484  0021F8  2211               	addwfc	___flmul@grs+3,f,c
  6485  0021FA  5006               	movf	___flmul@a+1,w,c
  6486  0021FC  0201               	mulwf	___flmul@b,c
  6487  0021FE  CFF3 F018          	movff	prodl,___flmul@temp
  6488  002202  CFF4 F019          	movff	prodh,___flmul@temp+1
  6489  002206  5018               	movf	___flmul@temp,w,c
  6490  002208  260E               	addwf	___flmul@grs,f,c
  6491  00220A  5019               	movf	___flmul@temp+1,w,c
  6492  00220C  220F               	addwfc	___flmul@grs+1,f,c
  6493  00220E  0E00               	movlw	0
  6494  002210  2210               	addwfc	___flmul@grs+2,f,c
  6495  002212  0E00               	movlw	0
  6496  002214  2211               	addwfc	___flmul@grs+3,f,c
  6497  002216  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6498  00221A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6499  00221E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6500  002222  6A0E               	clrf	___flmul@grs,c
  6501  002224  5005               	movf	___flmul@a,w,c
  6502  002226  0201               	mulwf	___flmul@b,c
  6503  002228  CFF3 F018          	movff	prodl,___flmul@temp
  6504  00222C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6505  002230  5018               	movf	___flmul@temp,w,c
  6506  002232  260E               	addwf	___flmul@grs,f,c
  6507  002234  5019               	movf	___flmul@temp+1,w,c
  6508  002236  220F               	addwfc	___flmul@grs+1,f,c
  6509  002238  0E00               	movlw	0
  6510  00223A  2210               	addwfc	___flmul@grs+2,f,c
  6511  00223C  0E00               	movlw	0
  6512  00223E  2211               	addwfc	___flmul@grs+3,f,c
  6513  002240  5007               	movf	___flmul@a+2,w,c
  6514  002242  0202               	mulwf	___flmul@b+1,c
  6515  002244  CFF3 F018          	movff	prodl,___flmul@temp
  6516  002248  CFF4 F019          	movff	prodh,___flmul@temp+1
  6517  00224C  5018               	movf	___flmul@temp,w,c
  6518  00224E  2614               	addwf	___flmul@prod,f,c
  6519  002250  5019               	movf	___flmul@temp+1,w,c
  6520  002252  2215               	addwfc	___flmul@prod+1,f,c
  6521  002254  0E00               	movlw	0
  6522  002256  2216               	addwfc	___flmul@prod+2,f,c
  6523  002258  0E00               	movlw	0
  6524  00225A  2217               	addwfc	___flmul@prod+3,f,c
  6525  00225C  5006               	movf	___flmul@a+1,w,c
  6526  00225E  0203               	mulwf	___flmul@b+2,c
  6527  002260  CFF3 F018          	movff	prodl,___flmul@temp
  6528  002264  CFF4 F019          	movff	prodh,___flmul@temp+1
  6529  002268  5018               	movf	___flmul@temp,w,c
  6530  00226A  2614               	addwf	___flmul@prod,f,c
  6531  00226C  5019               	movf	___flmul@temp+1,w,c
  6532  00226E  2215               	addwfc	___flmul@prod+1,f,c
  6533  002270  0E00               	movlw	0
  6534  002272  2216               	addwfc	___flmul@prod+2,f,c
  6535  002274  0E00               	movlw	0
  6536  002276  2217               	addwfc	___flmul@prod+3,f,c
  6537  002278  5007               	movf	___flmul@a+2,w,c
  6538  00227A  0203               	mulwf	___flmul@b+2,c
  6539  00227C  CFF3 F018          	movff	prodl,___flmul@temp
  6540  002280  CFF4 F019          	movff	prodh,___flmul@temp+1
  6541  002284  5018               	movf	___flmul@temp,w,c
  6542  002286  6E09               	movwf	??___flmul& (0+255),c
  6543  002288  5019               	movf	___flmul@temp+1,w,c
  6544  00228A  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6545  00228C  6A0B               	clrf	(??___flmul+2)& (0+255),c
  6546  00228E  6A0C               	clrf	(??___flmul+3)& (0+255),c
  6547  002290  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6548  002294  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6549  002298  C009  F00A         	movff	??___flmul,??___flmul+1
  6550  00229C  6A09               	clrf	??___flmul,c
  6551  00229E  5009               	movf	??___flmul,w,c
  6552  0022A0  2614               	addwf	___flmul@prod,f,c
  6553  0022A2  500A               	movf	??___flmul+1,w,c
  6554  0022A4  2215               	addwfc	___flmul@prod+1,f,c
  6555  0022A6  500B               	movf	??___flmul+2,w,c
  6556  0022A8  2216               	addwfc	___flmul@prod+2,f,c
  6557  0022AA  500C               	movf	??___flmul+3,w,c
  6558  0022AC  2217               	addwfc	___flmul@prod+3,f,c
  6559  0022AE  C00E  F009         	movff	___flmul@grs,??___flmul
  6560  0022B2  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6561  0022B6  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6562  0022BA  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6563  0022BE  0E19               	movlw	25
  6564  0022C0  D005               	goto	u4150
  6565  0022C2                     u4155:
  6566  0022C2  90D8               	bcf	status,0,c
  6567  0022C4  320C               	rrcf	??___flmul+3,f,c
  6568  0022C6  320B               	rrcf	??___flmul+2,f,c
  6569  0022C8  320A               	rrcf	??___flmul+1,f,c
  6570  0022CA  3209               	rrcf	??___flmul,f,c
  6571  0022CC                     u4150:
  6572  0022CC  2EE8               	decfsz	wreg,f,c
  6573  0022CE  D7F9               	goto	u4155
  6574  0022D0  5009               	movf	??___flmul,w,c
  6575  0022D2  2614               	addwf	___flmul@prod,f,c
  6576  0022D4  500A               	movf	??___flmul+1,w,c
  6577  0022D6  2215               	addwfc	___flmul@prod+1,f,c
  6578  0022D8  500B               	movf	??___flmul+2,w,c
  6579  0022DA  2216               	addwfc	___flmul@prod+2,f,c
  6580  0022DC  500C               	movf	??___flmul+3,w,c
  6581  0022DE  2217               	addwfc	___flmul@prod+3,f,c
  6582  0022E0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6583  0022E4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6584  0022E8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6585  0022EC  6A0E               	clrf	___flmul@grs,c
  6586  0022EE  5012               	movf	___flmul@aexp,w,c
  6587  0022F0  C013  F009         	movff	___flmul@bexp,??___flmul
  6588  0022F4  6A0A               	clrf	(??___flmul+1)& (0+255),c
  6589  0022F6  2609               	addwf	??___flmul,f,c
  6590  0022F8  0E00               	movlw	0
  6591  0022FA  220A               	addwfc	??___flmul+1,f,c
  6592  0022FC  0E82               	movlw	130
  6593  0022FE  2409               	addwf	??___flmul,w,c
  6594  002300  6E18               	movwf	___flmul@temp,c
  6595  002302  0EFF               	movlw	255
  6596  002304  200A               	addwfc	??___flmul+1,w,c
  6597  002306  6E19               	movwf	___flmul@temp+1,c
  6598  002308  D00F               	goto	l3797
  6599  00230A                     l3791:
  6600  00230A  90D8               	bcf	status,0,c
  6601  00230C  3614               	rlcf	___flmul@prod,f,c
  6602  00230E  3615               	rlcf	___flmul@prod+1,f,c
  6603  002310  3616               	rlcf	___flmul@prod+2,f,c
  6604  002312  3617               	rlcf	___flmul@prod+3,f,c
  6605  002314  BE11               	btfsc	___flmul@grs+3,7,c
  6606  002316  8014               	bsf	___flmul@prod,0,c
  6607  002318  90D8               	bcf	status,0,c
  6608  00231A  360E               	rlcf	___flmul@grs,f,c
  6609  00231C  360F               	rlcf	___flmul@grs+1,f,c
  6610  00231E  3610               	rlcf	___flmul@grs+2,f,c
  6611  002320  3611               	rlcf	___flmul@grs+3,f,c
  6612  002322  0618               	decf	___flmul@temp,f,c
  6613  002324  A0D8               	btfss	status,0,c
  6614  002326  0619               	decf	___flmul@temp+1,f,c
  6615  002328                     l3797:
  6616  002328  AE16               	btfss	___flmul@prod+2,7,c
  6617  00232A  D7EF               	goto	l3791
  6618  00232C  0E00               	movlw	0
  6619  00232E  6E12               	movwf	___flmul@aexp,c
  6620  002330  AE11               	btfss	___flmul@grs+3,7,c
  6621  002332  D017               	goto	l973
  6622  002334  0EFF               	movlw	255
  6623  002336  140E               	andwf	___flmul@grs,w,c
  6624  002338  6E09               	movwf	??___flmul& (0+255),c
  6625  00233A  0EFF               	movlw	255
  6626  00233C  140F               	andwf	___flmul@grs+1,w,c
  6627  00233E  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6628  002340  0EFF               	movlw	255
  6629  002342  1410               	andwf	___flmul@grs+2,w,c
  6630  002344  6E0B               	movwf	(??___flmul+2)& (0+255),c
  6631  002346  0E7F               	movlw	127
  6632  002348  1411               	andwf	___flmul@grs+3,w,c
  6633  00234A  6E0C               	movwf	(??___flmul+3)& (0+255),c
  6634  00234C  5009               	movf	??___flmul,w,c
  6635  00234E  100A               	iorwf	??___flmul+1,w,c
  6636  002350  100B               	iorwf	??___flmul+2,w,c
  6637  002352  100C               	iorwf	??___flmul+3,w,c
  6638  002354  B4D8               	btfsc	status,2,c
  6639  002356  D003               	goto	l974
  6640  002358                     u4190:
  6641  002358  0E01               	movlw	1
  6642  00235A  6E12               	movwf	___flmul@aexp,c
  6643  00235C  D002               	goto	l973
  6644  00235E                     l974:
  6645  00235E  B014               	btfsc	___flmul@prod,0,c
  6646  002360  D7FB               	goto	u4190
  6647  002362                     l973:
  6648  002362  5012               	movf	___flmul@aexp,w,c
  6649  002364  B4D8               	btfsc	status,2,c
  6650  002366  D01F               	goto	l3817
  6651  002368  0E01               	movlw	1
  6652  00236A  2614               	addwf	___flmul@prod,f,c
  6653  00236C  0E00               	movlw	0
  6654  00236E  2215               	addwfc	___flmul@prod+1,f,c
  6655  002370  2216               	addwfc	___flmul@prod+2,f,c
  6656  002372  2217               	addwfc	___flmul@prod+3,f,c
  6657  002374  A017               	btfss	___flmul@prod+3,0,c
  6658  002376  D017               	goto	l3817
  6659  002378  C014  F009         	movff	___flmul@prod,??___flmul
  6660  00237C  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6661  002380  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6662  002384  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6663  002388  340C               	rlcf	??___flmul+3,w,c
  6664  00238A  320C               	rrcf	??___flmul+3,f,c
  6665  00238C  320B               	rrcf	??___flmul+2,f,c
  6666  00238E  320A               	rrcf	??___flmul+1,f,c
  6667  002390  3209               	rrcf	??___flmul,f,c
  6668  002392  C009  F014         	movff	??___flmul,___flmul@prod
  6669  002396  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6670  00239A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6671  00239E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6672  0023A2  4A18               	infsnz	___flmul@temp,f,c
  6673  0023A4  2A19               	incf	___flmul@temp+1,f,c
  6674  0023A6                     l3817:
  6675  0023A6  BE19               	btfsc	___flmul@temp+1,7,c
  6676  0023A8  D00D               	goto	l3821
  6677  0023AA  5019               	movf	___flmul@temp+1,w,c
  6678  0023AC  E103               	bnz	u4230
  6679  0023AE  2818               	incf	___flmul@temp,w,c
  6680  0023B0  A0D8               	btfss	status,0,c
  6681  0023B2  D008               	goto	l3821
  6682  0023B4                     u4230:
  6683  0023B4  0E00               	movlw	0
  6684  0023B6  6E14               	movwf	___flmul@prod,c
  6685  0023B8  0E00               	movlw	0
  6686  0023BA  6E15               	movwf	___flmul@prod+1,c
  6687  0023BC  0E80               	movlw	128
  6688  0023BE  6E16               	movwf	___flmul@prod+2,c
  6689  0023C0  0E7F               	movlw	127
  6690  0023C2  D020               	goto	L11
  6691  0023C4                     l3821:
  6692  0023C4  BE19               	btfsc	___flmul@temp+1,7,c
  6693  0023C6  D005               	goto	u4240
  6694  0023C8  5019               	movf	___flmul@temp+1,w,c
  6695  0023CA  E10E               	bnz	l981
  6696  0023CC  0418               	decf	___flmul@temp,w,c
  6697  0023CE  B0D8               	btfsc	status,0,c
  6698  0023D0  D00B               	goto	l981
  6699  0023D2                     u4240:
  6700  0023D2  0E00               	movlw	0
  6701  0023D4  6E14               	movwf	___flmul@prod,c
  6702  0023D6  0E00               	movlw	0
  6703  0023D8  6E15               	movwf	___flmul@prod+1,c
  6704  0023DA  0E00               	movlw	0
  6705  0023DC  6E16               	movwf	___flmul@prod+2,c
  6706  0023DE  0E00               	movlw	0
  6707  0023E0  6E17               	movwf	___flmul@prod+3,c
  6708  0023E2  0E00               	movlw	0
  6709  0023E4  6E0D               	movwf	___flmul@sign,c
  6710  0023E6  D00F               	goto	l3833
  6711  0023E8                     l981:
  6712  0023E8  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6713  0023EC  0EFF               	movlw	255
  6714  0023EE  1614               	andwf	___flmul@prod,f,c
  6715  0023F0  0EFF               	movlw	255
  6716  0023F2  1615               	andwf	___flmul@prod+1,f,c
  6717  0023F4  0E7F               	movlw	127
  6718  0023F6  1616               	andwf	___flmul@prod+2,f,c
  6719  0023F8  0E00               	movlw	0
  6720  0023FA  1617               	andwf	___flmul@prod+3,f,c
  6721  0023FC  B013               	btfsc	___flmul@bexp,0,c
  6722  0023FE  8E16               	bsf	___flmul@prod+2,7,c
  6723  002400  90D8               	bcf	status,0,c
  6724  002402  3013               	rrcf	___flmul@bexp,w,c
  6725  002404                     L11:
  6726  002404  6E17               	movwf	___flmul@prod+3,c
  6727  002406                     l3833:
  6728  002406  500D               	movf	___flmul@sign,w,c
  6729  002408  1217               	iorwf	___flmul@prod+3,f,c
  6730  00240A  C014  F001         	movff	___flmul@prod,?___flmul
  6731  00240E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6732  002412  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6733  002416  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6734  00241A  0012               	return		;funcret
  6735  00241C                     __end_of___flmul:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function ___flge *****************
  6739 ;; Defined at:
  6740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  ff1             4   25[COMRAM] unsigned char 
  6743 ;;  ff2             4   29[COMRAM] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;		None               void
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6755 ;;      Params:         8       0       0       0       0       0       0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6757 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6758 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6759 ;;Total ram usage:       12 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;;		_efgtoa
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text16
  6770  0035E4                     __ptext16:
  6771                           	opt callstack 0
  6772  0035E4                     ___flge:
  6773                           	opt callstack 26
  6774                           
  6775                           ;incstack = 0
  6776  0035E4  0E00               	movlw	0
  6777  0035E6  141A               	andwf	___flge@ff1,w,c
  6778  0035E8  6E22               	movwf	??___flge& (0+255),c
  6779  0035EA  0E00               	movlw	0
  6780  0035EC  141B               	andwf	___flge@ff1+1,w,c
  6781  0035EE  6E23               	movwf	(??___flge+1)& (0+255),c
  6782  0035F0  0E80               	movlw	128
  6783  0035F2  141C               	andwf	___flge@ff1+2,w,c
  6784  0035F4  6E24               	movwf	(??___flge+2)& (0+255),c
  6785  0035F6  0E7F               	movlw	127
  6786  0035F8  141D               	andwf	___flge@ff1+3,w,c
  6787  0035FA  6E25               	movwf	(??___flge+3)& (0+255),c
  6788  0035FC  5022               	movf	??___flge,w,c
  6789  0035FE  1023               	iorwf	??___flge+1,w,c
  6790  003600  1024               	iorwf	??___flge+2,w,c
  6791  003602  1025               	iorwf	??___flge+3,w,c
  6792  003604  A4D8               	btfss	status,2,c
  6793  003606  D008               	goto	l3945
  6794  003608  0E00               	movlw	0
  6795  00360A  6E1A               	movwf	___flge@ff1,c
  6796  00360C  0E00               	movlw	0
  6797  00360E  6E1B               	movwf	___flge@ff1+1,c
  6798  003610  0E00               	movlw	0
  6799  003612  6E1C               	movwf	___flge@ff1+2,c
  6800  003614  0E00               	movlw	0
  6801  003616  6E1D               	movwf	___flge@ff1+3,c
  6802  003618                     l3945:
  6803  003618  0E00               	movlw	0
  6804  00361A  141E               	andwf	___flge@ff2,w,c
  6805  00361C  6E22               	movwf	??___flge& (0+255),c
  6806  00361E  0E00               	movlw	0
  6807  003620  141F               	andwf	___flge@ff2+1,w,c
  6808  003622  6E23               	movwf	(??___flge+1)& (0+255),c
  6809  003624  0E80               	movlw	128
  6810  003626  1420               	andwf	___flge@ff2+2,w,c
  6811  003628  6E24               	movwf	(??___flge+2)& (0+255),c
  6812  00362A  0E7F               	movlw	127
  6813  00362C  1421               	andwf	___flge@ff2+3,w,c
  6814  00362E  6E25               	movwf	(??___flge+3)& (0+255),c
  6815  003630  5022               	movf	??___flge,w,c
  6816  003632  1023               	iorwf	??___flge+1,w,c
  6817  003634  1024               	iorwf	??___flge+2,w,c
  6818  003636  1025               	iorwf	??___flge+3,w,c
  6819  003638  A4D8               	btfss	status,2,c
  6820  00363A  D008               	goto	l3949
  6821  00363C  0E00               	movlw	0
  6822  00363E  6E1E               	movwf	___flge@ff2,c
  6823  003640  0E00               	movlw	0
  6824  003642  6E1F               	movwf	___flge@ff2+1,c
  6825  003644  0E00               	movlw	0
  6826  003646  6E20               	movwf	___flge@ff2+2,c
  6827  003648  0E00               	movlw	0
  6828  00364A  6E21               	movwf	___flge@ff2+3,c
  6829  00364C                     l3949:
  6830  00364C  AE1D               	btfss	___flge@ff1+3,7,c
  6831  00364E  D009               	goto	l3953
  6832  003650  6C1A               	negf	___flge@ff1,c
  6833  003652  1E1B               	comf	___flge@ff1+1,f,c
  6834  003654  B0D8               	btfsc	status,0,c
  6835  003656  2A1B               	incf	___flge@ff1+1,f,c
  6836  003658  1E1C               	comf	___flge@ff1+2,f,c
  6837  00365A  B0D8               	btfsc	status,0,c
  6838  00365C  2A1C               	incf	___flge@ff1+2,f,c
  6839  00365E  0E80               	movlw	128
  6840  003660  561D               	subfwb	___flge@ff1+3,f,c
  6841  003662                     l3953:
  6842  003662  AE21               	btfss	___flge@ff2+3,7,c
  6843  003664  D009               	goto	l615
  6844  003666  6C1E               	negf	___flge@ff2,c
  6845  003668  1E1F               	comf	___flge@ff2+1,f,c
  6846  00366A  B0D8               	btfsc	status,0,c
  6847  00366C  2A1F               	incf	___flge@ff2+1,f,c
  6848  00366E  1E20               	comf	___flge@ff2+2,f,c
  6849  003670  B0D8               	btfsc	status,0,c
  6850  003672  2A20               	incf	___flge@ff2+2,f,c
  6851  003674  0E80               	movlw	128
  6852  003676  5621               	subfwb	___flge@ff2+3,f,c
  6853  003678                     l615:
  6854  003678  0E00               	movlw	0
  6855  00367A  1A1A               	xorwf	___flge@ff1,f,c
  6856  00367C  0E00               	movlw	0
  6857  00367E  1A1B               	xorwf	___flge@ff1+1,f,c
  6858  003680  0E00               	movlw	0
  6859  003682  1A1C               	xorwf	___flge@ff1+2,f,c
  6860  003684  0E80               	movlw	128
  6861  003686  1A1D               	xorwf	___flge@ff1+3,f,c
  6862  003688  0E00               	movlw	0
  6863  00368A  1A1E               	xorwf	___flge@ff2,f,c
  6864  00368C  0E00               	movlw	0
  6865  00368E  1A1F               	xorwf	___flge@ff2+1,f,c
  6866  003690  0E00               	movlw	0
  6867  003692  1A20               	xorwf	___flge@ff2+2,f,c
  6868  003694  0E80               	movlw	128
  6869  003696  1A21               	xorwf	___flge@ff2+3,f,c
  6870  003698  501E               	movf	___flge@ff2,w,c
  6871  00369A  5C1A               	subwf	___flge@ff1,w,c
  6872  00369C  501F               	movf	___flge@ff2+1,w,c
  6873  00369E  581B               	subwfb	___flge@ff1+1,w,c
  6874  0036A0  5020               	movf	___flge@ff2+2,w,c
  6875  0036A2  581C               	subwfb	___flge@ff1+2,w,c
  6876  0036A4  5021               	movf	___flge@ff2+3,w,c
  6877  0036A6  581D               	subwfb	___flge@ff1+3,w,c
  6878  0036A8  B0D8               	btfsc	status,0,c
  6879  0036AA  D002               	goto	l3959
  6880  0036AC  90D8               	bcf	status,0,c
  6881  0036AE  0012               	return	
  6882  0036B0                     l3959:
  6883  0036B0  80D8               	bsf	status,0,c
  6884  0036B2  0012               	return		;funcret
  6885  0036B4                     __end_of___flge:
  6886                           	opt callstack 0
  6887                           
  6888 ;; *************** function ___fleq *****************
  6889 ;; Defined at:
  6890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  ff1             4    0[COMRAM] unsigned char 
  6893 ;;  ff2             4    4[COMRAM] unsigned char 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;		None               void
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6905 ;;      Params:         8       0       0       0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6907 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6908 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6909 ;;Total ram usage:       12 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;;		_efgtoa
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text17
  6920  003A12                     __ptext17:
  6921                           	opt callstack 0
  6922  003A12                     ___fleq:
  6923                           	opt callstack 26
  6924                           
  6925                           ;incstack = 0
  6926  003A12  0E00               	movlw	0
  6927  003A14  1401               	andwf	___fleq@ff1,w,c
  6928  003A16  6E09               	movwf	??___fleq& (0+255),c
  6929  003A18  0E00               	movlw	0
  6930  003A1A  1402               	andwf	___fleq@ff1+1,w,c
  6931  003A1C  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6932  003A1E  0E80               	movlw	128
  6933  003A20  1403               	andwf	___fleq@ff1+2,w,c
  6934  003A22  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6935  003A24  0E7F               	movlw	127
  6936  003A26  1404               	andwf	___fleq@ff1+3,w,c
  6937  003A28  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6938  003A2A  5009               	movf	??___fleq,w,c
  6939  003A2C  100A               	iorwf	??___fleq+1,w,c
  6940  003A2E  100B               	iorwf	??___fleq+2,w,c
  6941  003A30  100C               	iorwf	??___fleq+3,w,c
  6942  003A32  A4D8               	btfss	status,2,c
  6943  003A34  D008               	goto	l3929
  6944  003A36  0E00               	movlw	0
  6945  003A38  6E01               	movwf	___fleq@ff1,c
  6946  003A3A  0E00               	movlw	0
  6947  003A3C  6E02               	movwf	___fleq@ff1+1,c
  6948  003A3E  0E00               	movlw	0
  6949  003A40  6E03               	movwf	___fleq@ff1+2,c
  6950  003A42  0E00               	movlw	0
  6951  003A44  6E04               	movwf	___fleq@ff1+3,c
  6952  003A46                     l3929:
  6953  003A46  0E00               	movlw	0
  6954  003A48  1405               	andwf	___fleq@ff2,w,c
  6955  003A4A  6E09               	movwf	??___fleq& (0+255),c
  6956  003A4C  0E00               	movlw	0
  6957  003A4E  1406               	andwf	___fleq@ff2+1,w,c
  6958  003A50  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6959  003A52  0E80               	movlw	128
  6960  003A54  1407               	andwf	___fleq@ff2+2,w,c
  6961  003A56  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6962  003A58  0E7F               	movlw	127
  6963  003A5A  1408               	andwf	___fleq@ff2+3,w,c
  6964  003A5C  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6965  003A5E  5009               	movf	??___fleq,w,c
  6966  003A60  100A               	iorwf	??___fleq+1,w,c
  6967  003A62  100B               	iorwf	??___fleq+2,w,c
  6968  003A64  100C               	iorwf	??___fleq+3,w,c
  6969  003A66  A4D8               	btfss	status,2,c
  6970  003A68  D008               	goto	l3933
  6971  003A6A  0E00               	movlw	0
  6972  003A6C  6E05               	movwf	___fleq@ff2,c
  6973  003A6E  0E00               	movlw	0
  6974  003A70  6E06               	movwf	___fleq@ff2+1,c
  6975  003A72  0E00               	movlw	0
  6976  003A74  6E07               	movwf	___fleq@ff2+2,c
  6977  003A76  0E00               	movlw	0
  6978  003A78  6E08               	movwf	___fleq@ff2+3,c
  6979  003A7A                     l3933:
  6980  003A7A  5005               	movf	___fleq@ff2,w,c
  6981  003A7C  1801               	xorwf	___fleq@ff1,w,c
  6982  003A7E  E10A               	bnz	u4400
  6983  003A80  5006               	movf	___fleq@ff2+1,w,c
  6984  003A82  1802               	xorwf	___fleq@ff1+1,w,c
  6985  003A84  E107               	bnz	u4400
  6986  003A86  5007               	movf	___fleq@ff2+2,w,c
  6987  003A88  1803               	xorwf	___fleq@ff1+2,w,c
  6988  003A8A  E104               	bnz	u4400
  6989  003A8C  5008               	movf	___fleq@ff2+3,w,c
  6990  003A8E  1804               	xorwf	___fleq@ff1+3,w,c
  6991  003A90  B4D8               	btfsc	status,2,c
  6992  003A92  D002               	goto	l3937
  6993  003A94                     u4400:
  6994  003A94  90D8               	bcf	status,0,c
  6995  003A96  0012               	return	
  6996  003A98                     l3937:
  6997  003A98  80D8               	bsf	status,0,c
  6998  003A9A  0012               	return		;funcret
  6999  003A9C                     __end_of___fleq:
  7000                           	opt callstack 0
  7001                           
  7002 ;; *************** function ___fldiv *****************
  7003 ;; Defined at:
  7004 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  b               4    0[COMRAM] unsigned char 
  7007 ;;  a               4    4[COMRAM] unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  grs             4   19[COMRAM] unsigned long 
  7010 ;;  rem             4   12[COMRAM] unsigned long 
  7011 ;;  new_exp         2   17[COMRAM] short 
  7012 ;;  aexp            1   24[COMRAM] unsigned char 
  7013 ;;  bexp            1   23[COMRAM] unsigned char 
  7014 ;;  sign            1   16[COMRAM] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  4    0[COMRAM] unsigned char 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7024 ;;      Params:         8       0       0       0       0       0       0       0       0
  7025 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7026 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7027 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:       25 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;;		_efgtoa
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text18
  7039  002728                     __ptext18:
  7040                           	opt callstack 0
  7041  002728                     ___fldiv:
  7042                           	opt callstack 26
  7043                           
  7044                           ;incstack = 0
  7045  002728  5004               	movf	___fldiv@b+3,w,c
  7046  00272A  0B80               	andlw	128
  7047  00272C  6E11               	movwf	___fldiv@sign,c
  7048  00272E  5004               	movf	___fldiv@b+3,w,c
  7049  002730  2404               	addwf	___fldiv@b+3,w,c
  7050  002732  6E18               	movwf	___fldiv@bexp,c
  7051  002734  BE03               	btfsc	___fldiv@b+2,7,c
  7052  002736  8018               	bsf	___fldiv@bexp,0,c
  7053  002738  5018               	movf	___fldiv@bexp,w,c
  7054  00273A  B4D8               	btfsc	status,2,c
  7055  00273C  D00D               	goto	l3587
  7056  00273E  2818               	incf	___fldiv@bexp,w,c
  7057  002740  A4D8               	btfss	status,2,c
  7058  002742  D008               	goto	l3583
  7059  002744  0E00               	movlw	0
  7060  002746  6E01               	movwf	___fldiv@b,c
  7061  002748  0E00               	movlw	0
  7062  00274A  6E02               	movwf	___fldiv@b+1,c
  7063  00274C  0E00               	movlw	0
  7064  00274E  6E03               	movwf	___fldiv@b+2,c
  7065  002750  0E00               	movlw	0
  7066  002752  6E04               	movwf	___fldiv@b+3,c
  7067  002754                     l3583:
  7068  002754  8E03               	bsf	___fldiv@b+2,7,c
  7069  002756  D006               	goto	L12
  7070  002758                     l3587:
  7071  002758  0E00               	movlw	0
  7072  00275A  6E01               	movwf	___fldiv@b,c
  7073  00275C  0E00               	movlw	0
  7074  00275E  6E02               	movwf	___fldiv@b+1,c
  7075  002760  0E00               	movlw	0
  7076  002762  6E03               	movwf	___fldiv@b+2,c
  7077  002764                     L12:
  7078  002764  0E00               	movlw	0
  7079  002766  6E04               	movwf	___fldiv@b+3,c
  7080  002768  5008               	movf	___fldiv@a+3,w,c
  7081  00276A  0B80               	andlw	128
  7082  00276C  1A11               	xorwf	___fldiv@sign,f,c
  7083  00276E  5008               	movf	___fldiv@a+3,w,c
  7084  002770  2408               	addwf	___fldiv@a+3,w,c
  7085  002772  6E19               	movwf	___fldiv@aexp,c
  7086  002774  BE07               	btfsc	___fldiv@a+2,7,c
  7087  002776  8019               	bsf	___fldiv@aexp,0,c
  7088  002778  5019               	movf	___fldiv@aexp,w,c
  7089  00277A  B4D8               	btfsc	status,2,c
  7090  00277C  D00D               	goto	l3607
  7091  00277E  2819               	incf	___fldiv@aexp,w,c
  7092  002780  A4D8               	btfss	status,2,c
  7093  002782  D008               	goto	l3603
  7094  002784  0E00               	movlw	0
  7095  002786  6E05               	movwf	___fldiv@a,c
  7096  002788  0E00               	movlw	0
  7097  00278A  6E06               	movwf	___fldiv@a+1,c
  7098  00278C  0E00               	movlw	0
  7099  00278E  6E07               	movwf	___fldiv@a+2,c
  7100  002790  0E00               	movlw	0
  7101  002792  6E08               	movwf	___fldiv@a+3,c
  7102  002794                     l3603:
  7103  002794  8E07               	bsf	___fldiv@a+2,7,c
  7104  002796  D006               	goto	L13
  7105  002798                     l3607:
  7106  002798  0E00               	movlw	0
  7107  00279A  6E05               	movwf	___fldiv@a,c
  7108  00279C  0E00               	movlw	0
  7109  00279E  6E06               	movwf	___fldiv@a+1,c
  7110  0027A0  0E00               	movlw	0
  7111  0027A2  6E07               	movwf	___fldiv@a+2,c
  7112  0027A4                     L13:
  7113  0027A4  0E00               	movlw	0
  7114  0027A6  6E08               	movwf	___fldiv@a+3,c
  7115  0027A8  5005               	movf	___fldiv@a,w,c
  7116  0027AA  1006               	iorwf	___fldiv@a+1,w,c
  7117  0027AC  1007               	iorwf	___fldiv@a+2,w,c
  7118  0027AE  1008               	iorwf	___fldiv@a+3,w,c
  7119  0027B0  A4D8               	btfss	status,2,c
  7120  0027B2  D017               	goto	l3621
  7121  0027B4  0E00               	movlw	0
  7122  0027B6  6E01               	movwf	___fldiv@b,c
  7123  0027B8  0E00               	movlw	0
  7124  0027BA  6E02               	movwf	___fldiv@b+1,c
  7125  0027BC  0E00               	movlw	0
  7126  0027BE  6E03               	movwf	___fldiv@b+2,c
  7127  0027C0  0E00               	movlw	0
  7128  0027C2  6E04               	movwf	___fldiv@b+3,c
  7129  0027C4  0E80               	movlw	128
  7130  0027C6  1203               	iorwf	___fldiv@b+2,f,c
  7131  0027C8  0E7F               	movlw	127
  7132  0027CA  1204               	iorwf	___fldiv@b+3,f,c
  7133  0027CC                     l3615:
  7134  0027CC  5011               	movf	___fldiv@sign,w,c
  7135  0027CE  1204               	iorwf	___fldiv@b+3,f,c
  7136  0027D0  C001  F001         	movff	___fldiv@b,?___fldiv
  7137  0027D4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7138  0027D8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7139  0027DC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7140  0027E0  0012               	return	
  7141  0027E2                     l3621:
  7142  0027E2  5018               	movf	___fldiv@bexp,w,c
  7143  0027E4  A4D8               	btfss	status,2,c
  7144  0027E6  D009               	goto	l3629
  7145  0027E8  0E00               	movlw	0
  7146  0027EA  6E01               	movwf	?___fldiv,c
  7147  0027EC  0E00               	movlw	0
  7148  0027EE  6E02               	movwf	?___fldiv+1,c
  7149  0027F0  0E00               	movlw	0
  7150  0027F2  6E03               	movwf	?___fldiv+2,c
  7151  0027F4  0E00               	movlw	0
  7152  0027F6  6E04               	movwf	?___fldiv+3,c
  7153  0027F8  0012               	return	
  7154  0027FA                     l3629:
  7155  0027FA  5019               	movf	___fldiv@aexp,w,c
  7156  0027FC  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7157  002800  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7158  002802  5E09               	subwf	??___fldiv,f,c
  7159  002804  0E00               	movlw	0
  7160  002806  5A0A               	subwfb	??___fldiv+1,f,c
  7161  002808  0E7F               	movlw	127
  7162  00280A  2409               	addwf	??___fldiv,w,c
  7163  00280C  6E12               	movwf	___fldiv@new_exp,c
  7164  00280E  0E00               	movlw	0
  7165  002810  200A               	addwfc	??___fldiv+1,w,c
  7166  002812  6E13               	movwf	___fldiv@new_exp+1,c
  7167  002814  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7168  002818  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7169  00281C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7170  002820  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7171  002824  0E00               	movlw	0
  7172  002826  6E01               	movwf	___fldiv@b,c
  7173  002828  0E00               	movlw	0
  7174  00282A  6E02               	movwf	___fldiv@b+1,c
  7175  00282C  0E00               	movlw	0
  7176  00282E  6E03               	movwf	___fldiv@b+2,c
  7177  002830  0E00               	movlw	0
  7178  002832  6E04               	movwf	___fldiv@b+3,c
  7179  002834  0E00               	movlw	0
  7180  002836  6E14               	movwf	___fldiv@grs,c
  7181  002838  0E00               	movlw	0
  7182  00283A  6E15               	movwf	___fldiv@grs+1,c
  7183  00283C  0E00               	movlw	0
  7184  00283E  6E16               	movwf	___fldiv@grs+2,c
  7185  002840  0E00               	movlw	0
  7186  002842  6E17               	movwf	___fldiv@grs+3,c
  7187  002844  0E00               	movlw	0
  7188  002846  6E19               	movwf	___fldiv@aexp,c
  7189  002848  D028               	goto	l934
  7190  00284A                     l3639:
  7191  00284A  5019               	movf	___fldiv@aexp,w,c
  7192  00284C  B4D8               	btfsc	status,2,c
  7193  00284E  D011               	goto	l3647
  7194  002850  90D8               	bcf	status,0,c
  7195  002852  360D               	rlcf	___fldiv@rem,f,c
  7196  002854  360E               	rlcf	___fldiv@rem+1,f,c
  7197  002856  360F               	rlcf	___fldiv@rem+2,f,c
  7198  002858  3610               	rlcf	___fldiv@rem+3,f,c
  7199  00285A  90D8               	bcf	status,0,c
  7200  00285C  3601               	rlcf	___fldiv@b,f,c
  7201  00285E  3602               	rlcf	___fldiv@b+1,f,c
  7202  002860  3603               	rlcf	___fldiv@b+2,f,c
  7203  002862  3604               	rlcf	___fldiv@b+3,f,c
  7204  002864  BE17               	btfsc	___fldiv@grs+3,7,c
  7205  002866  8001               	bsf	___fldiv@b,0,c
  7206  002868  90D8               	bcf	status,0,c
  7207  00286A  3614               	rlcf	___fldiv@grs,f,c
  7208  00286C  3615               	rlcf	___fldiv@grs+1,f,c
  7209  00286E  3616               	rlcf	___fldiv@grs+2,f,c
  7210  002870  3617               	rlcf	___fldiv@grs+3,f,c
  7211  002872                     l3647:
  7212  002872  5005               	movf	___fldiv@a,w,c
  7213  002874  5C0D               	subwf	___fldiv@rem,w,c
  7214  002876  5006               	movf	___fldiv@a+1,w,c
  7215  002878  580E               	subwfb	___fldiv@rem+1,w,c
  7216  00287A  5007               	movf	___fldiv@a+2,w,c
  7217  00287C  580F               	subwfb	___fldiv@rem+2,w,c
  7218  00287E  5008               	movf	___fldiv@a+3,w,c
  7219  002880  5810               	subwfb	___fldiv@rem+3,w,c
  7220  002882  A0D8               	btfss	status,0,c
  7221  002884  D009               	goto	l3653
  7222  002886  8C17               	bsf	___fldiv@grs+3,6,c
  7223  002888  5005               	movf	___fldiv@a,w,c
  7224  00288A  5E0D               	subwf	___fldiv@rem,f,c
  7225  00288C  5006               	movf	___fldiv@a+1,w,c
  7226  00288E  5A0E               	subwfb	___fldiv@rem+1,f,c
  7227  002890  5007               	movf	___fldiv@a+2,w,c
  7228  002892  5A0F               	subwfb	___fldiv@rem+2,f,c
  7229  002894  5008               	movf	___fldiv@a+3,w,c
  7230  002896  5A10               	subwfb	___fldiv@rem+3,f,c
  7231  002898                     l3653:
  7232  002898  2A19               	incf	___fldiv@aexp,f,c
  7233  00289A                     l934:
  7234  00289A  0E19               	movlw	25
  7235  00289C  6419               	cpfsgt	___fldiv@aexp,c
  7236  00289E  D7D5               	goto	l3639
  7237  0028A0  500D               	movf	___fldiv@rem,w,c
  7238  0028A2  100E               	iorwf	___fldiv@rem+1,w,c
  7239  0028A4  100F               	iorwf	___fldiv@rem+2,w,c
  7240  0028A6  1010               	iorwf	___fldiv@rem+3,w,c
  7241  0028A8  B4D8               	btfsc	status,2,c
  7242  0028AA  D011               	goto	l3665
  7243  0028AC  8014               	bsf	___fldiv@grs,0,c
  7244  0028AE  D00F               	goto	l3665
  7245  0028B0                     l3659:
  7246  0028B0  90D8               	bcf	status,0,c
  7247  0028B2  3601               	rlcf	___fldiv@b,f,c
  7248  0028B4  3602               	rlcf	___fldiv@b+1,f,c
  7249  0028B6  3603               	rlcf	___fldiv@b+2,f,c
  7250  0028B8  3604               	rlcf	___fldiv@b+3,f,c
  7251  0028BA  BE17               	btfsc	___fldiv@grs+3,7,c
  7252  0028BC  8001               	bsf	___fldiv@b,0,c
  7253  0028BE  90D8               	bcf	status,0,c
  7254  0028C0  3614               	rlcf	___fldiv@grs,f,c
  7255  0028C2  3615               	rlcf	___fldiv@grs+1,f,c
  7256  0028C4  3616               	rlcf	___fldiv@grs+2,f,c
  7257  0028C6  3617               	rlcf	___fldiv@grs+3,f,c
  7258  0028C8  0612               	decf	___fldiv@new_exp,f,c
  7259  0028CA  A0D8               	btfss	status,0,c
  7260  0028CC  0613               	decf	___fldiv@new_exp+1,f,c
  7261  0028CE                     l3665:
  7262  0028CE  AE03               	btfss	___fldiv@b+2,7,c
  7263  0028D0  D7EF               	goto	l3659
  7264  0028D2  0E00               	movlw	0
  7265  0028D4  6E19               	movwf	___fldiv@aexp,c
  7266  0028D6  AE17               	btfss	___fldiv@grs+3,7,c
  7267  0028D8  D017               	goto	l945
  7268  0028DA  0EFF               	movlw	255
  7269  0028DC  1414               	andwf	___fldiv@grs,w,c
  7270  0028DE  6E09               	movwf	??___fldiv& (0+255),c
  7271  0028E0  0EFF               	movlw	255
  7272  0028E2  1415               	andwf	___fldiv@grs+1,w,c
  7273  0028E4  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7274  0028E6  0EFF               	movlw	255
  7275  0028E8  1416               	andwf	___fldiv@grs+2,w,c
  7276  0028EA  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7277  0028EC  0E7F               	movlw	127
  7278  0028EE  1417               	andwf	___fldiv@grs+3,w,c
  7279  0028F0  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7280  0028F2  5009               	movf	??___fldiv,w,c
  7281  0028F4  100A               	iorwf	??___fldiv+1,w,c
  7282  0028F6  100B               	iorwf	??___fldiv+2,w,c
  7283  0028F8  100C               	iorwf	??___fldiv+3,w,c
  7284  0028FA  B4D8               	btfsc	status,2,c
  7285  0028FC  D003               	goto	l946
  7286  0028FE                     u4000:
  7287  0028FE  0E01               	movlw	1
  7288  002900  6E19               	movwf	___fldiv@aexp,c
  7289  002902  D002               	goto	l945
  7290  002904                     l946:
  7291  002904  B001               	btfsc	___fldiv@b,0,c
  7292  002906  D7FB               	goto	u4000
  7293  002908                     l945:
  7294  002908  5019               	movf	___fldiv@aexp,w,c
  7295  00290A  B4D8               	btfsc	status,2,c
  7296  00290C  D01F               	goto	l3685
  7297  00290E  0E01               	movlw	1
  7298  002910  2601               	addwf	___fldiv@b,f,c
  7299  002912  0E00               	movlw	0
  7300  002914  2202               	addwfc	___fldiv@b+1,f,c
  7301  002916  2203               	addwfc	___fldiv@b+2,f,c
  7302  002918  2204               	addwfc	___fldiv@b+3,f,c
  7303  00291A  A004               	btfss	___fldiv@b+3,0,c
  7304  00291C  D017               	goto	l3685
  7305  00291E  C001  F009         	movff	___fldiv@b,??___fldiv
  7306  002922  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7307  002926  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7308  00292A  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7309  00292E  340C               	rlcf	??___fldiv+3,w,c
  7310  002930  320C               	rrcf	??___fldiv+3,f,c
  7311  002932  320B               	rrcf	??___fldiv+2,f,c
  7312  002934  320A               	rrcf	??___fldiv+1,f,c
  7313  002936  3209               	rrcf	??___fldiv,f,c
  7314  002938  C009  F001         	movff	??___fldiv,___fldiv@b
  7315  00293C  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7316  002940  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7317  002944  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7318  002948  4A12               	infsnz	___fldiv@new_exp,f,c
  7319  00294A  2A13               	incf	___fldiv@new_exp+1,f,c
  7320  00294C                     l3685:
  7321  00294C  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7322  00294E  D010               	goto	l3689
  7323  002950  5013               	movf	___fldiv@new_exp+1,w,c
  7324  002952  E103               	bnz	u4040
  7325  002954  2812               	incf	___fldiv@new_exp,w,c
  7326  002956  A0D8               	btfss	status,0,c
  7327  002958  D00B               	goto	l3689
  7328  00295A                     u4040:
  7329  00295A  0E00               	movlw	0
  7330  00295C  6E13               	movwf	___fldiv@new_exp+1,c
  7331  00295E  6812               	setf	___fldiv@new_exp,c
  7332  002960  0E00               	movlw	0
  7333  002962  6E01               	movwf	___fldiv@b,c
  7334  002964  0E00               	movlw	0
  7335  002966  6E02               	movwf	___fldiv@b+1,c
  7336  002968  0E00               	movlw	0
  7337  00296A  6E03               	movwf	___fldiv@b+2,c
  7338  00296C  0E00               	movlw	0
  7339  00296E  6E04               	movwf	___fldiv@b+3,c
  7340  002970                     l3689:
  7341  002970  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7342  002972  D005               	goto	u4050
  7343  002974  5013               	movf	___fldiv@new_exp+1,w,c
  7344  002976  E111               	bnz	l3693
  7345  002978  0412               	decf	___fldiv@new_exp,w,c
  7346  00297A  B0D8               	btfsc	status,0,c
  7347  00297C  D00E               	goto	l3693
  7348  00297E                     u4050:
  7349  00297E  0E00               	movlw	0
  7350  002980  6E13               	movwf	___fldiv@new_exp+1,c
  7351  002982  0E00               	movlw	0
  7352  002984  6E12               	movwf	___fldiv@new_exp,c
  7353  002986  0E00               	movlw	0
  7354  002988  6E01               	movwf	___fldiv@b,c
  7355  00298A  0E00               	movlw	0
  7356  00298C  6E02               	movwf	___fldiv@b+1,c
  7357  00298E  0E00               	movlw	0
  7358  002990  6E03               	movwf	___fldiv@b+2,c
  7359  002992  0E00               	movlw	0
  7360  002994  6E04               	movwf	___fldiv@b+3,c
  7361  002996  0E00               	movlw	0
  7362  002998  6E11               	movwf	___fldiv@sign,c
  7363  00299A                     l3693:
  7364  00299A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7365  00299E  A018               	btfss	___fldiv@bexp,0,c
  7366  0029A0  D002               	goto	l3699
  7367  0029A2  8E03               	bsf	___fldiv@b+2,7,c
  7368  0029A4  D001               	goto	l3701
  7369  0029A6                     l3699:
  7370  0029A6  9E03               	bcf	___fldiv@b+2,7,c
  7371  0029A8                     l3701:
  7372  0029A8  90D8               	bcf	status,0,c
  7373  0029AA  3018               	rrcf	___fldiv@bexp,w,c
  7374  0029AC  6E04               	movwf	___fldiv@b+3,c
  7375  0029AE  D70E               	goto	l3615
  7376  0029B0                     __end_of___fldiv:
  7377                           	opt callstack 0
  7378                           
  7379 ;; *************** function ___awmod *****************
  7380 ;; Defined at:
  7381 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  dividend        2    0[COMRAM] int 
  7384 ;;  divisor         2    2[COMRAM] int 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  sign            1    5[COMRAM] unsigned char 
  7387 ;;  counter         1    4[COMRAM] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2    0[COMRAM] int 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7397 ;;      Params:         4       0       0       0       0       0       0       0       0
  7398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7400 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7401 ;;Total ram usage:        6 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_efgtoa
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text19
  7411  003B96                     __ptext19:
  7412                           	opt callstack 0
  7413  003B96                     ___awmod:
  7414                           	opt callstack 26
  7415                           
  7416                           ;incstack = 0
  7417  003B96  0E00               	movlw	0
  7418  003B98  6E06               	movwf	___awmod@sign,c
  7419  003B9A  AE02               	btfss	___awmod@dividend+1,7,c
  7420  003B9C  D006               	goto	l3897
  7421  003B9E  6C01               	negf	___awmod@dividend,c
  7422  003BA0  1E02               	comf	___awmod@dividend+1,f,c
  7423  003BA2  B0D8               	btfsc	status,0,c
  7424  003BA4  2A02               	incf	___awmod@dividend+1,f,c
  7425  003BA6  0E01               	movlw	1
  7426  003BA8  6E06               	movwf	___awmod@sign,c
  7427  003BAA                     l3897:
  7428  003BAA  AE04               	btfss	___awmod@divisor+1,7,c
  7429  003BAC  D004               	goto	l3901
  7430  003BAE  6C03               	negf	___awmod@divisor,c
  7431  003BB0  1E04               	comf	___awmod@divisor+1,f,c
  7432  003BB2  B0D8               	btfsc	status,0,c
  7433  003BB4  2A04               	incf	___awmod@divisor+1,f,c
  7434  003BB6                     l3901:
  7435  003BB6  5003               	movf	___awmod@divisor,w,c
  7436  003BB8  1004               	iorwf	___awmod@divisor+1,w,c
  7437  003BBA  B4D8               	btfsc	status,2,c
  7438  003BBC  D018               	goto	l3917
  7439  003BBE  0E01               	movlw	1
  7440  003BC0  6E05               	movwf	___awmod@counter,c
  7441  003BC2  D004               	goto	l3907
  7442  003BC4                     l3905:
  7443  003BC4  90D8               	bcf	status,0,c
  7444  003BC6  3603               	rlcf	___awmod@divisor,f,c
  7445  003BC8  3604               	rlcf	___awmod@divisor+1,f,c
  7446  003BCA  2A05               	incf	___awmod@counter,f,c
  7447  003BCC                     l3907:
  7448  003BCC  AE04               	btfss	___awmod@divisor+1,7,c
  7449  003BCE  D7FA               	goto	l3905
  7450  003BD0                     u4350:
  7451  003BD0  5003               	movf	___awmod@divisor,w,c
  7452  003BD2  5C01               	subwf	___awmod@dividend,w,c
  7453  003BD4  5004               	movf	___awmod@divisor+1,w,c
  7454  003BD6  5802               	subwfb	___awmod@dividend+1,w,c
  7455  003BD8  A0D8               	btfss	status,0,c
  7456  003BDA  D004               	goto	l3913
  7457  003BDC  5003               	movf	___awmod@divisor,w,c
  7458  003BDE  5E01               	subwf	___awmod@dividend,f,c
  7459  003BE0  5004               	movf	___awmod@divisor+1,w,c
  7460  003BE2  5A02               	subwfb	___awmod@dividend+1,f,c
  7461  003BE4                     l3913:
  7462  003BE4  90D8               	bcf	status,0,c
  7463  003BE6  3204               	rrcf	___awmod@divisor+1,f,c
  7464  003BE8  3203               	rrcf	___awmod@divisor,f,c
  7465  003BEA  2E05               	decfsz	___awmod@counter,f,c
  7466  003BEC  D7F1               	goto	u4350
  7467  003BEE                     l3917:
  7468  003BEE  5006               	movf	___awmod@sign,w,c
  7469  003BF0  B4D8               	btfsc	status,2,c
  7470  003BF2  D004               	goto	l3921
  7471  003BF4  6C01               	negf	___awmod@dividend,c
  7472  003BF6  1E02               	comf	___awmod@dividend+1,f,c
  7473  003BF8  B0D8               	btfsc	status,0,c
  7474  003BFA  2A02               	incf	___awmod@dividend+1,f,c
  7475  003BFC                     l3921:
  7476  003BFC  C001  F001         	movff	___awmod@dividend,?___awmod
  7477  003C00  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7478  003C04  0012               	return		;funcret
  7479  003C06                     __end_of___awmod:
  7480                           	opt callstack 0
  7481                           
  7482 ;; *************** function ___awdiv *****************
  7483 ;; Defined at:
  7484 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  dividend        2    0[COMRAM] int 
  7487 ;;  divisor         2    2[COMRAM] int 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  quotient        2    6[COMRAM] int 
  7490 ;;  sign            1    5[COMRAM] unsigned char 
  7491 ;;  counter         1    4[COMRAM] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  2    0[COMRAM] int 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         4       0       0       0       0       0       0       0       0
  7502 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7504 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:        8 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_efgtoa
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text20
  7515  003A9C                     __ptext20:
  7516                           	opt callstack 0
  7517  003A9C                     ___awdiv:
  7518                           	opt callstack 26
  7519                           
  7520                           ;incstack = 0
  7521  003A9C  0E00               	movlw	0
  7522  003A9E  6E06               	movwf	___awdiv@sign,c
  7523  003AA0  AE04               	btfss	___awdiv@divisor+1,7,c
  7524  003AA2  D006               	goto	l3853
  7525  003AA4  6C03               	negf	___awdiv@divisor,c
  7526  003AA6  1E04               	comf	___awdiv@divisor+1,f,c
  7527  003AA8  B0D8               	btfsc	status,0,c
  7528  003AAA  2A04               	incf	___awdiv@divisor+1,f,c
  7529  003AAC  0E01               	movlw	1
  7530  003AAE  6E06               	movwf	___awdiv@sign,c
  7531  003AB0                     l3853:
  7532  003AB0  AE02               	btfss	___awdiv@dividend+1,7,c
  7533  003AB2  D006               	goto	l3859
  7534  003AB4  6C01               	negf	___awdiv@dividend,c
  7535  003AB6  1E02               	comf	___awdiv@dividend+1,f,c
  7536  003AB8  B0D8               	btfsc	status,0,c
  7537  003ABA  2A02               	incf	___awdiv@dividend+1,f,c
  7538  003ABC  0E01               	movlw	1
  7539  003ABE  1A06               	xorwf	___awdiv@sign,f,c
  7540  003AC0                     l3859:
  7541  003AC0  0E00               	movlw	0
  7542  003AC2  6E08               	movwf	___awdiv@quotient+1,c
  7543  003AC4  0E00               	movlw	0
  7544  003AC6  6E07               	movwf	___awdiv@quotient,c
  7545  003AC8  5003               	movf	___awdiv@divisor,w,c
  7546  003ACA  1004               	iorwf	___awdiv@divisor+1,w,c
  7547  003ACC  B4D8               	btfsc	status,2,c
  7548  003ACE  D01C               	goto	l3881
  7549  003AD0  0E01               	movlw	1
  7550  003AD2  6E05               	movwf	___awdiv@counter,c
  7551  003AD4  D004               	goto	l3867
  7552  003AD6                     l3865:
  7553  003AD6  90D8               	bcf	status,0,c
  7554  003AD8  3603               	rlcf	___awdiv@divisor,f,c
  7555  003ADA  3604               	rlcf	___awdiv@divisor+1,f,c
  7556  003ADC  2A05               	incf	___awdiv@counter,f,c
  7557  003ADE                     l3867:
  7558  003ADE  AE04               	btfss	___awdiv@divisor+1,7,c
  7559  003AE0  D7FA               	goto	l3865
  7560  003AE2                     u4290:
  7561  003AE2  90D8               	bcf	status,0,c
  7562  003AE4  3607               	rlcf	___awdiv@quotient,f,c
  7563  003AE6  3608               	rlcf	___awdiv@quotient+1,f,c
  7564  003AE8  5003               	movf	___awdiv@divisor,w,c
  7565  003AEA  5C01               	subwf	___awdiv@dividend,w,c
  7566  003AEC  5004               	movf	___awdiv@divisor+1,w,c
  7567  003AEE  5802               	subwfb	___awdiv@dividend+1,w,c
  7568  003AF0  A0D8               	btfss	status,0,c
  7569  003AF2  D005               	goto	l3877
  7570  003AF4  5003               	movf	___awdiv@divisor,w,c
  7571  003AF6  5E01               	subwf	___awdiv@dividend,f,c
  7572  003AF8  5004               	movf	___awdiv@divisor+1,w,c
  7573  003AFA  5A02               	subwfb	___awdiv@dividend+1,f,c
  7574  003AFC  8007               	bsf	___awdiv@quotient,0,c
  7575  003AFE                     l3877:
  7576  003AFE  90D8               	bcf	status,0,c
  7577  003B00  3204               	rrcf	___awdiv@divisor+1,f,c
  7578  003B02  3203               	rrcf	___awdiv@divisor,f,c
  7579  003B04  2E05               	decfsz	___awdiv@counter,f,c
  7580  003B06  D7ED               	goto	u4290
  7581  003B08                     l3881:
  7582  003B08  5006               	movf	___awdiv@sign,w,c
  7583  003B0A  B4D8               	btfsc	status,2,c
  7584  003B0C  D004               	goto	l3885
  7585  003B0E  6C07               	negf	___awdiv@quotient,c
  7586  003B10  1E08               	comf	___awdiv@quotient+1,f,c
  7587  003B12  B0D8               	btfsc	status,0,c
  7588  003B14  2A08               	incf	___awdiv@quotient+1,f,c
  7589  003B16                     l3885:
  7590  003B16  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7591  003B1A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7592  003B1E  0012               	return		;funcret
  7593  003B20                     __end_of___awdiv:
  7594                           	opt callstack 0
  7595                           
  7596 ;; *************** function _dtoa *****************
  7597 ;; Defined at:
  7598 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7601 ;;		 -> sprintf@f(6), 
  7602 ;;  d               8   29[COMRAM] long long 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  n               8   53[COMRAM] long long 
  7605 ;;  i               2   61[COMRAM] int 
  7606 ;;  s               2   51[COMRAM] int 
  7607 ;;  w               2   49[COMRAM] int 
  7608 ;;  p               2   47[COMRAM] int 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2   27[COMRAM] int 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7618 ;;      Params:        10       0       0       0       0       0       0       0       0
  7619 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7620 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7621 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7622 ;;Total ram usage:       36 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    4
  7625 ;; This function calls:
  7626 ;;		___aodiv
  7627 ;;		___aomod
  7628 ;;		_abs
  7629 ;;		_pad
  7630 ;; This function is called by:
  7631 ;;		_vfpfcnvrt
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text21
  7636  0029B0                     __ptext21:
  7637                           	opt callstack 0
  7638  0029B0                     _dtoa:
  7639                           	opt callstack 23
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7642                           
  7643                           ;incstack = 0
  7644  0029B0  C01E  F036         	movff	dtoa@d,dtoa@n
  7645  0029B4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7646  0029B8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7647  0029BC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7648  0029C0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7649  0029C4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7650  0029C8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7651  0029CC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7652                           
  7653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7654  0029D0  AE3D               	btfss	dtoa@n+7,7,c
  7655  0029D2  D002               	goto	u4560
  7656  0029D4  0E01               	movlw	1
  7657  0029D6  D001               	goto	u4570
  7658  0029D8                     u4560:
  7659  0029D8  0E00               	movlw	0
  7660  0029DA                     u4570:
  7661  0029DA  6E34               	movwf	dtoa@s,c
  7662  0029DC  6A35               	clrf	dtoa@s+1,c
  7663                           
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7665  0029DE  5034               	movf	dtoa@s,w,c
  7666  0029E0  1035               	iorwf	dtoa@s+1,w,c
  7667  0029E2  B4D8               	btfsc	status,2,c
  7668  0029E4  D010               	goto	l4033
  7669                           
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7671  0029E6  1E3D               	comf	dtoa@n+7,f,c
  7672  0029E8  1E3C               	comf	dtoa@n+6,f,c
  7673  0029EA  1E3B               	comf	dtoa@n+5,f,c
  7674  0029EC  1E3A               	comf	dtoa@n+4,f,c
  7675  0029EE  1E39               	comf	dtoa@n+3,f,c
  7676  0029F0  1E38               	comf	dtoa@n+2,f,c
  7677  0029F2  1E37               	comf	dtoa@n+1,f,c
  7678  0029F4  6C36               	negf	dtoa@n,c
  7679  0029F6  0E00               	movlw	0
  7680  0029F8  2237               	addwfc	dtoa@n+1,f,c
  7681  0029FA  2238               	addwfc	dtoa@n+2,f,c
  7682  0029FC  2239               	addwfc	dtoa@n+3,f,c
  7683  0029FE  223A               	addwfc	dtoa@n+4,f,c
  7684  002A00  223B               	addwfc	dtoa@n+5,f,c
  7685  002A02  223C               	addwfc	dtoa@n+6,f,c
  7686  002A04  223D               	addwfc	dtoa@n+7,f,c
  7687  002A06                     l4033:
  7688                           
  7689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7690  002A06  0100               	movlb	0	; () banked
  7691  002A08  AFCD               	btfss	(_prec+1)& (0+255),7,b
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7695  002A0A  925E               	bcf	_flags,1,c
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7699  002A0C  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  7700  002A0E  D005               	goto	u4600
  7701  002A10  51CD               	movf	(_prec+1)& (0+255),w,b
  7702  002A12  E108               	bnz	l180
  7703  002A14  05CC               	decf	_prec& (0+255),w,b
  7704  002A16  B0D8               	btfsc	status,0,c
  7705  002A18  D005               	goto	l180
  7706  002A1A                     u4600:
  7707                           
  7708                           ; BSR set to: 0
  7709  002A1A  0E00               	movlw	0
  7710  002A1C  6E31               	movwf	dtoa@p+1,c
  7711  002A1E  0E01               	movlw	1
  7712  002A20  6E30               	movwf	dtoa@p,c
  7713  002A22  D004               	goto	l182
  7714  002A24                     l180:
  7715                           
  7716                           ; BSR set to: 0
  7717  002A24  C0CC  F030         	movff	_prec,dtoa@p
  7718  002A28  C0CD  F031         	movff	_prec+1,dtoa@p+1
  7719  002A2C                     l182:
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7723  002A2C  C0CA  F032         	movff	_width,dtoa@w
  7724  002A30  C0CB  F033         	movff	_width+1,dtoa@w+1
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7728  002A34  5034               	movf	dtoa@s,w,c
  7729  002A36  1035               	iorwf	dtoa@s+1,w,c
  7730  002A38  A4D8               	btfss	status,2,c
  7731  002A3A  D002               	goto	u4620
  7732                           
  7733                           ; BSR set to: 0
  7734  002A3C  A45E               	btfss	_flags,2,c
  7735  002A3E  D003               	goto	l4047
  7736  002A40                     u4620:
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7740  002A40  0632               	decf	dtoa@w,f,c
  7741  002A42  A0D8               	btfss	status,0,c
  7742  002A44  0633               	decf	dtoa@w+1,f,c
  7743  002A46                     l4047:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7747  002A46  0E00               	movlw	0
  7748  002A48  6E3F               	movwf	dtoa@i+1,c
  7749  002A4A  0E4F               	movlw	79
  7750  002A4C  6E3E               	movwf	dtoa@i,c
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7754  002A4E  0E00               	movlw	0
  7755  002A50  0101               	movlb	1	; () banked
  7756  002A52  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7757                           
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7759  002A54  D07C               	goto	l4061
  7760  002A56                     l4051:
  7761                           
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7763  002A56  063E               	decf	dtoa@i,f,c
  7764  002A58  A0D8               	btfss	status,0,c
  7765  002A5A  063F               	decf	dtoa@i+1,f,c
  7766                           
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7768  002A5C  0E00               	movlw	low _dbuf
  7769  002A5E  243E               	addwf	dtoa@i,w,c
  7770  002A60  6ED9               	movwf	fsr2l,c
  7771  002A62  0E01               	movlw	high _dbuf
  7772  002A64  203F               	addwfc	dtoa@i+1,w,c
  7773  002A66  6EDA               	movwf	fsr2h,c
  7774  002A68  C036  F001         	movff	dtoa@n,___aomod@dividend
  7775  002A6C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7776  002A70  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7777  002A74  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7778  002A78  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7779  002A7C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7780  002A80  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7781  002A84  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7782  002A88  0E0A               	movlw	10
  7783  002A8A  6E09               	movwf	___aomod@divisor,c
  7784  002A8C  0E00               	movlw	0
  7785  002A8E  6E0A               	movwf	___aomod@divisor+1,c
  7786  002A90  0E00               	movlw	0
  7787  002A92  6E0B               	movwf	___aomod@divisor+2,c
  7788  002A94  0E00               	movlw	0
  7789  002A96  6E0C               	movwf	___aomod@divisor+3,c
  7790  002A98  0E00               	movlw	0
  7791  002A9A  6E0D               	movwf	___aomod@divisor+4,c
  7792  002A9C  0E00               	movlw	0
  7793  002A9E  6E0E               	movwf	___aomod@divisor+5,c
  7794  002AA0  0E00               	movlw	0
  7795  002AA2  6E0F               	movwf	___aomod@divisor+6,c
  7796  002AA4  0E00               	movlw	0
  7797  002AA6  6E10               	movwf	___aomod@divisor+7,c
  7798  002AA8  EC4D  F019         	call	___aomod	;wreg free
  7799  002AAC  C001  F026         	movff	?___aomod,??_dtoa
  7800  002AB0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7801  002AB4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7802  002AB8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7803  002ABC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7804  002AC0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7805  002AC4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7806  002AC8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7807  002ACC  C026  F013         	movff	??_dtoa,abs@a
  7808  002AD0  C028  F014         	movff	??_dtoa+2,abs@a+1
  7809  002AD4  EC3B  F01F         	call	_abs	;wreg free
  7810  002AD8  5013               	movf	?_abs,w,c
  7811  002ADA  0F30               	addlw	48
  7812  002ADC  6EDF               	movwf	indf2,c
  7813                           
  7814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7815  002ADE  0630               	decf	dtoa@p,f,c
  7816  002AE0  A0D8               	btfss	status,0,c
  7817  002AE2  0631               	decf	dtoa@p+1,f,c
  7818                           
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7820  002AE4  0632               	decf	dtoa@w,f,c
  7821  002AE6  A0D8               	btfss	status,0,c
  7822  002AE8  0633               	decf	dtoa@w+1,f,c
  7823                           
  7824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7825  002AEA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7826  002AEE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7827  002AF2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7828  002AF6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7829  002AFA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7830  002AFE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7831  002B02  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7832  002B06  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7833  002B0A  0E0A               	movlw	10
  7834  002B0C  6E09               	movwf	___aodiv@divisor,c
  7835  002B0E  0E00               	movlw	0
  7836  002B10  6E0A               	movwf	___aodiv@divisor+1,c
  7837  002B12  0E00               	movlw	0
  7838  002B14  6E0B               	movwf	___aodiv@divisor+2,c
  7839  002B16  0E00               	movlw	0
  7840  002B18  6E0C               	movwf	___aodiv@divisor+3,c
  7841  002B1A  0E00               	movlw	0
  7842  002B1C  6E0D               	movwf	___aodiv@divisor+4,c
  7843  002B1E  0E00               	movlw	0
  7844  002B20  6E0E               	movwf	___aodiv@divisor+5,c
  7845  002B22  0E00               	movlw	0
  7846  002B24  6E0F               	movwf	___aodiv@divisor+6,c
  7847  002B26  0E00               	movlw	0
  7848  002B28  6E10               	movwf	___aodiv@divisor+7,c
  7849  002B2A  ECD5  F016         	call	___aodiv	;wreg free
  7850  002B2E  C001  F036         	movff	?___aodiv,dtoa@n
  7851  002B32  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7852  002B36  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7853  002B3A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7854  002B3E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7855  002B42  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7856  002B46  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7857  002B4A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7858  002B4E                     l4061:
  7859                           
  7860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7861  002B4E  BE3F               	btfsc	dtoa@i+1,7,c
  7862  002B50  D01F               	goto	u4670
  7863  002B52  503F               	movf	dtoa@i+1,w,c
  7864  002B54  E103               	bnz	u4630
  7865  002B56  043E               	decf	dtoa@i,w,c
  7866  002B58  A0D8               	btfss	status,0,c
  7867  002B5A  D01A               	goto	u4670
  7868  002B5C                     u4630:
  7869  002B5C  5036               	movf	dtoa@n,w,c
  7870  002B5E  1037               	iorwf	dtoa@n+1,w,c
  7871  002B60  1038               	iorwf	dtoa@n+2,w,c
  7872  002B62  1039               	iorwf	dtoa@n+3,w,c
  7873  002B64  103A               	iorwf	dtoa@n+4,w,c
  7874  002B66  103B               	iorwf	dtoa@n+5,w,c
  7875  002B68  103C               	iorwf	dtoa@n+6,w,c
  7876  002B6A  103D               	iorwf	dtoa@n+7,w,c
  7877  002B6C  A4D8               	btfss	status,2,c
  7878  002B6E  D773               	goto	l4051
  7879  002B70  BE31               	btfsc	dtoa@p+1,7,c
  7880  002B72  D005               	goto	u4650
  7881  002B74  5031               	movf	dtoa@p+1,w,c
  7882  002B76  E102               	bnz	u4651
  7883  002B78  0430               	decf	dtoa@p,w,c
  7884  002B7A  B0D8               	btfsc	status,0,c
  7885  002B7C                     u4651:
  7886  002B7C  D76C               	goto	l4051
  7887  002B7E                     u4650:
  7888  002B7E  BE33               	btfsc	dtoa@w+1,7,c
  7889  002B80  D007               	goto	u4670
  7890  002B82  5033               	movf	dtoa@w+1,w,c
  7891  002B84  E103               	bnz	u4660
  7892  002B86  0432               	decf	dtoa@w,w,c
  7893  002B88  A0D8               	btfss	status,0,c
  7894  002B8A  D002               	goto	u4670
  7895  002B8C                     u4660:
  7896  002B8C  B25E               	btfsc	_flags,1,c
  7897  002B8E  D763               	goto	l4051
  7898  002B90                     u4670:
  7899                           
  7900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7901  002B90  5034               	movf	dtoa@s,w,c
  7902  002B92  1035               	iorwf	dtoa@s+1,w,c
  7903  002B94  A4D8               	btfss	status,2,c
  7904  002B96  D002               	goto	u4690
  7905  002B98  A45E               	btfss	_flags,2,c
  7906  002B9A  D017               	goto	l4085
  7907  002B9C                     u4690:
  7908                           
  7909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7910  002B9C  063E               	decf	dtoa@i,f,c
  7911  002B9E  A0D8               	btfss	status,0,c
  7912  002BA0  063F               	decf	dtoa@i+1,f,c
  7913                           
  7914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7915  002BA2  5034               	movf	dtoa@s,w,c
  7916  002BA4  1035               	iorwf	dtoa@s+1,w,c
  7917  002BA6  A4D8               	btfss	status,2,c
  7918  002BA8  D004               	goto	l4081
  7919  002BAA  0E00               	movlw	0
  7920  002BAC  6E2F               	movwf	_dtoa$415+1,c
  7921  002BAE  0E2B               	movlw	43
  7922  002BB0  D003               	goto	L14
  7923  002BB2                     l4081:
  7924  002BB2  0E00               	movlw	0
  7925  002BB4  6E2F               	movwf	_dtoa$415+1,c
  7926  002BB6  0E2D               	movlw	45
  7927  002BB8                     L14:
  7928  002BB8  6E2E               	movwf	_dtoa$415,c
  7929  002BBA  0E00               	movlw	low _dbuf
  7930  002BBC  243E               	addwf	dtoa@i,w,c
  7931  002BBE  6ED9               	movwf	fsr2l,c
  7932  002BC0  0E01               	movlw	high _dbuf
  7933  002BC2  203F               	addwfc	dtoa@i+1,w,c
  7934  002BC4  6EDA               	movwf	fsr2h,c
  7935  002BC6  C02E  FFDF         	movff	_dtoa$415,indf2
  7936  002BCA                     l4085:
  7937                           
  7938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7939  002BCA  C01C  F011         	movff	dtoa@fp,pad@fp
  7940  002BCE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7941  002BD2  0E00               	movlw	low _dbuf
  7942  002BD4  243E               	addwf	dtoa@i,w,c
  7943  002BD6  6E13               	movwf	pad@buf,c
  7944  002BD8  0E01               	movlw	high _dbuf
  7945  002BDA  203F               	addwfc	dtoa@i+1,w,c
  7946  002BDC  6E14               	movwf	pad@buf+1,c
  7947  002BDE  C032  F015         	movff	dtoa@w,pad@p
  7948  002BE2  C033  F016         	movff	dtoa@w+1,pad@p+1
  7949  002BE6  ECBE  F01C         	call	_pad	;wreg free
  7950  002BEA  C011  F01C         	movff	?_pad,?_dtoa
  7951  002BEE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7952  002BF2  0012               	return		;funcret
  7953  002BF4                     __end_of_dtoa:
  7954                           	opt callstack 0
  7955                           
  7956 ;; *************** function _pad *****************
  7957 ;; Defined at:
  7958 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7961 ;;		 -> sprintf@f(6), 
  7962 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7963 ;;		 -> dbuf(80), 
  7964 ;;  p               2   20[COMRAM] int 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  w               2   25[COMRAM] int 
  7967 ;;  i               2   23[COMRAM] int 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  2   16[COMRAM] int 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7977 ;;      Params:         6       0       0       0       0       0       0       0       0
  7978 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7980 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7981 ;;Total ram usage:       11 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    3
  7984 ;; This function calls:
  7985 ;;		_fputc
  7986 ;;		_fputs
  7987 ;;		_strlen
  7988 ;; This function is called by:
  7989 ;;		_dtoa
  7990 ;;		_efgtoa
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text22
  7995  00397C                     __ptext22:
  7996                           	opt callstack 0
  7997  00397C                     _pad:
  7998                           	opt callstack 23
  7999                           
  8000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8001                           
  8002                           ;incstack = 0
  8003  00397C  A05E               	btfss	_flags,0,c
  8004  00397E  D00A               	goto	l3395
  8005                           
  8006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8007  003980  C013  F00A         	movff	pad@buf,fputs@s
  8008  003984  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8009  003988  C011  F00C         	movff	pad@fp,fputs@fp
  8010  00398C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8011  003990  EC1F  F01F         	call	_fputs	;wreg free
  8012  003994                     l3395:
  8013                           
  8014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8015  003994  BE16               	btfsc	pad@p+1,7,c
  8016  003996  D005               	goto	l3399
  8017  003998  C015  F01A         	movff	pad@p,pad@w
  8018  00399C  C016  F01B         	movff	pad@p+1,pad@w+1
  8019  0039A0  D004               	goto	l169
  8020  0039A2                     l3399:
  8021  0039A2  0E00               	movlw	0
  8022  0039A4  6E1B               	movwf	pad@w+1,c
  8023  0039A6  0E00               	movlw	0
  8024  0039A8  6E1A               	movwf	pad@w,c
  8025  0039AA                     l169:
  8026                           
  8027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8028  0039AA  0E00               	movlw	0
  8029  0039AC  6E19               	movwf	pad@i+1,c
  8030  0039AE  0E00               	movlw	0
  8031  0039B0  6E18               	movwf	pad@i,c
  8032                           
  8033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8034  0039B2  D00C               	goto	l3405
  8035  0039B4                     l3401:
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8038  0039B4  0E00               	movlw	0
  8039  0039B6  6E02               	movwf	fputc@c+1,c
  8040  0039B8  0E20               	movlw	32
  8041  0039BA  6E01               	movwf	fputc@c,c
  8042  0039BC  C011  F003         	movff	pad@fp,fputc@fp
  8043  0039C0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8044  0039C4  EC6E  F01C         	call	_fputc	;wreg free
  8045                           
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8047  0039C8  4A18               	infsnz	pad@i,f,c
  8048  0039CA  2A19               	incf	pad@i+1,f,c
  8049  0039CC                     l3405:
  8050                           
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8052  0039CC  501A               	movf	pad@w,w,c
  8053  0039CE  5C18               	subwf	pad@i,w,c
  8054  0039D0  5019               	movf	pad@i+1,w,c
  8055  0039D2  0A80               	xorlw	128
  8056  0039D4  6E17               	movwf	??_pad& (0+255),c
  8057  0039D6  501B               	movf	pad@w+1,w,c
  8058  0039D8  0A80               	xorlw	128
  8059  0039DA  5817               	subwfb	??_pad& (0+255),w,c
  8060  0039DC  A0D8               	btfss	status,0,c
  8061  0039DE  D7EA               	goto	l3401
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8064  0039E0  B05E               	btfsc	_flags,0,c
  8065  0039E2  D00A               	goto	l3409
  8066                           
  8067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8068  0039E4  C013  F00A         	movff	pad@buf,fputs@s
  8069  0039E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8070  0039EC  C011  F00C         	movff	pad@fp,fputs@fp
  8071  0039F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8072  0039F4  EC1F  F01F         	call	_fputs	;wreg free
  8073  0039F8                     l3409:
  8074                           
  8075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8076  0039F8  C013  F001         	movff	pad@buf,strlen@s
  8077  0039FC  C014  F002         	movff	pad@buf+1,strlen@s+1
  8078  003A00  EC9B  F01F         	call	_strlen	;wreg free
  8079  003A04  501A               	movf	pad@w,w,c
  8080  003A06  2401               	addwf	?_strlen,w,c
  8081  003A08  6E11               	movwf	?_pad,c
  8082  003A0A  501B               	movf	pad@w+1,w,c
  8083  003A0C  2002               	addwfc	?_strlen+1,w,c
  8084  003A0E  6E12               	movwf	?_pad+1,c
  8085  003A10  0012               	return		;funcret
  8086  003A12                     __end_of_pad:
  8087                           	opt callstack 0
  8088                           
  8089 ;; *************** function _strlen *****************
  8090 ;; Defined at:
  8091 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8094 ;;		 -> dbuf(80), 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8097 ;;		 -> dbuf(80), 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  2    0[COMRAM] unsigned int 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8107 ;;      Params:         2       0       0       0       0       0       0       0       0
  8108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8110 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8111 ;;Total ram usage:        4 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_pad
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text23
  8121  003F36                     __ptext23:
  8122                           	opt callstack 0
  8123  003F36                     _strlen:
  8124                           	opt callstack 25
  8125                           
  8126                           ;incstack = 0
  8127  003F36  C001  F003         	movff	strlen@s,strlen@a
  8128  003F3A  C002  F004         	movff	strlen@s+1,strlen@a+1
  8129  003F3E  D002               	goto	l3179
  8130  003F40                     l3177:
  8131  003F40  4A01               	infsnz	strlen@s,f,c
  8132  003F42  2A02               	incf	strlen@s+1,f,c
  8133  003F44                     l3179:
  8134  003F44  C001  FFD9         	movff	strlen@s,fsr2l
  8135  003F48  C002  FFDA         	movff	strlen@s+1,fsr2h
  8136  003F4C  50DF               	movf	indf2,w,c
  8137  003F4E  A4D8               	btfss	status,2,c
  8138  003F50  D7F7               	goto	l3177
  8139  003F52  5003               	movf	strlen@a,w,c
  8140  003F54  5C01               	subwf	strlen@s,w,c
  8141  003F56  6E01               	movwf	?_strlen,c
  8142  003F58  5004               	movf	strlen@a+1,w,c
  8143  003F5A  5802               	subwfb	strlen@s+1,w,c
  8144  003F5C  6E02               	movwf	?_strlen+1,c
  8145  003F5E  0012               	return		;funcret
  8146  003F60                     __end_of_strlen:
  8147                           	opt callstack 0
  8148                           
  8149 ;; *************** function _fputs *****************
  8150 ;; Defined at:
  8151 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8154 ;;		 -> dbuf(80), 
  8155 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8156 ;;		 -> sprintf@f(6), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  i               2   14[COMRAM] int 
  8159 ;;  c               1   13[COMRAM] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  2    9[COMRAM] int 
  8162 ;; Registers used:
  8163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8169 ;;      Params:         4       0       0       0       0       0       0       0       0
  8170 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8172 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8173 ;;Total ram usage:        7 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    2
  8176 ;; This function calls:
  8177 ;;		_fputc
  8178 ;; This function is called by:
  8179 ;;		_pad
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text24
  8184  003E3E                     __ptext24:
  8185                           	opt callstack 0
  8186  003E3E                     _fputs:
  8187                           	opt callstack 23
  8188                           
  8189                           ;incstack = 0
  8190  003E3E  0E00               	movlw	0
  8191  003E40  6E10               	movwf	fputs@i+1,c
  8192  003E42  0E00               	movlw	0
  8193  003E44  6E0F               	movwf	fputs@i,c
  8194  003E46  D00B               	goto	l3173
  8195  003E48                     l3169:
  8196  003E48  C00E  F001         	movff	fputs@c,fputc@c
  8197  003E4C  6A02               	clrf	fputc@c+1,c
  8198  003E4E  C00C  F003         	movff	fputs@fp,fputc@fp
  8199  003E52  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8200  003E56  EC6E  F01C         	call	_fputc	;wreg free
  8201  003E5A  4A0F               	infsnz	fputs@i,f,c
  8202  003E5C  2A10               	incf	fputs@i+1,f,c
  8203  003E5E                     l3173:
  8204  003E5E  500F               	movf	fputs@i,w,c
  8205  003E60  240A               	addwf	fputs@s,w,c
  8206  003E62  6ED9               	movwf	fsr2l,c
  8207  003E64  5010               	movf	fputs@i+1,w,c
  8208  003E66  200B               	addwfc	fputs@s+1,w,c
  8209  003E68  6EDA               	movwf	fsr2h,c
  8210  003E6A  50DF               	movf	indf2,w,c
  8211  003E6C  6E0E               	movwf	fputs@c,c
  8212  003E6E  500E               	movf	fputs@c,w,c
  8213  003E70  B4D8               	btfsc	status,2,c
  8214  003E72  0012               	return	
  8215  003E74  D7E9               	goto	l3169
  8216  003E76                     __end_of_fputs:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function _fputc *****************
  8220 ;; Defined at:
  8221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  c               2    0[COMRAM] int 
  8224 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8225 ;;		 -> sprintf@f(6), 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2    0[COMRAM] int 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8237 ;;      Params:         4       0       0       0       0       0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8239 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8240 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8241 ;;Total ram usage:        9 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    1
  8244 ;; This function calls:
  8245 ;;		_putch
  8246 ;; This function is called by:
  8247 ;;		_pad
  8248 ;;		_vfpfcnvrt
  8249 ;;		_fputs
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text25
  8254  0038DC                     __ptext25:
  8255                           	opt callstack 0
  8256  0038DC                     _fputc:
  8257                           	opt callstack 26
  8258                           
  8259                           ;incstack = 0
  8260  0038DC  5003               	movf	fputc@fp,w,c
  8261  0038DE  1004               	iorwf	fputc@fp+1,w,c
  8262  0038E0  B4D8               	btfsc	status,2,c
  8263  0038E2  D004               	goto	u2960
  8264  0038E4  5003               	movf	fputc@fp,w,c
  8265  0038E6  1004               	iorwf	fputc@fp+1,w,c
  8266  0038E8  A4D8               	btfss	status,2,c
  8267  0038EA  D004               	goto	l3159
  8268  0038EC                     u2960:
  8269  0038EC  5001               	movf	fputc@c,w,c
  8270  0038EE  ECD6  F01F         	call	_putch
  8271  0038F2  0012               	return	
  8272  0038F4                     l3159:
  8273  0038F4  EE20 F004          	lfsr	2,4
  8274  0038F8  5003               	movf	fputc@fp,w,c
  8275  0038FA  26D9               	addwf	fsr2l,f,c
  8276  0038FC  5004               	movf	fputc@fp+1,w,c
  8277  0038FE  22DA               	addwfc	fsr2h,f,c
  8278  003900  50DE               	movf	postinc2,w,c
  8279  003902  10DE               	iorwf	postinc2,w,c
  8280  003904  B4D8               	btfsc	status,2,c
  8281  003906  D016               	goto	u2980
  8282  003908  EE20 F004          	lfsr	2,4
  8283  00390C  5003               	movf	fputc@fp,w,c
  8284  00390E  26D9               	addwf	fsr2l,f,c
  8285  003910  5004               	movf	fputc@fp+1,w,c
  8286  003912  22DA               	addwfc	fsr2h,f,c
  8287  003914  EE10 F002          	lfsr	1,2
  8288  003918  5003               	movf	fputc@fp,w,c
  8289  00391A  26E1               	addwf	fsr1l,f,c
  8290  00391C  5004               	movf	fputc@fp+1,w,c
  8291  00391E  22E2               	addwfc	fsr1h,f,c
  8292  003920  50DE               	movf	postinc2,w,c
  8293  003922  5CE6               	subwf	postinc1,w,c
  8294  003924  50E6               	movf	postinc1,w,c
  8295  003926  0A80               	xorlw	128
  8296  003928  6E09               	movwf	(??_fputc+4)& (0+255),c
  8297  00392A  50DE               	movf	postinc2,w,c
  8298  00392C  0A80               	xorlw	128
  8299  00392E  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  8300  003930  B0D8               	btfsc	status,0,c
  8301  003932  0012               	return	
  8302  003934                     u2980:
  8303  003934  EE20 F002          	lfsr	2,2
  8304  003938  5003               	movf	fputc@fp,w,c
  8305  00393A  26D9               	addwf	fsr2l,f,c
  8306  00393C  5004               	movf	fputc@fp+1,w,c
  8307  00393E  22DA               	addwfc	fsr2h,f,c
  8308  003940  CFDE F005          	movff	postinc2,??_fputc
  8309  003944  CFDD F006          	movff	postdec2,??_fputc+1
  8310  003948  C003  FFD9         	movff	fputc@fp,fsr2l
  8311  00394C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8312  003950  CFDE F007          	movff	postinc2,??_fputc+2
  8313  003954  CFDD F008          	movff	postdec2,??_fputc+3
  8314  003958  5005               	movf	??_fputc,w,c
  8315  00395A  2407               	addwf	??_fputc+2,w,c
  8316  00395C  6ED9               	movwf	fsr2l,c
  8317  00395E  5006               	movf	??_fputc+1,w,c
  8318  003960  2008               	addwfc	??_fputc+3,w,c
  8319  003962  6EDA               	movwf	fsr2h,c
  8320  003964  C001  FFDF         	movff	fputc@c,indf2
  8321  003968  EE20 F002          	lfsr	2,2
  8322  00396C  5003               	movf	fputc@fp,w,c
  8323  00396E  26D9               	addwf	fsr2l,f,c
  8324  003970  5004               	movf	fputc@fp+1,w,c
  8325  003972  22DA               	addwfc	fsr2h,f,c
  8326  003974  2ADE               	incf	postinc2,f,c
  8327  003976  0E00               	movlw	0
  8328  003978  22DD               	addwfc	postdec2,f,c
  8329  00397A  0012               	return		;funcret
  8330  00397C                     __end_of_fputc:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function _putch *****************
  8334 ;; Defined at:
  8335 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  c               1    wreg     unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  c               1    0[COMRAM] unsigned char 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0
  8350 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8352 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8353 ;;Total ram usage:        0 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_fputc
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text26
  8363  003FAC                     __ptext26:
  8364                           	opt callstack 0
  8365  003FAC                     _putch:
  8366                           	opt callstack 26
  8367                           
  8368                           ;incstack = 0
  8369  003FAC  0012               	return		;funcret
  8370  003FAE                     __end_of_putch:
  8371                           	opt callstack 0
  8372                           
  8373 ;; *************** function _abs *****************
  8374 ;; Defined at:
  8375 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  a               2   18[COMRAM] int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  2   18[COMRAM] int 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2, status,0
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8389 ;;      Params:         2       0       0       0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8392 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8393 ;;Total ram usage:        4 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; This function calls:
  8396 ;;		Nothing
  8397 ;; This function is called by:
  8398 ;;		_dtoa
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text27
  8403  003E76                     __ptext27:
  8404                           	opt callstack 0
  8405  003E76                     _abs:
  8406                           	opt callstack 26
  8407                           
  8408                           ;incstack = 0
  8409  003E76  BE14               	btfsc	abs@a+1,7,c
  8410  003E78  D005               	goto	u3460
  8411  003E7A  5014               	movf	abs@a+1,w,c
  8412  003E7C  E110               	bnz	l1036
  8413  003E7E  0413               	decf	abs@a,w,c
  8414  003E80  B0D8               	btfsc	status,0,c
  8415  003E82  D00D               	goto	l1036
  8416  003E84                     u3460:
  8417  003E84  C013  F015         	movff	abs@a,??_abs
  8418  003E88  C014  F016         	movff	abs@a+1,??_abs+1
  8419  003E8C  1E15               	comf	??_abs,f,c
  8420  003E8E  1E16               	comf	??_abs+1,f,c
  8421  003E90  4A15               	infsnz	??_abs,f,c
  8422  003E92  2A16               	incf	??_abs+1,f,c
  8423  003E94  C015  F013         	movff	??_abs,?_abs
  8424  003E98  C016  F014         	movff	??_abs+1,?_abs+1
  8425  003E9C  0012               	return	
  8426  003E9E                     l1036:
  8427  003E9E  C013  F013         	movff	abs@a,?_abs
  8428  003EA2  C014  F014         	movff	abs@a+1,?_abs+1
  8429  003EA6  0012               	return		;funcret
  8430  003EA8                     __end_of_abs:
  8431                           	opt callstack 0
  8432                           
  8433 ;; *************** function ___aomod *****************
  8434 ;; Defined at:
  8435 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  dividend        8    0[COMRAM] long long 
  8438 ;;  divisor         8    8[COMRAM] long long 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  sign            1   17[COMRAM] unsigned char 
  8441 ;;  counter         1   16[COMRAM] unsigned char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  8    0[COMRAM] long long 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8451 ;;      Params:        16       0       0       0       0       0       0       0       0
  8452 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8454 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8455 ;;Total ram usage:       18 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_dtoa
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text28
  8465  00329A                     __ptext28:
  8466                           	opt callstack 0
  8467  00329A                     ___aomod:
  8468                           	opt callstack 26
  8469                           
  8470                           ;incstack = 0
  8471  00329A  0E00               	movlw	0
  8472  00329C  6E12               	movwf	___aomod@sign,c
  8473  00329E  AE08               	btfss	___aomod@dividend+7,7,c
  8474  0032A0  D012               	goto	l3543
  8475  0032A2  1E08               	comf	___aomod@dividend+7,f,c
  8476  0032A4  1E07               	comf	___aomod@dividend+6,f,c
  8477  0032A6  1E06               	comf	___aomod@dividend+5,f,c
  8478  0032A8  1E05               	comf	___aomod@dividend+4,f,c
  8479  0032AA  1E04               	comf	___aomod@dividend+3,f,c
  8480  0032AC  1E03               	comf	___aomod@dividend+2,f,c
  8481  0032AE  1E02               	comf	___aomod@dividend+1,f,c
  8482  0032B0  6C01               	negf	___aomod@dividend,c
  8483  0032B2  0E00               	movlw	0
  8484  0032B4  2202               	addwfc	___aomod@dividend+1,f,c
  8485  0032B6  2203               	addwfc	___aomod@dividend+2,f,c
  8486  0032B8  2204               	addwfc	___aomod@dividend+3,f,c
  8487  0032BA  2205               	addwfc	___aomod@dividend+4,f,c
  8488  0032BC  2206               	addwfc	___aomod@dividend+5,f,c
  8489  0032BE  2207               	addwfc	___aomod@dividend+6,f,c
  8490  0032C0  2208               	addwfc	___aomod@dividend+7,f,c
  8491  0032C2  0E01               	movlw	1
  8492  0032C4  6E12               	movwf	___aomod@sign,c
  8493  0032C6                     l3543:
  8494  0032C6  AE10               	btfss	___aomod@divisor+7,7,c
  8495  0032C8  D010               	goto	l3547
  8496  0032CA  1E10               	comf	___aomod@divisor+7,f,c
  8497  0032CC  1E0F               	comf	___aomod@divisor+6,f,c
  8498  0032CE  1E0E               	comf	___aomod@divisor+5,f,c
  8499  0032D0  1E0D               	comf	___aomod@divisor+4,f,c
  8500  0032D2  1E0C               	comf	___aomod@divisor+3,f,c
  8501  0032D4  1E0B               	comf	___aomod@divisor+2,f,c
  8502  0032D6  1E0A               	comf	___aomod@divisor+1,f,c
  8503  0032D8  6C09               	negf	___aomod@divisor,c
  8504  0032DA  0E00               	movlw	0
  8505  0032DC  220A               	addwfc	___aomod@divisor+1,f,c
  8506  0032DE  220B               	addwfc	___aomod@divisor+2,f,c
  8507  0032E0  220C               	addwfc	___aomod@divisor+3,f,c
  8508  0032E2  220D               	addwfc	___aomod@divisor+4,f,c
  8509  0032E4  220E               	addwfc	___aomod@divisor+5,f,c
  8510  0032E6  220F               	addwfc	___aomod@divisor+6,f,c
  8511  0032E8  2210               	addwfc	___aomod@divisor+7,f,c
  8512  0032EA                     l3547:
  8513  0032EA  5009               	movf	___aomod@divisor,w,c
  8514  0032EC  100A               	iorwf	___aomod@divisor+1,w,c
  8515  0032EE  100B               	iorwf	___aomod@divisor+2,w,c
  8516  0032F0  100C               	iorwf	___aomod@divisor+3,w,c
  8517  0032F2  100D               	iorwf	___aomod@divisor+4,w,c
  8518  0032F4  100E               	iorwf	___aomod@divisor+5,w,c
  8519  0032F6  100F               	iorwf	___aomod@divisor+6,w,c
  8520  0032F8  1010               	iorwf	___aomod@divisor+7,w,c
  8521  0032FA  B4D8               	btfsc	status,2,c
  8522  0032FC  D03C               	goto	l3563
  8523  0032FE  0E01               	movlw	1
  8524  003300  6E11               	movwf	___aomod@counter,c
  8525  003302  D00A               	goto	l3553
  8526  003304                     l3551:
  8527  003304  90D8               	bcf	status,0,c
  8528  003306  3609               	rlcf	___aomod@divisor,f,c
  8529  003308  360A               	rlcf	___aomod@divisor+1,f,c
  8530  00330A  360B               	rlcf	___aomod@divisor+2,f,c
  8531  00330C  360C               	rlcf	___aomod@divisor+3,f,c
  8532  00330E  360D               	rlcf	___aomod@divisor+4,f,c
  8533  003310  360E               	rlcf	___aomod@divisor+5,f,c
  8534  003312  360F               	rlcf	___aomod@divisor+6,f,c
  8535  003314  3610               	rlcf	___aomod@divisor+7,f,c
  8536  003316  2A11               	incf	___aomod@counter,f,c
  8537  003318                     l3553:
  8538  003318  AE10               	btfss	___aomod@divisor+7,7,c
  8539  00331A  D7F4               	goto	l3551
  8540  00331C                     u3810:
  8541  00331C  5009               	movf	___aomod@divisor,w,c
  8542  00331E  5C01               	subwf	___aomod@dividend,w,c
  8543  003320  500A               	movf	___aomod@divisor+1,w,c
  8544  003322  5802               	subwfb	___aomod@dividend+1,w,c
  8545  003324  500B               	movf	___aomod@divisor+2,w,c
  8546  003326  5803               	subwfb	___aomod@dividend+2,w,c
  8547  003328  500C               	movf	___aomod@divisor+3,w,c
  8548  00332A  5804               	subwfb	___aomod@dividend+3,w,c
  8549  00332C  500D               	movf	___aomod@divisor+4,w,c
  8550  00332E  5805               	subwfb	___aomod@dividend+4,w,c
  8551  003330  500E               	movf	___aomod@divisor+5,w,c
  8552  003332  5806               	subwfb	___aomod@dividend+5,w,c
  8553  003334  500F               	movf	___aomod@divisor+6,w,c
  8554  003336  5807               	subwfb	___aomod@dividend+6,w,c
  8555  003338  5010               	movf	___aomod@divisor+7,w,c
  8556  00333A  5808               	subwfb	___aomod@dividend+7,w,c
  8557  00333C  A0D8               	btfss	status,0,c
  8558  00333E  D010               	goto	l3559
  8559  003340  5009               	movf	___aomod@divisor,w,c
  8560  003342  5E01               	subwf	___aomod@dividend,f,c
  8561  003344  500A               	movf	___aomod@divisor+1,w,c
  8562  003346  5A02               	subwfb	___aomod@dividend+1,f,c
  8563  003348  500B               	movf	___aomod@divisor+2,w,c
  8564  00334A  5A03               	subwfb	___aomod@dividend+2,f,c
  8565  00334C  500C               	movf	___aomod@divisor+3,w,c
  8566  00334E  5A04               	subwfb	___aomod@dividend+3,f,c
  8567  003350  500D               	movf	___aomod@divisor+4,w,c
  8568  003352  5A05               	subwfb	___aomod@dividend+4,f,c
  8569  003354  500E               	movf	___aomod@divisor+5,w,c
  8570  003356  5A06               	subwfb	___aomod@dividend+5,f,c
  8571  003358  500F               	movf	___aomod@divisor+6,w,c
  8572  00335A  5A07               	subwfb	___aomod@dividend+6,f,c
  8573  00335C  5010               	movf	___aomod@divisor+7,w,c
  8574  00335E  5A08               	subwfb	___aomod@dividend+7,f,c
  8575  003360                     l3559:
  8576  003360  90D8               	bcf	status,0,c
  8577  003362  3210               	rrcf	___aomod@divisor+7,f,c
  8578  003364  320F               	rrcf	___aomod@divisor+6,f,c
  8579  003366  320E               	rrcf	___aomod@divisor+5,f,c
  8580  003368  320D               	rrcf	___aomod@divisor+4,f,c
  8581  00336A  320C               	rrcf	___aomod@divisor+3,f,c
  8582  00336C  320B               	rrcf	___aomod@divisor+2,f,c
  8583  00336E  320A               	rrcf	___aomod@divisor+1,f,c
  8584  003370  3209               	rrcf	___aomod@divisor,f,c
  8585  003372  2E11               	decfsz	___aomod@counter,f,c
  8586  003374  D7D3               	goto	u3810
  8587  003376                     l3563:
  8588  003376  5012               	movf	___aomod@sign,w,c
  8589  003378  B4D8               	btfsc	status,2,c
  8590  00337A  D010               	goto	l3567
  8591  00337C  1E08               	comf	___aomod@dividend+7,f,c
  8592  00337E  1E07               	comf	___aomod@dividend+6,f,c
  8593  003380  1E06               	comf	___aomod@dividend+5,f,c
  8594  003382  1E05               	comf	___aomod@dividend+4,f,c
  8595  003384  1E04               	comf	___aomod@dividend+3,f,c
  8596  003386  1E03               	comf	___aomod@dividend+2,f,c
  8597  003388  1E02               	comf	___aomod@dividend+1,f,c
  8598  00338A  6C01               	negf	___aomod@dividend,c
  8599  00338C  0E00               	movlw	0
  8600  00338E  2202               	addwfc	___aomod@dividend+1,f,c
  8601  003390  2203               	addwfc	___aomod@dividend+2,f,c
  8602  003392  2204               	addwfc	___aomod@dividend+3,f,c
  8603  003394  2205               	addwfc	___aomod@dividend+4,f,c
  8604  003396  2206               	addwfc	___aomod@dividend+5,f,c
  8605  003398  2207               	addwfc	___aomod@dividend+6,f,c
  8606  00339A  2208               	addwfc	___aomod@dividend+7,f,c
  8607  00339C                     l3567:
  8608  00339C  C001  F001         	movff	___aomod@dividend,?___aomod
  8609  0033A0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8610  0033A4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8611  0033A8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8612  0033AC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8613  0033B0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8614  0033B4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8615  0033B8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8616  0033BC  0012               	return		;funcret
  8617  0033BE                     __end_of___aomod:
  8618                           	opt callstack 0
  8619                           
  8620 ;; *************** function ___aodiv *****************
  8621 ;; Defined at:
  8622 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  dividend        8    0[COMRAM] long long 
  8625 ;;  divisor         8    8[COMRAM] long long 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  quotient        8   18[COMRAM] long long 
  8628 ;;  sign            1   17[COMRAM] unsigned char 
  8629 ;;  counter         1   16[COMRAM] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  8    0[COMRAM] long long 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8639 ;;      Params:        16       0       0       0       0       0       0       0       0
  8640 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8642 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8643 ;;Total ram usage:       26 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_dtoa
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text29
  8653  002DAA                     __ptext29:
  8654                           	opt callstack 0
  8655  002DAA                     ___aodiv:
  8656                           	opt callstack 26
  8657                           
  8658                           ;incstack = 0
  8659  002DAA  0E00               	movlw	0
  8660  002DAC  6E12               	movwf	___aodiv@sign,c
  8661  002DAE  AE10               	btfss	___aodiv@divisor+7,7,c
  8662  002DB0  D012               	goto	l3499
  8663  002DB2  1E10               	comf	___aodiv@divisor+7,f,c
  8664  002DB4  1E0F               	comf	___aodiv@divisor+6,f,c
  8665  002DB6  1E0E               	comf	___aodiv@divisor+5,f,c
  8666  002DB8  1E0D               	comf	___aodiv@divisor+4,f,c
  8667  002DBA  1E0C               	comf	___aodiv@divisor+3,f,c
  8668  002DBC  1E0B               	comf	___aodiv@divisor+2,f,c
  8669  002DBE  1E0A               	comf	___aodiv@divisor+1,f,c
  8670  002DC0  6C09               	negf	___aodiv@divisor,c
  8671  002DC2  0E00               	movlw	0
  8672  002DC4  220A               	addwfc	___aodiv@divisor+1,f,c
  8673  002DC6  220B               	addwfc	___aodiv@divisor+2,f,c
  8674  002DC8  220C               	addwfc	___aodiv@divisor+3,f,c
  8675  002DCA  220D               	addwfc	___aodiv@divisor+4,f,c
  8676  002DCC  220E               	addwfc	___aodiv@divisor+5,f,c
  8677  002DCE  220F               	addwfc	___aodiv@divisor+6,f,c
  8678  002DD0  2210               	addwfc	___aodiv@divisor+7,f,c
  8679  002DD2  0E01               	movlw	1
  8680  002DD4  6E12               	movwf	___aodiv@sign,c
  8681  002DD6                     l3499:
  8682  002DD6  AE08               	btfss	___aodiv@dividend+7,7,c
  8683  002DD8  D012               	goto	l3505
  8684  002DDA  1E08               	comf	___aodiv@dividend+7,f,c
  8685  002DDC  1E07               	comf	___aodiv@dividend+6,f,c
  8686  002DDE  1E06               	comf	___aodiv@dividend+5,f,c
  8687  002DE0  1E05               	comf	___aodiv@dividend+4,f,c
  8688  002DE2  1E04               	comf	___aodiv@dividend+3,f,c
  8689  002DE4  1E03               	comf	___aodiv@dividend+2,f,c
  8690  002DE6  1E02               	comf	___aodiv@dividend+1,f,c
  8691  002DE8  6C01               	negf	___aodiv@dividend,c
  8692  002DEA  0E00               	movlw	0
  8693  002DEC  2202               	addwfc	___aodiv@dividend+1,f,c
  8694  002DEE  2203               	addwfc	___aodiv@dividend+2,f,c
  8695  002DF0  2204               	addwfc	___aodiv@dividend+3,f,c
  8696  002DF2  2205               	addwfc	___aodiv@dividend+4,f,c
  8697  002DF4  2206               	addwfc	___aodiv@dividend+5,f,c
  8698  002DF6  2207               	addwfc	___aodiv@dividend+6,f,c
  8699  002DF8  2208               	addwfc	___aodiv@dividend+7,f,c
  8700  002DFA  0E01               	movlw	1
  8701  002DFC  1A12               	xorwf	___aodiv@sign,f,c
  8702  002DFE                     l3505:
  8703  002DFE  EE20  F013         	lfsr	2,___aodiv@quotient
  8704  002E02  0E07               	movlw	7
  8705  002E04                     u3731:
  8706  002E04  6ADE               	clrf	postinc2,c
  8707  002E06  06E8               	decf	wreg,f,c
  8708  002E08  E2FD               	bc	u3731
  8709  002E0A  5009               	movf	___aodiv@divisor,w,c
  8710  002E0C  100A               	iorwf	___aodiv@divisor+1,w,c
  8711  002E0E  100B               	iorwf	___aodiv@divisor+2,w,c
  8712  002E10  100C               	iorwf	___aodiv@divisor+3,w,c
  8713  002E12  100D               	iorwf	___aodiv@divisor+4,w,c
  8714  002E14  100E               	iorwf	___aodiv@divisor+5,w,c
  8715  002E16  100F               	iorwf	___aodiv@divisor+6,w,c
  8716  002E18  1010               	iorwf	___aodiv@divisor+7,w,c
  8717  002E1A  B4D8               	btfsc	status,2,c
  8718  002E1C  D046               	goto	l3527
  8719  002E1E  0E01               	movlw	1
  8720  002E20  6E11               	movwf	___aodiv@counter,c
  8721  002E22  D00A               	goto	l3513
  8722  002E24                     l3511:
  8723  002E24  90D8               	bcf	status,0,c
  8724  002E26  3609               	rlcf	___aodiv@divisor,f,c
  8725  002E28  360A               	rlcf	___aodiv@divisor+1,f,c
  8726  002E2A  360B               	rlcf	___aodiv@divisor+2,f,c
  8727  002E2C  360C               	rlcf	___aodiv@divisor+3,f,c
  8728  002E2E  360D               	rlcf	___aodiv@divisor+4,f,c
  8729  002E30  360E               	rlcf	___aodiv@divisor+5,f,c
  8730  002E32  360F               	rlcf	___aodiv@divisor+6,f,c
  8731  002E34  3610               	rlcf	___aodiv@divisor+7,f,c
  8732  002E36  2A11               	incf	___aodiv@counter,f,c
  8733  002E38                     l3513:
  8734  002E38  AE10               	btfss	___aodiv@divisor+7,7,c
  8735  002E3A  D7F4               	goto	l3511
  8736  002E3C                     u3750:
  8737  002E3C  90D8               	bcf	status,0,c
  8738  002E3E  3613               	rlcf	___aodiv@quotient,f,c
  8739  002E40  3614               	rlcf	___aodiv@quotient+1,f,c
  8740  002E42  3615               	rlcf	___aodiv@quotient+2,f,c
  8741  002E44  3616               	rlcf	___aodiv@quotient+3,f,c
  8742  002E46  3617               	rlcf	___aodiv@quotient+4,f,c
  8743  002E48  3618               	rlcf	___aodiv@quotient+5,f,c
  8744  002E4A  3619               	rlcf	___aodiv@quotient+6,f,c
  8745  002E4C  361A               	rlcf	___aodiv@quotient+7,f,c
  8746  002E4E  5009               	movf	___aodiv@divisor,w,c
  8747  002E50  5C01               	subwf	___aodiv@dividend,w,c
  8748  002E52  500A               	movf	___aodiv@divisor+1,w,c
  8749  002E54  5802               	subwfb	___aodiv@dividend+1,w,c
  8750  002E56  500B               	movf	___aodiv@divisor+2,w,c
  8751  002E58  5803               	subwfb	___aodiv@dividend+2,w,c
  8752  002E5A  500C               	movf	___aodiv@divisor+3,w,c
  8753  002E5C  5804               	subwfb	___aodiv@dividend+3,w,c
  8754  002E5E  500D               	movf	___aodiv@divisor+4,w,c
  8755  002E60  5805               	subwfb	___aodiv@dividend+4,w,c
  8756  002E62  500E               	movf	___aodiv@divisor+5,w,c
  8757  002E64  5806               	subwfb	___aodiv@dividend+5,w,c
  8758  002E66  500F               	movf	___aodiv@divisor+6,w,c
  8759  002E68  5807               	subwfb	___aodiv@dividend+6,w,c
  8760  002E6A  5010               	movf	___aodiv@divisor+7,w,c
  8761  002E6C  5808               	subwfb	___aodiv@dividend+7,w,c
  8762  002E6E  A0D8               	btfss	status,0,c
  8763  002E70  D011               	goto	l3523
  8764  002E72  5009               	movf	___aodiv@divisor,w,c
  8765  002E74  5E01               	subwf	___aodiv@dividend,f,c
  8766  002E76  500A               	movf	___aodiv@divisor+1,w,c
  8767  002E78  5A02               	subwfb	___aodiv@dividend+1,f,c
  8768  002E7A  500B               	movf	___aodiv@divisor+2,w,c
  8769  002E7C  5A03               	subwfb	___aodiv@dividend+2,f,c
  8770  002E7E  500C               	movf	___aodiv@divisor+3,w,c
  8771  002E80  5A04               	subwfb	___aodiv@dividend+3,f,c
  8772  002E82  500D               	movf	___aodiv@divisor+4,w,c
  8773  002E84  5A05               	subwfb	___aodiv@dividend+4,f,c
  8774  002E86  500E               	movf	___aodiv@divisor+5,w,c
  8775  002E88  5A06               	subwfb	___aodiv@dividend+5,f,c
  8776  002E8A  500F               	movf	___aodiv@divisor+6,w,c
  8777  002E8C  5A07               	subwfb	___aodiv@dividend+6,f,c
  8778  002E8E  5010               	movf	___aodiv@divisor+7,w,c
  8779  002E90  5A08               	subwfb	___aodiv@dividend+7,f,c
  8780  002E92  8013               	bsf	___aodiv@quotient,0,c
  8781  002E94                     l3523:
  8782  002E94  90D8               	bcf	status,0,c
  8783  002E96  3210               	rrcf	___aodiv@divisor+7,f,c
  8784  002E98  320F               	rrcf	___aodiv@divisor+6,f,c
  8785  002E9A  320E               	rrcf	___aodiv@divisor+5,f,c
  8786  002E9C  320D               	rrcf	___aodiv@divisor+4,f,c
  8787  002E9E  320C               	rrcf	___aodiv@divisor+3,f,c
  8788  002EA0  320B               	rrcf	___aodiv@divisor+2,f,c
  8789  002EA2  320A               	rrcf	___aodiv@divisor+1,f,c
  8790  002EA4  3209               	rrcf	___aodiv@divisor,f,c
  8791  002EA6  2E11               	decfsz	___aodiv@counter,f,c
  8792  002EA8  D7C9               	goto	u3750
  8793  002EAA                     l3527:
  8794  002EAA  5012               	movf	___aodiv@sign,w,c
  8795  002EAC  B4D8               	btfsc	status,2,c
  8796  002EAE  D010               	goto	l3531
  8797  002EB0  1E1A               	comf	___aodiv@quotient+7,f,c
  8798  002EB2  1E19               	comf	___aodiv@quotient+6,f,c
  8799  002EB4  1E18               	comf	___aodiv@quotient+5,f,c
  8800  002EB6  1E17               	comf	___aodiv@quotient+4,f,c
  8801  002EB8  1E16               	comf	___aodiv@quotient+3,f,c
  8802  002EBA  1E15               	comf	___aodiv@quotient+2,f,c
  8803  002EBC  1E14               	comf	___aodiv@quotient+1,f,c
  8804  002EBE  6C13               	negf	___aodiv@quotient,c
  8805  002EC0  0E00               	movlw	0
  8806  002EC2  2214               	addwfc	___aodiv@quotient+1,f,c
  8807  002EC4  2215               	addwfc	___aodiv@quotient+2,f,c
  8808  002EC6  2216               	addwfc	___aodiv@quotient+3,f,c
  8809  002EC8  2217               	addwfc	___aodiv@quotient+4,f,c
  8810  002ECA  2218               	addwfc	___aodiv@quotient+5,f,c
  8811  002ECC  2219               	addwfc	___aodiv@quotient+6,f,c
  8812  002ECE  221A               	addwfc	___aodiv@quotient+7,f,c
  8813  002ED0                     l3531:
  8814  002ED0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8815  002ED4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8816  002ED8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8817  002EDC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8818  002EE0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8819  002EE4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8820  002EE8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8821  002EEC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8822  002EF0  0012               	return		;funcret
  8823  002EF2                     __end_of___aodiv:
  8824                           	opt callstack 0
  8825                           
  8826 ;; *************** function _atoi *****************
  8827 ;; Defined at:
  8828 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8831 ;;		 -> STR_26(11), STR_25(6), STR_24(7), STR_22(12), 
  8832 ;;		 -> STR_21(6), STR_20(7), STR_19(13), STR_18(6), 
  8833 ;;		 -> STR_17(7), STR_16(13), STR_15(6), STR_14(7), 
  8834 ;;		 -> STR_13(12), STR_12(6), STR_11(7), STR_10(16), 
  8835 ;;		 -> STR_6(14), STR_4(13), 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  n               2   20[COMRAM] int 
  8838 ;;  neg             2   13[COMRAM] int 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  2    7[COMRAM] int 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8848 ;;      Params:         2       0       0       0       0       0       0       0       0
  8849 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8850 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8851 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8852 ;;Total ram usage:       15 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    1
  8855 ;; This function calls:
  8856 ;;		___wmul
  8857 ;;		_isdigit
  8858 ;;		_isspace
  8859 ;; This function is called by:
  8860 ;;		_vfpfcnvrt
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text30
  8865  002EF2                     __ptext30:
  8866                           	opt callstack 0
  8867  002EF2                     _atoi:
  8868                           	opt callstack 26
  8869                           
  8870                           ;incstack = 0
  8871  002EF2  0E00               	movlw	0
  8872  002EF4  6E16               	movwf	atoi@n+1,c
  8873  002EF6  0E00               	movlw	0
  8874  002EF8  6E15               	movwf	atoi@n,c
  8875  002EFA  0E00               	movlw	0
  8876  002EFC  6E0F               	movwf	atoi@neg+1,c
  8877  002EFE  0E00               	movlw	0
  8878  002F00  6E0E               	movwf	atoi@neg,c
  8879  002F02  D002               	goto	l4391
  8880  002F04                     l4389:
  8881  002F04  4A08               	infsnz	atoi@s,f,c
  8882  002F06  2A09               	incf	atoi@s+1,f,c
  8883  002F08                     l4391:
  8884  002F08  0E01               	movlw	1
  8885  002F0A  6E14               	movwf	_atoi$944,c
  8886  002F0C  C008  FFF6         	movff	atoi@s,tblptrl
  8887  002F10  C009  FFF7         	movff	atoi@s+1,tblptrh
  8888  002F14                     	if	0	;tblptru may be non-zero
  8889  002F14                     	endif
  8890  002F14                     	if	0	;tblptru may be non-zero
  8891  002F14                     	endif
  8892  002F14  0008               	tblrd		*
  8893  002F16  50F5               	movf	tablat,w,c
  8894  002F18  0A20               	xorlw	32
  8895  002F1A  B4D8               	btfsc	status,2,c
  8896  002F1C  D018               	goto	l4399
  8897  002F1E  0EF7               	movlw	247
  8898  002F20  6E0A               	movwf	??_atoi& (0+255),c
  8899  002F22  0EFF               	movlw	255
  8900  002F24  6E0B               	movwf	(??_atoi+1)& (0+255),c
  8901  002F26  C008  FFF6         	movff	atoi@s,tblptrl
  8902  002F2A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8903  002F2E                     	if	0	;tblptru may be non-zero
  8904  002F2E                     	endif
  8905  002F2E                     	if	0	;tblptru may be non-zero
  8906  002F2E                     	endif
  8907  002F2E  0008               	tblrd		*
  8908  002F30  50F5               	movf	tablat,w,c
  8909  002F32  6E0C               	movwf	(??_atoi+2)& (0+255),c
  8910  002F34  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8911  002F36  500A               	movf	??_atoi,w,c
  8912  002F38  260C               	addwf	??_atoi+2,f,c
  8913  002F3A  500B               	movf	??_atoi+1,w,c
  8914  002F3C  220D               	addwfc	??_atoi+3,f,c
  8915  002F3E  500D               	movf	??_atoi+3,w,c
  8916  002F40  E104               	bnz	u5240
  8917  002F42  0E05               	movlw	5
  8918  002F44  5C0C               	subwf	??_atoi+2,w,c
  8919  002F46  A0D8               	btfss	status,0,c
  8920  002F48  D002               	goto	l4399
  8921  002F4A                     u5240:
  8922  002F4A  0E00               	movlw	0
  8923  002F4C  6E14               	movwf	_atoi$944,c
  8924  002F4E                     l4399:
  8925  002F4E  C014  F010         	movff	_atoi$944,_atoi$943
  8926  002F52  6A11               	clrf	_atoi$943+1,c
  8927  002F54  5010               	movf	_atoi$943,w,c
  8928  002F56  1011               	iorwf	_atoi$943+1,w,c
  8929  002F58  B4D8               	btfsc	status,2,c
  8930  002F5A  D008               	goto	l4409
  8931  002F5C  D7D3               	goto	l4389
  8932  002F5E                     l4405:
  8933  002F5E  0E00               	movlw	0
  8934  002F60  6E0F               	movwf	atoi@neg+1,c
  8935  002F62  0E01               	movlw	1
  8936  002F64  6E0E               	movwf	atoi@neg,c
  8937  002F66                     l4407:
  8938  002F66  4A08               	infsnz	atoi@s,f,c
  8939  002F68  2A09               	incf	atoi@s+1,f,c
  8940  002F6A  D02E               	goto	l4415
  8941  002F6C                     l4409:
  8942  002F6C  C008  FFF6         	movff	atoi@s,tblptrl
  8943  002F70  C009  FFF7         	movff	atoi@s+1,tblptrh
  8944  002F74                     	if	0	;tblptru may be non-zero
  8945  002F74                     	endif
  8946  002F74                     	if	0	;tblptru may be non-zero
  8947  002F74                     	endif
  8948  002F74  0008               	tblrd		*
  8949  002F76  50F5               	movf	tablat,w,c
  8950  002F78  6E0A               	movwf	??_atoi& (0+255),c
  8951  002F7A  6A0B               	clrf	(??_atoi+1)& (0+255),c
  8952                           
  8953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8954                           ; Switch size 1, requested type "simple"
  8955                           ; Number of cases is 1, Range of values is 0 to 0
  8956                           ; switch strategies available:
  8957                           ; Name         Instructions Cycles
  8958                           ; simple_byte            4     3 (average)
  8959                           ;	Chosen strategy is simple_byte
  8960  002F7C  500B               	movf	??_atoi+1,w,c
  8961  002F7E  0A00               	xorlw	0	; case 0
  8962  002F80  A4D8               	btfss	status,2,c
  8963  002F82  D022               	goto	l4415
  8964                           
  8965                           ; Switch size 1, requested type "simple"
  8966                           ; Number of cases is 2, Range of values is 43 to 45
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte            7     4 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  002F84  500A               	movf	??_atoi,w,c
  8972  002F86  0A2B               	xorlw	43	; case 43
  8973  002F88  B4D8               	btfsc	status,2,c
  8974  002F8A  D7ED               	goto	l4407
  8975  002F8C  0A06               	xorlw	6	; case 45
  8976  002F8E  B4D8               	btfsc	status,2,c
  8977  002F90  D7E6               	goto	l4405
  8978  002F92  D01A               	goto	l4415
  8979  002F94                     l4411:
  8980  002F94  C015  F001         	movff	atoi@n,___wmul@multiplier
  8981  002F98  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8982  002F9C  0E00               	movlw	0
  8983  002F9E  6E04               	movwf	___wmul@multiplicand+1,c
  8984  002FA0  0E0A               	movlw	10
  8985  002FA2  6E03               	movwf	___wmul@multiplicand,c
  8986  002FA4  ECC3  F01F         	call	___wmul	;wreg free
  8987  002FA8  C008  FFF6         	movff	atoi@s,tblptrl
  8988  002FAC  C009  FFF7         	movff	atoi@s+1,tblptrh
  8989  002FB0                     	if	0	;tblptru may be non-zero
  8990  002FB0                     	endif
  8991  002FB0                     	if	0	;tblptru may be non-zero
  8992  002FB0                     	endif
  8993  002FB0  0008               	tblrd		*
  8994  002FB2  50F5               	movf	tablat,w,c
  8995  002FB4  5E01               	subwf	?___wmul,f,c
  8996  002FB6  0E00               	movlw	0
  8997  002FB8  5A02               	subwfb	?___wmul+1,f,c
  8998  002FBA  0E30               	movlw	48
  8999  002FBC  2401               	addwf	?___wmul,w,c
  9000  002FBE  6E15               	movwf	atoi@n,c
  9001  002FC0  0E00               	movlw	0
  9002  002FC2  2002               	addwfc	?___wmul+1,w,c
  9003  002FC4  6E16               	movwf	atoi@n+1,c
  9004  002FC6  D7CF               	goto	l4407
  9005  002FC8                     l4415:
  9006  002FC8  0ED0               	movlw	208
  9007  002FCA  6E0A               	movwf	??_atoi& (0+255),c
  9008  002FCC  0EFF               	movlw	255
  9009  002FCE  6E0B               	movwf	(??_atoi+1)& (0+255),c
  9010  002FD0  C008  FFF6         	movff	atoi@s,tblptrl
  9011  002FD4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9012  002FD8                     	if	0	;tblptru may be non-zero
  9013  002FD8                     	endif
  9014  002FD8                     	if	0	;tblptru may be non-zero
  9015  002FD8                     	endif
  9016  002FD8  0008               	tblrd		*
  9017  002FDA  50F5               	movf	tablat,w,c
  9018  002FDC  6E0C               	movwf	(??_atoi+2)& (0+255),c
  9019  002FDE  6A0D               	clrf	(??_atoi+3)& (0+255),c
  9020  002FE0  500A               	movf	??_atoi,w,c
  9021  002FE2  260C               	addwf	??_atoi+2,f,c
  9022  002FE4  500B               	movf	??_atoi+1,w,c
  9023  002FE6  220D               	addwfc	??_atoi+3,f,c
  9024  002FE8  500D               	movf	??_atoi+3,w,c
  9025  002FEA  E106               	bnz	u5260
  9026  002FEC  0E0A               	movlw	10
  9027  002FEE  5C0C               	subwf	??_atoi+2,w,c
  9028  002FF0  B0D8               	btfsc	status,0,c
  9029  002FF2  D002               	goto	u5260
  9030  002FF4  0E01               	movlw	1
  9031  002FF6  D001               	goto	u5270
  9032  002FF8                     u5260:
  9033  002FF8  0E00               	movlw	0
  9034  002FFA                     u5270:
  9035  002FFA  6E12               	movwf	_atoi$945,c
  9036  002FFC  6A13               	clrf	_atoi$945+1,c
  9037  002FFE  5012               	movf	_atoi$945,w,c
  9038  003000  1013               	iorwf	_atoi$945+1,w,c
  9039  003002  A4D8               	btfss	status,2,c
  9040  003004  D7C7               	goto	l4411
  9041  003006  500E               	movf	atoi@neg,w,c
  9042  003008  100F               	iorwf	atoi@neg+1,w,c
  9043  00300A  A4D8               	btfss	status,2,c
  9044  00300C  D00D               	goto	l1067
  9045  00300E  C015  F00A         	movff	atoi@n,??_atoi
  9046  003012  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9047  003016  1E0A               	comf	??_atoi,f,c
  9048  003018  1E0B               	comf	??_atoi+1,f,c
  9049  00301A  4A0A               	infsnz	??_atoi,f,c
  9050  00301C  2A0B               	incf	??_atoi+1,f,c
  9051  00301E  C00A  F008         	movff	??_atoi,?_atoi
  9052  003022  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9053  003026  0012               	return	
  9054  003028                     l1067:
  9055  003028  C015  F008         	movff	atoi@n,?_atoi
  9056  00302C  C016  F009         	movff	atoi@n+1,?_atoi+1
  9057  003030  0012               	return		;funcret
  9058  003032                     __end_of_atoi:
  9059                           	opt callstack 0
  9060                           
  9061 ;; *************** function _isspace *****************
  9062 ;; Defined at:
  9063 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  c               2    0[COMRAM] int 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  2    0[COMRAM] int 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9077 ;;      Params:         2       0       0       0       0       0       0       0       0
  9078 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9080 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9081 ;;Total ram usage:        7 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_atoi
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text31
  9091  003E00                     __ptext31:
  9092                           	opt callstack 0
  9093  003E00                     _isspace:
  9094                           	opt callstack 26
  9095                           
  9096                           ;incstack = 0
  9097  003E00  0E01               	movlw	1
  9098  003E02  6E07               	movwf	_isspace$974,c
  9099  003E04  0E20               	movlw	32
  9100  003E06  1801               	xorwf	isspace@c,w,c
  9101  003E08  1002               	iorwf	isspace@c+1,w,c
  9102  003E0A  B4D8               	btfsc	status,2,c
  9103  003E0C  D014               	goto	l4023
  9104  003E0E  0EF7               	movlw	247
  9105  003E10  6E03               	movwf	??_isspace& (0+255),c
  9106  003E12  0EFF               	movlw	255
  9107  003E14  6E04               	movwf	(??_isspace+1)& (0+255),c
  9108  003E16  C001  F005         	movff	isspace@c,??_isspace+2
  9109  003E1A  C002  F006         	movff	isspace@c+1,??_isspace+3
  9110  003E1E  5003               	movf	??_isspace,w,c
  9111  003E20  2605               	addwf	??_isspace+2,f,c
  9112  003E22  5004               	movf	??_isspace+1,w,c
  9113  003E24  2206               	addwfc	??_isspace+3,f,c
  9114  003E26  5006               	movf	??_isspace+3,w,c
  9115  003E28  E104               	bnz	u4550
  9116  003E2A  0E05               	movlw	5
  9117  003E2C  5C05               	subwf	??_isspace+2,w,c
  9118  003E2E  A0D8               	btfss	status,0,c
  9119  003E30  D002               	goto	l4023
  9120  003E32                     u4550:
  9121  003E32  0E00               	movlw	0
  9122  003E34  6E07               	movwf	_isspace$974,c
  9123  003E36                     l4023:
  9124  003E36  C007  F001         	movff	_isspace$974,?_isspace
  9125  003E3A  6A02               	clrf	?_isspace+1,c
  9126  003E3C  0012               	return		;funcret
  9127  003E3E                     __end_of_isspace:
  9128                           	opt callstack 0
  9129                           
  9130 ;; *************** function _isdigit *****************
  9131 ;; Defined at:
  9132 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  c               2    0[COMRAM] int 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  2    0[COMRAM] int 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9146 ;;      Params:         2       0       0       0       0       0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9148 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9149 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9150 ;;Total ram usage:        6 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_vfpfcnvrt
  9156 ;;		_atoi
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text32
  9161  003ED8                     __ptext32:
  9162                           	opt callstack 0
  9163  003ED8                     _isdigit:
  9164                           	opt callstack 27
  9165                           
  9166                           ;incstack = 0
  9167  003ED8  0ED0               	movlw	208
  9168  003EDA  6E03               	movwf	??_isdigit& (0+255),c
  9169  003EDC  0EFF               	movlw	255
  9170  003EDE  6E04               	movwf	(??_isdigit+1)& (0+255),c
  9171  003EE0  C001  F005         	movff	isdigit@c,??_isdigit+2
  9172  003EE4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9173  003EE8  5003               	movf	??_isdigit,w,c
  9174  003EEA  2605               	addwf	??_isdigit+2,f,c
  9175  003EEC  5004               	movf	??_isdigit+1,w,c
  9176  003EEE  2206               	addwfc	??_isdigit+3,f,c
  9177  003EF0  5006               	movf	??_isdigit+3,w,c
  9178  003EF2  E106               	bnz	u3690
  9179  003EF4  0E0A               	movlw	10
  9180  003EF6  5C05               	subwf	??_isdigit+2,w,c
  9181  003EF8  B0D8               	btfsc	status,0,c
  9182  003EFA  D002               	goto	u3690
  9183  003EFC  0E01               	movlw	1
  9184  003EFE  D001               	goto	u3700
  9185  003F00                     u3690:
  9186  003F00  0E00               	movlw	0
  9187  003F02                     u3700:
  9188  003F02  6E01               	movwf	?_isdigit,c
  9189  003F04  6A02               	clrf	?_isdigit+1,c
  9190  003F06  0012               	return		;funcret
  9191  003F08                     __end_of_isdigit:
  9192                           	opt callstack 0
  9193                           
  9194 ;; *************** function ___wmul *****************
  9195 ;; Defined at:
  9196 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  multiplier      2    0[COMRAM] unsigned int 
  9199 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  product         2    4[COMRAM] unsigned int 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  2    0[COMRAM] unsigned int 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, prodl, prodh
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9211 ;;      Params:         4       0       0       0       0       0       0       0       0
  9212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9214 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9215 ;;Total ram usage:        6 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_atoi
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text33
  9225  003F86                     __ptext33:
  9226                           	opt callstack 0
  9227  003F86                     ___wmul:
  9228                           	opt callstack 26
  9229                           
  9230                           ;incstack = 0
  9231  003F86  5001               	movf	___wmul@multiplier,w,c
  9232  003F88  0203               	mulwf	___wmul@multiplicand,c
  9233  003F8A  CFF3 F005          	movff	prodl,___wmul@product
  9234  003F8E  CFF4 F006          	movff	prodh,___wmul@product+1
  9235  003F92  5001               	movf	___wmul@multiplier,w,c
  9236  003F94  0204               	mulwf	___wmul@multiplicand+1,c
  9237  003F96  50F3               	movf	prodl,w,c
  9238  003F98  2606               	addwf	___wmul@product+1,f,c
  9239  003F9A  5002               	movf	___wmul@multiplier+1,w,c
  9240  003F9C  0203               	mulwf	___wmul@multiplicand,c
  9241  003F9E  50F3               	movf	prodl,w,c
  9242  003FA0  2606               	addwf	___wmul@product+1,f,c
  9243  003FA2  C005  F001         	movff	___wmul@product,?___wmul
  9244  003FA6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9245  003FAA  0012               	return		;funcret
  9246  003FAC                     __end_of___wmul:
  9247                           	opt callstack 0
  9248                           
  9249 ;; *************** function ___xxtofl *****************
  9250 ;; Defined at:
  9251 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  sign            1    wreg     unsigned char 
  9254 ;;  val             4    0[COMRAM] long 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  sign            1    8[COMRAM] unsigned char 
  9257 ;;  arg             4   10[COMRAM] unsigned long 
  9258 ;;  exp             1    9[COMRAM] unsigned char 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  4    0[COMRAM] unsigned char 
  9261 ;; Registers used:
  9262 ;;		wreg, status,2, status,0
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9268 ;;      Params:         4       0       0       0       0       0       0       0       0
  9269 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9270 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9271 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9272 ;;Total ram usage:       14 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; This function calls:
  9275 ;;		Nothing
  9276 ;; This function is called by:
  9277 ;;		_main
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text34
  9282  003032                     __ptext34:
  9283                           	opt callstack 0
  9284  003032                     ___xxtofl:
  9285                           	opt callstack 30
  9286                           
  9287                           ;incstack = 0
  9288                           ;___xxtofl@sign stored from wreg
  9289  003032  6E09               	movwf	___xxtofl@sign,c
  9290  003034  5009               	movf	___xxtofl@sign,w,c
  9291  003036  A4D8               	btfss	status,2,c
  9292  003038  AE04               	btfss	___xxtofl@val+3,7,c
  9293  00303A  D01A               	goto	l1005
  9294  00303C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9295  003040  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9296  003044  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9297  003048  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9298  00304C  1E05               	comf	??___xxtofl,f,c
  9299  00304E  1E06               	comf	??___xxtofl+1,f,c
  9300  003050  1E07               	comf	??___xxtofl+2,f,c
  9301  003052  1E08               	comf	??___xxtofl+3,f,c
  9302  003054  2A05               	incf	??___xxtofl,f,c
  9303  003056  0E00               	movlw	0
  9304  003058  2206               	addwfc	??___xxtofl+1,f,c
  9305  00305A  2207               	addwfc	??___xxtofl+2,f,c
  9306  00305C  2208               	addwfc	??___xxtofl+3,f,c
  9307  00305E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9308  003062  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9309  003066  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9310  00306A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9311  00306E  D008               	goto	l4789
  9312  003070                     l1005:
  9313  003070  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9314  003074  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9315  003078  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9316  00307C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9317  003080                     l4789:
  9318  003080  5001               	movf	___xxtofl@val,w,c
  9319  003082  1002               	iorwf	___xxtofl@val+1,w,c
  9320  003084  1003               	iorwf	___xxtofl@val+2,w,c
  9321  003086  1004               	iorwf	___xxtofl@val+3,w,c
  9322  003088  A4D8               	btfss	status,2,c
  9323  00308A  D009               	goto	l4795
  9324  00308C  0E00               	movlw	0
  9325  00308E  6E01               	movwf	?___xxtofl,c
  9326  003090  0E00               	movlw	0
  9327  003092  6E02               	movwf	?___xxtofl+1,c
  9328  003094  0E00               	movlw	0
  9329  003096  6E03               	movwf	?___xxtofl+2,c
  9330  003098  0E00               	movlw	0
  9331  00309A  6E04               	movwf	?___xxtofl+3,c
  9332  00309C  0012               	return	
  9333  00309E                     l4795:
  9334  00309E  0E96               	movlw	150
  9335  0030A0  6E0A               	movwf	___xxtofl@exp,c
  9336  0030A2  D006               	goto	l4799
  9337  0030A4                     l4797:
  9338  0030A4  2A0A               	incf	___xxtofl@exp,f,c
  9339  0030A6  90D8               	bcf	status,0,c
  9340  0030A8  320E               	rrcf	___xxtofl@arg+3,f,c
  9341  0030AA  320D               	rrcf	___xxtofl@arg+2,f,c
  9342  0030AC  320C               	rrcf	___xxtofl@arg+1,f,c
  9343  0030AE  320B               	rrcf	___xxtofl@arg,f,c
  9344  0030B0                     l4799:
  9345  0030B0  0E00               	movlw	0
  9346  0030B2  140B               	andwf	___xxtofl@arg,w,c
  9347  0030B4  6E05               	movwf	??___xxtofl& (0+255),c
  9348  0030B6  0E00               	movlw	0
  9349  0030B8  140C               	andwf	___xxtofl@arg+1,w,c
  9350  0030BA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9351  0030BC  0E00               	movlw	0
  9352  0030BE  140D               	andwf	___xxtofl@arg+2,w,c
  9353  0030C0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9354  0030C2  0EFE               	movlw	254
  9355  0030C4  140E               	andwf	___xxtofl@arg+3,w,c
  9356  0030C6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9357  0030C8  5005               	movf	??___xxtofl,w,c
  9358  0030CA  1006               	iorwf	??___xxtofl+1,w,c
  9359  0030CC  1007               	iorwf	??___xxtofl+2,w,c
  9360  0030CE  1008               	iorwf	??___xxtofl+3,w,c
  9361  0030D0  B4D8               	btfsc	status,2,c
  9362  0030D2  D00D               	goto	l1012
  9363  0030D4  D7E7               	goto	l4797
  9364  0030D6                     l4801:
  9365  0030D6  2A0A               	incf	___xxtofl@exp,f,c
  9366  0030D8  0E01               	movlw	1
  9367  0030DA  260B               	addwf	___xxtofl@arg,f,c
  9368  0030DC  0E00               	movlw	0
  9369  0030DE  220C               	addwfc	___xxtofl@arg+1,f,c
  9370  0030E0  220D               	addwfc	___xxtofl@arg+2,f,c
  9371  0030E2  220E               	addwfc	___xxtofl@arg+3,f,c
  9372  0030E4  90D8               	bcf	status,0,c
  9373  0030E6  320E               	rrcf	___xxtofl@arg+3,f,c
  9374  0030E8  320D               	rrcf	___xxtofl@arg+2,f,c
  9375  0030EA  320C               	rrcf	___xxtofl@arg+1,f,c
  9376  0030EC  320B               	rrcf	___xxtofl@arg,f,c
  9377  0030EE                     l1012:
  9378  0030EE  0E00               	movlw	0
  9379  0030F0  140B               	andwf	___xxtofl@arg,w,c
  9380  0030F2  6E05               	movwf	??___xxtofl& (0+255),c
  9381  0030F4  0E00               	movlw	0
  9382  0030F6  140C               	andwf	___xxtofl@arg+1,w,c
  9383  0030F8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9384  0030FA  0E00               	movlw	0
  9385  0030FC  140D               	andwf	___xxtofl@arg+2,w,c
  9386  0030FE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9387  003100  0EFF               	movlw	255
  9388  003102  140E               	andwf	___xxtofl@arg+3,w,c
  9389  003104  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9390  003106  5005               	movf	??___xxtofl,w,c
  9391  003108  1006               	iorwf	??___xxtofl+1,w,c
  9392  00310A  1007               	iorwf	??___xxtofl+2,w,c
  9393  00310C  1008               	iorwf	??___xxtofl+3,w,c
  9394  00310E  B4D8               	btfsc	status,2,c
  9395  003110  D007               	goto	l4809
  9396  003112  D7E1               	goto	l4801
  9397  003114                     l4807:
  9398  003114  060A               	decf	___xxtofl@exp,f,c
  9399  003116  90D8               	bcf	status,0,c
  9400  003118  360B               	rlcf	___xxtofl@arg,f,c
  9401  00311A  360C               	rlcf	___xxtofl@arg+1,f,c
  9402  00311C  360D               	rlcf	___xxtofl@arg+2,f,c
  9403  00311E  360E               	rlcf	___xxtofl@arg+3,f,c
  9404  003120                     l4809:
  9405  003120  BE0D               	btfsc	___xxtofl@arg+2,7,c
  9406  003122  D003               	goto	u5740
  9407  003124  0E02               	movlw	2
  9408  003126  600A               	cpfslt	___xxtofl@exp,c
  9409  003128  D7F5               	goto	l4807
  9410  00312A                     u5740:
  9411  00312A  A00A               	btfss	___xxtofl@exp,0,c
  9412  00312C  9E0D               	bcf	___xxtofl@arg+2,7,c
  9413  00312E  90D8               	bcf	status,0,c
  9414  003130  320A               	rrcf	___xxtofl@exp,f,c
  9415  003132  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9416  003136  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  9417  003138  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  9418  00313A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  9419  00313C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9420  003140  6A07               	clrf	??___xxtofl+2,c
  9421  003142  6A06               	clrf	??___xxtofl+1,c
  9422  003144  6A05               	clrf	??___xxtofl,c
  9423  003146  5005               	movf	??___xxtofl,w,c
  9424  003148  120B               	iorwf	___xxtofl@arg,f,c
  9425  00314A  5006               	movf	??___xxtofl+1,w,c
  9426  00314C  120C               	iorwf	___xxtofl@arg+1,f,c
  9427  00314E  5007               	movf	??___xxtofl+2,w,c
  9428  003150  120D               	iorwf	___xxtofl@arg+2,f,c
  9429  003152  5008               	movf	??___xxtofl+3,w,c
  9430  003154  120E               	iorwf	___xxtofl@arg+3,f,c
  9431  003156  5009               	movf	___xxtofl@sign,w,c
  9432  003158  A4D8               	btfss	status,2,c
  9433  00315A  AE04               	btfss	___xxtofl@val+3,7,c
  9434  00315C  D001               	goto	l4825
  9435  00315E  8E0E               	bsf	___xxtofl@arg+3,7,c
  9436  003160                     l4825:
  9437  003160  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9438  003164  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9439  003168  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9440  00316C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9441  003170  0012               	return		;funcret
  9442  003172                     __end_of___xxtofl:
  9443                           	opt callstack 0
  9444                           
  9445 ;; *************** function _Lcd_Out2 *****************
  9446 ;; Defined at:
  9447 ;;		line 115 in file "./flex_lcd.h"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  y               1    wreg     unsigned char 
  9450 ;;  x               1    3[COMRAM] unsigned char 
  9451 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  9452 ;;		 -> Word(16), numero3(16), numero2(16), numero1(16), 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  y               1    8[COMRAM] unsigned char 
  9455 ;;  data            1    9[COMRAM] unsigned char 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9465 ;;      Params:         3       0       0       0       0       0       0       0       0
  9466 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9467 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9468 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9469 ;;Total ram usage:        7 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    1
  9472 ;; This function calls:
  9473 ;;		_Lcd_Chr_CP
  9474 ;;		_Lcd_Cmd
  9475 ;; This function is called by:
  9476 ;;		_main
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text35
  9481  003C06                     __ptext35:
  9482                           	opt callstack 0
  9483  003C06                     _Lcd_Out2:
  9484                           	opt callstack 29
  9485                           
  9486                           ;incstack = 0
  9487                           ;Lcd_Out2@y stored from wreg
  9488  003C06  6E09               	movwf	Lcd_Out2@y,c
  9489                           
  9490                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  9491  003C08  D00D               	goto	l4757
  9492  003C0A                     l4747:
  9493  003C0A  5004               	movf	Lcd_Out2@x,w,c
  9494  003C0C  0F80               	addlw	128
  9495  003C0E  D008               	goto	L17
  9496  003C10                     l4749:
  9497  003C10  5004               	movf	Lcd_Out2@x,w,c
  9498  003C12  0FC0               	addlw	192
  9499  003C14  D005               	goto	L17
  9500  003C16                     l4751:
  9501  003C16  5004               	movf	Lcd_Out2@x,w,c
  9502  003C18  0F94               	addlw	148
  9503  003C1A  D002               	goto	L17
  9504  003C1C                     l4753:
  9505  003C1C  5004               	movf	Lcd_Out2@x,w,c
  9506  003C1E  0FD4               	addlw	212
  9507  003C20                     L17:
  9508  003C20  6E0A               	movwf	Lcd_Out2@data,c
  9509  003C22  D014               	goto	l4759
  9510  003C24                     l4757:
  9511  003C24  5009               	movf	Lcd_Out2@y,w,c
  9512  003C26  6E07               	movwf	??_Lcd_Out2& (0+255),c
  9513  003C28  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  9514                           
  9515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9516                           ; Switch size 1, requested type "simple"
  9517                           ; Number of cases is 1, Range of values is 0 to 0
  9518                           ; switch strategies available:
  9519                           ; Name         Instructions Cycles
  9520                           ; simple_byte            4     3 (average)
  9521                           ;	Chosen strategy is simple_byte
  9522  003C2A  5008               	movf	??_Lcd_Out2+1,w,c
  9523  003C2C  0A00               	xorlw	0	; case 0
  9524  003C2E  A4D8               	btfss	status,2,c
  9525  003C30  D00D               	goto	l4759
  9526                           
  9527                           ; Switch size 1, requested type "simple"
  9528                           ; Number of cases is 4, Range of values is 1 to 4
  9529                           ; switch strategies available:
  9530                           ; Name         Instructions Cycles
  9531                           ; simple_byte           13     7 (average)
  9532                           ;	Chosen strategy is simple_byte
  9533  003C32  5007               	movf	??_Lcd_Out2,w,c
  9534  003C34  0A01               	xorlw	1	; case 1
  9535  003C36  B4D8               	btfsc	status,2,c
  9536  003C38  D7E8               	goto	l4747
  9537  003C3A  0A03               	xorlw	3	; case 2
  9538  003C3C  B4D8               	btfsc	status,2,c
  9539  003C3E  D7E8               	goto	l4749
  9540  003C40  0A01               	xorlw	1	; case 3
  9541  003C42  B4D8               	btfsc	status,2,c
  9542  003C44  D7E8               	goto	l4751
  9543  003C46  0A07               	xorlw	7	; case 4
  9544  003C48  B4D8               	btfsc	status,2,c
  9545  003C4A  D7E8               	goto	l4753
  9546  003C4C                     l4759:
  9547                           
  9548                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  9549  003C4C  500A               	movf	Lcd_Out2@data,w,c
  9550  003C4E  ECDF  F019         	call	_Lcd_Cmd
  9551                           
  9552                           ;./flex_lcd.h: 127: while(*buffer)
  9553  003C52  D009               	goto	l4765
  9554  003C54                     l4761:
  9555                           
  9556                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  9557  003C54  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9558  003C58  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9559  003C5C  50DF               	movf	indf2,w,c
  9560  003C5E  ECB9  F018         	call	_Lcd_Chr_CP
  9561                           
  9562                           ;./flex_lcd.h: 130:     buffer++;
  9563  003C62  4A05               	infsnz	Lcd_Out2@buffer,f,c
  9564  003C64  2A06               	incf	Lcd_Out2@buffer+1,f,c
  9565  003C66                     l4765:
  9566                           
  9567                           ;./flex_lcd.h: 127: while(*buffer)
  9568  003C66  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9569  003C6A  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9570  003C6E  50DF               	movf	indf2,w,c
  9571  003C70  B4D8               	btfsc	status,2,c
  9572  003C72  0012               	return	
  9573  003C74  D7EF               	goto	l4761
  9574  003C76                     __end_of_Lcd_Out2:
  9575                           	opt callstack 0
  9576                           
  9577 ;; *************** function _Lcd_Out *****************
  9578 ;; Defined at:
  9579 ;;		line 94 in file "./flex_lcd.h"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  y               1    wreg     unsigned char 
  9582 ;;  x               1    3[COMRAM] unsigned char 
  9583 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  9584 ;;		 -> STR_23(8), STR_9(17), STR_8(15), STR_7(5), 
  9585 ;;		 -> STR_5(8), STR_3(6), STR_2(6), STR_1(5), 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  y               1    8[COMRAM] unsigned char 
  9588 ;;  data            1    9[COMRAM] unsigned char 
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9598 ;;      Params:         3       0       0       0       0       0       0       0       0
  9599 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9600 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9601 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9602 ;;Total ram usage:        7 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		_Lcd_Chr_CP
  9607 ;;		_Lcd_Cmd
  9608 ;; This function is called by:
  9609 ;;		_main
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text36
  9614  003B20                     __ptext36:
  9615                           	opt callstack 0
  9616  003B20                     _Lcd_Out:
  9617                           	opt callstack 29
  9618                           
  9619                           ;incstack = 0
  9620                           ;Lcd_Out@y stored from wreg
  9621  003B20  6E09               	movwf	Lcd_Out@y,c
  9622                           
  9623                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  9624  003B22  D00D               	goto	l4731
  9625  003B24                     l4721:
  9626  003B24  5004               	movf	Lcd_Out@x,w,c
  9627  003B26  0F80               	addlw	128
  9628  003B28  D008               	goto	L20
  9629  003B2A                     l4723:
  9630  003B2A  5004               	movf	Lcd_Out@x,w,c
  9631  003B2C  0FC0               	addlw	192
  9632  003B2E  D005               	goto	L20
  9633  003B30                     l4725:
  9634  003B30  5004               	movf	Lcd_Out@x,w,c
  9635  003B32  0F94               	addlw	148
  9636  003B34  D002               	goto	L20
  9637  003B36                     l4727:
  9638  003B36  5004               	movf	Lcd_Out@x,w,c
  9639  003B38  0FD4               	addlw	212
  9640  003B3A                     L20:
  9641  003B3A  6E0A               	movwf	Lcd_Out@data,c
  9642  003B3C  D014               	goto	l4733
  9643  003B3E                     l4731:
  9644  003B3E  5009               	movf	Lcd_Out@y,w,c
  9645  003B40  6E07               	movwf	??_Lcd_Out& (0+255),c
  9646  003B42  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
  9647                           
  9648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9649                           ; Switch size 1, requested type "simple"
  9650                           ; Number of cases is 1, Range of values is 0 to 0
  9651                           ; switch strategies available:
  9652                           ; Name         Instructions Cycles
  9653                           ; simple_byte            4     3 (average)
  9654                           ;	Chosen strategy is simple_byte
  9655  003B44  5008               	movf	??_Lcd_Out+1,w,c
  9656  003B46  0A00               	xorlw	0	; case 0
  9657  003B48  A4D8               	btfss	status,2,c
  9658  003B4A  D00D               	goto	l4733
  9659                           
  9660                           ; Switch size 1, requested type "simple"
  9661                           ; Number of cases is 4, Range of values is 1 to 4
  9662                           ; switch strategies available:
  9663                           ; Name         Instructions Cycles
  9664                           ; simple_byte           13     7 (average)
  9665                           ;	Chosen strategy is simple_byte
  9666  003B4C  5007               	movf	??_Lcd_Out,w,c
  9667  003B4E  0A01               	xorlw	1	; case 1
  9668  003B50  B4D8               	btfsc	status,2,c
  9669  003B52  D7E8               	goto	l4721
  9670  003B54  0A03               	xorlw	3	; case 2
  9671  003B56  B4D8               	btfsc	status,2,c
  9672  003B58  D7E8               	goto	l4723
  9673  003B5A  0A01               	xorlw	1	; case 3
  9674  003B5C  B4D8               	btfsc	status,2,c
  9675  003B5E  D7E8               	goto	l4725
  9676  003B60  0A07               	xorlw	7	; case 4
  9677  003B62  B4D8               	btfsc	status,2,c
  9678  003B64  D7E8               	goto	l4727
  9679  003B66                     l4733:
  9680                           
  9681                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  9682  003B66  500A               	movf	Lcd_Out@data,w,c
  9683  003B68  ECDF  F019         	call	_Lcd_Cmd
  9684                           
  9685                           ;./flex_lcd.h: 106: while(*buffer)
  9686  003B6C  D00A               	goto	l4739
  9687  003B6E                     l4735:
  9688                           
  9689                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  9690  003B6E  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9691  003B72  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9692  003B76                     	if	0	;tblptru may be non-zero
  9693  003B76                     	endif
  9694  003B76                     	if	0	;tblptru may be non-zero
  9695  003B76                     	endif
  9696  003B76  0008               	tblrd		*
  9697  003B78  50F5               	movf	tablat,w,c
  9698  003B7A  ECB9  F018         	call	_Lcd_Chr_CP
  9699                           
  9700                           ;./flex_lcd.h: 109:     buffer++;
  9701  003B7E  4A05               	infsnz	Lcd_Out@buffer,f,c
  9702  003B80  2A06               	incf	Lcd_Out@buffer+1,f,c
  9703  003B82                     l4739:
  9704                           
  9705                           ;./flex_lcd.h: 106: while(*buffer)
  9706  003B82  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9707  003B86  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9708  003B8A                     	if	0	;tblptru may be non-zero
  9709  003B8A                     	endif
  9710  003B8A                     	if	0	;tblptru may be non-zero
  9711  003B8A                     	endif
  9712  003B8A  0008               	tblrd		*
  9713  003B8C  50F5               	movf	tablat,w,c
  9714  003B8E  0900               	iorlw	0
  9715  003B90  B4D8               	btfsc	status,2,c
  9716  003B92  0012               	return	
  9717  003B94  D7EC               	goto	l4735
  9718  003B96                     __end_of_Lcd_Out:
  9719                           	opt callstack 0
  9720                           
  9721 ;; *************** function _Lcd_Chr_CP *****************
  9722 ;; Defined at:
  9723 ;;		line 136 in file "./flex_lcd.h"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  data            1    wreg     unsigned char 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;  data            1    2[COMRAM] unsigned char 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0
  9738 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9739 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9740 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9741 ;;Total ram usage:        3 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; This function calls:
  9744 ;;		Nothing
  9745 ;; This function is called by:
  9746 ;;		_Lcd_Out
  9747 ;;		_Lcd_Out2
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text37
  9752  003172                     __ptext37:
  9753                           	opt callstack 0
  9754  003172                     _Lcd_Chr_CP:
  9755                           	opt callstack 29
  9756                           
  9757                           ;incstack = 0
  9758                           ;Lcd_Chr_CP@data stored from wreg
  9759  003172  6E03               	movwf	Lcd_Chr_CP@data,c
  9760                           
  9761                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  9762  003174  9A83               	bcf	3971,5,c	;volatile
  9763  003176  8883               	bsf	3971,4,c	;volatile
  9764                           
  9765                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  9766  003178  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  9767  00317A  AE03               	btfss	Lcd_Chr_CP@data,7,c
  9768  00317C  D001               	bra	u5615
  9769  00317E  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  9770  003180                     u5615:
  9771  003180  0E01               	movlw	1
  9772  003182  1601               	andwf	??_Lcd_Chr_CP,f,c
  9773  003184  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9774  003186  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9775  003188  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9776  00318A  5083               	movf	3971,w,c	;volatile
  9777  00318C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9778  00318E  0BF7               	andlw	-9
  9779  003190  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9780  003192  6E83               	movwf	3971,c	;volatile
  9781  003194  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9782  003198  0E06               	movlw	6
  9783  00319A  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9784  00319C                     u5625:
  9785  00319C  90D8               	bcf	status,0,c
  9786  00319E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9787  0031A0  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9788  0031A2  D7FC               	goto	u5625
  9789  0031A4  0E01               	movlw	1
  9790  0031A6  1601               	andwf	??_Lcd_Chr_CP,f,c
  9791  0031A8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9792  0031AA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9793  0031AC  5083               	movf	3971,w,c	;volatile
  9794  0031AE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9795  0031B0  0BFB               	andlw	-5
  9796  0031B2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9797  0031B4  6E83               	movwf	3971,c	;volatile
  9798                           
  9799                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  9800  0031B6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9801  0031BA  0E05               	movlw	5
  9802  0031BC  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  9803  0031BE                     u5635:
  9804  0031BE  90D8               	bcf	status,0,c
  9805  0031C0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9806  0031C2  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  9807  0031C4  D7FC               	goto	u5635
  9808  0031C6  0E01               	movlw	1
  9809  0031C8  1601               	andwf	??_Lcd_Chr_CP,f,c
  9810  0031CA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9811  0031CC  5083               	movf	3971,w,c	;volatile
  9812  0031CE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9813  0031D0  0BFD               	andlw	-3
  9814  0031D2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9815  0031D4  6E83               	movwf	3971,c	;volatile
  9816  0031D6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9817  0031DA  3A01               	swapf	??_Lcd_Chr_CP,f,c
  9818  0031DC  0E0F               	movlw	15
  9819  0031DE  1601               	andwf	??_Lcd_Chr_CP,f,c
  9820  0031E0  0E01               	movlw	1
  9821  0031E2  1601               	andwf	??_Lcd_Chr_CP,f,c
  9822  0031E4  5083               	movf	3971,w,c	;volatile
  9823  0031E6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9824  0031E8  0BFE               	andlw	-2
  9825  0031EA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9826  0031EC  6E83               	movwf	3971,c	;volatile
  9827                           
  9828                           ;./flex_lcd.h: 140: _delay(10);
  9829  0031EE  0E03               	movlw	3
  9830  0031F0                     u6077:
  9831  0031F0  2EE8               	decfsz	wreg,f,c
  9832  0031F2  D7FE               	bra	u6077
  9833  0031F4  F000               	nop	
  9834                           
  9835                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  9836  0031F6  8A83               	bsf	3971,5,c	;volatile
  9837  0031F8  0E03               	movlw	3
  9838  0031FA                     u6087:
  9839  0031FA  2EE8               	decfsz	wreg,f,c
  9840  0031FC  D7FE               	bra	u6087
  9841  0031FE  F000               	nop	
  9842  003200  9A83               	bcf	3971,5,c	;volatile
  9843                           
  9844                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  9845  003202  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9846  003206  90D8               	bcf	status,0,c
  9847  003208  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9848  00320A  90D8               	bcf	status,0,c
  9849  00320C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9850  00320E  90D8               	bcf	status,0,c
  9851  003210  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9852  003212  0E01               	movlw	1
  9853  003214  1601               	andwf	??_Lcd_Chr_CP,f,c
  9854  003216  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9855  003218  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9856  00321A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9857  00321C  5083               	movf	3971,w,c	;volatile
  9858  00321E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9859  003220  0BF7               	andlw	-9
  9860  003222  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9861  003224  6E83               	movwf	3971,c	;volatile
  9862  003226  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9863  00322A  90D8               	bcf	status,0,c
  9864  00322C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9865  00322E  90D8               	bcf	status,0,c
  9866  003230  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9867  003232  0E01               	movlw	1
  9868  003234  1601               	andwf	??_Lcd_Chr_CP,f,c
  9869  003236  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9870  003238  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9871  00323A  5083               	movf	3971,w,c	;volatile
  9872  00323C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9873  00323E  0BFB               	andlw	-5
  9874  003240  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9875  003242  6E83               	movwf	3971,c	;volatile
  9876                           
  9877                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  9878  003244  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9879  003248  90D8               	bcf	status,0,c
  9880  00324A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  9881  00324C  0E01               	movlw	1
  9882  00324E  1601               	andwf	??_Lcd_Chr_CP,f,c
  9883  003250  4601               	rlncf	??_Lcd_Chr_CP,f,c
  9884  003252  5083               	movf	3971,w,c	;volatile
  9885  003254  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9886  003256  0BFD               	andlw	-3
  9887  003258  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9888  00325A  6E83               	movwf	3971,c	;volatile
  9889  00325C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9890  003260  0E01               	movlw	1
  9891  003262  1601               	andwf	??_Lcd_Chr_CP,f,c
  9892  003264  5083               	movf	3971,w,c	;volatile
  9893  003266  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9894  003268  0BFE               	andlw	-2
  9895  00326A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  9896  00326C  6E83               	movwf	3971,c	;volatile
  9897                           
  9898                           ;./flex_lcd.h: 144: _delay(10);
  9899  00326E  0E03               	movlw	3
  9900  003270                     u6097:
  9901  003270  2EE8               	decfsz	wreg,f,c
  9902  003272  D7FE               	bra	u6097
  9903  003274  F000               	nop	
  9904                           
  9905                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
  9906  003276  8A83               	bsf	3971,5,c	;volatile
  9907  003278  0E03               	movlw	3
  9908  00327A                     u6107:
  9909  00327A  2EE8               	decfsz	wreg,f,c
  9910  00327C  D7FE               	bra	u6107
  9911  00327E  F000               	nop	
  9912  003280  9A83               	bcf	3971,5,c	;volatile
  9913                           
  9914                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(8000000/4000000.0)));
  9915  003282  0E03               	movlw	3
  9916  003284                     u6117:
  9917  003284  2EE8               	decfsz	wreg,f,c
  9918  003286  D7FE               	bra	u6117
  9919  003288  F000               	nop	
  9920  00328A  0E0F               	movlw	15
  9921  00328C  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  9922  00328E  0E48               	movlw	72
  9923  003290                     u6127:
  9924  003290  2EE8               	decfsz	wreg,f,c
  9925  003292  D7FE               	bra	u6127
  9926  003294  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  9927  003296  D7FC               	bra	u6127
  9928  003298  0012               	return		;funcret
  9929  00329A                     __end_of_Lcd_Chr_CP:
  9930                           	opt callstack 0
  9931                           
  9932 ;; *************** function _Lcd_Init *****************
  9933 ;; Defined at:
  9934 ;;		line 52 in file "./flex_lcd.h"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  data            1    4[COMRAM] unsigned char 
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0
  9949 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9950 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9951 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9952 ;;Total ram usage:        2 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:    1
  9955 ;; This function calls:
  9956 ;;		_Lcd_Cmd
  9957 ;; This function is called by:
  9958 ;;		_main
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text38
  9963  0034DE                     __ptext38:
  9964                           	opt callstack 0
  9965  0034DE                     _Lcd_Init:
  9966                           	opt callstack 29
  9967                           
  9968                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  9969                           
  9970                           ;incstack = 0
  9971  0034DE  9695               	bcf	3989,3,c	;volatile
  9972                           
  9973                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  9974  0034E0  9495               	bcf	3989,2,c	;volatile
  9975                           
  9976                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  9977  0034E2  9295               	bcf	3989,1,c	;volatile
  9978                           
  9979                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  9980  0034E4  9095               	bcf	3989,0,c	;volatile
  9981                           
  9982                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  9983  0034E6  9A95               	bcf	3989,5,c	;volatile
  9984                           
  9985                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  9986  0034E8  9895               	bcf	3989,4,c	;volatile
  9987                           
  9988                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  9989  0034EA  9683               	bcf	3971,3,c	;volatile
  9990                           
  9991                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  9992  0034EC  9483               	bcf	3971,2,c	;volatile
  9993                           
  9994                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  9995  0034EE  9283               	bcf	3971,1,c	;volatile
  9996                           
  9997                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  9998  0034F0  9083               	bcf	3971,0,c	;volatile
  9999                           
 10000                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
 10001  0034F2  9A83               	bcf	3971,5,c	;volatile
 10002                           
 10003                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
 10004  0034F4  9883               	bcf	3971,4,c	;volatile
 10005                           
 10006                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10007  0034F6  0E0F               	movlw	15
 10008  0034F8  6E04               	movwf	??_Lcd_Init& (0+255),c
 10009  0034FA  0E48               	movlw	72
 10010  0034FC                     u6137:
 10011  0034FC  2EE8               	decfsz	wreg,f,c
 10012  0034FE  D7FE               	bra	u6137
 10013  003500  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10014  003502  D7FC               	bra	u6137
 10015                           
 10016                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10017  003504  0E0F               	movlw	15
 10018  003506  6E04               	movwf	??_Lcd_Init& (0+255),c
 10019  003508  0E48               	movlw	72
 10020  00350A                     u6147:
 10021  00350A  2EE8               	decfsz	wreg,f,c
 10022  00350C  D7FE               	bra	u6147
 10023  00350E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10024  003510  D7FC               	bra	u6147
 10025                           
 10026                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10027  003512  0E0F               	movlw	15
 10028  003514  6E04               	movwf	??_Lcd_Init& (0+255),c
 10029  003516  0E48               	movlw	72
 10030  003518                     u6157:
 10031  003518  2EE8               	decfsz	wreg,f,c
 10032  00351A  D7FE               	bra	u6157
 10033  00351C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10034  00351E  D7FC               	bra	u6157
 10035                           
 10036                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10037  003520  0E0F               	movlw	15
 10038  003522  6E04               	movwf	??_Lcd_Init& (0+255),c
 10039  003524  0E48               	movlw	72
 10040  003526                     u6167:
 10041  003526  2EE8               	decfsz	wreg,f,c
 10042  003528  D7FE               	bra	u6167
 10043  00352A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10044  00352C  D7FC               	bra	u6167
 10045                           
 10046                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10047  00352E  0E0F               	movlw	15
 10048  003530  6E04               	movwf	??_Lcd_Init& (0+255),c
 10049  003532  0E48               	movlw	72
 10050  003534                     u6177:
 10051  003534  2EE8               	decfsz	wreg,f,c
 10052  003536  D7FE               	bra	u6177
 10053  003538  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10054  00353A  D7FC               	bra	u6177
 10055                           
 10056                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10057  00353C  0E0F               	movlw	15
 10058  00353E  6E04               	movwf	??_Lcd_Init& (0+255),c
 10059  003540  0E48               	movlw	72
 10060  003542                     u6187:
 10061  003542  2EE8               	decfsz	wreg,f,c
 10062  003544  D7FE               	bra	u6187
 10063  003546  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10064  003548  D7FC               	bra	u6187
 10065                           
 10066                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
 10067  00354A  0E01               	movlw	1
 10068  00354C  6E05               	movwf	Lcd_Init@data,c
 10069  00354E                     l25:
 10070                           
 10071                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
 10072  00354E  9683               	bcf	3971,3,c	;volatile
 10073  003550  9483               	bcf	3971,2,c	;volatile
 10074  003552  8283               	bsf	3971,1,c	;volatile
 10075  003554  8083               	bsf	3971,0,c	;volatile
 10076  003556  9A83               	bcf	3971,5,c	;volatile
 10077                           
 10078                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
 10079  003558  9883               	bcf	3971,4,c	;volatile
 10080  00355A  9683               	bcf	3971,3,c	;volatile
 10081  00355C  9483               	bcf	3971,2,c	;volatile
 10082  00355E  8283               	bsf	3971,1,c	;volatile
 10083  003560  8083               	bsf	3971,0,c	;volatile
 10084                           
 10085                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10086  003562  8A83               	bsf	3971,5,c	;volatile
 10087  003564  9883               	bcf	3971,4,c	;volatile
 10088                           
 10089                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(8000000/4000000.0)));
 10090  003566  0E03               	movlw	3
 10091  003568                     u6197:
 10092  003568  2EE8               	decfsz	wreg,f,c
 10093  00356A  D7FE               	bra	u6197
 10094  00356C  F000               	nop	
 10095                           
 10096                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
 10097  00356E  9683               	bcf	3971,3,c	;volatile
 10098  003570  9483               	bcf	3971,2,c	;volatile
 10099  003572  8283               	bsf	3971,1,c	;volatile
 10100  003574  8083               	bsf	3971,0,c	;volatile
 10101  003576  9A83               	bcf	3971,5,c	;volatile
 10102                           
 10103                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
 10104  003578  9883               	bcf	3971,4,c	;volatile
 10105                           
 10106                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10107  00357A  0E0F               	movlw	15
 10108  00357C  6E04               	movwf	??_Lcd_Init& (0+255),c
 10109  00357E  0E48               	movlw	72
 10110  003580                     u6207:
 10111  003580  2EE8               	decfsz	wreg,f,c
 10112  003582  D7FE               	bra	u6207
 10113  003584  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10114  003586  D7FC               	bra	u6207
 10115                           
 10116                           ;./flex_lcd.h: 81: }
 10117  003588  2A05               	incf	Lcd_Init@data,f,c
 10118  00358A  0E03               	movlw	3
 10119  00358C  6405               	cpfsgt	Lcd_Init@data,c
 10120  00358E  D7DF               	goto	l25
 10121                           
 10122                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10123  003590  9683               	bcf	3971,3,c	;volatile
 10124  003592  9483               	bcf	3971,2,c	;volatile
 10125  003594  8283               	bsf	3971,1,c	;volatile
 10126  003596  9083               	bcf	3971,0,c	;volatile
 10127  003598  9A83               	bcf	3971,5,c	;volatile
 10128  00359A  9883               	bcf	3971,4,c	;volatile
 10129                           
 10130                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10131  00359C  9683               	bcf	3971,3,c	;volatile
 10132  00359E  9483               	bcf	3971,2,c	;volatile
 10133  0035A0  8283               	bsf	3971,1,c	;volatile
 10134  0035A2  9083               	bcf	3971,0,c	;volatile
 10135  0035A4  8A83               	bsf	3971,5,c	;volatile
 10136  0035A6  9883               	bcf	3971,4,c	;volatile
 10137                           
 10138                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000/4000000.0)));
 10139  0035A8  0E03               	movlw	3
 10140  0035AA                     u6217:
 10141  0035AA  2EE8               	decfsz	wreg,f,c
 10142  0035AC  D7FE               	bra	u6217
 10143  0035AE  F000               	nop	
 10144                           
 10145                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10146  0035B0  9683               	bcf	3971,3,c	;volatile
 10147  0035B2  9483               	bcf	3971,2,c	;volatile
 10148  0035B4  8283               	bsf	3971,1,c	;volatile
 10149  0035B6  9083               	bcf	3971,0,c	;volatile
 10150  0035B8  9A83               	bcf	3971,5,c	;volatile
 10151  0035BA  9883               	bcf	3971,4,c	;volatile
 10152                           
 10153                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10154  0035BC  0E0F               	movlw	15
 10155  0035BE  6E04               	movwf	??_Lcd_Init& (0+255),c
 10156  0035C0  0E48               	movlw	72
 10157  0035C2                     u6227:
 10158  0035C2  2EE8               	decfsz	wreg,f,c
 10159  0035C4  D7FE               	bra	u6227
 10160  0035C6  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10161  0035C8  D7FC               	bra	u6227
 10162  0035CA  0E28               	movlw	40
 10163  0035CC  ECDF  F019         	call	_Lcd_Cmd
 10164  0035D0  0E10               	movlw	16
 10165  0035D2  ECDF  F019         	call	_Lcd_Cmd
 10166  0035D6  0E01               	movlw	1
 10167  0035D8  ECDF  F019         	call	_Lcd_Cmd
 10168  0035DC  0E0F               	movlw	15
 10169  0035DE  ECDF  F019         	call	_Lcd_Cmd
 10170  0035E2  0012               	return		;funcret
 10171  0035E4                     __end_of_Lcd_Init:
 10172                           	opt callstack 0
 10173                           
 10174 ;; *************** function _Lcd_Cmd *****************
 10175 ;; Defined at:
 10176 ;;		line 150 in file "./flex_lcd.h"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  data            1    wreg     unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  data            1    2[COMRAM] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0
 10191 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10192 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10193 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10194 ;;Total ram usage:        3 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_Lcd_Init
 10200 ;;		_Lcd_Out
 10201 ;;		_Lcd_Out2
 10202 ;;		_main
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text39
 10207  0033BE                     __ptext39:
 10208                           	opt callstack 0
 10209  0033BE                     _Lcd_Cmd:
 10210                           	opt callstack 29
 10211                           
 10212                           ;incstack = 0
 10213                           ;Lcd_Cmd@data stored from wreg
 10214  0033BE  6E03               	movwf	Lcd_Cmd@data,c
 10215                           
 10216                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10217  0033C0  9A83               	bcf	3971,5,c	;volatile
 10218  0033C2  9883               	bcf	3971,4,c	;volatile
 10219                           
 10220                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
 10221  0033C4  6A01               	clrf	??_Lcd_Cmd& (0+255),c
 10222  0033C6  AE03               	btfss	Lcd_Cmd@data,7,c
 10223  0033C8  D001               	bra	u5585
 10224  0033CA  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
 10225  0033CC                     u5585:
 10226  0033CC  0E01               	movlw	1
 10227  0033CE  1601               	andwf	??_Lcd_Cmd,f,c
 10228  0033D0  4601               	rlncf	??_Lcd_Cmd,f,c
 10229  0033D2  4601               	rlncf	??_Lcd_Cmd,f,c
 10230  0033D4  4601               	rlncf	??_Lcd_Cmd,f,c
 10231  0033D6  5083               	movf	3971,w,c	;volatile
 10232  0033D8  1801               	xorwf	??_Lcd_Cmd,w,c
 10233  0033DA  0BF7               	andlw	-9
 10234  0033DC  1801               	xorwf	??_Lcd_Cmd,w,c
 10235  0033DE  6E83               	movwf	3971,c	;volatile
 10236  0033E0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10237  0033E4  0E06               	movlw	6
 10238  0033E6  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10239  0033E8                     u5595:
 10240  0033E8  90D8               	bcf	status,0,c
 10241  0033EA  3201               	rrcf	??_Lcd_Cmd,f,c
 10242  0033EC  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10243  0033EE  D7FC               	goto	u5595
 10244  0033F0  0E01               	movlw	1
 10245  0033F2  1601               	andwf	??_Lcd_Cmd,f,c
 10246  0033F4  4601               	rlncf	??_Lcd_Cmd,f,c
 10247  0033F6  4601               	rlncf	??_Lcd_Cmd,f,c
 10248  0033F8  5083               	movf	3971,w,c	;volatile
 10249  0033FA  1801               	xorwf	??_Lcd_Cmd,w,c
 10250  0033FC  0BFB               	andlw	-5
 10251  0033FE  1801               	xorwf	??_Lcd_Cmd,w,c
 10252  003400  6E83               	movwf	3971,c	;volatile
 10253                           
 10254                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
 10255  003402  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10256  003406  0E05               	movlw	5
 10257  003408  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10258  00340A                     u5605:
 10259  00340A  90D8               	bcf	status,0,c
 10260  00340C  3201               	rrcf	??_Lcd_Cmd,f,c
 10261  00340E  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10262  003410  D7FC               	goto	u5605
 10263  003412  0E01               	movlw	1
 10264  003414  1601               	andwf	??_Lcd_Cmd,f,c
 10265  003416  4601               	rlncf	??_Lcd_Cmd,f,c
 10266  003418  5083               	movf	3971,w,c	;volatile
 10267  00341A  1801               	xorwf	??_Lcd_Cmd,w,c
 10268  00341C  0BFD               	andlw	-3
 10269  00341E  1801               	xorwf	??_Lcd_Cmd,w,c
 10270  003420  6E83               	movwf	3971,c	;volatile
 10271  003422  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10272  003426  3A01               	swapf	??_Lcd_Cmd,f,c
 10273  003428  0E0F               	movlw	15
 10274  00342A  1601               	andwf	??_Lcd_Cmd,f,c
 10275  00342C  0E01               	movlw	1
 10276  00342E  1601               	andwf	??_Lcd_Cmd,f,c
 10277  003430  5083               	movf	3971,w,c	;volatile
 10278  003432  1801               	xorwf	??_Lcd_Cmd,w,c
 10279  003434  0BFE               	andlw	-2
 10280  003436  1801               	xorwf	??_Lcd_Cmd,w,c
 10281  003438  6E83               	movwf	3971,c	;volatile
 10282                           
 10283                           ;./flex_lcd.h: 154: _delay(10);
 10284  00343A  0E03               	movlw	3
 10285  00343C                     u6237:
 10286  00343C  2EE8               	decfsz	wreg,f,c
 10287  00343E  D7FE               	bra	u6237
 10288  003440  F000               	nop	
 10289                           
 10290                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10291  003442  8A83               	bsf	3971,5,c	;volatile
 10292  003444  0E03               	movlw	3
 10293  003446                     u6247:
 10294  003446  2EE8               	decfsz	wreg,f,c
 10295  003448  D7FE               	bra	u6247
 10296  00344A  F000               	nop	
 10297  00344C  9A83               	bcf	3971,5,c	;volatile
 10298                           
 10299                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
 10300  00344E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10301  003452  90D8               	bcf	status,0,c
 10302  003454  3201               	rrcf	??_Lcd_Cmd,f,c
 10303  003456  90D8               	bcf	status,0,c
 10304  003458  3201               	rrcf	??_Lcd_Cmd,f,c
 10305  00345A  90D8               	bcf	status,0,c
 10306  00345C  3201               	rrcf	??_Lcd_Cmd,f,c
 10307  00345E  0E01               	movlw	1
 10308  003460  1601               	andwf	??_Lcd_Cmd,f,c
 10309  003462  4601               	rlncf	??_Lcd_Cmd,f,c
 10310  003464  4601               	rlncf	??_Lcd_Cmd,f,c
 10311  003466  4601               	rlncf	??_Lcd_Cmd,f,c
 10312  003468  5083               	movf	3971,w,c	;volatile
 10313  00346A  1801               	xorwf	??_Lcd_Cmd,w,c
 10314  00346C  0BF7               	andlw	-9
 10315  00346E  1801               	xorwf	??_Lcd_Cmd,w,c
 10316  003470  6E83               	movwf	3971,c	;volatile
 10317  003472  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10318  003476  90D8               	bcf	status,0,c
 10319  003478  3201               	rrcf	??_Lcd_Cmd,f,c
 10320  00347A  90D8               	bcf	status,0,c
 10321  00347C  3201               	rrcf	??_Lcd_Cmd,f,c
 10322  00347E  0E01               	movlw	1
 10323  003480  1601               	andwf	??_Lcd_Cmd,f,c
 10324  003482  4601               	rlncf	??_Lcd_Cmd,f,c
 10325  003484  4601               	rlncf	??_Lcd_Cmd,f,c
 10326  003486  5083               	movf	3971,w,c	;volatile
 10327  003488  1801               	xorwf	??_Lcd_Cmd,w,c
 10328  00348A  0BFB               	andlw	-5
 10329  00348C  1801               	xorwf	??_Lcd_Cmd,w,c
 10330  00348E  6E83               	movwf	3971,c	;volatile
 10331                           
 10332                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
 10333  003490  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10334  003494  90D8               	bcf	status,0,c
 10335  003496  3201               	rrcf	??_Lcd_Cmd,f,c
 10336  003498  0E01               	movlw	1
 10337  00349A  1601               	andwf	??_Lcd_Cmd,f,c
 10338  00349C  4601               	rlncf	??_Lcd_Cmd,f,c
 10339  00349E  5083               	movf	3971,w,c	;volatile
 10340  0034A0  1801               	xorwf	??_Lcd_Cmd,w,c
 10341  0034A2  0BFD               	andlw	-3
 10342  0034A4  1801               	xorwf	??_Lcd_Cmd,w,c
 10343  0034A6  6E83               	movwf	3971,c	;volatile
 10344  0034A8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10345  0034AC  0E01               	movlw	1
 10346  0034AE  1601               	andwf	??_Lcd_Cmd,f,c
 10347  0034B0  5083               	movf	3971,w,c	;volatile
 10348  0034B2  1801               	xorwf	??_Lcd_Cmd,w,c
 10349  0034B4  0BFE               	andlw	-2
 10350  0034B6  1801               	xorwf	??_Lcd_Cmd,w,c
 10351  0034B8  6E83               	movwf	3971,c	;volatile
 10352                           
 10353                           ;./flex_lcd.h: 158: _delay(10);
 10354  0034BA  0E03               	movlw	3
 10355  0034BC                     u6257:
 10356  0034BC  2EE8               	decfsz	wreg,f,c
 10357  0034BE  D7FE               	bra	u6257
 10358  0034C0  F000               	nop	
 10359                           
 10360                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10361  0034C2  8A83               	bsf	3971,5,c	;volatile
 10362  0034C4  0E03               	movlw	3
 10363  0034C6                     u6267:
 10364  0034C6  2EE8               	decfsz	wreg,f,c
 10365  0034C8  D7FE               	bra	u6267
 10366  0034CA  F000               	nop	
 10367  0034CC  9A83               	bcf	3971,5,c	;volatile
 10368                           
 10369                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10370  0034CE  0E0F               	movlw	15
 10371  0034D0  6E01               	movwf	??_Lcd_Cmd& (0+255),c
 10372  0034D2  0E48               	movlw	72
 10373  0034D4                     u6277:
 10374  0034D4  2EE8               	decfsz	wreg,f,c
 10375  0034D6  D7FE               	bra	u6277
 10376  0034D8  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
 10377  0034DA  D7FC               	bra	u6277
 10378  0034DC  0012               	return		;funcret
 10379  0034DE                     __end_of_Lcd_Cmd:
 10380                           	opt callstack 0
 10381                           
 10382                           	psect	rparam
 10383  0000                     tosu	equ	0xFFF
 10384                           tosh	equ	0xFFE
 10385                           tosl	equ	0xFFD
 10386                           stkptr	equ	0xFFC
 10387                           pclatu	equ	0xFFB
 10388                           pclath	equ	0xFFA
 10389                           pcl	equ	0xFF9
 10390                           tblptru	equ	0xFF8
 10391                           tblptrh	equ	0xFF7
 10392                           tblptrl	equ	0xFF6
 10393                           tablat	equ	0xFF5
 10394                           prodh	equ	0xFF4
 10395                           prodl	equ	0xFF3
 10396                           indf0	equ	0xFEF
 10397                           postinc0	equ	0xFEE
 10398                           postdec0	equ	0xFED
 10399                           preinc0	equ	0xFEC
 10400                           plusw0	equ	0xFEB
 10401                           fsr0h	equ	0xFEA
 10402                           fsr0l	equ	0xFE9
 10403                           wreg	equ	0xFE8
 10404                           indf1	equ	0xFE7
 10405                           postinc1	equ	0xFE6
 10406                           postdec1	equ	0xFE5
 10407                           preinc1	equ	0xFE4
 10408                           plusw1	equ	0xFE3
 10409                           fsr1h	equ	0xFE2
 10410                           fsr1l	equ	0xFE1
 10411                           bsr	equ	0xFE0
 10412                           indf2	equ	0xFDF
 10413                           postinc2	equ	0xFDE
 10414                           postdec2	equ	0xFDD
 10415                           preinc2	equ	0xFDC
 10416                           plusw2	equ	0xFDB
 10417                           fsr2h	equ	0xFDA
 10418                           fsr2l	equ	0xFD9
 10419                           status	equ	0xFD8


Data Sizes:
    Strings     201
    Constant    0
    Data        0
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     88     152
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_37(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_37(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[6]), STR_24(CODE[7]), STR_22(CODE[12]), 
		 -> STR_21(CODE[6]), STR_20(CODE[7]), STR_19(CODE[13]), STR_18(CODE[6]), 
		 -> STR_17(CODE[7]), STR_16(CODE[13]), STR_15(CODE[6]), STR_14(CODE[7]), 
		 -> STR_13(CODE[12]), STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Word(BANK1[16]), numero3(BANK1[16]), numero2(BANK0[16]), numero1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Word(BANK1[16]), numero3(BANK1[16]), numero2(BANK0[16]), numero1(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S987_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Word(BANK1[16]), numero3(BANK1[16]), numero2(BANK0[16]), numero1(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Word(BANK1[16]), numero3(BANK1[16]), numero2(BANK0[16]), numero1(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[6]), STR_24(CODE[7]), STR_22(CODE[12]), 
		 -> STR_21(CODE[6]), STR_20(CODE[7]), STR_19(CODE[13]), STR_18(CODE[6]), 
		 -> STR_17(CODE[7]), STR_16(CODE[13]), STR_15(CODE[6]), STR_14(CODE[7]), 
		 -> STR_13(CODE[12]), STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[6]), STR_24(CODE[7]), STR_22(CODE[12]), 
		 -> STR_21(CODE[6]), STR_20(CODE[7]), STR_19(CODE[13]), STR_18(CODE[6]), 
		 -> STR_17(CODE[7]), STR_16(CODE[13]), STR_15(CODE[6]), STR_14(CODE[7]), 
		 -> STR_13(CODE[12]), STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[11]), STR_25(CODE[6]), STR_24(CODE[7]), STR_22(CODE[12]), 
		 -> STR_21(CODE[6]), STR_20(CODE[7]), STR_19(CODE[13]), STR_18(CODE[6]), 
		 -> STR_17(CODE[7]), STR_16(CODE[13]), STR_15(CODE[6]), STR_14(CODE[7]), 
		 -> STR_13(CODE[12]), STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Word(BANK1[16]), numero3(BANK1[16]), numero2(BANK0[16]), numero1(BANK0[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_23(CODE[8]), STR_9(CODE[17]), STR_8(CODE[15]), STR_7(CODE[5]), 
		 -> STR_5(CODE[8]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   55901
                                             91 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   37605
                                             81 COMRAM    10    10      0
                                             80 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34660
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   34265
                                             63 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23137
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3345
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3    3269
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3    1749
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fladd
   ___fldiv
   ___fleq
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___flmul (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167      20        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 26 16:38:53 2019

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l25 354E                       l97 146A             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l180 2A24                      l236 0C08                      l182 2A2C  
                    l262 0EEA                      l169 39AA                      l615 3678  
                    l904 2696                      l905 2692                      l934 289A  
                    l880 253C                      l945 2908                      l946 2904  
                    l964 214A                      l981 23E8                      l973 2362  
                    l974 235E                      l895 2630                      l879 255E  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _abs 3E76                      _pad 397C             ___awmod@sign 0006  
                    wreg 000FE8             __CFG_FOSC$HS 000000             ___flmul@aexp 0012  
           ___flmul@bexp 0013             ___flmul@sign 000D             ___flmul@temp 0018  
           ___flmul@prod 0014             __CFG_LVP$OFF 000000             ___fltol@exp1 000A  
           __CFG_WDT$OFF 000000                     l1012 30EE                     l1005 3070  
                   ?_abs 0013                     l1036 3E9E                     l1067 3028  
                   l1079 2D0A                     l1159 3DB0                     l3201 2448  
                   l4011 3828                     l4003 3800                     l3205 244C  
                   l4005 380C                     l4023 3E36                     l3303 25A4  
                   l4111 0944                     l3401 39B4                     l4033 2A06  
                   l3305 25A8                     l3313 25BA                     l3225 2490  
                   l4201 0C60                     l5001 196C                     l4051 2A56  
                   l3331 2654                     l3323 2620                     l4203 0C64  
                   l4131 09DE                     l5011 19C6                     l3173 3E5E  
                   l3405 39CC                     l4061 2B4E                     l3341 266A  
                   l3237 24B4                     l3229 2494                     l4301 0FFA  
                   l4213 0C82                     l4133 09E8                     l5013 19CC  
                   l3511 2E24                     l3159 38F4                     l4047 2A46  
                   l4223 0CB6                     l4119 095A                     l3513 2E38  
                   l3505 2DFE                     l3169 3E48                     l3177 3F40  
                   l3409 39F8                     l4081 2BB2                     l3281 254E  
                   l3425 372C                     l3441 3CDC                     l4321 10D4  
                   l4161 0AD8                     l4129 09C6                     l4137 0A0E  
                   l5009 19B4                     l5033 1ADC                     l4411 2F94  
                   l3531 2ED0                     l3523 2E94                     l3179 3F44  
                   l3603 2794                     l3347 2674                     l3267 24F0  
                   l3435 3776                     l4251 0E8A                     l4219 0CA6  
                   l4171 0B9C                     l4147 0A7A                     l4155 0A94  
                   l4405 2F5E                     l4085 2BCA                     l3701 29A8  
                   l3621 27E2                     l3381 270C                     l3429 3736  
                   l4261 0F04                     l4309 1092                     l4245 0E4C  
                   l4229 0CE0                     l4237 0DD6                     l4165 0B12  
                   l4501 1C60                     l5037 1AE4                     l4415 2FC8  
                   l4407 2F66                     l3527 2EAA                     l3551 3304  
                   l3543 32C6                     l3615 27CC                     l3607 2798  
                   l3375 2702                     l3367 26DC                     l3295 2582  
                   l3279 254A                     l4183 0BF0                     l4167 0B60  
                   l4409 2F6C                     l3553 3318                     l3721 20F6  
                   l3473 2D6A                     l4337 1120                     l4273 0F86  
                   l4193 0C18                     l4521 1D56                     l3563 3376  
                   l3547 32EA                     l3395 3994                     l3723 20FA  
                   l3379 270A                     l3459 2C6C                     l4339 112A  
                   l4259 0EE2                     l4187 0C12                     l4099 0916  
                   l4435 3864                     l3901 3BB6                     l3653 2898  
                   l3629 27FA                     l3821 23C4                     l3741 213A  
                   l3725 210A                     l3477 2D98                     l3469 2D2C  
                   l4349 1180                     l4285 0FB6                     l4293 0FD6  
                   l4437 3872                     l4517 1D2A                     l4461 1B5C  
                   ?_pad 0011                     l4391 2F08                     l3567 339C  
                   l3559 3360                     l3399 39A2                     l3647 2872  
                   l3639 284A                     l3583 2754                     l4375 120C  
                   l4359 11AC                     l4519 1D48                     l4471 1B74  
                   l4463 1B6C                     l4721 3B24                     l4801 30D6  
                   l3921 3BFC                     l3913 3BE4                     l3905 3BC4  
                   l3665 28CE                     l3833 2406                     l3817 23A6  
                   l4537 1E30                     l4723 3B2A                     l4731 3B3E  
                   l3499 2DD6                     l3907 3BCC                     l3659 28B0  
                   l3587 2758                     l3739 2136                     l4555 1F3E  
                   l4547 1EE2                     l4483 1B86                     l4475 1B78  
                   l4467 1B70                     l4459 1B5A                     l4725 3B30  
                   l4733 3B66                     l4389 2F04                     l3853 3AB0  
                   l3917 3BEE                     l3693 299A                     l3685 294C  
                   l3933 3A7A                     l3749 2168                     l4581 2074  
                   l4485 1BC8                     l4661 3CB0                     l4735 3B6E  
                   l4727 3B36                     l4751 3C16                     l4807 3114  
                   l4399 2F4E                     l3791 230A                     l4575 2038  
                   l4559 1F68                     l4479 1B7C                     l4591 2096  
                   l4761 3C54                     l4753 3C1C                     l4825 3160  
                   l4809 3120                     l3865 3AD6                     l3881 3B08  
                   l3689 2970                     l3937 3A98                     l3929 3A46  
                   l3953 3662                     l3945 3618                     l4585 207E  
                   l4497 1C34                     l4905 14D8                     l4739 3B82  
                   l4747 3C0A                     l3867 3ADE                     l3859 3AC0  
                   l3699 29A6                     l4499 1C52                     l4659 3C8A  
                   l4931 15F6                     l4923 15D4                     l4765 3C66  
                   l4749 3C10                     l4757 3C24                     l3885 3B16  
                   l3877 3AFE                     l3949 364C                     l3797 2328  
                   l4909 14F8                     l4853 12C4                     l4845 127E  
                   l4759 3C4C                     l3959 36B0                     l3967 3F24  
                   l4863 1348                     l4855 12DC                     l4847 12A2  
                   l3897 3BAA                     l3993 37E8                     l3977 379E  
                   l4937 163E                     l4953 174E                     l4873 1394  
                   l4857 12F0                     l4795 309E                     l4955 1754  
                   l4797 30A4                     l4789 3080                     l3997 37F8  
                   l4799 30B0                     l4975 184E                     l4879 13EC  
                   l4993 194A                     l4969 1830                     l4979 186E  
                   l4899 14B4                     STR_1 08B2                     STR_2 08A7  
                   STR_3 08A1                     STR_4 084C                     STR_5 087C  
                   STR_6 0831                     STR_7 08AD                     STR_8 0822  
                   STR_9 0801                     u3010 3ED0                     u3020 3ED2  
                   u4000 28FE                     u3120 2512                     u3130 2522  
                   u3300 2678                     u3140 2524                     u4040 295A  
                   u3320 268C                     u4050 297E                     u3170 2566  
                   u4140 2156                     u4230 23B4                     u4150 22CC  
                   u4400 3A94                     u4240 23D2                     u3520 376E  
                   u3600 2C5A                     u5200 11F6                     u5120 10B6  
                   u3530 3770                     u5210 11F8                     u4155 22C2  
                   u3515 3750                     u3700 3F02                     u3460 3E84  
                   u3380 26E8                     u3540 3D14                     u4350 3BD0  
                   u4190 2358                     u3470 36F2                     u6007 162E  
                   u5240 2F4A                     u4600 2A1A                     u4520 3812  
                   u3640 2CEA                     u3560 3D96                     u5400 1C98  
                   u3625 2C84                     u6017 183A                     u3810 331C  
                   u4290 3AE2                     u3626 2C8A                     u3570 3D98  
                   u5410 1C9A                     u6107 327A                     u3731 2E04  
                   u3475 36E8                     u3627 2C98                     u3547 3D0A  
                   u6027 185E                     u5260 2FF8                     u4620 2A40  
                   u3660 2D4A                     u5180 1196                     u5340 38B8  
                   u5420 1CA8                     u6117 3284                     u3645 2CE0  
                   u6037 1958                     u4550 3E32                     u5270 2FFA  
                   u3750 2E3C                     u4630 2B5C                     u4470 378C  
                   u3590 2C3A                     u5510 1E64                     u6207 3580  
                   u6127 3290                     u6047 197C                     u2960 38EC  
                   u4560 29D8                     u4480 37BC                     u4800 0A50  
                   u6217 35AA                     u6137 34FC                     u3665 2D40  
                   u6057 1AB2                     u3690 3F00                     u4650 2B7E  
                   u4570 29DA                     u4810 0A52                     u4730 0934  
                   u5450 1D8E                     u6227 35C2                     u6147 350A  
                   u4651 2B7C                     u3595 2C30                     u6067 1ACE  
                   u2980 3934                     u4660 2B8C                     u5540 1FEA  
                   u5460 1D90                     u6237 343C                     u5605 340A  
                   u6157 3518                     u6077 31F0                     u4485 37B2  
                   u4670 2B90                     u4910 0C30                     u5550 1FEC  
                   u5470 1D9E                     u6247 3446                     u6167 3526  
                   u6087 31FA                     u5615 3180                     u4760 099C  
                   u6257 34BC                     u6177 3534                     u6097 3270  
                   u5625 319C                     u4690 2B9C                     u4850 0BC4  
                   u4770 099E                     u6267 34C6                     u6187 3542  
                   u5635 31BE                     u5740 312A                     u6277 34D4  
                   u6197 3568                     u4950 0C7E                     u4880 0BFE  
                   u5585 33CC                     u5595 33E8                     u5907 12B6  
                   u5917 12CE                     u5927 135C                     u5937 1374  
                   u5947 1400                     u5957 143C                     u5967 145A  
                   u5977 14C8                     u5897 126E                     u5987 14E8  
                   u5997 15E2             __CFG_PWRT$ON 000000                     _Num1 00C4  
                   _Num2 00C0                     _Word 0160                     abs@a 0013  
                   _dbuf 0100                     _atoi 2EF2                     _main 124A  
                   _dtoa 29B0                     _prec 00CC                     _nout 00C8  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 36B4                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000          ___fldiv@new_exp 0012  
        __end_of_Lcd_Cmd 34DE             _tolower$1059 000D          __end_of_Lcd_Out 3B96  
          __CFG_MCLRE$ON 000000             ___param_bank 000000               _Lcd_Chr_CP 3172  
                  ??_abs 0015                    ??_pad 0017           Lcd_Out2@buffer 0005  
          __CFG_PLLDIV$1 000000            ___fltol@sign1 0009          __end_of___aodiv 2EF2  
                  ?_atoi 0008          __end_of___fladd 2728                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 33BE          __end_of___fldiv 29B0  
        __end_of___awdiv 3B20          __end_of___flneg 3F36                    STR_10 0812  
                  STR_11 0893                    STR_12 085F                    STR_20 088C  
                  STR_21 085F                    STR_13 0859                    STR_14 0893  
                  STR_22 0865                    STR_15 085F                    STR_31 08BB  
                  STR_23 0884                    STR_32 08C3                    STR_24 089A  
                  STR_16 083F                    STR_17 0893                    STR_25 085F  
                  STR_18 085F                    STR_26 0871                    STR_19 083F  
                  STR_35 08C7                    STR_27 08B7                    STR_28 08BF  
        __end_of___awmod 3C06                    STR_37 08C7          __end_of___flmul 241C  
        __end_of___flsub 3E00          __end_of___fltol 383A          ___awdiv@divisor 0003  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0042                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 005E                    _fputc 38DC  
                  _fputs 3E3E          __end_of_isdigit 3F08                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00CA  
                  _putch 3FAC                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032          __end_of_isspace 3E3E          __end_of_isupper 3ED8  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 3D6E  
         ?___fpclassifyf 0001          __end_of_tolower 3DBA          __end_of_strncmp 38DC  
         __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 35E4         __end_of_Lcd_Out2 3C76  
        __initialization 3F60             __end_of_atoi 3032             __end_of_main 1B14  
           __end_of_dtoa 2BF4                   ??_atoi 000A                   ??_main 005C  
                 ??_dtoa 0026            __activetblptr 000002          __CFG_CCP2MX$OFF 000000  
                 ?_fputc 0001                   ?_fputs 000A         ___awdiv@dividend 0001  
                 ?_putch 0001                ??_Lcd_Cmd 0001            vfpfcnvrt@done 00A0  
              ??_Lcd_Out 0007         __end_of___xxtofl 3172           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0050                   ___flge 35E4                   ___fleq 3A12  
            ?_Lcd_Chr_CP 0001                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 3F86                ??___fldiv 0009  
              ??___awdiv 0005                ??___flneg 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___flmul 0009                ??___flsub 0022  
              ??___fltol 0005                   _efgtoa 08CC                   _floorf 2BF4  
                 clear_0 3F66                   clear_1 3F72         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
                 dtoa@fp 001C                   _strcpy 3CCC                   _strlen 3F36  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3CCC                ??_sprintf 0052                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 001A               ___flge@ff2 001E  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 3F7C          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 397C            __end_of_fputs 3E76  
          __end_of_putch 3FAE                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
        __CFG_LPT1OSC$ON 000000                  ??_fputc 0005                  ??_fputs 000E  
    __size_of_Lcd_Chr_CP 0128                  ??_putch 0001               __pbssBANK0 00B8  
             __pbssBANK1 0100               _efgtoa$440 0066               _efgtoa$450 006E  
             _efgtoa$444 0068               _efgtoa$439 0064               _efgtoa$448 006A  
             _efgtoa$449 006C                  ?___flge 001A                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 002E                  ?_floorf 001A  
                ?_strcpy 0001                  ?_strlen 0001                ?___xxtofl 0001  
     __size_of_vfpfcnvrt 05B6               ??_Lcd_Init 0004               ??_Lcd_Out2 0007  
        __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 33BE                  _Lcd_Out 3B20  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 00D0  
        __size_of___fleq 008A                  ___aodiv 2DAA                  ___fladd 241C  
                ___aomod 329A                  ___fldiv 2728                  ___awdiv 3A9C  
                ___flneg 3F08                  ___awmod 3B96                  ___flmul 20CA  
                ___flsub 3DBA                  ___fltol 3780          __size_of___wmul 0026  
              ?_vfprintf 004A             __psmallconst 0800          __size_of_efgtoa 097E  
        __size_of_floorf 01B6                  __pcinit 3F60                  __ramtop 0800  
                __ptext0 124A                  __ptext1 3D1E                  __ptext2 3C76  
                __ptext3 1B14                  __ptext4 383A                  __ptext5 08CC  
                __ptext6 3D6E                  __ptext7 3EA8                  __ptext8 3CCC  
                __ptext9 2BF4          __size_of_strcpy 0052          __size_of_strlen 002A  
           __size_of_abs 0032             __size_of_pad 0096                  _isdigit 3ED8  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 3E00  
                _isupper 3EA8                  efgtoa@c 0034                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 0030                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0074                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 0070                  efgtoa@u 0094                  efgtoa@w 007F  
                _numero1 00E4                  _numero2 00D4                  _numero3 0150  
                atoi@neg 000E                  _sprintf 3D1E                  _tolower 3D6E  
                _strncmp 383A     end_of_initialization 3F7C                  floorf@e 0028  
                floorf@m 0024                  floorf@u 002A                  floorf@x 001A  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 20CA               efgtoa@mode 0081               efgtoa@sign 007A  
           ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004                Lcd_Out2@y 0009  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0050                  strcpy@d 0009  
                strlen@a 0003                  strcpy@s 0007                  strlen@s 0001  
              _PORTCbits 000F82                _PORTDbits 000F83              ___fladd@grs 0010  
          ___xxtofl@sign 0009                _TRISCbits 000F94                _TRISDbits 000F95  
            ___fldiv@grs 0014              ___fldiv@rem 000D       __end_of_Lcd_Chr_CP 329A  
            ___flmul@grs 000E           __end_of___flge 36B4           __end_of___fleq 3A9C  
            vfpfcnvrt@ap 0044              vfpfcnvrt@ct 00AC              vfpfcnvrt@fp 0040  
            vfpfcnvrt@ll 0098           __end_of___wmul 3FAC           __end_of_efgtoa 124A  
         __end_of_floorf 2DAA               floorf@F524 00B8           __end_of_strcpy 3D1E  
         __end_of_strlen 3F60      start_initialization 3F60              __end_of_abs 3EA8  
            __end_of_pad 3A12            Lcd_Out@buffer 0005        __size_of_Lcd_Init 0106  
      __size_of_Lcd_Out2 0070    __end_of___fpclassifyf 3780                _Selector2 00D0  
              _Selector3 00CE              vfprintf@fmt 004C                 ??___flge 0022  
               ??___fleq 0009                _Resultado 00F4                 ??___wmul 0005  
               ??_efgtoa 0035                 ??_floorf 001E                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001                ___flmul@a 0005  
              ___flmul@b 0001              __pbssCOMRAM 005E                ___flsub@a 001E  
              ___flsub@b 001A            __pcstackBANK0 0060         ___aodiv@dividend 0001  
      __size_of___xxtofl 0140                 ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004  
               ?___aodiv 0001                 ?___fladd 0001                 ?___aomod 0001  
               ?___fldiv 0001                 ?___awdiv 0001         ___aodiv@quotient 0013  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 0001  
               ?___flsub 001A                 ?___fltol 0001        __size_of_vfprintf 0056  
            __smallconst 0800                 ?_isdigit 0001                 ?_isspace 0001  
               ?_isupper 0001                 ?_sprintf 00B0                 ?_tolower 0007  
         __size_of_fputc 00A0           __size_of_fputs 0038                 ?_strncmp 0001  
         __size_of_putch 0002           ___wmul@product 0005                 Lcd_Out@x 0004  
       __CFG_WDTPS$32768 000000                 Lcd_Out@y 0009                _vfpfcnvrt 1B14  
           Lcd_Init@data 0005        ___wmul@multiplier 0001             Lcd_Out2@data 000A  
               _Lcd_Init 34DE                 _Lcd_Out2 3C06               vfpfcnvrt@c 00AF  
             vfpfcnvrt@f 00A8         __size_of_Lcd_Cmd 0120         __size_of_Lcd_Out 0076  
               __Hrparam 0000                 _Selector 00D2               vfprintf@ap 004E  
               __Lrparam 0000               vfprintf@fp 004A         __size_of___aodiv 0148  
       __size_of___fladd 030C         __size_of___aomod 0124         __size_of___fldiv 0288  
       __size_of___awdiv 0084         __size_of___flneg 002E         __size_of___awmod 0070  
       __size_of___flmul 0352         __size_of___flsub 0046         __size_of___fltol 00BA  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F463 00BC               sprintf@fmt 00B2                 ___xxtofl 3032  
               _atoi$943 0010                 _atoi$944 0014                 _atoi$945 0012  
       __size_of_isdigit 0030           Lcd_Chr_CP@data 0003                 _dtoa$415 002E  
       __size_of_isspace 003E                 __ptext10 36B4                 __ptext11 3780  
               __ptext20 3A9C                 __ptext12 3DBA                 __ptext21 29B0  
               __ptext13 241C                 __ptext30 2EF2                 __ptext22 397C  
               __ptext14 3F08                 __ptext31 3E00                 __ptext23 3F36  
               __ptext15 20CA                 __ptext32 3ED8                 __ptext24 3E3E  
               __ptext16 35E4                 __ptext33 3F86                 __ptext25 38DC  
               __ptext17 3A12                 __ptext34 3032                 __ptext26 3FAC  
               __ptext18 2728                 __ptext35 3C06                 __ptext27 3E76  
               __ptext19 3B96                 __ptext36 3B20                 __ptext28 329A  
               __ptext37 3172                 __ptext29 2DAA                 __ptext38 34DE  
               __ptext39 33BE         __size_of_isupper 0030         __size_of_sprintf 0050  
       __size_of_tolower 004C               strcpy@dest 0001         __size_of_strncmp 00A2  
            Lcd_Cmd@data 0003            __size_of_atoi 0140            __size_of_main 08CA  
          __size_of_dtoa 0244                 efgtoa@fp 002E                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060                 _vfprintf 3C76  
            _isspace$974 0007         ___aomod@dividend 0001    __CFG_CPUDIV$OSC1_PLL2 000000  
            Lcd_Out@data 000A                 isdigit@c 0001                sprintf@ap 0054  
               isspace@c 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003              efgtoa@nmode 007E  
        ___aomod@divisor 0009              ??_vfpfcnvrt 0046            _vfpfcnvrt$470 00A6  
        ___aomod@counter 0011            _vfpfcnvrt$464 00A2            _vfpfcnvrt$465 00A4  
               sprintf@f 0056                 tolower@c 0007                 sprintf@s 00B0  
 __size_of___fpclassifyf 00CC                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A            ___fladd@signs 000D             ___aodiv@sign 0012  
           ___fladd@aexp 000E             ___fladd@bexp 000F             ___aomod@sign 0012  
