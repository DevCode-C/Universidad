

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 23:55:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57  0000                     
    58                           ; Version 2.05
    59                           ; Generated 20/12/2018 GMT
    60                           ; 
    61                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     _PORTD	set	3971
    93  0000                     _PORTB	set	3969
    94  0000                     _LATB	set	3978
    95  0000                     _PORTCbits	set	3970
    96  0000                     _TRISCbits	set	3988
    97  0000                     _TRISB	set	3987
    98  0000                     _PORTDbits	set	3971
    99  0000                     _TRISDbits	set	3989
   100                           
   101                           	psect	smallconst
   102  000800                     __psmallconst:
   103                           	opt callstack 0
   104  000800  00                 	db	0
   105  000801                     STR_9:
   106  000801  31                 	db	49	;'1'
   107  000802  3D                 	db	61	;'='
   108  000803  2B                 	db	43
   109  000804  20                 	db	32
   110  000805  32                 	db	50	;'2'
   111  000806  3D                 	db	61	;'='
   112  000807  2D                 	db	45
   113  000808  20                 	db	32
   114  000809  34                 	db	52	;'4'
   115  00080A  3D                 	db	61	;'='
   116  00080B  2A                 	db	42
   117  00080C  20                 	db	32
   118  00080D  38                 	db	56	;'8'
   119  00080E  3D                 	db	61	;'='
   120  00080F  2F                 	db	47
   121  000810  00                 	db	0
   122  000811                     STR_5:
   123  000811  53                 	db	83	;'S'
   124  000812  65                 	db	101	;'e'
   125  000813  67                 	db	103	;'g'
   126  000814  75                 	db	117	;'u'
   127  000815  6E                 	db	110	;'n'
   128  000816  64                 	db	100	;'d'
   129  000817  6F                 	db	111	;'o'
   130  000818  20                 	db	32
   131  000819  64                 	db	100	;'d'
   132  00081A  69                 	db	105	;'i'
   133  00081B  67                 	db	103	;'g'
   134  00081C  69                 	db	105	;'i'
   135  00081D  74                 	db	116	;'t'
   136  00081E  6F                 	db	111	;'o'
   137  00081F  3A                 	db	58	;':'
   138  000820  00                 	db	0
   139  000821                     STR_10:
   140  000821  53                 	db	83	;'S'
   141  000822  65                 	db	101	;'e'
   142  000823  6C                 	db	108	;'l'
   143  000824  65                 	db	101	;'e'
   144  000825  63                 	db	99	;'c'
   145  000826  63                 	db	99	;'c'
   146  000827  69                 	db	105	;'i'
   147  000828  6F                 	db	111	;'o'
   148  000829  6E                 	db	110	;'n'
   149  00082A  3A                 	db	58	;':'
   150  00082B  20                 	db	32
   151  00082C  25                 	db	37
   152  00082D  30                 	db	48	;'0'
   153  00082E  33                 	db	51	;'3'
   154  00082F  64                 	db	100	;'d'
   155  000830  00                 	db	0
   156  000831                     STR_7:
   157  000831  53                 	db	83	;'S'
   158  000832  65                 	db	101	;'e'
   159  000833  6C                 	db	108	;'l'
   160  000834  65                 	db	101	;'e'
   161  000835  63                 	db	99	;'c'
   162  000836  63                 	db	99	;'c'
   163  000837  69                 	db	105	;'i'
   164  000838  6F                 	db	111	;'o'
   165  000839  6E                 	db	110	;'n'
   166  00083A  61                 	db	97	;'a'
   167  00083B  20                 	db	32
   168  00083C  6C                 	db	108	;'l'
   169  00083D  61                 	db	97	;'a'
   170  00083E  20                 	db	32
   171  00083F  00                 	db	0
   172  000840                     STR_3:
   173  000840  50                 	db	80	;'P'
   174  000841  72                 	db	114	;'r'
   175  000842  69                 	db	105	;'i'
   176  000843  6D                 	db	109	;'m'
   177  000844  65                 	db	101	;'e'
   178  000845  72                 	db	114	;'r'
   179  000846  20                 	db	32
   180  000847  64                 	db	100	;'d'
   181  000848  69                 	db	105	;'i'
   182  000849  67                 	db	103	;'g'
   183  00084A  69                 	db	105	;'i'
   184  00084B  74                 	db	116	;'t'
   185  00084C  6F                 	db	111	;'o'
   186  00084D  3A                 	db	58	;':'
   187  00084E  00                 	db	0
   188  00084F                     STR_1:
   189  00084F  42                 	db	66	;'B'
   190  000850  69                 	db	105	;'i'
   191  000851  65                 	db	101	;'e'
   192  000852  6E                 	db	110	;'n'
   193  000853  76                 	db	118	;'v'
   194  000854  65                 	db	101	;'e'
   195  000855  6E                 	db	110	;'n'
   196  000856  69                 	db	105	;'i'
   197  000857  64                 	db	100	;'d'
   198  000858  6F                 	db	111	;'o'
   199  000859  20                 	db	32
   200  00085A  3A                 	db	58	;':'
   201  00085B  2A                 	db	42
   202  00085C  00                 	db	0
   203  00085D                     STR_2:
   204  00085D  2A                 	db	42
   205  00085E  43                 	db	67	;'C'
   206  00085F  61                 	db	97	;'a'
   207  000860  6C                 	db	108	;'l'
   208  000861  63                 	db	99	;'c'
   209  000862  75                 	db	117	;'u'
   210  000863  6C                 	db	108	;'l'
   211  000864  61                 	db	97	;'a'
   212  000865  64                 	db	100	;'d'
   213  000866  6F                 	db	111	;'o'
   214  000867  72                 	db	114	;'r'
   215  000868  61                 	db	97	;'a'
   216  000869  2A                 	db	42
   217  00086A  00                 	db	0
   218  00086B                     STR_19:
   219  00086B  52                 	db	82	;'R'
   220  00086C  65                 	db	101	;'e'
   221  00086D  73                 	db	115	;'s'
   222  00086E  74                 	db	116	;'t'
   223  00086F  61                 	db	97	;'a'
   224  000870  3D                 	db	61	;'='
   225  000871  20                 	db	32
   226  000872  2D                 	db	45
   227  000873  25                 	db	37
   228  000874  30                 	db	48	;'0'
   229  000875  2E                 	db	46
   230  000876  33                 	db	51	;'3'
   231  000877  64                 	db	100	;'d'
   232  000878  00                 	db	0
   233  000879                     STR_4:
   234  000879  4E                 	db	78	;'N'
   235  00087A  75                 	db	117	;'u'
   236  00087B  6D                 	db	109	;'m'
   237  00087C  65                 	db	101	;'e'
   238  00087D  72                 	db	114	;'r'
   239  00087E  6F                 	db	111	;'o'
   240  00087F  3A                 	db	58	;':'
   241  000880  20                 	db	32
   242  000881  25                 	db	37
   243  000882  30                 	db	48	;'0'
   244  000883  2E                 	db	46
   245  000884  33                 	db	51	;'3'
   246  000885  66                 	db	102	;'f'
   247  000886  00                 	db	0
   248  000887                     STR_16:
   249  000887  52                 	db	82	;'R'
   250  000888  65                 	db	101	;'e'
   251  000889  73                 	db	115	;'s'
   252  00088A  74                 	db	116	;'t'
   253  00088B  61                 	db	97	;'a'
   254  00088C  3D                 	db	61	;'='
   255  00088D  20                 	db	32
   256  00088E  25                 	db	37
   257  00088F  30                 	db	48	;'0'
   258  000890  2E                 	db	46
   259  000891  33                 	db	51	;'3'
   260  000892  66                 	db	102	;'f'
   261  000893  00                 	db	0
   262  000894                     STR_13:
   263  000894  53                 	db	83	;'S'
   264  000895  75                 	db	117	;'u'
   265  000896  6D                 	db	109	;'m'
   266  000897  61                 	db	97	;'a'
   267  000898  3D                 	db	61	;'='
   268  000899  20                 	db	32
   269  00089A  25                 	db	37
   270  00089B  30                 	db	48	;'0'
   271  00089C  2E                 	db	46
   272  00089D  33                 	db	51	;'3'
   273  00089E  66                 	db	102	;'f'
   274  00089F  00                 	db	0
   275  0008A0                     STR_8:
   276  0008A0  4F                 	db	79	;'O'
   277  0008A1  70                 	db	112	;'p'
   278  0008A2  65                 	db	101	;'e'
   279  0008A3  72                 	db	114	;'r'
   280  0008A4  61                 	db	97	;'a'
   281  0008A5  63                 	db	99	;'c'
   282  0008A6  69                 	db	105	;'i'
   283  0008A7  6F                 	db	111	;'o'
   284  0008A8  6E                 	db	110	;'n'
   285  0008A9  00                 	db	0
   286  0008AA                     STR_11:
   287  0008AA  25                 	db	37
   288  0008AB  30                 	db	48	;'0'
   289  0008AC  2E                 	db	46
   290  0008AD  30                 	db	48	;'0'
   291  0008AE  66                 	db	102	;'f'
   292  0008AF  20                 	db	32
   293  0008B0  2B                 	db	43
   294  0008B1  00                 	db	0
   295  0008B2                     STR_17:
   296  0008B2  25                 	db	37
   297  0008B3  30                 	db	48	;'0'
   298  0008B4  2E                 	db	46
   299  0008B5  30                 	db	48	;'0'
   300  0008B6  64                 	db	100	;'d'
   301  0008B7  20                 	db	32
   302  0008B8  2D                 	db	45
   303  0008B9  00                 	db	0
   304  0008BA                     STR_14:
   305  0008BA  25                 	db	37
   306  0008BB  30                 	db	48	;'0'
   307  0008BC  2E                 	db	46
   308  0008BD  30                 	db	48	;'0'
   309  0008BE  66                 	db	102	;'f'
   310  0008BF  20                 	db	32
   311  0008C0  2D                 	db	45
   312  0008C1  00                 	db	0
   313  0008C2                     STR_18:
   314  0008C2  20                 	db	32
   315  0008C3  25                 	db	37
   316  0008C4  30                 	db	48	;'0'
   317  0008C5  2E                 	db	46
   318  0008C6  30                 	db	48	;'0'
   319  0008C7  64                 	db	100	;'d'
   320  0008C8  00                 	db	0
   321  0008C9                     STR_12:
   322  0008C9  20                 	db	32
   323  0008CA  25                 	db	37
   324  0008CB  30                 	db	48	;'0'
   325  0008CC  2E                 	db	46
   326  0008CD  30                 	db	48	;'0'
   327  0008CE  66                 	db	102	;'f'
   328  0008CF  00                 	db	0
   329  0008D0                     STR_20:
   330  0008D0  49                 	db	73	;'I'
   331  0008D1  4E                 	db	78	;'N'
   332  0008D2  46                 	db	70	;'F'
   333  0008D3  00                 	db	0
   334  0008D4                     STR_24:
   335  0008D4  4E                 	db	78	;'N'
   336  0008D5  41                 	db	65	;'A'
   337  0008D6  4E                 	db	78	;'N'
   338  0008D7  00                 	db	0
   339  0008D8                     STR_21:
   340  0008D8  69                 	db	105	;'i'
   341  0008D9  6E                 	db	110	;'n'
   342  0008DA  66                 	db	102	;'f'
   343  0008DB  00                 	db	0
   344  0008DC                     STR_25:
   345  0008DC  6E                 	db	110	;'n'
   346  0008DD  61                 	db	97	;'a'
   347  0008DE  6E                 	db	110	;'n'
   348  0008DF  00                 	db	0
   349  0008E0                     STR_28:
   350  0008E0  6C                 	db	108	;'l'
   351  0008E1  66                 	db	102	;'f'
   352  0008E2  00                 	db	0
   353  0000                     
   354                           ; #config settings
   355  0008E3  00                 	db	0	; dummy byte at the end
   356  0000                     
   357                           	psect	cinit
   358  004030                     __pcinit:
   359                           	opt callstack 0
   360  004030                     start_initialization:
   361                           	opt callstack 0
   362  004030                     __initialization:
   363                           	opt callstack 0
   364                           
   365                           ; Clear objects allocated to BANK1 (131 bytes)
   366  004030  EE01  F000         	lfsr	0,__pbssBANK1
   367  004034  0E83               	movlw	131
   368  004036                     clear_0:
   369  004036  6AEE               	clrf	postinc0,c
   370  004038  06E8               	decf	wreg,f,c
   371  00403A  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (33 bytes)
   374  00403C  EE00  F0DE         	lfsr	0,__pbssBANK0
   375  004040  0E21               	movlw	33
   376  004042                     clear_1:
   377  004042  6AEE               	clrf	postinc0,c
   378  004044  06E8               	decf	wreg,f,c
   379  004046  E1FD               	bnz	clear_1
   380  004048                     end_of_initialization:
   381                           	opt callstack 0
   382  004048                     __end_of__initialization:
   383                           	opt callstack 0
   384  004048  0E00               	movlw	low (__Lmediumconst shr (0+16))
   385  00404A  6EF8               	movwf	tblptru,c
   386  00404C  0100               	movlb	0
   387  00404E  EF30  F009         	goto	_main	;jump to C main() function
   388                           
   389                           	psect	bssBANK0
   390  0000DE                     __pbssBANK0:
   391                           	opt callstack 0
   392  0000DE                     floorf@F524:
   393                           	opt callstack 0
   394  0000DE                     	ds	4
   395  0000E2                     ___fpclassifyf@F463:
   396                           	opt callstack 0
   397  0000E2                     	ds	4
   398  0000E6                     _nout:
   399                           	opt callstack 0
   400  0000E6                     	ds	2
   401  0000E8                     _width:
   402                           	opt callstack 0
   403  0000E8                     	ds	2
   404  0000EA                     _prec:
   405                           	opt callstack 0
   406  0000EA                     	ds	2
   407  0000EC                     _flags:
   408                           	opt callstack 0
   409  0000EC                     	ds	2
   410  0000EE                     _numero1:
   411                           	opt callstack 0
   412  0000EE                     	ds	17
   413                           
   414                           	psect	bssBANK1
   415  000100                     __pbssBANK1:
   416                           	opt callstack 0
   417  000100                     _dbuf:
   418                           	opt callstack 0
   419  000100                     	ds	80
   420  000150                     _numero3:
   421                           	opt callstack 0
   422  000150                     	ds	17
   423  000161                     _numero2:
   424                           	opt callstack 0
   425  000161                     	ds	17
   426  000172                     _palabra:
   427                           	opt callstack 0
   428  000172                     	ds	17
   429                           
   430                           	psect	cstackBANK0
   431  000060                     __pcstackBANK0:
   432                           	opt callstack 0
   433  000060                     efgtoa@ou:
   434                           	opt callstack 0
   435                           
   436                           ; 4 bytes @ 0x0
   437  000060                     	ds	4
   438  000064                     _efgtoa$475:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x4
   442  000064                     	ds	2
   443  000066                     _efgtoa$476:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x6
   447  000066                     	ds	2
   448  000068                     _efgtoa$480:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x8
   452  000068                     	ds	2
   453  00006A                     _efgtoa$484:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0xA
   457  00006A                     	ds	2
   458  00006C                     _efgtoa$485:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0xC
   462  00006C                     	ds	2
   463  00006E                     _efgtoa$486:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0xE
   467  00006E                     	ds	2
   468  000070                     efgtoa@t:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x10
   472  000070                     	ds	2
   473  000072                     efgtoa@pp:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x12
   477  000072                     	ds	2
   478  000074                     efgtoa@m:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x14
   482  000074                     	ds	2
   483  000076                     efgtoa@ne:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x16
   487  000076                     	ds	2
   488  000078                     efgtoa@d:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x18
   492  000078                     	ds	2
   493  00007A                     efgtoa@sign:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x1A
   497  00007A                     	ds	2
   498  00007C                     efgtoa@p:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x1C
   502  00007C                     	ds	2
   503  00007E                     efgtoa@nmode:
   504                           	opt callstack 0
   505                           
   506                           ; 1 bytes @ 0x1E
   507  00007E                     	ds	1
   508  00007F                     efgtoa@w:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x1F
   512  00007F                     	ds	2
   513  000081                     efgtoa@mode:
   514                           	opt callstack 0
   515                           
   516                           ; 1 bytes @ 0x21
   517  000081                     	ds	1
   518  000082                     efgtoa@h:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x22
   522  000082                     	ds	4
   523  000086                     efgtoa@l:
   524                           	opt callstack 0
   525                           
   526                           ; 4 bytes @ 0x26
   527  000086                     	ds	4
   528  00008A                     efgtoa@i:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x2A
   532  00008A                     	ds	2
   533  00008C                     efgtoa@g:
   534                           	opt callstack 0
   535                           
   536                           ; 4 bytes @ 0x2C
   537  00008C                     	ds	4
   538  000090                     efgtoa@e:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x30
   542  000090                     	ds	2
   543  000092                     efgtoa@n:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x32
   547  000092                     	ds	2
   548  000094                     efgtoa@u:
   549                           	opt callstack 0
   550                           
   551                           ; 4 bytes @ 0x34
   552  000094                     	ds	4
   553  000098                     vfpfcnvrt@ll:
   554                           	opt callstack 0
   555                           
   556                           ; 8 bytes @ 0x38
   557  000098                     	ds	8
   558  0000A0                     vfpfcnvrt@done:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x40
   562  0000A0                     	ds	2
   563  0000A2                     _vfpfcnvrt$500:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x42
   567  0000A2                     	ds	2
   568  0000A4                     _vfpfcnvrt$501:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x44
   572  0000A4                     	ds	2
   573  0000A6                     _vfpfcnvrt$506:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x46
   577  0000A6                     	ds	2
   578  0000A8                     vfpfcnvrt@f:
   579                           	opt callstack 0
   580                           
   581                           ; 4 bytes @ 0x48
   582  0000A8                     	ds	4
   583  0000AC                     vfpfcnvrt@ct:
   584                           	opt callstack 0
   585                           
   586                           ; 3 bytes @ 0x4C
   587  0000AC                     	ds	3
   588  0000AF                     vfpfcnvrt@c:
   589                           	opt callstack 0
   590                           
   591                           ; 1 bytes @ 0x4F
   592  0000AF                     	ds	1
   593  0000B0                     ?_sprintf:
   594                           	opt callstack 0
   595  0000B0                     sprintf@s:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x50
   599  0000B0                     	ds	2
   600  0000B2                     sprintf@fmt:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x52
   604  0000B2                     	ds	6
   605  0000B8                     ?_resta:
   606                           	opt callstack 0
   607  0000B8                     resta@s1:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x58
   611  0000B8                     	ds	2
   612  0000BA                     resta@s2:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x5A
   616  0000BA                     	ds	2
   617  0000BC                     ?___xxtofl:
   618                           	opt callstack 0
   619  0000BC                     ___xxtofl@val:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0x5C
   623  0000BC                     	ds	4
   624  0000C0                     ??___xxtofl:
   625                           
   626                           ; 1 bytes @ 0x60
   627  0000C0                     	ds	4
   628  0000C4                     ___xxtofl@sign:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x64
   632  0000C4                     	ds	1
   633  0000C5                     ___xxtofl@exp:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x65
   637  0000C5                     	ds	1
   638  0000C6                     ___xxtofl@arg:
   639                           	opt callstack 0
   640                           
   641                           ; 4 bytes @ 0x66
   642  0000C6                     	ds	4
   643  0000CA                     ??_main:
   644                           
   645                           ; 1 bytes @ 0x6A
   646  0000CA                     	ds	2
   647  0000CC                     _main$1296:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x6C
   651  0000CC                     	ds	2
   652  0000CE                     _main$1297:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x6E
   656  0000CE                     	ds	2
   657  0000D0                     main@SEL:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x70
   661  0000D0                     	ds	2
   662  0000D2                     main@D1:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0x72
   666  0000D2                     	ds	4
   667  0000D6                     main@D2:
   668                           	opt callstack 0
   669                           
   670                           ; 4 bytes @ 0x76
   671  0000D6                     	ds	4
   672  0000DA                     main@R0:
   673                           	opt callstack 0
   674                           
   675                           ; 4 bytes @ 0x7A
   676  0000DA                     	ds	4
   677                           
   678                           	psect	cstackCOMRAM
   679  000001                     __pcstackCOMRAM:
   680                           	opt callstack 0
   681  000001                     ??_Lcd_Cmd:
   682  000001                     ??_Lcd_Chr_CP:
   683  000001                     ?_strlen:
   684                           	opt callstack 0
   685  000001                     ?___fpclassifyf:
   686                           	opt callstack 0
   687  000001                     ?_isupper:
   688                           	opt callstack 0
   689  000001                     ?_isdigit:
   690                           	opt callstack 0
   691  000001                     ?_strncmp:
   692                           	opt callstack 0
   693  000001                     ?_isspace:
   694                           	opt callstack 0
   695  000001                     ?___wmul:
   696                           	opt callstack 0
   697  000001                     ?___awdiv:
   698                           	opt callstack 0
   699  000001                     ?___awmod:
   700                           	opt callstack 0
   701  000001                     ?___fladd:
   702                           	opt callstack 0
   703  000001                     ?___fldiv:
   704                           	opt callstack 0
   705  000001                     ?___flmul:
   706                           	opt callstack 0
   707  000001                     ?___flneg:
   708                           	opt callstack 0
   709  000001                     ?___fltol:
   710                           	opt callstack 0
   711  000001                     ?___aodiv:
   712                           	opt callstack 0
   713  000001                     ?___aomod:
   714                           	opt callstack 0
   715  000001                     ___wmul@multiplier:
   716                           	opt callstack 0
   717  000001                     ___awdiv@dividend:
   718                           	opt callstack 0
   719  000001                     ___awmod@dividend:
   720                           	opt callstack 0
   721  000001                     isdigit@c:
   722                           	opt callstack 0
   723  000001                     isspace@c:
   724                           	opt callstack 0
   725  000001                     isupper@c:
   726                           	opt callstack 0
   727  000001                     fputc@c:
   728                           	opt callstack 0
   729  000001                     strcpy@dest:
   730                           	opt callstack 0
   731  000001                     strlen@s:
   732                           	opt callstack 0
   733  000001                     strncmp@_l:
   734                           	opt callstack 0
   735  000001                     ___fleq@ff1:
   736                           	opt callstack 0
   737  000001                     ___flneg@f1:
   738                           	opt callstack 0
   739  000001                     ___fltol@f1:
   740                           	opt callstack 0
   741  000001                     ___fladd@b:
   742                           	opt callstack 0
   743  000001                     ___fldiv@b:
   744                           	opt callstack 0
   745  000001                     ___flmul@b:
   746                           	opt callstack 0
   747  000001                     ___fpclassifyf@x:
   748                           	opt callstack 0
   749  000001                     ___aodiv@dividend:
   750                           	opt callstack 0
   751  000001                     ___aomod@dividend:
   752                           	opt callstack 0
   753                           
   754                           ; 8 bytes @ 0x0
   755  000001                     	ds	2
   756  000003                     ??_isupper:
   757  000003                     ??_isdigit:
   758  000003                     ??_isspace:
   759  000003                     Lcd_Chr_CP@data:
   760                           	opt callstack 0
   761  000003                     Lcd_Cmd@data:
   762                           	opt callstack 0
   763  000003                     ___wmul@multiplicand:
   764                           	opt callstack 0
   765  000003                     ___awdiv@divisor:
   766                           	opt callstack 0
   767  000003                     ___awmod@divisor:
   768                           	opt callstack 0
   769  000003                     fputc@fp:
   770                           	opt callstack 0
   771  000003                     strcpy@src:
   772                           	opt callstack 0
   773  000003                     strlen@a:
   774                           	opt callstack 0
   775  000003                     strncmp@_r:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x2
   779  000003                     	ds	1
   780  000004                     ??_Lcd_Init:
   781  000004                     Lcd_Out@x:
   782                           	opt callstack 0
   783  000004                     Lcd_Out2@x:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x3
   787  000004                     	ds	1
   788  000005                     ??_fputc:
   789  000005                     ??___fpclassifyf:
   790  000005                     ??_strcpy:
   791  000005                     ??___fltol:
   792  000005                     Lcd_Init@data:
   793                           	opt callstack 0
   794  000005                     ___awdiv@counter:
   795                           	opt callstack 0
   796  000005                     ___awmod@counter:
   797                           	opt callstack 0
   798  000005                     Lcd_Out@buffer:
   799                           	opt callstack 0
   800  000005                     Lcd_Out2@buffer:
   801                           	opt callstack 0
   802  000005                     ___wmul@product:
   803                           	opt callstack 0
   804  000005                     strncmp@n:
   805                           	opt callstack 0
   806  000005                     ___fleq@ff2:
   807                           	opt callstack 0
   808  000005                     ___fladd@a:
   809                           	opt callstack 0
   810  000005                     ___fldiv@a:
   811                           	opt callstack 0
   812  000005                     ___flmul@a:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x4
   816  000005                     	ds	1
   817  000006                     ___awdiv@sign:
   818                           	opt callstack 0
   819  000006                     ___awmod@sign:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0x5
   823  000006                     	ds	1
   824  000007                     ??_strncmp:
   825  000007                     ??_Lcd_Out:
   826  000007                     ??_Lcd_Out2:
   827  000007                     ?_tolower:
   828                           	opt callstack 0
   829  000007                     _isspace$1010:
   830                           	opt callstack 0
   831  000007                     ___awdiv@quotient:
   832                           	opt callstack 0
   833  000007                     strcpy@s:
   834                           	opt callstack 0
   835  000007                     tolower@c:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x6
   839  000007                     	ds	1
   840  000008                     ?_atoi:
   841                           	opt callstack 0
   842  000008                     atoi@s:
   843                           	opt callstack 0
   844  000008                     strncmp@l:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x7
   848  000008                     	ds	1
   849  000009                     ??_tolower:
   850  000009                     ??___fladd:
   851  000009                     ??___fldiv:
   852  000009                     ??___flmul:
   853  000009                     ??___fleq:
   854  000009                     Lcd_Out@y:
   855                           	opt callstack 0
   856  000009                     Lcd_Out2@y:
   857                           	opt callstack 0
   858  000009                     ___fltol@sign1:
   859                           	opt callstack 0
   860  000009                     ___fpclassifyf@e:
   861                           	opt callstack 0
   862  000009                     strcpy@d:
   863                           	opt callstack 0
   864  000009                     ___aodiv@divisor:
   865                           	opt callstack 0
   866  000009                     ___aomod@divisor:
   867                           	opt callstack 0
   868                           
   869                           ; 8 bytes @ 0x8
   870  000009                     	ds	1
   871  00000A                     ??_atoi:
   872  00000A                     Lcd_Out@data:
   873                           	opt callstack 0
   874  00000A                     Lcd_Out2@data:
   875                           	opt callstack 0
   876  00000A                     ___fltol@exp1:
   877                           	opt callstack 0
   878  00000A                     fputs@s:
   879                           	opt callstack 0
   880  00000A                     strncmp@r:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x9
   884  00000A                     	ds	1
   885  00000B                     ?_suma:
   886                           	opt callstack 0
   887  00000B                     ?_mult:
   888                           	opt callstack 0
   889  00000B                     ?_scv:
   890                           	opt callstack 0
   891  00000B                     suma@s1:
   892                           	opt callstack 0
   893  00000B                     mult@s1:
   894                           	opt callstack 0
   895  00000B                     scv@s1:
   896                           	opt callstack 0
   897  00000B                     ___fpclassifyf@u:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0xA
   901  00000B                     	ds	1
   902  00000C                     fputs@fp:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0xB
   906  00000C                     	ds	1
   907  00000D                     ___fladd@signs:
   908                           	opt callstack 0
   909  00000D                     ___flmul@sign:
   910                           	opt callstack 0
   911  00000D                     suma@s2:
   912                           	opt callstack 0
   913  00000D                     mult@s2:
   914                           	opt callstack 0
   915  00000D                     scv@s2:
   916                           	opt callstack 0
   917  00000D                     _tolower$1095:
   918                           	opt callstack 0
   919  00000D                     ___fldiv@rem:
   920                           	opt callstack 0
   921                           
   922                           ; 4 bytes @ 0xC
   923  00000D                     	ds	1
   924  00000E                     ___fladd@aexp:
   925                           	opt callstack 0
   926  00000E                     fputs@c:
   927                           	opt callstack 0
   928  00000E                     atoi@neg:
   929                           	opt callstack 0
   930  00000E                     ___flmul@grs:
   931                           	opt callstack 0
   932                           
   933                           ; 4 bytes @ 0xD
   934  00000E                     	ds	1
   935  00000F                     ??_mult:
   936  00000F                     ??_scv:
   937  00000F                     ___fladd@bexp:
   938                           	opt callstack 0
   939  00000F                     suma@x:
   940                           	opt callstack 0
   941  00000F                     fputs@i:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0xE
   945  00000F                     	ds	1
   946  000010                     ___fladd@grs:
   947                           	opt callstack 0
   948  000010                     _atoi$979:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0xF
   952  000010                     	ds	1
   953  000011                     ?_pad:
   954                           	opt callstack 0
   955  000011                     ___aodiv@counter:
   956                           	opt callstack 0
   957  000011                     ___aomod@counter:
   958                           	opt callstack 0
   959  000011                     ___fldiv@sign:
   960                           	opt callstack 0
   961  000011                     mult@i:
   962                           	opt callstack 0
   963  000011                     scv@x1:
   964                           	opt callstack 0
   965  000011                     pad@fp:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x10
   969  000011                     	ds	1
   970  000012                     ___aodiv@sign:
   971                           	opt callstack 0
   972  000012                     ___aomod@sign:
   973                           	opt callstack 0
   974  000012                     ___flmul@aexp:
   975                           	opt callstack 0
   976  000012                     ___fldiv@new_exp:
   977                           	opt callstack 0
   978  000012                     _atoi$981:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x11
   982  000012                     	ds	1
   983  000013                     ?_abs:
   984                           	opt callstack 0
   985  000013                     ___flmul@bexp:
   986                           	opt callstack 0
   987  000013                     mult@x:
   988                           	opt callstack 0
   989  000013                     scv@x2:
   990                           	opt callstack 0
   991  000013                     pad@buf:
   992                           	opt callstack 0
   993  000013                     abs@a:
   994                           	opt callstack 0
   995  000013                     ___aodiv@quotient:
   996                           	opt callstack 0
   997                           
   998                           ; 8 bytes @ 0x12
   999  000013                     	ds	1
  1000  000014                     _atoi$980:
  1001                           	opt callstack 0
  1002  000014                     ___fldiv@grs:
  1003                           	opt callstack 0
  1004  000014                     ___flmul@prod:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x13
  1008  000014                     	ds	1
  1009  000015                     ??_abs:
  1010  000015                     scv@x:
  1011                           	opt callstack 0
  1012  000015                     pad@p:
  1013                           	opt callstack 0
  1014  000015                     atoi@n:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x14
  1018  000015                     	ds	2
  1019  000017                     ??_pad:
  1020  000017                     scv@i:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x16
  1024  000017                     	ds	1
  1025  000018                     ___fldiv@bexp:
  1026                           	opt callstack 0
  1027  000018                     pad@i:
  1028                           	opt callstack 0
  1029  000018                     ___flmul@temp:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x17
  1033  000018                     	ds	1
  1034  000019                     ___fldiv@aexp:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x18
  1038  000019                     	ds	1
  1039  00001A                     ?_floorf:
  1040                           	opt callstack 0
  1041  00001A                     ?___flsub:
  1042                           	opt callstack 0
  1043  00001A                     pad@w:
  1044                           	opt callstack 0
  1045  00001A                     ___flge@ff1:
  1046                           	opt callstack 0
  1047  00001A                     ___flsub@b:
  1048                           	opt callstack 0
  1049  00001A                     floorf@x:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x19
  1053  00001A                     	ds	2
  1054  00001C                     ?_dtoa:
  1055                           	opt callstack 0
  1056  00001C                     dtoa@fp:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x1B
  1060  00001C                     	ds	2
  1061  00001E                     ??_floorf:
  1062  00001E                     ___flge@ff2:
  1063                           	opt callstack 0
  1064  00001E                     ___flsub@a:
  1065                           	opt callstack 0
  1066  00001E                     dtoa@d:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x1D
  1070  00001E                     	ds	4
  1071  000022                     ??___flge:
  1072                           
  1073                           ; 1 bytes @ 0x21
  1074  000022                     	ds	2
  1075  000024                     floorf@m:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x23
  1079  000024                     	ds	2
  1080  000026                     ??_dtoa:
  1081                           
  1082                           ; 1 bytes @ 0x25
  1083  000026                     	ds	2
  1084  000028                     floorf@e:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x27
  1088  000028                     	ds	2
  1089  00002A                     floorf@u:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x29
  1093  00002A                     	ds	4
  1094  00002E                     ?_efgtoa:
  1095                           	opt callstack 0
  1096  00002E                     _dtoa$451:
  1097                           	opt callstack 0
  1098  00002E                     efgtoa@fp:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x2D
  1102  00002E                     	ds	2
  1103  000030                     dtoa@p:
  1104                           	opt callstack 0
  1105  000030                     efgtoa@f:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x2F
  1109  000030                     	ds	2
  1110  000032                     dtoa@w:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x31
  1114  000032                     	ds	2
  1115  000034                     efgtoa@c:
  1116                           	opt callstack 0
  1117  000034                     dtoa@s:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x33
  1121  000034                     	ds	1
  1122  000035                     ??_efgtoa:
  1123                           
  1124                           ; 1 bytes @ 0x34
  1125  000035                     	ds	1
  1126  000036                     dtoa@n:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x35
  1130  000036                     	ds	8
  1131  00003E                     dtoa@i:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x3D
  1135  00003E                     	ds	2
  1136  000040                     ?_vfpfcnvrt:
  1137                           	opt callstack 0
  1138  000040                     vfpfcnvrt@fp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x3F
  1142  000040                     	ds	2
  1143  000042                     vfpfcnvrt@fmt:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x41
  1147  000042                     	ds	2
  1148  000044                     vfpfcnvrt@ap:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x43
  1152  000044                     	ds	2
  1153  000046                     ??_vfpfcnvrt:
  1154                           
  1155                           ; 1 bytes @ 0x45
  1156  000046                     	ds	4
  1157  00004A                     ?_vfprintf:
  1158                           	opt callstack 0
  1159  00004A                     vfprintf@fp:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x49
  1163  00004A                     	ds	2
  1164  00004C                     vfprintf@fmt:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x4B
  1168  00004C                     	ds	2
  1169  00004E                     vfprintf@ap:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x4D
  1173  00004E                     	ds	2
  1174  000050                     vfprintf@cfmt:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x4F
  1178  000050                     	ds	2
  1179  000052                     
  1180                           ; 1 bytes @ 0x51
  1181  000052                     	ds	2
  1182  000054                     sprintf@ap:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x53
  1186  000054                     	ds	2
  1187  000056                     sprintf@f:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 6 bytes @ 0x55
  1191  000056                     	ds	6
  1192  00005C                     ??_resta:
  1193                           
  1194                           ; 1 bytes @ 0x5B
  1195  00005C                     	ds	2
  1196  00005E                     resta@x:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x5D
  1200  00005E                     	ds	2
  1201                           
  1202 ;;
  1203 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1204 ;;
  1205 ;; *************** function _main *****************
  1206 ;; Defined at:
  1207 ;;		line 24 in file "practica5_0_1.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  R0              4  122[BANK0 ] float 
  1212 ;;  D2              4  118[BANK0 ] float 
  1213 ;;  D1              4  114[BANK0 ] float 
  1214 ;;  SEL             2  112[BANK0 ] short 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1224 ;;      Params:         0       0       0       0       0       0       0       0       0
  1225 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1226 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1227 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1228 ;;Total ram usage:       20 bytes
  1229 ;; Hardware stack levels required when called:    9
  1230 ;; This function calls:
  1231 ;;		_Lcd_Cmd
  1232 ;;		_Lcd_Init
  1233 ;;		_Lcd_Out
  1234 ;;		_Lcd_Out2
  1235 ;;		___fleq
  1236 ;;		___flge
  1237 ;;		___fltol
  1238 ;;		___xxtofl
  1239 ;;		_mult
  1240 ;;		_resta
  1241 ;;		_scv
  1242 ;;		_sprintf
  1243 ;;		_suma
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text0
  1250  001260                     __ptext0:
  1251                           	opt callstack 0
  1252  001260                     _main:
  1253                           	opt callstack 22
  1254                           
  1255                           ;practica5_0_1.c: 25:     float D1,D2,R0;;practica5_0_1.c: 26:     short int SEL;;practi
      +                          ca5_0_1.c: 27:     TRISB=0xFF;
  1256                           
  1257                           ;incstack = 0
  1258  001260  6893               	setf	3987,c	;volatile
  1259                           
  1260                           ;practica5_0_1.c: 28:     TRISCbits.RC1=1;
  1261  001262  8294               	bsf	3988,1,c	;volatile
  1262                           
  1263                           ;practica5_0_1.c: 29:     Lcd_Init();
  1264  001264  ECD9  F019         	call	_Lcd_Init	;wreg free
  1265                           
  1266                           ;practica5_0_1.c: 30:     Lcd_Cmd(1);
  1267  001268  0E01               	movlw	1
  1268  00126A  EC49  F019         	call	_Lcd_Cmd
  1269                           
  1270                           ;practica5_0_1.c: 31:     Lcd_Cmd(12);
  1271  00126E  0E0C               	movlw	12
  1272  001270  EC49  F019         	call	_Lcd_Cmd
  1273                           
  1274                           ;practica5_0_1.c: 32:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1275  001274  0E02               	movlw	2
  1276  001276  0100               	movlb	0	; () banked
  1277  001278  6FCB               	movwf	(??_main+1)& (0+255),b
  1278  00127A  0E04               	movlw	4
  1279  00127C  6FCA               	movwf	??_main& (0+255),b
  1280  00127E  0EBA               	movlw	186
  1281  001280                     u6117:
  1282  001280  2EE8               	decfsz	wreg,f,c
  1283  001282  D7FE               	bra	u6117
  1284  001284  2FCA               	decfsz	??_main& (0+255),f,b
  1285  001286  D7FC               	bra	u6117
  1286  001288  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1287  00128A  D7FA               	bra	u6117
  1288  00128C  F000               	nop	
  1289                           
  1290                           ;practica5_0_1.c: 33:     while(PORTCbits.RC1==1){
  1291  00128E  D012               	goto	l5034
  1292  001290                     l5032:
  1293                           
  1294                           ;practica5_0_1.c: 34:     Lcd_Out(1,1,"Bienvenido :*");
  1295  001290  0E01               	movlw	1
  1296  001292  6E04               	movwf	Lcd_Out@x,c
  1297  001294  0E4F               	movlw	low STR_1
  1298  001296  6E05               	movwf	Lcd_Out@buffer,c
  1299  001298  0E08               	movlw	high STR_1
  1300  00129A  6E06               	movwf	Lcd_Out@buffer+1,c
  1301  00129C  0E01               	movlw	1
  1302  00129E  ECAD  F01D         	call	_Lcd_Out
  1303                           
  1304                           ;practica5_0_1.c: 35:     Lcd_Out(2,1,"*Calculadora*");
  1305  0012A2  0E01               	movlw	1
  1306  0012A4  6E04               	movwf	Lcd_Out@x,c
  1307  0012A6  0E5D               	movlw	low STR_2
  1308  0012A8  6E05               	movwf	Lcd_Out@buffer,c
  1309  0012AA  0E08               	movlw	high STR_2
  1310  0012AC  6E06               	movwf	Lcd_Out@buffer+1,c
  1311  0012AE  0E02               	movlw	2
  1312  0012B0  ECAD  F01D         	call	_Lcd_Out
  1313  0012B4                     l5034:
  1314                           
  1315                           ;practica5_0_1.c: 33:     while(PORTCbits.RC1==1){
  1316  0012B4  B282               	btfsc	3970,1,c	;volatile
  1317  0012B6  D7EC               	goto	l5032
  1318                           
  1319                           ;practica5_0_1.c: 37:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1320  0012B8  0E06               	movlw	6
  1321  0012BA  0100               	movlb	0	; () banked
  1322  0012BC  6FCB               	movwf	(??_main+1)& (0+255),b
  1323  0012BE  0E13               	movlw	19
  1324  0012C0  6FCA               	movwf	??_main& (0+255),b
  1325  0012C2  0EAD               	movlw	173
  1326  0012C4                     u6127:
  1327  0012C4  2EE8               	decfsz	wreg,f,c
  1328  0012C6  D7FE               	bra	u6127
  1329  0012C8  2FCA               	decfsz	??_main& (0+255),f,b
  1330  0012CA  D7FC               	bra	u6127
  1331  0012CC  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1332  0012CE  D7FA               	bra	u6127
  1333  0012D0  D000               	nop2	
  1334  0012D2                     l5038:
  1335                           
  1336                           ;practica5_0_1.c: 39:     LATB=0x00;
  1337  0012D2  0E00               	movlw	0
  1338  0012D4  6E8A               	movwf	3978,c	;volatile
  1339                           
  1340                           ;practica5_0_1.c: 40:     Lcd_Cmd(1);
  1341  0012D6  0E01               	movlw	1
  1342  0012D8  EC49  F019         	call	_Lcd_Cmd
  1343                           
  1344                           ;practica5_0_1.c: 41:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1345  0012DC  0E02               	movlw	2
  1346  0012DE  0100               	movlb	0	; () banked
  1347  0012E0  6FCB               	movwf	(??_main+1)& (0+255),b
  1348  0012E2  0E04               	movlw	4
  1349  0012E4  6FCA               	movwf	??_main& (0+255),b
  1350  0012E6  0EBA               	movlw	186
  1351  0012E8                     u6137:
  1352  0012E8  2EE8               	decfsz	wreg,f,c
  1353  0012EA  D7FE               	bra	u6137
  1354  0012EC  2FCA               	decfsz	??_main& (0+255),f,b
  1355  0012EE  D7FC               	bra	u6137
  1356  0012F0  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1357  0012F2  D7FA               	bra	u6137
  1358  0012F4  F000               	nop	
  1359                           
  1360                           ;practica5_0_1.c: 43:     Lcd_Out(1,1,"Primer digito:");
  1361  0012F6  0E01               	movlw	1
  1362  0012F8  6E04               	movwf	Lcd_Out@x,c
  1363  0012FA  0E40               	movlw	low STR_3
  1364  0012FC  6E05               	movwf	Lcd_Out@buffer,c
  1365  0012FE  0E08               	movlw	high STR_3
  1366  001300  6E06               	movwf	Lcd_Out@buffer+1,c
  1367  001302  0E01               	movlw	1
  1368  001304  ECAD  F01D         	call	_Lcd_Out
  1369                           
  1370                           ;practica5_0_1.c: 46:     while(PORTCbits.RC1==1){
  1371  001308  D02D               	goto	l5052
  1372  00130A                     l5046:
  1373                           
  1374                           ;practica5_0_1.c: 47:         D1=PORTB;
  1375  00130A  5081               	movf	3969,w,c	;volatile
  1376  00130C  0100               	movlb	0	; () banked
  1377  00130E  6FBC               	movwf	___xxtofl@val& (0+255),b
  1378  001310  6BBD               	clrf	(___xxtofl@val+1)& (0+255),b
  1379  001312  6BBE               	clrf	(___xxtofl@val+2)& (0+255),b
  1380  001314  6BBF               	clrf	(___xxtofl@val+3)& (0+255),b
  1381  001316  0E00               	movlw	0
  1382  001318  ECE1  F016         	call	___xxtofl
  1383  00131C  C0BC  F0D2         	movff	?___xxtofl,main@D1
  1384  001320  C0BD  F0D3         	movff	?___xxtofl+1,main@D1+1
  1385  001324  C0BE  F0D4         	movff	?___xxtofl+2,main@D1+2
  1386  001328  C0BF  F0D5         	movff	?___xxtofl+3,main@D1+3
  1387                           
  1388                           ;practica5_0_1.c: 48:         sprintf(numero1,"Numero: %0.3f",D1);
  1389  00132C  0EEE               	movlw	low _numero1
  1390  00132E  0100               	movlb	0	; () banked
  1391  001330  6FB0               	movwf	sprintf@s& (0+255),b
  1392  001332  0E00               	movlw	high _numero1
  1393  001334  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1394  001336  0E79               	movlw	low STR_4
  1395  001338  6FB2               	movwf	sprintf@fmt& (0+255),b
  1396  00133A  0E08               	movlw	high STR_4
  1397  00133C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1398  00133E  C0D2  F0B4         	movff	main@D1,?_sprintf+4
  1399  001342  C0D3  F0B5         	movff	main@D1+1,?_sprintf+5
  1400  001346  C0D4  F0B6         	movff	main@D1+2,?_sprintf+6
  1401  00134A  C0D5  F0B7         	movff	main@D1+3,?_sprintf+7
  1402  00134E  ECE4  F01E         	call	_sprintf	;wreg free
  1403                           
  1404                           ;practica5_0_1.c: 49:         Lcd_Out2(2,1,numero1);
  1405  001352  0E01               	movlw	1
  1406  001354  6E04               	movwf	Lcd_Out2@x,c
  1407  001356  0EEE               	movlw	low _numero1
  1408  001358  6E05               	movwf	Lcd_Out2@buffer,c
  1409  00135A  0E00               	movlw	high _numero1
  1410  00135C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1411  00135E  0E02               	movlw	2
  1412  001360  EC20  F01E         	call	_Lcd_Out2
  1413  001364                     l5052:
  1414                           
  1415                           ;practica5_0_1.c: 46:     while(PORTCbits.RC1==1){
  1416  001364  B282               	btfsc	3970,1,c	;volatile
  1417  001366  D7D1               	goto	l5046
  1418                           
  1419                           ;practica5_0_1.c: 51:     Lcd_Cmd(1);
  1420  001368  0E01               	movlw	1
  1421  00136A  EC49  F019         	call	_Lcd_Cmd
  1422                           
  1423                           ;practica5_0_1.c: 52:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1424  00136E  0E02               	movlw	2
  1425  001370  0100               	movlb	0	; () banked
  1426  001372  6FCB               	movwf	(??_main+1)& (0+255),b
  1427  001374  0E04               	movlw	4
  1428  001376  6FCA               	movwf	??_main& (0+255),b
  1429  001378  0EBA               	movlw	186
  1430  00137A                     u6147:
  1431  00137A  2EE8               	decfsz	wreg,f,c
  1432  00137C  D7FE               	bra	u6147
  1433  00137E  2FCA               	decfsz	??_main& (0+255),f,b
  1434  001380  D7FC               	bra	u6147
  1435  001382  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1436  001384  D7FA               	bra	u6147
  1437  001386  F000               	nop	
  1438                           
  1439                           ;practica5_0_1.c: 53:     Lcd_Out(1,1,"Segundo digito:");
  1440  001388  0E01               	movlw	1
  1441  00138A  6E04               	movwf	Lcd_Out@x,c
  1442  00138C  0E11               	movlw	low STR_5
  1443  00138E  6E05               	movwf	Lcd_Out@buffer,c
  1444  001390  0E08               	movlw	high STR_5
  1445  001392  6E06               	movwf	Lcd_Out@buffer+1,c
  1446  001394  0E01               	movlw	1
  1447  001396  ECAD  F01D         	call	_Lcd_Out
  1448                           
  1449                           ;practica5_0_1.c: 55:     while(PORTCbits.RC1==1){
  1450  00139A  D02D               	goto	l5066
  1451  00139C                     l5060:
  1452                           
  1453                           ;practica5_0_1.c: 56:         D2=PORTB;
  1454  00139C  5081               	movf	3969,w,c	;volatile
  1455  00139E  0100               	movlb	0	; () banked
  1456  0013A0  6FBC               	movwf	___xxtofl@val& (0+255),b
  1457  0013A2  6BBD               	clrf	(___xxtofl@val+1)& (0+255),b
  1458  0013A4  6BBE               	clrf	(___xxtofl@val+2)& (0+255),b
  1459  0013A6  6BBF               	clrf	(___xxtofl@val+3)& (0+255),b
  1460  0013A8  0E00               	movlw	0
  1461  0013AA  ECE1  F016         	call	___xxtofl
  1462  0013AE  C0BC  F0D6         	movff	?___xxtofl,main@D2
  1463  0013B2  C0BD  F0D7         	movff	?___xxtofl+1,main@D2+1
  1464  0013B6  C0BE  F0D8         	movff	?___xxtofl+2,main@D2+2
  1465  0013BA  C0BF  F0D9         	movff	?___xxtofl+3,main@D2+3
  1466                           
  1467                           ;practica5_0_1.c: 57:         sprintf(numero2,"Numero: %0.3f",D2);
  1468  0013BE  0E61               	movlw	low _numero2
  1469  0013C0  0100               	movlb	0	; () banked
  1470  0013C2  6FB0               	movwf	sprintf@s& (0+255),b
  1471  0013C4  0E01               	movlw	high _numero2
  1472  0013C6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1473  0013C8  0E79               	movlw	low STR_4
  1474  0013CA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1475  0013CC  0E08               	movlw	high STR_4
  1476  0013CE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1477  0013D0  C0D6  F0B4         	movff	main@D2,?_sprintf+4
  1478  0013D4  C0D7  F0B5         	movff	main@D2+1,?_sprintf+5
  1479  0013D8  C0D8  F0B6         	movff	main@D2+2,?_sprintf+6
  1480  0013DC  C0D9  F0B7         	movff	main@D2+3,?_sprintf+7
  1481  0013E0  ECE4  F01E         	call	_sprintf	;wreg free
  1482                           
  1483                           ;practica5_0_1.c: 58:         Lcd_Out2(2,1,numero2);
  1484  0013E4  0E01               	movlw	1
  1485  0013E6  6E04               	movwf	Lcd_Out2@x,c
  1486  0013E8  0E61               	movlw	low _numero2
  1487  0013EA  6E05               	movwf	Lcd_Out2@buffer,c
  1488  0013EC  0E01               	movlw	high _numero2
  1489  0013EE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1490  0013F0  0E02               	movlw	2
  1491  0013F2  EC20  F01E         	call	_Lcd_Out2
  1492  0013F6                     l5066:
  1493                           
  1494                           ;practica5_0_1.c: 55:     while(PORTCbits.RC1==1){
  1495  0013F6  B282               	btfsc	3970,1,c	;volatile
  1496  0013F8  D7D1               	goto	l5060
  1497  0013FA                     u5970:
  1498                           
  1499                           ;practica5_0_1.c: 62:     Lcd_Cmd(1);
  1500                           
  1501                           ; BSR set to: 0
  1502  0013FA  0E01               	movlw	1
  1503  0013FC  EC49  F019         	call	_Lcd_Cmd
  1504                           
  1505                           ;practica5_0_1.c: 63:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1506  001400  0E02               	movlw	2
  1507  001402  0100               	movlb	0	; () banked
  1508  001404  6FCB               	movwf	(??_main+1)& (0+255),b
  1509  001406  0E04               	movlw	4
  1510  001408  6FCA               	movwf	??_main& (0+255),b
  1511  00140A  0EBA               	movlw	186
  1512  00140C                     u6157:
  1513  00140C  2EE8               	decfsz	wreg,f,c
  1514  00140E  D7FE               	bra	u6157
  1515  001410  2FCA               	decfsz	??_main& (0+255),f,b
  1516  001412  D7FC               	bra	u6157
  1517  001414  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1518  001416  D7FA               	bra	u6157
  1519  001418  F000               	nop	
  1520                           
  1521                           ;practica5_0_1.c: 64:     Lcd_Out(1,1,"Selecciona la ");
  1522  00141A  0E01               	movlw	1
  1523  00141C  6E04               	movwf	Lcd_Out@x,c
  1524  00141E  0E31               	movlw	low STR_7
  1525  001420  6E05               	movwf	Lcd_Out@buffer,c
  1526  001422  0E08               	movlw	high STR_7
  1527  001424  6E06               	movwf	Lcd_Out@buffer+1,c
  1528  001426  0E01               	movlw	1
  1529  001428  ECAD  F01D         	call	_Lcd_Out
  1530                           
  1531                           ;practica5_0_1.c: 65:     Lcd_Out(2,3,"Operacion");
  1532  00142C  0E03               	movlw	3
  1533  00142E  6E04               	movwf	Lcd_Out@x,c
  1534  001430  0EA0               	movlw	low STR_8
  1535  001432  6E05               	movwf	Lcd_Out@buffer,c
  1536  001434  0E08               	movlw	high STR_8
  1537  001436  6E06               	movwf	Lcd_Out@buffer+1,c
  1538  001438  0E02               	movlw	2
  1539  00143A  ECAD  F01D         	call	_Lcd_Out
  1540                           
  1541                           ;practica5_0_1.c: 66:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1542  00143E  0E15               	movlw	21
  1543  001440  0100               	movlb	0	; () banked
  1544  001442  6FCB               	movwf	(??_main+1)& (0+255),b
  1545  001444  0E4B               	movlw	75
  1546  001446  6FCA               	movwf	??_main& (0+255),b
  1547  001448  0EBE               	movlw	190
  1548  00144A                     u6167:
  1549  00144A  2EE8               	decfsz	wreg,f,c
  1550  00144C  D7FE               	bra	u6167
  1551  00144E  2FCA               	decfsz	??_main& (0+255),f,b
  1552  001450  D7FC               	bra	u6167
  1553  001452  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1554  001454  D7FA               	bra	u6167
  1555  001456  F000               	nop	
  1556                           
  1557                           ;practica5_0_1.c: 67:     Lcd_Cmd(1);
  1558  001458  0E01               	movlw	1
  1559  00145A  EC49  F019         	call	_Lcd_Cmd
  1560                           
  1561                           ;practica5_0_1.c: 68:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1562  00145E  0E02               	movlw	2
  1563  001460  0100               	movlb	0	; () banked
  1564  001462  6FCB               	movwf	(??_main+1)& (0+255),b
  1565  001464  0E04               	movlw	4
  1566  001466  6FCA               	movwf	??_main& (0+255),b
  1567  001468  0EBA               	movlw	186
  1568  00146A                     u6177:
  1569  00146A  2EE8               	decfsz	wreg,f,c
  1570  00146C  D7FE               	bra	u6177
  1571  00146E  2FCA               	decfsz	??_main& (0+255),f,b
  1572  001470  D7FC               	bra	u6177
  1573  001472  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1574  001474  D7FA               	bra	u6177
  1575  001476  F000               	nop	
  1576                           
  1577                           ;practica5_0_1.c: 69:     while(PORTCbits.RC1==1){
  1578  001478  D025               	goto	l5086
  1579  00147A                     l94:
  1580                           
  1581                           ;practica5_0_1.c: 70:         SEL=PORTB;
  1582  00147A  CF81 F0D0          	movff	3969,main@SEL	;volatile
  1583  00147E  0100               	movlb	0	; () banked
  1584  001480  6BD1               	clrf	(main@SEL+1)& (0+255),b
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;practica5_0_1.c: 71:         Lcd_Out(1,1,"1=+ 2=- 4=* 8=/");
  1588  001482  0E01               	movlw	1
  1589  001484  6E04               	movwf	Lcd_Out@x,c
  1590  001486  0E01               	movlw	low STR_9
  1591  001488  6E05               	movwf	Lcd_Out@buffer,c
  1592  00148A  0E08               	movlw	high STR_9
  1593  00148C  6E06               	movwf	Lcd_Out@buffer+1,c
  1594  00148E  0E01               	movlw	1
  1595  001490  ECAD  F01D         	call	_Lcd_Out
  1596                           
  1597                           ;practica5_0_1.c: 72:         sprintf(numero3,"Seleccion: %03d",SEL);
  1598  001494  0E50               	movlw	low _numero3
  1599  001496  0100               	movlb	0	; () banked
  1600  001498  6FB0               	movwf	sprintf@s& (0+255),b
  1601  00149A  0E01               	movlw	high _numero3
  1602  00149C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1603  00149E  0E21               	movlw	low STR_10
  1604  0014A0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1605  0014A2  0E08               	movlw	high STR_10
  1606  0014A4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1607  0014A6  C0D0  F0B4         	movff	main@SEL,?_sprintf+4
  1608  0014AA  C0D1  F0B5         	movff	main@SEL+1,?_sprintf+5
  1609  0014AE  ECE4  F01E         	call	_sprintf	;wreg free
  1610                           
  1611                           ;practica5_0_1.c: 73:         Lcd_Out2(2,1,numero3);
  1612  0014B2  0E01               	movlw	1
  1613  0014B4  6E04               	movwf	Lcd_Out2@x,c
  1614  0014B6  0E50               	movlw	low _numero3
  1615  0014B8  6E05               	movwf	Lcd_Out2@buffer,c
  1616  0014BA  0E01               	movlw	high _numero3
  1617  0014BC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1618  0014BE  0E02               	movlw	2
  1619  0014C0  EC20  F01E         	call	_Lcd_Out2
  1620  0014C4                     l5086:
  1621                           
  1622                           ;practica5_0_1.c: 69:     while(PORTCbits.RC1==1){
  1623  0014C4  B282               	btfsc	3970,1,c	;volatile
  1624  0014C6  D7D9               	goto	l94
  1625                           
  1626                           ;practica5_0_1.c: 75:     Lcd_Cmd(1);
  1627  0014C8  0E01               	movlw	1
  1628  0014CA  EC49  F019         	call	_Lcd_Cmd
  1629                           
  1630                           ;practica5_0_1.c: 76:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1631  0014CE  0E02               	movlw	2
  1632  0014D0  0100               	movlb	0	; () banked
  1633  0014D2  6FCB               	movwf	(??_main+1)& (0+255),b
  1634  0014D4  0E04               	movlw	4
  1635  0014D6  6FCA               	movwf	??_main& (0+255),b
  1636  0014D8  0EBA               	movlw	186
  1637  0014DA                     u6187:
  1638  0014DA  2EE8               	decfsz	wreg,f,c
  1639  0014DC  D7FE               	bra	u6187
  1640  0014DE  2FCA               	decfsz	??_main& (0+255),f,b
  1641  0014E0  D7FC               	bra	u6187
  1642  0014E2  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1643  0014E4  D7FA               	bra	u6187
  1644  0014E6  F000               	nop	
  1645                           
  1646                           ;practica5_0_1.c: 77:     switch(SEL){
  1647  0014E8  D264               	goto	l5220
  1648  0014EA                     l5094:
  1649                           
  1650                           ;practica5_0_1.c: 80:                 R0=suma(D1,D2);
  1651  0014EA  C0D6  F001         	movff	main@D2,___fltol@f1
  1652  0014EE  C0D7  F002         	movff	main@D2+1,___fltol@f1+1
  1653  0014F2  C0D8  F003         	movff	main@D2+2,___fltol@f1+2
  1654  0014F6  C0D9  F004         	movff	main@D2+3,___fltol@f1+3
  1655  0014FA  EC96  F01B         	call	___fltol	;wreg free
  1656  0014FE  C001  F00D         	movff	?___fltol,suma@s2
  1657  001502  C002  F00E         	movff	?___fltol+1,suma@s2+1
  1658  001506  C0D2  F001         	movff	main@D1,___fltol@f1
  1659  00150A  C0D3  F002         	movff	main@D1+1,___fltol@f1+1
  1660  00150E  C0D4  F003         	movff	main@D1+2,___fltol@f1+2
  1661  001512  C0D5  F004         	movff	main@D1+3,___fltol@f1+3
  1662  001516  EC96  F01B         	call	___fltol	;wreg free
  1663  00151A  C001  F00B         	movff	?___fltol,suma@s1
  1664  00151E  C002  F00C         	movff	?___fltol+1,suma@s1+1
  1665  001522  EC29  F020         	call	_suma	;wreg free
  1666  001526  C00B  F0BC         	movff	?_suma,___xxtofl@val
  1667  00152A  C00C  F0BD         	movff	?_suma+1,___xxtofl@val+1
  1668  00152E  0100               	movlb	0	; () banked
  1669  001530  0E00               	movlw	0
  1670  001532  BFBD               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1671  001534  0EFF               	movlw	-1
  1672  001536  6FBE               	movwf	(___xxtofl@val+2)& (0+255),b
  1673  001538  6FBF               	movwf	(___xxtofl@val+3)& (0+255),b
  1674  00153A  0E01               	movlw	1
  1675  00153C  ECE1  F016         	call	___xxtofl
  1676  001540  C0BC  F0DA         	movff	?___xxtofl,main@R0
  1677  001544  C0BD  F0DB         	movff	?___xxtofl+1,main@R0+1
  1678  001548  C0BE  F0DC         	movff	?___xxtofl+2,main@R0+2
  1679  00154C  C0BF  F0DD         	movff	?___xxtofl+3,main@R0+3
  1680                           
  1681                           ;practica5_0_1.c: 81:                 sprintf(numero1,"%0.0f +",D1);
  1682  001550  0EEE               	movlw	low _numero1
  1683  001552  0100               	movlb	0	; () banked
  1684  001554  6FB0               	movwf	sprintf@s& (0+255),b
  1685  001556  0E00               	movlw	high _numero1
  1686  001558  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1687  00155A  0EAA               	movlw	low STR_11
  1688  00155C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1689  00155E  0E08               	movlw	high STR_11
  1690  001560  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1691  001562  C0D2  F0B4         	movff	main@D1,?_sprintf+4
  1692  001566  C0D3  F0B5         	movff	main@D1+1,?_sprintf+5
  1693  00156A  C0D4  F0B6         	movff	main@D1+2,?_sprintf+6
  1694  00156E  C0D5  F0B7         	movff	main@D1+3,?_sprintf+7
  1695  001572  ECE4  F01E         	call	_sprintf	;wreg free
  1696                           
  1697                           ;practica5_0_1.c: 83:                 sprintf(numero2," %0.0f",D2);
  1698  001576  0E61               	movlw	low _numero2
  1699  001578  0100               	movlb	0	; () banked
  1700  00157A  6FB0               	movwf	sprintf@s& (0+255),b
  1701  00157C  0E01               	movlw	high _numero2
  1702  00157E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1703  001580  0EC9               	movlw	low STR_12
  1704  001582  6FB2               	movwf	sprintf@fmt& (0+255),b
  1705  001584  0E08               	movlw	high STR_12
  1706  001586  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1707  001588  C0D6  F0B4         	movff	main@D2,?_sprintf+4
  1708  00158C  C0D7  F0B5         	movff	main@D2+1,?_sprintf+5
  1709  001590  C0D8  F0B6         	movff	main@D2+2,?_sprintf+6
  1710  001594  C0D9  F0B7         	movff	main@D2+3,?_sprintf+7
  1711  001598  ECE4  F01E         	call	_sprintf	;wreg free
  1712                           
  1713                           ;practica5_0_1.c: 85:                 sprintf(palabra,"Suma= %0.3f",R0);
  1714  00159C  0E72               	movlw	low _palabra
  1715  00159E  0100               	movlb	0	; () banked
  1716  0015A0  6FB0               	movwf	sprintf@s& (0+255),b
  1717  0015A2  0E01               	movlw	high _palabra
  1718  0015A4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1719  0015A6  0E94               	movlw	low STR_13
  1720  0015A8  6FB2               	movwf	sprintf@fmt& (0+255),b
  1721  0015AA  0E08               	movlw	high STR_13
  1722  0015AC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1723  0015AE  C0DA  F0B4         	movff	main@R0,?_sprintf+4
  1724  0015B2  C0DB  F0B5         	movff	main@R0+1,?_sprintf+5
  1725  0015B6  C0DC  F0B6         	movff	main@R0+2,?_sprintf+6
  1726  0015BA  C0DD  F0B7         	movff	main@R0+3,?_sprintf+7
  1727  0015BE  ECE4  F01E         	call	_sprintf	;wreg free
  1728                           
  1729                           ;practica5_0_1.c: 87:                 Lcd_Out2(1,1,numero1);
  1730  0015C2  0E01               	movlw	1
  1731  0015C4  6E04               	movwf	Lcd_Out2@x,c
  1732  0015C6  0EEE               	movlw	low _numero1
  1733  0015C8  6E05               	movwf	Lcd_Out2@buffer,c
  1734  0015CA  0E00               	movlw	high _numero1
  1735  0015CC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1736  0015CE  0E01               	movlw	1
  1737  0015D0  EC20  F01E         	call	_Lcd_Out2
  1738                           
  1739                           ;practica5_0_1.c: 89:                 Lcd_Out2(1,6,numero2);
  1740  0015D4  0E06               	movlw	6
  1741  0015D6  6E04               	movwf	Lcd_Out2@x,c
  1742  0015D8  0E61               	movlw	low _numero2
  1743  0015DA  6E05               	movwf	Lcd_Out2@buffer,c
  1744  0015DC  0E01               	movlw	high _numero2
  1745  0015DE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1746  0015E0  0E01               	movlw	1
  1747  0015E2  EC20  F01E         	call	_Lcd_Out2
  1748                           
  1749                           ;practica5_0_1.c: 91:                 Lcd_Out2(2,1,palabra);
  1750  0015E6  0E01               	movlw	1
  1751  0015E8  6E04               	movwf	Lcd_Out2@x,c
  1752  0015EA  0E72               	movlw	low _palabra
  1753  0015EC  6E05               	movwf	Lcd_Out2@buffer,c
  1754  0015EE  0E01               	movlw	high _palabra
  1755  0015F0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1756  0015F2  0E02               	movlw	2
  1757  0015F4  EC20  F01E         	call	_Lcd_Out2
  1758  0015F8                     l5108:
  1759                           
  1760                           ;practica5_0_1.c: 79:             while(PORTCbits.RC1==1){
  1761  0015F8  A282               	btfss	3970,1,c	;volatile
  1762  0015FA  D66B               	goto	l5038
  1763  0015FC  D776               	goto	l5094
  1764  0015FE                     l5110:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;practica5_0_1.c: 97:             R0=resta(D1,D2);
  1768                           
  1769                           ; BSR set to: 0
  1770  0015FE  C0D6  F001         	movff	main@D2,___fltol@f1
  1771  001602  C0D7  F002         	movff	main@D2+1,___fltol@f1+1
  1772  001606  C0D8  F003         	movff	main@D2+2,___fltol@f1+2
  1773  00160A  C0D9  F004         	movff	main@D2+3,___fltol@f1+3
  1774  00160E  EC96  F01B         	call	___fltol	;wreg free
  1775  001612  C001  F0CC         	movff	?___fltol,_main$1296
  1776  001616  C002  F0CD         	movff	?___fltol+1,_main$1296+1
  1777                           
  1778                           ;practica5_0_1.c: 97:             R0=resta(D1,D2);
  1779  00161A  C0D2  F001         	movff	main@D1,___fltol@f1
  1780  00161E  C0D3  F002         	movff	main@D1+1,___fltol@f1+1
  1781  001622  C0D4  F003         	movff	main@D1+2,___fltol@f1+2
  1782  001626  C0D5  F004         	movff	main@D1+3,___fltol@f1+3
  1783  00162A  EC96  F01B         	call	___fltol	;wreg free
  1784  00162E  C001  F0CE         	movff	?___fltol,_main$1297
  1785  001632  C002  F0CF         	movff	?___fltol+1,_main$1297+1
  1786                           
  1787                           ;practica5_0_1.c: 97:             R0=resta(D1,D2);
  1788  001636  C0CC  F0BA         	movff	_main$1296,resta@s2
  1789  00163A  C0CD  F0BB         	movff	_main$1296+1,resta@s2+1
  1790  00163E  C0CE  F0B8         	movff	_main$1297,resta@s1
  1791  001642  C0CF  F0B9         	movff	_main$1297+1,resta@s1+1
  1792  001646  EC5C  F01A         	call	_resta	;wreg free
  1793  00164A  0100               	movlb	0	; () banked
  1794  00164C  C0B8  F0BC         	movff	?_resta,___xxtofl@val
  1795  001650  C0B9  F0BD         	movff	?_resta+1,___xxtofl@val+1
  1796  001654  0E00               	movlw	0
  1797  001656  BFBD               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1798  001658  0EFF               	movlw	-1
  1799  00165A  6FBE               	movwf	(___xxtofl@val+2)& (0+255),b
  1800  00165C  6FBF               	movwf	(___xxtofl@val+3)& (0+255),b
  1801  00165E  0E01               	movlw	1
  1802  001660  ECE1  F016         	call	___xxtofl
  1803  001664  C0BC  F0DA         	movff	?___xxtofl,main@R0
  1804  001668  C0BD  F0DB         	movff	?___xxtofl+1,main@R0+1
  1805  00166C  C0BE  F0DC         	movff	?___xxtofl+2,main@R0+2
  1806  001670  C0BF  F0DD         	movff	?___xxtofl+3,main@R0+3
  1807                           
  1808                           ;practica5_0_1.c: 98:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1809  001674  0E02               	movlw	2
  1810  001676  0100               	movlb	0	; () banked
  1811  001678  6FCB               	movwf	(??_main+1)& (0+255),b
  1812  00167A  0E04               	movlw	4
  1813  00167C  6FCA               	movwf	??_main& (0+255),b
  1814  00167E  0EBA               	movlw	186
  1815  001680                     u6197:
  1816  001680  2EE8               	decfsz	wreg,f,c
  1817  001682  D7FE               	bra	u6197
  1818  001684  2FCA               	decfsz	??_main& (0+255),f,b
  1819  001686  D7FC               	bra	u6197
  1820  001688  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1821  00168A  D7FA               	bra	u6197
  1822  00168C  F000               	nop	
  1823                           
  1824                           ;practica5_0_1.c: 99:             Lcd_Cmd(1);
  1825  00168E  0E01               	movlw	1
  1826  001690  EC49  F019         	call	_Lcd_Cmd
  1827                           
  1828                           ;practica5_0_1.c: 100:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1829  001694  0E02               	movlw	2
  1830  001696  0100               	movlb	0	; () banked
  1831  001698  6FCB               	movwf	(??_main+1)& (0+255),b
  1832  00169A  0E04               	movlw	4
  1833  00169C  6FCA               	movwf	??_main& (0+255),b
  1834  00169E  0EBA               	movlw	186
  1835  0016A0                     u6207:
  1836  0016A0  2EE8               	decfsz	wreg,f,c
  1837  0016A2  D7FE               	bra	u6207
  1838  0016A4  2FCA               	decfsz	??_main& (0+255),f,b
  1839  0016A6  D7FC               	bra	u6207
  1840  0016A8  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1841  0016AA  D7FA               	bra	u6207
  1842  0016AC  F000               	nop	
  1843                           
  1844                           ;practica5_0_1.c: 101:             while(PORTCbits.RC1==1){
  1845  0016AE  D056               	goto	l102
  1846  0016B0                     l5124:
  1847                           
  1848                           ;practica5_0_1.c: 103:                 if(R0>=0){
  1849  0016B0  0100               	movlb	0	; () banked
  1850  0016B2  BFDD               	btfsc	(main@R0+3)& (0+255),7,b
  1851  0016B4  D60E               	goto	l5038
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;practica5_0_1.c: 104:                     sprintf(numero1,"%0.0f -",D1);
  1855  0016B6  0EEE               	movlw	low _numero1
  1856  0016B8  6FB0               	movwf	sprintf@s& (0+255),b
  1857  0016BA  0E00               	movlw	high _numero1
  1858  0016BC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1859  0016BE  0EBA               	movlw	low STR_14
  1860  0016C0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1861  0016C2  0E08               	movlw	high STR_14
  1862  0016C4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1863  0016C6  C0D2  F0B4         	movff	main@D1,?_sprintf+4
  1864  0016CA  C0D3  F0B5         	movff	main@D1+1,?_sprintf+5
  1865  0016CE  C0D4  F0B6         	movff	main@D1+2,?_sprintf+6
  1866  0016D2  C0D5  F0B7         	movff	main@D1+3,?_sprintf+7
  1867  0016D6  ECE4  F01E         	call	_sprintf	;wreg free
  1868                           
  1869                           ;practica5_0_1.c: 105:                     sprintf(numero2," %0.0f",D2);
  1870  0016DA  0E61               	movlw	low _numero2
  1871  0016DC  0100               	movlb	0	; () banked
  1872  0016DE  6FB0               	movwf	sprintf@s& (0+255),b
  1873  0016E0  0E01               	movlw	high _numero2
  1874  0016E2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1875  0016E4  0EC9               	movlw	low STR_12
  1876  0016E6  6FB2               	movwf	sprintf@fmt& (0+255),b
  1877  0016E8  0E08               	movlw	high STR_12
  1878  0016EA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1879  0016EC  C0D6  F0B4         	movff	main@D2,?_sprintf+4
  1880  0016F0  C0D7  F0B5         	movff	main@D2+1,?_sprintf+5
  1881  0016F4  C0D8  F0B6         	movff	main@D2+2,?_sprintf+6
  1882  0016F8  C0D9  F0B7         	movff	main@D2+3,?_sprintf+7
  1883  0016FC  ECE4  F01E         	call	_sprintf	;wreg free
  1884                           
  1885                           ;practica5_0_1.c: 106:                     sprintf(palabra,"Resta= %0.3f",R0);
  1886  001700  0E72               	movlw	low _palabra
  1887  001702  0100               	movlb	0	; () banked
  1888  001704  6FB0               	movwf	sprintf@s& (0+255),b
  1889  001706  0E01               	movlw	high _palabra
  1890  001708  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1891  00170A  0E87               	movlw	low STR_16
  1892  00170C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1893  00170E  0E08               	movlw	high STR_16
  1894  001710  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1895  001712  C0DA  F0B4         	movff	main@R0,?_sprintf+4
  1896  001716  C0DB  F0B5         	movff	main@R0+1,?_sprintf+5
  1897  00171A  C0DC  F0B6         	movff	main@R0+2,?_sprintf+6
  1898  00171E  C0DD  F0B7         	movff	main@R0+3,?_sprintf+7
  1899  001722  ECE4  F01E         	call	_sprintf	;wreg free
  1900                           
  1901                           ;practica5_0_1.c: 107:                     Lcd_Out2(1,1,numero1);
  1902  001726  0E01               	movlw	1
  1903  001728  6E04               	movwf	Lcd_Out2@x,c
  1904  00172A  0EEE               	movlw	low _numero1
  1905  00172C  6E05               	movwf	Lcd_Out2@buffer,c
  1906  00172E  0E00               	movlw	high _numero1
  1907  001730  6E06               	movwf	Lcd_Out2@buffer+1,c
  1908  001732  0E01               	movlw	1
  1909  001734  EC20  F01E         	call	_Lcd_Out2
  1910                           
  1911                           ;practica5_0_1.c: 108:                     Lcd_Out2(1,6,numero2);
  1912  001738  0E06               	movlw	6
  1913  00173A  6E04               	movwf	Lcd_Out2@x,c
  1914  00173C  0E61               	movlw	low _numero2
  1915  00173E  6E05               	movwf	Lcd_Out2@buffer,c
  1916  001740  0E01               	movlw	high _numero2
  1917  001742  6E06               	movwf	Lcd_Out2@buffer+1,c
  1918  001744  0E01               	movlw	1
  1919  001746  EC20  F01E         	call	_Lcd_Out2
  1920                           
  1921                           ;practica5_0_1.c: 109:                     Lcd_Out2(2,1,palabra);
  1922  00174A  0E01               	movlw	1
  1923  00174C  6E04               	movwf	Lcd_Out2@x,c
  1924  00174E  0E72               	movlw	low _palabra
  1925  001750  6E05               	movwf	Lcd_Out2@buffer,c
  1926  001752  0E01               	movlw	high _palabra
  1927  001754  6E06               	movwf	Lcd_Out2@buffer+1,c
  1928  001756  0E02               	movlw	2
  1929  001758  EC20  F01E         	call	_Lcd_Out2
  1930  00175C                     l102:
  1931                           
  1932                           ;practica5_0_1.c: 101:             while(PORTCbits.RC1==1){
  1933  00175C  A282               	btfss	3970,1,c	;volatile
  1934  00175E  D5B9               	goto	l5038
  1935  001760  D7A7               	goto	l5124
  1936  001762                     l5134:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;practica5_0_1.c: 116:             R0=mult(D1,D2);
  1940                           
  1941                           ; BSR set to: 0
  1942  001762  C0D6  F001         	movff	main@D2,___fltol@f1
  1943  001766  C0D7  F002         	movff	main@D2+1,___fltol@f1+1
  1944  00176A  C0D8  F003         	movff	main@D2+2,___fltol@f1+2
  1945  00176E  C0D9  F004         	movff	main@D2+3,___fltol@f1+3
  1946  001772  EC96  F01B         	call	___fltol	;wreg free
  1947  001776  C001  F00D         	movff	?___fltol,mult@s2
  1948  00177A  C002  F00E         	movff	?___fltol+1,mult@s2+1
  1949  00177E  C0D2  F001         	movff	main@D1,___fltol@f1
  1950  001782  C0D3  F002         	movff	main@D1+1,___fltol@f1+1
  1951  001786  C0D4  F003         	movff	main@D1+2,___fltol@f1+2
  1952  00178A  C0D5  F004         	movff	main@D1+3,___fltol@f1+3
  1953  00178E  EC96  F01B         	call	___fltol	;wreg free
  1954  001792  C001  F00B         	movff	?___fltol,mult@s1
  1955  001796  C002  F00C         	movff	?___fltol+1,mult@s1+1
  1956  00179A  EC58  F01E         	call	_mult	;wreg free
  1957  00179E  C00B  F0BC         	movff	?_mult,___xxtofl@val
  1958  0017A2  C00C  F0BD         	movff	?_mult+1,___xxtofl@val+1
  1959  0017A6  0100               	movlb	0	; () banked
  1960  0017A8  0E00               	movlw	0
  1961  0017AA  BFBD               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1962  0017AC  0EFF               	movlw	-1
  1963  0017AE  6FBE               	movwf	(___xxtofl@val+2)& (0+255),b
  1964  0017B0  6FBF               	movwf	(___xxtofl@val+3)& (0+255),b
  1965  0017B2  0E01               	movlw	1
  1966  0017B4  ECE1  F016         	call	___xxtofl
  1967  0017B8  C0BC  F0DA         	movff	?___xxtofl,main@R0
  1968  0017BC  C0BD  F0DB         	movff	?___xxtofl+1,main@R0+1
  1969  0017C0  C0BE  F0DC         	movff	?___xxtofl+2,main@R0+2
  1970  0017C4  C0BF  F0DD         	movff	?___xxtofl+3,main@R0+3
  1971                           
  1972                           ;practica5_0_1.c: 117:             if(R0>0){
  1973  0017C8  0E00               	movlw	0
  1974  0017CA  6E1A               	movwf	___flge@ff1,c
  1975  0017CC  0E00               	movlw	0
  1976  0017CE  6E1B               	movwf	___flge@ff1+1,c
  1977  0017D0  0E00               	movlw	0
  1978  0017D2  6E1C               	movwf	___flge@ff1+2,c
  1979  0017D4  0E00               	movlw	0
  1980  0017D6  6E1D               	movwf	___flge@ff1+3,c
  1981  0017D8  C0DA  F01E         	movff	main@R0,___flge@ff2
  1982  0017DC  C0DB  F01F         	movff	main@R0+1,___flge@ff2+1
  1983  0017E0  C0DC  F020         	movff	main@R0+2,___flge@ff2+2
  1984  0017E4  C0DD  F021         	movff	main@R0+3,___flge@ff2+3
  1985  0017E8  ECC8  F01A         	call	___flge	;wreg free
  1986  0017EC  A0D8               	btfss	status,0,c
  1987  0017EE  D00D               	goto	l5144
  1988  0017F0  D01B               	goto	l5150
  1989  0017F2                     l5142:
  1990                           
  1991                           ;practica5_0_1.c: 119:                     PORTD=R0;
  1992  0017F2  C0DA  F001         	movff	main@R0,___fltol@f1
  1993  0017F6  C0DB  F002         	movff	main@R0+1,___fltol@f1+1
  1994  0017FA  C0DC  F003         	movff	main@R0+2,___fltol@f1+2
  1995  0017FE  C0DD  F004         	movff	main@R0+3,___fltol@f1+3
  1996  001802  EC96  F01B         	call	___fltol	;wreg free
  1997  001806  5001               	movf	?___fltol,w,c
  1998  001808  6E83               	movwf	3971,c	;volatile
  1999  00180A                     l5144:
  2000                           
  2001                           ;practica5_0_1.c: 118:                 while(PORTCbits.RC0==1){
  2002  00180A  B082               	btfsc	3970,0,c	;volatile
  2003  00180C  D7F2               	goto	l5142
  2004  00180E                     u6030:
  2005                           
  2006                           ;practica5_0_1.c: 121:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2007  00180E  0E0B               	movlw	11
  2008  001810  0100               	movlb	0	; () banked
  2009  001812  6FCB               	movwf	(??_main+1)& (0+255),b
  2010  001814  0E26               	movlw	38
  2011  001816  6FCA               	movwf	??_main& (0+255),b
  2012  001818  0E5D               	movlw	93
  2013  00181A                     u6217:
  2014  00181A  2EE8               	decfsz	wreg,f,c
  2015  00181C  D7FE               	bra	u6217
  2016  00181E  2FCA               	decfsz	??_main& (0+255),f,b
  2017  001820  D7FC               	bra	u6217
  2018  001822  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  2019  001824  D7FA               	bra	u6217
  2020  001826  D554               	goto	L1
  2021  001828                     l5150:
  2022  001828  0100               	movlb	0	; () banked
  2023  00182A  BFDD               	btfsc	(main@R0+3)& (0+255),7,b
  2024  00182C  D00D               	goto	l5162
  2025  00182E  D7EF               	goto	u6030
  2026  001830                     l5154:
  2027                           
  2028                           ;practica5_0_1.c: 126:                     PORTD=0;
  2029  001830  0E00               	movlw	0
  2030  001832  6E83               	movwf	3971,c	;volatile
  2031                           
  2032                           ;practica5_0_1.c: 127:                     PORTCbits.RC2=1;
  2033  001834  8482               	bsf	3970,2,c	;volatile
  2034                           
  2035                           ;practica5_0_1.c: 128:                     _delay((unsigned long)((30)*(8000000/4000.0))
      +                          );
  2036  001836  0E4E               	movlw	78
  2037  001838  0100               	movlb	0	; () banked
  2038  00183A  6FCA               	movwf	??_main& (0+255),b
  2039  00183C  0EEB               	movlw	235
  2040  00183E                     u6227:
  2041  00183E  2EE8               	decfsz	wreg,f,c
  2042  001840  D7FE               	bra	u6227
  2043  001842  2FCA               	decfsz	??_main& (0+255),f,b
  2044  001844  D7FC               	bra	u6227
  2045                           
  2046                           ;practica5_0_1.c: 129:                     PORTCbits.RC2=0;
  2047  001846  9482               	bcf	3970,2,c	;volatile
  2048  001848                     l5162:
  2049                           
  2050                           ;practica5_0_1.c: 125:                 while(PORTCbits.RC0==1){
  2051  001848  B082               	btfsc	3970,0,c	;volatile
  2052  00184A  D7F2               	goto	l5154
  2053                           
  2054                           ;practica5_0_1.c: 131:                  _delay((unsigned long)((1000)*(8000000/4000.0)))
      +                          ;
  2055  00184C  0E0B               	movlw	11
  2056  00184E  0100               	movlb	0	; () banked
  2057  001850  6FCB               	movwf	(??_main+1)& (0+255),b
  2058  001852  0E26               	movlw	38
  2059  001854  6FCA               	movwf	??_main& (0+255),b
  2060  001856  0E5D               	movlw	93
  2061  001858                     u6237:
  2062  001858  2EE8               	decfsz	wreg,f,c
  2063  00185A  D7FE               	bra	u6237
  2064  00185C  2FCA               	decfsz	??_main& (0+255),f,b
  2065  00185E  D7FC               	bra	u6237
  2066  001860  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  2067  001862  D7FA               	bra	u6237
  2068  001864  D000               	nop2	
  2069  001866  D089               	goto	l5198
  2070  001868                     l5172:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;practica5_0_1.c: 141:             R0=scv(D1,D2);
  2074                           
  2075                           ; BSR set to: 0
  2076  001868  C0D6  F001         	movff	main@D2,___fltol@f1
  2077  00186C  C0D7  F002         	movff	main@D2+1,___fltol@f1+1
  2078  001870  C0D8  F003         	movff	main@D2+2,___fltol@f1+2
  2079  001874  C0D9  F004         	movff	main@D2+3,___fltol@f1+3
  2080  001878  EC96  F01B         	call	___fltol	;wreg free
  2081  00187C  C001  F00D         	movff	?___fltol,scv@s2
  2082  001880  C002  F00E         	movff	?___fltol+1,scv@s2+1
  2083  001884  C0D2  F001         	movff	main@D1,___fltol@f1
  2084  001888  C0D3  F002         	movff	main@D1+1,___fltol@f1+1
  2085  00188C  C0D4  F003         	movff	main@D1+2,___fltol@f1+2
  2086  001890  C0D5  F004         	movff	main@D1+3,___fltol@f1+3
  2087  001894  EC96  F01B         	call	___fltol	;wreg free
  2088  001898  C001  F00B         	movff	?___fltol,scv@s1
  2089  00189C  C002  F00C         	movff	?___fltol+1,scv@s1+1
  2090  0018A0  ECE1  F01C         	call	_scv	;wreg free
  2091  0018A4  C00B  F0BC         	movff	?_scv,___xxtofl@val
  2092  0018A8  C00C  F0BD         	movff	?_scv+1,___xxtofl@val+1
  2093  0018AC  0100               	movlb	0	; () banked
  2094  0018AE  0E00               	movlw	0
  2095  0018B0  BFBD               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2096  0018B2  0EFF               	movlw	-1
  2097  0018B4  6FBE               	movwf	(___xxtofl@val+2)& (0+255),b
  2098  0018B6  6FBF               	movwf	(___xxtofl@val+3)& (0+255),b
  2099  0018B8  0E01               	movlw	1
  2100  0018BA  ECE1  F016         	call	___xxtofl
  2101  0018BE  C0BC  F0DA         	movff	?___xxtofl,main@R0
  2102  0018C2  C0BD  F0DB         	movff	?___xxtofl+1,main@R0+1
  2103  0018C6  C0BE  F0DC         	movff	?___xxtofl+2,main@R0+2
  2104  0018CA  C0BF  F0DD         	movff	?___xxtofl+3,main@R0+3
  2105                           
  2106                           ;practica5_0_1.c: 142:             if(R0==0){
  2107  0018CE  C0DA  F001         	movff	main@R0,___fleq@ff1
  2108  0018D2  C0DB  F002         	movff	main@R0+1,___fleq@ff1+1
  2109  0018D6  C0DC  F003         	movff	main@R0+2,___fleq@ff1+2
  2110  0018DA  C0DD  F004         	movff	main@R0+3,___fleq@ff1+3
  2111  0018DE  0E00               	movlw	0
  2112  0018E0  6E05               	movwf	___fleq@ff2,c
  2113  0018E2  0E00               	movlw	0
  2114  0018E4  6E06               	movwf	___fleq@ff2+1,c
  2115  0018E6  0E00               	movlw	0
  2116  0018E8  6E07               	movwf	___fleq@ff2+2,c
  2117  0018EA  0E00               	movlw	0
  2118  0018EC  6E08               	movwf	___fleq@ff2+3,c
  2119  0018EE  EC26  F01D         	call	___fleq	;wreg free
  2120  0018F2  A0D8               	btfss	status,0,c
  2121  0018F4  D011               	goto	l5186
  2122                           
  2123                           ;practica5_0_1.c: 143:                 PORTD=0xFF;
  2124  0018F6  6883               	setf	3971,c	;volatile
  2125                           
  2126                           ;practica5_0_1.c: 144:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  2127  0018F8  0E02               	movlw	2
  2128  0018FA  0100               	movlb	0	; () banked
  2129  0018FC  6FCB               	movwf	(??_main+1)& (0+255),b
  2130  0018FE  0E04               	movlw	4
  2131  001900  6FCA               	movwf	??_main& (0+255),b
  2132  001902  0EBA               	movlw	186
  2133  001904                     u6247:
  2134  001904  2EE8               	decfsz	wreg,f,c
  2135  001906  D7FE               	bra	u6247
  2136  001908  2FCA               	decfsz	??_main& (0+255),f,b
  2137  00190A  D7FC               	bra	u6247
  2138  00190C  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  2139  00190E  D7FA               	bra	u6247
  2140  001910  F000               	nop	
  2141  001912                     l5182:
  2142                           
  2143                           ;practica5_0_1.c: 145:                 PORTD=0x00;
  2144  001912  0E00               	movlw	0
  2145  001914  6E83               	movwf	3971,c	;volatile
  2146                           
  2147                           ;practica5_0_1.c: 146:                 goto INICIO;
  2148  001916  D4DD               	goto	l5038
  2149  001918                     l5186:
  2150  001918  C0DA  F001         	movff	main@R0,___fleq@ff1
  2151  00191C  C0DB  F002         	movff	main@R0+1,___fleq@ff1+1
  2152  001920  C0DC  F003         	movff	main@R0+2,___fleq@ff1+2
  2153  001924  C0DD  F004         	movff	main@R0+3,___fleq@ff1+3
  2154  001928  0E00               	movlw	0
  2155  00192A  6E05               	movwf	___fleq@ff2,c
  2156  00192C  0E00               	movlw	0
  2157  00192E  6E06               	movwf	___fleq@ff2+1,c
  2158  001930  0E00               	movlw	0
  2159  001932  6E07               	movwf	___fleq@ff2+2,c
  2160  001934  0E00               	movlw	0
  2161  001936  6E08               	movwf	___fleq@ff2+3,c
  2162  001938  EC26  F01D         	call	___fleq	;wreg free
  2163  00193C  A0D8               	btfss	status,0,c
  2164  00193E  D00D               	goto	l5192
  2165  001940  D01E               	goto	l5202
  2166  001942                     l5190:
  2167                           
  2168                           ;practica5_0_1.c: 150:                     PORTD=R0;
  2169  001942  C0DA  F001         	movff	main@R0,___fltol@f1
  2170  001946  C0DB  F002         	movff	main@R0+1,___fltol@f1+1
  2171  00194A  C0DC  F003         	movff	main@R0+2,___fltol@f1+2
  2172  00194E  C0DD  F004         	movff	main@R0+3,___fltol@f1+3
  2173  001952  EC96  F01B         	call	___fltol	;wreg free
  2174  001956  5001               	movf	?___fltol,w,c
  2175  001958  6E83               	movwf	3971,c	;volatile
  2176  00195A                     l5192:
  2177                           
  2178                           ;practica5_0_1.c: 149:                 while(PORTCbits.RC0==1){
  2179  00195A  B082               	btfsc	3970,0,c	;volatile
  2180  00195C  D7F2               	goto	l5190
  2181                           
  2182                           ;practica5_0_1.c: 152:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2183  00195E  0E0B               	movlw	11
  2184  001960  0100               	movlb	0	; () banked
  2185  001962  6FCB               	movwf	(??_main+1)& (0+255),b
  2186  001964  0E26               	movlw	38
  2187  001966  6FCA               	movwf	??_main& (0+255),b
  2188  001968  0E5D               	movlw	93
  2189  00196A                     u6257:
  2190  00196A  2EE8               	decfsz	wreg,f,c
  2191  00196C  D7FE               	bra	u6257
  2192  00196E  2FCA               	decfsz	??_main& (0+255),f,b
  2193  001970  D7FC               	bra	u6257
  2194  001972  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  2195  001974  D7FA               	bra	u6257
  2196  001976  D000               	nop2	
  2197                           
  2198                           ;practica5_0_1.c: 153:                 PORTCbits.RC1=0;
  2199  001978  9282               	bcf	3970,1,c	;volatile
  2200  00197A                     l5198:
  2201                           
  2202                           ;practica5_0_1.c: 154:                 PORTCbits.RC2=0;
  2203  00197A  9482               	bcf	3970,2,c	;volatile
  2204                           
  2205                           ;practica5_0_1.c: 155:                 goto INICIO;
  2206  00197C  D4AA               	goto	l5038
  2207  00197E                     l5202:
  2208  00197E  0100               	movlb	0	; () banked
  2209  001980  BFDD               	btfsc	(main@R0+3)& (0+255),7,b
  2210  001982  D005               	goto	l5208
  2211  001984  D53A               	goto	u5970
  2212  001986                     l128:
  2213                           
  2214                           ;practica5_0_1.c: 159:                     PORTCbits.RC1=1;
  2215  001986  8282               	bsf	3970,1,c	;volatile
  2216                           
  2217                           ;practica5_0_1.c: 160:                     PORTCbits.RC2=1;
  2218  001988  8482               	bsf	3970,2,c	;volatile
  2219                           
  2220                           ;practica5_0_1.c: 161:                     PORTD=0;
  2221  00198A  0E00               	movlw	0
  2222  00198C  6E83               	movwf	3971,c	;volatile
  2223  00198E                     l5208:
  2224                           
  2225                           ;practica5_0_1.c: 158:                 while(PORTCbits.RC0==1){
  2226  00198E  B082               	btfsc	3970,0,c	;volatile
  2227  001990  D7FA               	goto	l128
  2228                           
  2229                           ;practica5_0_1.c: 166:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2230  001992  0E0B               	movlw	11
  2231  001994  0100               	movlb	0	; () banked
  2232  001996  6FCB               	movwf	(??_main+1)& (0+255),b
  2233  001998  0E26               	movlw	38
  2234  00199A  6FCA               	movwf	??_main& (0+255),b
  2235  00199C  0E5D               	movlw	93
  2236  00199E                     u6267:
  2237  00199E  2EE8               	decfsz	wreg,f,c
  2238  0019A0  D7FE               	bra	u6267
  2239  0019A2  2FCA               	decfsz	??_main& (0+255),f,b
  2240  0019A4  D7FC               	bra	u6267
  2241  0019A6  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  2242  0019A8  D7FA               	bra	u6267
  2243  0019AA  D000               	nop2	
  2244                           
  2245                           ;practica5_0_1.c: 167:                 PORTCbits.RC1=0;
  2246  0019AC  9282               	bcf	3970,1,c	;volatile
  2247                           
  2248                           ;practica5_0_1.c: 168:                 PORTCbits.RC2=0;
  2249  0019AE  9482               	bcf	3970,2,c	;volatile
  2250  0019B0  D7B0               	goto	l5182
  2251  0019B2                     l5220:
  2252  0019B2  C0D0  F0CA         	movff	main@SEL,??_main
  2253  0019B6  C0D1  F0CB         	movff	main@SEL+1,??_main+1
  2254                           
  2255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2256                           ; Switch size 1, requested type "simple"
  2257                           ; Number of cases is 1, Range of values is 0 to 0
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            4     3 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262  0019BA  0100               	movlb	0	; () banked
  2263  0019BC  51CB               	movf	(??_main+1)& (0+255),w,b
  2264  0019BE  0A00               	xorlw	0	; case 0
  2265  0019C0  A4D8               	btfss	status,2,c
  2266  0019C2  D51B               	goto	u5970
  2267                           
  2268                           ; BSR set to: 0
  2269                           ; Switch size 1, requested type "simple"
  2270                           ; Number of cases is 4, Range of values is 1 to 8
  2271                           ; switch strategies available:
  2272                           ; Name         Instructions Cycles
  2273                           ; simple_byte           13     7 (average)
  2274                           ;	Chosen strategy is simple_byte
  2275  0019C4  51CA               	movf	??_main& (0+255),w,b
  2276  0019C6  0A01               	xorlw	1	; case 1
  2277  0019C8  B4D8               	btfsc	status,2,c
  2278  0019CA  D616               	goto	l5108
  2279  0019CC  0A03               	xorlw	3	; case 2
  2280  0019CE  B4D8               	btfsc	status,2,c
  2281  0019D0  D616               	goto	l5110
  2282  0019D2  0A06               	xorlw	6	; case 4
  2283  0019D4  B4D8               	btfsc	status,2,c
  2284  0019D6  D6C5               	goto	l5134
  2285  0019D8  0A0C               	xorlw	12	; case 8
  2286  0019DA  B4D8               	btfsc	status,2,c
  2287  0019DC  D745               	goto	l5172
  2288  0019DE  D50D               	goto	u5970
  2289  0019E0                     __end_of_main:
  2290                           	opt callstack 0
  2291                           
  2292 ;; *************** function _suma *****************
  2293 ;; Defined at:
  2294 ;;		line 178 in file "practica5_0_1.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  s1              2   10[COMRAM] int 
  2297 ;;  s2              2   12[COMRAM] int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  x               2   14[COMRAM] int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  2   10[COMRAM] int 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         4       0       0       0       0       0       0       0       0
  2310 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2312 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        6 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text1
  2323  004052                     __ptext1:
  2324                           	opt callstack 0
  2325  004052                     _suma:
  2326                           	opt callstack 30
  2327                           
  2328                           ;practica5_0_1.c: 180:     x=s1+s2;
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;incstack = 0
  2332  004052  500D               	movf	suma@s2,w,c
  2333  004054  240B               	addwf	suma@s1,w,c
  2334  004056  6E0F               	movwf	suma@x,c
  2335  004058  500E               	movf	suma@s2+1,w,c
  2336  00405A  200C               	addwfc	suma@s1+1,w,c
  2337  00405C  6E10               	movwf	suma@x+1,c
  2338                           
  2339                           ;practica5_0_1.c: 181:     return x;
  2340  00405E  C00F  F00B         	movff	suma@x,?_suma
  2341  004062  C010  F00C         	movff	suma@x+1,?_suma+1
  2342  004066  0012               	return		;funcret
  2343  004068                     __end_of_suma:
  2344                           	opt callstack 0
  2345                           
  2346 ;; *************** function _scv *****************
  2347 ;; Defined at:
  2348 ;;		line 213 in file "practica5_0_1.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  s1              2   10[COMRAM] int 
  2351 ;;  s2              2   12[COMRAM] int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  i               2   22[COMRAM] int 
  2354 ;;  x               2   20[COMRAM] int 
  2355 ;;  x2              2   18[COMRAM] int 
  2356 ;;  x1              2   16[COMRAM] int 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   10[COMRAM] int 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2366 ;;      Params:         4       0       0       0       0       0       0       0       0
  2367 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2368 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2369 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2370 ;;Total ram usage:       14 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    1
  2373 ;; This function calls:
  2374 ;;		___awdiv
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text2
  2381  0039C2                     __ptext2:
  2382                           	opt callstack 0
  2383  0039C2                     _scv:
  2384                           	opt callstack 29
  2385                           
  2386                           ;incstack = 0
  2387  0039C2  0E00               	movlw	0
  2388  0039C4  6E12               	movwf	scv@x1+1,c
  2389  0039C6  0E00               	movlw	0
  2390  0039C8  6E11               	movwf	scv@x1,c
  2391  0039CA  0E00               	movlw	0
  2392  0039CC  6E14               	movwf	scv@x2+1,c
  2393  0039CE  0E00               	movlw	0
  2394  0039D0  6E13               	movwf	scv@x2,c
  2395                           
  2396                           ;practica5_0_1.c: 215:     x1=s1;
  2397  0039D2  C00B  F011         	movff	scv@s1,scv@x1
  2398  0039D6  C00C  F012         	movff	scv@s1+1,scv@x1+1
  2399                           
  2400                           ;practica5_0_1.c: 216:     x2=s2;
  2401  0039DA  C00D  F013         	movff	scv@s2,scv@x2
  2402  0039DE  C00E  F014         	movff	scv@s2+1,scv@x2+1
  2403                           
  2404                           ;practica5_0_1.c: 217:     if(x2==0){
  2405  0039E2  5013               	movf	scv@x2,w,c
  2406  0039E4  1014               	iorwf	scv@x2+1,w,c
  2407  0039E6  A4D8               	btfss	status,2,c
  2408  0039E8  D01E               	goto	l4974
  2409                           
  2410                           ;practica5_0_1.c: 219:         for(int i=0;i<=255;i++){
  2411  0039EA  0E00               	movlw	0
  2412  0039EC  6E18               	movwf	scv@i+1,c
  2413  0039EE  0E00               	movlw	0
  2414  0039F0  6E17               	movwf	scv@i,c
  2415  0039F2                     l154:
  2416                           
  2417                           ;practica5_0_1.c: 220:           PORTD=i;
  2418  0039F2  C017  FF83         	movff	scv@i,3971	;volatile
  2419                           
  2420                           ;practica5_0_1.c: 221:           _delay((unsigned long)((100)*(8000000/4000.0)));
  2421  0039F6  0E02               	movlw	2
  2422  0039F8  6E10               	movwf	(??_scv+1)& (0+255),c
  2423  0039FA  0E04               	movlw	4
  2424  0039FC  6E0F               	movwf	??_scv& (0+255),c
  2425  0039FE  0EBA               	movlw	186
  2426  003A00                     u6277:
  2427  003A00  2EE8               	decfsz	wreg,f,c
  2428  003A02  D7FE               	bra	u6277
  2429  003A04  2E0F               	decfsz	??_scv& (0+255),f,c
  2430  003A06  D7FC               	bra	u6277
  2431  003A08  2E10               	decfsz	(??_scv+1)& (0+255),f,c
  2432  003A0A  D7FA               	bra	u6277
  2433  003A0C  D000               	nop2	
  2434                           
  2435                           ;practica5_0_1.c: 222:         }
  2436  003A0E  4A17               	infsnz	scv@i,f,c
  2437  003A10  2A18               	incf	scv@i+1,f,c
  2438  003A12  BE18               	btfsc	scv@i+1,7,c
  2439  003A14  D7EE               	goto	l154
  2440  003A16  0418               	decf	scv@i+1,w,c
  2441  003A18  A0D8               	btfss	status,0,c
  2442  003A1A  D7EB               	goto	l154
  2443                           
  2444                           ;practica5_0_1.c: 224:         return x;
  2445  003A1C  0E00               	movlw	0
  2446  003A1E  6E0C               	movwf	?_scv+1,c
  2447  003A20  0E00               	movlw	0
  2448  003A22  6E0B               	movwf	?_scv,c
  2449  003A24  0012               	return	
  2450  003A26                     l4974:
  2451                           
  2452                           ;practica5_0_1.c: 232:         x=x1/x2;
  2453  003A26  C011  F001         	movff	scv@x1,___awdiv@dividend
  2454  003A2A  C012  F002         	movff	scv@x1+1,___awdiv@dividend+1
  2455  003A2E  C013  F003         	movff	scv@x2,___awdiv@divisor
  2456  003A32  C014  F004         	movff	scv@x2+1,___awdiv@divisor+1
  2457  003A36  EC6B  F01D         	call	___awdiv	;wreg free
  2458  003A3A  C001  F015         	movff	?___awdiv,scv@x
  2459  003A3E  C002  F016         	movff	?___awdiv+1,scv@x+1
  2460                           
  2461                           ;practica5_0_1.c: 233:         return x;
  2462  003A42  C015  F00B         	movff	scv@x,?_scv
  2463  003A46  C016  F00C         	movff	scv@x+1,?_scv+1
  2464  003A4A  0012               	return		;funcret
  2465  003A4C                     __end_of_scv:
  2466                           	opt callstack 0
  2467                           
  2468 ;; *************** function _resta *****************
  2469 ;; Defined at:
  2470 ;;		line 183 in file "practica5_0_1.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  s1              2   88[BANK0 ] int 
  2473 ;;  s2              2   90[BANK0 ] int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  x               2   93[COMRAM] int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2   88[BANK0 ] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       4       0       0       0       0       0       0       0
  2486 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         4       4       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        8 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    8
  2492 ;; This function calls:
  2493 ;;		_Lcd_Out2
  2494 ;;		_sprintf
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text3
  2501  0034B8                     __ptext3:
  2502                           	opt callstack 0
  2503  0034B8                     _resta:
  2504                           	opt callstack 22
  2505                           
  2506                           ;practica5_0_1.c: 185:     x=s1-s2;
  2507                           
  2508                           ;incstack = 0
  2509  0034B8  0100               	movlb	0	; () banked
  2510  0034BA  51BA               	movf	resta@s2& (0+255),w,b
  2511  0034BC  5DB8               	subwf	resta@s1& (0+255),w,b
  2512  0034BE  6E5E               	movwf	resta@x,c
  2513  0034C0  51BB               	movf	(resta@s2+1)& (0+255),w,b
  2514  0034C2  59B9               	subwfb	(resta@s1+1)& (0+255),w,b
  2515  0034C4  6E5F               	movwf	resta@x+1,c
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;practica5_0_1.c: 186:     if(x<0){
  2519  0034C6  AE5F               	btfss	resta@x+1,7,c
  2520  0034C8  D05E               	goto	l138
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;practica5_0_1.c: 187:         x=x*(-1);
  2524  0034CA  6C5E               	negf	resta@x,c
  2525  0034CC  1E5F               	comf	resta@x+1,f,c
  2526  0034CE  B0D8               	btfsc	status,0,c
  2527  0034D0  2A5F               	incf	resta@x+1,f,c
  2528                           
  2529                           ;practica5_0_1.c: 188:         while(PORTCbits.RC1==1){
  2530  0034D2  D048               	goto	l4918
  2531  0034D4                     l4910:
  2532                           
  2533                           ;practica5_0_1.c: 189:             sprintf(numero1,"%0.0d -",s1);
  2534  0034D4  0EEE               	movlw	low _numero1
  2535  0034D6  0100               	movlb	0	; () banked
  2536  0034D8  6FB0               	movwf	sprintf@s& (0+255),b
  2537  0034DA  0E00               	movlw	high _numero1
  2538  0034DC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2539  0034DE  0EB2               	movlw	low STR_17
  2540  0034E0  6FB2               	movwf	sprintf@fmt& (0+255),b
  2541  0034E2  0E08               	movlw	high STR_17
  2542  0034E4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2543  0034E6  C0B8  F0B4         	movff	resta@s1,?_sprintf+4
  2544  0034EA  C0B9  F0B5         	movff	resta@s1+1,?_sprintf+5
  2545  0034EE  ECE4  F01E         	call	_sprintf	;wreg free
  2546                           
  2547                           ;practica5_0_1.c: 190:             sprintf(numero2," %0.0d",s2);
  2548  0034F2  0E61               	movlw	low _numero2
  2549  0034F4  0100               	movlb	0	; () banked
  2550  0034F6  6FB0               	movwf	sprintf@s& (0+255),b
  2551  0034F8  0E01               	movlw	high _numero2
  2552  0034FA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2553  0034FC  0EC2               	movlw	low STR_18
  2554  0034FE  6FB2               	movwf	sprintf@fmt& (0+255),b
  2555  003500  0E08               	movlw	high STR_18
  2556  003502  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2557  003504  C0BA  F0B4         	movff	resta@s2,?_sprintf+4
  2558  003508  C0BB  F0B5         	movff	resta@s2+1,?_sprintf+5
  2559  00350C  ECE4  F01E         	call	_sprintf	;wreg free
  2560                           
  2561                           ;practica5_0_1.c: 191:             sprintf(palabra,"Resta= -%0.3d",x);
  2562  003510  0E72               	movlw	low _palabra
  2563  003512  0100               	movlb	0	; () banked
  2564  003514  6FB0               	movwf	sprintf@s& (0+255),b
  2565  003516  0E01               	movlw	high _palabra
  2566  003518  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2567  00351A  0E6B               	movlw	low STR_19
  2568  00351C  6FB2               	movwf	sprintf@fmt& (0+255),b
  2569  00351E  0E08               	movlw	high STR_19
  2570  003520  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2571  003522  C05E  F0B4         	movff	resta@x,?_sprintf+4
  2572  003526  C05F  F0B5         	movff	resta@x+1,?_sprintf+5
  2573  00352A  ECE4  F01E         	call	_sprintf	;wreg free
  2574                           
  2575                           ;practica5_0_1.c: 192:             Lcd_Out2(1,1,numero1);
  2576  00352E  0E01               	movlw	1
  2577  003530  6E04               	movwf	Lcd_Out2@x,c
  2578  003532  0EEE               	movlw	low _numero1
  2579  003534  6E05               	movwf	Lcd_Out2@buffer,c
  2580  003536  0E00               	movlw	high _numero1
  2581  003538  6E06               	movwf	Lcd_Out2@buffer+1,c
  2582  00353A  0E01               	movlw	1
  2583  00353C  EC20  F01E         	call	_Lcd_Out2
  2584                           
  2585                           ;practica5_0_1.c: 193:             Lcd_Out2(1,6,numero2);
  2586  003540  0E06               	movlw	6
  2587  003542  6E04               	movwf	Lcd_Out2@x,c
  2588  003544  0E61               	movlw	low _numero2
  2589  003546  6E05               	movwf	Lcd_Out2@buffer,c
  2590  003548  0E01               	movlw	high _numero2
  2591  00354A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2592  00354C  0E01               	movlw	1
  2593  00354E  EC20  F01E         	call	_Lcd_Out2
  2594                           
  2595                           ;practica5_0_1.c: 194:             Lcd_Out2(2,1,palabra);
  2596  003552  0E01               	movlw	1
  2597  003554  6E04               	movwf	Lcd_Out2@x,c
  2598  003556  0E72               	movlw	low _palabra
  2599  003558  6E05               	movwf	Lcd_Out2@buffer,c
  2600  00355A  0E01               	movlw	high _palabra
  2601  00355C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2602  00355E  0E02               	movlw	2
  2603  003560  EC20  F01E         	call	_Lcd_Out2
  2604  003564                     l4918:
  2605                           
  2606                           ;practica5_0_1.c: 188:         while(PORTCbits.RC1==1){
  2607  003564  B282               	btfsc	3970,1,c	;volatile
  2608  003566  D7B6               	goto	l4910
  2609                           
  2610                           ;practica5_0_1.c: 196:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2611  003568  0E0B               	movlw	11
  2612  00356A  6E5D               	movwf	(??_resta+1)& (0+255),c
  2613  00356C  0E26               	movlw	38
  2614  00356E  6E5C               	movwf	??_resta& (0+255),c
  2615  003570  0E5E               	movlw	94
  2616  003572                     u6287:
  2617  003572  2EE8               	decfsz	wreg,f,c
  2618  003574  D7FE               	bra	u6287
  2619  003576  2E5C               	decfsz	??_resta& (0+255),f,c
  2620  003578  D7FC               	bra	u6287
  2621  00357A  2E5D               	decfsz	(??_resta+1)& (0+255),f,c
  2622  00357C  D7FA               	bra	u6287
  2623                           
  2624                           ;practica5_0_1.c: 197:         return -1;
  2625  00357E  0100               	movlb	0	; () banked
  2626  003580  69B8               	setf	?_resta& (0+255),b
  2627  003582  69B9               	setf	(?_resta+1)& (0+255),b
  2628  003584  0012               	return	
  2629  003586                     l138:
  2630                           
  2631                           ; BSR set to: 0
  2632  003586  C05E  F0B8         	movff	resta@x,?_resta
  2633  00358A  C05F  F0B9         	movff	resta@x+1,?_resta+1
  2634                           
  2635                           ; BSR set to: 0
  2636  00358E  0012               	return		;funcret
  2637  003590                     __end_of_resta:
  2638                           	opt callstack 0
  2639                           
  2640 ;; *************** function _sprintf *****************
  2641 ;; Defined at:
  2642 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2645 ;;		 -> palabra(17), numero3(17), numero2(17), numero1(17), 
  2646 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2647 ;;		 -> STR_19(14), STR_18(7), STR_17(8), STR_16(13), 
  2648 ;;		 -> STR_15(7), STR_14(8), STR_13(12), STR_12(7), 
  2649 ;;		 -> STR_11(8), STR_10(16), STR_6(14), STR_4(14), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  f               6   85[COMRAM] struct _IO_FILE
  2652 ;;  ap              2   83[COMRAM] PTR void [1]
  2653 ;;		 -> ?_sprintf(2), 
  2654 ;;  ret             2    0        int 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2   80[BANK0 ] int 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2664 ;;      Params:         0       8       0       0       0       0       0       0       0
  2665 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2667 ;;      Totals:        10       8       0       0       0       0       0       0       0
  2668 ;;Total ram usage:       18 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    7
  2671 ;; This function calls:
  2672 ;;		_vfprintf
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;;		_resta
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text4
  2680  003DC8                     __ptext4:
  2681                           	opt callstack 0
  2682  003DC8                     _sprintf:
  2683                           	opt callstack 23
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;incstack = 0
  2687  003DC8  0EB4               	movlw	low (?_sprintf+4)
  2688  003DCA  6E54               	movwf	sprintf@ap,c
  2689  003DCC  0E00               	movlw	high (?_sprintf+4)
  2690  003DCE  6E55               	movwf	sprintf@ap+1,c
  2691  003DD0  C0B0  F056         	movff	sprintf@s,sprintf@f
  2692  003DD4  C0B1  F057         	movff	sprintf@s+1,sprintf@f+1
  2693  003DD8  0E00               	movlw	0
  2694  003DDA  6E59               	movwf	sprintf@f+3,c
  2695  003DDC  0E00               	movlw	0
  2696  003DDE  6E58               	movwf	sprintf@f+2,c
  2697  003DE0  0E00               	movlw	0
  2698  003DE2  6E5B               	movwf	sprintf@f+5,c
  2699  003DE4  0E00               	movlw	0
  2700  003DE6  6E5A               	movwf	sprintf@f+4,c
  2701  003DE8  0E56               	movlw	low sprintf@f
  2702  003DEA  6E4A               	movwf	vfprintf@fp,c
  2703  003DEC  0E00               	movlw	high sprintf@f
  2704  003DEE  6E4B               	movwf	vfprintf@fp+1,c
  2705  003DF0  C0B2  F04C         	movff	sprintf@fmt,vfprintf@fmt
  2706  003DF4  C0B3  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2707  003DF8  0E54               	movlw	low sprintf@ap
  2708  003DFA  6E4E               	movwf	vfprintf@ap,c
  2709  003DFC  0E00               	movlw	high sprintf@ap
  2710  003DFE  6E4F               	movwf	vfprintf@ap+1,c
  2711  003E00  EC90  F01E         	call	_vfprintf	;wreg free
  2712  003E04  5058               	movf	sprintf@f+2,w,c
  2713  003E06  0100               	movlb	0	; () banked
  2714  003E08  25B0               	addwf	sprintf@s& (0+255),w,b
  2715  003E0A  6ED9               	movwf	fsr2l,c
  2716  003E0C  5059               	movf	sprintf@f+3,w,c
  2717  003E0E  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2718  003E10  6EDA               	movwf	fsr2h,c
  2719  003E12  0E00               	movlw	0
  2720  003E14  6EDF               	movwf	indf2,c
  2721                           
  2722                           ; BSR set to: 0
  2723  003E16  0012               	return		;funcret
  2724  003E18                     __end_of_sprintf:
  2725                           	opt callstack 0
  2726                           
  2727 ;; *************** function _vfprintf *****************
  2728 ;; Defined at:
  2729 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  2732 ;;		 -> sprintf@f(6), 
  2733 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  2734 ;;		 -> STR_19(14), STR_18(7), STR_17(8), STR_16(13), 
  2735 ;;		 -> STR_15(7), STR_14(8), STR_13(12), STR_12(7), 
  2736 ;;		 -> STR_11(8), STR_10(16), STR_6(14), STR_4(14), 
  2737 ;;  ap              2   77[COMRAM] PTR PTR void 
  2738 ;;		 -> sprintf@ap(2), 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  2741 ;;		 -> STR_19(14), STR_18(7), STR_17(8), STR_16(13), 
  2742 ;;		 -> STR_15(7), STR_14(8), STR_13(12), STR_12(7), 
  2743 ;;		 -> STR_11(8), STR_10(16), STR_6(14), STR_4(14), 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2   73[COMRAM] int 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2753 ;;      Params:         6       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        8 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    6
  2760 ;; This function calls:
  2761 ;;		_vfpfcnvrt
  2762 ;; This function is called by:
  2763 ;;		_sprintf
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text5
  2768  003D20                     __ptext5:
  2769                           	opt callstack 0
  2770  003D20                     _vfprintf:
  2771                           	opt callstack 23
  2772                           
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;incstack = 0
  2777  003D20  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  2778  003D24  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2779                           
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2781  003D28  0E00               	movlw	0
  2782  003D2A  0100               	movlb	0	; () banked
  2783  003D2C  6FE7               	movwf	(_nout+1)& (0+255),b
  2784  003D2E  0E00               	movlw	0
  2785  003D30  6FE6               	movwf	_nout& (0+255),b
  2786                           
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2788  003D32  D013               	goto	l4772
  2789  003D34                     l4770:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2793  003D34  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2794  003D38  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2795  003D3C  0E50               	movlw	low vfprintf@cfmt
  2796  003D3E  6E42               	movwf	vfpfcnvrt@fmt,c
  2797  003D40  0E00               	movlw	high vfprintf@cfmt
  2798  003D42  6E43               	movwf	vfpfcnvrt@fmt+1,c
  2799  003D44  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2800  003D48  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2801  003D4C  ECF0  F00C         	call	_vfpfcnvrt	;wreg free
  2802  003D50  5040               	movf	?_vfpfcnvrt,w,c
  2803  003D52  0100               	movlb	0	; () banked
  2804  003D54  27E6               	addwf	_nout& (0+255),f,b
  2805  003D56  5041               	movf	?_vfpfcnvrt+1,w,c
  2806  003D58  23E7               	addwfc	(_nout+1)& (0+255),f,b
  2807  003D5A                     l4772:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2811  003D5A  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  2812  003D5E  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2813  003D62                     	if	0	;tblptru may be non-zero
  2814  003D62                     	endif
  2815  003D62                     	if	0	;tblptru may be non-zero
  2816  003D62                     	endif
  2817  003D62  0008               	tblrd		*
  2818  003D64  50F5               	movf	tablat,w,c
  2819  003D66  0900               	iorlw	0
  2820  003D68  A4D8               	btfss	status,2,c
  2821  003D6A  D7E4               	goto	l4770
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2825  003D6C  C0E6  F04A         	movff	_nout,?_vfprintf
  2826  003D70  C0E7  F04B         	movff	_nout+1,?_vfprintf+1
  2827                           
  2828                           ; BSR set to: 0
  2829  003D74  0012               	return		;funcret
  2830  003D76                     __end_of_vfprintf:
  2831                           	opt callstack 0
  2832                           
  2833 ;; *************** function _vfpfcnvrt *****************
  2834 ;; Defined at:
  2835 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2838 ;;		 -> sprintf@f(6), 
  2839 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2840 ;;		 -> vfprintf@cfmt(2), 
  2841 ;;  ap              2   67[COMRAM] PTR PTR void 
  2842 ;;		 -> sprintf@ap(2), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  ll              8   56[BANK0 ] long long 
  2845 ;;  llu             8    0        unsigned long long 
  2846 ;;  f               4   72[BANK0 ] unsigned long long 
  2847 ;;  ct              3   76[BANK0 ] unsigned char [3]
  2848 ;;  vp              3    0        PTR void 
  2849 ;;  cp              3    0        PTR unsigned char 
  2850 ;;  done            2   64[BANK0 ] int 
  2851 ;;  i               2    0        int 
  2852 ;;  c               1   79[BANK0 ] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2   63[COMRAM] int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2862 ;;      Params:         6       0       0       0       0       0       0       0       0
  2863 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2864 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2865 ;;      Totals:        10      24       0       0       0       0       0       0       0
  2866 ;;Total ram usage:       34 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    5
  2869 ;; This function calls:
  2870 ;;		_atoi
  2871 ;;		_dtoa
  2872 ;;		_efgtoa
  2873 ;;		_fputc
  2874 ;;		_isdigit
  2875 ;;		_isupper
  2876 ;;		_strncmp
  2877 ;;		_tolower
  2878 ;; This function is called by:
  2879 ;;		_vfprintf
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text6
  2884  0019E0                     __ptext6:
  2885                           	opt callstack 0
  2886  0019E0                     _vfpfcnvrt:
  2887                           	opt callstack 23
  2888                           
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;incstack = 0
  2893  0019E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2894  0019E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2895  0019E8  CFDE FFF6          	movff	postinc2,tblptrl
  2896  0019EC  CFDD FFF7          	movff	postdec2,tblptrh
  2897  0019F0                     	if	0	;tblptru may be non-zero
  2898  0019F0                     	endif
  2899  0019F0                     	if	0	;tblptru may be non-zero
  2900  0019F0                     	endif
  2901  0019F0  0008               	tblrd		*
  2902  0019F2  50F5               	movf	tablat,w,c
  2903  0019F4  0A25               	xorlw	37
  2904  0019F6  A4D8               	btfss	status,2,c
  2905  0019F8  D2B4               	goto	l4706
  2906                           
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2908  0019FA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2909  0019FE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2910  001A02  2ADE               	incf	postinc2,f,c
  2911  001A04  0E00               	movlw	0
  2912  001A06  22DD               	addwfc	postdec2,f,c
  2913                           
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2915  001A08  0E00               	movlw	0
  2916  001A0A  0100               	movlb	0	; () banked
  2917  001A0C  6FE9               	movwf	(_width+1)& (0+255),b
  2918  001A0E  0E00               	movlw	0
  2919  001A10  6FE8               	movwf	_width& (0+255),b
  2920  001A12  C0E8  F0EC         	movff	_width,_flags
  2921  001A16  C0E9  F0ED         	movff	_width+1,_flags+1
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2925  001A1A  69EA               	setf	_prec& (0+255),b
  2926  001A1C  69EB               	setf	(_prec+1)& (0+255),b
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2930  001A1E  0E00               	movlw	0
  2931  001A20  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2932  001A22  0E00               	movlw	0
  2933  001A24  D014               	goto	L2
  2934  001A26                     l4574:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2938  001A26  81EC               	bsf	_flags& (0+255),0,b
  2939  001A28                     l4576:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2943  001A28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2944  001A2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2945  001A30  2ADE               	incf	postinc2,f,c
  2946  001A32  0E00               	movlw	0
  2947  001A34  22DD               	addwfc	postdec2,f,c
  2948                           
  2949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2950  001A36  D02E               	goto	l4600
  2951  001A38                     l4578:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2955  001A38  83EC               	bsf	_flags& (0+255),1,b
  2956  001A3A  D7F6               	goto	l4576
  2957  001A3C                     l4582:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2961  001A3C  85EC               	bsf	_flags& (0+255),2,b
  2962  001A3E  D7F4               	goto	l4576
  2963  001A40                     l4586:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2967  001A40  87EC               	bsf	_flags& (0+255),3,b
  2968  001A42  D7F2               	goto	l4576
  2969  001A44                     l4590:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2973  001A44  89EC               	bsf	_flags& (0+255),4,b
  2974  001A46  D7F0               	goto	l4576
  2975  001A48                     l4594:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2979  001A48  0E00               	movlw	0
  2980  001A4A  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2981  001A4C  0E01               	movlw	1
  2982  001A4E                     L2:
  2983  001A4E  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  2984                           
  2985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2986  001A50  D021               	goto	l4600
  2987  001A52                     l4598:
  2988                           
  2989                           ; BSR set to: 0
  2990  001A52  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991  001A56  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992  001A5A  CFDE FFF6          	movff	postinc2,tblptrl
  2993  001A5E  CFDD FFF7          	movff	postdec2,tblptrh
  2994  001A62                     	if	0	;tblptru may be non-zero
  2995  001A62                     	endif
  2996  001A62                     	if	0	;tblptru may be non-zero
  2997  001A62                     	endif
  2998  001A62  0008               	tblrd		*
  2999  001A64  50F5               	movf	tablat,w,c
  3000  001A66  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3001  001A68  6A47               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3002                           
  3003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3004                           ; Switch size 1, requested type "simple"
  3005                           ; Number of cases is 1, Range of values is 0 to 0
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte            4     3 (average)
  3009                           ;	Chosen strategy is simple_byte
  3010  001A6A  5047               	movf	??_vfpfcnvrt+1,w,c
  3011  001A6C  0A00               	xorlw	0	; case 0
  3012  001A6E  A4D8               	btfss	status,2,c
  3013  001A70  D7EB               	goto	l4594
  3014                           
  3015                           ; BSR set to: 0
  3016                           ; Switch size 1, requested type "simple"
  3017                           ; Number of cases is 5, Range of values is 32 to 48
  3018                           ; switch strategies available:
  3019                           ; Name         Instructions Cycles
  3020                           ; simple_byte           16     9 (average)
  3021                           ;	Chosen strategy is simple_byte
  3022  001A72  5046               	movf	??_vfpfcnvrt,w,c
  3023  001A74  0A20               	xorlw	32	; case 32
  3024  001A76  B4D8               	btfsc	status,2,c
  3025  001A78  D7E3               	goto	l4586
  3026  001A7A  0A03               	xorlw	3	; case 35
  3027  001A7C  B4D8               	btfsc	status,2,c
  3028  001A7E  D7E2               	goto	l4590
  3029  001A80  0A08               	xorlw	8	; case 43
  3030  001A82  B4D8               	btfsc	status,2,c
  3031  001A84  D7DB               	goto	l4582
  3032  001A86  0A06               	xorlw	6	; case 45
  3033  001A88  B4D8               	btfsc	status,2,c
  3034  001A8A  D7CD               	goto	l4574
  3035  001A8C  0A1D               	xorlw	29	; case 48
  3036  001A8E  B4D8               	btfsc	status,2,c
  3037  001A90  D7D3               	goto	l4578
  3038  001A92  D7DA               	goto	l4594
  3039  001A94                     l4600:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3043  001A94  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  3044  001A96  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3045  001A98  B4D8               	btfsc	status,2,c
  3046  001A9A  D7DB               	goto	l4598
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3050  001A9C  B1EC               	btfsc	_flags& (0+255),0,b
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3054  001A9E  93EC               	bcf	_flags& (0+255),1,b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3058  001AA0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3059  001AA4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3060  001AA8  CFDE FFF6          	movff	postinc2,tblptrl
  3061  001AAC  CFDD FFF7          	movff	postdec2,tblptrh
  3062  001AB0                     	if	0	;tblptru may be non-zero
  3063  001AB0                     	endif
  3064  001AB0                     	if	0	;tblptru may be non-zero
  3065  001AB0                     	endif
  3066  001AB0  0008               	tblrd		*
  3067  001AB2  50F5               	movf	tablat,w,c
  3068  001AB4  0A2A               	xorlw	42
  3069  001AB6  A4D8               	btfss	status,2,c
  3070  001AB8  D023               	goto	l4612
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3074  001ABA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3075  001ABE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3076  001AC2  2ADE               	incf	postinc2,f,c
  3077  001AC4  0E00               	movlw	0
  3078  001AC6  22DD               	addwfc	postdec2,f,c
  3079                           
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3081  001AC8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3082  001ACC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3083  001AD0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3084  001AD4  0E02               	movlw	2
  3085  001AD6  26DE               	addwf	postinc2,f,c
  3086  001AD8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3087  001ADC  0E00               	movlw	0
  3088  001ADE  22DD               	addwfc	postdec2,f,c
  3089  001AE0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3090  001AE4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3091  001AE8  CFDE F0E8          	movff	postinc2,_width
  3092  001AEC  CFDD F0E9          	movff	postdec2,_width+1
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3096  001AF0  AFE9               	btfss	(_width+1)& (0+255),7,b
  3097  001AF2  D040               	goto	u5530
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3101  001AF4  81EC               	bsf	_flags& (0+255),0,b
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3104  001AF6  6DE8               	negf	_width& (0+255),b
  3105  001AF8  1FE9               	comf	(_width+1)& (0+255),f,b
  3106  001AFA  B0D8               	btfsc	status,0,c
  3107  001AFC  2BE9               	incf	(_width+1)& (0+255),f,b
  3108  001AFE  D03A               	goto	u5530
  3109  001B00                     l4612:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3113  001B00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3114  001B04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3115  001B08  CFDE F008          	movff	postinc2,atoi@s
  3116  001B0C  CFDD F009          	movff	postdec2,atoi@s+1
  3117  001B10  EC83  F017         	call	_atoi	;wreg free
  3118  001B14  C008  F0E8         	movff	?_atoi,_width
  3119  001B18  C009  F0E9         	movff	?_atoi+1,_width+1
  3120                           
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3122  001B1C  D007               	goto	l4616
  3123  001B1E                     l4614:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3127  001B1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  001B22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  001B26  2ADE               	incf	postinc2,f,c
  3130  001B28  0E00               	movlw	0
  3131  001B2A  22DD               	addwfc	postdec2,f,c
  3132  001B2C                     l4616:
  3133  001B2C  0ED0               	movlw	208
  3134  001B2E  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3135  001B30  0EFF               	movlw	255
  3136  001B32  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3137  001B34  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3138  001B38  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3139  001B3C  CFDE FFF6          	movff	postinc2,tblptrl
  3140  001B40  CFDD FFF7          	movff	postdec2,tblptrh
  3141  001B44                     	if	0	;tblptru may be non-zero
  3142  001B44                     	endif
  3143  001B44                     	if	0	;tblptru may be non-zero
  3144  001B44                     	endif
  3145  001B44  0008               	tblrd		*
  3146  001B46  50F5               	movf	tablat,w,c
  3147  001B48  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3148  001B4A  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3149  001B4C  5046               	movf	??_vfpfcnvrt,w,c
  3150  001B4E  2648               	addwf	??_vfpfcnvrt+2,f,c
  3151  001B50  5047               	movf	??_vfpfcnvrt+1,w,c
  3152  001B52  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3153  001B54  5049               	movf	??_vfpfcnvrt+3,w,c
  3154  001B56  E106               	bnz	u5510
  3155  001B58  0E0A               	movlw	10
  3156  001B5A  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3157  001B5C  B0D8               	btfsc	status,0,c
  3158  001B5E  D002               	goto	u5510
  3159  001B60  0E01               	movlw	1
  3160  001B62  D001               	goto	u5520
  3161  001B64                     u5510:
  3162  001B64  0E00               	movlw	0
  3163  001B66                     u5520:
  3164  001B66  0100               	movlb	0	; () banked
  3165  001B68  6FA2               	movwf	_vfpfcnvrt$500& (0+255),b
  3166  001B6A  6BA3               	clrf	(_vfpfcnvrt$500+1)& (0+255),b
  3167                           
  3168                           ; BSR set to: 0
  3169  001B6C  51A2               	movf	_vfpfcnvrt$500& (0+255),w,b
  3170  001B6E  11A3               	iorwf	(_vfpfcnvrt$500+1)& (0+255),w,b
  3171  001B70  A4D8               	btfss	status,2,c
  3172  001B72  D7D5               	goto	l4614
  3173  001B74                     u5530:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3177  001B74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3178  001B78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3179  001B7C  CFDE FFF6          	movff	postinc2,tblptrl
  3180  001B80  CFDD FFF7          	movff	postdec2,tblptrh
  3181  001B84                     	if	0	;tblptru may be non-zero
  3182  001B84                     	endif
  3183  001B84                     	if	0	;tblptru may be non-zero
  3184  001B84                     	endif
  3185  001B84  0008               	tblrd		*
  3186  001B86  50F5               	movf	tablat,w,c
  3187  001B88  0A2E               	xorlw	46
  3188  001B8A  A4D8               	btfss	status,2,c
  3189  001B8C  D06E               	goto	u5580
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3193  001B8E  0E00               	movlw	0
  3194  001B90  6FEB               	movwf	(_prec+1)& (0+255),b
  3195  001B92  0E00               	movlw	0
  3196  001B94  6FEA               	movwf	_prec& (0+255),b
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3200  001B96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3201  001B9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  001B9E  2ADE               	incf	postinc2,f,c
  3203  001BA0  0E00               	movlw	0
  3204  001BA2  22DD               	addwfc	postdec2,f,c
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3208  001BA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  001BA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  001BAC  CFDE FFF6          	movff	postinc2,tblptrl
  3211  001BB0  CFDD FFF7          	movff	postdec2,tblptrh
  3212  001BB4                     	if	0	;tblptru may be non-zero
  3213  001BB4                     	endif
  3214  001BB4                     	if	0	;tblptru may be non-zero
  3215  001BB4                     	endif
  3216  001BB4  0008               	tblrd		*
  3217  001BB6  50F5               	movf	tablat,w,c
  3218  001BB8  0A2A               	xorlw	42
  3219  001BBA  A4D8               	btfss	status,2,c
  3220  001BBC  D01C               	goto	l4632
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3224  001BBE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3225  001BC2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3226  001BC6  2ADE               	incf	postinc2,f,c
  3227  001BC8  0E00               	movlw	0
  3228  001BCA  22DD               	addwfc	postdec2,f,c
  3229                           
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3231  001BCC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3232  001BD0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3233  001BD4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3234  001BD8  0E02               	movlw	2
  3235  001BDA  26DE               	addwf	postinc2,f,c
  3236  001BDC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3237  001BE0  0E00               	movlw	0
  3238  001BE2  22DD               	addwfc	postdec2,f,c
  3239  001BE4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3240  001BE8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3241  001BEC  CFDE F0EA          	movff	postinc2,_prec
  3242  001BF0  CFDD F0EB          	movff	postdec2,_prec+1
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3245  001BF4  D03A               	goto	u5580
  3246  001BF6                     l4632:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3250  001BF6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3251  001BFA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3252  001BFE  CFDE F008          	movff	postinc2,atoi@s
  3253  001C02  CFDD F009          	movff	postdec2,atoi@s+1
  3254  001C06  EC83  F017         	call	_atoi	;wreg free
  3255  001C0A  C008  F0EA         	movff	?_atoi,_prec
  3256  001C0E  C009  F0EB         	movff	?_atoi+1,_prec+1
  3257                           
  3258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3259  001C12  D007               	goto	l4636
  3260  001C14                     l4634:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3264  001C14  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3265  001C18  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3266  001C1C  2ADE               	incf	postinc2,f,c
  3267  001C1E  0E00               	movlw	0
  3268  001C20  22DD               	addwfc	postdec2,f,c
  3269  001C22                     l4636:
  3270  001C22  0ED0               	movlw	208
  3271  001C24  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3272  001C26  0EFF               	movlw	255
  3273  001C28  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3274  001C2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3275  001C2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3276  001C32  CFDE FFF6          	movff	postinc2,tblptrl
  3277  001C36  CFDD FFF7          	movff	postdec2,tblptrh
  3278  001C3A                     	if	0	;tblptru may be non-zero
  3279  001C3A                     	endif
  3280  001C3A                     	if	0	;tblptru may be non-zero
  3281  001C3A                     	endif
  3282  001C3A  0008               	tblrd		*
  3283  001C3C  50F5               	movf	tablat,w,c
  3284  001C3E  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3285  001C40  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3286  001C42  5046               	movf	??_vfpfcnvrt,w,c
  3287  001C44  2648               	addwf	??_vfpfcnvrt+2,f,c
  3288  001C46  5047               	movf	??_vfpfcnvrt+1,w,c
  3289  001C48  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3290  001C4A  5049               	movf	??_vfpfcnvrt+3,w,c
  3291  001C4C  E106               	bnz	u5560
  3292  001C4E  0E0A               	movlw	10
  3293  001C50  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3294  001C52  B0D8               	btfsc	status,0,c
  3295  001C54  D002               	goto	u5560
  3296  001C56  0E01               	movlw	1
  3297  001C58  D001               	goto	u5570
  3298  001C5A                     u5560:
  3299  001C5A  0E00               	movlw	0
  3300  001C5C                     u5570:
  3301  001C5C  0100               	movlb	0	; () banked
  3302  001C5E  6FA4               	movwf	_vfpfcnvrt$501& (0+255),b
  3303  001C60  6BA5               	clrf	(_vfpfcnvrt$501+1)& (0+255),b
  3304                           
  3305                           ; BSR set to: 0
  3306  001C62  51A4               	movf	_vfpfcnvrt$501& (0+255),w,b
  3307  001C64  11A5               	iorwf	(_vfpfcnvrt$501+1)& (0+255),w,b
  3308  001C66  A4D8               	btfss	status,2,c
  3309  001C68  D7D5               	goto	l4634
  3310  001C6A                     u5580:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3314  001C6A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  001C6E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  001C72  CFDE FFF6          	movff	postinc2,tblptrl
  3317  001C76  CFDD FFF7          	movff	postdec2,tblptrh
  3318  001C7A                     	if	0	;tblptru may be non-zero
  3319  001C7A                     	endif
  3320  001C7A                     	if	0	;tblptru may be non-zero
  3321  001C7A                     	endif
  3322  001C7A  0008               	tblrd		*
  3323  001C7C  50F5               	movf	tablat,w,c
  3324  001C7E  6E07               	movwf	tolower@c,c
  3325  001C80  6A08               	clrf	tolower@c+1,c
  3326  001C82  EC0C  F01F         	call	_tolower	;wreg free
  3327  001C86  5007               	movf	?_tolower,w,c
  3328  001C88  0100               	movlb	0	; () banked
  3329  001C8A  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3333  001C8C  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3334  001C8E  B4D8               	btfsc	status,2,c
  3335  001C90  D035               	goto	l4652
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3339  001C92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  001C96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  001C9A  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3342  001C9E  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3343  001CA2  0E01               	movlw	1
  3344  001CA4  2646               	addwf	??_vfpfcnvrt,f,c
  3345  001CA6  0E00               	movlw	0
  3346  001CA8  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3347  001CAA  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3348  001CAE  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3349  001CB2                     	if	0	;tblptru may be non-zero
  3350  001CB2                     	endif
  3351  001CB2                     	if	0	;tblptru may be non-zero
  3352  001CB2                     	endif
  3353  001CB2  0008               	tblrd		*
  3354  001CB4  50F5               	movf	tablat,w,c
  3355  001CB6  6E07               	movwf	tolower@c,c
  3356  001CB8  6A08               	clrf	tolower@c+1,c
  3357  001CBA  EC0C  F01F         	call	_tolower	;wreg free
  3358  001CBE  5007               	movf	?_tolower,w,c
  3359  001CC0  0100               	movlb	0	; () banked
  3360  001CC2  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3364  001CC4  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3365  001CC6  B4D8               	btfsc	status,2,c
  3366  001CC8  D019               	goto	l4652
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3370  001CCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3371  001CCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3372  001CD2  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3373  001CD6  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3374  001CDA  0E02               	movlw	2
  3375  001CDC  2646               	addwf	??_vfpfcnvrt,f,c
  3376  001CDE  0E00               	movlw	0
  3377  001CE0  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3378  001CE2  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3379  001CE6  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3380  001CEA                     	if	0	;tblptru may be non-zero
  3381  001CEA                     	endif
  3382  001CEA                     	if	0	;tblptru may be non-zero
  3383  001CEA                     	endif
  3384  001CEA  0008               	tblrd		*
  3385  001CEC  50F5               	movf	tablat,w,c
  3386  001CEE  6E07               	movwf	tolower@c,c
  3387  001CF0  6A08               	clrf	tolower@c+1,c
  3388  001CF2  EC0C  F01F         	call	_tolower	;wreg free
  3389  001CF6  5007               	movf	?_tolower,w,c
  3390  001CF8  0100               	movlb	0	; () banked
  3391  001CFA  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3392  001CFC                     l4652:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3396  001CFC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3397  001D00  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3398  001D04  CFDE FFF6          	movff	postinc2,tblptrl
  3399  001D08  CFDD FFF7          	movff	postdec2,tblptrh
  3400  001D0C                     	if	0	;tblptru may be non-zero
  3401  001D0C                     	endif
  3402  001D0C                     	if	0	;tblptru may be non-zero
  3403  001D0C                     	endif
  3404  001D0C  0008               	tblrd		*
  3405  001D0E  50F5               	movf	tablat,w,c
  3406  001D10  0A64               	xorlw	100
  3407  001D12  B4D8               	btfsc	status,2,c
  3408  001D14  D00D               	goto	u5620
  3409                           
  3410                           ; BSR set to: 0
  3411  001D16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3412  001D1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3413  001D1E  CFDE FFF6          	movff	postinc2,tblptrl
  3414  001D22  CFDD FFF7          	movff	postdec2,tblptrh
  3415  001D26                     	if	0	;tblptru may be non-zero
  3416  001D26                     	endif
  3417  001D26                     	if	0	;tblptru may be non-zero
  3418  001D26                     	endif
  3419  001D26  0008               	tblrd		*
  3420  001D28  50F5               	movf	tablat,w,c
  3421  001D2A  0A69               	xorlw	105
  3422  001D2C  A4D8               	btfss	status,2,c
  3423  001D2E  D03F               	goto	l4662
  3424  001D30                     u5620:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3428  001D30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3429  001D34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3430  001D38  2ADE               	incf	postinc2,f,c
  3431  001D3A  0E00               	movlw	0
  3432  001D3C  22DD               	addwfc	postdec2,f,c
  3433                           
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3435  001D3E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3436  001D42  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3437  001D46  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3438  001D4A  0E02               	movlw	2
  3439  001D4C  26DE               	addwf	postinc2,f,c
  3440  001D4E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3441  001D52  0E00               	movlw	0
  3442  001D54  22DD               	addwfc	postdec2,f,c
  3443  001D56  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3444  001D5A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3445  001D5E  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3446  001D62  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3447  001D66  0E00               	movlw	0
  3448  001D68  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3449  001D6A  0EFF               	movlw	-1
  3450  001D6C  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3451  001D6E  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3452  001D70  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3453  001D72  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3454  001D74  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3455  001D76  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3459  001D78  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3460  001D7C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3461  001D80  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3462  001D84  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3463  001D88  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3464  001D8C  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3465  001D90  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3466  001D94  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3467  001D98  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3468  001D9C  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3469  001DA0  EC3E  F014         	call	_dtoa	;wreg free
  3470  001DA4  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3471  001DA8  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3472  001DAC  0012               	return	
  3473  001DAE                     l4662:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3477  001DAE  0E66               	movlw	102
  3478  001DB0  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3479  001DB2  A4D8               	btfss	status,2,c
  3480  001DB4  D03F               	goto	l4674
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3484  001DB6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3485  001DBA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3486  001DBE  CFDE FFF6          	movff	postinc2,tblptrl
  3487  001DC2  CFDD FFF7          	movff	postdec2,tblptrh
  3488  001DC6                     	if	0	;tblptru may be non-zero
  3489  001DC6                     	endif
  3490  001DC6                     	if	0	;tblptru may be non-zero
  3491  001DC6                     	endif
  3492  001DC6  0008               	tblrd		*
  3493  001DC8  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3497  001DCC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3498  001DD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3499  001DD4  2ADE               	incf	postinc2,f,c
  3500  001DD6  0E00               	movlw	0
  3501  001DD8  22DD               	addwfc	postdec2,f,c
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3505  001DDA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3506  001DDE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3507  001DE2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3508  001DE6  0E04               	movlw	4
  3509  001DE8  26DE               	addwf	postinc2,f,c
  3510  001DEA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3511  001DEE  0E00               	movlw	0
  3512  001DF0  22DD               	addwfc	postdec2,f,c
  3513  001DF2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3514  001DF6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3515  001DFA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3516  001DFE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3517  001E02  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3518  001E06  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3519  001E0A                     l4670:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3523  001E0A  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3524  001E0E  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3525  001E12  C0A8  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3526  001E16  C0A9  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3527  001E1A  C0AA  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3528  001E1E  C0AB  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3529  001E22  C0AF  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3530  001E26  EC72  F004         	call	_efgtoa	;wreg free
  3531  001E2A  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  3532  001E2E  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3533  001E32  0012               	return	
  3534  001E34                     l4674:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3538  001E34  0EAC               	movlw	low vfpfcnvrt@ct
  3539  001E36  6E01               	movwf	strncmp@_l,c
  3540  001E38  0E00               	movlw	high vfpfcnvrt@ct
  3541  001E3A  6E02               	movwf	strncmp@_l+1,c
  3542  001E3C  0EE0               	movlw	low STR_28
  3543  001E3E  6E03               	movwf	strncmp@_r,c
  3544  001E40  0E08               	movlw	high STR_28
  3545  001E42  6E04               	movwf	strncmp@_r+1,c
  3546  001E44  0E00               	movlw	0
  3547  001E46  6E06               	movwf	strncmp@n+1,c
  3548  001E48  0E02               	movlw	2
  3549  001E4A  6E05               	movwf	strncmp@n,c
  3550  001E4C  ECF3  F01B         	call	_strncmp	;wreg free
  3551  001E50  5001               	movf	?_strncmp,w,c
  3552  001E52  1002               	iorwf	?_strncmp+1,w,c
  3553  001E54  A4D8               	btfss	status,2,c
  3554  001E56  D056               	goto	l4690
  3555                           
  3556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3557  001E58  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3558  001E5C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  001E60  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3560  001E64  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3561  001E68  0E01               	movlw	1
  3562  001E6A  2646               	addwf	??_vfpfcnvrt,f,c
  3563  001E6C  0E00               	movlw	0
  3564  001E6E  2247               	addwfc	??_vfpfcnvrt+1,f,c
  3565  001E70  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3566  001E74  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3567  001E78                     	if	0	;tblptru may be non-zero
  3568  001E78                     	endif
  3569  001E78                     	if	0	;tblptru may be non-zero
  3570  001E78                     	endif
  3571  001E78  0008               	tblrd		*
  3572  001E7A  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  3573  001E7E  0EBF               	movlw	191
  3574  001E80  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  3575  001E82  0EFF               	movlw	255
  3576  001E84  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3577  001E86  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3578  001E8A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3579  001E8E  CFDE FFF6          	movff	postinc2,tblptrl
  3580  001E92  CFDD FFF7          	movff	postdec2,tblptrh
  3581  001E96                     	if	0	;tblptru may be non-zero
  3582  001E96                     	endif
  3583  001E96                     	if	0	;tblptru may be non-zero
  3584  001E96                     	endif
  3585  001E96  0008               	tblrd		*
  3586  001E98  50F5               	movf	tablat,w,c
  3587  001E9A  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3588  001E9C  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3589  001E9E  5046               	movf	??_vfpfcnvrt,w,c
  3590  001EA0  2648               	addwf	??_vfpfcnvrt+2,f,c
  3591  001EA2  5047               	movf	??_vfpfcnvrt+1,w,c
  3592  001EA4  2249               	addwfc	??_vfpfcnvrt+3,f,c
  3593  001EA6  5049               	movf	??_vfpfcnvrt+3,w,c
  3594  001EA8  E106               	bnz	u5650
  3595  001EAA  0E1A               	movlw	26
  3596  001EAC  5C48               	subwf	??_vfpfcnvrt+2,w,c
  3597  001EAE  B0D8               	btfsc	status,0,c
  3598  001EB0  D002               	goto	u5650
  3599  001EB2  0E01               	movlw	1
  3600  001EB4  D001               	goto	u5660
  3601  001EB6                     u5650:
  3602  001EB6  0E00               	movlw	0
  3603  001EB8                     u5660:
  3604  001EB8  0100               	movlb	0	; () banked
  3605  001EBA  6FA6               	movwf	_vfpfcnvrt$506& (0+255),b
  3606  001EBC  6BA7               	clrf	(_vfpfcnvrt$506+1)& (0+255),b
  3607                           
  3608                           ; BSR set to: 0
  3609  001EBE  51A6               	movf	_vfpfcnvrt$506& (0+255),w,b
  3610  001EC0  11A7               	iorwf	(_vfpfcnvrt$506+1)& (0+255),w,b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3614                           
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3619  001EC2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3620  001EC6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3621  001ECA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3622  001ECE  0E04               	movlw	4
  3623  001ED0  26DE               	addwf	postinc2,f,c
  3624  001ED2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3625  001ED6  0E00               	movlw	0
  3626  001ED8  22DD               	addwfc	postdec2,f,c
  3627  001EDA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3628  001EDE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3629  001EE2  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3630  001EE6  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3631  001EEA  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3632  001EEE  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3636                           
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3638  001EF2  0E02               	movlw	2
  3639  001EF4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3640  001EF8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3641  001EFC  26DE               	addwf	postinc2,f,c
  3642  001EFE  0E00               	movlw	0
  3643  001F00  22DD               	addwfc	postdec2,f,c
  3644  001F02  D783               	goto	l4670
  3645  001F04                     l4690:
  3646                           
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3648  001F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  001F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  001F0C  CFDE FFF6          	movff	postinc2,tblptrl
  3651  001F10  CFDD FFF7          	movff	postdec2,tblptrh
  3652  001F14                     	if	0	;tblptru may be non-zero
  3653  001F14                     	endif
  3654  001F14                     	if	0	;tblptru may be non-zero
  3655  001F14                     	endif
  3656  001F14  0008               	tblrd		*
  3657  001F16  50F5               	movf	tablat,w,c
  3658  001F18  0A25               	xorlw	37
  3659  001F1A  A4D8               	btfss	status,2,c
  3660  001F1C  D016               	goto	l4700
  3661                           
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3663  001F1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3664  001F22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3665  001F26  2ADE               	incf	postinc2,f,c
  3666  001F28  0E00               	movlw	0
  3667  001F2A  22DD               	addwfc	postdec2,f,c
  3668                           
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3670  001F2C  0E00               	movlw	0
  3671  001F2E  6E02               	movwf	fputc@c+1,c
  3672  001F30  0E25               	movlw	37
  3673  001F32  6E01               	movwf	fputc@c,c
  3674  001F34  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3675  001F38  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3676  001F3C  EC44  F01C         	call	_fputc	;wreg free
  3677  001F40                     l4696:
  3678                           
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3680  001F40  0E00               	movlw	0
  3681  001F42  6E41               	movwf	?_vfpfcnvrt+1,c
  3682  001F44  0E01               	movlw	1
  3683  001F46  6E40               	movwf	?_vfpfcnvrt,c
  3684  001F48  0012               	return	
  3685  001F4A                     l4700:
  3686                           
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3688  001F4A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  001F4E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  001F52  2ADE               	incf	postinc2,f,c
  3691  001F54  0E00               	movlw	0
  3692  001F56  22DD               	addwfc	postdec2,f,c
  3693                           
  3694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3695  001F58  0E00               	movlw	0
  3696  001F5A  6E41               	movwf	?_vfpfcnvrt+1,c
  3697  001F5C  0E00               	movlw	0
  3698  001F5E  6E40               	movwf	?_vfpfcnvrt,c
  3699  001F60  0012               	return	
  3700  001F62                     l4706:
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3703  001F62  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3704  001F66  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3705  001F6A  CFDE FFF6          	movff	postinc2,tblptrl
  3706  001F6E  CFDD FFF7          	movff	postdec2,tblptrh
  3707  001F72                     	if	0	;tblptru may be non-zero
  3708  001F72                     	endif
  3709  001F72                     	if	0	;tblptru may be non-zero
  3710  001F72                     	endif
  3711  001F72  0008               	tblrd		*
  3712  001F74  50F5               	movf	tablat,w,c
  3713  001F76  6E01               	movwf	fputc@c,c
  3714  001F78  6A02               	clrf	fputc@c+1,c
  3715  001F7A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3716  001F7E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3717  001F82  EC44  F01C         	call	_fputc	;wreg free
  3718                           
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3720  001F86  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3721  001F8A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3722  001F8E  2ADE               	incf	postinc2,f,c
  3723  001F90  0E00               	movlw	0
  3724  001F92  22DD               	addwfc	postdec2,f,c
  3725  001F94  D7D5               	goto	l4696
  3726  001F96                     __end_of_vfpfcnvrt:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _strncmp *****************
  3730 ;; Defined at:
  3731 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3734 ;;		 -> vfpfcnvrt@ct(3), 
  3735 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3736 ;;		 -> STR_30(3), 
  3737 ;;  n               2    4[COMRAM] unsigned int 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3740 ;;		 -> STR_30(3), 
  3741 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3742 ;;		 -> vfpfcnvrt@ct(3), 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  2    0[COMRAM] int 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         6       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3755 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:       11 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_vfpfcnvrt
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text7
  3766  0037E6                     __ptext7:
  3767                           	opt callstack 0
  3768  0037E6                     _strncmp:
  3769                           	opt callstack 27
  3770                           
  3771                           ;incstack = 0
  3772  0037E6  C001  F008         	movff	strncmp@_l,strncmp@l
  3773  0037EA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3774  0037EE  C003  F00A         	movff	strncmp@_r,strncmp@r
  3775  0037F2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3776  0037F6  0605               	decf	strncmp@n,f,c
  3777  0037F8  A0D8               	btfss	status,0,c
  3778  0037FA  0606               	decf	strncmp@n+1,f,c
  3779  0037FC  2805               	incf	strncmp@n,w,c
  3780  0037FE  E10F               	bnz	l4552
  3781  003800  2806               	incf	strncmp@n+1,w,c
  3782  003802  A4D8               	btfss	status,2,c
  3783  003804  D00C               	goto	l4552
  3784  003806  0E00               	movlw	0
  3785  003808  6E02               	movwf	?_strncmp+1,c
  3786  00380A  0E00               	movlw	0
  3787  00380C  6E01               	movwf	?_strncmp,c
  3788  00380E  0012               	return	
  3789  003810                     l4550:
  3790  003810  4A08               	infsnz	strncmp@l,f,c
  3791  003812  2A09               	incf	strncmp@l+1,f,c
  3792  003814  4A0A               	infsnz	strncmp@r,f,c
  3793  003816  2A0B               	incf	strncmp@r+1,f,c
  3794  003818  0605               	decf	strncmp@n,f,c
  3795  00381A  A0D8               	btfss	status,0,c
  3796  00381C  0606               	decf	strncmp@n+1,f,c
  3797  00381E                     l4552:
  3798  00381E  C008  FFD9         	movff	strncmp@l,fsr2l
  3799  003822  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3800  003826  50DF               	movf	indf2,w,c
  3801  003828  B4D8               	btfsc	status,2,c
  3802  00382A  D01C               	goto	u5450
  3803  00382C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3804  003830  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3805  003834                     	if	0	;tblptru may be non-zero
  3806  003834                     	endif
  3807  003834                     	if	0	;tblptru may be non-zero
  3808  003834                     	endif
  3809  003834  0008               	tblrd		*
  3810  003836  50F5               	movf	tablat,w,c
  3811  003838  0900               	iorlw	0
  3812  00383A  B4D8               	btfsc	status,2,c
  3813  00383C  D013               	goto	u5450
  3814  00383E  5005               	movf	strncmp@n,w,c
  3815  003840  1006               	iorwf	strncmp@n+1,w,c
  3816  003842  B4D8               	btfsc	status,2,c
  3817  003844  D00F               	goto	u5450
  3818  003846  C008  FFD9         	movff	strncmp@l,fsr2l
  3819  00384A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3820  00384E  50DF               	movf	indf2,w,c
  3821  003850  6E07               	movwf	??_strncmp& (0+255),c
  3822  003852  C00A  FFF6         	movff	strncmp@r,tblptrl
  3823  003856  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3824  00385A                     	if	0	;tblptru may be non-zero
  3825  00385A                     	endif
  3826  00385A                     	if	0	;tblptru may be non-zero
  3827  00385A                     	endif
  3828  00385A  0008               	tblrd		*
  3829  00385C  50F5               	movf	tablat,w,c
  3830  00385E  1807               	xorwf	??_strncmp,w,c
  3831  003860  B4D8               	btfsc	status,2,c
  3832  003862  D7D6               	goto	l4550
  3833  003864                     u5450:
  3834  003864  C008  FFD9         	movff	strncmp@l,fsr2l
  3835  003868  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3836  00386C  50DF               	movf	indf2,w,c
  3837  00386E  6E07               	movwf	??_strncmp& (0+255),c
  3838  003870  C00A  FFF6         	movff	strncmp@r,tblptrl
  3839  003874  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3840  003878                     	if	0	;tblptru may be non-zero
  3841  003878                     	endif
  3842  003878                     	if	0	;tblptru may be non-zero
  3843  003878                     	endif
  3844  003878  0008               	tblrd		*
  3845  00387A  50F5               	movf	tablat,w,c
  3846  00387C  5C07               	subwf	??_strncmp,w,c
  3847  00387E  6E01               	movwf	?_strncmp,c
  3848  003880  6A02               	clrf	?_strncmp+1,c
  3849  003882  A0D8               	btfss	status,0,c
  3850  003884  0602               	decf	?_strncmp+1,f,c
  3851  003886  0012               	return		;funcret
  3852  003888                     __end_of_strncmp:
  3853                           	opt callstack 0
  3854                           
  3855 ;; *************** function _efgtoa *****************
  3856 ;; Defined at:
  3857 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3860 ;;		 -> sprintf@f(6), 
  3861 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3862 ;;  c               1   51[COMRAM] unsigned char 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  u               4   52[BANK0 ] unsigned char 
  3865 ;;  g               4   44[BANK0 ] unsigned char 
  3866 ;;  l               4   38[BANK0 ] unsigned char 
  3867 ;;  h               4   34[BANK0 ] unsigned char 
  3868 ;;  ou              4    0[BANK0 ] unsigned char 
  3869 ;;  n               2   50[BANK0 ] int 
  3870 ;;  e               2   48[BANK0 ] int 
  3871 ;;  i               2   42[BANK0 ] int 
  3872 ;;  w               2   31[BANK0 ] int 
  3873 ;;  p               2   28[BANK0 ] int 
  3874 ;;  sign            2   26[BANK0 ] int 
  3875 ;;  d               2   24[BANK0 ] int 
  3876 ;;  ne              2   22[BANK0 ] int 
  3877 ;;  m               2   20[BANK0 ] int 
  3878 ;;  pp              2   18[BANK0 ] int 
  3879 ;;  t               2   16[BANK0 ] int 
  3880 ;;  mode            1   33[BANK0 ] unsigned char 
  3881 ;;  nmode           1   30[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  2   45[COMRAM] int 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         7       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3893 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3894 ;;      Totals:        12      56       0       0       0       0       0       0       0
  3895 ;;Total ram usage:       68 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    4
  3898 ;; This function calls:
  3899 ;;		___awdiv
  3900 ;;		___awmod
  3901 ;;		___fladd
  3902 ;;		___fldiv
  3903 ;;		___fleq
  3904 ;;		___flge
  3905 ;;		___flmul
  3906 ;;		___flneg
  3907 ;;		___flsub
  3908 ;;		___fltol
  3909 ;;		___fpclassifyf
  3910 ;;		_floorf
  3911 ;;		_isupper
  3912 ;;		_pad
  3913 ;;		_strcpy
  3914 ;;		_tolower
  3915 ;; This function is called by:
  3916 ;;		_vfpfcnvrt
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text8
  3921  0008E4                     __ptext8:
  3922                           	opt callstack 0
  3923  0008E4                     _efgtoa:
  3924                           	opt callstack 23
  3925                           
  3926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3927                           
  3928                           ;incstack = 0
  3929  0008E4  0E00               	movlw	0
  3930  0008E6  0100               	movlb	0	; () banked
  3931  0008E8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3932  0008EA  0E00               	movlw	0
  3933  0008EC  6F7A               	movwf	efgtoa@sign& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3937  0008EE  C030  F08C         	movff	efgtoa@f,efgtoa@g
  3938  0008F2  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3939  0008F6  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3940  0008FA  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3944  0008FE  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  3945  000900  D016               	goto	l4214
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3949  000902  0E00               	movlw	0
  3950  000904  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3951  000906  0E01               	movlw	1
  3952  000908  6F7A               	movwf	efgtoa@sign& (0+255),b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3956  00090A  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3957  00090E  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3958  000912  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3959  000916  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3960  00091A  ECD9  F01F         	call	___flneg	;wreg free
  3961  00091E  C001  F08C         	movff	?___flneg,efgtoa@g
  3962  000922  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3963  000926  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3964  00092A  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3965  00092E                     l4214:
  3966                           
  3967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3968  00092E  0E00               	movlw	0
  3969  000930  0100               	movlb	0	; () banked
  3970  000932  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3971  000934  0E00               	movlw	0
  3972  000936  6F92               	movwf	efgtoa@n& (0+255),b
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3976  000938  C0E8  F07F         	movff	_width,efgtoa@w
  3977  00093C  C0E9  F080         	movff	_width+1,efgtoa@w+1
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3981  000940  517A               	movf	efgtoa@sign& (0+255),w,b
  3982  000942  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3983  000944  A4D8               	btfss	status,2,c
  3984  000946  D002               	goto	u4840
  3985                           
  3986                           ; BSR set to: 0
  3987  000948  A5EC               	btfss	_flags& (0+255),2,b
  3988  00094A  D013               	goto	l4234
  3989  00094C                     u4840:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3993  00094C  517A               	movf	efgtoa@sign& (0+255),w,b
  3994  00094E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3995  000950  A4D8               	btfss	status,2,c
  3996  000952  D004               	goto	l4226
  3997                           
  3998                           ; BSR set to: 0
  3999  000954  0E00               	movlw	0
  4000  000956  6F65               	movwf	(_efgtoa$475+1)& (0+255),b
  4001  000958  0E2B               	movlw	43
  4002  00095A  D003               	goto	L3
  4003  00095C                     l4226:
  4004                           
  4005                           ; BSR set to: 0
  4006  00095C  0E00               	movlw	0
  4007  00095E  6F65               	movwf	(_efgtoa$475+1)& (0+255),b
  4008  000960  0E2D               	movlw	45
  4009  000962                     L3:
  4010  000962  6F64               	movwf	_efgtoa$475& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013  000964  C064  F100         	movff	_efgtoa$475,_dbuf
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4017  000968  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4018  00096A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4022  00096C  077F               	decf	efgtoa@w& (0+255),f,b
  4023  00096E  A0D8               	btfss	status,0,c
  4024  000970  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4025  000972                     l4234:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4029  000972  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4030  000976  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4031  00097A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4032  00097E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4033  000982  EC30  F01B         	call	___fpclassifyf	;wreg free
  4034  000986  0401               	decf	?___fpclassifyf,w,c
  4035  000988  1002               	iorwf	?___fpclassifyf+1,w,c
  4036  00098A  A4D8               	btfss	status,2,c
  4037  00098C  D04C               	goto	l4252
  4038  00098E  0EBF               	movlw	191
  4039  000990  6E35               	movwf	??_efgtoa& (0+255),c
  4040  000992  0EFF               	movlw	255
  4041  000994  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4042  000996  5034               	movf	efgtoa@c,w,c
  4043  000998  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  4044  00099A  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  4045  00099C  5035               	movf	??_efgtoa,w,c
  4046  00099E  2637               	addwf	??_efgtoa+2,f,c
  4047  0009A0  5036               	movf	??_efgtoa+1,w,c
  4048  0009A2  2238               	addwfc	??_efgtoa+3,f,c
  4049  0009A4  5038               	movf	??_efgtoa+3,w,c
  4050  0009A6  E106               	bnz	u4870
  4051  0009A8  0E1A               	movlw	26
  4052  0009AA  5C37               	subwf	??_efgtoa+2,w,c
  4053  0009AC  B0D8               	btfsc	status,0,c
  4054  0009AE  D002               	goto	u4870
  4055  0009B0  0E01               	movlw	1
  4056  0009B2  D001               	goto	u4880
  4057  0009B4                     u4870:
  4058  0009B4  0E00               	movlw	0
  4059  0009B6                     u4880:
  4060  0009B6  0100               	movlb	0	; () banked
  4061  0009B8  6F66               	movwf	_efgtoa$476& (0+255),b
  4062  0009BA  6B67               	clrf	(_efgtoa$476+1)& (0+255),b
  4063                           
  4064                           ; BSR set to: 0
  4065  0009BC  5166               	movf	_efgtoa$476& (0+255),w,b
  4066  0009BE  1167               	iorwf	(_efgtoa$476+1)& (0+255),w,b
  4067  0009C0  B4D8               	btfsc	status,2,c
  4068  0009C2  D00D               	goto	l4244
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4072  0009C4  0E00               	movlw	low _dbuf
  4073  0009C6  2592               	addwf	efgtoa@n& (0+255),w,b
  4074  0009C8  6E01               	movwf	strcpy@dest,c
  4075  0009CA  0E01               	movlw	high _dbuf
  4076  0009CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4077  0009CE  6E02               	movwf	strcpy@dest+1,c
  4078  0009D0  0ED0               	movlw	low STR_20
  4079  0009D2  6E03               	movwf	strcpy@src,c
  4080  0009D4  0E08               	movlw	high STR_20
  4081  0009D6  6E04               	movwf	strcpy@src+1,c
  4082  0009D8  ECBB  F01E         	call	_strcpy	;wreg free
  4083                           
  4084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4085  0009DC  D00C               	goto	l4246
  4086  0009DE                     l4244:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4090  0009DE  0E00               	movlw	low _dbuf
  4091  0009E0  2592               	addwf	efgtoa@n& (0+255),w,b
  4092  0009E2  6E01               	movwf	strcpy@dest,c
  4093  0009E4  0E01               	movlw	high _dbuf
  4094  0009E6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4095  0009E8  6E02               	movwf	strcpy@dest+1,c
  4096  0009EA  0ED8               	movlw	low STR_21
  4097  0009EC  6E03               	movwf	strcpy@src,c
  4098  0009EE  0E08               	movlw	high STR_21
  4099  0009F0  6E04               	movwf	strcpy@src+1,c
  4100  0009F2  ECBB  F01E         	call	_strcpy	;wreg free
  4101  0009F6                     l4246:
  4102                           
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4104  0009F6  0100               	movlb	0	; () banked
  4105  0009F8  0EFD               	movlw	253
  4106  0009FA  277F               	addwf	efgtoa@w& (0+255),f,b
  4107  0009FC  0EFF               	movlw	255
  4108  0009FE  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4109  000A00                     l4248:
  4110                           
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4112  000A00  C02E  F011         	movff	efgtoa@fp,pad@fp
  4113  000A04  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4114  000A08  0E00               	movlw	low _dbuf
  4115  000A0A  6E13               	movwf	pad@buf,c
  4116  000A0C  0E01               	movlw	high _dbuf
  4117  000A0E  6E14               	movwf	pad@buf+1,c
  4118  000A10  C07F  F015         	movff	efgtoa@w,pad@p
  4119  000A14  C080  F016         	movff	efgtoa@w+1,pad@p+1
  4120  000A18  EC94  F01C         	call	_pad	;wreg free
  4121  000A1C  C011  F02E         	movff	?_pad,?_efgtoa
  4122  000A20  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4123  000A24  0012               	return	
  4124  000A26                     l4252:
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4127  000A26  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4128  000A2A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4129  000A2E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4130  000A32  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4131  000A36  EC30  F01B         	call	___fpclassifyf	;wreg free
  4132  000A3A  5001               	movf	?___fpclassifyf,w,c
  4133  000A3C  1002               	iorwf	?___fpclassifyf+1,w,c
  4134  000A3E  A4D8               	btfss	status,2,c
  4135  000A40  D035               	goto	l4270
  4136  000A42  0EBF               	movlw	191
  4137  000A44  6E35               	movwf	??_efgtoa& (0+255),c
  4138  000A46  0EFF               	movlw	255
  4139  000A48  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4140  000A4A  5034               	movf	efgtoa@c,w,c
  4141  000A4C  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  4142  000A4E  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  4143  000A50  5035               	movf	??_efgtoa,w,c
  4144  000A52  2637               	addwf	??_efgtoa+2,f,c
  4145  000A54  5036               	movf	??_efgtoa+1,w,c
  4146  000A56  2238               	addwfc	??_efgtoa+3,f,c
  4147  000A58  5038               	movf	??_efgtoa+3,w,c
  4148  000A5A  E106               	bnz	u4910
  4149  000A5C  0E1A               	movlw	26
  4150  000A5E  5C37               	subwf	??_efgtoa+2,w,c
  4151  000A60  B0D8               	btfsc	status,0,c
  4152  000A62  D002               	goto	u4910
  4153  000A64  0E01               	movlw	1
  4154  000A66  D001               	goto	u4920
  4155  000A68                     u4910:
  4156  000A68  0E00               	movlw	0
  4157  000A6A                     u4920:
  4158  000A6A  0100               	movlb	0	; () banked
  4159  000A6C  6F68               	movwf	_efgtoa$480& (0+255),b
  4160  000A6E  6B69               	clrf	(_efgtoa$480+1)& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163  000A70  5168               	movf	_efgtoa$480& (0+255),w,b
  4164  000A72  1169               	iorwf	(_efgtoa$480+1)& (0+255),w,b
  4165  000A74  B4D8               	btfsc	status,2,c
  4166  000A76  D00D               	goto	l4262
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4170  000A78  0E00               	movlw	low _dbuf
  4171  000A7A  2592               	addwf	efgtoa@n& (0+255),w,b
  4172  000A7C  6E01               	movwf	strcpy@dest,c
  4173  000A7E  0E01               	movlw	high _dbuf
  4174  000A80  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4175  000A82  6E02               	movwf	strcpy@dest+1,c
  4176  000A84  0ED4               	movlw	low STR_24
  4177  000A86  6E03               	movwf	strcpy@src,c
  4178  000A88  0E08               	movlw	high STR_24
  4179  000A8A  6E04               	movwf	strcpy@src+1,c
  4180  000A8C  ECBB  F01E         	call	_strcpy	;wreg free
  4181                           
  4182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4183  000A90  D7B2               	goto	l4246
  4184  000A92                     l4262:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4188  000A92  0E00               	movlw	low _dbuf
  4189  000A94  2592               	addwf	efgtoa@n& (0+255),w,b
  4190  000A96  6E01               	movwf	strcpy@dest,c
  4191  000A98  0E01               	movlw	high _dbuf
  4192  000A9A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4193  000A9C  6E02               	movwf	strcpy@dest+1,c
  4194  000A9E  0EDC               	movlw	low STR_25
  4195  000AA0  6E03               	movwf	strcpy@src,c
  4196  000AA2  0E08               	movlw	high STR_25
  4197  000AA4  6E04               	movwf	strcpy@src+1,c
  4198  000AA6  ECBB  F01E         	call	_strcpy	;wreg free
  4199  000AAA  D7A5               	goto	l4246
  4200  000AAC                     l4270:
  4201                           
  4202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4203  000AAC  0E00               	movlw	0
  4204  000AAE  0100               	movlb	0	; () banked
  4205  000AB0  6F94               	movwf	efgtoa@u& (0+255),b
  4206  000AB2  0E00               	movlw	0
  4207  000AB4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4208  000AB6  0E80               	movlw	128
  4209  000AB8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4210  000ABA  0E3F               	movlw	63
  4211  000ABC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4212                           
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4214  000ABE  0E00               	movlw	0
  4215  000AC0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4216  000AC2  0E00               	movlw	0
  4217  000AC4  6F90               	movwf	efgtoa@e& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4221  000AC6  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4222  000ACA  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4223  000ACE  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4224  000AD2  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4225  000AD6  0E00               	movlw	0
  4226  000AD8  6E05               	movwf	___fleq@ff2,c
  4227  000ADA  0E00               	movlw	0
  4228  000ADC  6E06               	movwf	___fleq@ff2+1,c
  4229  000ADE  0E00               	movlw	0
  4230  000AE0  6E07               	movwf	___fleq@ff2+2,c
  4231  000AE2  0E00               	movlw	0
  4232  000AE4  6E08               	movwf	___fleq@ff2+3,c
  4233  000AE6  EC26  F01D         	call	___fleq	;wreg free
  4234  000AEA  A0D8               	btfss	status,0,c
  4235  000AEC  D01E               	goto	l4280
  4236  000AEE  D076               	goto	u4960
  4237  000AF0                     l4276:
  4238                           
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4240  000AF0  C094  F001         	movff	efgtoa@u,___flmul@b
  4241  000AF4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4242  000AF8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4243  000AFC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4244  000B00  0E00               	movlw	0
  4245  000B02  6E05               	movwf	___flmul@a,c
  4246  000B04  0E00               	movlw	0
  4247  000B06  6E06               	movwf	___flmul@a+1,c
  4248  000B08  0E20               	movlw	32
  4249  000B0A  6E07               	movwf	___flmul@a+2,c
  4250  000B0C  0E41               	movlw	65
  4251  000B0E  6E08               	movwf	___flmul@a+3,c
  4252  000B10  ECCB  F00F         	call	___flmul	;wreg free
  4253  000B14  C001  F094         	movff	?___flmul,efgtoa@u
  4254  000B18  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4255  000B1C  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4256  000B20  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4257                           
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4259  000B24  0100               	movlb	0	; () banked
  4260  000B26  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4261  000B28  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4262  000B2A                     l4280:
  4263                           
  4264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4265  000B2A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4266  000B2E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4267  000B32  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4268  000B36  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4269  000B3A  0E00               	movlw	0
  4270  000B3C  6E05               	movwf	___flmul@a,c
  4271  000B3E  0E00               	movlw	0
  4272  000B40  6E06               	movwf	___flmul@a+1,c
  4273  000B42  0E20               	movlw	32
  4274  000B44  6E07               	movwf	___flmul@a+2,c
  4275  000B46  0E41               	movlw	65
  4276  000B48  6E08               	movwf	___flmul@a+3,c
  4277  000B4A  C094  F001         	movff	efgtoa@u,___flmul@b
  4278  000B4E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4279  000B52  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4280  000B56  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4281  000B5A  ECCB  F00F         	call	___flmul	;wreg free
  4282  000B5E  C001  F01E         	movff	?___flmul,___flge@ff2
  4283  000B62  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4284  000B66  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4285  000B6A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4286  000B6E  ECC8  F01A         	call	___flge	;wreg free
  4287  000B72  A0D8               	btfss	status,0,c
  4288  000B74  D01F               	goto	l4286
  4289  000B76  D7BC               	goto	l4276
  4290  000B78                     l4282:
  4291                           
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4293  000B78  C094  F001         	movff	efgtoa@u,___fldiv@b
  4294  000B7C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4295  000B80  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4296  000B84  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4297  000B88  0E00               	movlw	0
  4298  000B8A  6E05               	movwf	___fldiv@a,c
  4299  000B8C  0E00               	movlw	0
  4300  000B8E  6E06               	movwf	___fldiv@a+1,c
  4301  000B90  0E20               	movlw	32
  4302  000B92  6E07               	movwf	___fldiv@a+2,c
  4303  000B94  0E41               	movlw	65
  4304  000B96  6E08               	movwf	___fldiv@a+3,c
  4305  000B98  ECFA  F012         	call	___fldiv	;wreg free
  4306  000B9C  C001  F094         	movff	?___fldiv,efgtoa@u
  4307  000BA0  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4308  000BA4  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4309  000BA8  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4310                           
  4311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4312  000BAC  0100               	movlb	0	; () banked
  4313  000BAE  0790               	decf	efgtoa@e& (0+255),f,b
  4314  000BB0  A0D8               	btfss	status,0,c
  4315  000BB2  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4316  000BB4                     l4286:
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4319  000BB4  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4320  000BB8  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4321  000BBC  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4322  000BC0  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4323  000BC4  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4324  000BC8  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4325  000BCC  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4326  000BD0  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4327  000BD4  ECC8  F01A         	call	___flge	;wreg free
  4328  000BD8  A0D8               	btfss	status,0,c
  4329  000BDA  D7CE               	goto	l4282
  4330  000BDC                     u4960:
  4331                           
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4333  000BDC  C034  F007         	movff	efgtoa@c,tolower@c
  4334  000BE0  6A08               	clrf	tolower@c+1,c
  4335  000BE2  EC0C  F01F         	call	_tolower	;wreg free
  4336  000BE6  5007               	movf	?_tolower,w,c
  4337  000BE8  0100               	movlb	0	; () banked
  4338  000BEA  6F81               	movwf	efgtoa@mode& (0+255),b
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4342  000BEC  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4346  000BF0  0E67               	movlw	103
  4347  000BF2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4348  000BF4  A4D8               	btfss	status,2,c
  4349  000BF6  D019               	goto	l4302
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4353  000BF8  51EA               	movf	_prec& (0+255),w,b
  4354  000BFA  11EB               	iorwf	(_prec+1)& (0+255),w,b
  4355  000BFC  A4D8               	btfss	status,2,c
  4356  000BFE  D004               	goto	l4298
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4360  000C00  0E00               	movlw	0
  4361  000C02  6FEB               	movwf	(_prec+1)& (0+255),b
  4362  000C04  0E01               	movlw	1
  4363  000C06  6FEA               	movwf	_prec& (0+255),b
  4364  000C08                     l4298:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4368  000C08  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  4369  000C0A  D005               	goto	u4990
  4370  000C0C  51EB               	movf	(_prec+1)& (0+255),w,b
  4371  000C0E  E108               	bnz	l267
  4372  000C10  05EA               	decf	_prec& (0+255),w,b
  4373  000C12  B0D8               	btfsc	status,0,c
  4374  000C14  D005               	goto	l267
  4375  000C16                     u4990:
  4376                           
  4377                           ; BSR set to: 0
  4378  000C16  0E00               	movlw	0
  4379  000C18  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4380  000C1A  0E06               	movlw	6
  4381  000C1C  6F7C               	movwf	efgtoa@p& (0+255),b
  4382  000C1E  D008               	goto	l4308
  4383  000C20                     l267:
  4384                           
  4385                           ; BSR set to: 0
  4386  000C20  C0EA  F07C         	movff	_prec,efgtoa@p
  4387  000C24  C0EB  F07D         	movff	_prec+1,efgtoa@p+1
  4388  000C28  D003               	goto	l4308
  4389  000C2A                     l4302:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4393  000C2A  AFEB               	btfss	(_prec+1)& (0+255),7,b
  4394  000C2C  D7F9               	goto	l267
  4395  000C2E  D7F3               	goto	u4990
  4396  000C30                     l4308:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4400  000C30  0E67               	movlw	103
  4401  000C32  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4402  000C34  A4D8               	btfss	status,2,c
  4403  000C36  D022               	goto	l4318
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4407  000C38  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4408  000C3A  D006               	goto	u5020
  4409  000C3C  0EFC               	movlw	252
  4410  000C3E  5D90               	subwf	efgtoa@e& (0+255),w,b
  4411  000C40  0EFF               	movlw	255
  4412  000C42  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4413  000C44  A0D8               	btfss	status,0,c
  4414  000C46  D018               	goto	l4316
  4415  000C48                     u5020:
  4416                           
  4417                           ; BSR set to: 0
  4418  000C48  0EFF               	movlw	255
  4419  000C4A  6E35               	movwf	??_efgtoa& (0+255),c
  4420  000C4C  0EFF               	movlw	255
  4421  000C4E  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  4422  000C50  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  4423  000C54  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4424  000C58  5035               	movf	??_efgtoa,w,c
  4425  000C5A  2637               	addwf	??_efgtoa+2,f,c
  4426  000C5C  5036               	movf	??_efgtoa+1,w,c
  4427  000C5E  2238               	addwfc	??_efgtoa+3,f,c
  4428  000C60  5190               	movf	efgtoa@e& (0+255),w,b
  4429  000C62  5C37               	subwf	??_efgtoa+2,w,c
  4430  000C64  5038               	movf	??_efgtoa+3,w,c
  4431  000C66  0A80               	xorlw	128
  4432  000C68  6E39               	movwf	(??_efgtoa+4)& (0+255),c
  4433  000C6A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4434  000C6C  0A80               	xorlw	128
  4435  000C6E  5839               	subwfb	(??_efgtoa+4)& (0+255),w,c
  4436  000C70  A0D8               	btfss	status,0,c
  4437  000C72  D002               	goto	l4316
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4441  000C74  0E66               	movlw	102
  4442  000C76  D001               	goto	L4
  4443  000C78                     l4316:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4447  000C78  0E65               	movlw	101
  4448  000C7A                     L4:
  4449  000C7A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  4450  000C7C                     l4318:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4454  000C7C  C07C  F074         	movff	efgtoa@p,efgtoa@m
  4455  000C80  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4459  000C84  0E67               	movlw	103
  4460  000C86  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4461  000C88  A4D8               	btfss	status,2,c
  4462  000C8A  D005               	goto	u5060
  4463                           
  4464                           ; BSR set to: 0
  4465  000C8C  0E66               	movlw	102
  4466  000C8E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4467  000C90  B4D8               	btfsc	status,2,c
  4468                           
  4469                           ; BSR set to: 0
  4470  000C92  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4471  000C94  D002               	goto	l4328
  4472  000C96                     u5060:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4476  000C96  4B74               	infsnz	efgtoa@m& (0+255),f,b
  4477  000C98  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  4478  000C9A                     l4328:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4482  000C9A  0E66               	movlw	102
  4483  000C9C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4484  000C9E  A4D8               	btfss	status,2,c
  4485  000CA0  D016               	goto	l4338
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4489  000CA2  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4490  000CA4  D00C               	goto	l4334
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4494  000CA6  0E00               	movlw	0
  4495  000CA8  6F94               	movwf	efgtoa@u& (0+255),b
  4496  000CAA  0E00               	movlw	0
  4497  000CAC  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4498  000CAE  0E80               	movlw	128
  4499  000CB0  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4500  000CB2  0E3F               	movlw	63
  4501  000CB4  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4502                           
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4504  000CB6  0E00               	movlw	0
  4505  000CB8  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4506  000CBA  0E00               	movlw	0
  4507  000CBC  6F90               	movwf	efgtoa@e& (0+255),b
  4508  000CBE                     l4334:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4512  000CBE  0E67               	movlw	103
  4513  000CC0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4514  000CC2  B4D8               	btfsc	status,2,c
  4515  000CC4  D004               	goto	l4338
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4519  000CC6  5190               	movf	efgtoa@e& (0+255),w,b
  4520  000CC8  2774               	addwf	efgtoa@m& (0+255),f,b
  4521  000CCA  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4522  000CCC  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4523  000CCE                     l4338:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4527  000CCE  0E00               	movlw	0
  4528  000CD0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4529  000CD2  0E00               	movlw	0
  4530  000CD4  6F8A               	movwf	efgtoa@i& (0+255),b
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4534  000CD6  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4535  000CDA  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4536  000CDE  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4537  000CE2  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4541  000CE6  C094  F060         	movff	efgtoa@u,efgtoa@ou
  4542  000CEA  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  4543  000CEE  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  4544  000CF2  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  4545                           
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4547  000CF6  D07B               	goto	l4352
  4548  000CF8                     l4344:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4552  000CF8  C082  F001         	movff	efgtoa@h,___fldiv@b
  4553  000CFC  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4554  000D00  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4555  000D04  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4556  000D08  C094  F005         	movff	efgtoa@u,___fldiv@a
  4557  000D0C  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4558  000D10  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4559  000D14  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4560  000D18  ECFA  F012         	call	___fldiv	;wreg free
  4561  000D1C  C001  F01A         	movff	?___fldiv,floorf@x
  4562  000D20  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4563  000D24  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4564  000D28  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4565  000D2C  EC62  F015         	call	_floorf	;wreg free
  4566  000D30  C01A  F086         	movff	?_floorf,efgtoa@l
  4567  000D34  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4568  000D38  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4569  000D3C  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4570                           
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4572  000D40  C086  F001         	movff	efgtoa@l,___fltol@f1
  4573  000D44  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4574  000D48  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4575  000D4C  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4576  000D50  EC96  F01B         	call	___fltol	;wreg free
  4577  000D54  C001  F078         	movff	?___fltol,efgtoa@d
  4578  000D58  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4579                           
  4580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4581  000D5C  C082  F01A         	movff	efgtoa@h,___flsub@b
  4582  000D60  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4583  000D64  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4584  000D68  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4585  000D6C  C094  F005         	movff	efgtoa@u,___flmul@a
  4586  000D70  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4587  000D74  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4588  000D78  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4589  000D7C  C086  F001         	movff	efgtoa@l,___flmul@b
  4590  000D80  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4591  000D84  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4592  000D88  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4593  000D8C  ECCB  F00F         	call	___flmul	;wreg free
  4594  000D90  C001  F01E         	movff	?___flmul,___flsub@a
  4595  000D94  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4596  000D98  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4597  000D9C  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4598  000DA0  EC32  F01F         	call	___flsub	;wreg free
  4599  000DA4  C01A  F082         	movff	?___flsub,efgtoa@h
  4600  000DA8  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4601  000DAC  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4602  000DB0  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4603                           
  4604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4605  000DB4  C094  F001         	movff	efgtoa@u,___fldiv@b
  4606  000DB8  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4607  000DBC  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4608  000DC0  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4609  000DC4  0E00               	movlw	0
  4610  000DC6  6E05               	movwf	___fldiv@a,c
  4611  000DC8  0E00               	movlw	0
  4612  000DCA  6E06               	movwf	___fldiv@a+1,c
  4613  000DCC  0E20               	movlw	32
  4614  000DCE  6E07               	movwf	___fldiv@a+2,c
  4615  000DD0  0E41               	movlw	65
  4616  000DD2  6E08               	movwf	___fldiv@a+3,c
  4617  000DD4  ECFA  F012         	call	___fldiv	;wreg free
  4618  000DD8  C001  F094         	movff	?___fldiv,efgtoa@u
  4619  000DDC  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4620  000DE0  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4621  000DE4  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4624  000DE8  0100               	movlb	0	; () banked
  4625  000DEA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4626  000DEC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4627  000DEE                     l4352:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4631  000DEE  5174               	movf	efgtoa@m& (0+255),w,b
  4632  000DF0  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4633  000DF2  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4634  000DF4  0A80               	xorlw	128
  4635  000DF6  6E35               	movwf	??_efgtoa& (0+255),c
  4636  000DF8  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4637  000DFA  0A80               	xorlw	128
  4638  000DFC  5835               	subwfb	??_efgtoa& (0+255),w,c
  4639  000DFE  A0D8               	btfss	status,0,c
  4640  000E00  D77B               	goto	l4344
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4644  000E02  C094  F001         	movff	efgtoa@u,___flmul@b
  4645  000E06  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4646  000E0A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4647  000E0E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4648  000E12  0E00               	movlw	0
  4649  000E14  6E05               	movwf	___flmul@a,c
  4650  000E16  0E00               	movlw	0
  4651  000E18  6E06               	movwf	___flmul@a+1,c
  4652  000E1A  0EA0               	movlw	160
  4653  000E1C  6E07               	movwf	___flmul@a+2,c
  4654  000E1E  0E40               	movlw	64
  4655  000E20  6E08               	movwf	___flmul@a+3,c
  4656  000E22  ECCB  F00F         	call	___flmul	;wreg free
  4657  000E26  C001  F086         	movff	?___flmul,efgtoa@l
  4658  000E2A  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4659  000E2E  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4660  000E32  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4661                           
  4662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4663  000E36  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4664  000E3A  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4665  000E3E  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4666  000E42  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4667  000E46  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4668  000E4A  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4669  000E4E  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4670  000E52  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4671  000E56  ECC8  F01A         	call	___flge	;wreg free
  4672  000E5A  B0D8               	btfsc	status,0,c
  4673  000E5C  D003               	goto	l4360
  4674                           
  4675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4676  000E5E  0E00               	movlw	0
  4677  000E60  0100               	movlb	0	; () banked
  4678  000E62  D018               	goto	L5
  4679  000E64                     l4360:
  4680                           
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4682  000E64  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4683  000E68  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4684  000E6C  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4685  000E70  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4686  000E74  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4687  000E78  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4688  000E7C  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4689  000E80  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4690  000E84  EC26  F01D         	call	___fleq	;wreg free
  4691  000E88  A0D8               	btfss	status,0,c
  4692  000E8A  D00B               	goto	l4366
  4693  000E8C  0100               	movlb	0	; () banked
  4694  000E8E  B178               	btfsc	efgtoa@d& (0+255),0,b
  4695  000E90  D008               	goto	l4366
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4699  000E92  0E00               	movlw	0
  4700  000E94                     L5:
  4701  000E94  6F86               	movwf	efgtoa@l& (0+255),b
  4702  000E96  0E00               	movlw	0
  4703  000E98  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4704  000E9A  0E00               	movlw	0
  4705  000E9C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4706  000E9E  0E00               	movlw	0
  4707  000EA0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4708  000EA2                     l4366:
  4709                           
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4711  000EA2  C08C  F001         	movff	efgtoa@g,___fladd@b
  4712  000EA6  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4713  000EAA  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4714  000EAE  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4715  000EB2  C086  F005         	movff	efgtoa@l,___fladd@a
  4716  000EB6  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4717  000EBA  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4718  000EBE  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4719  000EC2  EC74  F011         	call	___fladd	;wreg free
  4720  000EC6  C001  F082         	movff	?___fladd,efgtoa@h
  4721  000ECA  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4722  000ECE  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4723  000ED2  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4724                           
  4725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4726  000ED6  C060  F094         	movff	efgtoa@ou,efgtoa@u
  4727  000EDA  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4728  000EDE  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4729  000EE2  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4730                           
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4732  000EE6  0E65               	movlw	101
  4733  000EE8  0100               	movlb	0	; () banked
  4734  000EEA  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4735  000EEC  B4D8               	btfsc	status,2,c
  4736  000EEE  D005               	goto	l4374
  4737                           
  4738                           ; BSR set to: 0
  4739  000EF0  C090  F076         	movff	efgtoa@e,efgtoa@ne
  4740  000EF4  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  4741  000EF8  D004               	goto	l293
  4742  000EFA                     l4374:
  4743                           
  4744                           ; BSR set to: 0
  4745  000EFA  0E00               	movlw	0
  4746  000EFC  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4747  000EFE  0E00               	movlw	0
  4748  000F00  6F76               	movwf	efgtoa@ne& (0+255),b
  4749  000F02                     l293:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4753  000F02  0E00               	movlw	0
  4754  000F04  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4755  000F06  0E00               	movlw	0
  4756  000F08  6F72               	movwf	efgtoa@pp& (0+255),b
  4757                           
  4758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4759  000F0A  0E00               	movlw	0
  4760  000F0C  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4761  000F0E  0E00               	movlw	0
  4762  000F10  6F70               	movwf	efgtoa@t& (0+255),b
  4763                           
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4765  000F12  0E00               	movlw	0
  4766  000F14  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4767  000F16  0E00               	movlw	0
  4768  000F18  6F8A               	movwf	efgtoa@i& (0+255),b
  4769                           
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4771  000F1A  D0C6               	goto	l4424
  4772  000F1C                     l4376:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4776  000F1C  C082  F001         	movff	efgtoa@h,___fldiv@b
  4777  000F20  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4778  000F24  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4779  000F28  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4780  000F2C  C094  F005         	movff	efgtoa@u,___fldiv@a
  4781  000F30  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4782  000F34  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4783  000F38  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4784  000F3C  ECFA  F012         	call	___fldiv	;wreg free
  4785  000F40  C001  F01A         	movff	?___fldiv,floorf@x
  4786  000F44  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4787  000F48  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4788  000F4C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4789  000F50  EC62  F015         	call	_floorf	;wreg free
  4790  000F54  C01A  F086         	movff	?_floorf,efgtoa@l
  4791  000F58  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4792  000F5C  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4793  000F60  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4794                           
  4795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4796  000F64  C086  F001         	movff	efgtoa@l,___fltol@f1
  4797  000F68  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4798  000F6C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4799  000F70  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4800  000F74  EC96  F01B         	call	___fltol	;wreg free
  4801  000F78  C001  F078         	movff	?___fltol,efgtoa@d
  4802  000F7C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4803                           
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4805  000F80  0100               	movlb	0	; () banked
  4806  000F82  B9EC               	btfsc	_flags& (0+255),4,b
  4807  000F84  D00C               	goto	l4388
  4808                           
  4809                           ; BSR set to: 0
  4810  000F86  5178               	movf	efgtoa@d& (0+255),w,b
  4811  000F88  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4812  000F8A  A4D8               	btfss	status,2,c
  4813  000F8C  D008               	goto	l4388
  4814                           
  4815                           ; BSR set to: 0
  4816  000F8E  0E67               	movlw	103
  4817  000F90  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4818  000F92  B4D8               	btfsc	status,2,c
  4819                           
  4820                           ; BSR set to: 0
  4821  000F94  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4822  000F96  D003               	goto	l4388
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4826  000F98  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4827  000F9A  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4828                           
  4829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4830  000F9C  D039               	goto	l4416
  4831  000F9E                     l4388:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4835  000F9E  5172               	movf	efgtoa@pp& (0+255),w,b
  4836  000FA0  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4837  000FA2  B4D8               	btfsc	status,2,c
  4838                           
  4839                           ; BSR set to: 0
  4840  000FA4  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4841  000FA6  D022               	goto	l4408
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4845  000FA8  0E00               	movlw	low _dbuf
  4846  000FAA  2592               	addwf	efgtoa@n& (0+255),w,b
  4847  000FAC  6ED9               	movwf	fsr2l,c
  4848  000FAE  0E01               	movlw	high _dbuf
  4849  000FB0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4850  000FB2  6EDA               	movwf	fsr2h,c
  4851  000FB4  0E2E               	movlw	46
  4852  000FB6  6EDF               	movwf	indf2,c
  4853                           
  4854                           ; BSR set to: 0
  4855  000FB8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4856  000FBA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4860  000FBC  077F               	decf	efgtoa@w& (0+255),f,b
  4861  000FBE  A0D8               	btfss	status,0,c
  4862  000FC0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4866  000FC2  0E00               	movlw	0
  4867  000FC4  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4868  000FC6  0E01               	movlw	1
  4869  000FC8  6F72               	movwf	efgtoa@pp& (0+255),b
  4870  000FCA  D010               	goto	l4408
  4871  000FCC                     l4400:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4875  000FCC  0E00               	movlw	low _dbuf
  4876  000FCE  2592               	addwf	efgtoa@n& (0+255),w,b
  4877  000FD0  6ED9               	movwf	fsr2l,c
  4878  000FD2  0E01               	movlw	high _dbuf
  4879  000FD4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4880  000FD6  6EDA               	movwf	fsr2h,c
  4881  000FD8  0E30               	movlw	48
  4882  000FDA  6EDF               	movwf	indf2,c
  4883                           
  4884                           ; BSR set to: 0
  4885  000FDC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4886  000FDE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4890  000FE0  077F               	decf	efgtoa@w& (0+255),f,b
  4891  000FE2  A0D8               	btfss	status,0,c
  4892  000FE4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4896  000FE6  0770               	decf	efgtoa@t& (0+255),f,b
  4897  000FE8  A0D8               	btfss	status,0,c
  4898  000FEA  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4899  000FEC                     l4408:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4903  000FEC  5170               	movf	efgtoa@t& (0+255),w,b
  4904  000FEE  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4905  000FF0  A4D8               	btfss	status,2,c
  4906  000FF2  D7EC               	goto	l4400
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4910  000FF4  0E00               	movlw	low _dbuf
  4911  000FF6  2592               	addwf	efgtoa@n& (0+255),w,b
  4912  000FF8  6ED9               	movwf	fsr2l,c
  4913  000FFA  0E01               	movlw	high _dbuf
  4914  000FFC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4915  000FFE  6EDA               	movwf	fsr2h,c
  4916  001000  5178               	movf	efgtoa@d& (0+255),w,b
  4917  001002  0F30               	addlw	48
  4918  001004  6EDF               	movwf	indf2,c
  4919                           
  4920                           ; BSR set to: 0
  4921  001006  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4922  001008  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4926  00100A  077F               	decf	efgtoa@w& (0+255),f,b
  4927  00100C  A0D8               	btfss	status,0,c
  4928  00100E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4929  001010                     l4416:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4933  001010  C082  F01A         	movff	efgtoa@h,___flsub@b
  4934  001014  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4935  001018  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4936  00101C  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4937  001020  C094  F005         	movff	efgtoa@u,___flmul@a
  4938  001024  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4939  001028  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4940  00102C  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4941  001030  C086  F001         	movff	efgtoa@l,___flmul@b
  4942  001034  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4943  001038  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4944  00103C  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4945  001040  ECCB  F00F         	call	___flmul	;wreg free
  4946  001044  C001  F01E         	movff	?___flmul,___flsub@a
  4947  001048  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4948  00104C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4949  001050  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4950  001054  EC32  F01F         	call	___flsub	;wreg free
  4951  001058  C01A  F082         	movff	?___flsub,efgtoa@h
  4952  00105C  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4953  001060  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4954  001064  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4955                           
  4956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4957  001068  C094  F001         	movff	efgtoa@u,___fldiv@b
  4958  00106C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4959  001070  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4960  001074  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4961  001078  0E00               	movlw	0
  4962  00107A  6E05               	movwf	___fldiv@a,c
  4963  00107C  0E00               	movlw	0
  4964  00107E  6E06               	movwf	___fldiv@a+1,c
  4965  001080  0E20               	movlw	32
  4966  001082  6E07               	movwf	___fldiv@a+2,c
  4967  001084  0E41               	movlw	65
  4968  001086  6E08               	movwf	___fldiv@a+3,c
  4969  001088  ECFA  F012         	call	___fldiv	;wreg free
  4970  00108C  C001  F094         	movff	?___fldiv,efgtoa@u
  4971  001090  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4972  001094  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4973  001098  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4974                           
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4976  00109C  0100               	movlb	0	; () banked
  4977  00109E  0776               	decf	efgtoa@ne& (0+255),f,b
  4978  0010A0  A0D8               	btfss	status,0,c
  4979  0010A2  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4983  0010A4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4984  0010A6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4985  0010A8                     l4424:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4989  0010A8  5174               	movf	efgtoa@m& (0+255),w,b
  4990  0010AA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4991  0010AC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4992  0010AE  0A80               	xorlw	128
  4993  0010B0  6E35               	movwf	??_efgtoa& (0+255),c
  4994  0010B2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4995  0010B4  0A80               	xorlw	128
  4996  0010B6  5835               	subwfb	??_efgtoa& (0+255),w,c
  4997  0010B8  B0D8               	btfsc	status,0,c
  4998  0010BA  D008               	goto	u5230
  4999                           
  5000                           ; BSR set to: 0
  5001  0010BC  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5002  0010BE  D72E               	goto	l4376
  5003  0010C0  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5004  0010C2  E104               	bnz	u5230
  5005  0010C4  0E4B               	movlw	75
  5006  0010C6  5D92               	subwf	efgtoa@n& (0+255),w,b
  5007  0010C8  A0D8               	btfss	status,0,c
  5008  0010CA  D728               	goto	l4376
  5009  0010CC                     u5230:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5013  0010CC  5172               	movf	efgtoa@pp& (0+255),w,b
  5014  0010CE  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5015  0010D0  B4D8               	btfsc	status,2,c
  5016                           
  5017                           ; BSR set to: 0
  5018  0010D2  A9EC               	btfss	_flags& (0+255),4,b
  5019  0010D4  D00A               	goto	l4436
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5023  0010D6  0E00               	movlw	low _dbuf
  5024  0010D8  2592               	addwf	efgtoa@n& (0+255),w,b
  5025  0010DA  6ED9               	movwf	fsr2l,c
  5026  0010DC  0E01               	movlw	high _dbuf
  5027  0010DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5028  0010E0  6EDA               	movwf	fsr2h,c
  5029  0010E2  0E2E               	movlw	46
  5030  0010E4  6EDF               	movwf	indf2,c
  5031                           
  5032                           ; BSR set to: 0
  5033  0010E6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5034  0010E8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5035  0010EA                     l4436:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5039  0010EA  0E00               	movlw	low _dbuf
  5040  0010EC  2592               	addwf	efgtoa@n& (0+255),w,b
  5041  0010EE  6ED9               	movwf	fsr2l,c
  5042  0010F0  0E01               	movlw	high _dbuf
  5043  0010F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5044  0010F4  6EDA               	movwf	fsr2h,c
  5045  0010F6  0E00               	movlw	0
  5046  0010F8  6EDF               	movwf	indf2,c
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5050  0010FA  0E65               	movlw	101
  5051  0010FC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5052  0010FE  A4D8               	btfss	status,2,c
  5053  001100  D47F               	goto	l4248
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5057  001102  0E00               	movlw	0
  5058  001104  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5059  001106  0E4F               	movlw	79
  5060  001108  6F8A               	movwf	efgtoa@i& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5064  00110A  0E00               	movlw	low _dbuf
  5065  00110C  258A               	addwf	efgtoa@i& (0+255),w,b
  5066  00110E  6ED9               	movwf	fsr2l,c
  5067  001110  0E01               	movlw	high _dbuf
  5068  001112  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5069  001114  6EDA               	movwf	fsr2h,c
  5070  001116  0E00               	movlw	0
  5071  001118  6EDF               	movwf	indf2,c
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5075  00111A  0E00               	movlw	0
  5076  00111C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5077  00111E  0E00               	movlw	0
  5078  001120  6F7A               	movwf	efgtoa@sign& (0+255),b
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5082  001122  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5083  001124  D008               	goto	l4452
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5087  001126  0E00               	movlw	0
  5088  001128  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5089  00112A  0E01               	movlw	1
  5090  00112C  6F7A               	movwf	efgtoa@sign& (0+255),b
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5094  00112E  6D90               	negf	efgtoa@e& (0+255),b
  5095  001130  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5096  001132  B0D8               	btfsc	status,0,c
  5097  001134  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5098  001136                     l4452:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5102  001136  0E00               	movlw	0
  5103  001138  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5104  00113A  0E02               	movlw	2
  5105  00113C  6F7C               	movwf	efgtoa@p& (0+255),b
  5106                           
  5107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5108  00113E  D02B               	goto	l4464
  5109  001140                     l4454:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5113  001140  078A               	decf	efgtoa@i& (0+255),f,b
  5114  001142  A0D8               	btfss	status,0,c
  5115  001144  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5119  001146  0E00               	movlw	low _dbuf
  5120  001148  258A               	addwf	efgtoa@i& (0+255),w,b
  5121  00114A  6ED9               	movwf	fsr2l,c
  5122  00114C  0E01               	movlw	high _dbuf
  5123  00114E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5124  001150  6EDA               	movwf	fsr2h,c
  5125  001152  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5126  001156  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5127  00115A  0E00               	movlw	0
  5128  00115C  6E04               	movwf	___awmod@divisor+1,c
  5129  00115E  0E0A               	movlw	10
  5130  001160  6E03               	movwf	___awmod@divisor,c
  5131  001162  ECE8  F01D         	call	___awmod	;wreg free
  5132  001166  5001               	movf	?___awmod,w,c
  5133  001168  0F30               	addlw	48
  5134  00116A  6EDF               	movwf	indf2,c
  5135                           
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5137  00116C  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  5138  001170  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5139  001174  0E00               	movlw	0
  5140  001176  6E04               	movwf	___awdiv@divisor+1,c
  5141  001178  0E0A               	movlw	10
  5142  00117A  6E03               	movwf	___awdiv@divisor,c
  5143  00117C  EC6B  F01D         	call	___awdiv	;wreg free
  5144  001180  C001  F090         	movff	?___awdiv,efgtoa@e
  5145  001184  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  5146                           
  5147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5148  001188  0100               	movlb	0	; () banked
  5149  00118A  077C               	decf	efgtoa@p& (0+255),f,b
  5150  00118C  A0D8               	btfss	status,0,c
  5151  00118E  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5155  001190  077F               	decf	efgtoa@w& (0+255),f,b
  5156  001192  A0D8               	btfss	status,0,c
  5157  001194  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5158  001196                     l4464:
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5162  001196  5190               	movf	efgtoa@e& (0+255),w,b
  5163  001198  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5164  00119A  A4D8               	btfss	status,2,c
  5165  00119C  D7D1               	goto	l4454
  5166                           
  5167                           ; BSR set to: 0
  5168  00119E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5169  0011A0  D005               	goto	u5290
  5170  0011A2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5171  0011A4  E1CD               	bnz	l4454
  5172  0011A6  057C               	decf	efgtoa@p& (0+255),w,b
  5173  0011A8  B0D8               	btfsc	status,0,c
  5174  0011AA  D7CA               	goto	l4454
  5175  0011AC                     u5290:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5179  0011AC  078A               	decf	efgtoa@i& (0+255),f,b
  5180  0011AE  A0D8               	btfss	status,0,c
  5181  0011B0  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5185  0011B2  517A               	movf	efgtoa@sign& (0+255),w,b
  5186  0011B4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5187  0011B6  A4D8               	btfss	status,2,c
  5188  0011B8  D004               	goto	l4474
  5189                           
  5190                           ; BSR set to: 0
  5191  0011BA  0E00               	movlw	0
  5192  0011BC  6F6B               	movwf	(_efgtoa$484+1)& (0+255),b
  5193  0011BE  0E2B               	movlw	43
  5194  0011C0  D003               	goto	L6
  5195  0011C2                     l4474:
  5196                           
  5197                           ; BSR set to: 0
  5198  0011C2  0E00               	movlw	0
  5199  0011C4  6F6B               	movwf	(_efgtoa$484+1)& (0+255),b
  5200  0011C6  0E2D               	movlw	45
  5201  0011C8                     L6:
  5202  0011C8  6F6A               	movwf	_efgtoa$484& (0+255),b
  5203                           
  5204                           ; BSR set to: 0
  5205  0011CA  0E00               	movlw	low _dbuf
  5206  0011CC  258A               	addwf	efgtoa@i& (0+255),w,b
  5207  0011CE  6ED9               	movwf	fsr2l,c
  5208  0011D0  0E01               	movlw	high _dbuf
  5209  0011D2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5210  0011D4  6EDA               	movwf	fsr2h,c
  5211  0011D6  C06A  FFDF         	movff	_efgtoa$484,indf2
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5215  0011DA  077F               	decf	efgtoa@w& (0+255),f,b
  5216  0011DC  A0D8               	btfss	status,0,c
  5217  0011DE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5221  0011E0  078A               	decf	efgtoa@i& (0+255),f,b
  5222  0011E2  A0D8               	btfss	status,0,c
  5223  0011E4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5224                           
  5225                           ; BSR set to: 0
  5226  0011E6  0EBF               	movlw	191
  5227  0011E8  6E35               	movwf	??_efgtoa& (0+255),c
  5228  0011EA  0EFF               	movlw	255
  5229  0011EC  6E36               	movwf	(??_efgtoa+1)& (0+255),c
  5230  0011EE  5034               	movf	efgtoa@c,w,c
  5231  0011F0  6E37               	movwf	(??_efgtoa+2)& (0+255),c
  5232  0011F2  6A38               	clrf	(??_efgtoa+3)& (0+255),c
  5233  0011F4  5035               	movf	??_efgtoa,w,c
  5234  0011F6  2637               	addwf	??_efgtoa+2,f,c
  5235  0011F8  5036               	movf	??_efgtoa+1,w,c
  5236  0011FA  2238               	addwfc	??_efgtoa+3,f,c
  5237  0011FC  5038               	movf	??_efgtoa+3,w,c
  5238  0011FE  E106               	bnz	u5310
  5239  001200  0E1A               	movlw	26
  5240  001202  5C37               	subwf	??_efgtoa+2,w,c
  5241  001204  B0D8               	btfsc	status,0,c
  5242  001206  D002               	goto	u5310
  5243  001208  0E01               	movlw	1
  5244  00120A  D001               	goto	u5320
  5245  00120C                     u5310:
  5246  00120C  0E00               	movlw	0
  5247  00120E                     u5320:
  5248  00120E  6F6E               	movwf	_efgtoa$486& (0+255),b
  5249  001210  6B6F               	clrf	(_efgtoa$486+1)& (0+255),b
  5250                           
  5251                           ; BSR set to: 0
  5252  001212  516E               	movf	_efgtoa$486& (0+255),w,b
  5253  001214  116F               	iorwf	(_efgtoa$486+1)& (0+255),w,b
  5254  001216  A4D8               	btfss	status,2,c
  5255  001218  D004               	goto	l4490
  5256                           
  5257                           ; BSR set to: 0
  5258  00121A  0E00               	movlw	0
  5259  00121C  6F6D               	movwf	(_efgtoa$485+1)& (0+255),b
  5260  00121E  0E65               	movlw	101
  5261  001220  D003               	goto	L7
  5262  001222                     l4490:
  5263                           
  5264                           ; BSR set to: 0
  5265  001222  0E00               	movlw	0
  5266  001224  6F6D               	movwf	(_efgtoa$485+1)& (0+255),b
  5267  001226  0E45               	movlw	69
  5268  001228                     L7:
  5269  001228  6F6C               	movwf	_efgtoa$485& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272  00122A  0E00               	movlw	low _dbuf
  5273  00122C  258A               	addwf	efgtoa@i& (0+255),w,b
  5274  00122E  6ED9               	movwf	fsr2l,c
  5275  001230  0E01               	movlw	high _dbuf
  5276  001232  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5277  001234  6EDA               	movwf	fsr2h,c
  5278  001236  C06C  FFDF         	movff	_efgtoa$485,indf2
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5282  00123A  077F               	decf	efgtoa@w& (0+255),f,b
  5283  00123C  A0D8               	btfss	status,0,c
  5284  00123E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5288  001240  0E00               	movlw	low _dbuf
  5289  001242  2592               	addwf	efgtoa@n& (0+255),w,b
  5290  001244  6E01               	movwf	strcpy@dest,c
  5291  001246  0E01               	movlw	high _dbuf
  5292  001248  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5293  00124A  6E02               	movwf	strcpy@dest+1,c
  5294  00124C  0E00               	movlw	low _dbuf
  5295  00124E  258A               	addwf	efgtoa@i& (0+255),w,b
  5296  001250  6E03               	movwf	strcpy@src,c
  5297  001252  0E01               	movlw	high _dbuf
  5298  001254  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5299  001256  6E04               	movwf	strcpy@src+1,c
  5300  001258  ECBB  F01E         	call	_strcpy	;wreg free
  5301  00125C  EF00  F005         	goto	l4248
  5302  001260                     __end_of_efgtoa:
  5303                           	opt callstack 0
  5304                           
  5305 ;; *************** function _tolower *****************
  5306 ;; Defined at:
  5307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  c               2    6[COMRAM] int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  2    6[COMRAM] int 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5321 ;;      Params:         2       0       0       0       0       0       0       0       0
  5322 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5323 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5324 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5325 ;;Total ram usage:        8 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    1
  5328 ;; This function calls:
  5329 ;;		_isupper
  5330 ;; This function is called by:
  5331 ;;		_efgtoa
  5332 ;;		_vfpfcnvrt
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text9
  5337  003E18                     __ptext9:
  5338                           	opt callstack 0
  5339  003E18                     _tolower:
  5340                           	opt callstack 26
  5341                           
  5342                           ;incstack = 0
  5343  003E18  0EBF               	movlw	191
  5344  003E1A  6E09               	movwf	??_tolower& (0+255),c
  5345  003E1C  0EFF               	movlw	255
  5346  003E1E  6E0A               	movwf	(??_tolower+1)& (0+255),c
  5347  003E20  C007  F00B         	movff	tolower@c,??_tolower+2
  5348  003E24  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5349  003E28  5009               	movf	??_tolower,w,c
  5350  003E2A  260B               	addwf	??_tolower+2,f,c
  5351  003E2C  500A               	movf	??_tolower+1,w,c
  5352  003E2E  220C               	addwfc	??_tolower+3,f,c
  5353  003E30  500C               	movf	??_tolower+3,w,c
  5354  003E32  E106               	bnz	u3670
  5355  003E34  0E1A               	movlw	26
  5356  003E36  5C0B               	subwf	??_tolower+2,w,c
  5357  003E38  B0D8               	btfsc	status,0,c
  5358  003E3A  D002               	goto	u3670
  5359  003E3C  0E01               	movlw	1
  5360  003E3E  D001               	goto	u3680
  5361  003E40                     u3670:
  5362  003E40  0E00               	movlw	0
  5363  003E42                     u3680:
  5364  003E42  6E0D               	movwf	_tolower$1095,c
  5365  003E44  6A0E               	clrf	_tolower$1095+1,c
  5366  003E46  500D               	movf	_tolower$1095,w,c
  5367  003E48  100E               	iorwf	_tolower$1095+1,w,c
  5368  003E4A  B4D8               	btfsc	status,2,c
  5369  003E4C  D006               	goto	l1190
  5370  003E4E  0E20               	movlw	32
  5371  003E50  1007               	iorwf	tolower@c,w,c
  5372  003E52  6E07               	movwf	?_tolower,c
  5373  003E54  5008               	movf	tolower@c+1,w,c
  5374  003E56  6E08               	movwf	?_tolower+1,c
  5375  003E58  0012               	return	
  5376  003E5A                     l1190:
  5377  003E5A  C007  F007         	movff	tolower@c,?_tolower
  5378  003E5E  C008  F008         	movff	tolower@c+1,?_tolower+1
  5379  003E62  0012               	return		;funcret
  5380  003E64                     __end_of_tolower:
  5381                           	opt callstack 0
  5382                           
  5383 ;; *************** function _isupper *****************
  5384 ;; Defined at:
  5385 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  c               2    0[COMRAM] int 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  2    0[COMRAM] int 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5399 ;;      Params:         2       0       0       0       0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5401 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5402 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5403 ;;Total ram usage:        6 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_efgtoa
  5409 ;;		_vfpfcnvrt
  5410 ;;		_tolower
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text10
  5415  003F52                     __ptext10:
  5416                           	opt callstack 0
  5417  003F52                     _isupper:
  5418                           	opt callstack 26
  5419                           
  5420                           ;incstack = 0
  5421  003F52  0EBF               	movlw	191
  5422  003F54  6E03               	movwf	??_isupper& (0+255),c
  5423  003F56  0EFF               	movlw	255
  5424  003F58  6E04               	movwf	(??_isupper+1)& (0+255),c
  5425  003F5A  C001  F005         	movff	isupper@c,??_isupper+2
  5426  003F5E  C002  F006         	movff	isupper@c+1,??_isupper+3
  5427  003F62  5003               	movf	??_isupper,w,c
  5428  003F64  2605               	addwf	??_isupper+2,f,c
  5429  003F66  5004               	movf	??_isupper+1,w,c
  5430  003F68  2206               	addwfc	??_isupper+3,f,c
  5431  003F6A  5006               	movf	??_isupper+3,w,c
  5432  003F6C  E106               	bnz	u3120
  5433  003F6E  0E1A               	movlw	26
  5434  003F70  5C05               	subwf	??_isupper+2,w,c
  5435  003F72  B0D8               	btfsc	status,0,c
  5436  003F74  D002               	goto	u3120
  5437  003F76  0E01               	movlw	1
  5438  003F78  D001               	goto	u3130
  5439  003F7A                     u3120:
  5440  003F7A  0E00               	movlw	0
  5441  003F7C                     u3130:
  5442  003F7C  6E01               	movwf	?_isupper,c
  5443  003F7E  6A02               	clrf	?_isupper+1,c
  5444  003F80  0012               	return		;funcret
  5445  003F82                     __end_of_isupper:
  5446                           	opt callstack 0
  5447                           
  5448 ;; *************** function _strcpy *****************
  5449 ;; Defined at:
  5450 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5453 ;;		 -> dbuf(80), 
  5454 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5455 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  5456 ;;		 -> dbuf(80), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  d               2    8[COMRAM] PTR unsigned char 
  5459 ;;		 -> dbuf(80), 
  5460 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5461 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  5462 ;;		 -> dbuf(80), 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  2    0[COMRAM] PTR unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5472 ;;      Params:         4       0       0       0       0       0       0       0       0
  5473 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5474 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5475 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5476 ;;Total ram usage:       10 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_efgtoa
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text11
  5486  003D76                     __ptext11:
  5487                           	opt callstack 0
  5488  003D76                     _strcpy:
  5489                           	opt callstack 26
  5490                           
  5491                           ;incstack = 0
  5492  003D76  C003  F007         	movff	strcpy@src,strcpy@s
  5493  003D7A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5494  003D7E  C001  F009         	movff	strcpy@dest,strcpy@d
  5495  003D82  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5496  003D86                     l3556:
  5497  003D86  5007               	movf	strcpy@s,w,c
  5498  003D88  6E05               	movwf	??_strcpy& (0+255),c
  5499  003D8A  5008               	movf	strcpy@s+1,w,c
  5500  003D8C  6E06               	movwf	(??_strcpy+1)& (0+255),c
  5501  003D8E  4A07               	infsnz	strcpy@s,f,c
  5502  003D90  2A08               	incf	strcpy@s+1,f,c
  5503  003D92  C005  FFF6         	movff	??_strcpy,tblptrl
  5504  003D96  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5505  003D9A  6AF8               	clrf	tblptru,c
  5506  003D9C  C009  FFD9         	movff	strcpy@d,fsr2l
  5507  003DA0  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5508  003DA4  4A09               	infsnz	strcpy@d,f,c
  5509  003DA6  2A0A               	incf	strcpy@d+1,f,c
  5510  003DA8  0E07               	movlw	(high __ramtop+-1)
  5511  003DAA  64F7               	cpfsgt	tblptrh,c
  5512  003DAC  D003               	bra	u3657
  5513  003DAE  0008               	tblrd		*
  5514  003DB0  50F5               	movf	tablat,w,c
  5515  003DB2  D005               	bra	u3650
  5516  003DB4                     u3657:
  5517  003DB4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5518  003DB8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5519  003DBC  50E7               	movf	indf1,w,c
  5520  003DBE                     u3650:
  5521  003DBE  6EDF               	movwf	indf2,c
  5522  003DC0  50DF               	movf	indf2,w,c
  5523  003DC2  B4D8               	btfsc	status,2,c
  5524  003DC4  0012               	return	
  5525  003DC6  D7DF               	goto	l3556
  5526  003DC8                     __end_of_strcpy:
  5527                           	opt callstack 0
  5528                           
  5529 ;; *************** function _floorf *****************
  5530 ;; Defined at:
  5531 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  x               4   25[COMRAM] float 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  u               4   41[COMRAM] struct .
  5536 ;;  m               4   35[COMRAM] unsigned long 
  5537 ;;  e               2   39[COMRAM] int 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  4   25[COMRAM] float 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5547 ;;      Params:         4       0       0       0       0       0       0       0       0
  5548 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5549 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5550 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5551 ;;Total ram usage:       20 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_efgtoa
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text12
  5561  002AC4                     __ptext12:
  5562                           	opt callstack 0
  5563  002AC4                     _floorf:
  5564                           	opt callstack 26
  5565                           
  5566                           ;incstack = 0
  5567  002AC4  C0DE  F02A         	movff	floorf@F524,floorf@u
  5568  002AC8  C0DF  F02B         	movff	floorf@F524+1,floorf@u+1
  5569  002ACC  C0E0  F02C         	movff	floorf@F524+2,floorf@u+2
  5570  002AD0  C0E1  F02D         	movff	floorf@F524+3,floorf@u+3
  5571  002AD4  C01A  F02A         	movff	floorf@x,floorf@u
  5572  002AD8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5573  002ADC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5574  002AE0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5575  002AE4  0E81               	movlw	129
  5576  002AE6  6E1E               	movwf	??_floorf& (0+255),c
  5577  002AE8  0EFF               	movlw	255
  5578  002AEA  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5579  002AEC  C02A  F020         	movff	floorf@u,??_floorf+2
  5580  002AF0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5581  002AF4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5582  002AF8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5583  002AFC  0E18               	movlw	24
  5584  002AFE  D005               	goto	u3700
  5585  002B00                     u3705:
  5586  002B00  90D8               	bcf	status,0,c
  5587  002B02  3223               	rrcf	??_floorf+5,f,c
  5588  002B04  3222               	rrcf	??_floorf+4,f,c
  5589  002B06  3221               	rrcf	??_floorf+3,f,c
  5590  002B08  3220               	rrcf	??_floorf+2,f,c
  5591  002B0A                     u3700:
  5592  002B0A  2EE8               	decfsz	wreg,f,c
  5593  002B0C  D7F9               	goto	u3705
  5594  002B0E  5020               	movf	??_floorf+2,w,c
  5595  002B10  241E               	addwf	??_floorf,w,c
  5596  002B12  6E28               	movwf	floorf@e,c
  5597  002B14  0E00               	movlw	0
  5598  002B16  201F               	addwfc	??_floorf+1,w,c
  5599  002B18  6E29               	movwf	floorf@e+1,c
  5600  002B1A  BE29               	btfsc	floorf@e+1,7,c
  5601  002B1C  D00F               	goto	l3574
  5602  002B1E  5029               	movf	floorf@e+1,w,c
  5603  002B20  E104               	bnz	u3710
  5604  002B22  0E17               	movlw	23
  5605  002B24  5C28               	subwf	floorf@e,w,c
  5606  002B26  A0D8               	btfss	status,0,c
  5607  002B28  D009               	goto	l3574
  5608  002B2A                     u3710:
  5609  002B2A  C01A  F01A         	movff	floorf@x,?_floorf
  5610  002B2E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5611  002B32  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5612  002B36  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5613  002B3A  0012               	return	
  5614  002B3C                     l3574:
  5615  002B3C  BE29               	btfsc	floorf@e+1,7,c
  5616  002B3E  D05E               	goto	l3584
  5617  002B40  C028  F01E         	movff	floorf@e,??_floorf
  5618  002B44  0EFF               	movlw	255
  5619  002B46  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5620  002B48  0EFF               	movlw	255
  5621  002B4A  6E20               	movwf	(??_floorf+2)& (0+255),c
  5622  002B4C  0E7F               	movlw	127
  5623  002B4E  6E21               	movwf	(??_floorf+3)& (0+255),c
  5624  002B50  0E00               	movlw	0
  5625  002B52  6E22               	movwf	(??_floorf+4)& (0+255),c
  5626  002B54                     u3735:
  5627  002B54  661E               	tstfsz	??_floorf,c
  5628  002B56  D001               	goto	u3736
  5629  002B58  D007               	goto	u3737
  5630  002B5A                     u3736:
  5631  002B5A  3422               	rlcf	??_floorf+4,w,c
  5632  002B5C  3222               	rrcf	??_floorf+4,f,c
  5633  002B5E  3221               	rrcf	??_floorf+3,f,c
  5634  002B60  3220               	rrcf	??_floorf+2,f,c
  5635  002B62  321F               	rrcf	??_floorf+1,f,c
  5636  002B64  2E1E               	decfsz	??_floorf,f,c
  5637  002B66  D7F6               	goto	u3735
  5638  002B68                     u3737:
  5639  002B68  C01F  F024         	movff	??_floorf+1,floorf@m
  5640  002B6C  C020  F025         	movff	??_floorf+2,floorf@m+1
  5641  002B70  C021  F026         	movff	??_floorf+3,floorf@m+2
  5642  002B74  C022  F027         	movff	??_floorf+4,floorf@m+3
  5643  002B78  5024               	movf	floorf@m,w,c
  5644  002B7A  142A               	andwf	floorf@u,w,c
  5645  002B7C  6E1E               	movwf	??_floorf& (0+255),c
  5646  002B7E  5025               	movf	floorf@m+1,w,c
  5647  002B80  142B               	andwf	floorf@u+1,w,c
  5648  002B82  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5649  002B84  5026               	movf	floorf@m+2,w,c
  5650  002B86  142C               	andwf	floorf@u+2,w,c
  5651  002B88  6E20               	movwf	(??_floorf+2)& (0+255),c
  5652  002B8A  5027               	movf	floorf@m+3,w,c
  5653  002B8C  142D               	andwf	floorf@u+3,w,c
  5654  002B8E  6E21               	movwf	(??_floorf+3)& (0+255),c
  5655  002B90  501E               	movf	??_floorf,w,c
  5656  002B92  101F               	iorwf	??_floorf+1,w,c
  5657  002B94  1020               	iorwf	??_floorf+2,w,c
  5658  002B96  1021               	iorwf	??_floorf+3,w,c
  5659  002B98  B4D8               	btfsc	status,2,c
  5660  002B9A  D7C7               	goto	u3710
  5661  002B9C  C02A  F01E         	movff	floorf@u,??_floorf
  5662  002BA0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5663  002BA4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5664  002BA8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5665  002BAC  0E20               	movlw	32
  5666  002BAE  D005               	goto	u3750
  5667  002BB0                     u3755:
  5668  002BB0  90D8               	bcf	status,0,c
  5669  002BB2  3221               	rrcf	??_floorf+3,f,c
  5670  002BB4  3220               	rrcf	??_floorf+2,f,c
  5671  002BB6  321F               	rrcf	??_floorf+1,f,c
  5672  002BB8  321E               	rrcf	??_floorf,f,c
  5673  002BBA                     u3750:
  5674  002BBA  2EE8               	decfsz	wreg,f,c
  5675  002BBC  D7F9               	goto	u3755
  5676  002BBE  501E               	movf	??_floorf,w,c
  5677  002BC0  101F               	iorwf	??_floorf+1,w,c
  5678  002BC2  1020               	iorwf	??_floorf+2,w,c
  5679  002BC4  1021               	iorwf	??_floorf+3,w,c
  5680  002BC6  B4D8               	btfsc	status,2,c
  5681  002BC8  D008               	goto	l1110
  5682  002BCA  5024               	movf	floorf@m,w,c
  5683  002BCC  262A               	addwf	floorf@u,f,c
  5684  002BCE  5025               	movf	floorf@m+1,w,c
  5685  002BD0  222B               	addwfc	floorf@u+1,f,c
  5686  002BD2  5026               	movf	floorf@m+2,w,c
  5687  002BD4  222C               	addwfc	floorf@u+2,f,c
  5688  002BD6  5027               	movf	floorf@m+3,w,c
  5689  002BD8  222D               	addwfc	floorf@u+3,f,c
  5690  002BDA                     l1110:
  5691  002BDA  1C24               	comf	floorf@m,w,c
  5692  002BDC  6E1E               	movwf	??_floorf& (0+255),c
  5693  002BDE  1C25               	comf	floorf@m+1,w,c
  5694  002BE0  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5695  002BE2  1C26               	comf	floorf@m+2,w,c
  5696  002BE4  6E20               	movwf	(??_floorf+2)& (0+255),c
  5697  002BE6  1C27               	comf	floorf@m+3,w,c
  5698  002BE8  6E21               	movwf	(??_floorf+3)& (0+255),c
  5699  002BEA  501E               	movf	??_floorf,w,c
  5700  002BEC  162A               	andwf	floorf@u,f,c
  5701  002BEE  501F               	movf	??_floorf+1,w,c
  5702  002BF0  162B               	andwf	floorf@u+1,f,c
  5703  002BF2  5020               	movf	??_floorf+2,w,c
  5704  002BF4  162C               	andwf	floorf@u+2,f,c
  5705  002BF6  5021               	movf	??_floorf+3,w,c
  5706  002BF8  162D               	andwf	floorf@u+3,f,c
  5707  002BFA  D036               	goto	l3592
  5708  002BFC                     l3584:
  5709  002BFC  C02A  F01E         	movff	floorf@u,??_floorf
  5710  002C00  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5711  002C04  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5712  002C08  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5713  002C0C  0E20               	movlw	32
  5714  002C0E  D005               	goto	u3770
  5715  002C10                     u3775:
  5716  002C10  90D8               	bcf	status,0,c
  5717  002C12  3221               	rrcf	??_floorf+3,f,c
  5718  002C14  3220               	rrcf	??_floorf+2,f,c
  5719  002C16  321F               	rrcf	??_floorf+1,f,c
  5720  002C18  321E               	rrcf	??_floorf,f,c
  5721  002C1A                     u3770:
  5722  002C1A  2EE8               	decfsz	wreg,f,c
  5723  002C1C  D7F9               	goto	u3775
  5724  002C1E  501E               	movf	??_floorf,w,c
  5725  002C20  101F               	iorwf	??_floorf+1,w,c
  5726  002C22  1020               	iorwf	??_floorf+2,w,c
  5727  002C24  1021               	iorwf	??_floorf+3,w,c
  5728  002C26  A4D8               	btfss	status,2,c
  5729  002C28  D008               	goto	l3588
  5730  002C2A  0E00               	movlw	0
  5731  002C2C  6E2A               	movwf	floorf@u,c
  5732  002C2E  0E00               	movlw	0
  5733  002C30  6E2B               	movwf	floorf@u+1,c
  5734  002C32  0E00               	movlw	0
  5735  002C34  6E2C               	movwf	floorf@u+2,c
  5736  002C36  0E00               	movlw	0
  5737  002C38  D016               	goto	L8
  5738  002C3A                     l3588:
  5739  002C3A  90D8               	bcf	status,0,c
  5740  002C3C  342A               	rlcf	floorf@u,w,c
  5741  002C3E  6E1E               	movwf	??_floorf& (0+255),c
  5742  002C40  342B               	rlcf	floorf@u+1,w,c
  5743  002C42  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5744  002C44  342C               	rlcf	floorf@u+2,w,c
  5745  002C46  6E20               	movwf	(??_floorf+2)& (0+255),c
  5746  002C48  342D               	rlcf	floorf@u+3,w,c
  5747  002C4A  6E21               	movwf	(??_floorf+3)& (0+255),c
  5748  002C4C  501E               	movf	??_floorf,w,c
  5749  002C4E  101F               	iorwf	??_floorf+1,w,c
  5750  002C50  1020               	iorwf	??_floorf+2,w,c
  5751  002C52  1021               	iorwf	??_floorf+3,w,c
  5752  002C54  B4D8               	btfsc	status,2,c
  5753  002C56  D008               	goto	l3592
  5754  002C58  0E00               	movlw	0
  5755  002C5A  6E2A               	movwf	floorf@u,c
  5756  002C5C  0E00               	movlw	0
  5757  002C5E  6E2B               	movwf	floorf@u+1,c
  5758  002C60  0E80               	movlw	128
  5759  002C62  6E2C               	movwf	floorf@u+2,c
  5760  002C64  0EBF               	movlw	191
  5761  002C66                     L8:
  5762  002C66  6E2D               	movwf	floorf@u+3,c
  5763  002C68                     l3592:
  5764  002C68  C02A  F01A         	movff	floorf@u,?_floorf
  5765  002C6C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5766  002C70  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5767  002C74  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5768  002C78  0012               	return		;funcret
  5769  002C7A                     __end_of_floorf:
  5770                           	opt callstack 0
  5771                           
  5772 ;; *************** function ___fpclassifyf *****************
  5773 ;; Defined at:
  5774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  x               4    0[COMRAM] float 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  u               4   10[COMRAM] struct .
  5779 ;;  e               2    8[COMRAM] int 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  2    0[COMRAM] int 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5789 ;;      Params:         4       0       0       0       0       0       0       0       0
  5790 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5791 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5792 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5793 ;;Total ram usage:       14 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_efgtoa
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text13
  5803  003660                     __ptext13:
  5804                           	opt callstack 0
  5805  003660                     ___fpclassifyf:
  5806                           	opt callstack 26
  5807                           
  5808                           ;incstack = 0
  5809  003660  C0E2  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5810  003664  C0E3  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5811  003668  C0E4  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5812  00366C  C0E5  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5813  003670  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5814  003674  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5815  003678  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5816  00367C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5817  003680  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5818  003684  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5819  003688  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5820  00368C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5821  003690  0E18               	movlw	24
  5822  003692  D005               	goto	u3580
  5823  003694                     u3585:
  5824  003694  90D8               	bcf	status,0,c
  5825  003696  3208               	rrcf	??___fpclassifyf+3,f,c
  5826  003698  3207               	rrcf	??___fpclassifyf+2,f,c
  5827  00369A  3206               	rrcf	??___fpclassifyf+1,f,c
  5828  00369C  3205               	rrcf	??___fpclassifyf,f,c
  5829  00369E                     u3580:
  5830  00369E  2EE8               	decfsz	wreg,f,c
  5831  0036A0  D7F9               	goto	u3585
  5832  0036A2  5005               	movf	??___fpclassifyf,w,c
  5833  0036A4  6E09               	movwf	___fpclassifyf@e,c
  5834  0036A6  6A0A               	clrf	___fpclassifyf@e+1,c
  5835  0036A8  5009               	movf	___fpclassifyf@e,w,c
  5836  0036AA  100A               	iorwf	___fpclassifyf@e+1,w,c
  5837  0036AC  A4D8               	btfss	status,2,c
  5838  0036AE  D019               	goto	l3544
  5839  0036B0  90D8               	bcf	status,0,c
  5840  0036B2  340B               	rlcf	___fpclassifyf@u,w,c
  5841  0036B4  6E05               	movwf	??___fpclassifyf& (0+255),c
  5842  0036B6  340C               	rlcf	___fpclassifyf@u+1,w,c
  5843  0036B8  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5844  0036BA  340D               	rlcf	___fpclassifyf@u+2,w,c
  5845  0036BC  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5846  0036BE  340E               	rlcf	___fpclassifyf@u+3,w,c
  5847  0036C0  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5848  0036C2  5005               	movf	??___fpclassifyf,w,c
  5849  0036C4  1006               	iorwf	??___fpclassifyf+1,w,c
  5850  0036C6  1007               	iorwf	??___fpclassifyf+2,w,c
  5851  0036C8  1008               	iorwf	??___fpclassifyf+3,w,c
  5852  0036CA  A4D8               	btfss	status,2,c
  5853  0036CC  D005               	goto	l3540
  5854  0036CE  0E00               	movlw	0
  5855  0036D0  6E02               	movwf	?___fpclassifyf+1,c
  5856  0036D2  0E02               	movlw	2
  5857  0036D4  6E01               	movwf	?___fpclassifyf,c
  5858  0036D6  0012               	return	
  5859  0036D8                     l3540:
  5860  0036D8  0E00               	movlw	0
  5861  0036DA  6E02               	movwf	?___fpclassifyf+1,c
  5862  0036DC  0E03               	movlw	3
  5863  0036DE  6E01               	movwf	?___fpclassifyf,c
  5864  0036E0  0012               	return	
  5865  0036E2                     l3544:
  5866  0036E2  2809               	incf	___fpclassifyf@e,w,c
  5867  0036E4  100A               	iorwf	___fpclassifyf@e+1,w,c
  5868  0036E6  A4D8               	btfss	status,2,c
  5869  0036E8  D01C               	goto	l3550
  5870  0036EA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5871  0036EE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5872  0036F2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5873  0036F6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5874  0036FA  0E09               	movlw	9
  5875  0036FC                     u3625:
  5876  0036FC  90D8               	bcf	status,0,c
  5877  0036FE  3605               	rlcf	??___fpclassifyf,f,c
  5878  003700  3606               	rlcf	??___fpclassifyf+1,f,c
  5879  003702  3607               	rlcf	??___fpclassifyf+2,f,c
  5880  003704  3608               	rlcf	??___fpclassifyf+3,f,c
  5881  003706  2EE8               	decfsz	wreg,f,c
  5882  003708  D7F9               	goto	u3625
  5883  00370A  5005               	movf	??___fpclassifyf,w,c
  5884  00370C  1006               	iorwf	??___fpclassifyf+1,w,c
  5885  00370E  1007               	iorwf	??___fpclassifyf+2,w,c
  5886  003710  1008               	iorwf	??___fpclassifyf+3,w,c
  5887  003712  A4D8               	btfss	status,2,c
  5888  003714  D002               	goto	u3630
  5889  003716  0E01               	movlw	1
  5890  003718  D001               	goto	u3640
  5891  00371A                     u3630:
  5892  00371A  0E00               	movlw	0
  5893  00371C                     u3640:
  5894  00371C  6E01               	movwf	?___fpclassifyf,c
  5895  00371E  6A02               	clrf	?___fpclassifyf+1,c
  5896  003720  0012               	return	
  5897  003722                     l3550:
  5898  003722  0E00               	movlw	0
  5899  003724  6E02               	movwf	?___fpclassifyf+1,c
  5900  003726  0E04               	movlw	4
  5901  003728  6E01               	movwf	?___fpclassifyf,c
  5902  00372A  0012               	return		;funcret
  5903  00372C                     __end_of___fpclassifyf:
  5904                           	opt callstack 0
  5905                           
  5906 ;; *************** function ___fltol *****************
  5907 ;; Defined at:
  5908 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  f1              4    0[COMRAM] int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  exp1            1    9[COMRAM] unsigned char 
  5913 ;;  sign1           1    8[COMRAM] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4    0[COMRAM] long 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5923 ;;      Params:         4       0       0       0       0       0       0       0       0
  5924 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5925 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5926 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5927 ;;Total ram usage:       10 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;;		_efgtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text14
  5938  00372C                     __ptext14:
  5939                           	opt callstack 0
  5940  00372C                     ___fltol:
  5941                           	opt callstack 26
  5942                           
  5943                           ;incstack = 0
  5944  00372C  3403               	rlcf	___fltol@f1+2,w,c
  5945  00372E  3404               	rlcf	___fltol@f1+3,w,c
  5946  003730  6E0A               	movwf	___fltol@exp1,c
  5947  003732  500A               	movf	___fltol@exp1,w,c
  5948  003734  A4D8               	btfss	status,2,c
  5949  003736  D009               	goto	l4092
  5950  003738                     u4580:
  5951  003738  0E00               	movlw	0
  5952  00373A  6E01               	movwf	?___fltol,c
  5953  00373C  0E00               	movlw	0
  5954  00373E  6E02               	movwf	?___fltol+1,c
  5955  003740  0E00               	movlw	0
  5956  003742  6E03               	movwf	?___fltol+2,c
  5957  003744  0E00               	movlw	0
  5958  003746  6E04               	movwf	?___fltol+3,c
  5959  003748  0012               	return	
  5960  00374A                     l4092:
  5961  00374A  C001  F005         	movff	___fltol@f1,??___fltol
  5962  00374E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5963  003752  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5964  003756  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5965  00375A  0E20               	movlw	32
  5966  00375C  D005               	goto	u4590
  5967  00375E                     u4595:
  5968  00375E  90D8               	bcf	status,0,c
  5969  003760  3208               	rrcf	??___fltol+3,f,c
  5970  003762  3207               	rrcf	??___fltol+2,f,c
  5971  003764  3206               	rrcf	??___fltol+1,f,c
  5972  003766  3205               	rrcf	??___fltol,f,c
  5973  003768                     u4590:
  5974  003768  2EE8               	decfsz	wreg,f,c
  5975  00376A  D7F9               	goto	u4595
  5976  00376C  5005               	movf	??___fltol,w,c
  5977  00376E  6E09               	movwf	___fltol@sign1,c
  5978  003770  8E03               	bsf	___fltol@f1+2,7,c
  5979  003772  0EFF               	movlw	255
  5980  003774  1601               	andwf	___fltol@f1,f,c
  5981  003776  0EFF               	movlw	255
  5982  003778  1602               	andwf	___fltol@f1+1,f,c
  5983  00377A  0EFF               	movlw	255
  5984  00377C  1603               	andwf	___fltol@f1+2,f,c
  5985  00377E  0E00               	movlw	0
  5986  003780  1604               	andwf	___fltol@f1+3,f,c
  5987  003782  0E96               	movlw	150
  5988  003784  5E0A               	subwf	___fltol@exp1,f,c
  5989  003786  AE0A               	btfss	___fltol@exp1,7,c
  5990  003788  D00D               	goto	l4112
  5991  00378A  500A               	movf	___fltol@exp1,w,c
  5992  00378C  0A80               	xorlw	128
  5993  00378E  0F97               	addlw	151
  5994  003790  A0D8               	btfss	status,0,c
  5995  003792  D7D2               	goto	u4580
  5996  003794                     l4108:
  5997  003794  90D8               	bcf	status,0,c
  5998  003796  3204               	rrcf	___fltol@f1+3,f,c
  5999  003798  3203               	rrcf	___fltol@f1+2,f,c
  6000  00379A  3202               	rrcf	___fltol@f1+1,f,c
  6001  00379C  3201               	rrcf	___fltol@f1,f,c
  6002  00379E  3E0A               	incfsz	___fltol@exp1,f,c
  6003  0037A0  D7F9               	goto	l4108
  6004  0037A2  D00D               	goto	u4630
  6005  0037A4                     l4112:
  6006  0037A4  0E1F               	movlw	31
  6007  0037A6  640A               	cpfsgt	___fltol@exp1,c
  6008  0037A8  D007               	goto	l4120
  6009  0037AA  D7C6               	goto	u4580
  6010  0037AC                     l4118:
  6011  0037AC  90D8               	bcf	status,0,c
  6012  0037AE  3601               	rlcf	___fltol@f1,f,c
  6013  0037B0  3602               	rlcf	___fltol@f1+1,f,c
  6014  0037B2  3603               	rlcf	___fltol@f1+2,f,c
  6015  0037B4  3604               	rlcf	___fltol@f1+3,f,c
  6016  0037B6  060A               	decf	___fltol@exp1,f,c
  6017  0037B8                     l4120:
  6018  0037B8  500A               	movf	___fltol@exp1,w,c
  6019  0037BA  A4D8               	btfss	status,2,c
  6020  0037BC  D7F7               	goto	l4118
  6021  0037BE                     u4630:
  6022  0037BE  5009               	movf	___fltol@sign1,w,c
  6023  0037C0  B4D8               	btfsc	status,2,c
  6024  0037C2  D008               	goto	l4126
  6025  0037C4  1E04               	comf	___fltol@f1+3,f,c
  6026  0037C6  1E03               	comf	___fltol@f1+2,f,c
  6027  0037C8  1E02               	comf	___fltol@f1+1,f,c
  6028  0037CA  6C01               	negf	___fltol@f1,c
  6029  0037CC  0E00               	movlw	0
  6030  0037CE  2202               	addwfc	___fltol@f1+1,f,c
  6031  0037D0  2203               	addwfc	___fltol@f1+2,f,c
  6032  0037D2  2204               	addwfc	___fltol@f1+3,f,c
  6033  0037D4                     l4126:
  6034  0037D4  C001  F001         	movff	___fltol@f1,?___fltol
  6035  0037D8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6036  0037DC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6037  0037E0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6038  0037E4  0012               	return		;funcret
  6039  0037E6                     __end_of___fltol:
  6040                           	opt callstack 0
  6041                           
  6042 ;; *************** function ___flsub *****************
  6043 ;; Defined at:
  6044 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  b               4   25[COMRAM] long 
  6047 ;;  a               4   29[COMRAM] long 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  4   25[COMRAM] long 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         8       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6062 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        8 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    1
  6066 ;; This function calls:
  6067 ;;		___fladd
  6068 ;; This function is called by:
  6069 ;;		_efgtoa
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text15
  6074  003E64                     __ptext15:
  6075                           	opt callstack 0
  6076  003E64                     ___flsub:
  6077                           	opt callstack 25
  6078                           
  6079                           ;incstack = 0
  6080  003E64  0E00               	movlw	0
  6081  003E66  1A1E               	xorwf	___flsub@a,f,c
  6082  003E68  0E00               	movlw	0
  6083  003E6A  1A1F               	xorwf	___flsub@a+1,f,c
  6084  003E6C  0E00               	movlw	0
  6085  003E6E  1A20               	xorwf	___flsub@a+2,f,c
  6086  003E70  0E80               	movlw	128
  6087  003E72  1A21               	xorwf	___flsub@a+3,f,c
  6088  003E74  C01A  F001         	movff	___flsub@b,___fladd@b
  6089  003E78  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6090  003E7C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6091  003E80  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6092  003E84  C01E  F005         	movff	___flsub@a,___fladd@a
  6093  003E88  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6094  003E8C  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6095  003E90  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6096  003E94  EC74  F011         	call	___fladd	;wreg free
  6097  003E98  C001  F01A         	movff	?___fladd,?___flsub
  6098  003E9C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6099  003EA0  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6100  003EA4  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6101  003EA8  0012               	return		;funcret
  6102  003EAA                     __end_of___flsub:
  6103                           	opt callstack 0
  6104                           
  6105 ;; *************** function ___fladd *****************
  6106 ;; Defined at:
  6107 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  b               4    0[COMRAM] long 
  6110 ;;  a               4    4[COMRAM] long 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  grs             1   15[COMRAM] unsigned char 
  6113 ;;  bexp            1   14[COMRAM] unsigned char 
  6114 ;;  aexp            1   13[COMRAM] unsigned char 
  6115 ;;  signs           1   12[COMRAM] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  4    0[COMRAM] unsigned char 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6125 ;;      Params:         8       0       0       0       0       0       0       0       0
  6126 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6127 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6128 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6129 ;;Total ram usage:       16 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_efgtoa
  6135 ;;		___flsub
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text16
  6140  0022E8                     __ptext16:
  6141                           	opt callstack 0
  6142  0022E8                     ___fladd:
  6143                           	opt callstack 25
  6144                           
  6145                           ;incstack = 0
  6146  0022E8  5004               	movf	___fladd@b+3,w,c
  6147  0022EA  0B80               	andlw	128
  6148  0022EC  6E0D               	movwf	___fladd@signs,c
  6149  0022EE  5004               	movf	___fladd@b+3,w,c
  6150  0022F0  2404               	addwf	___fladd@b+3,w,c
  6151  0022F2  6E0F               	movwf	___fladd@bexp,c
  6152  0022F4  BE03               	btfsc	___fladd@b+2,7,c
  6153  0022F6  800F               	bsf	___fladd@bexp,0,c
  6154  0022F8  500F               	movf	___fladd@bexp,w,c
  6155  0022FA  B4D8               	btfsc	status,2,c
  6156  0022FC  D00D               	goto	l3320
  6157  0022FE  280F               	incf	___fladd@bexp,w,c
  6158  002300  A4D8               	btfss	status,2,c
  6159  002302  D008               	goto	l3316
  6160  002304  0E00               	movlw	0
  6161  002306  6E01               	movwf	___fladd@b,c
  6162  002308  0E00               	movlw	0
  6163  00230A  6E02               	movwf	___fladd@b+1,c
  6164  00230C  0E00               	movlw	0
  6165  00230E  6E03               	movwf	___fladd@b+2,c
  6166  002310  0E00               	movlw	0
  6167  002312  6E04               	movwf	___fladd@b+3,c
  6168  002314                     l3316:
  6169  002314  8E03               	bsf	___fladd@b+2,7,c
  6170  002316  D006               	goto	L9
  6171  002318                     l3320:
  6172  002318  0E00               	movlw	0
  6173  00231A  6E01               	movwf	___fladd@b,c
  6174  00231C  0E00               	movlw	0
  6175  00231E  6E02               	movwf	___fladd@b+1,c
  6176  002320  0E00               	movlw	0
  6177  002322  6E03               	movwf	___fladd@b+2,c
  6178  002324                     L9:
  6179  002324  0E00               	movlw	0
  6180  002326  6E04               	movwf	___fladd@b+3,c
  6181  002328  5008               	movf	___fladd@a+3,w,c
  6182  00232A  0B80               	andlw	128
  6183  00232C  6E0E               	movwf	___fladd@aexp,c
  6184  00232E  500D               	movf	___fladd@signs,w,c
  6185  002330  180E               	xorwf	___fladd@aexp,w,c
  6186  002332  A4D8               	btfss	status,2,c
  6187  002334  8C0D               	bsf	___fladd@signs,6,c
  6188  002336  5008               	movf	___fladd@a+3,w,c
  6189  002338  2408               	addwf	___fladd@a+3,w,c
  6190  00233A  6E0E               	movwf	___fladd@aexp,c
  6191  00233C  BE07               	btfsc	___fladd@a+2,7,c
  6192  00233E  800E               	bsf	___fladd@aexp,0,c
  6193  002340  500E               	movf	___fladd@aexp,w,c
  6194  002342  B4D8               	btfsc	status,2,c
  6195  002344  D00D               	goto	l3344
  6196  002346  280E               	incf	___fladd@aexp,w,c
  6197  002348  A4D8               	btfss	status,2,c
  6198  00234A  D008               	goto	l3340
  6199  00234C  0E00               	movlw	0
  6200  00234E  6E05               	movwf	___fladd@a,c
  6201  002350  0E00               	movlw	0
  6202  002352  6E06               	movwf	___fladd@a+1,c
  6203  002354  0E00               	movlw	0
  6204  002356  6E07               	movwf	___fladd@a+2,c
  6205  002358  0E00               	movlw	0
  6206  00235A  6E08               	movwf	___fladd@a+3,c
  6207  00235C                     l3340:
  6208  00235C  8E07               	bsf	___fladd@a+2,7,c
  6209  00235E  D006               	goto	L10
  6210  002360                     l3344:
  6211  002360  0E00               	movlw	0
  6212  002362  6E05               	movwf	___fladd@a,c
  6213  002364  0E00               	movlw	0
  6214  002366  6E06               	movwf	___fladd@a+1,c
  6215  002368  0E00               	movlw	0
  6216  00236A  6E07               	movwf	___fladd@a+2,c
  6217  00236C                     L10:
  6218  00236C  0E00               	movlw	0
  6219  00236E  6E08               	movwf	___fladd@a+3,c
  6220  002370  500F               	movf	___fladd@bexp,w,c
  6221  002372  5C0E               	subwf	___fladd@aexp,w,c
  6222  002374  B0D8               	btfsc	status,0,c
  6223  002376  D022               	goto	l3382
  6224  002378  AC0D               	btfss	___fladd@signs,6,c
  6225  00237A  D002               	goto	l3352
  6226  00237C  0E80               	movlw	128
  6227  00237E  1A0D               	xorwf	___fladd@signs,f,c
  6228  002380                     l3352:
  6229  002380  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6230  002384  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6231  002388  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6232  00238C  C001  F010         	movff	___fladd@b,___fladd@grs
  6233  002390  C005  F001         	movff	___fladd@a,___fladd@b
  6234  002394  C010  F005         	movff	___fladd@grs,___fladd@a
  6235  002398  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6236  00239C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6237  0023A0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6238  0023A4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6239  0023A8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6240  0023AC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6241  0023B0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6242  0023B4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6243  0023B8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6244  0023BC                     l3382:
  6245  0023BC  0E00               	movlw	0
  6246  0023BE  6E10               	movwf	___fladd@grs,c
  6247  0023C0  500F               	movf	___fladd@bexp,w,c
  6248  0023C2  C00E  F009         	movff	___fladd@aexp,??___fladd
  6249  0023C6  6A0A               	clrf	(??___fladd+1)& (0+255),c
  6250  0023C8  5E09               	subwf	??___fladd,f,c
  6251  0023CA  0E00               	movlw	0
  6252  0023CC  5A0A               	subwfb	??___fladd+1,f,c
  6253  0023CE  BE0A               	btfsc	??___fladd+1,7,c
  6254  0023D0  D02C               	goto	l910
  6255  0023D2  500A               	movf	??___fladd+1,w,c
  6256  0023D4  E104               	bnz	u3230
  6257  0023D6  0E1A               	movlw	26
  6258  0023D8  5C09               	subwf	??___fladd,w,c
  6259  0023DA  A0D8               	btfss	status,0,c
  6260  0023DC  D026               	goto	l910
  6261  0023DE                     u3230:
  6262  0023DE  5001               	movf	___fladd@b,w,c
  6263  0023E0  1002               	iorwf	___fladd@b+1,w,c
  6264  0023E2  1003               	iorwf	___fladd@b+2,w,c
  6265  0023E4  1004               	iorwf	___fladd@b+3,w,c
  6266  0023E6  B4D8               	btfsc	status,2,c
  6267  0023E8  D002               	goto	u3240
  6268  0023EA  0E01               	movlw	1
  6269  0023EC  D001               	goto	u3250
  6270  0023EE                     u3240:
  6271  0023EE  0E00               	movlw	0
  6272  0023F0                     u3250:
  6273  0023F0  6E10               	movwf	___fladd@grs,c
  6274  0023F2  0E00               	movlw	0
  6275  0023F4  6E01               	movwf	___fladd@b,c
  6276  0023F6  0E00               	movlw	0
  6277  0023F8  6E02               	movwf	___fladd@b+1,c
  6278  0023FA  0E00               	movlw	0
  6279  0023FC  6E03               	movwf	___fladd@b+2,c
  6280  0023FE  0E00               	movlw	0
  6281  002400  6E04               	movwf	___fladd@b+3,c
  6282  002402  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6283  002406  D015               	goto	u3280
  6284  002408                     l911:
  6285  002408  A010               	btfss	___fladd@grs,0,c
  6286  00240A  D005               	goto	l3394
  6287  00240C  90D8               	bcf	status,0,c
  6288  00240E  3010               	rrcf	___fladd@grs,w,c
  6289  002410  0901               	iorlw	1
  6290  002412  6E10               	movwf	___fladd@grs,c
  6291  002414  D002               	goto	l3396
  6292  002416                     l3394:
  6293  002416  90D8               	bcf	status,0,c
  6294  002418  3210               	rrcf	___fladd@grs,f,c
  6295  00241A                     l3396:
  6296  00241A  B001               	btfsc	___fladd@b,0,c
  6297  00241C  8E10               	bsf	___fladd@grs,7,c
  6298  00241E  3404               	rlcf	___fladd@b+3,w,c
  6299  002420  3204               	rrcf	___fladd@b+3,f,c
  6300  002422  3203               	rrcf	___fladd@b+2,f,c
  6301  002424  3202               	rrcf	___fladd@b+1,f,c
  6302  002426  3201               	rrcf	___fladd@b,f,c
  6303  002428  2A0F               	incf	___fladd@bexp,f,c
  6304  00242A                     l910:
  6305  00242A  500E               	movf	___fladd@aexp,w,c
  6306  00242C  5C0F               	subwf	___fladd@bexp,w,c
  6307  00242E  A0D8               	btfss	status,0,c
  6308  002430  D7EB               	goto	l911
  6309  002432                     u3280:
  6310  002432  BC0D               	btfsc	___fladd@signs,6,c
  6311  002434  D028               	goto	l3428
  6312  002436  500F               	movf	___fladd@bexp,w,c
  6313  002438  A4D8               	btfss	status,2,c
  6314  00243A  D009               	goto	l3410
  6315  00243C  0E00               	movlw	0
  6316  00243E  6E01               	movwf	?___fladd,c
  6317  002440  0E00               	movlw	0
  6318  002442  6E02               	movwf	?___fladd+1,c
  6319  002444  0E00               	movlw	0
  6320  002446  6E03               	movwf	?___fladd+2,c
  6321  002448  0E00               	movlw	0
  6322  00244A  6E04               	movwf	?___fladd+3,c
  6323  00244C  0012               	return	
  6324  00244E                     l3410:
  6325  00244E  5005               	movf	___fladd@a,w,c
  6326  002450  2601               	addwf	___fladd@b,f,c
  6327  002452  5006               	movf	___fladd@a+1,w,c
  6328  002454  2202               	addwfc	___fladd@b+1,f,c
  6329  002456  5007               	movf	___fladd@a+2,w,c
  6330  002458  2203               	addwfc	___fladd@b+2,f,c
  6331  00245A  5008               	movf	___fladd@a+3,w,c
  6332  00245C  2204               	addwfc	___fladd@b+3,f,c
  6333  00245E  A004               	btfss	___fladd@b+3,0,c
  6334  002460  D071               	goto	u3410
  6335  002462  A010               	btfss	___fladd@grs,0,c
  6336  002464  D005               	goto	l3418
  6337  002466  90D8               	bcf	status,0,c
  6338  002468  3010               	rrcf	___fladd@grs,w,c
  6339  00246A  0901               	iorlw	1
  6340  00246C  6E10               	movwf	___fladd@grs,c
  6341  00246E  D002               	goto	l3420
  6342  002470                     l3418:
  6343  002470  90D8               	bcf	status,0,c
  6344  002472  3210               	rrcf	___fladd@grs,f,c
  6345  002474                     l3420:
  6346  002474  B001               	btfsc	___fladd@b,0,c
  6347  002476  8E10               	bsf	___fladd@grs,7,c
  6348  002478  3404               	rlcf	___fladd@b+3,w,c
  6349  00247A  3204               	rrcf	___fladd@b+3,f,c
  6350  00247C  3203               	rrcf	___fladd@b+2,f,c
  6351  00247E  3202               	rrcf	___fladd@b+1,f,c
  6352  002480  3201               	rrcf	___fladd@b,f,c
  6353  002482  2A0F               	incf	___fladd@bexp,f,c
  6354  002484  D05F               	goto	u3410
  6355  002486                     l3428:
  6356  002486  5005               	movf	___fladd@a,w,c
  6357  002488  5C01               	subwf	___fladd@b,w,c
  6358  00248A  5006               	movf	___fladd@a+1,w,c
  6359  00248C  5802               	subwfb	___fladd@b+1,w,c
  6360  00248E  5007               	movf	___fladd@a+2,w,c
  6361  002490  5803               	subwfb	___fladd@b+2,w,c
  6362  002492  5004               	movf	___fladd@b+3,w,c
  6363  002494  0A80               	xorlw	128
  6364  002496  6E09               	movwf	??___fladd& (0+255),c
  6365  002498  5008               	movf	___fladd@a+3,w,c
  6366  00249A  0A80               	xorlw	128
  6367  00249C  5809               	subwfb	??___fladd& (0+255),w,c
  6368  00249E  B0D8               	btfsc	status,0,c
  6369  0024A0  D025               	goto	l3438
  6370  0024A2  5001               	movf	___fladd@b,w,c
  6371  0024A4  5C05               	subwf	___fladd@a,w,c
  6372  0024A6  6E09               	movwf	??___fladd& (0+255),c
  6373  0024A8  5002               	movf	___fladd@b+1,w,c
  6374  0024AA  5806               	subwfb	___fladd@a+1,w,c
  6375  0024AC  6E0A               	movwf	(??___fladd+1)& (0+255),c
  6376  0024AE  5003               	movf	___fladd@b+2,w,c
  6377  0024B0  5807               	subwfb	___fladd@a+2,w,c
  6378  0024B2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  6379  0024B4  5004               	movf	___fladd@b+3,w,c
  6380  0024B6  5808               	subwfb	___fladd@a+3,w,c
  6381  0024B8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  6382  0024BA  0EFF               	movlw	255
  6383  0024BC  2409               	addwf	??___fladd,w,c
  6384  0024BE  6E01               	movwf	___fladd@b,c
  6385  0024C0  0EFF               	movlw	255
  6386  0024C2  200A               	addwfc	??___fladd+1,w,c
  6387  0024C4  6E02               	movwf	___fladd@b+1,c
  6388  0024C6  0EFF               	movlw	255
  6389  0024C8  200B               	addwfc	??___fladd+2,w,c
  6390  0024CA  6E03               	movwf	___fladd@b+2,c
  6391  0024CC  0EFF               	movlw	255
  6392  0024CE  200C               	addwfc	??___fladd+3,w,c
  6393  0024D0  6E04               	movwf	___fladd@b+3,c
  6394  0024D2  0E80               	movlw	128
  6395  0024D4  1A0D               	xorwf	___fladd@signs,f,c
  6396  0024D6  6C10               	negf	___fladd@grs,c
  6397  0024D8  5010               	movf	___fladd@grs,w,c
  6398  0024DA  A4D8               	btfss	status,2,c
  6399  0024DC  D00F               	goto	l926
  6400  0024DE  0E01               	movlw	1
  6401  0024E0  2601               	addwf	___fladd@b,f,c
  6402  0024E2  0E00               	movlw	0
  6403  0024E4  2202               	addwfc	___fladd@b+1,f,c
  6404  0024E6  2203               	addwfc	___fladd@b+2,f,c
  6405  0024E8  2204               	addwfc	___fladd@b+3,f,c
  6406  0024EA  D008               	goto	l926
  6407  0024EC                     l3438:
  6408  0024EC  5005               	movf	___fladd@a,w,c
  6409  0024EE  5E01               	subwf	___fladd@b,f,c
  6410  0024F0  5006               	movf	___fladd@a+1,w,c
  6411  0024F2  5A02               	subwfb	___fladd@b+1,f,c
  6412  0024F4  5007               	movf	___fladd@a+2,w,c
  6413  0024F6  5A03               	subwfb	___fladd@b+2,f,c
  6414  0024F8  5008               	movf	___fladd@a+3,w,c
  6415  0024FA  5A04               	subwfb	___fladd@b+3,f,c
  6416  0024FC                     l926:
  6417  0024FC  5001               	movf	___fladd@b,w,c
  6418  0024FE  1002               	iorwf	___fladd@b+1,w,c
  6419  002500  1003               	iorwf	___fladd@b+2,w,c
  6420  002502  1004               	iorwf	___fladd@b+3,w,c
  6421  002504  A4D8               	btfss	status,2,c
  6422  002506  D01C               	goto	l3462
  6423  002508  5010               	movf	___fladd@grs,w,c
  6424  00250A  A4D8               	btfss	status,2,c
  6425  00250C  D019               	goto	l3462
  6426  00250E  0E00               	movlw	0
  6427  002510  6E01               	movwf	?___fladd,c
  6428  002512  0E00               	movlw	0
  6429  002514  6E02               	movwf	?___fladd+1,c
  6430  002516  0E00               	movlw	0
  6431  002518  6E03               	movwf	?___fladd+2,c
  6432  00251A  0E00               	movlw	0
  6433  00251C  6E04               	movwf	?___fladd+3,c
  6434  00251E  0012               	return	
  6435  002520                     l3446:
  6436  002520  90D8               	bcf	status,0,c
  6437  002522  3601               	rlcf	___fladd@b,f,c
  6438  002524  3602               	rlcf	___fladd@b+1,f,c
  6439  002526  3603               	rlcf	___fladd@b+2,f,c
  6440  002528  3604               	rlcf	___fladd@b+3,f,c
  6441  00252A  BE10               	btfsc	___fladd@grs,7,c
  6442  00252C  8001               	bsf	___fladd@b,0,c
  6443  00252E  A010               	btfss	___fladd@grs,0,c
  6444  002530  D002               	goto	l3456
  6445  002532  80D8               	bsf	status,0,c
  6446  002534  D001               	goto	L11
  6447  002536                     l3456:
  6448  002536  90D8               	bcf	status,0,c
  6449  002538                     L11:
  6450  002538  3610               	rlcf	___fladd@grs,f,c
  6451  00253A  500F               	movf	___fladd@bexp,w,c
  6452  00253C  A4D8               	btfss	status,2,c
  6453  00253E  060F               	decf	___fladd@bexp,f,c
  6454  002540                     l3462:
  6455  002540  AE03               	btfss	___fladd@b+2,7,c
  6456  002542  D7EE               	goto	l3446
  6457  002544                     u3410:
  6458  002544  0E00               	movlw	0
  6459  002546  6E0E               	movwf	___fladd@aexp,c
  6460  002548  AE10               	btfss	___fladd@grs,7,c
  6461  00254A  D00B               	goto	l935
  6462  00254C  C010  F009         	movff	___fladd@grs,??___fladd
  6463  002550  0E7F               	movlw	127
  6464  002552  1609               	andwf	??___fladd,f,c
  6465  002554  B4D8               	btfsc	status,2,c
  6466  002556  D003               	goto	l936
  6467  002558                     u3430:
  6468  002558  0E01               	movlw	1
  6469  00255A  6E0E               	movwf	___fladd@aexp,c
  6470  00255C  D002               	goto	l935
  6471  00255E                     l936:
  6472  00255E  B001               	btfsc	___fladd@b,0,c
  6473  002560  D7FB               	goto	u3430
  6474  002562                     l935:
  6475  002562  500E               	movf	___fladd@aexp,w,c
  6476  002564  B4D8               	btfsc	status,2,c
  6477  002566  D020               	goto	l3482
  6478  002568  0E01               	movlw	1
  6479  00256A  2601               	addwf	___fladd@b,f,c
  6480  00256C  0E00               	movlw	0
  6481  00256E  2202               	addwfc	___fladd@b+1,f,c
  6482  002570  2203               	addwfc	___fladd@b+2,f,c
  6483  002572  2204               	addwfc	___fladd@b+3,f,c
  6484  002574  A004               	btfss	___fladd@b+3,0,c
  6485  002576  D018               	goto	l3482
  6486  002578  C001  F009         	movff	___fladd@b,??___fladd
  6487  00257C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6488  002580  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6489  002584  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6490  002588  340C               	rlcf	??___fladd+3,w,c
  6491  00258A  320C               	rrcf	??___fladd+3,f,c
  6492  00258C  320B               	rrcf	??___fladd+2,f,c
  6493  00258E  320A               	rrcf	??___fladd+1,f,c
  6494  002590  3209               	rrcf	??___fladd,f,c
  6495  002592  C009  F001         	movff	??___fladd,___fladd@b
  6496  002596  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6497  00259A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6498  00259E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6499  0025A2  280F               	incf	___fladd@bexp,w,c
  6500  0025A4  A4D8               	btfss	status,2,c
  6501  0025A6  2A0F               	incf	___fladd@bexp,f,c
  6502  0025A8                     l3482:
  6503  0025A8  280F               	incf	___fladd@bexp,w,c
  6504  0025AA  B4D8               	btfsc	status,2,c
  6505  0025AC  D003               	goto	u3490
  6506  0025AE  500F               	movf	___fladd@bexp,w,c
  6507  0025B0  A4D8               	btfss	status,2,c
  6508  0025B2  D00D               	goto	l3490
  6509  0025B4                     u3490:
  6510  0025B4  0E00               	movlw	0
  6511  0025B6  6E01               	movwf	___fladd@b,c
  6512  0025B8  0E00               	movlw	0
  6513  0025BA  6E02               	movwf	___fladd@b+1,c
  6514  0025BC  0E00               	movlw	0
  6515  0025BE  6E03               	movwf	___fladd@b+2,c
  6516  0025C0  0E00               	movlw	0
  6517  0025C2  6E04               	movwf	___fladd@b+3,c
  6518  0025C4  500F               	movf	___fladd@bexp,w,c
  6519  0025C6  A4D8               	btfss	status,2,c
  6520  0025C8  D002               	goto	l3490
  6521  0025CA  0E00               	movlw	0
  6522  0025CC  6E0D               	movwf	___fladd@signs,c
  6523  0025CE                     l3490:
  6524  0025CE  A00F               	btfss	___fladd@bexp,0,c
  6525  0025D0  D002               	goto	l3494
  6526  0025D2  8E03               	bsf	___fladd@b+2,7,c
  6527  0025D4  D001               	goto	l3496
  6528  0025D6                     l3494:
  6529  0025D6  9E03               	bcf	___fladd@b+2,7,c
  6530  0025D8                     l3496:
  6531  0025D8  90D8               	bcf	status,0,c
  6532  0025DA  300F               	rrcf	___fladd@bexp,w,c
  6533  0025DC  6E04               	movwf	___fladd@b+3,c
  6534  0025DE  BE0D               	btfsc	___fladd@signs,7,c
  6535  0025E0  8E04               	bsf	___fladd@b+3,7,c
  6536  0025E2  C001  F001         	movff	___fladd@b,?___fladd
  6537  0025E6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6538  0025EA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6539  0025EE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6540  0025F2  0012               	return		;funcret
  6541  0025F4                     __end_of___fladd:
  6542                           	opt callstack 0
  6543                           
  6544 ;; *************** function ___flneg *****************
  6545 ;; Defined at:
  6546 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  f1              4    0[COMRAM] unsigned char 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  4    0[COMRAM] unsigned char 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6560 ;;      Params:         4       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6563 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:        4 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_efgtoa
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text17
  6574  003FB2                     __ptext17:
  6575                           	opt callstack 0
  6576  003FB2                     ___flneg:
  6577                           	opt callstack 26
  6578                           
  6579                           ;incstack = 0
  6580  003FB2  5001               	movf	___flneg@f1,w,c
  6581  003FB4  1002               	iorwf	___flneg@f1+1,w,c
  6582  003FB6  1003               	iorwf	___flneg@f1+2,w,c
  6583  003FB8  1004               	iorwf	___flneg@f1+3,w,c
  6584  003FBA  B4D8               	btfsc	status,2,c
  6585  003FBC  D008               	goto	l4082
  6586  003FBE  0E00               	movlw	0
  6587  003FC0  1A01               	xorwf	___flneg@f1,f,c
  6588  003FC2  0E00               	movlw	0
  6589  003FC4  1A02               	xorwf	___flneg@f1+1,f,c
  6590  003FC6  0E00               	movlw	0
  6591  003FC8  1A03               	xorwf	___flneg@f1+2,f,c
  6592  003FCA  0E80               	movlw	128
  6593  003FCC  1A04               	xorwf	___flneg@f1+3,f,c
  6594  003FCE                     l4082:
  6595  003FCE  C001  F001         	movff	___flneg@f1,?___flneg
  6596  003FD2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6597  003FD6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6598  003FDA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6599  003FDE  0012               	return		;funcret
  6600  003FE0                     __end_of___flneg:
  6601                           	opt callstack 0
  6602                           
  6603 ;; *************** function ___flmul *****************
  6604 ;; Defined at:
  6605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  b               4    0[COMRAM] unsigned char 
  6608 ;;  a               4    4[COMRAM] unsigned char 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  prod            4   19[COMRAM] struct .
  6611 ;;  grs             4   13[COMRAM] unsigned long 
  6612 ;;  temp            2   23[COMRAM] struct .
  6613 ;;  bexp            1   18[COMRAM] unsigned char 
  6614 ;;  aexp            1   17[COMRAM] unsigned char 
  6615 ;;  sign            1   12[COMRAM] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  4    0[COMRAM] unsigned char 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0, prodl, prodh
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6625 ;;      Params:         8       0       0       0       0       0       0       0       0
  6626 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6627 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6628 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6629 ;;Total ram usage:       25 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_efgtoa
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text18
  6639  001F96                     __ptext18:
  6640                           	opt callstack 0
  6641  001F96                     ___flmul:
  6642                           	opt callstack 26
  6643                           
  6644                           ;incstack = 0
  6645  001F96  5004               	movf	___flmul@b+3,w,c
  6646  001F98  0B80               	andlw	128
  6647  001F9A  6E0D               	movwf	___flmul@sign,c
  6648  001F9C  5004               	movf	___flmul@b+3,w,c
  6649  001F9E  2404               	addwf	___flmul@b+3,w,c
  6650  001FA0  6E13               	movwf	___flmul@bexp,c
  6651  001FA2  BE03               	btfsc	___flmul@b+2,7,c
  6652  001FA4  8013               	bsf	___flmul@bexp,0,c
  6653  001FA6  5013               	movf	___flmul@bexp,w,c
  6654  001FA8  B4D8               	btfsc	status,2,c
  6655  001FAA  D00D               	goto	l3838
  6656  001FAC  2813               	incf	___flmul@bexp,w,c
  6657  001FAE  A4D8               	btfss	status,2,c
  6658  001FB0  D008               	goto	l3836
  6659  001FB2  0E00               	movlw	0
  6660  001FB4  6E01               	movwf	___flmul@b,c
  6661  001FB6  0E00               	movlw	0
  6662  001FB8  6E02               	movwf	___flmul@b+1,c
  6663  001FBA  0E00               	movlw	0
  6664  001FBC  6E03               	movwf	___flmul@b+2,c
  6665  001FBE  0E00               	movlw	0
  6666  001FC0  6E04               	movwf	___flmul@b+3,c
  6667  001FC2                     l3836:
  6668  001FC2  8E03               	bsf	___flmul@b+2,7,c
  6669  001FC4  D008               	goto	l3840
  6670  001FC6                     l3838:
  6671  001FC6  0E00               	movlw	0
  6672  001FC8  6E01               	movwf	___flmul@b,c
  6673  001FCA  0E00               	movlw	0
  6674  001FCC  6E02               	movwf	___flmul@b+1,c
  6675  001FCE  0E00               	movlw	0
  6676  001FD0  6E03               	movwf	___flmul@b+2,c
  6677  001FD2  0E00               	movlw	0
  6678  001FD4  6E04               	movwf	___flmul@b+3,c
  6679  001FD6                     l3840:
  6680  001FD6  5008               	movf	___flmul@a+3,w,c
  6681  001FD8  0B80               	andlw	128
  6682  001FDA  1A0D               	xorwf	___flmul@sign,f,c
  6683  001FDC  5008               	movf	___flmul@a+3,w,c
  6684  001FDE  2408               	addwf	___flmul@a+3,w,c
  6685  001FE0  6E12               	movwf	___flmul@aexp,c
  6686  001FE2  BE07               	btfsc	___flmul@a+2,7,c
  6687  001FE4  8012               	bsf	___flmul@aexp,0,c
  6688  001FE6  5012               	movf	___flmul@aexp,w,c
  6689  001FE8  B4D8               	btfsc	status,2,c
  6690  001FEA  D00D               	goto	l3856
  6691  001FEC  2812               	incf	___flmul@aexp,w,c
  6692  001FEE  A4D8               	btfss	status,2,c
  6693  001FF0  D008               	goto	l3854
  6694  001FF2  0E00               	movlw	0
  6695  001FF4  6E05               	movwf	___flmul@a,c
  6696  001FF6  0E00               	movlw	0
  6697  001FF8  6E06               	movwf	___flmul@a+1,c
  6698  001FFA  0E00               	movlw	0
  6699  001FFC  6E07               	movwf	___flmul@a+2,c
  6700  001FFE  0E00               	movlw	0
  6701  002000  6E08               	movwf	___flmul@a+3,c
  6702  002002                     l3854:
  6703  002002  8E07               	bsf	___flmul@a+2,7,c
  6704  002004  D008               	goto	l995
  6705  002006                     l3856:
  6706  002006  0E00               	movlw	0
  6707  002008  6E05               	movwf	___flmul@a,c
  6708  00200A  0E00               	movlw	0
  6709  00200C  6E06               	movwf	___flmul@a+1,c
  6710  00200E  0E00               	movlw	0
  6711  002010  6E07               	movwf	___flmul@a+2,c
  6712  002012  0E00               	movlw	0
  6713  002014  6E08               	movwf	___flmul@a+3,c
  6714  002016                     l995:
  6715  002016  5012               	movf	___flmul@aexp,w,c
  6716  002018  B4D8               	btfsc	status,2,c
  6717  00201A  D003               	goto	u4250
  6718  00201C  5013               	movf	___flmul@bexp,w,c
  6719  00201E  A4D8               	btfss	status,2,c
  6720  002020  D009               	goto	l3864
  6721  002022                     u4250:
  6722  002022  0E00               	movlw	0
  6723  002024  6E01               	movwf	?___flmul,c
  6724  002026  0E00               	movlw	0
  6725  002028  6E02               	movwf	?___flmul+1,c
  6726  00202A  0E00               	movlw	0
  6727  00202C  6E03               	movwf	?___flmul+2,c
  6728  00202E  0E00               	movlw	0
  6729  002030  6E04               	movwf	?___flmul+3,c
  6730  002032  0012               	return	
  6731  002034                     l3864:
  6732  002034  5007               	movf	___flmul@a+2,w,c
  6733  002036  0201               	mulwf	___flmul@b,c
  6734  002038  CFF3 F018          	movff	prodl,___flmul@temp
  6735  00203C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6736  002040  5018               	movf	___flmul@temp,w,c
  6737  002042  6E0E               	movwf	___flmul@grs,c
  6738  002044  6A0F               	clrf	___flmul@grs+1,c
  6739  002046  6A10               	clrf	___flmul@grs+2,c
  6740  002048  6A11               	clrf	___flmul@grs+3,c
  6741  00204A  5019               	movf	___flmul@temp+1,w,c
  6742  00204C  6E14               	movwf	___flmul@prod,c
  6743  00204E  6A15               	clrf	___flmul@prod+1,c
  6744  002050  6A16               	clrf	___flmul@prod+2,c
  6745  002052  6A17               	clrf	___flmul@prod+3,c
  6746  002054  5006               	movf	___flmul@a+1,w,c
  6747  002056  0202               	mulwf	___flmul@b+1,c
  6748  002058  CFF3 F018          	movff	prodl,___flmul@temp
  6749  00205C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6750  002060  5018               	movf	___flmul@temp,w,c
  6751  002062  260E               	addwf	___flmul@grs,f,c
  6752  002064  0E00               	movlw	0
  6753  002066  220F               	addwfc	___flmul@grs+1,f,c
  6754  002068  2210               	addwfc	___flmul@grs+2,f,c
  6755  00206A  2211               	addwfc	___flmul@grs+3,f,c
  6756  00206C  5019               	movf	___flmul@temp+1,w,c
  6757  00206E  2614               	addwf	___flmul@prod,f,c
  6758  002070  0E00               	movlw	0
  6759  002072  2215               	addwfc	___flmul@prod+1,f,c
  6760  002074  2216               	addwfc	___flmul@prod+2,f,c
  6761  002076  2217               	addwfc	___flmul@prod+3,f,c
  6762  002078  5005               	movf	___flmul@a,w,c
  6763  00207A  0203               	mulwf	___flmul@b+2,c
  6764  00207C  CFF3 F018          	movff	prodl,___flmul@temp
  6765  002080  CFF4 F019          	movff	prodh,___flmul@temp+1
  6766  002084  5018               	movf	___flmul@temp,w,c
  6767  002086  260E               	addwf	___flmul@grs,f,c
  6768  002088  0E00               	movlw	0
  6769  00208A  220F               	addwfc	___flmul@grs+1,f,c
  6770  00208C  2210               	addwfc	___flmul@grs+2,f,c
  6771  00208E  2211               	addwfc	___flmul@grs+3,f,c
  6772  002090  5019               	movf	___flmul@temp+1,w,c
  6773  002092  2614               	addwf	___flmul@prod,f,c
  6774  002094  0E00               	movlw	0
  6775  002096  2215               	addwfc	___flmul@prod+1,f,c
  6776  002098  2216               	addwfc	___flmul@prod+2,f,c
  6777  00209A  2217               	addwfc	___flmul@prod+3,f,c
  6778  00209C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6779  0020A0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6780  0020A4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6781  0020A8  6A0E               	clrf	___flmul@grs,c
  6782  0020AA  5005               	movf	___flmul@a,w,c
  6783  0020AC  0202               	mulwf	___flmul@b+1,c
  6784  0020AE  CFF3 F018          	movff	prodl,___flmul@temp
  6785  0020B2  CFF4 F019          	movff	prodh,___flmul@temp+1
  6786  0020B6  5018               	movf	___flmul@temp,w,c
  6787  0020B8  260E               	addwf	___flmul@grs,f,c
  6788  0020BA  5019               	movf	___flmul@temp+1,w,c
  6789  0020BC  220F               	addwfc	___flmul@grs+1,f,c
  6790  0020BE  0E00               	movlw	0
  6791  0020C0  2210               	addwfc	___flmul@grs+2,f,c
  6792  0020C2  0E00               	movlw	0
  6793  0020C4  2211               	addwfc	___flmul@grs+3,f,c
  6794  0020C6  5006               	movf	___flmul@a+1,w,c
  6795  0020C8  0201               	mulwf	___flmul@b,c
  6796  0020CA  CFF3 F018          	movff	prodl,___flmul@temp
  6797  0020CE  CFF4 F019          	movff	prodh,___flmul@temp+1
  6798  0020D2  5018               	movf	___flmul@temp,w,c
  6799  0020D4  260E               	addwf	___flmul@grs,f,c
  6800  0020D6  5019               	movf	___flmul@temp+1,w,c
  6801  0020D8  220F               	addwfc	___flmul@grs+1,f,c
  6802  0020DA  0E00               	movlw	0
  6803  0020DC  2210               	addwfc	___flmul@grs+2,f,c
  6804  0020DE  0E00               	movlw	0
  6805  0020E0  2211               	addwfc	___flmul@grs+3,f,c
  6806  0020E2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6807  0020E6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6808  0020EA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6809  0020EE  6A0E               	clrf	___flmul@grs,c
  6810  0020F0  5005               	movf	___flmul@a,w,c
  6811  0020F2  0201               	mulwf	___flmul@b,c
  6812  0020F4  CFF3 F018          	movff	prodl,___flmul@temp
  6813  0020F8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6814  0020FC  5018               	movf	___flmul@temp,w,c
  6815  0020FE  260E               	addwf	___flmul@grs,f,c
  6816  002100  5019               	movf	___flmul@temp+1,w,c
  6817  002102  220F               	addwfc	___flmul@grs+1,f,c
  6818  002104  0E00               	movlw	0
  6819  002106  2210               	addwfc	___flmul@grs+2,f,c
  6820  002108  0E00               	movlw	0
  6821  00210A  2211               	addwfc	___flmul@grs+3,f,c
  6822  00210C  5007               	movf	___flmul@a+2,w,c
  6823  00210E  0202               	mulwf	___flmul@b+1,c
  6824  002110  CFF3 F018          	movff	prodl,___flmul@temp
  6825  002114  CFF4 F019          	movff	prodh,___flmul@temp+1
  6826  002118  5018               	movf	___flmul@temp,w,c
  6827  00211A  2614               	addwf	___flmul@prod,f,c
  6828  00211C  5019               	movf	___flmul@temp+1,w,c
  6829  00211E  2215               	addwfc	___flmul@prod+1,f,c
  6830  002120  0E00               	movlw	0
  6831  002122  2216               	addwfc	___flmul@prod+2,f,c
  6832  002124  0E00               	movlw	0
  6833  002126  2217               	addwfc	___flmul@prod+3,f,c
  6834  002128  5006               	movf	___flmul@a+1,w,c
  6835  00212A  0203               	mulwf	___flmul@b+2,c
  6836  00212C  CFF3 F018          	movff	prodl,___flmul@temp
  6837  002130  CFF4 F019          	movff	prodh,___flmul@temp+1
  6838  002134  5018               	movf	___flmul@temp,w,c
  6839  002136  2614               	addwf	___flmul@prod,f,c
  6840  002138  5019               	movf	___flmul@temp+1,w,c
  6841  00213A  2215               	addwfc	___flmul@prod+1,f,c
  6842  00213C  0E00               	movlw	0
  6843  00213E  2216               	addwfc	___flmul@prod+2,f,c
  6844  002140  0E00               	movlw	0
  6845  002142  2217               	addwfc	___flmul@prod+3,f,c
  6846  002144  5007               	movf	___flmul@a+2,w,c
  6847  002146  0203               	mulwf	___flmul@b+2,c
  6848  002148  CFF3 F018          	movff	prodl,___flmul@temp
  6849  00214C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6850  002150  5018               	movf	___flmul@temp,w,c
  6851  002152  6E09               	movwf	??___flmul& (0+255),c
  6852  002154  5019               	movf	___flmul@temp+1,w,c
  6853  002156  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6854  002158  6A0B               	clrf	(??___flmul+2)& (0+255),c
  6855  00215A  6A0C               	clrf	(??___flmul+3)& (0+255),c
  6856  00215C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6857  002160  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6858  002164  C009  F00A         	movff	??___flmul,??___flmul+1
  6859  002168  6A09               	clrf	??___flmul,c
  6860  00216A  5009               	movf	??___flmul,w,c
  6861  00216C  2614               	addwf	___flmul@prod,f,c
  6862  00216E  500A               	movf	??___flmul+1,w,c
  6863  002170  2215               	addwfc	___flmul@prod+1,f,c
  6864  002172  500B               	movf	??___flmul+2,w,c
  6865  002174  2216               	addwfc	___flmul@prod+2,f,c
  6866  002176  500C               	movf	??___flmul+3,w,c
  6867  002178  2217               	addwfc	___flmul@prod+3,f,c
  6868  00217A  C00E  F009         	movff	___flmul@grs,??___flmul
  6869  00217E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6870  002182  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6871  002186  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6872  00218A  0E19               	movlw	25
  6873  00218C  D005               	goto	u4260
  6874  00218E                     u4265:
  6875  00218E  90D8               	bcf	status,0,c
  6876  002190  320C               	rrcf	??___flmul+3,f,c
  6877  002192  320B               	rrcf	??___flmul+2,f,c
  6878  002194  320A               	rrcf	??___flmul+1,f,c
  6879  002196  3209               	rrcf	??___flmul,f,c
  6880  002198                     u4260:
  6881  002198  2EE8               	decfsz	wreg,f,c
  6882  00219A  D7F9               	goto	u4265
  6883  00219C  5009               	movf	??___flmul,w,c
  6884  00219E  2614               	addwf	___flmul@prod,f,c
  6885  0021A0  500A               	movf	??___flmul+1,w,c
  6886  0021A2  2215               	addwfc	___flmul@prod+1,f,c
  6887  0021A4  500B               	movf	??___flmul+2,w,c
  6888  0021A6  2216               	addwfc	___flmul@prod+2,f,c
  6889  0021A8  500C               	movf	??___flmul+3,w,c
  6890  0021AA  2217               	addwfc	___flmul@prod+3,f,c
  6891  0021AC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6892  0021B0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6893  0021B4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6894  0021B8  6A0E               	clrf	___flmul@grs,c
  6895  0021BA  5012               	movf	___flmul@aexp,w,c
  6896  0021BC  C013  F009         	movff	___flmul@bexp,??___flmul
  6897  0021C0  6A0A               	clrf	(??___flmul+1)& (0+255),c
  6898  0021C2  2609               	addwf	??___flmul,f,c
  6899  0021C4  0E00               	movlw	0
  6900  0021C6  220A               	addwfc	??___flmul+1,f,c
  6901  0021C8  0E82               	movlw	130
  6902  0021CA  2409               	addwf	??___flmul,w,c
  6903  0021CC  6E18               	movwf	___flmul@temp,c
  6904  0021CE  0EFF               	movlw	255
  6905  0021D0  200A               	addwfc	??___flmul+1,w,c
  6906  0021D2  6E19               	movwf	___flmul@temp+1,c
  6907  0021D4  D00F               	goto	l3912
  6908  0021D6                     l3906:
  6909  0021D6  90D8               	bcf	status,0,c
  6910  0021D8  3614               	rlcf	___flmul@prod,f,c
  6911  0021DA  3615               	rlcf	___flmul@prod+1,f,c
  6912  0021DC  3616               	rlcf	___flmul@prod+2,f,c
  6913  0021DE  3617               	rlcf	___flmul@prod+3,f,c
  6914  0021E0  BE11               	btfsc	___flmul@grs+3,7,c
  6915  0021E2  8014               	bsf	___flmul@prod,0,c
  6916  0021E4  90D8               	bcf	status,0,c
  6917  0021E6  360E               	rlcf	___flmul@grs,f,c
  6918  0021E8  360F               	rlcf	___flmul@grs+1,f,c
  6919  0021EA  3610               	rlcf	___flmul@grs+2,f,c
  6920  0021EC  3611               	rlcf	___flmul@grs+3,f,c
  6921  0021EE  0618               	decf	___flmul@temp,f,c
  6922  0021F0  A0D8               	btfss	status,0,c
  6923  0021F2  0619               	decf	___flmul@temp+1,f,c
  6924  0021F4                     l3912:
  6925  0021F4  AE16               	btfss	___flmul@prod+2,7,c
  6926  0021F6  D7EF               	goto	l3906
  6927  0021F8  0E00               	movlw	0
  6928  0021FA  6E12               	movwf	___flmul@aexp,c
  6929  0021FC  AE11               	btfss	___flmul@grs+3,7,c
  6930  0021FE  D017               	goto	l1004
  6931  002200  0EFF               	movlw	255
  6932  002202  140E               	andwf	___flmul@grs,w,c
  6933  002204  6E09               	movwf	??___flmul& (0+255),c
  6934  002206  0EFF               	movlw	255
  6935  002208  140F               	andwf	___flmul@grs+1,w,c
  6936  00220A  6E0A               	movwf	(??___flmul+1)& (0+255),c
  6937  00220C  0EFF               	movlw	255
  6938  00220E  1410               	andwf	___flmul@grs+2,w,c
  6939  002210  6E0B               	movwf	(??___flmul+2)& (0+255),c
  6940  002212  0E7F               	movlw	127
  6941  002214  1411               	andwf	___flmul@grs+3,w,c
  6942  002216  6E0C               	movwf	(??___flmul+3)& (0+255),c
  6943  002218  5009               	movf	??___flmul,w,c
  6944  00221A  100A               	iorwf	??___flmul+1,w,c
  6945  00221C  100B               	iorwf	??___flmul+2,w,c
  6946  00221E  100C               	iorwf	??___flmul+3,w,c
  6947  002220  B4D8               	btfsc	status,2,c
  6948  002222  D003               	goto	l1005
  6949  002224                     u4300:
  6950  002224  0E01               	movlw	1
  6951  002226  6E12               	movwf	___flmul@aexp,c
  6952  002228  D002               	goto	l1004
  6953  00222A                     l1005:
  6954  00222A  B014               	btfsc	___flmul@prod,0,c
  6955  00222C  D7FB               	goto	u4300
  6956  00222E                     l1004:
  6957  00222E  5012               	movf	___flmul@aexp,w,c
  6958  002230  B4D8               	btfsc	status,2,c
  6959  002232  D01F               	goto	l3932
  6960  002234  0E01               	movlw	1
  6961  002236  2614               	addwf	___flmul@prod,f,c
  6962  002238  0E00               	movlw	0
  6963  00223A  2215               	addwfc	___flmul@prod+1,f,c
  6964  00223C  2216               	addwfc	___flmul@prod+2,f,c
  6965  00223E  2217               	addwfc	___flmul@prod+3,f,c
  6966  002240  A017               	btfss	___flmul@prod+3,0,c
  6967  002242  D017               	goto	l3932
  6968  002244  C014  F009         	movff	___flmul@prod,??___flmul
  6969  002248  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6970  00224C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6971  002250  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6972  002254  340C               	rlcf	??___flmul+3,w,c
  6973  002256  320C               	rrcf	??___flmul+3,f,c
  6974  002258  320B               	rrcf	??___flmul+2,f,c
  6975  00225A  320A               	rrcf	??___flmul+1,f,c
  6976  00225C  3209               	rrcf	??___flmul,f,c
  6977  00225E  C009  F014         	movff	??___flmul,___flmul@prod
  6978  002262  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6979  002266  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6980  00226A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6981  00226E  4A18               	infsnz	___flmul@temp,f,c
  6982  002270  2A19               	incf	___flmul@temp+1,f,c
  6983  002272                     l3932:
  6984  002272  BE19               	btfsc	___flmul@temp+1,7,c
  6985  002274  D00D               	goto	l3936
  6986  002276  5019               	movf	___flmul@temp+1,w,c
  6987  002278  E103               	bnz	u4340
  6988  00227A  2818               	incf	___flmul@temp,w,c
  6989  00227C  A0D8               	btfss	status,0,c
  6990  00227E  D008               	goto	l3936
  6991  002280                     u4340:
  6992  002280  0E00               	movlw	0
  6993  002282  6E14               	movwf	___flmul@prod,c
  6994  002284  0E00               	movlw	0
  6995  002286  6E15               	movwf	___flmul@prod+1,c
  6996  002288  0E80               	movlw	128
  6997  00228A  6E16               	movwf	___flmul@prod+2,c
  6998  00228C  0E7F               	movlw	127
  6999  00228E  D020               	goto	L12
  7000  002290                     l3936:
  7001  002290  BE19               	btfsc	___flmul@temp+1,7,c
  7002  002292  D005               	goto	u4350
  7003  002294  5019               	movf	___flmul@temp+1,w,c
  7004  002296  E10E               	bnz	l1012
  7005  002298  0418               	decf	___flmul@temp,w,c
  7006  00229A  B0D8               	btfsc	status,0,c
  7007  00229C  D00B               	goto	l1012
  7008  00229E                     u4350:
  7009  00229E  0E00               	movlw	0
  7010  0022A0  6E14               	movwf	___flmul@prod,c
  7011  0022A2  0E00               	movlw	0
  7012  0022A4  6E15               	movwf	___flmul@prod+1,c
  7013  0022A6  0E00               	movlw	0
  7014  0022A8  6E16               	movwf	___flmul@prod+2,c
  7015  0022AA  0E00               	movlw	0
  7016  0022AC  6E17               	movwf	___flmul@prod+3,c
  7017  0022AE  0E00               	movlw	0
  7018  0022B0  6E0D               	movwf	___flmul@sign,c
  7019  0022B2  D00F               	goto	l3948
  7020  0022B4                     l1012:
  7021  0022B4  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7022  0022B8  0EFF               	movlw	255
  7023  0022BA  1614               	andwf	___flmul@prod,f,c
  7024  0022BC  0EFF               	movlw	255
  7025  0022BE  1615               	andwf	___flmul@prod+1,f,c
  7026  0022C0  0E7F               	movlw	127
  7027  0022C2  1616               	andwf	___flmul@prod+2,f,c
  7028  0022C4  0E00               	movlw	0
  7029  0022C6  1617               	andwf	___flmul@prod+3,f,c
  7030  0022C8  B013               	btfsc	___flmul@bexp,0,c
  7031  0022CA  8E16               	bsf	___flmul@prod+2,7,c
  7032  0022CC  90D8               	bcf	status,0,c
  7033  0022CE  3013               	rrcf	___flmul@bexp,w,c
  7034  0022D0                     L12:
  7035  0022D0  6E17               	movwf	___flmul@prod+3,c
  7036  0022D2                     l3948:
  7037  0022D2  500D               	movf	___flmul@sign,w,c
  7038  0022D4  1217               	iorwf	___flmul@prod+3,f,c
  7039  0022D6  C014  F001         	movff	___flmul@prod,?___flmul
  7040  0022DA  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7041  0022DE  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7042  0022E2  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7043  0022E6  0012               	return		;funcret
  7044  0022E8                     __end_of___flmul:
  7045                           	opt callstack 0
  7046                           
  7047 ;; *************** function ___flge *****************
  7048 ;; Defined at:
  7049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  ff1             4   25[COMRAM] unsigned char 
  7052 ;;  ff2             4   29[COMRAM] unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;		None               void
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7064 ;;      Params:         8       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7067 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:       12 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_main
  7074 ;;		_efgtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text19
  7079  003590                     __ptext19:
  7080                           	opt callstack 0
  7081  003590                     ___flge:
  7082                           	opt callstack 26
  7083                           
  7084                           ;incstack = 0
  7085  003590  0E00               	movlw	0
  7086  003592  141A               	andwf	___flge@ff1,w,c
  7087  003594  6E22               	movwf	??___flge& (0+255),c
  7088  003596  0E00               	movlw	0
  7089  003598  141B               	andwf	___flge@ff1+1,w,c
  7090  00359A  6E23               	movwf	(??___flge+1)& (0+255),c
  7091  00359C  0E80               	movlw	128
  7092  00359E  141C               	andwf	___flge@ff1+2,w,c
  7093  0035A0  6E24               	movwf	(??___flge+2)& (0+255),c
  7094  0035A2  0E7F               	movlw	127
  7095  0035A4  141D               	andwf	___flge@ff1+3,w,c
  7096  0035A6  6E25               	movwf	(??___flge+3)& (0+255),c
  7097  0035A8  5022               	movf	??___flge,w,c
  7098  0035AA  1023               	iorwf	??___flge+1,w,c
  7099  0035AC  1024               	iorwf	??___flge+2,w,c
  7100  0035AE  1025               	iorwf	??___flge+3,w,c
  7101  0035B0  A4D8               	btfss	status,2,c
  7102  0035B2  D008               	goto	l4060
  7103  0035B4  0E00               	movlw	0
  7104  0035B6  6E1A               	movwf	___flge@ff1,c
  7105  0035B8  0E00               	movlw	0
  7106  0035BA  6E1B               	movwf	___flge@ff1+1,c
  7107  0035BC  0E00               	movlw	0
  7108  0035BE  6E1C               	movwf	___flge@ff1+2,c
  7109  0035C0  0E00               	movlw	0
  7110  0035C2  6E1D               	movwf	___flge@ff1+3,c
  7111  0035C4                     l4060:
  7112  0035C4  0E00               	movlw	0
  7113  0035C6  141E               	andwf	___flge@ff2,w,c
  7114  0035C8  6E22               	movwf	??___flge& (0+255),c
  7115  0035CA  0E00               	movlw	0
  7116  0035CC  141F               	andwf	___flge@ff2+1,w,c
  7117  0035CE  6E23               	movwf	(??___flge+1)& (0+255),c
  7118  0035D0  0E80               	movlw	128
  7119  0035D2  1420               	andwf	___flge@ff2+2,w,c
  7120  0035D4  6E24               	movwf	(??___flge+2)& (0+255),c
  7121  0035D6  0E7F               	movlw	127
  7122  0035D8  1421               	andwf	___flge@ff2+3,w,c
  7123  0035DA  6E25               	movwf	(??___flge+3)& (0+255),c
  7124  0035DC  5022               	movf	??___flge,w,c
  7125  0035DE  1023               	iorwf	??___flge+1,w,c
  7126  0035E0  1024               	iorwf	??___flge+2,w,c
  7127  0035E2  1025               	iorwf	??___flge+3,w,c
  7128  0035E4  A4D8               	btfss	status,2,c
  7129  0035E6  D008               	goto	l4064
  7130  0035E8  0E00               	movlw	0
  7131  0035EA  6E1E               	movwf	___flge@ff2,c
  7132  0035EC  0E00               	movlw	0
  7133  0035EE  6E1F               	movwf	___flge@ff2+1,c
  7134  0035F0  0E00               	movlw	0
  7135  0035F2  6E20               	movwf	___flge@ff2+2,c
  7136  0035F4  0E00               	movlw	0
  7137  0035F6  6E21               	movwf	___flge@ff2+3,c
  7138  0035F8                     l4064:
  7139  0035F8  AE1D               	btfss	___flge@ff1+3,7,c
  7140  0035FA  D009               	goto	l4068
  7141  0035FC  6C1A               	negf	___flge@ff1,c
  7142  0035FE  1E1B               	comf	___flge@ff1+1,f,c
  7143  003600  B0D8               	btfsc	status,0,c
  7144  003602  2A1B               	incf	___flge@ff1+1,f,c
  7145  003604  1E1C               	comf	___flge@ff1+2,f,c
  7146  003606  B0D8               	btfsc	status,0,c
  7147  003608  2A1C               	incf	___flge@ff1+2,f,c
  7148  00360A  0E80               	movlw	128
  7149  00360C  561D               	subfwb	___flge@ff1+3,f,c
  7150  00360E                     l4068:
  7151  00360E  AE21               	btfss	___flge@ff2+3,7,c
  7152  003610  D009               	goto	l646
  7153  003612  6C1E               	negf	___flge@ff2,c
  7154  003614  1E1F               	comf	___flge@ff2+1,f,c
  7155  003616  B0D8               	btfsc	status,0,c
  7156  003618  2A1F               	incf	___flge@ff2+1,f,c
  7157  00361A  1E20               	comf	___flge@ff2+2,f,c
  7158  00361C  B0D8               	btfsc	status,0,c
  7159  00361E  2A20               	incf	___flge@ff2+2,f,c
  7160  003620  0E80               	movlw	128
  7161  003622  5621               	subfwb	___flge@ff2+3,f,c
  7162  003624                     l646:
  7163  003624  0E00               	movlw	0
  7164  003626  1A1A               	xorwf	___flge@ff1,f,c
  7165  003628  0E00               	movlw	0
  7166  00362A  1A1B               	xorwf	___flge@ff1+1,f,c
  7167  00362C  0E00               	movlw	0
  7168  00362E  1A1C               	xorwf	___flge@ff1+2,f,c
  7169  003630  0E80               	movlw	128
  7170  003632  1A1D               	xorwf	___flge@ff1+3,f,c
  7171  003634  0E00               	movlw	0
  7172  003636  1A1E               	xorwf	___flge@ff2,f,c
  7173  003638  0E00               	movlw	0
  7174  00363A  1A1F               	xorwf	___flge@ff2+1,f,c
  7175  00363C  0E00               	movlw	0
  7176  00363E  1A20               	xorwf	___flge@ff2+2,f,c
  7177  003640  0E80               	movlw	128
  7178  003642  1A21               	xorwf	___flge@ff2+3,f,c
  7179  003644  501E               	movf	___flge@ff2,w,c
  7180  003646  5C1A               	subwf	___flge@ff1,w,c
  7181  003648  501F               	movf	___flge@ff2+1,w,c
  7182  00364A  581B               	subwfb	___flge@ff1+1,w,c
  7183  00364C  5020               	movf	___flge@ff2+2,w,c
  7184  00364E  581C               	subwfb	___flge@ff1+2,w,c
  7185  003650  5021               	movf	___flge@ff2+3,w,c
  7186  003652  581D               	subwfb	___flge@ff1+3,w,c
  7187  003654  B0D8               	btfsc	status,0,c
  7188  003656  D002               	goto	l4074
  7189  003658  90D8               	bcf	status,0,c
  7190  00365A  0012               	return	
  7191  00365C                     l4074:
  7192  00365C  80D8               	bsf	status,0,c
  7193  00365E  0012               	return		;funcret
  7194  003660                     __end_of___flge:
  7195                           	opt callstack 0
  7196                           
  7197 ;; *************** function ___fleq *****************
  7198 ;; Defined at:
  7199 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  ff1             4    0[COMRAM] unsigned char 
  7202 ;;  ff2             4    4[COMRAM] unsigned char 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;		None               void
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7214 ;;      Params:         8       0       0       0       0       0       0       0       0
  7215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7216 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7217 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7218 ;;Total ram usage:       12 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;;		_efgtoa
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text20
  7229  003A4C                     __ptext20:
  7230                           	opt callstack 0
  7231  003A4C                     ___fleq:
  7232                           	opt callstack 26
  7233                           
  7234                           ;incstack = 0
  7235  003A4C  0E00               	movlw	0
  7236  003A4E  1401               	andwf	___fleq@ff1,w,c
  7237  003A50  6E09               	movwf	??___fleq& (0+255),c
  7238  003A52  0E00               	movlw	0
  7239  003A54  1402               	andwf	___fleq@ff1+1,w,c
  7240  003A56  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7241  003A58  0E80               	movlw	128
  7242  003A5A  1403               	andwf	___fleq@ff1+2,w,c
  7243  003A5C  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7244  003A5E  0E7F               	movlw	127
  7245  003A60  1404               	andwf	___fleq@ff1+3,w,c
  7246  003A62  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7247  003A64  5009               	movf	??___fleq,w,c
  7248  003A66  100A               	iorwf	??___fleq+1,w,c
  7249  003A68  100B               	iorwf	??___fleq+2,w,c
  7250  003A6A  100C               	iorwf	??___fleq+3,w,c
  7251  003A6C  A4D8               	btfss	status,2,c
  7252  003A6E  D008               	goto	l4044
  7253  003A70  0E00               	movlw	0
  7254  003A72  6E01               	movwf	___fleq@ff1,c
  7255  003A74  0E00               	movlw	0
  7256  003A76  6E02               	movwf	___fleq@ff1+1,c
  7257  003A78  0E00               	movlw	0
  7258  003A7A  6E03               	movwf	___fleq@ff1+2,c
  7259  003A7C  0E00               	movlw	0
  7260  003A7E  6E04               	movwf	___fleq@ff1+3,c
  7261  003A80                     l4044:
  7262  003A80  0E00               	movlw	0
  7263  003A82  1405               	andwf	___fleq@ff2,w,c
  7264  003A84  6E09               	movwf	??___fleq& (0+255),c
  7265  003A86  0E00               	movlw	0
  7266  003A88  1406               	andwf	___fleq@ff2+1,w,c
  7267  003A8A  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7268  003A8C  0E80               	movlw	128
  7269  003A8E  1407               	andwf	___fleq@ff2+2,w,c
  7270  003A90  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7271  003A92  0E7F               	movlw	127
  7272  003A94  1408               	andwf	___fleq@ff2+3,w,c
  7273  003A96  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7274  003A98  5009               	movf	??___fleq,w,c
  7275  003A9A  100A               	iorwf	??___fleq+1,w,c
  7276  003A9C  100B               	iorwf	??___fleq+2,w,c
  7277  003A9E  100C               	iorwf	??___fleq+3,w,c
  7278  003AA0  A4D8               	btfss	status,2,c
  7279  003AA2  D008               	goto	l4048
  7280  003AA4  0E00               	movlw	0
  7281  003AA6  6E05               	movwf	___fleq@ff2,c
  7282  003AA8  0E00               	movlw	0
  7283  003AAA  6E06               	movwf	___fleq@ff2+1,c
  7284  003AAC  0E00               	movlw	0
  7285  003AAE  6E07               	movwf	___fleq@ff2+2,c
  7286  003AB0  0E00               	movlw	0
  7287  003AB2  6E08               	movwf	___fleq@ff2+3,c
  7288  003AB4                     l4048:
  7289  003AB4  5005               	movf	___fleq@ff2,w,c
  7290  003AB6  1801               	xorwf	___fleq@ff1,w,c
  7291  003AB8  E10A               	bnz	u4510
  7292  003ABA  5006               	movf	___fleq@ff2+1,w,c
  7293  003ABC  1802               	xorwf	___fleq@ff1+1,w,c
  7294  003ABE  E107               	bnz	u4510
  7295  003AC0  5007               	movf	___fleq@ff2+2,w,c
  7296  003AC2  1803               	xorwf	___fleq@ff1+2,w,c
  7297  003AC4  E104               	bnz	u4510
  7298  003AC6  5008               	movf	___fleq@ff2+3,w,c
  7299  003AC8  1804               	xorwf	___fleq@ff1+3,w,c
  7300  003ACA  B4D8               	btfsc	status,2,c
  7301  003ACC  D002               	goto	l4052
  7302  003ACE                     u4510:
  7303  003ACE  90D8               	bcf	status,0,c
  7304  003AD0  0012               	return	
  7305  003AD2                     l4052:
  7306  003AD2  80D8               	bsf	status,0,c
  7307  003AD4  0012               	return		;funcret
  7308  003AD6                     __end_of___fleq:
  7309                           	opt callstack 0
  7310                           
  7311 ;; *************** function ___fldiv *****************
  7312 ;; Defined at:
  7313 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  b               4    0[COMRAM] unsigned char 
  7316 ;;  a               4    4[COMRAM] unsigned char 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  grs             4   19[COMRAM] unsigned long 
  7319 ;;  rem             4   12[COMRAM] unsigned long 
  7320 ;;  new_exp         2   17[COMRAM] short 
  7321 ;;  aexp            1   24[COMRAM] unsigned char 
  7322 ;;  bexp            1   23[COMRAM] unsigned char 
  7323 ;;  sign            1   16[COMRAM] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4    0[COMRAM] unsigned char 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7333 ;;      Params:         8       0       0       0       0       0       0       0       0
  7334 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7335 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7336 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7337 ;;Total ram usage:       25 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_efgtoa
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text21
  7347  0025F4                     __ptext21:
  7348                           	opt callstack 0
  7349  0025F4                     ___fldiv:
  7350                           	opt callstack 26
  7351                           
  7352                           ;incstack = 0
  7353  0025F4  5004               	movf	___fldiv@b+3,w,c
  7354  0025F6  0B80               	andlw	128
  7355  0025F8  6E11               	movwf	___fldiv@sign,c
  7356  0025FA  5004               	movf	___fldiv@b+3,w,c
  7357  0025FC  2404               	addwf	___fldiv@b+3,w,c
  7358  0025FE  6E18               	movwf	___fldiv@bexp,c
  7359  002600  BE03               	btfsc	___fldiv@b+2,7,c
  7360  002602  8018               	bsf	___fldiv@bexp,0,c
  7361  002604  5018               	movf	___fldiv@bexp,w,c
  7362  002606  B4D8               	btfsc	status,2,c
  7363  002608  D00D               	goto	l3702
  7364  00260A  2818               	incf	___fldiv@bexp,w,c
  7365  00260C  A4D8               	btfss	status,2,c
  7366  00260E  D008               	goto	l3698
  7367  002610  0E00               	movlw	0
  7368  002612  6E01               	movwf	___fldiv@b,c
  7369  002614  0E00               	movlw	0
  7370  002616  6E02               	movwf	___fldiv@b+1,c
  7371  002618  0E00               	movlw	0
  7372  00261A  6E03               	movwf	___fldiv@b+2,c
  7373  00261C  0E00               	movlw	0
  7374  00261E  6E04               	movwf	___fldiv@b+3,c
  7375  002620                     l3698:
  7376  002620  8E03               	bsf	___fldiv@b+2,7,c
  7377  002622  D006               	goto	L13
  7378  002624                     l3702:
  7379  002624  0E00               	movlw	0
  7380  002626  6E01               	movwf	___fldiv@b,c
  7381  002628  0E00               	movlw	0
  7382  00262A  6E02               	movwf	___fldiv@b+1,c
  7383  00262C  0E00               	movlw	0
  7384  00262E  6E03               	movwf	___fldiv@b+2,c
  7385  002630                     L13:
  7386  002630  0E00               	movlw	0
  7387  002632  6E04               	movwf	___fldiv@b+3,c
  7388  002634  5008               	movf	___fldiv@a+3,w,c
  7389  002636  0B80               	andlw	128
  7390  002638  1A11               	xorwf	___fldiv@sign,f,c
  7391  00263A  5008               	movf	___fldiv@a+3,w,c
  7392  00263C  2408               	addwf	___fldiv@a+3,w,c
  7393  00263E  6E19               	movwf	___fldiv@aexp,c
  7394  002640  BE07               	btfsc	___fldiv@a+2,7,c
  7395  002642  8019               	bsf	___fldiv@aexp,0,c
  7396  002644  5019               	movf	___fldiv@aexp,w,c
  7397  002646  B4D8               	btfsc	status,2,c
  7398  002648  D00D               	goto	l3722
  7399  00264A  2819               	incf	___fldiv@aexp,w,c
  7400  00264C  A4D8               	btfss	status,2,c
  7401  00264E  D008               	goto	l3718
  7402  002650  0E00               	movlw	0
  7403  002652  6E05               	movwf	___fldiv@a,c
  7404  002654  0E00               	movlw	0
  7405  002656  6E06               	movwf	___fldiv@a+1,c
  7406  002658  0E00               	movlw	0
  7407  00265A  6E07               	movwf	___fldiv@a+2,c
  7408  00265C  0E00               	movlw	0
  7409  00265E  6E08               	movwf	___fldiv@a+3,c
  7410  002660                     l3718:
  7411  002660  8E07               	bsf	___fldiv@a+2,7,c
  7412  002662  D006               	goto	L14
  7413  002664                     l3722:
  7414  002664  0E00               	movlw	0
  7415  002666  6E05               	movwf	___fldiv@a,c
  7416  002668  0E00               	movlw	0
  7417  00266A  6E06               	movwf	___fldiv@a+1,c
  7418  00266C  0E00               	movlw	0
  7419  00266E  6E07               	movwf	___fldiv@a+2,c
  7420  002670                     L14:
  7421  002670  0E00               	movlw	0
  7422  002672  6E08               	movwf	___fldiv@a+3,c
  7423  002674  5005               	movf	___fldiv@a,w,c
  7424  002676  1006               	iorwf	___fldiv@a+1,w,c
  7425  002678  1007               	iorwf	___fldiv@a+2,w,c
  7426  00267A  1008               	iorwf	___fldiv@a+3,w,c
  7427  00267C  A4D8               	btfss	status,2,c
  7428  00267E  D017               	goto	l3736
  7429  002680  0E00               	movlw	0
  7430  002682  6E01               	movwf	___fldiv@b,c
  7431  002684  0E00               	movlw	0
  7432  002686  6E02               	movwf	___fldiv@b+1,c
  7433  002688  0E00               	movlw	0
  7434  00268A  6E03               	movwf	___fldiv@b+2,c
  7435  00268C  0E00               	movlw	0
  7436  00268E  6E04               	movwf	___fldiv@b+3,c
  7437  002690  0E80               	movlw	128
  7438  002692  1203               	iorwf	___fldiv@b+2,f,c
  7439  002694  0E7F               	movlw	127
  7440  002696  1204               	iorwf	___fldiv@b+3,f,c
  7441  002698                     l3730:
  7442  002698  5011               	movf	___fldiv@sign,w,c
  7443  00269A  1204               	iorwf	___fldiv@b+3,f,c
  7444  00269C  C001  F001         	movff	___fldiv@b,?___fldiv
  7445  0026A0  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7446  0026A4  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7447  0026A8  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7448  0026AC  0012               	return	
  7449  0026AE                     l3736:
  7450  0026AE  5018               	movf	___fldiv@bexp,w,c
  7451  0026B0  A4D8               	btfss	status,2,c
  7452  0026B2  D009               	goto	l3744
  7453  0026B4  0E00               	movlw	0
  7454  0026B6  6E01               	movwf	?___fldiv,c
  7455  0026B8  0E00               	movlw	0
  7456  0026BA  6E02               	movwf	?___fldiv+1,c
  7457  0026BC  0E00               	movlw	0
  7458  0026BE  6E03               	movwf	?___fldiv+2,c
  7459  0026C0  0E00               	movlw	0
  7460  0026C2  6E04               	movwf	?___fldiv+3,c
  7461  0026C4  0012               	return	
  7462  0026C6                     l3744:
  7463  0026C6  5019               	movf	___fldiv@aexp,w,c
  7464  0026C8  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7465  0026CC  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7466  0026CE  5E09               	subwf	??___fldiv,f,c
  7467  0026D0  0E00               	movlw	0
  7468  0026D2  5A0A               	subwfb	??___fldiv+1,f,c
  7469  0026D4  0E7F               	movlw	127
  7470  0026D6  2409               	addwf	??___fldiv,w,c
  7471  0026D8  6E12               	movwf	___fldiv@new_exp,c
  7472  0026DA  0E00               	movlw	0
  7473  0026DC  200A               	addwfc	??___fldiv+1,w,c
  7474  0026DE  6E13               	movwf	___fldiv@new_exp+1,c
  7475  0026E0  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7476  0026E4  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7477  0026E8  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7478  0026EC  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7479  0026F0  0E00               	movlw	0
  7480  0026F2  6E01               	movwf	___fldiv@b,c
  7481  0026F4  0E00               	movlw	0
  7482  0026F6  6E02               	movwf	___fldiv@b+1,c
  7483  0026F8  0E00               	movlw	0
  7484  0026FA  6E03               	movwf	___fldiv@b+2,c
  7485  0026FC  0E00               	movlw	0
  7486  0026FE  6E04               	movwf	___fldiv@b+3,c
  7487  002700  0E00               	movlw	0
  7488  002702  6E14               	movwf	___fldiv@grs,c
  7489  002704  0E00               	movlw	0
  7490  002706  6E15               	movwf	___fldiv@grs+1,c
  7491  002708  0E00               	movlw	0
  7492  00270A  6E16               	movwf	___fldiv@grs+2,c
  7493  00270C  0E00               	movlw	0
  7494  00270E  6E17               	movwf	___fldiv@grs+3,c
  7495  002710  0E00               	movlw	0
  7496  002712  6E19               	movwf	___fldiv@aexp,c
  7497  002714  D028               	goto	l965
  7498  002716                     l3754:
  7499  002716  5019               	movf	___fldiv@aexp,w,c
  7500  002718  B4D8               	btfsc	status,2,c
  7501  00271A  D011               	goto	l3762
  7502  00271C  90D8               	bcf	status,0,c
  7503  00271E  360D               	rlcf	___fldiv@rem,f,c
  7504  002720  360E               	rlcf	___fldiv@rem+1,f,c
  7505  002722  360F               	rlcf	___fldiv@rem+2,f,c
  7506  002724  3610               	rlcf	___fldiv@rem+3,f,c
  7507  002726  90D8               	bcf	status,0,c
  7508  002728  3601               	rlcf	___fldiv@b,f,c
  7509  00272A  3602               	rlcf	___fldiv@b+1,f,c
  7510  00272C  3603               	rlcf	___fldiv@b+2,f,c
  7511  00272E  3604               	rlcf	___fldiv@b+3,f,c
  7512  002730  BE17               	btfsc	___fldiv@grs+3,7,c
  7513  002732  8001               	bsf	___fldiv@b,0,c
  7514  002734  90D8               	bcf	status,0,c
  7515  002736  3614               	rlcf	___fldiv@grs,f,c
  7516  002738  3615               	rlcf	___fldiv@grs+1,f,c
  7517  00273A  3616               	rlcf	___fldiv@grs+2,f,c
  7518  00273C  3617               	rlcf	___fldiv@grs+3,f,c
  7519  00273E                     l3762:
  7520  00273E  5005               	movf	___fldiv@a,w,c
  7521  002740  5C0D               	subwf	___fldiv@rem,w,c
  7522  002742  5006               	movf	___fldiv@a+1,w,c
  7523  002744  580E               	subwfb	___fldiv@rem+1,w,c
  7524  002746  5007               	movf	___fldiv@a+2,w,c
  7525  002748  580F               	subwfb	___fldiv@rem+2,w,c
  7526  00274A  5008               	movf	___fldiv@a+3,w,c
  7527  00274C  5810               	subwfb	___fldiv@rem+3,w,c
  7528  00274E  A0D8               	btfss	status,0,c
  7529  002750  D009               	goto	l3768
  7530  002752  8C17               	bsf	___fldiv@grs+3,6,c
  7531  002754  5005               	movf	___fldiv@a,w,c
  7532  002756  5E0D               	subwf	___fldiv@rem,f,c
  7533  002758  5006               	movf	___fldiv@a+1,w,c
  7534  00275A  5A0E               	subwfb	___fldiv@rem+1,f,c
  7535  00275C  5007               	movf	___fldiv@a+2,w,c
  7536  00275E  5A0F               	subwfb	___fldiv@rem+2,f,c
  7537  002760  5008               	movf	___fldiv@a+3,w,c
  7538  002762  5A10               	subwfb	___fldiv@rem+3,f,c
  7539  002764                     l3768:
  7540  002764  2A19               	incf	___fldiv@aexp,f,c
  7541  002766                     l965:
  7542  002766  0E19               	movlw	25
  7543  002768  6419               	cpfsgt	___fldiv@aexp,c
  7544  00276A  D7D5               	goto	l3754
  7545  00276C  500D               	movf	___fldiv@rem,w,c
  7546  00276E  100E               	iorwf	___fldiv@rem+1,w,c
  7547  002770  100F               	iorwf	___fldiv@rem+2,w,c
  7548  002772  1010               	iorwf	___fldiv@rem+3,w,c
  7549  002774  B4D8               	btfsc	status,2,c
  7550  002776  D011               	goto	l3780
  7551  002778  8014               	bsf	___fldiv@grs,0,c
  7552  00277A  D00F               	goto	l3780
  7553  00277C                     l3774:
  7554  00277C  90D8               	bcf	status,0,c
  7555  00277E  3601               	rlcf	___fldiv@b,f,c
  7556  002780  3602               	rlcf	___fldiv@b+1,f,c
  7557  002782  3603               	rlcf	___fldiv@b+2,f,c
  7558  002784  3604               	rlcf	___fldiv@b+3,f,c
  7559  002786  BE17               	btfsc	___fldiv@grs+3,7,c
  7560  002788  8001               	bsf	___fldiv@b,0,c
  7561  00278A  90D8               	bcf	status,0,c
  7562  00278C  3614               	rlcf	___fldiv@grs,f,c
  7563  00278E  3615               	rlcf	___fldiv@grs+1,f,c
  7564  002790  3616               	rlcf	___fldiv@grs+2,f,c
  7565  002792  3617               	rlcf	___fldiv@grs+3,f,c
  7566  002794  0612               	decf	___fldiv@new_exp,f,c
  7567  002796  A0D8               	btfss	status,0,c
  7568  002798  0613               	decf	___fldiv@new_exp+1,f,c
  7569  00279A                     l3780:
  7570  00279A  AE03               	btfss	___fldiv@b+2,7,c
  7571  00279C  D7EF               	goto	l3774
  7572  00279E  0E00               	movlw	0
  7573  0027A0  6E19               	movwf	___fldiv@aexp,c
  7574  0027A2  AE17               	btfss	___fldiv@grs+3,7,c
  7575  0027A4  D017               	goto	l976
  7576  0027A6  0EFF               	movlw	255
  7577  0027A8  1414               	andwf	___fldiv@grs,w,c
  7578  0027AA  6E09               	movwf	??___fldiv& (0+255),c
  7579  0027AC  0EFF               	movlw	255
  7580  0027AE  1415               	andwf	___fldiv@grs+1,w,c
  7581  0027B0  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7582  0027B2  0EFF               	movlw	255
  7583  0027B4  1416               	andwf	___fldiv@grs+2,w,c
  7584  0027B6  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7585  0027B8  0E7F               	movlw	127
  7586  0027BA  1417               	andwf	___fldiv@grs+3,w,c
  7587  0027BC  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7588  0027BE  5009               	movf	??___fldiv,w,c
  7589  0027C0  100A               	iorwf	??___fldiv+1,w,c
  7590  0027C2  100B               	iorwf	??___fldiv+2,w,c
  7591  0027C4  100C               	iorwf	??___fldiv+3,w,c
  7592  0027C6  B4D8               	btfsc	status,2,c
  7593  0027C8  D003               	goto	l977
  7594  0027CA                     u4110:
  7595  0027CA  0E01               	movlw	1
  7596  0027CC  6E19               	movwf	___fldiv@aexp,c
  7597  0027CE  D002               	goto	l976
  7598  0027D0                     l977:
  7599  0027D0  B001               	btfsc	___fldiv@b,0,c
  7600  0027D2  D7FB               	goto	u4110
  7601  0027D4                     l976:
  7602  0027D4  5019               	movf	___fldiv@aexp,w,c
  7603  0027D6  B4D8               	btfsc	status,2,c
  7604  0027D8  D01F               	goto	l3800
  7605  0027DA  0E01               	movlw	1
  7606  0027DC  2601               	addwf	___fldiv@b,f,c
  7607  0027DE  0E00               	movlw	0
  7608  0027E0  2202               	addwfc	___fldiv@b+1,f,c
  7609  0027E2  2203               	addwfc	___fldiv@b+2,f,c
  7610  0027E4  2204               	addwfc	___fldiv@b+3,f,c
  7611  0027E6  A004               	btfss	___fldiv@b+3,0,c
  7612  0027E8  D017               	goto	l3800
  7613  0027EA  C001  F009         	movff	___fldiv@b,??___fldiv
  7614  0027EE  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7615  0027F2  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7616  0027F6  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7617  0027FA  340C               	rlcf	??___fldiv+3,w,c
  7618  0027FC  320C               	rrcf	??___fldiv+3,f,c
  7619  0027FE  320B               	rrcf	??___fldiv+2,f,c
  7620  002800  320A               	rrcf	??___fldiv+1,f,c
  7621  002802  3209               	rrcf	??___fldiv,f,c
  7622  002804  C009  F001         	movff	??___fldiv,___fldiv@b
  7623  002808  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7624  00280C  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7625  002810  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7626  002814  4A12               	infsnz	___fldiv@new_exp,f,c
  7627  002816  2A13               	incf	___fldiv@new_exp+1,f,c
  7628  002818                     l3800:
  7629  002818  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7630  00281A  D010               	goto	l3804
  7631  00281C  5013               	movf	___fldiv@new_exp+1,w,c
  7632  00281E  E103               	bnz	u4150
  7633  002820  2812               	incf	___fldiv@new_exp,w,c
  7634  002822  A0D8               	btfss	status,0,c
  7635  002824  D00B               	goto	l3804
  7636  002826                     u4150:
  7637  002826  0E00               	movlw	0
  7638  002828  6E13               	movwf	___fldiv@new_exp+1,c
  7639  00282A  6812               	setf	___fldiv@new_exp,c
  7640  00282C  0E00               	movlw	0
  7641  00282E  6E01               	movwf	___fldiv@b,c
  7642  002830  0E00               	movlw	0
  7643  002832  6E02               	movwf	___fldiv@b+1,c
  7644  002834  0E00               	movlw	0
  7645  002836  6E03               	movwf	___fldiv@b+2,c
  7646  002838  0E00               	movlw	0
  7647  00283A  6E04               	movwf	___fldiv@b+3,c
  7648  00283C                     l3804:
  7649  00283C  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7650  00283E  D005               	goto	u4160
  7651  002840  5013               	movf	___fldiv@new_exp+1,w,c
  7652  002842  E111               	bnz	l3808
  7653  002844  0412               	decf	___fldiv@new_exp,w,c
  7654  002846  B0D8               	btfsc	status,0,c
  7655  002848  D00E               	goto	l3808
  7656  00284A                     u4160:
  7657  00284A  0E00               	movlw	0
  7658  00284C  6E13               	movwf	___fldiv@new_exp+1,c
  7659  00284E  0E00               	movlw	0
  7660  002850  6E12               	movwf	___fldiv@new_exp,c
  7661  002852  0E00               	movlw	0
  7662  002854  6E01               	movwf	___fldiv@b,c
  7663  002856  0E00               	movlw	0
  7664  002858  6E02               	movwf	___fldiv@b+1,c
  7665  00285A  0E00               	movlw	0
  7666  00285C  6E03               	movwf	___fldiv@b+2,c
  7667  00285E  0E00               	movlw	0
  7668  002860  6E04               	movwf	___fldiv@b+3,c
  7669  002862  0E00               	movlw	0
  7670  002864  6E11               	movwf	___fldiv@sign,c
  7671  002866                     l3808:
  7672  002866  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7673  00286A  A018               	btfss	___fldiv@bexp,0,c
  7674  00286C  D002               	goto	l3814
  7675  00286E  8E03               	bsf	___fldiv@b+2,7,c
  7676  002870  D001               	goto	l3816
  7677  002872                     l3814:
  7678  002872  9E03               	bcf	___fldiv@b+2,7,c
  7679  002874                     l3816:
  7680  002874  90D8               	bcf	status,0,c
  7681  002876  3018               	rrcf	___fldiv@bexp,w,c
  7682  002878  6E04               	movwf	___fldiv@b+3,c
  7683  00287A  D70E               	goto	l3730
  7684  00287C                     __end_of___fldiv:
  7685                           	opt callstack 0
  7686                           
  7687 ;; *************** function ___awmod *****************
  7688 ;; Defined at:
  7689 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  dividend        2    0[COMRAM] int 
  7692 ;;  divisor         2    2[COMRAM] int 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  sign            1    5[COMRAM] unsigned char 
  7695 ;;  counter         1    4[COMRAM] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2    0[COMRAM] int 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7705 ;;      Params:         4       0       0       0       0       0       0       0       0
  7706 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7709 ;;Total ram usage:        6 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_efgtoa
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text22
  7719  003BD0                     __ptext22:
  7720                           	opt callstack 0
  7721  003BD0                     ___awmod:
  7722                           	opt callstack 26
  7723                           
  7724                           ;incstack = 0
  7725  003BD0  0E00               	movlw	0
  7726  003BD2  6E06               	movwf	___awmod@sign,c
  7727  003BD4  AE02               	btfss	___awmod@dividend+1,7,c
  7728  003BD6  D006               	goto	l4012
  7729  003BD8  6C01               	negf	___awmod@dividend,c
  7730  003BDA  1E02               	comf	___awmod@dividend+1,f,c
  7731  003BDC  B0D8               	btfsc	status,0,c
  7732  003BDE  2A02               	incf	___awmod@dividend+1,f,c
  7733  003BE0  0E01               	movlw	1
  7734  003BE2  6E06               	movwf	___awmod@sign,c
  7735  003BE4                     l4012:
  7736  003BE4  AE04               	btfss	___awmod@divisor+1,7,c
  7737  003BE6  D004               	goto	l4016
  7738  003BE8  6C03               	negf	___awmod@divisor,c
  7739  003BEA  1E04               	comf	___awmod@divisor+1,f,c
  7740  003BEC  B0D8               	btfsc	status,0,c
  7741  003BEE  2A04               	incf	___awmod@divisor+1,f,c
  7742  003BF0                     l4016:
  7743  003BF0  5003               	movf	___awmod@divisor,w,c
  7744  003BF2  1004               	iorwf	___awmod@divisor+1,w,c
  7745  003BF4  B4D8               	btfsc	status,2,c
  7746  003BF6  D018               	goto	l4032
  7747  003BF8  0E01               	movlw	1
  7748  003BFA  6E05               	movwf	___awmod@counter,c
  7749  003BFC  D004               	goto	l4022
  7750  003BFE                     l4020:
  7751  003BFE  90D8               	bcf	status,0,c
  7752  003C00  3603               	rlcf	___awmod@divisor,f,c
  7753  003C02  3604               	rlcf	___awmod@divisor+1,f,c
  7754  003C04  2A05               	incf	___awmod@counter,f,c
  7755  003C06                     l4022:
  7756  003C06  AE04               	btfss	___awmod@divisor+1,7,c
  7757  003C08  D7FA               	goto	l4020
  7758  003C0A                     u4460:
  7759  003C0A  5003               	movf	___awmod@divisor,w,c
  7760  003C0C  5C01               	subwf	___awmod@dividend,w,c
  7761  003C0E  5004               	movf	___awmod@divisor+1,w,c
  7762  003C10  5802               	subwfb	___awmod@dividend+1,w,c
  7763  003C12  A0D8               	btfss	status,0,c
  7764  003C14  D004               	goto	l4028
  7765  003C16  5003               	movf	___awmod@divisor,w,c
  7766  003C18  5E01               	subwf	___awmod@dividend,f,c
  7767  003C1A  5004               	movf	___awmod@divisor+1,w,c
  7768  003C1C  5A02               	subwfb	___awmod@dividend+1,f,c
  7769  003C1E                     l4028:
  7770  003C1E  90D8               	bcf	status,0,c
  7771  003C20  3204               	rrcf	___awmod@divisor+1,f,c
  7772  003C22  3203               	rrcf	___awmod@divisor,f,c
  7773  003C24  2E05               	decfsz	___awmod@counter,f,c
  7774  003C26  D7F1               	goto	u4460
  7775  003C28                     l4032:
  7776  003C28  5006               	movf	___awmod@sign,w,c
  7777  003C2A  B4D8               	btfsc	status,2,c
  7778  003C2C  D004               	goto	l4036
  7779  003C2E  6C01               	negf	___awmod@dividend,c
  7780  003C30  1E02               	comf	___awmod@dividend+1,f,c
  7781  003C32  B0D8               	btfsc	status,0,c
  7782  003C34  2A02               	incf	___awmod@dividend+1,f,c
  7783  003C36                     l4036:
  7784  003C36  C001  F001         	movff	___awmod@dividend,?___awmod
  7785  003C3A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7786  003C3E  0012               	return		;funcret
  7787  003C40                     __end_of___awmod:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function ___awdiv *****************
  7791 ;; Defined at:
  7792 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  dividend        2    0[COMRAM] int 
  7795 ;;  divisor         2    2[COMRAM] int 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  quotient        2    6[COMRAM] int 
  7798 ;;  sign            1    5[COMRAM] unsigned char 
  7799 ;;  counter         1    4[COMRAM] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  2    0[COMRAM] int 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7809 ;;      Params:         4       0       0       0       0       0       0       0       0
  7810 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7812 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7813 ;;Total ram usage:        8 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_scv
  7819 ;;		_efgtoa
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text23
  7824  003AD6                     __ptext23:
  7825                           	opt callstack 0
  7826  003AD6                     ___awdiv:
  7827                           	opt callstack 26
  7828                           
  7829                           ;incstack = 0
  7830  003AD6  0E00               	movlw	0
  7831  003AD8  6E06               	movwf	___awdiv@sign,c
  7832  003ADA  AE04               	btfss	___awdiv@divisor+1,7,c
  7833  003ADC  D006               	goto	l3968
  7834  003ADE  6C03               	negf	___awdiv@divisor,c
  7835  003AE0  1E04               	comf	___awdiv@divisor+1,f,c
  7836  003AE2  B0D8               	btfsc	status,0,c
  7837  003AE4  2A04               	incf	___awdiv@divisor+1,f,c
  7838  003AE6  0E01               	movlw	1
  7839  003AE8  6E06               	movwf	___awdiv@sign,c
  7840  003AEA                     l3968:
  7841  003AEA  AE02               	btfss	___awdiv@dividend+1,7,c
  7842  003AEC  D006               	goto	l3974
  7843  003AEE  6C01               	negf	___awdiv@dividend,c
  7844  003AF0  1E02               	comf	___awdiv@dividend+1,f,c
  7845  003AF2  B0D8               	btfsc	status,0,c
  7846  003AF4  2A02               	incf	___awdiv@dividend+1,f,c
  7847  003AF6  0E01               	movlw	1
  7848  003AF8  1A06               	xorwf	___awdiv@sign,f,c
  7849  003AFA                     l3974:
  7850  003AFA  0E00               	movlw	0
  7851  003AFC  6E08               	movwf	___awdiv@quotient+1,c
  7852  003AFE  0E00               	movlw	0
  7853  003B00  6E07               	movwf	___awdiv@quotient,c
  7854  003B02  5003               	movf	___awdiv@divisor,w,c
  7855  003B04  1004               	iorwf	___awdiv@divisor+1,w,c
  7856  003B06  B4D8               	btfsc	status,2,c
  7857  003B08  D01C               	goto	l3996
  7858  003B0A  0E01               	movlw	1
  7859  003B0C  6E05               	movwf	___awdiv@counter,c
  7860  003B0E  D004               	goto	l3982
  7861  003B10                     l3980:
  7862  003B10  90D8               	bcf	status,0,c
  7863  003B12  3603               	rlcf	___awdiv@divisor,f,c
  7864  003B14  3604               	rlcf	___awdiv@divisor+1,f,c
  7865  003B16  2A05               	incf	___awdiv@counter,f,c
  7866  003B18                     l3982:
  7867  003B18  AE04               	btfss	___awdiv@divisor+1,7,c
  7868  003B1A  D7FA               	goto	l3980
  7869  003B1C                     u4400:
  7870  003B1C  90D8               	bcf	status,0,c
  7871  003B1E  3607               	rlcf	___awdiv@quotient,f,c
  7872  003B20  3608               	rlcf	___awdiv@quotient+1,f,c
  7873  003B22  5003               	movf	___awdiv@divisor,w,c
  7874  003B24  5C01               	subwf	___awdiv@dividend,w,c
  7875  003B26  5004               	movf	___awdiv@divisor+1,w,c
  7876  003B28  5802               	subwfb	___awdiv@dividend+1,w,c
  7877  003B2A  A0D8               	btfss	status,0,c
  7878  003B2C  D005               	goto	l3992
  7879  003B2E  5003               	movf	___awdiv@divisor,w,c
  7880  003B30  5E01               	subwf	___awdiv@dividend,f,c
  7881  003B32  5004               	movf	___awdiv@divisor+1,w,c
  7882  003B34  5A02               	subwfb	___awdiv@dividend+1,f,c
  7883  003B36  8007               	bsf	___awdiv@quotient,0,c
  7884  003B38                     l3992:
  7885  003B38  90D8               	bcf	status,0,c
  7886  003B3A  3204               	rrcf	___awdiv@divisor+1,f,c
  7887  003B3C  3203               	rrcf	___awdiv@divisor,f,c
  7888  003B3E  2E05               	decfsz	___awdiv@counter,f,c
  7889  003B40  D7ED               	goto	u4400
  7890  003B42                     l3996:
  7891  003B42  5006               	movf	___awdiv@sign,w,c
  7892  003B44  B4D8               	btfsc	status,2,c
  7893  003B46  D004               	goto	l4000
  7894  003B48  6C07               	negf	___awdiv@quotient,c
  7895  003B4A  1E08               	comf	___awdiv@quotient+1,f,c
  7896  003B4C  B0D8               	btfsc	status,0,c
  7897  003B4E  2A08               	incf	___awdiv@quotient+1,f,c
  7898  003B50                     l4000:
  7899  003B50  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7900  003B54  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7901  003B58  0012               	return		;funcret
  7902  003B5A                     __end_of___awdiv:
  7903                           	opt callstack 0
  7904                           
  7905 ;; *************** function _dtoa *****************
  7906 ;; Defined at:
  7907 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7910 ;;		 -> sprintf@f(6), 
  7911 ;;  d               8   29[COMRAM] long long 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  n               8   53[COMRAM] long long 
  7914 ;;  i               2   61[COMRAM] int 
  7915 ;;  s               2   51[COMRAM] int 
  7916 ;;  w               2   49[COMRAM] int 
  7917 ;;  p               2   47[COMRAM] int 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2   27[COMRAM] int 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7927 ;;      Params:        10       0       0       0       0       0       0       0       0
  7928 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7929 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7930 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7931 ;;Total ram usage:       36 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    4
  7934 ;; This function calls:
  7935 ;;		___aodiv
  7936 ;;		___aomod
  7937 ;;		_abs
  7938 ;;		_pad
  7939 ;; This function is called by:
  7940 ;;		_vfpfcnvrt
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text24
  7945  00287C                     __ptext24:
  7946                           	opt callstack 0
  7947  00287C                     _dtoa:
  7948                           	opt callstack 23
  7949                           
  7950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7951                           
  7952                           ;incstack = 0
  7953  00287C  C01E  F036         	movff	dtoa@d,dtoa@n
  7954  002880  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7955  002884  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7956  002888  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7957  00288C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7958  002890  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7959  002894  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7960  002898  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7961                           
  7962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7963  00289C  AE3D               	btfss	dtoa@n+7,7,c
  7964  00289E  D002               	goto	u4670
  7965  0028A0  0E01               	movlw	1
  7966  0028A2  D001               	goto	u4680
  7967  0028A4                     u4670:
  7968  0028A4  0E00               	movlw	0
  7969  0028A6                     u4680:
  7970  0028A6  6E34               	movwf	dtoa@s,c
  7971  0028A8  6A35               	clrf	dtoa@s+1,c
  7972                           
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7974  0028AA  5034               	movf	dtoa@s,w,c
  7975  0028AC  1035               	iorwf	dtoa@s+1,w,c
  7976  0028AE  B4D8               	btfsc	status,2,c
  7977  0028B0  D010               	goto	l4148
  7978                           
  7979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7980  0028B2  1E3D               	comf	dtoa@n+7,f,c
  7981  0028B4  1E3C               	comf	dtoa@n+6,f,c
  7982  0028B6  1E3B               	comf	dtoa@n+5,f,c
  7983  0028B8  1E3A               	comf	dtoa@n+4,f,c
  7984  0028BA  1E39               	comf	dtoa@n+3,f,c
  7985  0028BC  1E38               	comf	dtoa@n+2,f,c
  7986  0028BE  1E37               	comf	dtoa@n+1,f,c
  7987  0028C0  6C36               	negf	dtoa@n,c
  7988  0028C2  0E00               	movlw	0
  7989  0028C4  2237               	addwfc	dtoa@n+1,f,c
  7990  0028C6  2238               	addwfc	dtoa@n+2,f,c
  7991  0028C8  2239               	addwfc	dtoa@n+3,f,c
  7992  0028CA  223A               	addwfc	dtoa@n+4,f,c
  7993  0028CC  223B               	addwfc	dtoa@n+5,f,c
  7994  0028CE  223C               	addwfc	dtoa@n+6,f,c
  7995  0028D0  223D               	addwfc	dtoa@n+7,f,c
  7996  0028D2                     l4148:
  7997                           
  7998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7999  0028D2  0100               	movlb	0	; () banked
  8000  0028D4  AFEB               	btfss	(_prec+1)& (0+255),7,b
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8004  0028D6  93EC               	bcf	_flags& (0+255),1,b
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8008  0028D8  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  8009  0028DA  D005               	goto	u4710
  8010  0028DC  51EB               	movf	(_prec+1)& (0+255),w,b
  8011  0028DE  E108               	bnz	l211
  8012  0028E0  05EA               	decf	_prec& (0+255),w,b
  8013  0028E2  B0D8               	btfsc	status,0,c
  8014  0028E4  D005               	goto	l211
  8015  0028E6                     u4710:
  8016                           
  8017                           ; BSR set to: 0
  8018  0028E6  0E00               	movlw	0
  8019  0028E8  6E31               	movwf	dtoa@p+1,c
  8020  0028EA  0E01               	movlw	1
  8021  0028EC  6E30               	movwf	dtoa@p,c
  8022  0028EE  D004               	goto	l213
  8023  0028F0                     l211:
  8024                           
  8025                           ; BSR set to: 0
  8026  0028F0  C0EA  F030         	movff	_prec,dtoa@p
  8027  0028F4  C0EB  F031         	movff	_prec+1,dtoa@p+1
  8028  0028F8                     l213:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8032  0028F8  C0E8  F032         	movff	_width,dtoa@w
  8033  0028FC  C0E9  F033         	movff	_width+1,dtoa@w+1
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8037  002900  5034               	movf	dtoa@s,w,c
  8038  002902  1035               	iorwf	dtoa@s+1,w,c
  8039  002904  A4D8               	btfss	status,2,c
  8040  002906  D002               	goto	u4730
  8041                           
  8042                           ; BSR set to: 0
  8043  002908  A5EC               	btfss	_flags& (0+255),2,b
  8044  00290A  D003               	goto	l4162
  8045  00290C                     u4730:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8049  00290C  0632               	decf	dtoa@w,f,c
  8050  00290E  A0D8               	btfss	status,0,c
  8051  002910  0633               	decf	dtoa@w+1,f,c
  8052  002912                     l4162:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8056  002912  0E00               	movlw	0
  8057  002914  6E3F               	movwf	dtoa@i+1,c
  8058  002916  0E4F               	movlw	79
  8059  002918  6E3E               	movwf	dtoa@i,c
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8063  00291A  0E00               	movlw	0
  8064  00291C  0101               	movlb	1	; () banked
  8065  00291E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8066                           
  8067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8068  002920  D07C               	goto	l4176
  8069  002922                     l4166:
  8070                           
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8072  002922  063E               	decf	dtoa@i,f,c
  8073  002924  A0D8               	btfss	status,0,c
  8074  002926  063F               	decf	dtoa@i+1,f,c
  8075                           
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8077  002928  0E00               	movlw	low _dbuf
  8078  00292A  243E               	addwf	dtoa@i,w,c
  8079  00292C  6ED9               	movwf	fsr2l,c
  8080  00292E  0E01               	movlw	high _dbuf
  8081  002930  203F               	addwfc	dtoa@i+1,w,c
  8082  002932  6EDA               	movwf	fsr2h,c
  8083  002934  C036  F001         	movff	dtoa@n,___aomod@dividend
  8084  002938  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8085  00293C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8086  002940  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8087  002944  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8088  002948  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8089  00294C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8090  002950  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8091  002954  0E0A               	movlw	10
  8092  002956  6E09               	movwf	___aomod@divisor,c
  8093  002958  0E00               	movlw	0
  8094  00295A  6E0A               	movwf	___aomod@divisor+1,c
  8095  00295C  0E00               	movlw	0
  8096  00295E  6E0B               	movwf	___aomod@divisor+2,c
  8097  002960  0E00               	movlw	0
  8098  002962  6E0C               	movwf	___aomod@divisor+3,c
  8099  002964  0E00               	movlw	0
  8100  002966  6E0D               	movwf	___aomod@divisor+4,c
  8101  002968  0E00               	movlw	0
  8102  00296A  6E0E               	movwf	___aomod@divisor+5,c
  8103  00296C  0E00               	movlw	0
  8104  00296E  6E0F               	movwf	___aomod@divisor+6,c
  8105  002970  0E00               	movlw	0
  8106  002972  6E10               	movwf	___aomod@divisor+7,c
  8107  002974  ECB7  F018         	call	___aomod	;wreg free
  8108  002978  C001  F026         	movff	?___aomod,??_dtoa
  8109  00297C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8110  002980  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8111  002984  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8112  002988  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8113  00298C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8114  002990  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8115  002994  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8116  002998  C026  F013         	movff	??_dtoa,abs@a
  8117  00299C  C028  F014         	movff	??_dtoa+2,abs@a+1
  8118  0029A0  EC90  F01F         	call	_abs	;wreg free
  8119  0029A4  5013               	movf	?_abs,w,c
  8120  0029A6  0F30               	addlw	48
  8121  0029A8  6EDF               	movwf	indf2,c
  8122                           
  8123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8124  0029AA  0630               	decf	dtoa@p,f,c
  8125  0029AC  A0D8               	btfss	status,0,c
  8126  0029AE  0631               	decf	dtoa@p+1,f,c
  8127                           
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8129  0029B0  0632               	decf	dtoa@w,f,c
  8130  0029B2  A0D8               	btfss	status,0,c
  8131  0029B4  0633               	decf	dtoa@w+1,f,c
  8132                           
  8133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8134  0029B6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8135  0029BA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8136  0029BE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8137  0029C2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8138  0029C6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8139  0029CA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8140  0029CE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8141  0029D2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8142  0029D6  0E0A               	movlw	10
  8143  0029D8  6E09               	movwf	___aodiv@divisor,c
  8144  0029DA  0E00               	movlw	0
  8145  0029DC  6E0A               	movwf	___aodiv@divisor+1,c
  8146  0029DE  0E00               	movlw	0
  8147  0029E0  6E0B               	movwf	___aodiv@divisor+2,c
  8148  0029E2  0E00               	movlw	0
  8149  0029E4  6E0C               	movwf	___aodiv@divisor+3,c
  8150  0029E6  0E00               	movlw	0
  8151  0029E8  6E0D               	movwf	___aodiv@divisor+4,c
  8152  0029EA  0E00               	movlw	0
  8153  0029EC  6E0E               	movwf	___aodiv@divisor+5,c
  8154  0029EE  0E00               	movlw	0
  8155  0029F0  6E0F               	movwf	___aodiv@divisor+6,c
  8156  0029F2  0E00               	movlw	0
  8157  0029F4  6E10               	movwf	___aodiv@divisor+7,c
  8158  0029F6  EC3D  F016         	call	___aodiv	;wreg free
  8159  0029FA  C001  F036         	movff	?___aodiv,dtoa@n
  8160  0029FE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8161  002A02  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8162  002A06  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8163  002A0A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8164  002A0E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8165  002A12  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8166  002A16  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8167  002A1A                     l4176:
  8168                           
  8169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8170  002A1A  BE3F               	btfsc	dtoa@i+1,7,c
  8171  002A1C  D020               	goto	u4780
  8172  002A1E  503F               	movf	dtoa@i+1,w,c
  8173  002A20  E103               	bnz	u4740
  8174  002A22  043E               	decf	dtoa@i,w,c
  8175  002A24  A0D8               	btfss	status,0,c
  8176  002A26  D01B               	goto	u4780
  8177  002A28                     u4740:
  8178  002A28  5036               	movf	dtoa@n,w,c
  8179  002A2A  1037               	iorwf	dtoa@n+1,w,c
  8180  002A2C  1038               	iorwf	dtoa@n+2,w,c
  8181  002A2E  1039               	iorwf	dtoa@n+3,w,c
  8182  002A30  103A               	iorwf	dtoa@n+4,w,c
  8183  002A32  103B               	iorwf	dtoa@n+5,w,c
  8184  002A34  103C               	iorwf	dtoa@n+6,w,c
  8185  002A36  103D               	iorwf	dtoa@n+7,w,c
  8186  002A38  A4D8               	btfss	status,2,c
  8187  002A3A  D773               	goto	l4166
  8188  002A3C  BE31               	btfsc	dtoa@p+1,7,c
  8189  002A3E  D005               	goto	u4760
  8190  002A40  5031               	movf	dtoa@p+1,w,c
  8191  002A42  E102               	bnz	u4761
  8192  002A44  0430               	decf	dtoa@p,w,c
  8193  002A46  B0D8               	btfsc	status,0,c
  8194  002A48                     u4761:
  8195  002A48  D76C               	goto	l4166
  8196  002A4A                     u4760:
  8197  002A4A  BE33               	btfsc	dtoa@w+1,7,c
  8198  002A4C  D008               	goto	u4780
  8199  002A4E  5033               	movf	dtoa@w+1,w,c
  8200  002A50  E103               	bnz	u4770
  8201  002A52  0432               	decf	dtoa@w,w,c
  8202  002A54  A0D8               	btfss	status,0,c
  8203  002A56  D003               	goto	u4780
  8204  002A58                     u4770:
  8205  002A58  0100               	movlb	0	; () banked
  8206  002A5A  B3EC               	btfsc	_flags& (0+255),1,b
  8207  002A5C  D762               	goto	l4166
  8208  002A5E                     u4780:
  8209                           
  8210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8211  002A5E  5034               	movf	dtoa@s,w,c
  8212  002A60  1035               	iorwf	dtoa@s+1,w,c
  8213  002A62  A4D8               	btfss	status,2,c
  8214  002A64  D003               	goto	u4800
  8215  002A66  0100               	movlb	0	; () banked
  8216  002A68  A5EC               	btfss	_flags& (0+255),2,b
  8217  002A6A  D017               	goto	l4200
  8218  002A6C                     u4800:
  8219                           
  8220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8221  002A6C  063E               	decf	dtoa@i,f,c
  8222  002A6E  A0D8               	btfss	status,0,c
  8223  002A70  063F               	decf	dtoa@i+1,f,c
  8224                           
  8225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8226  002A72  5034               	movf	dtoa@s,w,c
  8227  002A74  1035               	iorwf	dtoa@s+1,w,c
  8228  002A76  A4D8               	btfss	status,2,c
  8229  002A78  D004               	goto	l4196
  8230  002A7A  0E00               	movlw	0
  8231  002A7C  6E2F               	movwf	_dtoa$451+1,c
  8232  002A7E  0E2B               	movlw	43
  8233  002A80  D003               	goto	L15
  8234  002A82                     l4196:
  8235  002A82  0E00               	movlw	0
  8236  002A84  6E2F               	movwf	_dtoa$451+1,c
  8237  002A86  0E2D               	movlw	45
  8238  002A88                     L15:
  8239  002A88  6E2E               	movwf	_dtoa$451,c
  8240  002A8A  0E00               	movlw	low _dbuf
  8241  002A8C  243E               	addwf	dtoa@i,w,c
  8242  002A8E  6ED9               	movwf	fsr2l,c
  8243  002A90  0E01               	movlw	high _dbuf
  8244  002A92  203F               	addwfc	dtoa@i+1,w,c
  8245  002A94  6EDA               	movwf	fsr2h,c
  8246  002A96  C02E  FFDF         	movff	_dtoa$451,indf2
  8247  002A9A                     l4200:
  8248                           
  8249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8250  002A9A  C01C  F011         	movff	dtoa@fp,pad@fp
  8251  002A9E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8252  002AA2  0E00               	movlw	low _dbuf
  8253  002AA4  243E               	addwf	dtoa@i,w,c
  8254  002AA6  6E13               	movwf	pad@buf,c
  8255  002AA8  0E01               	movlw	high _dbuf
  8256  002AAA  203F               	addwfc	dtoa@i+1,w,c
  8257  002AAC  6E14               	movwf	pad@buf+1,c
  8258  002AAE  C032  F015         	movff	dtoa@w,pad@p
  8259  002AB2  C033  F016         	movff	dtoa@w+1,pad@p+1
  8260  002AB6  EC94  F01C         	call	_pad	;wreg free
  8261  002ABA  C011  F01C         	movff	?_pad,?_dtoa
  8262  002ABE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8263  002AC2  0012               	return		;funcret
  8264  002AC4                     __end_of_dtoa:
  8265                           	opt callstack 0
  8266                           
  8267 ;; *************** function _pad *****************
  8268 ;; Defined at:
  8269 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8272 ;;		 -> sprintf@f(6), 
  8273 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8274 ;;		 -> dbuf(80), 
  8275 ;;  p               2   20[COMRAM] int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  w               2   25[COMRAM] int 
  8278 ;;  i               2   23[COMRAM] int 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  2   16[COMRAM] int 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8288 ;;      Params:         6       0       0       0       0       0       0       0       0
  8289 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8290 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8291 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8292 ;;Total ram usage:       11 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    3
  8295 ;; This function calls:
  8296 ;;		_fputc
  8297 ;;		_fputs
  8298 ;;		_strlen
  8299 ;; This function is called by:
  8300 ;;		_dtoa
  8301 ;;		_efgtoa
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text25
  8306  003928                     __ptext25:
  8307                           	opt callstack 0
  8308  003928                     _pad:
  8309                           	opt callstack 23
  8310                           
  8311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8312                           
  8313                           ;incstack = 0
  8314  003928  0100               	movlb	0	; () banked
  8315  00392A  A1EC               	btfss	_flags& (0+255),0,b
  8316  00392C  D00A               	goto	l3510
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8320  00392E  C013  F00A         	movff	pad@buf,fputs@s
  8321  003932  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8322  003936  C011  F00C         	movff	pad@fp,fputs@fp
  8323  00393A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8324  00393E  EC74  F01F         	call	_fputs	;wreg free
  8325  003942                     l3510:
  8326                           
  8327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8328  003942  BE16               	btfsc	pad@p+1,7,c
  8329  003944  D005               	goto	l3514
  8330  003946  C015  F01A         	movff	pad@p,pad@w
  8331  00394A  C016  F01B         	movff	pad@p+1,pad@w+1
  8332  00394E  D004               	goto	l200
  8333  003950                     l3514:
  8334  003950  0E00               	movlw	0
  8335  003952  6E1B               	movwf	pad@w+1,c
  8336  003954  0E00               	movlw	0
  8337  003956  6E1A               	movwf	pad@w,c
  8338  003958                     l200:
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8341  003958  0E00               	movlw	0
  8342  00395A  6E19               	movwf	pad@i+1,c
  8343  00395C  0E00               	movlw	0
  8344  00395E  6E18               	movwf	pad@i,c
  8345                           
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8347  003960  D00C               	goto	l3520
  8348  003962                     l3516:
  8349                           
  8350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8351  003962  0E00               	movlw	0
  8352  003964  6E02               	movwf	fputc@c+1,c
  8353  003966  0E20               	movlw	32
  8354  003968  6E01               	movwf	fputc@c,c
  8355  00396A  C011  F003         	movff	pad@fp,fputc@fp
  8356  00396E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8357  003972  EC44  F01C         	call	_fputc	;wreg free
  8358                           
  8359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8360  003976  4A18               	infsnz	pad@i,f,c
  8361  003978  2A19               	incf	pad@i+1,f,c
  8362  00397A                     l3520:
  8363                           
  8364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8365  00397A  501A               	movf	pad@w,w,c
  8366  00397C  5C18               	subwf	pad@i,w,c
  8367  00397E  5019               	movf	pad@i+1,w,c
  8368  003980  0A80               	xorlw	128
  8369  003982  6E17               	movwf	??_pad& (0+255),c
  8370  003984  501B               	movf	pad@w+1,w,c
  8371  003986  0A80               	xorlw	128
  8372  003988  5817               	subwfb	??_pad& (0+255),w,c
  8373  00398A  A0D8               	btfss	status,0,c
  8374  00398C  D7EA               	goto	l3516
  8375                           
  8376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8377  00398E  0100               	movlb	0	; () banked
  8378  003990  B1EC               	btfsc	_flags& (0+255),0,b
  8379  003992  D00A               	goto	l3524
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8383  003994  C013  F00A         	movff	pad@buf,fputs@s
  8384  003998  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8385  00399C  C011  F00C         	movff	pad@fp,fputs@fp
  8386  0039A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8387  0039A4  EC74  F01F         	call	_fputs	;wreg free
  8388  0039A8                     l3524:
  8389                           
  8390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8391  0039A8  C013  F001         	movff	pad@buf,strlen@s
  8392  0039AC  C014  F002         	movff	pad@buf+1,strlen@s+1
  8393  0039B0  ECF0  F01F         	call	_strlen	;wreg free
  8394  0039B4  501A               	movf	pad@w,w,c
  8395  0039B6  2401               	addwf	?_strlen,w,c
  8396  0039B8  6E11               	movwf	?_pad,c
  8397  0039BA  501B               	movf	pad@w+1,w,c
  8398  0039BC  2002               	addwfc	?_strlen+1,w,c
  8399  0039BE  6E12               	movwf	?_pad+1,c
  8400  0039C0  0012               	return		;funcret
  8401  0039C2                     __end_of_pad:
  8402                           	opt callstack 0
  8403                           
  8404 ;; *************** function _strlen *****************
  8405 ;; Defined at:
  8406 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8409 ;;		 -> dbuf(80), 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8412 ;;		 -> dbuf(80), 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  2    0[COMRAM] unsigned int 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8422 ;;      Params:         2       0       0       0       0       0       0       0       0
  8423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8425 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8426 ;;Total ram usage:        4 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_pad
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text26
  8436  003FE0                     __ptext26:
  8437                           	opt callstack 0
  8438  003FE0                     _strlen:
  8439                           	opt callstack 25
  8440                           
  8441                           ;incstack = 0
  8442  003FE0  C001  F003         	movff	strlen@s,strlen@a
  8443  003FE4  C002  F004         	movff	strlen@s+1,strlen@a+1
  8444  003FE8  D002               	goto	l3294
  8445  003FEA                     l3292:
  8446  003FEA  4A01               	infsnz	strlen@s,f,c
  8447  003FEC  2A02               	incf	strlen@s+1,f,c
  8448  003FEE                     l3294:
  8449  003FEE  C001  FFD9         	movff	strlen@s,fsr2l
  8450  003FF2  C002  FFDA         	movff	strlen@s+1,fsr2h
  8451  003FF6  50DF               	movf	indf2,w,c
  8452  003FF8  A4D8               	btfss	status,2,c
  8453  003FFA  D7F7               	goto	l3292
  8454  003FFC  5003               	movf	strlen@a,w,c
  8455  003FFE  5C01               	subwf	strlen@s,w,c
  8456  004000  6E01               	movwf	?_strlen,c
  8457  004002  5004               	movf	strlen@a+1,w,c
  8458  004004  5802               	subwfb	strlen@s+1,w,c
  8459  004006  6E02               	movwf	?_strlen+1,c
  8460  004008  0012               	return		;funcret
  8461  00400A                     __end_of_strlen:
  8462                           	opt callstack 0
  8463                           
  8464 ;; *************** function _fputs *****************
  8465 ;; Defined at:
  8466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8469 ;;		 -> dbuf(80), 
  8470 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8471 ;;		 -> sprintf@f(6), 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  i               2   14[COMRAM] int 
  8474 ;;  c               1   13[COMRAM] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  2    9[COMRAM] int 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8484 ;;      Params:         4       0       0       0       0       0       0       0       0
  8485 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8487 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8488 ;;Total ram usage:        7 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    2
  8491 ;; This function calls:
  8492 ;;		_fputc
  8493 ;; This function is called by:
  8494 ;;		_pad
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text27
  8499  003EE8                     __ptext27:
  8500                           	opt callstack 0
  8501  003EE8                     _fputs:
  8502                           	opt callstack 23
  8503                           
  8504                           ;incstack = 0
  8505  003EE8  0E00               	movlw	0
  8506  003EEA  6E10               	movwf	fputs@i+1,c
  8507  003EEC  0E00               	movlw	0
  8508  003EEE  6E0F               	movwf	fputs@i,c
  8509  003EF0  D00B               	goto	l3288
  8510  003EF2                     l3284:
  8511  003EF2  C00E  F001         	movff	fputs@c,fputc@c
  8512  003EF6  6A02               	clrf	fputc@c+1,c
  8513  003EF8  C00C  F003         	movff	fputs@fp,fputc@fp
  8514  003EFC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8515  003F00  EC44  F01C         	call	_fputc	;wreg free
  8516  003F04  4A0F               	infsnz	fputs@i,f,c
  8517  003F06  2A10               	incf	fputs@i+1,f,c
  8518  003F08                     l3288:
  8519  003F08  500F               	movf	fputs@i,w,c
  8520  003F0A  240A               	addwf	fputs@s,w,c
  8521  003F0C  6ED9               	movwf	fsr2l,c
  8522  003F0E  5010               	movf	fputs@i+1,w,c
  8523  003F10  200B               	addwfc	fputs@s+1,w,c
  8524  003F12  6EDA               	movwf	fsr2h,c
  8525  003F14  50DF               	movf	indf2,w,c
  8526  003F16  6E0E               	movwf	fputs@c,c
  8527  003F18  500E               	movf	fputs@c,w,c
  8528  003F1A  B4D8               	btfsc	status,2,c
  8529  003F1C  0012               	return	
  8530  003F1E  D7E9               	goto	l3284
  8531  003F20                     __end_of_fputs:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _fputc *****************
  8535 ;; Defined at:
  8536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  c               2    0[COMRAM] int 
  8539 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8540 ;;		 -> sprintf@f(6), 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  2    0[COMRAM] int 
  8545 ;; Registers used:
  8546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8552 ;;      Params:         4       0       0       0       0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8554 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8555 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8556 ;;Total ram usage:        9 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    1
  8559 ;; This function calls:
  8560 ;;		_putch
  8561 ;; This function is called by:
  8562 ;;		_pad
  8563 ;;		_vfpfcnvrt
  8564 ;;		_fputs
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text28
  8569  003888                     __ptext28:
  8570                           	opt callstack 0
  8571  003888                     _fputc:
  8572                           	opt callstack 26
  8573                           
  8574                           ;incstack = 0
  8575  003888  5003               	movf	fputc@fp,w,c
  8576  00388A  1004               	iorwf	fputc@fp+1,w,c
  8577  00388C  B4D8               	btfsc	status,2,c
  8578  00388E  D004               	goto	u3070
  8579  003890  5003               	movf	fputc@fp,w,c
  8580  003892  1004               	iorwf	fputc@fp+1,w,c
  8581  003894  A4D8               	btfss	status,2,c
  8582  003896  D004               	goto	l3274
  8583  003898                     u3070:
  8584  003898  5001               	movf	fputc@c,w,c
  8585  00389A  EC34  F020         	call	_putch
  8586  00389E  0012               	return	
  8587  0038A0                     l3274:
  8588  0038A0  EE20 F004          	lfsr	2,4
  8589  0038A4  5003               	movf	fputc@fp,w,c
  8590  0038A6  26D9               	addwf	fsr2l,f,c
  8591  0038A8  5004               	movf	fputc@fp+1,w,c
  8592  0038AA  22DA               	addwfc	fsr2h,f,c
  8593  0038AC  50DE               	movf	postinc2,w,c
  8594  0038AE  10DE               	iorwf	postinc2,w,c
  8595  0038B0  B4D8               	btfsc	status,2,c
  8596  0038B2  D016               	goto	u3090
  8597  0038B4  EE20 F004          	lfsr	2,4
  8598  0038B8  5003               	movf	fputc@fp,w,c
  8599  0038BA  26D9               	addwf	fsr2l,f,c
  8600  0038BC  5004               	movf	fputc@fp+1,w,c
  8601  0038BE  22DA               	addwfc	fsr2h,f,c
  8602  0038C0  EE10 F002          	lfsr	1,2
  8603  0038C4  5003               	movf	fputc@fp,w,c
  8604  0038C6  26E1               	addwf	fsr1l,f,c
  8605  0038C8  5004               	movf	fputc@fp+1,w,c
  8606  0038CA  22E2               	addwfc	fsr1h,f,c
  8607  0038CC  50DE               	movf	postinc2,w,c
  8608  0038CE  5CE6               	subwf	postinc1,w,c
  8609  0038D0  50E6               	movf	postinc1,w,c
  8610  0038D2  0A80               	xorlw	128
  8611  0038D4  6E09               	movwf	(??_fputc+4)& (0+255),c
  8612  0038D6  50DE               	movf	postinc2,w,c
  8613  0038D8  0A80               	xorlw	128
  8614  0038DA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  8615  0038DC  B0D8               	btfsc	status,0,c
  8616  0038DE  0012               	return	
  8617  0038E0                     u3090:
  8618  0038E0  EE20 F002          	lfsr	2,2
  8619  0038E4  5003               	movf	fputc@fp,w,c
  8620  0038E6  26D9               	addwf	fsr2l,f,c
  8621  0038E8  5004               	movf	fputc@fp+1,w,c
  8622  0038EA  22DA               	addwfc	fsr2h,f,c
  8623  0038EC  CFDE F005          	movff	postinc2,??_fputc
  8624  0038F0  CFDD F006          	movff	postdec2,??_fputc+1
  8625  0038F4  C003  FFD9         	movff	fputc@fp,fsr2l
  8626  0038F8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8627  0038FC  CFDE F007          	movff	postinc2,??_fputc+2
  8628  003900  CFDD F008          	movff	postdec2,??_fputc+3
  8629  003904  5005               	movf	??_fputc,w,c
  8630  003906  2407               	addwf	??_fputc+2,w,c
  8631  003908  6ED9               	movwf	fsr2l,c
  8632  00390A  5006               	movf	??_fputc+1,w,c
  8633  00390C  2008               	addwfc	??_fputc+3,w,c
  8634  00390E  6EDA               	movwf	fsr2h,c
  8635  003910  C001  FFDF         	movff	fputc@c,indf2
  8636  003914  EE20 F002          	lfsr	2,2
  8637  003918  5003               	movf	fputc@fp,w,c
  8638  00391A  26D9               	addwf	fsr2l,f,c
  8639  00391C  5004               	movf	fputc@fp+1,w,c
  8640  00391E  22DA               	addwfc	fsr2h,f,c
  8641  003920  2ADE               	incf	postinc2,f,c
  8642  003922  0E00               	movlw	0
  8643  003924  22DD               	addwfc	postdec2,f,c
  8644  003926  0012               	return		;funcret
  8645  003928                     __end_of_fputc:
  8646                           	opt callstack 0
  8647                           
  8648 ;; *************** function _putch *****************
  8649 ;; Defined at:
  8650 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  c               1    wreg     unsigned char 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  c               1    0[COMRAM] unsigned char 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_fputc
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text29
  8678  004068                     __ptext29:
  8679                           	opt callstack 0
  8680  004068                     _putch:
  8681                           	opt callstack 26
  8682                           
  8683                           ;incstack = 0
  8684  004068  0012               	return		;funcret
  8685  00406A                     __end_of_putch:
  8686                           	opt callstack 0
  8687                           
  8688 ;; *************** function _abs *****************
  8689 ;; Defined at:
  8690 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  a               2   18[COMRAM] int 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;		None
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  2   18[COMRAM] int 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8704 ;;      Params:         2       0       0       0       0       0       0       0       0
  8705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8706 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8707 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8708 ;;Total ram usage:        4 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_dtoa
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text30
  8718  003F20                     __ptext30:
  8719                           	opt callstack 0
  8720  003F20                     _abs:
  8721                           	opt callstack 26
  8722                           
  8723                           ;incstack = 0
  8724  003F20  BE14               	btfsc	abs@a+1,7,c
  8725  003F22  D005               	goto	u3570
  8726  003F24  5014               	movf	abs@a+1,w,c
  8727  003F26  E110               	bnz	l1067
  8728  003F28  0413               	decf	abs@a,w,c
  8729  003F2A  B0D8               	btfsc	status,0,c
  8730  003F2C  D00D               	goto	l1067
  8731  003F2E                     u3570:
  8732  003F2E  C013  F015         	movff	abs@a,??_abs
  8733  003F32  C014  F016         	movff	abs@a+1,??_abs+1
  8734  003F36  1E15               	comf	??_abs,f,c
  8735  003F38  1E16               	comf	??_abs+1,f,c
  8736  003F3A  4A15               	infsnz	??_abs,f,c
  8737  003F3C  2A16               	incf	??_abs+1,f,c
  8738  003F3E  C015  F013         	movff	??_abs,?_abs
  8739  003F42  C016  F014         	movff	??_abs+1,?_abs+1
  8740  003F46  0012               	return	
  8741  003F48                     l1067:
  8742  003F48  C013  F013         	movff	abs@a,?_abs
  8743  003F4C  C014  F014         	movff	abs@a+1,?_abs+1
  8744  003F50  0012               	return		;funcret
  8745  003F52                     __end_of_abs:
  8746                           	opt callstack 0
  8747                           
  8748 ;; *************** function ___aomod *****************
  8749 ;; Defined at:
  8750 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  dividend        8    0[COMRAM] long long 
  8753 ;;  divisor         8    8[COMRAM] long long 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  sign            1   17[COMRAM] unsigned char 
  8756 ;;  counter         1   16[COMRAM] unsigned char 
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  8    0[COMRAM] long long 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2, status,0
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8766 ;;      Params:        16       0       0       0       0       0       0       0       0
  8767 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8769 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8770 ;;Total ram usage:       18 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_dtoa
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text31
  8780  00316E                     __ptext31:
  8781                           	opt callstack 0
  8782  00316E                     ___aomod:
  8783                           	opt callstack 26
  8784                           
  8785                           ;incstack = 0
  8786  00316E  0E00               	movlw	0
  8787  003170  6E12               	movwf	___aomod@sign,c
  8788  003172  AE08               	btfss	___aomod@dividend+7,7,c
  8789  003174  D012               	goto	l3658
  8790  003176  1E08               	comf	___aomod@dividend+7,f,c
  8791  003178  1E07               	comf	___aomod@dividend+6,f,c
  8792  00317A  1E06               	comf	___aomod@dividend+5,f,c
  8793  00317C  1E05               	comf	___aomod@dividend+4,f,c
  8794  00317E  1E04               	comf	___aomod@dividend+3,f,c
  8795  003180  1E03               	comf	___aomod@dividend+2,f,c
  8796  003182  1E02               	comf	___aomod@dividend+1,f,c
  8797  003184  6C01               	negf	___aomod@dividend,c
  8798  003186  0E00               	movlw	0
  8799  003188  2202               	addwfc	___aomod@dividend+1,f,c
  8800  00318A  2203               	addwfc	___aomod@dividend+2,f,c
  8801  00318C  2204               	addwfc	___aomod@dividend+3,f,c
  8802  00318E  2205               	addwfc	___aomod@dividend+4,f,c
  8803  003190  2206               	addwfc	___aomod@dividend+5,f,c
  8804  003192  2207               	addwfc	___aomod@dividend+6,f,c
  8805  003194  2208               	addwfc	___aomod@dividend+7,f,c
  8806  003196  0E01               	movlw	1
  8807  003198  6E12               	movwf	___aomod@sign,c
  8808  00319A                     l3658:
  8809  00319A  AE10               	btfss	___aomod@divisor+7,7,c
  8810  00319C  D010               	goto	l3662
  8811  00319E  1E10               	comf	___aomod@divisor+7,f,c
  8812  0031A0  1E0F               	comf	___aomod@divisor+6,f,c
  8813  0031A2  1E0E               	comf	___aomod@divisor+5,f,c
  8814  0031A4  1E0D               	comf	___aomod@divisor+4,f,c
  8815  0031A6  1E0C               	comf	___aomod@divisor+3,f,c
  8816  0031A8  1E0B               	comf	___aomod@divisor+2,f,c
  8817  0031AA  1E0A               	comf	___aomod@divisor+1,f,c
  8818  0031AC  6C09               	negf	___aomod@divisor,c
  8819  0031AE  0E00               	movlw	0
  8820  0031B0  220A               	addwfc	___aomod@divisor+1,f,c
  8821  0031B2  220B               	addwfc	___aomod@divisor+2,f,c
  8822  0031B4  220C               	addwfc	___aomod@divisor+3,f,c
  8823  0031B6  220D               	addwfc	___aomod@divisor+4,f,c
  8824  0031B8  220E               	addwfc	___aomod@divisor+5,f,c
  8825  0031BA  220F               	addwfc	___aomod@divisor+6,f,c
  8826  0031BC  2210               	addwfc	___aomod@divisor+7,f,c
  8827  0031BE                     l3662:
  8828  0031BE  5009               	movf	___aomod@divisor,w,c
  8829  0031C0  100A               	iorwf	___aomod@divisor+1,w,c
  8830  0031C2  100B               	iorwf	___aomod@divisor+2,w,c
  8831  0031C4  100C               	iorwf	___aomod@divisor+3,w,c
  8832  0031C6  100D               	iorwf	___aomod@divisor+4,w,c
  8833  0031C8  100E               	iorwf	___aomod@divisor+5,w,c
  8834  0031CA  100F               	iorwf	___aomod@divisor+6,w,c
  8835  0031CC  1010               	iorwf	___aomod@divisor+7,w,c
  8836  0031CE  B4D8               	btfsc	status,2,c
  8837  0031D0  D03C               	goto	l3678
  8838  0031D2  0E01               	movlw	1
  8839  0031D4  6E11               	movwf	___aomod@counter,c
  8840  0031D6  D00A               	goto	l3668
  8841  0031D8                     l3666:
  8842  0031D8  90D8               	bcf	status,0,c
  8843  0031DA  3609               	rlcf	___aomod@divisor,f,c
  8844  0031DC  360A               	rlcf	___aomod@divisor+1,f,c
  8845  0031DE  360B               	rlcf	___aomod@divisor+2,f,c
  8846  0031E0  360C               	rlcf	___aomod@divisor+3,f,c
  8847  0031E2  360D               	rlcf	___aomod@divisor+4,f,c
  8848  0031E4  360E               	rlcf	___aomod@divisor+5,f,c
  8849  0031E6  360F               	rlcf	___aomod@divisor+6,f,c
  8850  0031E8  3610               	rlcf	___aomod@divisor+7,f,c
  8851  0031EA  2A11               	incf	___aomod@counter,f,c
  8852  0031EC                     l3668:
  8853  0031EC  AE10               	btfss	___aomod@divisor+7,7,c
  8854  0031EE  D7F4               	goto	l3666
  8855  0031F0                     u3920:
  8856  0031F0  5009               	movf	___aomod@divisor,w,c
  8857  0031F2  5C01               	subwf	___aomod@dividend,w,c
  8858  0031F4  500A               	movf	___aomod@divisor+1,w,c
  8859  0031F6  5802               	subwfb	___aomod@dividend+1,w,c
  8860  0031F8  500B               	movf	___aomod@divisor+2,w,c
  8861  0031FA  5803               	subwfb	___aomod@dividend+2,w,c
  8862  0031FC  500C               	movf	___aomod@divisor+3,w,c
  8863  0031FE  5804               	subwfb	___aomod@dividend+3,w,c
  8864  003200  500D               	movf	___aomod@divisor+4,w,c
  8865  003202  5805               	subwfb	___aomod@dividend+4,w,c
  8866  003204  500E               	movf	___aomod@divisor+5,w,c
  8867  003206  5806               	subwfb	___aomod@dividend+5,w,c
  8868  003208  500F               	movf	___aomod@divisor+6,w,c
  8869  00320A  5807               	subwfb	___aomod@dividend+6,w,c
  8870  00320C  5010               	movf	___aomod@divisor+7,w,c
  8871  00320E  5808               	subwfb	___aomod@dividend+7,w,c
  8872  003210  A0D8               	btfss	status,0,c
  8873  003212  D010               	goto	l3674
  8874  003214  5009               	movf	___aomod@divisor,w,c
  8875  003216  5E01               	subwf	___aomod@dividend,f,c
  8876  003218  500A               	movf	___aomod@divisor+1,w,c
  8877  00321A  5A02               	subwfb	___aomod@dividend+1,f,c
  8878  00321C  500B               	movf	___aomod@divisor+2,w,c
  8879  00321E  5A03               	subwfb	___aomod@dividend+2,f,c
  8880  003220  500C               	movf	___aomod@divisor+3,w,c
  8881  003222  5A04               	subwfb	___aomod@dividend+3,f,c
  8882  003224  500D               	movf	___aomod@divisor+4,w,c
  8883  003226  5A05               	subwfb	___aomod@dividend+4,f,c
  8884  003228  500E               	movf	___aomod@divisor+5,w,c
  8885  00322A  5A06               	subwfb	___aomod@dividend+5,f,c
  8886  00322C  500F               	movf	___aomod@divisor+6,w,c
  8887  00322E  5A07               	subwfb	___aomod@dividend+6,f,c
  8888  003230  5010               	movf	___aomod@divisor+7,w,c
  8889  003232  5A08               	subwfb	___aomod@dividend+7,f,c
  8890  003234                     l3674:
  8891  003234  90D8               	bcf	status,0,c
  8892  003236  3210               	rrcf	___aomod@divisor+7,f,c
  8893  003238  320F               	rrcf	___aomod@divisor+6,f,c
  8894  00323A  320E               	rrcf	___aomod@divisor+5,f,c
  8895  00323C  320D               	rrcf	___aomod@divisor+4,f,c
  8896  00323E  320C               	rrcf	___aomod@divisor+3,f,c
  8897  003240  320B               	rrcf	___aomod@divisor+2,f,c
  8898  003242  320A               	rrcf	___aomod@divisor+1,f,c
  8899  003244  3209               	rrcf	___aomod@divisor,f,c
  8900  003246  2E11               	decfsz	___aomod@counter,f,c
  8901  003248  D7D3               	goto	u3920
  8902  00324A                     l3678:
  8903  00324A  5012               	movf	___aomod@sign,w,c
  8904  00324C  B4D8               	btfsc	status,2,c
  8905  00324E  D010               	goto	l3682
  8906  003250  1E08               	comf	___aomod@dividend+7,f,c
  8907  003252  1E07               	comf	___aomod@dividend+6,f,c
  8908  003254  1E06               	comf	___aomod@dividend+5,f,c
  8909  003256  1E05               	comf	___aomod@dividend+4,f,c
  8910  003258  1E04               	comf	___aomod@dividend+3,f,c
  8911  00325A  1E03               	comf	___aomod@dividend+2,f,c
  8912  00325C  1E02               	comf	___aomod@dividend+1,f,c
  8913  00325E  6C01               	negf	___aomod@dividend,c
  8914  003260  0E00               	movlw	0
  8915  003262  2202               	addwfc	___aomod@dividend+1,f,c
  8916  003264  2203               	addwfc	___aomod@dividend+2,f,c
  8917  003266  2204               	addwfc	___aomod@dividend+3,f,c
  8918  003268  2205               	addwfc	___aomod@dividend+4,f,c
  8919  00326A  2206               	addwfc	___aomod@dividend+5,f,c
  8920  00326C  2207               	addwfc	___aomod@dividend+6,f,c
  8921  00326E  2208               	addwfc	___aomod@dividend+7,f,c
  8922  003270                     l3682:
  8923  003270  C001  F001         	movff	___aomod@dividend,?___aomod
  8924  003274  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8925  003278  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8926  00327C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8927  003280  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8928  003284  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8929  003288  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8930  00328C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8931  003290  0012               	return		;funcret
  8932  003292                     __end_of___aomod:
  8933                           	opt callstack 0
  8934                           
  8935 ;; *************** function ___aodiv *****************
  8936 ;; Defined at:
  8937 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  dividend        8    0[COMRAM] long long 
  8940 ;;  divisor         8    8[COMRAM] long long 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  quotient        8   18[COMRAM] long long 
  8943 ;;  sign            1   17[COMRAM] unsigned char 
  8944 ;;  counter         1   16[COMRAM] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  8    0[COMRAM] long long 
  8947 ;; Registers used:
  8948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8954 ;;      Params:        16       0       0       0       0       0       0       0       0
  8955 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8957 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8958 ;;Total ram usage:       26 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_dtoa
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text32
  8968  002C7A                     __ptext32:
  8969                           	opt callstack 0
  8970  002C7A                     ___aodiv:
  8971                           	opt callstack 26
  8972                           
  8973                           ;incstack = 0
  8974  002C7A  0E00               	movlw	0
  8975  002C7C  6E12               	movwf	___aodiv@sign,c
  8976  002C7E  AE10               	btfss	___aodiv@divisor+7,7,c
  8977  002C80  D012               	goto	l3614
  8978  002C82  1E10               	comf	___aodiv@divisor+7,f,c
  8979  002C84  1E0F               	comf	___aodiv@divisor+6,f,c
  8980  002C86  1E0E               	comf	___aodiv@divisor+5,f,c
  8981  002C88  1E0D               	comf	___aodiv@divisor+4,f,c
  8982  002C8A  1E0C               	comf	___aodiv@divisor+3,f,c
  8983  002C8C  1E0B               	comf	___aodiv@divisor+2,f,c
  8984  002C8E  1E0A               	comf	___aodiv@divisor+1,f,c
  8985  002C90  6C09               	negf	___aodiv@divisor,c
  8986  002C92  0E00               	movlw	0
  8987  002C94  220A               	addwfc	___aodiv@divisor+1,f,c
  8988  002C96  220B               	addwfc	___aodiv@divisor+2,f,c
  8989  002C98  220C               	addwfc	___aodiv@divisor+3,f,c
  8990  002C9A  220D               	addwfc	___aodiv@divisor+4,f,c
  8991  002C9C  220E               	addwfc	___aodiv@divisor+5,f,c
  8992  002C9E  220F               	addwfc	___aodiv@divisor+6,f,c
  8993  002CA0  2210               	addwfc	___aodiv@divisor+7,f,c
  8994  002CA2  0E01               	movlw	1
  8995  002CA4  6E12               	movwf	___aodiv@sign,c
  8996  002CA6                     l3614:
  8997  002CA6  AE08               	btfss	___aodiv@dividend+7,7,c
  8998  002CA8  D012               	goto	l3620
  8999  002CAA  1E08               	comf	___aodiv@dividend+7,f,c
  9000  002CAC  1E07               	comf	___aodiv@dividend+6,f,c
  9001  002CAE  1E06               	comf	___aodiv@dividend+5,f,c
  9002  002CB0  1E05               	comf	___aodiv@dividend+4,f,c
  9003  002CB2  1E04               	comf	___aodiv@dividend+3,f,c
  9004  002CB4  1E03               	comf	___aodiv@dividend+2,f,c
  9005  002CB6  1E02               	comf	___aodiv@dividend+1,f,c
  9006  002CB8  6C01               	negf	___aodiv@dividend,c
  9007  002CBA  0E00               	movlw	0
  9008  002CBC  2202               	addwfc	___aodiv@dividend+1,f,c
  9009  002CBE  2203               	addwfc	___aodiv@dividend+2,f,c
  9010  002CC0  2204               	addwfc	___aodiv@dividend+3,f,c
  9011  002CC2  2205               	addwfc	___aodiv@dividend+4,f,c
  9012  002CC4  2206               	addwfc	___aodiv@dividend+5,f,c
  9013  002CC6  2207               	addwfc	___aodiv@dividend+6,f,c
  9014  002CC8  2208               	addwfc	___aodiv@dividend+7,f,c
  9015  002CCA  0E01               	movlw	1
  9016  002CCC  1A12               	xorwf	___aodiv@sign,f,c
  9017  002CCE                     l3620:
  9018  002CCE  EE20  F013         	lfsr	2,___aodiv@quotient
  9019  002CD2  0E07               	movlw	7
  9020  002CD4                     u3841:
  9021  002CD4  6ADE               	clrf	postinc2,c
  9022  002CD6  06E8               	decf	wreg,f,c
  9023  002CD8  E2FD               	bc	u3841
  9024  002CDA  5009               	movf	___aodiv@divisor,w,c
  9025  002CDC  100A               	iorwf	___aodiv@divisor+1,w,c
  9026  002CDE  100B               	iorwf	___aodiv@divisor+2,w,c
  9027  002CE0  100C               	iorwf	___aodiv@divisor+3,w,c
  9028  002CE2  100D               	iorwf	___aodiv@divisor+4,w,c
  9029  002CE4  100E               	iorwf	___aodiv@divisor+5,w,c
  9030  002CE6  100F               	iorwf	___aodiv@divisor+6,w,c
  9031  002CE8  1010               	iorwf	___aodiv@divisor+7,w,c
  9032  002CEA  B4D8               	btfsc	status,2,c
  9033  002CEC  D046               	goto	l3642
  9034  002CEE  0E01               	movlw	1
  9035  002CF0  6E11               	movwf	___aodiv@counter,c
  9036  002CF2  D00A               	goto	l3628
  9037  002CF4                     l3626:
  9038  002CF4  90D8               	bcf	status,0,c
  9039  002CF6  3609               	rlcf	___aodiv@divisor,f,c
  9040  002CF8  360A               	rlcf	___aodiv@divisor+1,f,c
  9041  002CFA  360B               	rlcf	___aodiv@divisor+2,f,c
  9042  002CFC  360C               	rlcf	___aodiv@divisor+3,f,c
  9043  002CFE  360D               	rlcf	___aodiv@divisor+4,f,c
  9044  002D00  360E               	rlcf	___aodiv@divisor+5,f,c
  9045  002D02  360F               	rlcf	___aodiv@divisor+6,f,c
  9046  002D04  3610               	rlcf	___aodiv@divisor+7,f,c
  9047  002D06  2A11               	incf	___aodiv@counter,f,c
  9048  002D08                     l3628:
  9049  002D08  AE10               	btfss	___aodiv@divisor+7,7,c
  9050  002D0A  D7F4               	goto	l3626
  9051  002D0C                     u3860:
  9052  002D0C  90D8               	bcf	status,0,c
  9053  002D0E  3613               	rlcf	___aodiv@quotient,f,c
  9054  002D10  3614               	rlcf	___aodiv@quotient+1,f,c
  9055  002D12  3615               	rlcf	___aodiv@quotient+2,f,c
  9056  002D14  3616               	rlcf	___aodiv@quotient+3,f,c
  9057  002D16  3617               	rlcf	___aodiv@quotient+4,f,c
  9058  002D18  3618               	rlcf	___aodiv@quotient+5,f,c
  9059  002D1A  3619               	rlcf	___aodiv@quotient+6,f,c
  9060  002D1C  361A               	rlcf	___aodiv@quotient+7,f,c
  9061  002D1E  5009               	movf	___aodiv@divisor,w,c
  9062  002D20  5C01               	subwf	___aodiv@dividend,w,c
  9063  002D22  500A               	movf	___aodiv@divisor+1,w,c
  9064  002D24  5802               	subwfb	___aodiv@dividend+1,w,c
  9065  002D26  500B               	movf	___aodiv@divisor+2,w,c
  9066  002D28  5803               	subwfb	___aodiv@dividend+2,w,c
  9067  002D2A  500C               	movf	___aodiv@divisor+3,w,c
  9068  002D2C  5804               	subwfb	___aodiv@dividend+3,w,c
  9069  002D2E  500D               	movf	___aodiv@divisor+4,w,c
  9070  002D30  5805               	subwfb	___aodiv@dividend+4,w,c
  9071  002D32  500E               	movf	___aodiv@divisor+5,w,c
  9072  002D34  5806               	subwfb	___aodiv@dividend+5,w,c
  9073  002D36  500F               	movf	___aodiv@divisor+6,w,c
  9074  002D38  5807               	subwfb	___aodiv@dividend+6,w,c
  9075  002D3A  5010               	movf	___aodiv@divisor+7,w,c
  9076  002D3C  5808               	subwfb	___aodiv@dividend+7,w,c
  9077  002D3E  A0D8               	btfss	status,0,c
  9078  002D40  D011               	goto	l3638
  9079  002D42  5009               	movf	___aodiv@divisor,w,c
  9080  002D44  5E01               	subwf	___aodiv@dividend,f,c
  9081  002D46  500A               	movf	___aodiv@divisor+1,w,c
  9082  002D48  5A02               	subwfb	___aodiv@dividend+1,f,c
  9083  002D4A  500B               	movf	___aodiv@divisor+2,w,c
  9084  002D4C  5A03               	subwfb	___aodiv@dividend+2,f,c
  9085  002D4E  500C               	movf	___aodiv@divisor+3,w,c
  9086  002D50  5A04               	subwfb	___aodiv@dividend+3,f,c
  9087  002D52  500D               	movf	___aodiv@divisor+4,w,c
  9088  002D54  5A05               	subwfb	___aodiv@dividend+4,f,c
  9089  002D56  500E               	movf	___aodiv@divisor+5,w,c
  9090  002D58  5A06               	subwfb	___aodiv@dividend+5,f,c
  9091  002D5A  500F               	movf	___aodiv@divisor+6,w,c
  9092  002D5C  5A07               	subwfb	___aodiv@dividend+6,f,c
  9093  002D5E  5010               	movf	___aodiv@divisor+7,w,c
  9094  002D60  5A08               	subwfb	___aodiv@dividend+7,f,c
  9095  002D62  8013               	bsf	___aodiv@quotient,0,c
  9096  002D64                     l3638:
  9097  002D64  90D8               	bcf	status,0,c
  9098  002D66  3210               	rrcf	___aodiv@divisor+7,f,c
  9099  002D68  320F               	rrcf	___aodiv@divisor+6,f,c
  9100  002D6A  320E               	rrcf	___aodiv@divisor+5,f,c
  9101  002D6C  320D               	rrcf	___aodiv@divisor+4,f,c
  9102  002D6E  320C               	rrcf	___aodiv@divisor+3,f,c
  9103  002D70  320B               	rrcf	___aodiv@divisor+2,f,c
  9104  002D72  320A               	rrcf	___aodiv@divisor+1,f,c
  9105  002D74  3209               	rrcf	___aodiv@divisor,f,c
  9106  002D76  2E11               	decfsz	___aodiv@counter,f,c
  9107  002D78  D7C9               	goto	u3860
  9108  002D7A                     l3642:
  9109  002D7A  5012               	movf	___aodiv@sign,w,c
  9110  002D7C  B4D8               	btfsc	status,2,c
  9111  002D7E  D010               	goto	l3646
  9112  002D80  1E1A               	comf	___aodiv@quotient+7,f,c
  9113  002D82  1E19               	comf	___aodiv@quotient+6,f,c
  9114  002D84  1E18               	comf	___aodiv@quotient+5,f,c
  9115  002D86  1E17               	comf	___aodiv@quotient+4,f,c
  9116  002D88  1E16               	comf	___aodiv@quotient+3,f,c
  9117  002D8A  1E15               	comf	___aodiv@quotient+2,f,c
  9118  002D8C  1E14               	comf	___aodiv@quotient+1,f,c
  9119  002D8E  6C13               	negf	___aodiv@quotient,c
  9120  002D90  0E00               	movlw	0
  9121  002D92  2214               	addwfc	___aodiv@quotient+1,f,c
  9122  002D94  2215               	addwfc	___aodiv@quotient+2,f,c
  9123  002D96  2216               	addwfc	___aodiv@quotient+3,f,c
  9124  002D98  2217               	addwfc	___aodiv@quotient+4,f,c
  9125  002D9A  2218               	addwfc	___aodiv@quotient+5,f,c
  9126  002D9C  2219               	addwfc	___aodiv@quotient+6,f,c
  9127  002D9E  221A               	addwfc	___aodiv@quotient+7,f,c
  9128  002DA0                     l3646:
  9129  002DA0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9130  002DA4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9131  002DA8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9132  002DAC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9133  002DB0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9134  002DB4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9135  002DB8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9136  002DBC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9137  002DC0  0012               	return		;funcret
  9138  002DC2                     __end_of___aodiv:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function _atoi *****************
  9142 ;; Defined at:
  9143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9146 ;;		 -> STR_19(14), STR_18(7), STR_17(8), STR_16(13), 
  9147 ;;		 -> STR_15(7), STR_14(8), STR_13(12), STR_12(7), 
  9148 ;;		 -> STR_11(8), STR_10(16), STR_6(14), STR_4(14), 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  n               2   20[COMRAM] int 
  9151 ;;  neg             2   13[COMRAM] int 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2    7[COMRAM] int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9161 ;;      Params:         2       0       0       0       0       0       0       0       0
  9162 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9163 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9164 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9165 ;;Total ram usage:       15 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    1
  9168 ;; This function calls:
  9169 ;;		___wmul
  9170 ;;		_isdigit
  9171 ;;		_isspace
  9172 ;; This function is called by:
  9173 ;;		_vfpfcnvrt
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text33
  9178  002F06                     __ptext33:
  9179                           	opt callstack 0
  9180  002F06                     _atoi:
  9181                           	opt callstack 26
  9182                           
  9183                           ;incstack = 0
  9184  002F06  0E00               	movlw	0
  9185  002F08  6E16               	movwf	atoi@n+1,c
  9186  002F0A  0E00               	movlw	0
  9187  002F0C  6E15               	movwf	atoi@n,c
  9188  002F0E  0E00               	movlw	0
  9189  002F10  6E0F               	movwf	atoi@neg+1,c
  9190  002F12  0E00               	movlw	0
  9191  002F14  6E0E               	movwf	atoi@neg,c
  9192  002F16  D002               	goto	l4506
  9193  002F18                     l4504:
  9194  002F18  4A08               	infsnz	atoi@s,f,c
  9195  002F1A  2A09               	incf	atoi@s+1,f,c
  9196  002F1C                     l4506:
  9197  002F1C  0E01               	movlw	1
  9198  002F1E  6E14               	movwf	_atoi$980,c
  9199  002F20  C008  FFF6         	movff	atoi@s,tblptrl
  9200  002F24  C009  FFF7         	movff	atoi@s+1,tblptrh
  9201  002F28                     	if	0	;tblptru may be non-zero
  9202  002F28                     	endif
  9203  002F28                     	if	0	;tblptru may be non-zero
  9204  002F28                     	endif
  9205  002F28  0008               	tblrd		*
  9206  002F2A  50F5               	movf	tablat,w,c
  9207  002F2C  0A20               	xorlw	32
  9208  002F2E  B4D8               	btfsc	status,2,c
  9209  002F30  D018               	goto	l4514
  9210  002F32  0EF7               	movlw	247
  9211  002F34  6E0A               	movwf	??_atoi& (0+255),c
  9212  002F36  0EFF               	movlw	255
  9213  002F38  6E0B               	movwf	(??_atoi+1)& (0+255),c
  9214  002F3A  C008  FFF6         	movff	atoi@s,tblptrl
  9215  002F3E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9216  002F42                     	if	0	;tblptru may be non-zero
  9217  002F42                     	endif
  9218  002F42                     	if	0	;tblptru may be non-zero
  9219  002F42                     	endif
  9220  002F42  0008               	tblrd		*
  9221  002F44  50F5               	movf	tablat,w,c
  9222  002F46  6E0C               	movwf	(??_atoi+2)& (0+255),c
  9223  002F48  6A0D               	clrf	(??_atoi+3)& (0+255),c
  9224  002F4A  500A               	movf	??_atoi,w,c
  9225  002F4C  260C               	addwf	??_atoi+2,f,c
  9226  002F4E  500B               	movf	??_atoi+1,w,c
  9227  002F50  220D               	addwfc	??_atoi+3,f,c
  9228  002F52  500D               	movf	??_atoi+3,w,c
  9229  002F54  E104               	bnz	u5350
  9230  002F56  0E05               	movlw	5
  9231  002F58  5C0C               	subwf	??_atoi+2,w,c
  9232  002F5A  A0D8               	btfss	status,0,c
  9233  002F5C  D002               	goto	l4514
  9234  002F5E                     u5350:
  9235  002F5E  0E00               	movlw	0
  9236  002F60  6E14               	movwf	_atoi$980,c
  9237  002F62                     l4514:
  9238  002F62  C014  F010         	movff	_atoi$980,_atoi$979
  9239  002F66  6A11               	clrf	_atoi$979+1,c
  9240  002F68  5010               	movf	_atoi$979,w,c
  9241  002F6A  1011               	iorwf	_atoi$979+1,w,c
  9242  002F6C  B4D8               	btfsc	status,2,c
  9243  002F6E  D008               	goto	l4524
  9244  002F70  D7D3               	goto	l4504
  9245  002F72                     l4520:
  9246  002F72  0E00               	movlw	0
  9247  002F74  6E0F               	movwf	atoi@neg+1,c
  9248  002F76  0E01               	movlw	1
  9249  002F78  6E0E               	movwf	atoi@neg,c
  9250  002F7A                     l4522:
  9251  002F7A  4A08               	infsnz	atoi@s,f,c
  9252  002F7C  2A09               	incf	atoi@s+1,f,c
  9253  002F7E  D02E               	goto	l4530
  9254  002F80                     l4524:
  9255  002F80  C008  FFF6         	movff	atoi@s,tblptrl
  9256  002F84  C009  FFF7         	movff	atoi@s+1,tblptrh
  9257  002F88                     	if	0	;tblptru may be non-zero
  9258  002F88                     	endif
  9259  002F88                     	if	0	;tblptru may be non-zero
  9260  002F88                     	endif
  9261  002F88  0008               	tblrd		*
  9262  002F8A  50F5               	movf	tablat,w,c
  9263  002F8C  6E0A               	movwf	??_atoi& (0+255),c
  9264  002F8E  6A0B               	clrf	(??_atoi+1)& (0+255),c
  9265                           
  9266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9267                           ; Switch size 1, requested type "simple"
  9268                           ; Number of cases is 1, Range of values is 0 to 0
  9269                           ; switch strategies available:
  9270                           ; Name         Instructions Cycles
  9271                           ; simple_byte            4     3 (average)
  9272                           ;	Chosen strategy is simple_byte
  9273  002F90  500B               	movf	??_atoi+1,w,c
  9274  002F92  0A00               	xorlw	0	; case 0
  9275  002F94  A4D8               	btfss	status,2,c
  9276  002F96  D022               	goto	l4530
  9277                           
  9278                           ; Switch size 1, requested type "simple"
  9279                           ; Number of cases is 2, Range of values is 43 to 45
  9280                           ; switch strategies available:
  9281                           ; Name         Instructions Cycles
  9282                           ; simple_byte            7     4 (average)
  9283                           ;	Chosen strategy is simple_byte
  9284  002F98  500A               	movf	??_atoi,w,c
  9285  002F9A  0A2B               	xorlw	43	; case 43
  9286  002F9C  B4D8               	btfsc	status,2,c
  9287  002F9E  D7ED               	goto	l4522
  9288  002FA0  0A06               	xorlw	6	; case 45
  9289  002FA2  B4D8               	btfsc	status,2,c
  9290  002FA4  D7E6               	goto	l4520
  9291  002FA6  D01A               	goto	l4530
  9292  002FA8                     l4526:
  9293  002FA8  C015  F001         	movff	atoi@n,___wmul@multiplier
  9294  002FAC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9295  002FB0  0E00               	movlw	0
  9296  002FB2  6E04               	movwf	___wmul@multiplicand+1,c
  9297  002FB4  0E0A               	movlw	10
  9298  002FB6  6E03               	movwf	___wmul@multiplicand,c
  9299  002FB8  EC05  F020         	call	___wmul	;wreg free
  9300  002FBC  C008  FFF6         	movff	atoi@s,tblptrl
  9301  002FC0  C009  FFF7         	movff	atoi@s+1,tblptrh
  9302  002FC4                     	if	0	;tblptru may be non-zero
  9303  002FC4                     	endif
  9304  002FC4                     	if	0	;tblptru may be non-zero
  9305  002FC4                     	endif
  9306  002FC4  0008               	tblrd		*
  9307  002FC6  50F5               	movf	tablat,w,c
  9308  002FC8  5E01               	subwf	?___wmul,f,c
  9309  002FCA  0E00               	movlw	0
  9310  002FCC  5A02               	subwfb	?___wmul+1,f,c
  9311  002FCE  0E30               	movlw	48
  9312  002FD0  2401               	addwf	?___wmul,w,c
  9313  002FD2  6E15               	movwf	atoi@n,c
  9314  002FD4  0E00               	movlw	0
  9315  002FD6  2002               	addwfc	?___wmul+1,w,c
  9316  002FD8  6E16               	movwf	atoi@n+1,c
  9317  002FDA  D7CF               	goto	l4522
  9318  002FDC                     l4530:
  9319  002FDC  0ED0               	movlw	208
  9320  002FDE  6E0A               	movwf	??_atoi& (0+255),c
  9321  002FE0  0EFF               	movlw	255
  9322  002FE2  6E0B               	movwf	(??_atoi+1)& (0+255),c
  9323  002FE4  C008  FFF6         	movff	atoi@s,tblptrl
  9324  002FE8  C009  FFF7         	movff	atoi@s+1,tblptrh
  9325  002FEC                     	if	0	;tblptru may be non-zero
  9326  002FEC                     	endif
  9327  002FEC                     	if	0	;tblptru may be non-zero
  9328  002FEC                     	endif
  9329  002FEC  0008               	tblrd		*
  9330  002FEE  50F5               	movf	tablat,w,c
  9331  002FF0  6E0C               	movwf	(??_atoi+2)& (0+255),c
  9332  002FF2  6A0D               	clrf	(??_atoi+3)& (0+255),c
  9333  002FF4  500A               	movf	??_atoi,w,c
  9334  002FF6  260C               	addwf	??_atoi+2,f,c
  9335  002FF8  500B               	movf	??_atoi+1,w,c
  9336  002FFA  220D               	addwfc	??_atoi+3,f,c
  9337  002FFC  500D               	movf	??_atoi+3,w,c
  9338  002FFE  E106               	bnz	u5370
  9339  003000  0E0A               	movlw	10
  9340  003002  5C0C               	subwf	??_atoi+2,w,c
  9341  003004  B0D8               	btfsc	status,0,c
  9342  003006  D002               	goto	u5370
  9343  003008  0E01               	movlw	1
  9344  00300A  D001               	goto	u5380
  9345  00300C                     u5370:
  9346  00300C  0E00               	movlw	0
  9347  00300E                     u5380:
  9348  00300E  6E12               	movwf	_atoi$981,c
  9349  003010  6A13               	clrf	_atoi$981+1,c
  9350  003012  5012               	movf	_atoi$981,w,c
  9351  003014  1013               	iorwf	_atoi$981+1,w,c
  9352  003016  A4D8               	btfss	status,2,c
  9353  003018  D7C7               	goto	l4526
  9354  00301A  500E               	movf	atoi@neg,w,c
  9355  00301C  100F               	iorwf	atoi@neg+1,w,c
  9356  00301E  A4D8               	btfss	status,2,c
  9357  003020  D00D               	goto	l1098
  9358  003022  C015  F00A         	movff	atoi@n,??_atoi
  9359  003026  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9360  00302A  1E0A               	comf	??_atoi,f,c
  9361  00302C  1E0B               	comf	??_atoi+1,f,c
  9362  00302E  4A0A               	infsnz	??_atoi,f,c
  9363  003030  2A0B               	incf	??_atoi+1,f,c
  9364  003032  C00A  F008         	movff	??_atoi,?_atoi
  9365  003036  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9366  00303A  0012               	return	
  9367  00303C                     l1098:
  9368  00303C  C015  F008         	movff	atoi@n,?_atoi
  9369  003040  C016  F009         	movff	atoi@n+1,?_atoi+1
  9370  003044  0012               	return		;funcret
  9371  003046                     __end_of_atoi:
  9372                           	opt callstack 0
  9373                           
  9374 ;; *************** function _isspace *****************
  9375 ;; Defined at:
  9376 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  c               2    0[COMRAM] int 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  2    0[COMRAM] int 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9390 ;;      Params:         2       0       0       0       0       0       0       0       0
  9391 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9393 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9394 ;;Total ram usage:        7 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_atoi
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text34
  9404  003EAA                     __ptext34:
  9405                           	opt callstack 0
  9406  003EAA                     _isspace:
  9407                           	opt callstack 26
  9408                           
  9409                           ;incstack = 0
  9410  003EAA  0E01               	movlw	1
  9411  003EAC  6E07               	movwf	_isspace$1010,c
  9412  003EAE  0E20               	movlw	32
  9413  003EB0  1801               	xorwf	isspace@c,w,c
  9414  003EB2  1002               	iorwf	isspace@c+1,w,c
  9415  003EB4  B4D8               	btfsc	status,2,c
  9416  003EB6  D014               	goto	l4138
  9417  003EB8  0EF7               	movlw	247
  9418  003EBA  6E03               	movwf	??_isspace& (0+255),c
  9419  003EBC  0EFF               	movlw	255
  9420  003EBE  6E04               	movwf	(??_isspace+1)& (0+255),c
  9421  003EC0  C001  F005         	movff	isspace@c,??_isspace+2
  9422  003EC4  C002  F006         	movff	isspace@c+1,??_isspace+3
  9423  003EC8  5003               	movf	??_isspace,w,c
  9424  003ECA  2605               	addwf	??_isspace+2,f,c
  9425  003ECC  5004               	movf	??_isspace+1,w,c
  9426  003ECE  2206               	addwfc	??_isspace+3,f,c
  9427  003ED0  5006               	movf	??_isspace+3,w,c
  9428  003ED2  E104               	bnz	u4660
  9429  003ED4  0E05               	movlw	5
  9430  003ED6  5C05               	subwf	??_isspace+2,w,c
  9431  003ED8  A0D8               	btfss	status,0,c
  9432  003EDA  D002               	goto	l4138
  9433  003EDC                     u4660:
  9434  003EDC  0E00               	movlw	0
  9435  003EDE  6E07               	movwf	_isspace$1010,c
  9436  003EE0                     l4138:
  9437  003EE0  C007  F001         	movff	_isspace$1010,?_isspace
  9438  003EE4  6A02               	clrf	?_isspace+1,c
  9439  003EE6  0012               	return		;funcret
  9440  003EE8                     __end_of_isspace:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function _isdigit *****************
  9444 ;; Defined at:
  9445 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  c               2    0[COMRAM] int 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  2    0[COMRAM] int 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9459 ;;      Params:         2       0       0       0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9461 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9462 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9463 ;;Total ram usage:        6 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_vfpfcnvrt
  9469 ;;		_atoi
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text35
  9474  003F82                     __ptext35:
  9475                           	opt callstack 0
  9476  003F82                     _isdigit:
  9477                           	opt callstack 27
  9478                           
  9479                           ;incstack = 0
  9480  003F82  0ED0               	movlw	208
  9481  003F84  6E03               	movwf	??_isdigit& (0+255),c
  9482  003F86  0EFF               	movlw	255
  9483  003F88  6E04               	movwf	(??_isdigit+1)& (0+255),c
  9484  003F8A  C001  F005         	movff	isdigit@c,??_isdigit+2
  9485  003F8E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9486  003F92  5003               	movf	??_isdigit,w,c
  9487  003F94  2605               	addwf	??_isdigit+2,f,c
  9488  003F96  5004               	movf	??_isdigit+1,w,c
  9489  003F98  2206               	addwfc	??_isdigit+3,f,c
  9490  003F9A  5006               	movf	??_isdigit+3,w,c
  9491  003F9C  E106               	bnz	u3800
  9492  003F9E  0E0A               	movlw	10
  9493  003FA0  5C05               	subwf	??_isdigit+2,w,c
  9494  003FA2  B0D8               	btfsc	status,0,c
  9495  003FA4  D002               	goto	u3800
  9496  003FA6  0E01               	movlw	1
  9497  003FA8  D001               	goto	u3810
  9498  003FAA                     u3800:
  9499  003FAA  0E00               	movlw	0
  9500  003FAC                     u3810:
  9501  003FAC  6E01               	movwf	?_isdigit,c
  9502  003FAE  6A02               	clrf	?_isdigit+1,c
  9503  003FB0  0012               	return		;funcret
  9504  003FB2                     __end_of_isdigit:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function _Lcd_Out2 *****************
  9508 ;; Defined at:
  9509 ;;		line 115 in file "./flex_lcd.h"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  y               1    wreg     unsigned char 
  9512 ;;  x               1    3[COMRAM] unsigned char 
  9513 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  9514 ;;		 -> palabra(17), numero3(17), numero2(17), numero1(17), 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  y               1    8[COMRAM] unsigned char 
  9517 ;;  data            1    9[COMRAM] unsigned char 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9527 ;;      Params:         3       0       0       0       0       0       0       0       0
  9528 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9529 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9530 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9531 ;;Total ram usage:        7 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    1
  9534 ;; This function calls:
  9535 ;;		_Lcd_Chr_CP
  9536 ;;		_Lcd_Cmd
  9537 ;; This function is called by:
  9538 ;;		_main
  9539 ;;		_resta
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text36
  9544  003C40                     __ptext36:
  9545                           	opt callstack 0
  9546  003C40                     _Lcd_Out2:
  9547                           	opt callstack 28
  9548                           
  9549                           ;incstack = 0
  9550                           ;Lcd_Out2@y stored from wreg
  9551  003C40  6E09               	movwf	Lcd_Out2@y,c
  9552                           
  9553                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  9554  003C42  D00D               	goto	l4786
  9555  003C44                     l4776:
  9556  003C44  5004               	movf	Lcd_Out2@x,w,c
  9557  003C46  0F80               	addlw	128
  9558  003C48  D008               	goto	L18
  9559  003C4A                     l4778:
  9560  003C4A  5004               	movf	Lcd_Out2@x,w,c
  9561  003C4C  0FC0               	addlw	192
  9562  003C4E  D005               	goto	L18
  9563  003C50                     l4780:
  9564  003C50  5004               	movf	Lcd_Out2@x,w,c
  9565  003C52  0F94               	addlw	148
  9566  003C54  D002               	goto	L18
  9567  003C56                     l4782:
  9568  003C56  5004               	movf	Lcd_Out2@x,w,c
  9569  003C58  0FD4               	addlw	212
  9570  003C5A                     L18:
  9571  003C5A  6E0A               	movwf	Lcd_Out2@data,c
  9572  003C5C  D014               	goto	l4788
  9573  003C5E                     l4786:
  9574  003C5E  5009               	movf	Lcd_Out2@y,w,c
  9575  003C60  6E07               	movwf	??_Lcd_Out2& (0+255),c
  9576  003C62  6A08               	clrf	(??_Lcd_Out2+1)& (0+255),c
  9577                           
  9578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9579                           ; Switch size 1, requested type "simple"
  9580                           ; Number of cases is 1, Range of values is 0 to 0
  9581                           ; switch strategies available:
  9582                           ; Name         Instructions Cycles
  9583                           ; simple_byte            4     3 (average)
  9584                           ;	Chosen strategy is simple_byte
  9585  003C64  5008               	movf	??_Lcd_Out2+1,w,c
  9586  003C66  0A00               	xorlw	0	; case 0
  9587  003C68  A4D8               	btfss	status,2,c
  9588  003C6A  D00D               	goto	l4788
  9589                           
  9590                           ; Switch size 1, requested type "simple"
  9591                           ; Number of cases is 4, Range of values is 1 to 4
  9592                           ; switch strategies available:
  9593                           ; Name         Instructions Cycles
  9594                           ; simple_byte           13     7 (average)
  9595                           ;	Chosen strategy is simple_byte
  9596  003C6C  5007               	movf	??_Lcd_Out2,w,c
  9597  003C6E  0A01               	xorlw	1	; case 1
  9598  003C70  B4D8               	btfsc	status,2,c
  9599  003C72  D7E8               	goto	l4776
  9600  003C74  0A03               	xorlw	3	; case 2
  9601  003C76  B4D8               	btfsc	status,2,c
  9602  003C78  D7E8               	goto	l4778
  9603  003C7A  0A01               	xorlw	1	; case 3
  9604  003C7C  B4D8               	btfsc	status,2,c
  9605  003C7E  D7E8               	goto	l4780
  9606  003C80  0A07               	xorlw	7	; case 4
  9607  003C82  B4D8               	btfsc	status,2,c
  9608  003C84  D7E8               	goto	l4782
  9609  003C86                     l4788:
  9610                           
  9611                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  9612  003C86  500A               	movf	Lcd_Out2@data,w,c
  9613  003C88  EC49  F019         	call	_Lcd_Cmd
  9614                           
  9615                           ;./flex_lcd.h: 127: while(*buffer)
  9616  003C8C  D009               	goto	l4794
  9617  003C8E                     l4790:
  9618                           
  9619                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  9620  003C8E  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9621  003C92  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9622  003C96  50DF               	movf	indf2,w,c
  9623  003C98  EC23  F018         	call	_Lcd_Chr_CP
  9624                           
  9625                           ;./flex_lcd.h: 130:     buffer++;
  9626  003C9C  4A05               	infsnz	Lcd_Out2@buffer,f,c
  9627  003C9E  2A06               	incf	Lcd_Out2@buffer+1,f,c
  9628  003CA0                     l4794:
  9629                           
  9630                           ;./flex_lcd.h: 127: while(*buffer)
  9631  003CA0  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  9632  003CA4  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  9633  003CA8  50DF               	movf	indf2,w,c
  9634  003CAA  B4D8               	btfsc	status,2,c
  9635  003CAC  0012               	return	
  9636  003CAE  D7EF               	goto	l4790
  9637  003CB0                     __end_of_Lcd_Out2:
  9638                           	opt callstack 0
  9639                           
  9640 ;; *************** function _mult *****************
  9641 ;; Defined at:
  9642 ;;		line 200 in file "practica5_0_1.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  s1              2   10[COMRAM] int 
  9645 ;;  s2              2   12[COMRAM] int 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  i               2   16[COMRAM] int 
  9648 ;;  x               2   18[COMRAM] int 
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  2   10[COMRAM] int 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9658 ;;      Params:         4       0       0       0       0       0       0       0       0
  9659 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9661 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9662 ;;Total ram usage:       10 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    1
  9665 ;; This function calls:
  9666 ;;		___wmul
  9667 ;; This function is called by:
  9668 ;;		_main
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text37
  9673  003CB0                     __ptext37:
  9674                           	opt callstack 0
  9675  003CB0                     _mult:
  9676                           	opt callstack 29
  9677                           
  9678                           ;practica5_0_1.c: 202:     x=s1*s2;
  9679                           
  9680                           ;incstack = 0
  9681  003CB0  C00B  F001         	movff	mult@s1,___wmul@multiplier
  9682  003CB4  C00C  F002         	movff	mult@s1+1,___wmul@multiplier+1
  9683  003CB8  C00D  F003         	movff	mult@s2,___wmul@multiplicand
  9684  003CBC  C00E  F004         	movff	mult@s2+1,___wmul@multiplicand+1
  9685  003CC0  EC05  F020         	call	___wmul	;wreg free
  9686  003CC4  C001  F013         	movff	?___wmul,mult@x
  9687  003CC8  C002  F014         	movff	?___wmul+1,mult@x+1
  9688                           
  9689                           ;practica5_0_1.c: 203:     if(x>255){
  9690  003CCC  BE14               	btfsc	mult@x+1,7,c
  9691  003CCE  D023               	goto	l146
  9692  003CD0  0414               	decf	mult@x+1,w,c
  9693  003CD2  A0D8               	btfss	status,0,c
  9694  003CD4  D020               	goto	l146
  9695                           
  9696                           ;practica5_0_1.c: 204:         int i;;practica5_0_1.c: 205:         for(i=0;i<255;i+=10)
      +                          {
  9697  003CD6  0E00               	movlw	0
  9698  003CD8  6E12               	movwf	mult@i+1,c
  9699  003CDA  0E00               	movlw	0
  9700  003CDC  6E11               	movwf	mult@i,c
  9701  003CDE                     l147:
  9702                           
  9703                           ;practica5_0_1.c: 206:             PORTD=i;
  9704  003CDE  C011  FF83         	movff	mult@i,3971	;volatile
  9705                           
  9706                           ;practica5_0_1.c: 207:             _delay((unsigned long)((100)*(8000000/4000.0)));
  9707  003CE2  0E02               	movlw	2
  9708  003CE4  6E10               	movwf	(??_mult+1)& (0+255),c
  9709  003CE6  0E04               	movlw	4
  9710  003CE8  6E0F               	movwf	??_mult& (0+255),c
  9711  003CEA  0EBA               	movlw	186
  9712  003CEC                     u6297:
  9713  003CEC  2EE8               	decfsz	wreg,f,c
  9714  003CEE  D7FE               	bra	u6297
  9715  003CF0  2E0F               	decfsz	??_mult& (0+255),f,c
  9716  003CF2  D7FC               	bra	u6297
  9717  003CF4  2E10               	decfsz	(??_mult+1)& (0+255),f,c
  9718  003CF6  D7FA               	bra	u6297
  9719  003CF8  D000               	nop2	
  9720                           
  9721                           ;practica5_0_1.c: 208:         }
  9722  003CFA  0E0A               	movlw	10
  9723  003CFC  2611               	addwf	mult@i,f,c
  9724  003CFE  0E00               	movlw	0
  9725  003D00  2212               	addwfc	mult@i+1,f,c
  9726  003D02  BE12               	btfsc	mult@i+1,7,c
  9727  003D04  D7EC               	goto	l147
  9728  003D06  5012               	movf	mult@i+1,w,c
  9729  003D08  E103               	bnz	u5820
  9730  003D0A  2811               	incf	mult@i,w,c
  9731  003D0C  A0D8               	btfss	status,0,c
  9732  003D0E  D7E7               	goto	l147
  9733  003D10                     u5820:
  9734                           
  9735                           ;practica5_0_1.c: 210:         return x;
  9736  003D10  680B               	setf	?_mult,c
  9737  003D12  680C               	setf	?_mult+1,c
  9738  003D14  0012               	return	
  9739  003D16                     l146:
  9740  003D16  C013  F00B         	movff	mult@x,?_mult
  9741  003D1A  C014  F00C         	movff	mult@x+1,?_mult+1
  9742  003D1E  0012               	return		;funcret
  9743  003D20                     __end_of_mult:
  9744                           	opt callstack 0
  9745                           
  9746 ;; *************** function ___wmul *****************
  9747 ;; Defined at:
  9748 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  multiplier      2    0[COMRAM] unsigned int 
  9751 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  product         2    4[COMRAM] unsigned int 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  2    0[COMRAM] unsigned int 
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0, prodl, prodh
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9763 ;;      Params:         4       0       0       0       0       0       0       0       0
  9764 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9766 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9767 ;;Total ram usage:        6 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_mult
  9773 ;;		_atoi
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text38
  9778  00400A                     __ptext38:
  9779                           	opt callstack 0
  9780  00400A                     ___wmul:
  9781                           	opt callstack 26
  9782                           
  9783                           ;incstack = 0
  9784  00400A  5001               	movf	___wmul@multiplier,w,c
  9785  00400C  0203               	mulwf	___wmul@multiplicand,c
  9786  00400E  CFF3 F005          	movff	prodl,___wmul@product
  9787  004012  CFF4 F006          	movff	prodh,___wmul@product+1
  9788  004016  5001               	movf	___wmul@multiplier,w,c
  9789  004018  0204               	mulwf	___wmul@multiplicand+1,c
  9790  00401A  50F3               	movf	prodl,w,c
  9791  00401C  2606               	addwf	___wmul@product+1,f,c
  9792  00401E  5002               	movf	___wmul@multiplier+1,w,c
  9793  004020  0203               	mulwf	___wmul@multiplicand,c
  9794  004022  50F3               	movf	prodl,w,c
  9795  004024  2606               	addwf	___wmul@product+1,f,c
  9796  004026  C005  F001         	movff	___wmul@product,?___wmul
  9797  00402A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9798  00402E  0012               	return		;funcret
  9799  004030                     __end_of___wmul:
  9800                           	opt callstack 0
  9801                           
  9802 ;; *************** function ___xxtofl *****************
  9803 ;; Defined at:
  9804 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  sign            1    wreg     unsigned char 
  9807 ;;  val             4   92[BANK0 ] long 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  sign            1  100[BANK0 ] unsigned char 
  9810 ;;  arg             4  102[BANK0 ] unsigned long 
  9811 ;;  exp             1  101[BANK0 ] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  4   92[BANK0 ] unsigned char 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9821 ;;      Params:         0       4       0       0       0       0       0       0       0
  9822 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9823 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9824 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9825 ;;Total ram usage:       14 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_main
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text39
  9835  002DC2                     __ptext39:
  9836                           	opt callstack 0
  9837  002DC2                     ___xxtofl:
  9838                           	opt callstack 30
  9839                           
  9840                           ;incstack = 0
  9841                           ;___xxtofl@sign stored from wreg
  9842  002DC2  0100               	movlb	0	; () banked
  9843  002DC4  6FC4               	movwf	___xxtofl@sign& (0+255),b
  9844  002DC6  0100               	movlb	0	; () banked
  9845  002DC8  51C4               	movf	___xxtofl@sign& (0+255),w,b
  9846  002DCA  A4D8               	btfss	status,2,c
  9847                           
  9848                           ; BSR set to: 0
  9849  002DCC  AFBF               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9850  002DCE  D01A               	goto	l1036
  9851                           
  9852                           ; BSR set to: 0
  9853  002DD0  C0BC  F0C0         	movff	___xxtofl@val,??___xxtofl
  9854  002DD4  C0BD  F0C1         	movff	___xxtofl@val+1,??___xxtofl+1
  9855  002DD8  C0BE  F0C2         	movff	___xxtofl@val+2,??___xxtofl+2
  9856  002DDC  C0BF  F0C3         	movff	___xxtofl@val+3,??___xxtofl+3
  9857  002DE0  1FC0               	comf	??___xxtofl& (0+255),f,b
  9858  002DE2  1FC1               	comf	(??___xxtofl+1)& (0+255),f,b
  9859  002DE4  1FC2               	comf	(??___xxtofl+2)& (0+255),f,b
  9860  002DE6  1FC3               	comf	(??___xxtofl+3)& (0+255),f,b
  9861  002DE8  2BC0               	incf	??___xxtofl& (0+255),f,b
  9862  002DEA  0E00               	movlw	0
  9863  002DEC  23C1               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9864  002DEE  23C2               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9865  002DF0  23C3               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9866  002DF2  C0C0  F0C6         	movff	??___xxtofl,___xxtofl@arg
  9867  002DF6  C0C1  F0C7         	movff	??___xxtofl+1,___xxtofl@arg+1
  9868  002DFA  C0C2  F0C8         	movff	??___xxtofl+2,___xxtofl@arg+2
  9869  002DFE  C0C3  F0C9         	movff	??___xxtofl+3,___xxtofl@arg+3
  9870  002E02  D008               	goto	l4986
  9871  002E04                     l1036:
  9872                           
  9873                           ; BSR set to: 0
  9874  002E04  C0BC  F0C6         	movff	___xxtofl@val,___xxtofl@arg
  9875  002E08  C0BD  F0C7         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9876  002E0C  C0BE  F0C8         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9877  002E10  C0BF  F0C9         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9878  002E14                     l4986:
  9879                           
  9880                           ; BSR set to: 0
  9881  002E14  51BC               	movf	___xxtofl@val& (0+255),w,b
  9882  002E16  11BD               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9883  002E18  11BE               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9884  002E1A  11BF               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9885  002E1C  A4D8               	btfss	status,2,c
  9886  002E1E  D009               	goto	l4992
  9887                           
  9888                           ; BSR set to: 0
  9889  002E20  0E00               	movlw	0
  9890  002E22  6FBC               	movwf	?___xxtofl& (0+255),b
  9891  002E24  0E00               	movlw	0
  9892  002E26  6FBD               	movwf	(?___xxtofl+1)& (0+255),b
  9893  002E28  0E00               	movlw	0
  9894  002E2A  6FBE               	movwf	(?___xxtofl+2)& (0+255),b
  9895  002E2C  0E00               	movlw	0
  9896  002E2E  6FBF               	movwf	(?___xxtofl+3)& (0+255),b
  9897  002E30  0012               	return	
  9898  002E32                     l4992:
  9899                           
  9900                           ; BSR set to: 0
  9901  002E32  0E96               	movlw	150
  9902  002E34  6FC5               	movwf	___xxtofl@exp& (0+255),b
  9903  002E36  D006               	goto	l4996
  9904  002E38                     l4994:
  9905                           
  9906                           ; BSR set to: 0
  9907  002E38  2BC5               	incf	___xxtofl@exp& (0+255),f,b
  9908  002E3A  90D8               	bcf	status,0,c
  9909  002E3C  33C9               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9910  002E3E  33C8               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9911  002E40  33C7               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9912  002E42  33C6               	rrcf	___xxtofl@arg& (0+255),f,b
  9913  002E44                     l4996:
  9914                           
  9915                           ; BSR set to: 0
  9916  002E44  0E00               	movlw	0
  9917  002E46  15C6               	andwf	___xxtofl@arg& (0+255),w,b
  9918  002E48  6FC0               	movwf	??___xxtofl& (0+255),b
  9919  002E4A  0E00               	movlw	0
  9920  002E4C  15C7               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9921  002E4E  6FC1               	movwf	(??___xxtofl+1)& (0+255),b
  9922  002E50  0E00               	movlw	0
  9923  002E52  15C8               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9924  002E54  6FC2               	movwf	(??___xxtofl+2)& (0+255),b
  9925  002E56  0EFE               	movlw	254
  9926  002E58  15C9               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9927  002E5A  6FC3               	movwf	(??___xxtofl+3)& (0+255),b
  9928  002E5C  51C0               	movf	??___xxtofl& (0+255),w,b
  9929  002E5E  11C1               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9930  002E60  11C2               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9931  002E62  11C3               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9932  002E64  B4D8               	btfsc	status,2,c
  9933  002E66  D00D               	goto	l1043
  9934  002E68  D7E7               	goto	l4994
  9935  002E6A                     l4998:
  9936                           
  9937                           ; BSR set to: 0
  9938  002E6A  2BC5               	incf	___xxtofl@exp& (0+255),f,b
  9939                           
  9940                           ; BSR set to: 0
  9941  002E6C  0E01               	movlw	1
  9942  002E6E  27C6               	addwf	___xxtofl@arg& (0+255),f,b
  9943  002E70  0E00               	movlw	0
  9944  002E72  23C7               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9945  002E74  23C8               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9946  002E76  23C9               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9947                           
  9948                           ; BSR set to: 0
  9949  002E78  90D8               	bcf	status,0,c
  9950  002E7A  33C9               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9951  002E7C  33C8               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9952  002E7E  33C7               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9953  002E80  33C6               	rrcf	___xxtofl@arg& (0+255),f,b
  9954  002E82                     l1043:
  9955                           
  9956                           ; BSR set to: 0
  9957  002E82  0E00               	movlw	0
  9958  002E84  15C6               	andwf	___xxtofl@arg& (0+255),w,b
  9959  002E86  6FC0               	movwf	??___xxtofl& (0+255),b
  9960  002E88  0E00               	movlw	0
  9961  002E8A  15C7               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9962  002E8C  6FC1               	movwf	(??___xxtofl+1)& (0+255),b
  9963  002E8E  0E00               	movlw	0
  9964  002E90  15C8               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9965  002E92  6FC2               	movwf	(??___xxtofl+2)& (0+255),b
  9966  002E94  0EFF               	movlw	255
  9967  002E96  15C9               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9968  002E98  6FC3               	movwf	(??___xxtofl+3)& (0+255),b
  9969  002E9A  51C0               	movf	??___xxtofl& (0+255),w,b
  9970  002E9C  11C1               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9971  002E9E  11C2               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9972  002EA0  11C3               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9973  002EA2  B4D8               	btfsc	status,2,c
  9974  002EA4  D007               	goto	l5006
  9975  002EA6  D7E1               	goto	l4998
  9976  002EA8                     l5004:
  9977                           
  9978                           ; BSR set to: 0
  9979  002EA8  07C5               	decf	___xxtofl@exp& (0+255),f,b
  9980  002EAA  90D8               	bcf	status,0,c
  9981  002EAC  37C6               	rlcf	___xxtofl@arg& (0+255),f,b
  9982  002EAE  37C7               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9983  002EB0  37C8               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9984  002EB2  37C9               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9985  002EB4                     l5006:
  9986                           
  9987                           ; BSR set to: 0
  9988  002EB4  BFC8               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9989  002EB6  D003               	goto	u5910
  9990                           
  9991                           ; BSR set to: 0
  9992  002EB8  0E02               	movlw	2
  9993  002EBA  61C5               	cpfslt	___xxtofl@exp& (0+255),b
  9994  002EBC  D7F5               	goto	l5004
  9995  002EBE                     u5910:
  9996                           
  9997                           ; BSR set to: 0
  9998  002EBE  A1C5               	btfss	___xxtofl@exp& (0+255),0,b
  9999                           
 10000                           ; BSR set to: 0
 10001  002EC0  9FC8               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10002                           
 10003                           ; BSR set to: 0
 10004  002EC2  90D8               	bcf	status,0,c
 10005  002EC4  33C5               	rrcf	___xxtofl@exp& (0+255),f,b
 10006                           
 10007                           ; BSR set to: 0
 10008  002EC6  C0C5  F0C0         	movff	___xxtofl@exp,??___xxtofl
 10009  002ECA  6BC1               	clrf	(??___xxtofl+1)& (0+255),b
 10010  002ECC  6BC2               	clrf	(??___xxtofl+2)& (0+255),b
 10011  002ECE  6BC3               	clrf	(??___xxtofl+3)& (0+255),b
 10012  002ED0  C0C0  F0C3         	movff	??___xxtofl,??___xxtofl+3
 10013  002ED4  6BC2               	clrf	(??___xxtofl+2)& (0+255),b
 10014  002ED6  6BC1               	clrf	(??___xxtofl+1)& (0+255),b
 10015  002ED8  6BC0               	clrf	??___xxtofl& (0+255),b
 10016  002EDA  51C0               	movf	??___xxtofl& (0+255),w,b
 10017  002EDC  13C6               	iorwf	___xxtofl@arg& (0+255),f,b
 10018  002EDE  51C1               	movf	(??___xxtofl+1)& (0+255),w,b
 10019  002EE0  13C7               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10020  002EE2  51C2               	movf	(??___xxtofl+2)& (0+255),w,b
 10021  002EE4  13C8               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10022  002EE6  51C3               	movf	(??___xxtofl+3)& (0+255),w,b
 10023  002EE8  13C9               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10024                           
 10025                           ; BSR set to: 0
 10026  002EEA  51C4               	movf	___xxtofl@sign& (0+255),w,b
 10027  002EEC  A4D8               	btfss	status,2,c
 10028                           
 10029                           ; BSR set to: 0
 10030  002EEE  AFBF               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10031  002EF0  D001               	goto	l5022
 10032                           
 10033                           ; BSR set to: 0
 10034  002EF2  8FC9               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10035  002EF4                     l5022:
 10036                           
 10037                           ; BSR set to: 0
 10038  002EF4  C0C6  F0BC         	movff	___xxtofl@arg,?___xxtofl
 10039  002EF8  C0C7  F0BD         	movff	___xxtofl@arg+1,?___xxtofl+1
 10040  002EFC  C0C8  F0BE         	movff	___xxtofl@arg+2,?___xxtofl+2
 10041  002F00  C0C9  F0BF         	movff	___xxtofl@arg+3,?___xxtofl+3
 10042                           
 10043                           ; BSR set to: 0
 10044  002F04  0012               	return		;funcret
 10045  002F06                     __end_of___xxtofl:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _Lcd_Out *****************
 10049 ;; Defined at:
 10050 ;;		line 94 in file "./flex_lcd.h"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  y               1    wreg     unsigned char 
 10053 ;;  x               1    3[COMRAM] unsigned char 
 10054 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
 10055 ;;		 -> STR_9(16), STR_8(10), STR_7(15), STR_5(16), 
 10056 ;;		 -> STR_3(15), STR_2(14), STR_1(14), 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  y               1    8[COMRAM] unsigned char 
 10059 ;;  data            1    9[COMRAM] unsigned char 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10069 ;;      Params:         3       0       0       0       0       0       0       0       0
 10070 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10071 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10072 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10073 ;;Total ram usage:        7 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    1
 10076 ;; This function calls:
 10077 ;;		_Lcd_Chr_CP
 10078 ;;		_Lcd_Cmd
 10079 ;; This function is called by:
 10080 ;;		_main
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text40
 10085  003B5A                     __ptext40:
 10086                           	opt callstack 0
 10087  003B5A                     _Lcd_Out:
 10088                           	opt callstack 29
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;incstack = 0
 10092                           ;Lcd_Out@y stored from wreg
 10093  003B5A  6E09               	movwf	Lcd_Out@y,c
 10094                           
 10095                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
 10096  003B5C  D00D               	goto	l4880
 10097  003B5E                     l4870:
 10098  003B5E  5004               	movf	Lcd_Out@x,w,c
 10099  003B60  0F80               	addlw	128
 10100  003B62  D008               	goto	L21
 10101  003B64                     l4872:
 10102  003B64  5004               	movf	Lcd_Out@x,w,c
 10103  003B66  0FC0               	addlw	192
 10104  003B68  D005               	goto	L21
 10105  003B6A                     l4874:
 10106  003B6A  5004               	movf	Lcd_Out@x,w,c
 10107  003B6C  0F94               	addlw	148
 10108  003B6E  D002               	goto	L21
 10109  003B70                     l4876:
 10110  003B70  5004               	movf	Lcd_Out@x,w,c
 10111  003B72  0FD4               	addlw	212
 10112  003B74                     L21:
 10113  003B74  6E0A               	movwf	Lcd_Out@data,c
 10114  003B76  D014               	goto	l4882
 10115  003B78                     l4880:
 10116  003B78  5009               	movf	Lcd_Out@y,w,c
 10117  003B7A  6E07               	movwf	??_Lcd_Out& (0+255),c
 10118  003B7C  6A08               	clrf	(??_Lcd_Out+1)& (0+255),c
 10119                           
 10120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10121                           ; Switch size 1, requested type "simple"
 10122                           ; Number of cases is 1, Range of values is 0 to 0
 10123                           ; switch strategies available:
 10124                           ; Name         Instructions Cycles
 10125                           ; simple_byte            4     3 (average)
 10126                           ;	Chosen strategy is simple_byte
 10127  003B7E  5008               	movf	??_Lcd_Out+1,w,c
 10128  003B80  0A00               	xorlw	0	; case 0
 10129  003B82  A4D8               	btfss	status,2,c
 10130  003B84  D00D               	goto	l4882
 10131                           
 10132                           ; Switch size 1, requested type "simple"
 10133                           ; Number of cases is 4, Range of values is 1 to 4
 10134                           ; switch strategies available:
 10135                           ; Name         Instructions Cycles
 10136                           ; simple_byte           13     7 (average)
 10137                           ;	Chosen strategy is simple_byte
 10138  003B86  5007               	movf	??_Lcd_Out,w,c
 10139  003B88  0A01               	xorlw	1	; case 1
 10140  003B8A  B4D8               	btfsc	status,2,c
 10141  003B8C  D7E8               	goto	l4870
 10142  003B8E  0A03               	xorlw	3	; case 2
 10143  003B90  B4D8               	btfsc	status,2,c
 10144  003B92  D7E8               	goto	l4872
 10145  003B94  0A01               	xorlw	1	; case 3
 10146  003B96  B4D8               	btfsc	status,2,c
 10147  003B98  D7E8               	goto	l4874
 10148  003B9A  0A07               	xorlw	7	; case 4
 10149  003B9C  B4D8               	btfsc	status,2,c
 10150  003B9E  D7E8               	goto	l4876
 10151  003BA0                     l4882:
 10152                           
 10153                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
 10154  003BA0  500A               	movf	Lcd_Out@data,w,c
 10155  003BA2  EC49  F019         	call	_Lcd_Cmd
 10156                           
 10157                           ;./flex_lcd.h: 106: while(*buffer)
 10158  003BA6  D00A               	goto	l4888
 10159  003BA8                     l4884:
 10160                           
 10161                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
 10162  003BA8  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
 10163  003BAC  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 10164  003BB0                     	if	0	;tblptru may be non-zero
 10165  003BB0                     	endif
 10166  003BB0                     	if	0	;tblptru may be non-zero
 10167  003BB0                     	endif
 10168  003BB0  0008               	tblrd		*
 10169  003BB2  50F5               	movf	tablat,w,c
 10170  003BB4  EC23  F018         	call	_Lcd_Chr_CP
 10171                           
 10172                           ;./flex_lcd.h: 109:     buffer++;
 10173  003BB8  4A05               	infsnz	Lcd_Out@buffer,f,c
 10174  003BBA  2A06               	incf	Lcd_Out@buffer+1,f,c
 10175  003BBC                     l4888:
 10176                           
 10177                           ;./flex_lcd.h: 106: while(*buffer)
 10178  003BBC  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
 10179  003BC0  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 10180  003BC4                     	if	0	;tblptru may be non-zero
 10181  003BC4                     	endif
 10182  003BC4                     	if	0	;tblptru may be non-zero
 10183  003BC4                     	endif
 10184  003BC4  0008               	tblrd		*
 10185  003BC6  50F5               	movf	tablat,w,c
 10186  003BC8  0900               	iorlw	0
 10187  003BCA  B4D8               	btfsc	status,2,c
 10188  003BCC  0012               	return	
 10189  003BCE  D7EC               	goto	l4884
 10190  003BD0                     __end_of_Lcd_Out:
 10191                           	opt callstack 0
 10192                           
 10193 ;; *************** function _Lcd_Chr_CP *****************
 10194 ;; Defined at:
 10195 ;;		line 136 in file "./flex_lcd.h"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  data            1    wreg     unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  data            1    2[COMRAM] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      void 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10209 ;;      Params:         0       0       0       0       0       0       0       0       0
 10210 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10211 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10212 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10213 ;;Total ram usage:        3 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_Lcd_Out
 10219 ;;		_Lcd_Out2
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text41
 10224  003046                     __ptext41:
 10225                           	opt callstack 0
 10226  003046                     _Lcd_Chr_CP:
 10227                           	opt callstack 28
 10228                           
 10229                           ;incstack = 0
 10230                           ;Lcd_Chr_CP@data stored from wreg
 10231  003046  6E03               	movwf	Lcd_Chr_CP@data,c
 10232                           
 10233                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
 10234  003048  9A83               	bcf	3971,5,c	;volatile
 10235  00304A  8883               	bsf	3971,4,c	;volatile
 10236                           
 10237                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
 10238  00304C  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
 10239  00304E  AE03               	btfss	Lcd_Chr_CP@data,7,c
 10240  003050  D001               	bra	u5725
 10241  003052  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
 10242  003054                     u5725:
 10243  003054  0E01               	movlw	1
 10244  003056  1601               	andwf	??_Lcd_Chr_CP,f,c
 10245  003058  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10246  00305A  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10247  00305C  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10248  00305E  5083               	movf	3971,w,c	;volatile
 10249  003060  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10250  003062  0BF7               	andlw	-9
 10251  003064  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10252  003066  6E83               	movwf	3971,c	;volatile
 10253  003068  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10254  00306C  0E06               	movlw	6
 10255  00306E  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
 10256  003070                     u5735:
 10257  003070  90D8               	bcf	status,0,c
 10258  003072  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10259  003074  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
 10260  003076  D7FC               	goto	u5735
 10261  003078  0E01               	movlw	1
 10262  00307A  1601               	andwf	??_Lcd_Chr_CP,f,c
 10263  00307C  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10264  00307E  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10265  003080  5083               	movf	3971,w,c	;volatile
 10266  003082  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10267  003084  0BFB               	andlw	-5
 10268  003086  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10269  003088  6E83               	movwf	3971,c	;volatile
 10270                           
 10271                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
 10272  00308A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10273  00308E  0E05               	movlw	5
 10274  003090  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
 10275  003092                     u5745:
 10276  003092  90D8               	bcf	status,0,c
 10277  003094  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10278  003096  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
 10279  003098  D7FC               	goto	u5745
 10280  00309A  0E01               	movlw	1
 10281  00309C  1601               	andwf	??_Lcd_Chr_CP,f,c
 10282  00309E  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10283  0030A0  5083               	movf	3971,w,c	;volatile
 10284  0030A2  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10285  0030A4  0BFD               	andlw	-3
 10286  0030A6  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10287  0030A8  6E83               	movwf	3971,c	;volatile
 10288  0030AA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10289  0030AE  3A01               	swapf	??_Lcd_Chr_CP,f,c
 10290  0030B0  0E0F               	movlw	15
 10291  0030B2  1601               	andwf	??_Lcd_Chr_CP,f,c
 10292  0030B4  0E01               	movlw	1
 10293  0030B6  1601               	andwf	??_Lcd_Chr_CP,f,c
 10294  0030B8  5083               	movf	3971,w,c	;volatile
 10295  0030BA  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10296  0030BC  0BFE               	andlw	-2
 10297  0030BE  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10298  0030C0  6E83               	movwf	3971,c	;volatile
 10299                           
 10300                           ;./flex_lcd.h: 140: _delay(10);
 10301  0030C2  0E03               	movlw	3
 10302  0030C4                     u6307:
 10303  0030C4  2EE8               	decfsz	wreg,f,c
 10304  0030C6  D7FE               	bra	u6307
 10305  0030C8  F000               	nop	
 10306                           
 10307                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10308  0030CA  8A83               	bsf	3971,5,c	;volatile
 10309  0030CC  0E03               	movlw	3
 10310  0030CE                     u6317:
 10311  0030CE  2EE8               	decfsz	wreg,f,c
 10312  0030D0  D7FE               	bra	u6317
 10313  0030D2  F000               	nop	
 10314  0030D4  9A83               	bcf	3971,5,c	;volatile
 10315                           
 10316                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
 10317  0030D6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10318  0030DA  90D8               	bcf	status,0,c
 10319  0030DC  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10320  0030DE  90D8               	bcf	status,0,c
 10321  0030E0  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10322  0030E2  90D8               	bcf	status,0,c
 10323  0030E4  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10324  0030E6  0E01               	movlw	1
 10325  0030E8  1601               	andwf	??_Lcd_Chr_CP,f,c
 10326  0030EA  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10327  0030EC  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10328  0030EE  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10329  0030F0  5083               	movf	3971,w,c	;volatile
 10330  0030F2  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10331  0030F4  0BF7               	andlw	-9
 10332  0030F6  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10333  0030F8  6E83               	movwf	3971,c	;volatile
 10334  0030FA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10335  0030FE  90D8               	bcf	status,0,c
 10336  003100  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10337  003102  90D8               	bcf	status,0,c
 10338  003104  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10339  003106  0E01               	movlw	1
 10340  003108  1601               	andwf	??_Lcd_Chr_CP,f,c
 10341  00310A  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10342  00310C  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10343  00310E  5083               	movf	3971,w,c	;volatile
 10344  003110  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10345  003112  0BFB               	andlw	-5
 10346  003114  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10347  003116  6E83               	movwf	3971,c	;volatile
 10348                           
 10349                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
 10350  003118  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10351  00311C  90D8               	bcf	status,0,c
 10352  00311E  3201               	rrcf	??_Lcd_Chr_CP,f,c
 10353  003120  0E01               	movlw	1
 10354  003122  1601               	andwf	??_Lcd_Chr_CP,f,c
 10355  003124  4601               	rlncf	??_Lcd_Chr_CP,f,c
 10356  003126  5083               	movf	3971,w,c	;volatile
 10357  003128  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10358  00312A  0BFD               	andlw	-3
 10359  00312C  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10360  00312E  6E83               	movwf	3971,c	;volatile
 10361  003130  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10362  003134  0E01               	movlw	1
 10363  003136  1601               	andwf	??_Lcd_Chr_CP,f,c
 10364  003138  5083               	movf	3971,w,c	;volatile
 10365  00313A  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10366  00313C  0BFE               	andlw	-2
 10367  00313E  1801               	xorwf	??_Lcd_Chr_CP,w,c
 10368  003140  6E83               	movwf	3971,c	;volatile
 10369                           
 10370                           ;./flex_lcd.h: 144: _delay(10);
 10371  003142  0E03               	movlw	3
 10372  003144                     u6327:
 10373  003144  2EE8               	decfsz	wreg,f,c
 10374  003146  D7FE               	bra	u6327
 10375  003148  F000               	nop	
 10376                           
 10377                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10378  00314A  8A83               	bsf	3971,5,c	;volatile
 10379  00314C  0E03               	movlw	3
 10380  00314E                     u6337:
 10381  00314E  2EE8               	decfsz	wreg,f,c
 10382  003150  D7FE               	bra	u6337
 10383  003152  F000               	nop	
 10384  003154  9A83               	bcf	3971,5,c	;volatile
 10385                           
 10386                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(8000000/4000000.0)));
 10387  003156  0E03               	movlw	3
 10388  003158                     u6347:
 10389  003158  2EE8               	decfsz	wreg,f,c
 10390  00315A  D7FE               	bra	u6347
 10391  00315C  F000               	nop	
 10392  00315E  0E0F               	movlw	15
 10393  003160  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
 10394  003162  0E48               	movlw	72
 10395  003164                     u6357:
 10396  003164  2EE8               	decfsz	wreg,f,c
 10397  003166  D7FE               	bra	u6357
 10398  003168  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
 10399  00316A  D7FC               	bra	u6357
 10400  00316C  0012               	return		;funcret
 10401  00316E                     __end_of_Lcd_Chr_CP:
 10402                           	opt callstack 0
 10403                           
 10404 ;; *************** function _Lcd_Init *****************
 10405 ;; Defined at:
 10406 ;;		line 52 in file "./flex_lcd.h"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  data            1    4[COMRAM] unsigned char 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0
 10421 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10422 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10423 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10424 ;;Total ram usage:        2 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    1
 10427 ;; This function calls:
 10428 ;;		_Lcd_Cmd
 10429 ;; This function is called by:
 10430 ;;		_main
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text42
 10435  0033B2                     __ptext42:
 10436                           	opt callstack 0
 10437  0033B2                     _Lcd_Init:
 10438                           	opt callstack 29
 10439                           
 10440                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
 10441                           
 10442                           ;incstack = 0
 10443  0033B2  9695               	bcf	3989,3,c	;volatile
 10444                           
 10445                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
 10446  0033B4  9495               	bcf	3989,2,c	;volatile
 10447                           
 10448                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
 10449  0033B6  9295               	bcf	3989,1,c	;volatile
 10450                           
 10451                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
 10452  0033B8  9095               	bcf	3989,0,c	;volatile
 10453                           
 10454                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
 10455  0033BA  9A95               	bcf	3989,5,c	;volatile
 10456                           
 10457                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
 10458  0033BC  9895               	bcf	3989,4,c	;volatile
 10459                           
 10460                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
 10461  0033BE  9683               	bcf	3971,3,c	;volatile
 10462                           
 10463                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
 10464  0033C0  9483               	bcf	3971,2,c	;volatile
 10465                           
 10466                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
 10467  0033C2  9283               	bcf	3971,1,c	;volatile
 10468                           
 10469                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
 10470  0033C4  9083               	bcf	3971,0,c	;volatile
 10471                           
 10472                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
 10473  0033C6  9A83               	bcf	3971,5,c	;volatile
 10474                           
 10475                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
 10476  0033C8  9883               	bcf	3971,4,c	;volatile
 10477                           
 10478                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10479  0033CA  0E0F               	movlw	15
 10480  0033CC  6E04               	movwf	??_Lcd_Init& (0+255),c
 10481  0033CE  0E48               	movlw	72
 10482  0033D0                     u6367:
 10483  0033D0  2EE8               	decfsz	wreg,f,c
 10484  0033D2  D7FE               	bra	u6367
 10485  0033D4  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10486  0033D6  D7FC               	bra	u6367
 10487                           
 10488                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10489  0033D8  0E0F               	movlw	15
 10490  0033DA  6E04               	movwf	??_Lcd_Init& (0+255),c
 10491  0033DC  0E48               	movlw	72
 10492  0033DE                     u6377:
 10493  0033DE  2EE8               	decfsz	wreg,f,c
 10494  0033E0  D7FE               	bra	u6377
 10495  0033E2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10496  0033E4  D7FC               	bra	u6377
 10497                           
 10498                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10499  0033E6  0E0F               	movlw	15
 10500  0033E8  6E04               	movwf	??_Lcd_Init& (0+255),c
 10501  0033EA  0E48               	movlw	72
 10502  0033EC                     u6387:
 10503  0033EC  2EE8               	decfsz	wreg,f,c
 10504  0033EE  D7FE               	bra	u6387
 10505  0033F0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10506  0033F2  D7FC               	bra	u6387
 10507                           
 10508                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10509  0033F4  0E0F               	movlw	15
 10510  0033F6  6E04               	movwf	??_Lcd_Init& (0+255),c
 10511  0033F8  0E48               	movlw	72
 10512  0033FA                     u6397:
 10513  0033FA  2EE8               	decfsz	wreg,f,c
 10514  0033FC  D7FE               	bra	u6397
 10515  0033FE  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10516  003400  D7FC               	bra	u6397
 10517                           
 10518                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10519  003402  0E0F               	movlw	15
 10520  003404  6E04               	movwf	??_Lcd_Init& (0+255),c
 10521  003406  0E48               	movlw	72
 10522  003408                     u6407:
 10523  003408  2EE8               	decfsz	wreg,f,c
 10524  00340A  D7FE               	bra	u6407
 10525  00340C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10526  00340E  D7FC               	bra	u6407
 10527                           
 10528                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10529  003410  0E0F               	movlw	15
 10530  003412  6E04               	movwf	??_Lcd_Init& (0+255),c
 10531  003414  0E48               	movlw	72
 10532  003416                     u6417:
 10533  003416  2EE8               	decfsz	wreg,f,c
 10534  003418  D7FE               	bra	u6417
 10535  00341A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10536  00341C  D7FC               	bra	u6417
 10537                           
 10538                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
 10539  00341E  0E01               	movlw	1
 10540  003420  6E05               	movwf	Lcd_Init@data,c
 10541  003422                     l35:
 10542                           
 10543                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
 10544  003422  9683               	bcf	3971,3,c	;volatile
 10545  003424  9483               	bcf	3971,2,c	;volatile
 10546  003426  8283               	bsf	3971,1,c	;volatile
 10547  003428  8083               	bsf	3971,0,c	;volatile
 10548  00342A  9A83               	bcf	3971,5,c	;volatile
 10549                           
 10550                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
 10551  00342C  9883               	bcf	3971,4,c	;volatile
 10552  00342E  9683               	bcf	3971,3,c	;volatile
 10553  003430  9483               	bcf	3971,2,c	;volatile
 10554  003432  8283               	bsf	3971,1,c	;volatile
 10555  003434  8083               	bsf	3971,0,c	;volatile
 10556                           
 10557                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10558  003436  8A83               	bsf	3971,5,c	;volatile
 10559  003438  9883               	bcf	3971,4,c	;volatile
 10560                           
 10561                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(8000000/4000000.0)));
 10562  00343A  0E03               	movlw	3
 10563  00343C                     u6427:
 10564  00343C  2EE8               	decfsz	wreg,f,c
 10565  00343E  D7FE               	bra	u6427
 10566  003440  F000               	nop	
 10567                           
 10568                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
 10569  003442  9683               	bcf	3971,3,c	;volatile
 10570  003444  9483               	bcf	3971,2,c	;volatile
 10571  003446  8283               	bsf	3971,1,c	;volatile
 10572  003448  8083               	bsf	3971,0,c	;volatile
 10573  00344A  9A83               	bcf	3971,5,c	;volatile
 10574                           
 10575                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
 10576  00344C  9883               	bcf	3971,4,c	;volatile
 10577                           
 10578                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10579  00344E  0E0F               	movlw	15
 10580  003450  6E04               	movwf	??_Lcd_Init& (0+255),c
 10581  003452  0E48               	movlw	72
 10582  003454                     u6437:
 10583  003454  2EE8               	decfsz	wreg,f,c
 10584  003456  D7FE               	bra	u6437
 10585  003458  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10586  00345A  D7FC               	bra	u6437
 10587                           
 10588                           ;./flex_lcd.h: 81: }
 10589  00345C  2A05               	incf	Lcd_Init@data,f,c
 10590  00345E  0E03               	movlw	3
 10591  003460  6405               	cpfsgt	Lcd_Init@data,c
 10592  003462  D7DF               	goto	l35
 10593                           
 10594                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10595  003464  9683               	bcf	3971,3,c	;volatile
 10596  003466  9483               	bcf	3971,2,c	;volatile
 10597  003468  8283               	bsf	3971,1,c	;volatile
 10598  00346A  9083               	bcf	3971,0,c	;volatile
 10599  00346C  9A83               	bcf	3971,5,c	;volatile
 10600  00346E  9883               	bcf	3971,4,c	;volatile
 10601                           
 10602                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
 10603  003470  9683               	bcf	3971,3,c	;volatile
 10604  003472  9483               	bcf	3971,2,c	;volatile
 10605  003474  8283               	bsf	3971,1,c	;volatile
 10606  003476  9083               	bcf	3971,0,c	;volatile
 10607  003478  8A83               	bsf	3971,5,c	;volatile
 10608  00347A  9883               	bcf	3971,4,c	;volatile
 10609                           
 10610                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000/4000000.0)));
 10611  00347C  0E03               	movlw	3
 10612  00347E                     u6447:
 10613  00347E  2EE8               	decfsz	wreg,f,c
 10614  003480  D7FE               	bra	u6447
 10615  003482  F000               	nop	
 10616                           
 10617                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10618  003484  9683               	bcf	3971,3,c	;volatile
 10619  003486  9483               	bcf	3971,2,c	;volatile
 10620  003488  8283               	bsf	3971,1,c	;volatile
 10621  00348A  9083               	bcf	3971,0,c	;volatile
 10622  00348C  9A83               	bcf	3971,5,c	;volatile
 10623  00348E  9883               	bcf	3971,4,c	;volatile
 10624                           
 10625                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10626  003490  0E0F               	movlw	15
 10627  003492  6E04               	movwf	??_Lcd_Init& (0+255),c
 10628  003494  0E48               	movlw	72
 10629  003496                     u6457:
 10630  003496  2EE8               	decfsz	wreg,f,c
 10631  003498  D7FE               	bra	u6457
 10632  00349A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
 10633  00349C  D7FC               	bra	u6457
 10634  00349E  0E28               	movlw	40
 10635  0034A0  EC49  F019         	call	_Lcd_Cmd
 10636  0034A4  0E10               	movlw	16
 10637  0034A6  EC49  F019         	call	_Lcd_Cmd
 10638  0034AA  0E01               	movlw	1
 10639  0034AC  EC49  F019         	call	_Lcd_Cmd
 10640  0034B0  0E0F               	movlw	15
 10641  0034B2  EC49  F019         	call	_Lcd_Cmd
 10642  0034B6  0012               	return		;funcret
 10643  0034B8                     __end_of_Lcd_Init:
 10644                           	opt callstack 0
 10645                           
 10646 ;; *************** function _Lcd_Cmd *****************
 10647 ;; Defined at:
 10648 ;;		line 150 in file "./flex_lcd.h"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  data            1    wreg     unsigned char 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  data            1    2[COMRAM] unsigned char 
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0
 10663 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10664 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10665 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10666 ;;Total ram usage:        3 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_Lcd_Init
 10672 ;;		_Lcd_Out
 10673 ;;		_Lcd_Out2
 10674 ;;		_main
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text43
 10679  003292                     __ptext43:
 10680                           	opt callstack 0
 10681  003292                     _Lcd_Cmd:
 10682                           	opt callstack 28
 10683                           
 10684                           ;incstack = 0
 10685                           ;Lcd_Cmd@data stored from wreg
 10686  003292  6E03               	movwf	Lcd_Cmd@data,c
 10687                           
 10688                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
 10689  003294  9A83               	bcf	3971,5,c	;volatile
 10690  003296  9883               	bcf	3971,4,c	;volatile
 10691                           
 10692                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
 10693  003298  6A01               	clrf	??_Lcd_Cmd& (0+255),c
 10694  00329A  AE03               	btfss	Lcd_Cmd@data,7,c
 10695  00329C  D001               	bra	u5695
 10696  00329E  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
 10697  0032A0                     u5695:
 10698  0032A0  0E01               	movlw	1
 10699  0032A2  1601               	andwf	??_Lcd_Cmd,f,c
 10700  0032A4  4601               	rlncf	??_Lcd_Cmd,f,c
 10701  0032A6  4601               	rlncf	??_Lcd_Cmd,f,c
 10702  0032A8  4601               	rlncf	??_Lcd_Cmd,f,c
 10703  0032AA  5083               	movf	3971,w,c	;volatile
 10704  0032AC  1801               	xorwf	??_Lcd_Cmd,w,c
 10705  0032AE  0BF7               	andlw	-9
 10706  0032B0  1801               	xorwf	??_Lcd_Cmd,w,c
 10707  0032B2  6E83               	movwf	3971,c	;volatile
 10708  0032B4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10709  0032B8  0E06               	movlw	6
 10710  0032BA  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10711  0032BC                     u5705:
 10712  0032BC  90D8               	bcf	status,0,c
 10713  0032BE  3201               	rrcf	??_Lcd_Cmd,f,c
 10714  0032C0  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10715  0032C2  D7FC               	goto	u5705
 10716  0032C4  0E01               	movlw	1
 10717  0032C6  1601               	andwf	??_Lcd_Cmd,f,c
 10718  0032C8  4601               	rlncf	??_Lcd_Cmd,f,c
 10719  0032CA  4601               	rlncf	??_Lcd_Cmd,f,c
 10720  0032CC  5083               	movf	3971,w,c	;volatile
 10721  0032CE  1801               	xorwf	??_Lcd_Cmd,w,c
 10722  0032D0  0BFB               	andlw	-5
 10723  0032D2  1801               	xorwf	??_Lcd_Cmd,w,c
 10724  0032D4  6E83               	movwf	3971,c	;volatile
 10725                           
 10726                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
 10727  0032D6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10728  0032DA  0E05               	movlw	5
 10729  0032DC  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
 10730  0032DE                     u5715:
 10731  0032DE  90D8               	bcf	status,0,c
 10732  0032E0  3201               	rrcf	??_Lcd_Cmd,f,c
 10733  0032E2  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
 10734  0032E4  D7FC               	goto	u5715
 10735  0032E6  0E01               	movlw	1
 10736  0032E8  1601               	andwf	??_Lcd_Cmd,f,c
 10737  0032EA  4601               	rlncf	??_Lcd_Cmd,f,c
 10738  0032EC  5083               	movf	3971,w,c	;volatile
 10739  0032EE  1801               	xorwf	??_Lcd_Cmd,w,c
 10740  0032F0  0BFD               	andlw	-3
 10741  0032F2  1801               	xorwf	??_Lcd_Cmd,w,c
 10742  0032F4  6E83               	movwf	3971,c	;volatile
 10743  0032F6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10744  0032FA  3A01               	swapf	??_Lcd_Cmd,f,c
 10745  0032FC  0E0F               	movlw	15
 10746  0032FE  1601               	andwf	??_Lcd_Cmd,f,c
 10747  003300  0E01               	movlw	1
 10748  003302  1601               	andwf	??_Lcd_Cmd,f,c
 10749  003304  5083               	movf	3971,w,c	;volatile
 10750  003306  1801               	xorwf	??_Lcd_Cmd,w,c
 10751  003308  0BFE               	andlw	-2
 10752  00330A  1801               	xorwf	??_Lcd_Cmd,w,c
 10753  00330C  6E83               	movwf	3971,c	;volatile
 10754                           
 10755                           ;./flex_lcd.h: 154: _delay(10);
 10756  00330E  0E03               	movlw	3
 10757  003310                     u6467:
 10758  003310  2EE8               	decfsz	wreg,f,c
 10759  003312  D7FE               	bra	u6467
 10760  003314  F000               	nop	
 10761                           
 10762                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10763  003316  8A83               	bsf	3971,5,c	;volatile
 10764  003318  0E03               	movlw	3
 10765  00331A                     u6477:
 10766  00331A  2EE8               	decfsz	wreg,f,c
 10767  00331C  D7FE               	bra	u6477
 10768  00331E  F000               	nop	
 10769  003320  9A83               	bcf	3971,5,c	;volatile
 10770                           
 10771                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
 10772  003322  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10773  003326  90D8               	bcf	status,0,c
 10774  003328  3201               	rrcf	??_Lcd_Cmd,f,c
 10775  00332A  90D8               	bcf	status,0,c
 10776  00332C  3201               	rrcf	??_Lcd_Cmd,f,c
 10777  00332E  90D8               	bcf	status,0,c
 10778  003330  3201               	rrcf	??_Lcd_Cmd,f,c
 10779  003332  0E01               	movlw	1
 10780  003334  1601               	andwf	??_Lcd_Cmd,f,c
 10781  003336  4601               	rlncf	??_Lcd_Cmd,f,c
 10782  003338  4601               	rlncf	??_Lcd_Cmd,f,c
 10783  00333A  4601               	rlncf	??_Lcd_Cmd,f,c
 10784  00333C  5083               	movf	3971,w,c	;volatile
 10785  00333E  1801               	xorwf	??_Lcd_Cmd,w,c
 10786  003340  0BF7               	andlw	-9
 10787  003342  1801               	xorwf	??_Lcd_Cmd,w,c
 10788  003344  6E83               	movwf	3971,c	;volatile
 10789  003346  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10790  00334A  90D8               	bcf	status,0,c
 10791  00334C  3201               	rrcf	??_Lcd_Cmd,f,c
 10792  00334E  90D8               	bcf	status,0,c
 10793  003350  3201               	rrcf	??_Lcd_Cmd,f,c
 10794  003352  0E01               	movlw	1
 10795  003354  1601               	andwf	??_Lcd_Cmd,f,c
 10796  003356  4601               	rlncf	??_Lcd_Cmd,f,c
 10797  003358  4601               	rlncf	??_Lcd_Cmd,f,c
 10798  00335A  5083               	movf	3971,w,c	;volatile
 10799  00335C  1801               	xorwf	??_Lcd_Cmd,w,c
 10800  00335E  0BFB               	andlw	-5
 10801  003360  1801               	xorwf	??_Lcd_Cmd,w,c
 10802  003362  6E83               	movwf	3971,c	;volatile
 10803                           
 10804                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
 10805  003364  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10806  003368  90D8               	bcf	status,0,c
 10807  00336A  3201               	rrcf	??_Lcd_Cmd,f,c
 10808  00336C  0E01               	movlw	1
 10809  00336E  1601               	andwf	??_Lcd_Cmd,f,c
 10810  003370  4601               	rlncf	??_Lcd_Cmd,f,c
 10811  003372  5083               	movf	3971,w,c	;volatile
 10812  003374  1801               	xorwf	??_Lcd_Cmd,w,c
 10813  003376  0BFD               	andlw	-3
 10814  003378  1801               	xorwf	??_Lcd_Cmd,w,c
 10815  00337A  6E83               	movwf	3971,c	;volatile
 10816  00337C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10817  003380  0E01               	movlw	1
 10818  003382  1601               	andwf	??_Lcd_Cmd,f,c
 10819  003384  5083               	movf	3971,w,c	;volatile
 10820  003386  1801               	xorwf	??_Lcd_Cmd,w,c
 10821  003388  0BFE               	andlw	-2
 10822  00338A  1801               	xorwf	??_Lcd_Cmd,w,c
 10823  00338C  6E83               	movwf	3971,c	;volatile
 10824                           
 10825                           ;./flex_lcd.h: 158: _delay(10);
 10826  00338E  0E03               	movlw	3
 10827  003390                     u6487:
 10828  003390  2EE8               	decfsz	wreg,f,c
 10829  003392  D7FE               	bra	u6487
 10830  003394  F000               	nop	
 10831                           
 10832                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(8000000/4000000.0)));
      +                           PORTDbits.RD5 = 0;
 10833  003396  8A83               	bsf	3971,5,c	;volatile
 10834  003398  0E03               	movlw	3
 10835  00339A                     u6497:
 10836  00339A  2EE8               	decfsz	wreg,f,c
 10837  00339C  D7FE               	bra	u6497
 10838  00339E  F000               	nop	
 10839  0033A0  9A83               	bcf	3971,5,c	;volatile
 10840                           
 10841                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 10842  0033A2  0E0F               	movlw	15
 10843  0033A4  6E01               	movwf	??_Lcd_Cmd& (0+255),c
 10844  0033A6  0E48               	movlw	72
 10845  0033A8                     u6507:
 10846  0033A8  2EE8               	decfsz	wreg,f,c
 10847  0033AA  D7FE               	bra	u6507
 10848  0033AC  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
 10849  0033AE  D7FC               	bra	u6507
 10850  0033B0  0012               	return		;funcret
 10851  0033B2                     __end_of_Lcd_Cmd:
 10852                           	opt callstack 0
 10853                           
 10854                           	psect	rparam
 10855  0000                     tosu	equ	0xFFF
 10856                           tosh	equ	0xFFE
 10857                           tosl	equ	0xFFD
 10858                           stkptr	equ	0xFFC
 10859                           pclatu	equ	0xFFB
 10860                           pclath	equ	0xFFA
 10861                           pcl	equ	0xFF9
 10862                           tblptru	equ	0xFF8
 10863                           tblptrh	equ	0xFF7
 10864                           tblptrl	equ	0xFF6
 10865                           tablat	equ	0xFF5
 10866                           prodh	equ	0xFF4
 10867                           prodl	equ	0xFF3
 10868                           indf0	equ	0xFEF
 10869                           postinc0	equ	0xFEE
 10870                           postdec0	equ	0xFED
 10871                           preinc0	equ	0xFEC
 10872                           plusw0	equ	0xFEB
 10873                           fsr0h	equ	0xFEA
 10874                           fsr0l	equ	0xFE9
 10875                           wreg	equ	0xFE8
 10876                           indf1	equ	0xFE7
 10877                           postinc1	equ	0xFE6
 10878                           postdec1	equ	0xFE5
 10879                           preinc1	equ	0xFE4
 10880                           plusw1	equ	0xFE3
 10881                           fsr1h	equ	0xFE2
 10882                           fsr1l	equ	0xFE1
 10883                           bsr	equ	0xFE0
 10884                           indf2	equ	0xFDF
 10885                           postinc2	equ	0xFDE
 10886                           postdec2	equ	0xFDD
 10887                           preinc2	equ	0xFDC
 10888                           plusw2	equ	0xFDB
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8


Data Sizes:
    Strings     226
    Constant    0
    Data        0
    BSS         164
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    126     159
    BANK1           256      0     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[14]), STR_18(CODE[7]), STR_17(CODE[8]), STR_16(CODE[13]), 
		 -> STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[12]), STR_12(CODE[7]), 
		 -> STR_11(CODE[8]), STR_10(CODE[16]), STR_6(CODE[14]), STR_4(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK1[17]), numero1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK1[17]), numero1(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1023_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK1[17]), numero1(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK1[17]), numero1(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[14]), STR_18(CODE[7]), STR_17(CODE[8]), STR_16(CODE[13]), 
		 -> STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[12]), STR_12(CODE[7]), 
		 -> STR_11(CODE[8]), STR_10(CODE[16]), STR_6(CODE[14]), STR_4(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[14]), STR_18(CODE[7]), STR_17(CODE[8]), STR_16(CODE[13]), 
		 -> STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[12]), STR_12(CODE[7]), 
		 -> STR_11(CODE[8]), STR_10(CODE[16]), STR_6(CODE[14]), STR_4(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[14]), STR_18(CODE[7]), STR_17(CODE[8]), STR_16(CODE[13]), 
		 -> STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[12]), STR_12(CODE[7]), 
		 -> STR_11(CODE[8]), STR_10(CODE[16]), STR_6(CODE[14]), STR_4(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> palabra(BANK1[17]), numero3(BANK1[17]), numero2(BANK1[17]), numero1(BANK0[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[16]), STR_8(CODE[10]), STR_7(CODE[15]), STR_5(CODE[16]), 
		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_resta
    _suma->___fltol
    _scv->___fltol
    _resta->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _mult->___fltol
    ___xxtofl->_resta
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->___xxtofl
    _resta->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    ___xxtofl->_resta

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   87203
                                            106 BANK0     20    20      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                             ___fleq
                             ___flge
                            ___fltol
                           ___xxtofl
                               _mult
                              _resta
                                _scv
                            _sprintf
                               _suma
 ---------------------------------------------------------------------------------
 (1) _suma                                                 6     2      4     220
                                             10 COMRAM     6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _scv                                                 14    10      4     985
                                             10 COMRAM    14    10      4
                            ___awdiv
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _resta                                                8     4      4   39533
                                             91 COMRAM     4     4      0
                                             88 BANK0      4     0      4
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   36845
                                             81 COMRAM    10    10      0
                                             80 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34812
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   34417
                                             63 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23137
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1141
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     950
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1548
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             7     4      3    2357
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _mult                                                10     6      4     888
                                             10 COMRAM    10     6      4
                            ___fltol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     555
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     778
                                             92 BANK0     14    10      4
                            ___fltol (ARG)
                               _mult (ARG)
                              _resta (ARG)
                                _scv (ARG)
                               _suma (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3    1597
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fleq
   ___flge
     ___flmul (ARG)
   ___fltol
   ___xxtofl
     ___fltol (ARG)
     _mult (ARG)
       ___fltol (ARG)
       ___wmul (ARG)
     _resta (ARG)
       _Lcd_Out2
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _scv (ARG)
       ___awdiv
       ___fltol (ARG)
     _suma (ARG)
       ___fltol (ARG)
   _mult
     ___fltol (ARG)
     ___wmul (ARG)
   _resta
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _scv
     ___awdiv
     ___fltol (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _suma
     ___fltol (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      83       7       51.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     181      20        0.0%
DATA                 0      0     181       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 23:55:29 2019

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l35 3422                       l94 147A             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l102 175C                      l200 3958                      l211 28F0  
                    l213 28F8                      l128 1986                      l146 3D16  
                    l138 3586                      l154 39F2                      l147 3CDE  
                    l267 0C20                      l293 0F02                      l646 3624  
                    l910 242A                      l911 2408                      l926 24FC  
                    l935 2562                      l936 255E                      l965 2766  
                    l976 27D4                      l977 27D0                      l995 2016  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _abs 3F20                      _pad 3928                      _scv 39C2  
           ___awmod@sign 0006                      wreg 000FE8             __CFG_FOSC$HS 000000  
           ___flmul@aexp 0012             ___flmul@bexp 0013             ___flmul@sign 000D  
           ___flmul@temp 0018             ___flmul@prod 0014             __CFG_LVP$OFF 000000  
           ___fltol@exp1 000A             __CFG_WDT$OFF 000000                     l1012 22B4  
                   l1004 222E                     l1005 222A                     l1110 2BDA  
                   l1043 2E82                     ?_abs 0013                     l1036 2E04  
                   l1067 3F48                     l1190 3E5A                     l4000 3B50  
                   l1098 303C                     l4020 3BFE                     l4012 3BE4  
                   l4022 3C06                     l4200 2A9A                     l4032 3C28  
                   l4016 3BF0                     l3320 2318                     l4120 37B8  
                   l4112 37A4                     l3410 244E                     l5004 2EA8  
                   l4036 3C36                     l4028 3C1E                     l4052 3AD2  
                   l4044 3A80                     l4060 35C4                     l3420 2474  
                   l3340 235C                     l3316 2314                     l4108 3794  
                   l5022 2EF4                     l5006 2EB4                     l3510 3942  
                   l4126 37D4                     l4118 37AC                     l4302 0C2A  
                   l4214 092E                     l5110 15FE                     l3520 397A  
                   l4048 3AB4                     l4064 35F8                     l3352 2380  
                   l3344 2360                     l4400 0FCC                     l5032 1290  
                   l4138 3EE0                     l3274 38A0                     l3514 3950  
                   l4162 2912                     l4074 365C                     l4082 3FCE  
                   l3418 2470                     l4226 095C                     l4234 0972  
                   l5202 197E                     l5034 12B4                     l3620 2CCE  
                   l3284 3EF2                     l3292 3FEA                     l3524 39A8  
                   l3516 3962                     l4148 28D2                     l4068 360E  
                   l3428 2486                     l4092 374A                     l3540 36D8  
                   l4316 0C78                     l4308 0C30                     l4244 09DE  
                   l4252 0A26                     l5124 16B0                     l5108 15F8  
                   l5220 19B2                     l5060 139C                     l5052 1364  
                   l3614 2CA6                     l3294 3FEE                     l4166 2922  
                   l3702 2624                     l3446 2520                     l3462 2540  
                   l3438 24EC                     l3382 23BC                     l3550 3722  
                   l4334 0CBE                     l4318 0C7C                     l4262 0A92  
                   l4270 0AAC                     l4246 09F6                     l5142 17F2  
                   l5150 1828                     l5134 1762                     l5046 130A  
                   l5038 12D2                     l4520 2F72                     l4504 2F18  
                   l3288 3F08                     l4176 2A1A                     l3800 2818  
                   l3456 2536                     l3544 36E2                     l4408 0FEC  
                   l4416 1010                     l4424 10A8                     l4360 0E64  
                   l4344 0CF8                     l4352 0DEE                     l4328 0C9A  
                   l4280 0B2A                     l4248 0A00                     l4600 1A94  
                   l5208 198E                     l5144 180A                     l4530 2FDC  
                   l4522 2F7A                     l4514 2F62                     l4506 2F1C  
                   l3626 2CF4                     l3642 2D7A                     l3730 2698  
                   l3722 2664                     l3490 25CE                     l3482 25A8  
                   l3394 2416                     l4338 0CCE                     l4282 0B78  
                   l5154 1830                     l5162 1848                     l5066 13F6  
                   l4524 2F80                     l3628 2D08                     l4196 2A82  
                   l3804 283C                     l3396 241A                     l3556 3D86  
                   l4452 1136                     l4436 10EA                     l4276 0AF0  
                   l4700 1F4A                     l4612 1B00                     l5172 1868  
                   l4526 2FA8                     l3646 2DA0                     l3638 2D64  
                   l3662 31BE                     l3814 2872                     l3718 2660  
                   l3494 25D6                     l3574 2B3C                     l4454 1140  
                   l4374 0EFA                     l4366 0EA2                     l4286 0BB4  
                   l4550 3810                     l4614 1B1E                     l5190 1942  
                   l5182 1912                     l5094 14EA                     l5086 14C4  
                   ?_pad 0011                     l3816 2874                     l3808 2866  
                   l3744 26C6                     l3736 26AE                     l3912 21F4  
                   l3840 1FD6                     l3496 25D8                     l3592 2C68  
                   l3584 2BFC                     l4464 1196                     l4376 0F1C  
                   l4552 381E                     l4632 1BF6                     l4616 1B2C  
                   l5192 195A                     l3682 3270                     l3674 3234  
                   l3666 31D8                     l3658 319A                     l3762 273E  
                   l3754 2716                     l3906 21D6                     l4490 1222  
                   l4474 11C2                     l4298 0C08                     l4634 1C14  
                   l4706 1F62                     l5186 1918                     l3668 31EC  
                   l3780 279A                     l3932 2272                     l3836 1FC2  
                   l3588 2C3A                     l4388 0F9E                     l4652 1CFC  
                   l4636 1C22                     l3678 324A                     l3774 277C  
                   l3854 2002                     l3838 1FC6                     l4670 1E0A  
                   l4662 1DAE                     l4590 1A44                     l4582 1A3C  
                   l4574 1A26                     l4910 34D4                     l5198 197A  
                   l3768 2764                     l3936 2290                     l3864 2034  
                   l3856 2006                     l4576 1A28                     l3698 2620  
                   l4690 1F04                     l4674 1E34                     l4594 1A48  
                   l4586 1A40                     l4578 1A38                     l4770 3D34  
                   l4780 3C50                     l3980 3B10                     l3948 22D2  
                   l4772 3D5A                     l4870 3B5E                     l4790 3C8E  
                   l4782 3C56                     l3982 3B18                     l3974 3AFA  
                   l4598 1A52                     l4918 3564                     l4872 3B64  
                   l4880 3B78                     l4776 3C44                     l3992 3B38  
                   l3968 3AEA                     l4696 1F40                     l4874 3B6A  
                   l4882 3BA0                     l4794 3CA0                     l4778 3C4A  
                   l4786 3C5E                     l4884 3BA8                     l4876 3B70  
                   l4788 3C86                     l3996 3B42                     l4974 3A26  
                   l4888 3BBC                     l4992 2E32                     l4994 2E38  
                   l4986 2E14                     l4996 2E44                     l4998 2E6A  
                   ?_scv 000B                     STR_1 084F                     STR_2 085D  
                   STR_3 0840                     STR_4 0879                     STR_5 0811  
                   STR_6 0879                     STR_7 0831                     STR_8 08A0  
                   STR_9 0801                     _LATB 000F8A                     u3120 3F7A  
                   u3130 3F7C                     u3070 3898                     u4110 27CA  
                   u3230 23DE                     u3240 23EE                     u3090 38E0  
                   u3410 2544                     u3250 23F0                     u4300 2224  
                   u5020 0C48                     u4150 2826                     u3430 2558  
                   u4400 3B1C                     u4160 284A                     u3280 2432  
                   u4250 2022                     u4340 2280                     u4260 2198  
                   u3700 2B0A                     u5060 0C96                     u4510 3ACE  
                   u4350 229E                     u3630 371A                     u3710 2B2A  
                   u5310 120C                     u5230 10CC                     u6030 180E  
                   u3800 3FAA                     u3640 371C                     u5320 120E  
                   u4265 218E                     u3625 36FC                     u3705 2B00  
                   u3810 3FAC                     u3570 3F2E                     u3490 25B4  
                   u3650 3DBE                     u4460 3C0A                     u3580 369E  
                   u6117 1280                     u5350 2F5E                     u4710 28E6  
                   u4630 37BE                     u3750 2BBA                     u3670 3E40  
                   u5510 1B64                     u3735 2B54                     u6207 16A0  
                   u6127 12C4                     u3920 31F0                     u4800 2A6C  
                   u3736 2B5A                     u3680 3E42                     u5520 1B66  
                   u3841 2CD4                     u3585 3694                     u3737 2B68  
                   u3657 3DB4                     u6217 181A                     u6137 12E8  
                   u5370 300C                     u4730 290C                     u3770 2C1A  
                   u5290 11AC                     u5450 3864                     u5530 1B74  
                   u6307 30C4                     u3755 2BB0                     u6227 183E  
                   u6147 137A                     u4660 3EDC                     u5380 300E  
                   u3860 2D0C                     u4740 2A28                     u4580 3738  
                   u5620 1D30                     u6317 30CE                     u6237 1858  
                   u6157 140C                     u4670 28A4                     u4590 3768  
                   u4910 0A68                     u6407 3408                     u6327 3144  
                   u3775 2C10                     u6247 1904                     u6167 144A  
                   u4760 2A4A                     u4680 28A6                     u4920 0A6A  
                   u4840 094C                     u5560 1C5A                     u5705 32BC  
                   u6417 3416                     u6337 314E                     u4761 2A48  
                   u6257 196A                     u6177 146A                     u4770 2A58  
                   u5650 1EB6                     u5570 1C5C                     u6507 33A8  
                   u5715 32DE                     u6427 343C                     u6347 3158  
                   u4595 375E                     u6267 199E                     u6187 14DA  
                   u5820 3D10                     u4780 2A5E                     u5660 1EB8  
                   u5580 1C6A                     u6437 3454                     u6357 3164  
                   u5725 3054                     u6277 3A00                     u6197 1680  
                   u5910 2EBE                     u4870 09B4                     u6447 347E  
                   u6367 33D0                     u5735 3070                     u6287 3572  
                   u4960 0BDC                     u4880 09B6                     u6457 3496  
                   u6377 33DE                     u5745 3092                     u6297 3CEC  
                   u6467 3310                     u6387 33EC                     u6477 331A  
                   u6397 33FA                     u4990 0C16                     u6487 3390  
                   u5695 32A0                     u6497 339A                     u5970 13FA  
           __CFG_PWRT$ON 000000                     abs@a 0013                     _dbuf 0100  
                   _atoi 2F06                     _main 1260                     _dtoa 287C  
                   _prec 00EA                     _mult 3CB0                     _nout 00E6  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _suma 4052                     scv@i 0017                     scv@x 0015  
          ___fpclassifyf 3660                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000          ___fldiv@new_exp 0012  
        __end_of_Lcd_Cmd 33B2             _tolower$1095 000D          __end_of_Lcd_Out 3BD0  
          __CFG_MCLRE$ON 000000             ___param_bank 000000               _Lcd_Chr_CP 3046  
                  ??_abs 0015                    ??_pad 0017                    ??_scv 000F  
         Lcd_Out2@buffer 0005            __CFG_PLLDIV$1 000000            ___fltol@sign1 0009  
        __end_of___aodiv 2DC2                    ?_atoi 0008          __end_of___fladd 25F4  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 3292  
        __end_of___fldiv 287C          __end_of___awdiv 3B5A          __end_of___flneg 3FE0  
                  STR_10 0821                    STR_11 08AA                    STR_20 08D0  
                  STR_12 08C9                    STR_21 08D8                    STR_13 0894  
                  STR_30 08E0                    STR_14 08BA                    STR_15 08C9  
                  STR_24 08D4                    STR_16 0887                    STR_25 08DC  
                  STR_17 08B2                    STR_18 08C2                    STR_19 086B  
                  STR_28 08E0          __end_of___awmod 3C40          __end_of___flmul 22E8  
                  ?_mult 000B          __end_of___flsub 3EAA          __end_of___fltol 37E6  
                  ?_suma 000B          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 0042                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 00EC                    _fputc 3888                    _fputs 3EE8  
        __end_of_isdigit 3FB2                    _resta 34B8                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00E8  
                  _putch 4068                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032          __end_of_isspace 3EE8          __end_of_isupper 3F82  
                  scv@s1 000B                    scv@s2 000D                    scv@x1 0011  
                  scv@x2 0013                    tablat 000FF5                    mult@i 0011  
                  mult@x 0013                    suma@x 000F                    status 000FD8  
        __end_of_sprintf 3E18           ?___fpclassifyf 0001          __end_of_tolower 3E64  
        __end_of_strncmp 3888           __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 34B8  
       __end_of_Lcd_Out2 3CB0          __initialization 4030             __end_of_atoi 3046  
           __end_of_main 19E0             __end_of_dtoa 2AC4             __end_of_mult 3D20  
           __end_of_suma 4068                   ??_atoi 000A                   ??_main 00CA  
                 ??_dtoa 0026                   ??_mult 000F                   ??_suma 000F  
          __activetblptr 000002          __CFG_CCP2MX$OFF 000000                   ?_fputc 0001  
                 ?_fputs 000A         ___awdiv@dividend 0001                   ?_resta 00B8  
                 ?_putch 0001                ??_Lcd_Cmd 0001            vfpfcnvrt@done 00A0  
              ??_Lcd_Out 0007         __end_of___xxtofl 2F06           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0050                   ___flge 3590                   ___fleq 3A4C  
            ?_Lcd_Chr_CP 0001                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 400A                ??___fldiv 0009  
              ??___awdiv 0005                ??___flneg 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___flmul 0009                ??___flsub 0022  
              ??___fltol 0005                   _efgtoa 08E4                   _floorf 2AC4  
                 clear_0 4036                   clear_1 4042         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   main@D1 00D2                   main@D2 00D6  
        ___awmod@counter 0005                   main@R0 00DA                   pad@buf 0013  
                 dtoa@fp 001C                   _strcpy 3D76                   _strlen 3FE0  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   mult@s1 000B                   mult@s2 000D  
                 resta@x 005E                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   suma@s1 000B  
                 suma@s2 000D                   putch@c 0001         __end_of_vfprintf 3D76  
              ??_sprintf 0052                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 001A               ___flge@ff2 001E          ??___fpclassifyf 0005  
           ___xxtofl@arg 00C6             ___xxtofl@exp 00C5             ___xxtofl@val 00BC  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 4048          __CFG_PBADEN$OFF 000000               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 3928            __end_of_fputs 3F20            __end_of_resta 3590  
          __end_of_putch 406A                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
        __CFG_LPT1OSC$ON 000000                  ??_fputc 0005                  ??_fputs 000E  
                ??_resta 005C      __size_of_Lcd_Chr_CP 0128                  ??_putch 0001  
             __pbssBANK0 00DE               __pbssBANK1 0100               _efgtoa$480 0068  
             _efgtoa$475 0064               _efgtoa$484 006A               _efgtoa$476 0066  
             _efgtoa$485 006C               _efgtoa$486 006E                  ?___flge 001A  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 002E  
                ?_floorf 001A                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 00BC       __size_of_vfpfcnvrt 05B6               ??_Lcd_Init 0004  
             ??_Lcd_Out2 0007          __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 3292  
                _Lcd_Out 3B5A                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___aodiv 2C7A  
                ___fladd 22E8                  ___aomod 316E                  ___fldiv 25F4  
                ___awdiv 3AD6                  ___flneg 3FB2                  ___awmod 3BD0  
                ___flmul 1F96                  ___flsub 3E64                  ___fltol 372C  
        __size_of___wmul 0026                ?_vfprintf 004A             __psmallconst 0800  
        __size_of_efgtoa 097C          __size_of_floorf 01B6                  __pcinit 4030  
                __ramtop 0800                  __ptext0 1260                  __ptext1 4052  
                __ptext2 39C2                  __ptext3 34B8                  __ptext4 3DC8  
                __ptext5 3D20                  __ptext6 19E0                  __ptext7 37E6  
                __ptext8 08E4                  __ptext9 3E18          __size_of_strcpy 0052  
        __size_of_strlen 002A                  _palabra 0172             __size_of_abs 0032  
           __size_of_pad 009A                  _isdigit 3F82             __size_of_scv 008A  
             ??___xxtofl 00C0         ___awmod@dividend 0001                  _isspace 3EAA  
                _isupper 3F52                  efgtoa@c 0034                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 0030                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0074                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 0070                  efgtoa@u 0094                  efgtoa@w 007F  
                _numero1 00EE                  _numero2 0161                  _numero3 0150  
                atoi@neg 000E                  main@SEL 00D0                  _sprintf 3DC8  
                _tolower 3E18                  _strncmp 37E6     end_of_initialization 4048  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C                  resta@s1 00B8                  resta@s2 00BA  
      __end_of_vfpfcnvrt 1F96               efgtoa@mode 0081               efgtoa@sign 007A  
           ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004                Lcd_Out2@y 0009  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0050                  strcpy@d 0009  
                strlen@a 0003                  strcpy@s 0007                  strlen@s 0001  
              _PORTCbits 000F82                _PORTDbits 000F83              ___fladd@grs 0010  
          ___xxtofl@sign 00C4                _TRISCbits 000F94                _TRISDbits 000F95  
            ___fldiv@grs 0014              ___fldiv@rem 000D       __end_of_Lcd_Chr_CP 316E  
            ___flmul@grs 000E           __end_of___flge 3660           __end_of___fleq 3AD6  
            vfpfcnvrt@ap 0044              vfpfcnvrt@ct 00AC              vfpfcnvrt@fp 0040  
            vfpfcnvrt@ll 0098           __end_of___wmul 4030           __end_of_efgtoa 1260  
         __end_of_floorf 2C7A               floorf@F524 00DE           __end_of_strcpy 3DC8  
         __end_of_strlen 400A      start_initialization 4030              __end_of_abs 3F52  
            __end_of_pad 39C2              __end_of_scv 3A4C            Lcd_Out@buffer 0005  
      __size_of_Lcd_Init 0106        __size_of_Lcd_Out2 0070    __end_of___fpclassifyf 372C  
            vfprintf@fmt 004C                 ??___flge 0022                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 0035                 ??_floorf 001E  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 0005                ___fldiv@b 0001  
              ___flmul@a 0005                ___flmul@b 0001                ___flsub@a 001E  
              ___flsub@b 001A            __pcstackBANK0 0060         ___aodiv@dividend 0001  
      __size_of___xxtofl 0144                 ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004  
              _main$1296 00CC                _main$1297 00CE                 ?___aodiv 0001  
               ?___fladd 0001                 ?___aomod 0001                 ?___fldiv 0001  
               ?___awdiv 0001         ___aodiv@quotient 0013                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 0001                 ?___flsub 001A  
               ?___fltol 0001        __size_of_vfprintf 0056              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00B0                 ?_tolower 0007           __size_of_fputc 00A0  
         __size_of_fputs 0038                 ?_strncmp 0001           __size_of_resta 00D8  
         __size_of_putch 0002           ___wmul@product 0005                 Lcd_Out@x 0004  
       __CFG_WDTPS$32768 000000                 Lcd_Out@y 0009                _vfpfcnvrt 19E0  
           Lcd_Init@data 0005        ___wmul@multiplier 0001             _isspace$1010 0007  
           Lcd_Out2@data 000A                 _Lcd_Init 33B2                 _Lcd_Out2 3C40  
             vfpfcnvrt@c 00AF               vfpfcnvrt@f 00A8         __size_of_Lcd_Cmd 0120  
       __size_of_Lcd_Out 0076                 __Hrparam 0000               vfprintf@ap 004E  
               __Lrparam 0000               vfprintf@fp 004A         __size_of___aodiv 0148  
       __size_of___fladd 030C         __size_of___aomod 0124         __size_of___fldiv 0288  
       __size_of___awdiv 0084         __size_of___flneg 002E         __size_of___awmod 0070  
       __size_of___flmul 0352         __size_of___flsub 0046         __size_of___fltol 00BA  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F463 00E2               sprintf@fmt 00B2                 ___xxtofl 2DC2  
               _atoi$980 0014                 _atoi$981 0012                 _atoi$979 0010  
       __size_of_isdigit 0030           Lcd_Chr_CP@data 0003                 _dtoa$451 002E  
       __size_of_isspace 003E                 __ptext10 3F52                 __ptext11 3D76  
               __ptext20 3A4C                 __ptext12 2AC4                 __ptext21 25F4  
               __ptext13 3660                 __ptext30 3F20                 __ptext22 3BD0  
               __ptext14 372C                 __ptext31 316E                 __ptext23 3AD6  
               __ptext15 3E64                 __ptext40 3B5A                 __ptext32 2C7A  
               __ptext24 287C                 __ptext16 22E8                 __ptext41 3046  
               __ptext33 2F06                 __ptext25 3928                 __ptext17 3FB2  
               __ptext42 33B2                 __ptext34 3EAA                 __ptext26 3FE0  
               __ptext18 1F96                 __ptext43 3292                 __ptext35 3F82  
               __ptext27 3EE8                 __ptext19 3590                 __ptext36 3C40  
               __ptext28 3888                 __ptext37 3CB0                 __ptext29 4068  
               __ptext38 400A                 __ptext39 2DC2         __size_of_isupper 0030  
       __size_of_sprintf 0050         __size_of_tolower 004C               strcpy@dest 0001  
       __size_of_strncmp 00A2              Lcd_Cmd@data 0003            __size_of_atoi 0140  
          __size_of_main 0780            __size_of_dtoa 0248            __size_of_mult 0070  
          __size_of_suma 0016                 efgtoa@fp 002E                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060                 _vfprintf 3D20  
       ___aomod@dividend 0001    __CFG_CPUDIV$OSC1_PLL2 000000              Lcd_Out@data 000A  
               isdigit@c 0001                sprintf@ap 0054                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 007E          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0046            _vfpfcnvrt$500 00A2            _vfpfcnvrt$501 00A4  
          _vfpfcnvrt$506 00A6          ___aomod@counter 0011                 sprintf@f 0056  
               tolower@c 0007                 sprintf@s 00B0   __size_of___fpclassifyf 00CC  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
          ___fladd@signs 000D             ___aodiv@sign 0012             ___fladd@aexp 000E  
           ___fladd@bexp 000F             ___aomod@sign 0012  
