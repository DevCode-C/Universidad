

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 01 17:49:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _PORTAbits	set	3968
    61  0000                     _TRISAbits	set	3986
    62  0000                     _LATC	set	3979
    63  0000                     _TRISC	set	3988
    64  0000                     _PORTBbits	set	3969
    65  0000                     _INTCONbits	set	4082
    66  0000                     _ADCON1	set	4033
    67  0000                     _PORTDbits	set	3971
    68  0000                     _TRISDbits	set	3989
    69  0000                     _SSPBUF	set	4041
    70  0000                     _TRISBbits	set	3987
    71  0000                     _SSPSTAT	set	4039
    72  0000                     _SSPADD	set	4040
    73  0000                     _SSPCON2	set	4037
    74  0000                     _SSPCON1	set	4038
    75  0000                     _INT2F	set	32641
    76  0000                     _INT2IF	set	32641
    77  0000                     _INT2IE	set	32644
    78  0000                     _INTEDG2	set	32652
    79  0000                     _ACKEN	set	32300
    80  0000                     _ACKDT	set	32301
    81  0000                     _RCEN	set	32299
    82  0000                     _PEN	set	32298
    83  0000                     _RSEN	set	32297
    84  0000                     _SEN	set	32296
    85                           
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	opt callstack 0
    89  000800  00                 	db	0
    90  000801                     STR_1:
    91  000801  48                 	db	72	;'H'
    92  000802  6F                 	db	111	;'o'
    93  000803  6C                 	db	108	;'l'
    94  000804  61                 	db	97	;'a'
    95  000805  20                 	db	32
    96  000806  6D                 	db	109	;'m'
    97  000807  75                 	db	117	;'u'
    98  000808  6E                 	db	110	;'n'
    99  000809  64                 	db	100	;'d'
   100  00080A  6F                 	db	111	;'o'
   101  00080B  00                 	db	0
   102                           
   103                           ; #config settings
   104  00080C  00                 	db	0	; dummy byte at the end
   105  0000                     
   106                           	psect	cinit
   107  000DFA                     __pcinit:
   108                           	opt callstack 0
   109  000DFA                     start_initialization:
   110                           	opt callstack 0
   111  000DFA                     __initialization:
   112                           	opt callstack 0
   113                           
   114                           ; Clear objects allocated to COMRAM (40 bytes)
   115  000DFA  EE00  F001         	lfsr	0,__pbssCOMRAM
   116  000DFE  0E28               	movlw	40
   117  000E00                     clear_0:
   118  000E00  6AEE               	clrf	postinc0,c
   119  000E02  06E8               	decf	wreg,f,c
   120  000E04  E1FD               	bnz	clear_0
   121  000E06                     end_of_initialization:
   122                           	opt callstack 0
   123  000E06                     __end_of__initialization:
   124                           	opt callstack 0
   125  000E06  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   126  000E08  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   127  000E0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  000E0C  6EF8               	movwf	tblptru,c
   129  000E0E  0100               	movlb	0
   130  000E10  EF5A  F006         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133  000001                     __pbssCOMRAM:
   134                           	opt callstack 0
   135  000001                     _Palabra1:
   136                           	opt callstack 0
   137  000001                     	ds	17
   138  000012                     _palabra:
   139                           	opt callstack 0
   140  000012                     	ds	17
   141  000023                     _valor:
   142                           	opt callstack 0
   143  000023                     	ds	4
   144  000027                     _contador:
   145                           	opt callstack 0
   146  000027                     	ds	2
   147                           
   148                           	psect	cstackCOMRAM
   149  000029                     __pcstackCOMRAM:
   150                           	opt callstack 0
   151  000029                     ??_I2C_Master_Wait:
   152  000029                     
   153                           ; 1 bytes @ 0x0
   154  000029                     	ds	1
   155  00002A                     I2C_Master_Write@d:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x1
   159  00002A                     	ds	2
   160  00002C                     ??_interru:
   161                           
   162                           ; 1 bytes @ 0x3
   163  00002C                     	ds	2
   164  00002E                     ??_Lcd_Cmd:
   165  00002E                     ??_Lcd_Chr_CP:
   166  00002E                     ?___lldiv:
   167                           	opt callstack 0
   168  00002E                     ___lldiv@dividend:
   169                           	opt callstack 0
   170                           
   171                           ; 4 bytes @ 0x5
   172  00002E                     	ds	2
   173  000030                     Lcd_Chr_CP@data:
   174                           	opt callstack 0
   175  000030                     Lcd_Cmd@data:
   176                           	opt callstack 0
   177                           
   178                           ; 1 bytes @ 0x7
   179  000030                     	ds	1
   180  000031                     ??_Lcd_Init:
   181  000031                     Lcd_Out@x:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0x8
   185  000031                     	ds	1
   186  000032                     Lcd_Init@data:
   187                           	opt callstack 0
   188  000032                     Lcd_Out@buffer:
   189                           	opt callstack 0
   190  000032                     ___lldiv@divisor:
   191                           	opt callstack 0
   192                           
   193                           ; 4 bytes @ 0x9
   194  000032                     	ds	2
   195  000034                     ??_Lcd_Out:
   196                           
   197                           ; 1 bytes @ 0xB
   198  000034                     	ds	2
   199  000036                     Lcd_Out@y:
   200                           	opt callstack 0
   201  000036                     ___lldiv@quotient:
   202                           	opt callstack 0
   203                           
   204                           ; 4 bytes @ 0xD
   205  000036                     	ds	1
   206  000037                     Lcd_Out@data:
   207                           	opt callstack 0
   208                           
   209                           ; 1 bytes @ 0xE
   210  000037                     	ds	3
   211  00003A                     ___lldiv@counter:
   212                           	opt callstack 0
   213                           
   214                           ; 1 bytes @ 0x11
   215  00003A                     	ds	1
   216  00003B                     I2C_Master_Init@c:
   217                           	opt callstack 0
   218                           
   219                           ; 4 bytes @ 0x12
   220  00003B                     	ds	4
   221  00003F                     ??_I2C_Master_Init:
   222                           
   223                           ; 1 bytes @ 0x16
   224  00003F                     	ds	4
   225  000043                     ??_main:
   226                           
   227                           ; 1 bytes @ 0x1A
   228  000043                     	ds	2
   229                           
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 17 in file "I2C_Master.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   249 ;;      Params:         0       0       0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0       0       0
   251 ;;      Temps:          2       0       0       0       0       0       0       0       0
   252 ;;      Totals:         2       0       0       0       0       0       0       0       0
   253 ;;Total ram usage:        2 bytes
   254 ;; Hardware stack levels required when called:    5
   255 ;; This function calls:
   256 ;;		_I2C_Master_Init
   257 ;;		_Lcd_Cmd
   258 ;;		_Lcd_Init
   259 ;;		_Lcd_Out
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text0
   266  000CB4                     __ptext0:
   267                           	opt callstack 0
   268  000CB4                     _main:
   269                           	opt callstack 26
   270                           
   271                           ;I2C_Master.c: 18:     ADCON1=0x0F;
   272                           
   273                           ;incstack = 0
   274  000CB4  0E0F               	movlw	15
   275  000CB6  6EC1               	movwf	4033,c	;volatile
   276                           
   277                           ;I2C_Master.c: 19:     INTCONbits.GIE=1;
   278  000CB8  8EF2               	bsf	4082,7,c	;volatile
   279                           
   280                           ;I2C_Master.c: 20:     INTCONbits.PEIE_GIEL=1;
   281  000CBA  8CF2               	bsf	4082,6,c	;volatile
   282                           
   283                           ;I2C_Master.c: 21:     INTEDG2=0;
   284  000CBC  98F1               	bcf	4081,4,c	;volatile
   285                           
   286                           ;I2C_Master.c: 22:     INT2IE=1;
   287  000CBE  88F0               	bsf	4080,4,c	;volatile
   288                           
   289                           ;I2C_Master.c: 23:     INT2IF=0;
   290  000CC0  92F0               	bcf	4080,1,c	;volatile
   291                           
   292                           ;I2C_Master.c: 24:     TRISBbits.TRISB2=1;
   293  000CC2  8493               	bsf	3987,2,c	;volatile
   294                           
   295                           ;I2C_Master.c: 25:     PORTBbits.INT2=0;
   296  000CC4  9481               	bcf	3969,2,c	;volatile
   297                           
   298                           ;I2C_Master.c: 26:     TRISC=0x00;
   299  000CC6  0E00               	movlw	0
   300  000CC8  6E94               	movwf	3988,c	;volatile
   301                           
   302                           ;I2C_Master.c: 27:     LATC=0x00;
   303  000CCA  0E00               	movlw	0
   304  000CCC  6E8B               	movwf	3979,c	;volatile
   305                           
   306                           ;I2C_Master.c: 28:     TRISAbits.TRISA0=1; TRISAbits.TRISA1=1; TRISAbits.TRISA2=1;
   307  000CCE  8092               	bsf	3986,0,c	;volatile
   308  000CD0  8292               	bsf	3986,1,c	;volatile
   309  000CD2  8492               	bsf	3986,2,c	;volatile
   310                           
   311                           ;I2C_Master.c: 29:     PORTAbits.RA0=0; PORTAbits.RA1=0; PORTAbits.RA2=0;
   312  000CD4  9080               	bcf	3968,0,c	;volatile
   313  000CD6  9280               	bcf	3968,1,c	;volatile
   314  000CD8  9480               	bcf	3968,2,c	;volatile
   315                           
   316                           ;I2C_Master.c: 30:     I2C_Master_Init(100000);
   317  000CDA  0EA0               	movlw	160
   318  000CDC  6E3B               	movwf	I2C_Master_Init@c,c
   319  000CDE  0E86               	movlw	134
   320  000CE0  6E3C               	movwf	I2C_Master_Init@c+1,c
   321  000CE2  0E01               	movlw	1
   322  000CE4  6E3D               	movwf	I2C_Master_Init@c+2,c
   323  000CE6  0E00               	movlw	0
   324  000CE8  6E3E               	movwf	I2C_Master_Init@c+3,c
   325  000CEA  ECD0  F006         	call	_I2C_Master_Init	;wreg free
   326                           
   327                           ;I2C_Master.c: 31:     Lcd_Init();
   328  000CEE  EC28  F005         	call	_Lcd_Init	;wreg free
   329                           
   330                           ;I2C_Master.c: 32:     Lcd_Cmd(1);
   331  000CF2  0E01               	movlw	1
   332  000CF4  EC99  F004         	call	_Lcd_Cmd
   333                           
   334                           ;I2C_Master.c: 33:     Lcd_Cmd(12);
   335  000CF8  0E0C               	movlw	12
   336  000CFA  EC99  F004         	call	_Lcd_Cmd
   337                           
   338                           ;I2C_Master.c: 34:     _delay((unsigned long)((100)*(12000000/4000.0)));
   339  000CFE  0E02               	movlw	2
   340  000D00  6E44               	movwf	(??_main+1)& (0+255),c
   341  000D02  0E86               	movlw	134
   342  000D04  6E43               	movwf	??_main& (0+255),c
   343  000D06  0E99               	movlw	153
   344  000D08                     u337:
   345  000D08  2EE8               	decfsz	wreg,f,c
   346  000D0A  D7FE               	bra	u337
   347  000D0C  2E43               	decfsz	??_main& (0+255),f,c
   348  000D0E  D7FC               	bra	u337
   349  000D10  2E44               	decfsz	(??_main+1)& (0+255),f,c
   350  000D12  D7FA               	bra	u337
   351  000D14  F000               	nop	
   352  000D16                     l1217:
   353                           
   354                           ;I2C_Master.c: 36:         Lcd_Out(1,1,"Hola mundo");
   355  000D16  0E01               	movlw	1
   356  000D18  6E31               	movwf	Lcd_Out@x,c
   357  000D1A  0E01               	movlw	low STR_1
   358  000D1C  6E32               	movwf	Lcd_Out@buffer,c
   359  000D1E  0E08               	movlw	high STR_1
   360  000D20  6E33               	movwf	Lcd_Out@buffer+1,c
   361  000D22  0E01               	movlw	1
   362  000D24  EC95  F006         	call	_Lcd_Out
   363  000D28  D7F6               	goto	l1217
   364  000D2A                     __end_of_main:
   365                           	opt callstack 0
   366                           
   367 ;; *************** function _Lcd_Out *****************
   368 ;; Defined at:
   369 ;;		line 94 in file "./flex_lcd.h"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  y               1    wreg     unsigned char 
   372 ;;  x               1    8[COMRAM] unsigned char 
   373 ;;  buffer          2    9[COMRAM] PTR const unsigned char 
   374 ;;		 -> STR_1(11), 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  y               1   13[COMRAM] unsigned char 
   377 ;;  data            1   14[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         3       0       0       0       0       0       0       0       0
   388 ;;      Locals:         2       0       0       0       0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0       0       0       0       0
   390 ;;      Totals:         7       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        7 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; Hardware stack levels required when called:    4
   394 ;; This function calls:
   395 ;;		_Lcd_Chr_CP
   396 ;;		_Lcd_Cmd
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  000D2A                     __ptext1:
   404                           	opt callstack 0
   405  000D2A                     _Lcd_Out:
   406                           	opt callstack 26
   407                           
   408                           ;incstack = 0
   409                           ;Lcd_Out@y stored from wreg
   410  000D2A  6E36               	movwf	Lcd_Out@y,c
   411                           
   412                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
   413  000D2C  D00D               	goto	l1165
   414  000D2E                     l1155:
   415  000D2E  5031               	movf	Lcd_Out@x,w,c
   416  000D30  0F80               	addlw	128
   417  000D32  D008               	goto	L3
   418  000D34                     l1157:
   419  000D34  5031               	movf	Lcd_Out@x,w,c
   420  000D36  0FC0               	addlw	192
   421  000D38  D005               	goto	L3
   422  000D3A                     l1159:
   423  000D3A  5031               	movf	Lcd_Out@x,w,c
   424  000D3C  0F94               	addlw	148
   425  000D3E  D002               	goto	L3
   426  000D40                     l1161:
   427  000D40  5031               	movf	Lcd_Out@x,w,c
   428  000D42  0FD4               	addlw	212
   429  000D44                     L3:
   430  000D44  6E37               	movwf	Lcd_Out@data,c
   431  000D46  D014               	goto	l1167
   432  000D48                     l1165:
   433  000D48  5036               	movf	Lcd_Out@y,w,c
   434  000D4A  6E34               	movwf	??_Lcd_Out& (0+255),c
   435  000D4C  6A35               	clrf	(??_Lcd_Out+1)& (0+255),c
   436                           
   437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   438                           ; Switch size 1, requested type "simple"
   439                           ; Number of cases is 1, Range of values is 0 to 0
   440                           ; switch strategies available:
   441                           ; Name         Instructions Cycles
   442                           ; simple_byte            4     3 (average)
   443                           ;	Chosen strategy is simple_byte
   444  000D4E  5035               	movf	??_Lcd_Out+1,w,c
   445  000D50  0A00               	xorlw	0	; case 0
   446  000D52  A4D8               	btfss	status,2,c
   447  000D54  D00D               	goto	l1167
   448                           
   449                           ; Switch size 1, requested type "simple"
   450                           ; Number of cases is 4, Range of values is 1 to 4
   451                           ; switch strategies available:
   452                           ; Name         Instructions Cycles
   453                           ; simple_byte           13     7 (average)
   454                           ;	Chosen strategy is simple_byte
   455  000D56  5034               	movf	??_Lcd_Out,w,c
   456  000D58  0A01               	xorlw	1	; case 1
   457  000D5A  B4D8               	btfsc	status,2,c
   458  000D5C  D7E8               	goto	l1155
   459  000D5E  0A03               	xorlw	3	; case 2
   460  000D60  B4D8               	btfsc	status,2,c
   461  000D62  D7E8               	goto	l1157
   462  000D64  0A01               	xorlw	1	; case 3
   463  000D66  B4D8               	btfsc	status,2,c
   464  000D68  D7E8               	goto	l1159
   465  000D6A  0A07               	xorlw	7	; case 4
   466  000D6C  B4D8               	btfsc	status,2,c
   467  000D6E  D7E8               	goto	l1161
   468  000D70                     l1167:
   469                           
   470                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
   471  000D70  5037               	movf	Lcd_Out@data,w,c
   472  000D72  EC99  F004         	call	_Lcd_Cmd
   473                           
   474                           ;./flex_lcd.h: 106: while(*buffer)
   475  000D76  D00A               	goto	l1173
   476  000D78                     l1169:
   477                           
   478                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
   479  000D78  C032  FFF6         	movff	Lcd_Out@buffer,tblptrl
   480  000D7C  C033  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   481  000D80                     	if	0	;tblptru may be non-zero
   482  000D80                     	endif
   483  000D80                     	if	0	;tblptru may be non-zero
   484  000D80                     	endif
   485  000D80  0008               	tblrd		*
   486  000D82  50F5               	movf	tablat,w,c
   487  000D84  EC07  F004         	call	_Lcd_Chr_CP
   488                           
   489                           ;./flex_lcd.h: 109:     buffer++;
   490  000D88  4A32               	infsnz	Lcd_Out@buffer,f,c
   491  000D8A  2A33               	incf	Lcd_Out@buffer+1,f,c
   492  000D8C                     l1173:
   493                           
   494                           ;./flex_lcd.h: 106: while(*buffer)
   495  000D8C  C032  FFF6         	movff	Lcd_Out@buffer,tblptrl
   496  000D90  C033  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   497  000D94                     	if	0	;tblptru may be non-zero
   498  000D94                     	endif
   499  000D94                     	if	0	;tblptru may be non-zero
   500  000D94                     	endif
   501  000D94  0008               	tblrd		*
   502  000D96  50F5               	movf	tablat,w,c
   503  000D98  0900               	iorlw	0
   504  000D9A  B4D8               	btfsc	status,2,c
   505  000D9C  0012               	return	
   506  000D9E  D7EC               	goto	l1169
   507  000DA0                     __end_of_Lcd_Out:
   508                           	opt callstack 0
   509                           
   510 ;; *************** function _Lcd_Chr_CP *****************
   511 ;; Defined at:
   512 ;;		line 136 in file "./flex_lcd.h"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  data            1    wreg     unsigned char 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  data            1    7[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   526 ;;      Params:         0       0       0       0       0       0       0       0       0
   527 ;;      Locals:         1       0       0       0       0       0       0       0       0
   528 ;;      Temps:          2       0       0       0       0       0       0       0       0
   529 ;;      Totals:         3       0       0       0       0       0       0       0       0
   530 ;;Total ram usage:        3 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    3
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_Lcd_Out
   537 ;;		_Lcd_Out2
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text2
   542  00080E                     __ptext2:
   543                           	opt callstack 0
   544  00080E                     _Lcd_Chr_CP:
   545                           	opt callstack 26
   546                           
   547                           ;incstack = 0
   548                           ;Lcd_Chr_CP@data stored from wreg
   549  00080E  6E30               	movwf	Lcd_Chr_CP@data,c
   550                           
   551                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
   552  000810  9A83               	bcf	3971,5,c	;volatile
   553  000812  8883               	bsf	3971,4,c	;volatile
   554                           
   555                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
   556  000814  6A2E               	clrf	??_Lcd_Chr_CP& (0+255),c
   557  000816  AE30               	btfss	Lcd_Chr_CP@data,7,c
   558  000818  D001               	bra	u65
   559  00081A  2A2E               	incf	??_Lcd_Chr_CP& (0+255),f,c
   560  00081C                     u65:
   561  00081C  0E01               	movlw	1
   562  00081E  162E               	andwf	??_Lcd_Chr_CP,f,c
   563  000820  462E               	rlncf	??_Lcd_Chr_CP,f,c
   564  000822  462E               	rlncf	??_Lcd_Chr_CP,f,c
   565  000824  462E               	rlncf	??_Lcd_Chr_CP,f,c
   566  000826  5083               	movf	3971,w,c	;volatile
   567  000828  182E               	xorwf	??_Lcd_Chr_CP,w,c
   568  00082A  0BF7               	andlw	-9
   569  00082C  182E               	xorwf	??_Lcd_Chr_CP,w,c
   570  00082E  6E83               	movwf	3971,c	;volatile
   571  000830  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   572  000834  0E06               	movlw	6
   573  000836  6E2F               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   574  000838                     u75:
   575  000838  90D8               	bcf	status,0,c
   576  00083A  322E               	rrcf	??_Lcd_Chr_CP,f,c
   577  00083C  2E2F               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   578  00083E  D7FC               	goto	u75
   579  000840  0E01               	movlw	1
   580  000842  162E               	andwf	??_Lcd_Chr_CP,f,c
   581  000844  462E               	rlncf	??_Lcd_Chr_CP,f,c
   582  000846  462E               	rlncf	??_Lcd_Chr_CP,f,c
   583  000848  5083               	movf	3971,w,c	;volatile
   584  00084A  182E               	xorwf	??_Lcd_Chr_CP,w,c
   585  00084C  0BFB               	andlw	-5
   586  00084E  182E               	xorwf	??_Lcd_Chr_CP,w,c
   587  000850  6E83               	movwf	3971,c	;volatile
   588                           
   589                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
   590  000852  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   591  000856  0E05               	movlw	5
   592  000858  6E2F               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   593  00085A                     u85:
   594  00085A  90D8               	bcf	status,0,c
   595  00085C  322E               	rrcf	??_Lcd_Chr_CP,f,c
   596  00085E  2E2F               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   597  000860  D7FC               	goto	u85
   598  000862  0E01               	movlw	1
   599  000864  162E               	andwf	??_Lcd_Chr_CP,f,c
   600  000866  462E               	rlncf	??_Lcd_Chr_CP,f,c
   601  000868  5083               	movf	3971,w,c	;volatile
   602  00086A  182E               	xorwf	??_Lcd_Chr_CP,w,c
   603  00086C  0BFD               	andlw	-3
   604  00086E  182E               	xorwf	??_Lcd_Chr_CP,w,c
   605  000870  6E83               	movwf	3971,c	;volatile
   606  000872  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   607  000876  3A2E               	swapf	??_Lcd_Chr_CP,f,c
   608  000878  0E0F               	movlw	15
   609  00087A  162E               	andwf	??_Lcd_Chr_CP,f,c
   610  00087C  0E01               	movlw	1
   611  00087E  162E               	andwf	??_Lcd_Chr_CP,f,c
   612  000880  5083               	movf	3971,w,c	;volatile
   613  000882  182E               	xorwf	??_Lcd_Chr_CP,w,c
   614  000884  0BFE               	andlw	-2
   615  000886  182E               	xorwf	??_Lcd_Chr_CP,w,c
   616  000888  6E83               	movwf	3971,c	;volatile
   617                           
   618                           ;./flex_lcd.h: 140: _delay(10);
   619  00088A  0E03               	movlw	3
   620  00088C                     u347:
   621  00088C  2EE8               	decfsz	wreg,f,c
   622  00088E  D7FE               	bra	u347
   623  000890  F000               	nop	
   624                           
   625                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
   626  000892  8A83               	bsf	3971,5,c	;volatile
   627  000894  0E05               	movlw	5
   628  000896                     u357:
   629  000896  2EE8               	decfsz	wreg,f,c
   630  000898  D7FE               	bra	u357
   631  00089A  9A83               	bcf	3971,5,c	;volatile
   632                           
   633                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
   634  00089C  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   635  0008A0  90D8               	bcf	status,0,c
   636  0008A2  322E               	rrcf	??_Lcd_Chr_CP,f,c
   637  0008A4  90D8               	bcf	status,0,c
   638  0008A6  322E               	rrcf	??_Lcd_Chr_CP,f,c
   639  0008A8  90D8               	bcf	status,0,c
   640  0008AA  322E               	rrcf	??_Lcd_Chr_CP,f,c
   641  0008AC  0E01               	movlw	1
   642  0008AE  162E               	andwf	??_Lcd_Chr_CP,f,c
   643  0008B0  462E               	rlncf	??_Lcd_Chr_CP,f,c
   644  0008B2  462E               	rlncf	??_Lcd_Chr_CP,f,c
   645  0008B4  462E               	rlncf	??_Lcd_Chr_CP,f,c
   646  0008B6  5083               	movf	3971,w,c	;volatile
   647  0008B8  182E               	xorwf	??_Lcd_Chr_CP,w,c
   648  0008BA  0BF7               	andlw	-9
   649  0008BC  182E               	xorwf	??_Lcd_Chr_CP,w,c
   650  0008BE  6E83               	movwf	3971,c	;volatile
   651  0008C0  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   652  0008C4  90D8               	bcf	status,0,c
   653  0008C6  322E               	rrcf	??_Lcd_Chr_CP,f,c
   654  0008C8  90D8               	bcf	status,0,c
   655  0008CA  322E               	rrcf	??_Lcd_Chr_CP,f,c
   656  0008CC  0E01               	movlw	1
   657  0008CE  162E               	andwf	??_Lcd_Chr_CP,f,c
   658  0008D0  462E               	rlncf	??_Lcd_Chr_CP,f,c
   659  0008D2  462E               	rlncf	??_Lcd_Chr_CP,f,c
   660  0008D4  5083               	movf	3971,w,c	;volatile
   661  0008D6  182E               	xorwf	??_Lcd_Chr_CP,w,c
   662  0008D8  0BFB               	andlw	-5
   663  0008DA  182E               	xorwf	??_Lcd_Chr_CP,w,c
   664  0008DC  6E83               	movwf	3971,c	;volatile
   665                           
   666                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
   667  0008DE  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   668  0008E2  90D8               	bcf	status,0,c
   669  0008E4  322E               	rrcf	??_Lcd_Chr_CP,f,c
   670  0008E6  0E01               	movlw	1
   671  0008E8  162E               	andwf	??_Lcd_Chr_CP,f,c
   672  0008EA  462E               	rlncf	??_Lcd_Chr_CP,f,c
   673  0008EC  5083               	movf	3971,w,c	;volatile
   674  0008EE  182E               	xorwf	??_Lcd_Chr_CP,w,c
   675  0008F0  0BFD               	andlw	-3
   676  0008F2  182E               	xorwf	??_Lcd_Chr_CP,w,c
   677  0008F4  6E83               	movwf	3971,c	;volatile
   678  0008F6  C030  F02E         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   679  0008FA  0E01               	movlw	1
   680  0008FC  162E               	andwf	??_Lcd_Chr_CP,f,c
   681  0008FE  5083               	movf	3971,w,c	;volatile
   682  000900  182E               	xorwf	??_Lcd_Chr_CP,w,c
   683  000902  0BFE               	andlw	-2
   684  000904  182E               	xorwf	??_Lcd_Chr_CP,w,c
   685  000906  6E83               	movwf	3971,c	;volatile
   686                           
   687                           ;./flex_lcd.h: 144: _delay(10);
   688  000908  0E03               	movlw	3
   689  00090A                     u367:
   690  00090A  2EE8               	decfsz	wreg,f,c
   691  00090C  D7FE               	bra	u367
   692  00090E  F000               	nop	
   693                           
   694                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
   695  000910  8A83               	bsf	3971,5,c	;volatile
   696  000912  0E05               	movlw	5
   697  000914                     u377:
   698  000914  2EE8               	decfsz	wreg,f,c
   699  000916  D7FE               	bra	u377
   700  000918  9A83               	bcf	3971,5,c	;volatile
   701                           
   702                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(12000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(12000000/4000000.0)));
   703  00091A  0E05               	movlw	5
   704  00091C                     u387:
   705  00091C  2EE8               	decfsz	wreg,f,c
   706  00091E  D7FE               	bra	u387
   707  000920  0E16               	movlw	22
   708  000922  6E2E               	movwf	??_Lcd_Chr_CP& (0+255),c
   709  000924  0E6C               	movlw	108
   710  000926                     u397:
   711  000926  2EE8               	decfsz	wreg,f,c
   712  000928  D7FE               	bra	u397
   713  00092A  2E2E               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
   714  00092C  D7FC               	bra	u397
   715  00092E  D000               	nop2	
   716  000930  0012               	return		;funcret
   717  000932                     __end_of_Lcd_Chr_CP:
   718                           	opt callstack 0
   719                           
   720 ;; *************** function _Lcd_Init *****************
   721 ;; Defined at:
   722 ;;		line 52 in file "./flex_lcd.h"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  data            1    9[COMRAM] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         0       0       0       0       0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0       0       0       0       0
   739 ;;      Totals:         2       0       0       0       0       0       0       0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    4
   743 ;; This function calls:
   744 ;;		_Lcd_Cmd
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text3
   751  000A50                     __ptext3:
   752                           	opt callstack 0
   753  000A50                     _Lcd_Init:
   754                           	opt callstack 26
   755                           
   756                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
   757                           
   758                           ;incstack = 0
   759  000A50  9695               	bcf	3989,3,c	;volatile
   760                           
   761                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
   762  000A52  9495               	bcf	3989,2,c	;volatile
   763                           
   764                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
   765  000A54  9295               	bcf	3989,1,c	;volatile
   766                           
   767                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
   768  000A56  9095               	bcf	3989,0,c	;volatile
   769                           
   770                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
   771  000A58  9A95               	bcf	3989,5,c	;volatile
   772                           
   773                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
   774  000A5A  9895               	bcf	3989,4,c	;volatile
   775                           
   776                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
   777  000A5C  9683               	bcf	3971,3,c	;volatile
   778                           
   779                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
   780  000A5E  9483               	bcf	3971,2,c	;volatile
   781                           
   782                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
   783  000A60  9283               	bcf	3971,1,c	;volatile
   784                           
   785                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
   786  000A62  9083               	bcf	3971,0,c	;volatile
   787                           
   788                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
   789  000A64  9A83               	bcf	3971,5,c	;volatile
   790                           
   791                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
   792  000A66  9883               	bcf	3971,4,c	;volatile
   793                           
   794                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   795  000A68  0E16               	movlw	22
   796  000A6A  6E31               	movwf	??_Lcd_Init& (0+255),c
   797  000A6C  0E6C               	movlw	108
   798  000A6E                     u407:
   799  000A6E  2EE8               	decfsz	wreg,f,c
   800  000A70  D7FE               	bra	u407
   801  000A72  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   802  000A74  D7FC               	bra	u407
   803  000A76  D000               	nop2	
   804                           
   805                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   806  000A78  0E16               	movlw	22
   807  000A7A  6E31               	movwf	??_Lcd_Init& (0+255),c
   808  000A7C  0E6C               	movlw	108
   809  000A7E                     u417:
   810  000A7E  2EE8               	decfsz	wreg,f,c
   811  000A80  D7FE               	bra	u417
   812  000A82  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   813  000A84  D7FC               	bra	u417
   814  000A86  D000               	nop2	
   815                           
   816                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   817  000A88  0E16               	movlw	22
   818  000A8A  6E31               	movwf	??_Lcd_Init& (0+255),c
   819  000A8C  0E6C               	movlw	108
   820  000A8E                     u427:
   821  000A8E  2EE8               	decfsz	wreg,f,c
   822  000A90  D7FE               	bra	u427
   823  000A92  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   824  000A94  D7FC               	bra	u427
   825  000A96  D000               	nop2	
   826                           
   827                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   828  000A98  0E16               	movlw	22
   829  000A9A  6E31               	movwf	??_Lcd_Init& (0+255),c
   830  000A9C  0E6C               	movlw	108
   831  000A9E                     u437:
   832  000A9E  2EE8               	decfsz	wreg,f,c
   833  000AA0  D7FE               	bra	u437
   834  000AA2  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   835  000AA4  D7FC               	bra	u437
   836  000AA6  D000               	nop2	
   837                           
   838                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   839  000AA8  0E16               	movlw	22
   840  000AAA  6E31               	movwf	??_Lcd_Init& (0+255),c
   841  000AAC  0E6C               	movlw	108
   842  000AAE                     u447:
   843  000AAE  2EE8               	decfsz	wreg,f,c
   844  000AB0  D7FE               	bra	u447
   845  000AB2  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   846  000AB4  D7FC               	bra	u447
   847  000AB6  D000               	nop2	
   848                           
   849                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   850  000AB8  0E16               	movlw	22
   851  000ABA  6E31               	movwf	??_Lcd_Init& (0+255),c
   852  000ABC  0E6C               	movlw	108
   853  000ABE                     u457:
   854  000ABE  2EE8               	decfsz	wreg,f,c
   855  000AC0  D7FE               	bra	u457
   856  000AC2  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   857  000AC4  D7FC               	bra	u457
   858  000AC6  D000               	nop2	
   859                           
   860                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
   861  000AC8  0E01               	movlw	1
   862  000ACA  6E32               	movwf	Lcd_Init@data,c
   863  000ACC                     l83:
   864                           
   865                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
   866  000ACC  9683               	bcf	3971,3,c	;volatile
   867  000ACE  9483               	bcf	3971,2,c	;volatile
   868  000AD0  8283               	bsf	3971,1,c	;volatile
   869  000AD2  8083               	bsf	3971,0,c	;volatile
   870  000AD4  9A83               	bcf	3971,5,c	;volatile
   871                           
   872                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
   873  000AD6  9883               	bcf	3971,4,c	;volatile
   874  000AD8  9683               	bcf	3971,3,c	;volatile
   875  000ADA  9483               	bcf	3971,2,c	;volatile
   876  000ADC  8283               	bsf	3971,1,c	;volatile
   877  000ADE  8083               	bsf	3971,0,c	;volatile
   878                           
   879                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
   880  000AE0  8A83               	bsf	3971,5,c	;volatile
   881  000AE2  9883               	bcf	3971,4,c	;volatile
   882                           
   883                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(12000000/4000000.0)));
   884  000AE4  0E05               	movlw	5
   885  000AE6                     u467:
   886  000AE6  2EE8               	decfsz	wreg,f,c
   887  000AE8  D7FE               	bra	u467
   888                           
   889                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
   890  000AEA  9683               	bcf	3971,3,c	;volatile
   891  000AEC  9483               	bcf	3971,2,c	;volatile
   892  000AEE  8283               	bsf	3971,1,c	;volatile
   893  000AF0  8083               	bsf	3971,0,c	;volatile
   894  000AF2  9A83               	bcf	3971,5,c	;volatile
   895                           
   896                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
   897  000AF4  9883               	bcf	3971,4,c	;volatile
   898                           
   899                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
   900  000AF6  0E16               	movlw	22
   901  000AF8  6E31               	movwf	??_Lcd_Init& (0+255),c
   902  000AFA  0E6C               	movlw	108
   903  000AFC                     u477:
   904  000AFC  2EE8               	decfsz	wreg,f,c
   905  000AFE  D7FE               	bra	u477
   906  000B00  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   907  000B02  D7FC               	bra	u477
   908  000B04  D000               	nop2	
   909                           
   910                           ;./flex_lcd.h: 81: }
   911  000B06  2A32               	incf	Lcd_Init@data,f,c
   912  000B08  0E03               	movlw	3
   913  000B0A  6432               	cpfsgt	Lcd_Init@data,c
   914  000B0C  D7DF               	goto	l83
   915                           
   916                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
   917  000B0E  9683               	bcf	3971,3,c	;volatile
   918  000B10  9483               	bcf	3971,2,c	;volatile
   919  000B12  8283               	bsf	3971,1,c	;volatile
   920  000B14  9083               	bcf	3971,0,c	;volatile
   921  000B16  9A83               	bcf	3971,5,c	;volatile
   922  000B18  9883               	bcf	3971,4,c	;volatile
   923                           
   924                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
   925  000B1A  9683               	bcf	3971,3,c	;volatile
   926  000B1C  9483               	bcf	3971,2,c	;volatile
   927  000B1E  8283               	bsf	3971,1,c	;volatile
   928  000B20  9083               	bcf	3971,0,c	;volatile
   929  000B22  8A83               	bsf	3971,5,c	;volatile
   930  000B24  9883               	bcf	3971,4,c	;volatile
   931                           
   932                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(12000000/4000000.0)));
   933  000B26  0E05               	movlw	5
   934  000B28                     u487:
   935  000B28  2EE8               	decfsz	wreg,f,c
   936  000B2A  D7FE               	bra	u487
   937                           
   938                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
   939  000B2C  9683               	bcf	3971,3,c	;volatile
   940  000B2E  9483               	bcf	3971,2,c	;volatile
   941  000B30  8283               	bsf	3971,1,c	;volatile
   942  000B32  9083               	bcf	3971,0,c	;volatile
   943  000B34  9A83               	bcf	3971,5,c	;volatile
   944  000B36  9883               	bcf	3971,4,c	;volatile
   945                           
   946                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(12000000/4000000.0)));
   947  000B38  0E16               	movlw	22
   948  000B3A  6E31               	movwf	??_Lcd_Init& (0+255),c
   949  000B3C  0E6C               	movlw	108
   950  000B3E                     u497:
   951  000B3E  2EE8               	decfsz	wreg,f,c
   952  000B40  D7FE               	bra	u497
   953  000B42  2E31               	decfsz	??_Lcd_Init& (0+255),f,c
   954  000B44  D7FC               	bra	u497
   955  000B46  D000               	nop2	
   956  000B48  0E28               	movlw	40
   957  000B4A  EC99  F004         	call	_Lcd_Cmd
   958  000B4E  0E10               	movlw	16
   959  000B50  EC99  F004         	call	_Lcd_Cmd
   960  000B54  0E01               	movlw	1
   961  000B56  EC99  F004         	call	_Lcd_Cmd
   962  000B5A  0E0F               	movlw	15
   963  000B5C  EC99  F004         	call	_Lcd_Cmd
   964  000B60  0012               	return		;funcret
   965  000B62                     __end_of_Lcd_Init:
   966                           	opt callstack 0
   967                           
   968 ;; *************** function _Lcd_Cmd *****************
   969 ;; Defined at:
   970 ;;		line 150 in file "./flex_lcd.h"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  data            1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  data            1    7[COMRAM] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0       0       0       0       0
   986 ;;      Temps:          2       0       0       0       0       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_Lcd_Init
   995 ;;		_Lcd_Out
   996 ;;		_main
   997 ;;		_Lcd_Out2
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text4
  1002  000932                     __ptext4:
  1003                           	opt callstack 0
  1004  000932                     _Lcd_Cmd:
  1005                           	opt callstack 26
  1006                           
  1007                           ;incstack = 0
  1008                           ;Lcd_Cmd@data stored from wreg
  1009  000932  6E30               	movwf	Lcd_Cmd@data,c
  1010                           
  1011                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  1012  000934  9A83               	bcf	3971,5,c	;volatile
  1013  000936  9883               	bcf	3971,4,c	;volatile
  1014                           
  1015                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  1016  000938  6A2E               	clrf	??_Lcd_Cmd& (0+255),c
  1017  00093A  AE30               	btfss	Lcd_Cmd@data,7,c
  1018  00093C  D001               	bra	u35
  1019  00093E  2A2E               	incf	??_Lcd_Cmd& (0+255),f,c
  1020  000940                     u35:
  1021  000940  0E01               	movlw	1
  1022  000942  162E               	andwf	??_Lcd_Cmd,f,c
  1023  000944  462E               	rlncf	??_Lcd_Cmd,f,c
  1024  000946  462E               	rlncf	??_Lcd_Cmd,f,c
  1025  000948  462E               	rlncf	??_Lcd_Cmd,f,c
  1026  00094A  5083               	movf	3971,w,c	;volatile
  1027  00094C  182E               	xorwf	??_Lcd_Cmd,w,c
  1028  00094E  0BF7               	andlw	-9
  1029  000950  182E               	xorwf	??_Lcd_Cmd,w,c
  1030  000952  6E83               	movwf	3971,c	;volatile
  1031  000954  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1032  000958  0E06               	movlw	6
  1033  00095A  6E2F               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1034  00095C                     u45:
  1035  00095C  90D8               	bcf	status,0,c
  1036  00095E  322E               	rrcf	??_Lcd_Cmd,f,c
  1037  000960  2E2F               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1038  000962  D7FC               	goto	u45
  1039  000964  0E01               	movlw	1
  1040  000966  162E               	andwf	??_Lcd_Cmd,f,c
  1041  000968  462E               	rlncf	??_Lcd_Cmd,f,c
  1042  00096A  462E               	rlncf	??_Lcd_Cmd,f,c
  1043  00096C  5083               	movf	3971,w,c	;volatile
  1044  00096E  182E               	xorwf	??_Lcd_Cmd,w,c
  1045  000970  0BFB               	andlw	-5
  1046  000972  182E               	xorwf	??_Lcd_Cmd,w,c
  1047  000974  6E83               	movwf	3971,c	;volatile
  1048                           
  1049                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  1050  000976  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1051  00097A  0E05               	movlw	5
  1052  00097C  6E2F               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1053  00097E                     u55:
  1054  00097E  90D8               	bcf	status,0,c
  1055  000980  322E               	rrcf	??_Lcd_Cmd,f,c
  1056  000982  2E2F               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1057  000984  D7FC               	goto	u55
  1058  000986  0E01               	movlw	1
  1059  000988  162E               	andwf	??_Lcd_Cmd,f,c
  1060  00098A  462E               	rlncf	??_Lcd_Cmd,f,c
  1061  00098C  5083               	movf	3971,w,c	;volatile
  1062  00098E  182E               	xorwf	??_Lcd_Cmd,w,c
  1063  000990  0BFD               	andlw	-3
  1064  000992  182E               	xorwf	??_Lcd_Cmd,w,c
  1065  000994  6E83               	movwf	3971,c	;volatile
  1066  000996  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1067  00099A  3A2E               	swapf	??_Lcd_Cmd,f,c
  1068  00099C  0E0F               	movlw	15
  1069  00099E  162E               	andwf	??_Lcd_Cmd,f,c
  1070  0009A0  0E01               	movlw	1
  1071  0009A2  162E               	andwf	??_Lcd_Cmd,f,c
  1072  0009A4  5083               	movf	3971,w,c	;volatile
  1073  0009A6  182E               	xorwf	??_Lcd_Cmd,w,c
  1074  0009A8  0BFE               	andlw	-2
  1075  0009AA  182E               	xorwf	??_Lcd_Cmd,w,c
  1076  0009AC  6E83               	movwf	3971,c	;volatile
  1077                           
  1078                           ;./flex_lcd.h: 154: _delay(10);
  1079  0009AE  0E03               	movlw	3
  1080  0009B0                     u507:
  1081  0009B0  2EE8               	decfsz	wreg,f,c
  1082  0009B2  D7FE               	bra	u507
  1083  0009B4  F000               	nop	
  1084                           
  1085                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  1086  0009B6  8A83               	bsf	3971,5,c	;volatile
  1087  0009B8  0E05               	movlw	5
  1088  0009BA                     u517:
  1089  0009BA  2EE8               	decfsz	wreg,f,c
  1090  0009BC  D7FE               	bra	u517
  1091  0009BE  9A83               	bcf	3971,5,c	;volatile
  1092                           
  1093                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  1094  0009C0  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1095  0009C4  90D8               	bcf	status,0,c
  1096  0009C6  322E               	rrcf	??_Lcd_Cmd,f,c
  1097  0009C8  90D8               	bcf	status,0,c
  1098  0009CA  322E               	rrcf	??_Lcd_Cmd,f,c
  1099  0009CC  90D8               	bcf	status,0,c
  1100  0009CE  322E               	rrcf	??_Lcd_Cmd,f,c
  1101  0009D0  0E01               	movlw	1
  1102  0009D2  162E               	andwf	??_Lcd_Cmd,f,c
  1103  0009D4  462E               	rlncf	??_Lcd_Cmd,f,c
  1104  0009D6  462E               	rlncf	??_Lcd_Cmd,f,c
  1105  0009D8  462E               	rlncf	??_Lcd_Cmd,f,c
  1106  0009DA  5083               	movf	3971,w,c	;volatile
  1107  0009DC  182E               	xorwf	??_Lcd_Cmd,w,c
  1108  0009DE  0BF7               	andlw	-9
  1109  0009E0  182E               	xorwf	??_Lcd_Cmd,w,c
  1110  0009E2  6E83               	movwf	3971,c	;volatile
  1111  0009E4  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1112  0009E8  90D8               	bcf	status,0,c
  1113  0009EA  322E               	rrcf	??_Lcd_Cmd,f,c
  1114  0009EC  90D8               	bcf	status,0,c
  1115  0009EE  322E               	rrcf	??_Lcd_Cmd,f,c
  1116  0009F0  0E01               	movlw	1
  1117  0009F2  162E               	andwf	??_Lcd_Cmd,f,c
  1118  0009F4  462E               	rlncf	??_Lcd_Cmd,f,c
  1119  0009F6  462E               	rlncf	??_Lcd_Cmd,f,c
  1120  0009F8  5083               	movf	3971,w,c	;volatile
  1121  0009FA  182E               	xorwf	??_Lcd_Cmd,w,c
  1122  0009FC  0BFB               	andlw	-5
  1123  0009FE  182E               	xorwf	??_Lcd_Cmd,w,c
  1124  000A00  6E83               	movwf	3971,c	;volatile
  1125                           
  1126                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  1127  000A02  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1128  000A06  90D8               	bcf	status,0,c
  1129  000A08  322E               	rrcf	??_Lcd_Cmd,f,c
  1130  000A0A  0E01               	movlw	1
  1131  000A0C  162E               	andwf	??_Lcd_Cmd,f,c
  1132  000A0E  462E               	rlncf	??_Lcd_Cmd,f,c
  1133  000A10  5083               	movf	3971,w,c	;volatile
  1134  000A12  182E               	xorwf	??_Lcd_Cmd,w,c
  1135  000A14  0BFD               	andlw	-3
  1136  000A16  182E               	xorwf	??_Lcd_Cmd,w,c
  1137  000A18  6E83               	movwf	3971,c	;volatile
  1138  000A1A  C030  F02E         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1139  000A1E  0E01               	movlw	1
  1140  000A20  162E               	andwf	??_Lcd_Cmd,f,c
  1141  000A22  5083               	movf	3971,w,c	;volatile
  1142  000A24  182E               	xorwf	??_Lcd_Cmd,w,c
  1143  000A26  0BFE               	andlw	-2
  1144  000A28  182E               	xorwf	??_Lcd_Cmd,w,c
  1145  000A2A  6E83               	movwf	3971,c	;volatile
  1146                           
  1147                           ;./flex_lcd.h: 158: _delay(10);
  1148  000A2C  0E03               	movlw	3
  1149  000A2E                     u527:
  1150  000A2E  2EE8               	decfsz	wreg,f,c
  1151  000A30  D7FE               	bra	u527
  1152  000A32  F000               	nop	
  1153                           
  1154                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  1155  000A34  8A83               	bsf	3971,5,c	;volatile
  1156  000A36  0E05               	movlw	5
  1157  000A38                     u537:
  1158  000A38  2EE8               	decfsz	wreg,f,c
  1159  000A3A  D7FE               	bra	u537
  1160  000A3C  9A83               	bcf	3971,5,c	;volatile
  1161                           
  1162                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  1163  000A3E  0E16               	movlw	22
  1164  000A40  6E2E               	movwf	??_Lcd_Cmd& (0+255),c
  1165  000A42  0E6C               	movlw	108
  1166  000A44                     u547:
  1167  000A44  2EE8               	decfsz	wreg,f,c
  1168  000A46  D7FE               	bra	u547
  1169  000A48  2E2E               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1170  000A4A  D7FC               	bra	u547
  1171  000A4C  D000               	nop2	
  1172  000A4E  0012               	return		;funcret
  1173  000A50                     __end_of_Lcd_Cmd:
  1174                           	opt callstack 0
  1175                           
  1176 ;; *************** function _I2C_Master_Init *****************
  1177 ;; Defined at:
  1178 ;;		line 4 in file "./I2C_Master.h"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  c               4   18[COMRAM] const unsigned long 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         4       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:        8 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    4
  1199 ;; This function calls:
  1200 ;;		___lldiv
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text5
  1207  000DA0                     __ptext5:
  1208                           	opt callstack 0
  1209  000DA0                     _I2C_Master_Init:
  1210                           	opt callstack 26
  1211                           
  1212                           ;./I2C_Master.h: 5:     SSPCON1 = 0b00101000;
  1213                           
  1214                           ;incstack = 0
  1215  000DA0  0E28               	movlw	40
  1216  000DA2  6EC6               	movwf	4038,c	;volatile
  1217                           
  1218                           ;./I2C_Master.h: 6:     SSPCON2 = 0;
  1219  000DA4  0E00               	movlw	0
  1220  000DA6  6EC5               	movwf	4037,c	;volatile
  1221                           
  1222                           ;./I2C_Master.h: 7:     SSPADD = (12000000/(4*c))-1;
  1223  000DA8  0E00               	movlw	0
  1224  000DAA  6E2E               	movwf	___lldiv@dividend,c
  1225  000DAC  0E1B               	movlw	27
  1226  000DAE  6E2F               	movwf	___lldiv@dividend+1,c
  1227  000DB0  0EB7               	movlw	183
  1228  000DB2  6E30               	movwf	___lldiv@dividend+2,c
  1229  000DB4  0E00               	movlw	0
  1230  000DB6  6E31               	movwf	___lldiv@dividend+3,c
  1231  000DB8  C03B  F03F         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  1232  000DBC  C03C  F040         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  1233  000DC0  C03D  F041         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  1234  000DC4  C03E  F042         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  1235  000DC8  0E02               	movlw	2
  1236  000DCA                     u265:
  1237  000DCA  90D8               	bcf	status,0,c
  1238  000DCC  363F               	rlcf	??_I2C_Master_Init,f,c
  1239  000DCE  3640               	rlcf	??_I2C_Master_Init+1,f,c
  1240  000DD0  3641               	rlcf	??_I2C_Master_Init+2,f,c
  1241  000DD2  3642               	rlcf	??_I2C_Master_Init+3,f,c
  1242  000DD4  2EE8               	decfsz	wreg,f,c
  1243  000DD6  D7F9               	goto	u265
  1244  000DD8  C03F  F032         	movff	??_I2C_Master_Init,___lldiv@divisor
  1245  000DDC  C040  F033         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1246  000DE0  C041  F034         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1247  000DE4  C042  F035         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1248  000DE8  EC19  F006         	call	___lldiv	;wreg free
  1249  000DEC  042E               	decf	?___lldiv,w,c
  1250  000DEE  6EC8               	movwf	4040,c	;volatile
  1251                           
  1252                           ;./I2C_Master.h: 8:     SSPSTAT = 0;
  1253  000DF0  0E00               	movlw	0
  1254  000DF2  6EC7               	movwf	4039,c	;volatile
  1255                           
  1256                           ;./I2C_Master.h: 9:     TRISBbits.TRISB1 = 1;
  1257  000DF4  8293               	bsf	3987,1,c	;volatile
  1258                           
  1259                           ;./I2C_Master.h: 10:     TRISBbits.TRISB0 = 1;
  1260  000DF6  8093               	bsf	3987,0,c	;volatile
  1261  000DF8  0012               	return		;funcret
  1262  000DFA                     __end_of_I2C_Master_Init:
  1263                           	opt callstack 0
  1264                           
  1265 ;; *************** function ___lldiv *****************
  1266 ;; Defined at:
  1267 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  dividend        4    5[COMRAM] unsigned long 
  1270 ;;  divisor         4    9[COMRAM] unsigned long 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  quotient        4   13[COMRAM] unsigned long 
  1273 ;;  counter         1   17[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  4    5[COMRAM] unsigned long 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         8       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1286 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:       13 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    3
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_I2C_Master_Init
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text6
  1298  000C32                     __ptext6:
  1299                           	opt callstack 0
  1300  000C32                     ___lldiv:
  1301                           	opt callstack 26
  1302                           
  1303                           ;incstack = 0
  1304  000C32  0E00               	movlw	0
  1305  000C34  6E36               	movwf	___lldiv@quotient,c
  1306  000C36  0E00               	movlw	0
  1307  000C38  6E37               	movwf	___lldiv@quotient+1,c
  1308  000C3A  0E00               	movlw	0
  1309  000C3C  6E38               	movwf	___lldiv@quotient+2,c
  1310  000C3E  0E00               	movlw	0
  1311  000C40  6E39               	movwf	___lldiv@quotient+3,c
  1312  000C42  5032               	movf	___lldiv@divisor,w,c
  1313  000C44  1033               	iorwf	___lldiv@divisor+1,w,c
  1314  000C46  1034               	iorwf	___lldiv@divisor+2,w,c
  1315  000C48  1035               	iorwf	___lldiv@divisor+3,w,c
  1316  000C4A  B4D8               	btfsc	status,2,c
  1317  000C4C  D02A               	goto	l175
  1318  000C4E  0E01               	movlw	1
  1319  000C50  6E3A               	movwf	___lldiv@counter,c
  1320  000C52  D006               	goto	l1125
  1321  000C54                     l1123:
  1322  000C54  90D8               	bcf	status,0,c
  1323  000C56  3632               	rlcf	___lldiv@divisor,f,c
  1324  000C58  3633               	rlcf	___lldiv@divisor+1,f,c
  1325  000C5A  3634               	rlcf	___lldiv@divisor+2,f,c
  1326  000C5C  3635               	rlcf	___lldiv@divisor+3,f,c
  1327  000C5E  2A3A               	incf	___lldiv@counter,f,c
  1328  000C60                     l1125:
  1329  000C60  AE35               	btfss	___lldiv@divisor+3,7,c
  1330  000C62  D7F8               	goto	l1123
  1331  000C64                     u240:
  1332  000C64  90D8               	bcf	status,0,c
  1333  000C66  3636               	rlcf	___lldiv@quotient,f,c
  1334  000C68  3637               	rlcf	___lldiv@quotient+1,f,c
  1335  000C6A  3638               	rlcf	___lldiv@quotient+2,f,c
  1336  000C6C  3639               	rlcf	___lldiv@quotient+3,f,c
  1337  000C6E  5032               	movf	___lldiv@divisor,w,c
  1338  000C70  5C2E               	subwf	___lldiv@dividend,w,c
  1339  000C72  5033               	movf	___lldiv@divisor+1,w,c
  1340  000C74  582F               	subwfb	___lldiv@dividend+1,w,c
  1341  000C76  5034               	movf	___lldiv@divisor+2,w,c
  1342  000C78  5830               	subwfb	___lldiv@dividend+2,w,c
  1343  000C7A  5035               	movf	___lldiv@divisor+3,w,c
  1344  000C7C  5831               	subwfb	___lldiv@dividend+3,w,c
  1345  000C7E  A0D8               	btfss	status,0,c
  1346  000C80  D009               	goto	l1135
  1347  000C82  5032               	movf	___lldiv@divisor,w,c
  1348  000C84  5E2E               	subwf	___lldiv@dividend,f,c
  1349  000C86  5033               	movf	___lldiv@divisor+1,w,c
  1350  000C88  5A2F               	subwfb	___lldiv@dividend+1,f,c
  1351  000C8A  5034               	movf	___lldiv@divisor+2,w,c
  1352  000C8C  5A30               	subwfb	___lldiv@dividend+2,f,c
  1353  000C8E  5035               	movf	___lldiv@divisor+3,w,c
  1354  000C90  5A31               	subwfb	___lldiv@dividend+3,f,c
  1355  000C92  8036               	bsf	___lldiv@quotient,0,c
  1356  000C94                     l1135:
  1357  000C94  90D8               	bcf	status,0,c
  1358  000C96  3235               	rrcf	___lldiv@divisor+3,f,c
  1359  000C98  3234               	rrcf	___lldiv@divisor+2,f,c
  1360  000C9A  3233               	rrcf	___lldiv@divisor+1,f,c
  1361  000C9C  3232               	rrcf	___lldiv@divisor,f,c
  1362  000C9E  2E3A               	decfsz	___lldiv@counter,f,c
  1363  000CA0  D7E1               	goto	u240
  1364  000CA2                     l175:
  1365  000CA2  C036  F02E         	movff	___lldiv@quotient,?___lldiv
  1366  000CA6  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
  1367  000CAA  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
  1368  000CAE  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
  1369  000CB2  0012               	return		;funcret
  1370  000CB4                     __end_of___lldiv:
  1371                           	opt callstack 0
  1372                           
  1373 ;; *************** function _interru *****************
  1374 ;; Defined at:
  1375 ;;		line 40 in file "I2C_Master.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1392 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    2
  1396 ;; This function calls:
  1397 ;;		_I2C_Master_Start
  1398 ;;		_I2C_Master_Stop
  1399 ;;		_I2C_Master_Write
  1400 ;; This function is called by:
  1401 ;;		Interrupt level 2
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	intcode
  1406  000008                     __pintcode:
  1407                           	opt callstack 0
  1408  000008                     _interru:
  1409                           	opt callstack 26
  1410                           
  1411                           ;incstack = 0
  1412  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1413  00000A  EDB1  F005         	call	int_func,f	;refresh shadow registers
  1414                           
  1415                           	psect	intcode_body
  1416  000B62                     __pintcode_body:
  1417                           	opt callstack 26
  1418  000B62                     int_func:
  1419                           	opt callstack 26
  1420  000B62  0006               	pop		; remove dummy address from shadow register refresh
  1421                           
  1422                           ;I2C_Master.c: 41:     if(INT2F==1){
  1423  000B64  A2F0               	btfss	4080,1,c	;volatile
  1424  000B66  D063               	goto	i2l145
  1425                           
  1426                           ;I2C_Master.c: 42:         if(contador==0){
  1427  000B68  5027               	movf	_contador,w,c
  1428  000B6A  1028               	iorwf	_contador+1,w,c
  1429  000B6C  A4D8               	btfss	status,2,c
  1430  000B6E  D01E               	goto	i2l1229
  1431                           
  1432                           ;I2C_Master.c: 43:             I2C_Master_Start();
  1433  000B70  EC1C  F007         	call	_I2C_Master_Start	;wreg free
  1434                           
  1435                           ;I2C_Master.c: 44:             I2C_Master_Write(0x00);
  1436  000B74  0E00               	movlw	0
  1437  000B76  6E2B               	movwf	I2C_Master_Write@d+1,c
  1438  000B78  0E00               	movlw	0
  1439  000B7A  6E2A               	movwf	I2C_Master_Write@d,c
  1440  000B7C  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1441                           
  1442                           ;I2C_Master.c: 45:             I2C_Master_Write(0x01);
  1443  000B80  0E00               	movlw	0
  1444  000B82  6E2B               	movwf	I2C_Master_Write@d+1,c
  1445  000B84  0E01               	movlw	1
  1446  000B86  6E2A               	movwf	I2C_Master_Write@d,c
  1447  000B88  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1448                           
  1449                           ;I2C_Master.c: 46:             I2C_Master_Stop();
  1450  000B8C  EC18  F007         	call	_I2C_Master_Stop	;wreg free
  1451  000B90                     i2l1225:
  1452                           
  1453                           ;I2C_Master.c: 47:             _delay((unsigned long)((200)*(12000000/4000.0)));
  1454  000B90  0E04               	movlw	4
  1455  000B92  6E2D               	movwf	(??_interru+1)& (0+255),c
  1456  000B94  0E0C               	movlw	12
  1457  000B96  6E2C               	movwf	??_interru& (0+255),c
  1458  000B98  0E34               	movlw	52
  1459  000B9A                     i2u55_47:
  1460  000B9A  2EE8               	decfsz	wreg,f,c
  1461  000B9C  D7FE               	bra	i2u55_47
  1462  000B9E  2E2C               	decfsz	??_interru& (0+255),f,c
  1463  000BA0  D7FC               	bra	i2u55_47
  1464  000BA2  2E2D               	decfsz	(??_interru+1)& (0+255),f,c
  1465  000BA4  D7FA               	bra	i2u55_47
  1466                           
  1467                           ;I2C_Master.c: 48:             contador++;
  1468  000BA6  4A27               	infsnz	_contador,f,c
  1469  000BA8  2A28               	incf	_contador+1,f,c
  1470                           
  1471                           ;I2C_Master.c: 49:         }
  1472  000BAA  D040               	goto	i2l142
  1473  000BAC                     i2l1229:
  1474  000BAC  0427               	decf	_contador,w,c
  1475  000BAE  1028               	iorwf	_contador+1,w,c
  1476  000BB0  A4D8               	btfss	status,2,c
  1477  000BB2  D011               	goto	i2l1237
  1478                           
  1479                           ;I2C_Master.c: 51:             I2C_Master_Start();
  1480  000BB4  EC1C  F007         	call	_I2C_Master_Start	;wreg free
  1481                           
  1482                           ;I2C_Master.c: 52:             I2C_Master_Write(0x00);
  1483  000BB8  0E00               	movlw	0
  1484  000BBA  6E2B               	movwf	I2C_Master_Write@d+1,c
  1485  000BBC  0E00               	movlw	0
  1486  000BBE  6E2A               	movwf	I2C_Master_Write@d,c
  1487  000BC0  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1488                           
  1489                           ;I2C_Master.c: 53:             I2C_Master_Write(0x02);
  1490  000BC4  0E00               	movlw	0
  1491  000BC6  6E2B               	movwf	I2C_Master_Write@d+1,c
  1492  000BC8  0E02               	movlw	2
  1493  000BCA  6E2A               	movwf	I2C_Master_Write@d,c
  1494  000BCC  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1495                           
  1496                           ;I2C_Master.c: 54:             I2C_Master_Stop();
  1497  000BD0  EC18  F007         	call	_I2C_Master_Stop	;wreg free
  1498  000BD4  D7DD               	goto	i2l1225
  1499  000BD6                     i2l1237:
  1500  000BD6  0E02               	movlw	2
  1501  000BD8  1827               	xorwf	_contador,w,c
  1502  000BDA  1028               	iorwf	_contador+1,w,c
  1503  000BDC  A4D8               	btfss	status,2,c
  1504  000BDE  D026               	goto	i2l142
  1505                           
  1506                           ;I2C_Master.c: 59:             I2C_Master_Start();
  1507  000BE0  EC1C  F007         	call	_I2C_Master_Start	;wreg free
  1508                           
  1509                           ;I2C_Master.c: 60:             I2C_Master_Write(0x00);
  1510  000BE4  0E00               	movlw	0
  1511  000BE6  6E2B               	movwf	I2C_Master_Write@d+1,c
  1512  000BE8  0E00               	movlw	0
  1513  000BEA  6E2A               	movwf	I2C_Master_Write@d,c
  1514  000BEC  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1515                           
  1516                           ;I2C_Master.c: 61:             I2C_Master_Write(0x03);
  1517  000BF0  0E00               	movlw	0
  1518  000BF2  6E2B               	movwf	I2C_Master_Write@d+1,c
  1519  000BF4  0E03               	movlw	3
  1520  000BF6  6E2A               	movwf	I2C_Master_Write@d,c
  1521  000BF8  EC13  F007         	call	_I2C_Master_Write	;wreg free
  1522                           
  1523                           ;I2C_Master.c: 62:             I2C_Master_Stop();
  1524  000BFC  EC18  F007         	call	_I2C_Master_Stop	;wreg free
  1525                           
  1526                           ;I2C_Master.c: 63:             _delay((unsigned long)((200)*(12000000/4000.0)));
  1527  000C00  0E04               	movlw	4
  1528  000C02  6E2D               	movwf	(??_interru+1)& (0+255),c
  1529  000C04  0E0C               	movlw	12
  1530  000C06  6E2C               	movwf	??_interru& (0+255),c
  1531  000C08  0E34               	movlw	52
  1532  000C0A                     i2u56_47:
  1533  000C0A  2EE8               	decfsz	wreg,f,c
  1534  000C0C  D7FE               	bra	i2u56_47
  1535  000C0E  2E2C               	decfsz	??_interru& (0+255),f,c
  1536  000C10  D7FC               	bra	i2u56_47
  1537  000C12  2E2D               	decfsz	(??_interru+1)& (0+255),f,c
  1538  000C14  D7FA               	bra	i2u56_47
  1539                           
  1540                           ;I2C_Master.c: 64:             contador++;
  1541  000C16  4A27               	infsnz	_contador,f,c
  1542  000C18  2A28               	incf	_contador+1,f,c
  1543                           
  1544                           ;I2C_Master.c: 65:             if(contador==3){
  1545  000C1A  0E03               	movlw	3
  1546  000C1C  1827               	xorwf	_contador,w,c
  1547  000C1E  1028               	iorwf	_contador+1,w,c
  1548  000C20  A4D8               	btfss	status,2,c
  1549  000C22  D004               	goto	i2l142
  1550                           
  1551                           ;I2C_Master.c: 66:                 contador=0;
  1552  000C24  0E00               	movlw	0
  1553  000C26  6E28               	movwf	_contador+1,c
  1554  000C28  0E00               	movlw	0
  1555  000C2A  6E27               	movwf	_contador,c
  1556  000C2C                     i2l142:
  1557                           
  1558                           ;I2C_Master.c: 69:         INT2F=0;
  1559  000C2C  92F0               	bcf	4080,1,c	;volatile
  1560  000C2E                     i2l145:
  1561  000C2E  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1562  000C30  0011               	retfie		f
  1563  000C32                     __end_of_interru:
  1564                           	opt callstack 0
  1565                           
  1566 ;; *************** function _I2C_Master_Write *****************
  1567 ;; Defined at:
  1568 ;;		line 35 in file "./I2C_Master.h"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  d               2    1[COMRAM] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         2       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1585 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        2 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		_I2C_Master_Wait
  1591 ;; This function is called by:
  1592 ;;		_interru
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text8
  1597  000E26                     __ptext8:
  1598                           	opt callstack 0
  1599  000E26                     _I2C_Master_Write:
  1600                           	opt callstack 26
  1601                           
  1602                           ;./I2C_Master.h: 35: void I2C_Master_Write(unsigned d);./I2C_Master.h: 36: {;./I2C_Maste
      +                          r.h: 37:     I2C_Master_Wait();
  1603                           
  1604                           ;incstack = 0
  1605  000E26  EC0A  F007         	call	_I2C_Master_Wait	;wreg free
  1606                           
  1607                           ;./I2C_Master.h: 38:     SSPBUF = d;
  1608  000E2A  C02A  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1609  000E2E  0012               	return		;funcret
  1610  000E30                     __end_of_I2C_Master_Write:
  1611                           	opt callstack 0
  1612                           
  1613 ;; *************** function _I2C_Master_Stop *****************
  1614 ;; Defined at:
  1615 ;;		line 29 in file "./I2C_Master.h"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		_I2C_Master_Wait
  1638 ;; This function is called by:
  1639 ;;		_interru
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text9
  1644  000E30                     __ptext9:
  1645                           	opt callstack 0
  1646  000E30                     _I2C_Master_Stop:
  1647                           	opt callstack 26
  1648                           
  1649                           ;./I2C_Master.h: 31:     I2C_Master_Wait();
  1650                           
  1651                           ;incstack = 0
  1652  000E30  EC0A  F007         	call	_I2C_Master_Wait	;wreg free
  1653                           
  1654                           ;./I2C_Master.h: 32:     PEN = 1;
  1655  000E34  84C5               	bsf	4037,2,c	;volatile
  1656  000E36  0012               	return		;funcret
  1657  000E38                     __end_of_I2C_Master_Stop:
  1658                           	opt callstack 0
  1659                           
  1660 ;; *************** function _I2C_Master_Start *****************
  1661 ;; Defined at:
  1662 ;;		line 17 in file "./I2C_Master.h"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    1
  1683 ;; This function calls:
  1684 ;;		_I2C_Master_Wait
  1685 ;; This function is called by:
  1686 ;;		_interru
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text10
  1691  000E38                     __ptext10:
  1692                           	opt callstack 0
  1693  000E38                     _I2C_Master_Start:
  1694                           	opt callstack 26
  1695                           
  1696                           ;./I2C_Master.h: 19:     I2C_Master_Wait();
  1697                           
  1698                           ;incstack = 0
  1699  000E38  EC0A  F007         	call	_I2C_Master_Wait	;wreg free
  1700                           
  1701                           ;./I2C_Master.h: 20:     SEN = 1;
  1702  000E3C  80C5               	bsf	4037,0,c	;volatile
  1703  000E3E  0012               	return		;funcret
  1704  000E40                     __end_of_I2C_Master_Start:
  1705                           	opt callstack 0
  1706                           
  1707 ;; *************** function _I2C_Master_Wait *****************
  1708 ;; Defined at:
  1709 ;;		line 12 in file "./I2C_Master.h"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_I2C_Master_Start
  1733 ;;		_I2C_Master_Stop
  1734 ;;		_I2C_Master_Write
  1735 ;;		_I2C_Master_RepeatedStart
  1736 ;;		_I2C_Master_Read
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text11
  1741  000E14                     __ptext11:
  1742                           	opt callstack 0
  1743  000E14                     _I2C_Master_Wait:
  1744                           	opt callstack 26
  1745                           
  1746                           ;./I2C_Master.h: 14:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1747                           
  1748                           ;incstack = 0
  1749  000E14  B4C7               	btfsc	4039,2,c	;volatile
  1750  000E16  D7FE               	goto	_I2C_Master_Wait
  1751  000E18  CFC5 F029          	movff	4037,??_I2C_Master_Wait	;volatile
  1752  000E1C  0E1F               	movlw	31
  1753  000E1E  1629               	andwf	??_I2C_Master_Wait,f,c
  1754  000E20  B4D8               	btfsc	status,2,c
  1755  000E22  0012               	return	
  1756  000E24  D7F7               	goto	_I2C_Master_Wait
  1757  000E26                     __end_of_I2C_Master_Wait:
  1758                           	opt callstack 0
  1759                           
  1760                           	psect	rparam
  1761  0000                     
  1762                           	psect	temp
  1763  000045                     btemp:
  1764                           	opt callstack 0
  1765  000045                     	ds	1
  1766  0000                     int$flags	set	btemp
  1767  0000                     wtemp8	set	btemp+1
  1768  0000                     ttemp5	set	btemp+1
  1769  0000                     ttemp6	set	btemp+4
  1770  0000                     ttemp7	set	btemp+8
  1771                           tosu	equ	0xFFF
  1772                           tosh	equ	0xFFE
  1773                           tosl	equ	0xFFD
  1774                           stkptr	equ	0xFFC
  1775                           pclatu	equ	0xFFB
  1776                           pclath	equ	0xFFA
  1777                           pcl	equ	0xFF9
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           prodh	equ	0xFF4
  1783                           prodl	equ	0xFF3
  1784                           indf0	equ	0xFEF
  1785                           postinc0	equ	0xFEE
  1786                           postdec0	equ	0xFED
  1787                           preinc0	equ	0xFEC
  1788                           plusw0	equ	0xFEB
  1789                           fsr0h	equ	0xFEA
  1790                           fsr0l	equ	0xFE9
  1791                           wreg	equ	0xFE8
  1792                           indf1	equ	0xFE7
  1793                           postinc1	equ	0xFE6
  1794                           postdec1	equ	0xFE5
  1795                           preinc1	equ	0xFE4
  1796                           plusw1	equ	0xFE3
  1797                           fsr1h	equ	0xFE2
  1798                           fsr1l	equ	0xFE1
  1799                           bsr	equ	0xFE0
  1800                           indf2	equ	0xFDF
  1801                           postinc2	equ	0xFDE
  1802                           postdec2	equ	0xFDD
  1803                           preinc2	equ	0xFDC
  1804                           plusw2	equ	0xFDB
  1805                           fsr2h	equ	0xFDA
  1806                           fsr2l	equ	0xFD9
  1807                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_I2C_Master_Init
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _interru in COMRAM

    _interru->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _interru in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interru in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interru in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interru in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interru in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interru in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interru in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interru in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1315
                                             26 COMRAM     2     2      0
                    _I2C_Master_Init
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     573
                                              8 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interru                                              2     2      0     478
                                              3 COMRAM     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 _interru (ROOT)
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      20        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 01 17:49:18 2019

                       l83 0ACC                         u35 0940                         u45 095C  
                       u55 097E                         u65 081C                         u75 0838  
                       u85 085A                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l175 0CA2               __CFG_CPB$OFF 000000                        u240 0C64  
                      u407 0A6E                        _PEN 007E2A                        u265 0DCA  
                      u417 0A7E                        u337 0D08               __CFG_CPD$OFF 000000  
                      u507 09B0                        u427 0A8E                        u347 088C  
                      u517 09BA                        u437 0A9E                        u357 0896  
                      u527 0A2E                        u447 0AAE                        u367 090A  
                      u537 0A38                        u457 0ABE                        u377 0914  
                      u547 0A44                        u467 0AE6                        u387 091C  
                      _SEN 007E28                        u477 0AFC                        u397 0926  
                      u487 0B28                        u497 0B3E               __CFG_BOR$OFF 000000  
                      wreg 000FE8               __CFG_FOSC$HS 000000               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1123 0C54                       l1125 0C60  
                     l1135 0C94                       l1161 0D40                       l1217 0D16  
                     l1155 0D2E                       l1173 0D8C                       l1157 0D34  
                     l1165 0D48                       l1159 0D3A                       l1167 0D70  
                     l1169 0D78                       STR_1 0801                       _LATC 000F8B  
                     _RCEN 007E2B                       _RSEN 007E29               __CFG_PWRT$ON 000000  
                     _main 0CB4                       btemp 0045                       start 000E  
            __CFG_IESO$OFF 000000            __end_of_Lcd_Cmd 0A50            __end_of_Lcd_Out 0DA0  
            __CFG_MCLRE$ON 000000               ___param_bank 000000                 _Lcd_Chr_CP 080E  
         ?_I2C_Master_Init 003B              __CFG_PLLDIV$1 000000           ?_I2C_Master_Wait 0029  
         ?_I2C_Master_Stop 0029                      ?_main 0029                      _ACKEN 007E2C  
                    _ACKDT 007E2D            __end_of___lldiv 0CB4                      _INT2F 007F81  
                    i2l142 0C2C                      i2l145 0C2E              __CFG_USBDIV$1 000000  
                    _TRISC 000F94              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _valor 0023  
          __end_of_interru 0C32                      tablat 000FF5                      ttemp5 0046  
                    ttemp6 0049                      ttemp7 004D                      status 000FD8  
                    wtemp8 0046             __CFG_ICPRT$OFF 000000           __end_of_Lcd_Init 0B62  
          __initialization 0DFA               __end_of_main 0D2A                     ??_main 0043  
            __activetblptr 000002          ?_I2C_Master_Start 0029          ?_I2C_Master_Write 002A  
          __CFG_CCP2MX$OFF 000000         ??_I2C_Master_Start 002A                     _ADCON1 000FC1  
       ??_I2C_Master_Write 002C                     _INT2IE 007F84                     _INT2IF 007F81  
                   i2l1225 0B90                     i2l1237 0BD6                     i2l1229 0BAC  
                ??_Lcd_Cmd 002E                  ??_Lcd_Out 0034                     _SSPADD 000FC8  
                   _SSPBUF 000FC9             __CFG_XINST$OFF 000000                ?_Lcd_Chr_CP 0029  
           __CFG_STVREN$ON 000000                  ??___lldiv 0036                     clear_0 0E00  
                ??_interru 002C               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization 0E06            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
           __pcstackCOMRAM 0029                  ?_Lcd_Init 0029            __CFG_LPT1OSC$ON 000000  
      __size_of_Lcd_Chr_CP 0124                    _INTEDG2 007F8C                    i2u55_47 0B9A  
                  i2u56_47 0C0A                 ??_Lcd_Init 0031                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7            __CFG_VREGEN$OFF 000000  
                  _Lcd_Cmd 0932                    _Lcd_Out 0D2A                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 0C32               __psmallconst 0800  
                  __pcinit 0DFA                    __ramtop 0800                    __ptext0 0CB4  
                  __ptext1 0D2A                    __ptext2 080E                    __ptext3 0A50  
                  __ptext4 0932                    __ptext5 0DA0                    __ptext6 0C32  
                  __ptext8 0E26                    __ptext9 0E30                    _palabra 0012  
                  _interru 0008   __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Wait 0012  
 __size_of_I2C_Master_Stop 0008             __pintcode_body 0B62       end_of_initialization 0E06  
            __Lmediumconst 0000                    int_func 0B62  __size_of_I2C_Master_Start 0008  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0032            ___lldiv@counter 003A  
             ??_Lcd_Chr_CP 002E           I2C_Master_Init@c 003B                    postinc0 000FEE  
                _PORTAbits 000F80                  _PORTBbits 000F81                  _PORTDbits 000F83  
                _TRISAbits 000F92                  _TRISBbits 000F93                  _TRISDbits 000F95  
       __end_of_Lcd_Chr_CP 0932        start_initialization 0DFA              Lcd_Out@buffer 0032  
        __size_of_Lcd_Init 0112          ??_I2C_Master_Init 003F          ??_I2C_Master_Wait 0029  
        ??_I2C_Master_Stop 002A                __pbssCOMRAM 0001                   ?_Lcd_Cmd 0029  
                 ?_Lcd_Out 0031           _I2C_Master_Start 0E38           _I2C_Master_Write 0E26  
                __pintcode 0008                   ?___lldiv 002E                __smallconst 0800  
                 ?_interru 0029                   Lcd_Out@x 0031           __CFG_WDTPS$32768 000000  
                 Lcd_Out@y 0036               Lcd_Init@data 0032                   _Lcd_Init 0A50  
                 _Palabra1 0001           __size_of_Lcd_Cmd 011E           __size_of_Lcd_Out 0076  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___lldiv 0082  
          _I2C_Master_Init 0DA0            _I2C_Master_Wait 0E14            _I2C_Master_Stop 0E30  
           Lcd_Chr_CP@data 0030           __size_of_interru 0C2A                   __ptext10 0E38  
                 __ptext11 0E14                   _contador 0027                Lcd_Cmd@data 0030  
            __size_of_main 0076                   int$flags 0045      __CFG_CPUDIV$OSC1_PLL2 000000  
 __end_of_I2C_Master_Start 0E40                Lcd_Out@data 0037   __end_of_I2C_Master_Write 0E30  
               _INTCONbits 000FF2                   intlevel2 0000           ___lldiv@dividend 002E  
  __end_of_I2C_Master_Init 0DFA    __end_of_I2C_Master_Wait 0E26    __end_of_I2C_Master_Stop 0E38  
         ___lldiv@quotient 0036          I2C_Master_Write@d 002A  
