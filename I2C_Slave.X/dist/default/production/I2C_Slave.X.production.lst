

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 00:18:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _TMR0	set	4054
    96  0000                     _ADRES	set	4035
    97  0000                     _SSPSTATbits	set	4039
    98  0000                     _SSPBUF	set	4041
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _LATCbits	set	3979
   101  0000                     _TRISCbits	set	3988
   102  0000                     _LATD	set	3980
   103  0000                     _INTCON3bits	set	4080
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _RCONbits	set	4048
   106  0000                     _T0CONbits	set	4053
   107  0000                     _INTCONbits	set	4082
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _LATA	set	3977
   110  0000                     _TRISA	set	3986
   111  0000                     _ADCON2bits	set	4032
   112  0000                     _ADCON1bits	set	4033
   113  0000                     _TRISBbits	set	3987
   114  0000                     _SSPCON2	set	4037
   115  0000                     _SSPCON1	set	4038
   116  0000                     _SSPADD	set	4040
   117  0000                     _SSPSTAT	set	4039
   118  0000                     _PORTDbits	set	3971
   119  0000                     _TRISDbits	set	3989
   120  0000                     _SSPM3	set	32307
   121  0000                     _BF	set	32312
   122  0000                     _SSPIE	set	31979
   123  0000                     _SSPIF	set	31987
   124  0000                     _PEIE	set	32662
   125  0000                     _GIE	set	32663
   126                           
   127                           	psect	smallconst
   128  000800                     __psmallconst:
   129                           	opt callstack 0
   130  000800  00                 	db	0
   131  000801                     STR_4:
   132  000801  53                 	db	83	;'S'
   133  000802  69                 	db	105	;'i'
   134  000803  6E                 	db	110	;'n'
   135  000804  20                 	db	32
   136  000805  73                 	db	115	;'s'
   137  000806  61                 	db	97	;'a'
   138  000807  6C                 	db	108	;'l'
   139  000808  69                 	db	105	;'i'
   140  000809  64                 	db	100	;'d'
   141  00080A  61                 	db	97	;'a'
   142  00080B  20                 	db	32
   143  00080C  31                 	db	49	;'1'
   144  00080D  00                 	db	0
   145  00080E                     STR_5:
   146  00080E  53                 	db	83	;'S'
   147  00080F  69                 	db	105	;'i'
   148  000810  6E                 	db	110	;'n'
   149  000811  20                 	db	32
   150  000812  73                 	db	115	;'s'
   151  000813  61                 	db	97	;'a'
   152  000814  6C                 	db	108	;'l'
   153  000815  69                 	db	105	;'i'
   154  000816  64                 	db	100	;'d'
   155  000817  61                 	db	97	;'a'
   156  000818  20                 	db	32
   157  000819  32                 	db	50	;'2'
   158  00081A  00                 	db	0
   159  00081B                     STR_2:
   160  00081B  54                 	db	84	;'T'
   161  00081C  65                 	db	101	;'e'
   162  00081D  6D                 	db	109	;'m'
   163  00081E  70                 	db	112	;'p'
   164  00081F  65                 	db	101	;'e'
   165  000820  72                 	db	114	;'r'
   166  000821  61                 	db	97	;'a'
   167  000822  74                 	db	116	;'t'
   168  000823  75                 	db	117	;'u'
   169  000824  72                 	db	114	;'r'
   170  000825  61                 	db	97	;'a'
   171  000826  3A                 	db	58	;':'
   172  000827  00                 	db	0
   173  000828                     STR_3:
   174  000828  53                 	db	83	;'S'
   175  000829  69                 	db	105	;'i'
   176  00082A  6E                 	db	110	;'n'
   177  00082B  20                 	db	32
   178  00082C  73                 	db	115	;'s'
   179  00082D  61                 	db	97	;'a'
   180  00082E  6C                 	db	108	;'l'
   181  00082F  69                 	db	105	;'i'
   182  000830  64                 	db	100	;'d'
   183  000831  61                 	db	97	;'a'
   184  000832  00                 	db	0
   185  000833                     STR_1:
   186  000833  25                 	db	37
   187  000834  2E                 	db	46
   188  000835  33                 	db	51	;'3'
   189  000836  66                 	db	102	;'f'
   190  000837  00                 	db	0
   191  000838                     STR_6:
   192  000838  49                 	db	73	;'I'
   193  000839  4E                 	db	78	;'N'
   194  00083A  46                 	db	70	;'F'
   195  00083B  00                 	db	0
   196  00083C                     STR_10:
   197  00083C  4E                 	db	78	;'N'
   198  00083D  41                 	db	65	;'A'
   199  00083E  4E                 	db	78	;'N'
   200  00083F  00                 	db	0
   201  000840                     STR_7:
   202  000840  69                 	db	105	;'i'
   203  000841  6E                 	db	110	;'n'
   204  000842  66                 	db	102	;'f'
   205  000843  00                 	db	0
   206  000844                     STR_11:
   207  000844  6E                 	db	110	;'n'
   208  000845  61                 	db	97	;'a'
   209  000846  6E                 	db	110	;'n'
   210  000847  00                 	db	0
   211  000848                     STR_14:
   212  000848  6C                 	db	108	;'l'
   213  000849  66                 	db	102	;'f'
   214  00084A  00                 	db	0
   215  0000                     
   216                           ; #config settings
   217  00084B  00                 	db	0	; dummy byte at the end
   218  0000                     
   219                           	psect	cinit
   220  003810                     __pcinit:
   221                           	opt callstack 0
   222  003810                     start_initialization:
   223                           	opt callstack 0
   224  003810                     __initialization:
   225                           	opt callstack 0
   226                           
   227                           ; Clear objects allocated to BANK1 (227 bytes)
   228  003810  EE01  F000         	lfsr	0,__pbssBANK1
   229  003814  0EE3               	movlw	227
   230  003816                     clear_0:
   231  003816  6AEE               	clrf	postinc0,c
   232  003818  06E8               	decf	wreg,f,c
   233  00381A  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to BANK0 (20 bytes)
   236  00381C  EE00  F0E8         	lfsr	0,__pbssBANK0
   237  003820  0E14               	movlw	20
   238  003822                     clear_1:
   239  003822  6AEE               	clrf	postinc0,c
   240  003824  06E8               	decf	wreg,f,c
   241  003826  E1FD               	bnz	clear_1
   242                           
   243                           ; Clear objects allocated to COMRAM (12 bytes)
   244  003828  EE00  F044         	lfsr	0,__pbssCOMRAM
   245  00382C  0E0C               	movlw	12
   246  00382E                     clear_2:
   247  00382E  6AEE               	clrf	postinc0,c
   248  003830  06E8               	decf	wreg,f,c
   249  003832  E1FD               	bnz	clear_2
   250  003834                     end_of_initialization:
   251                           	opt callstack 0
   252  003834                     __end_of__initialization:
   253                           	opt callstack 0
   254  003834  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  003836  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  003838  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  00383A  6EF8               	movwf	tblptru,c
   258  00383C  0100               	movlb	0
   259  00383E  EFBE  F00A         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262  000044                     __pbssCOMRAM:
   263                           	opt callstack 0
   264  000044                     ___fpclassifyf@F463:
   265                           	opt callstack 0
   266  000044                     	ds	4
   267  000048                     _flags:
   268                           	opt callstack 0
   269  000048                     	ds	2
   270  00004A                     _i:
   271                           	opt callstack 0
   272  00004A                     	ds	2
   273  00004C                     _z:
   274                           	opt callstack 0
   275  00004C                     	ds	2
   276  00004E                     _valor:
   277                           	opt callstack 0
   278  00004E                     	ds	2
   279                           
   280                           	psect	bssBANK0
   281  0000E8                     __pbssBANK0:
   282                           	opt callstack 0
   283  0000E8                     floorf@F524:
   284                           	opt callstack 0
   285  0000E8                     	ds	4
   286  0000EC                     _Promedio:
   287                           	opt callstack 0
   288  0000EC                     	ds	4
   289  0000F0                     _datos:
   290                           	opt callstack 0
   291  0000F0                     	ds	4
   292  0000F4                     _nout:
   293                           	opt callstack 0
   294  0000F4                     	ds	2
   295  0000F6                     _width:
   296                           	opt callstack 0
   297  0000F6                     	ds	2
   298  0000F8                     _prec:
   299                           	opt callstack 0
   300  0000F8                     	ds	2
   301  0000FA                     _u:
   302                           	opt callstack 0
   303  0000FA                     	ds	2
   304                           
   305                           	psect	bssBANK1
   306  000100                     __pbssBANK1:
   307                           	opt callstack 0
   308  000100                     _Tp:
   309                           	opt callstack 0
   310  000100                     	ds	48
   311  000130                     _ADC:
   312                           	opt callstack 0
   313  000130                     	ds	48
   314  000160                     _ADCS:
   315                           	opt callstack 0
   316  000160                     	ds	17
   317  000171                     _palabra:
   318                           	opt callstack 0
   319  000171                     	ds	17
   320  000182                     _dbuf:
   321                           	opt callstack 0
   322  000182                     	ds	80
   323  0001D2                     _Prom:
   324                           	opt callstack 0
   325  0001D2                     	ds	17
   326                           
   327                           	psect	cstackBANK0
   328  000060                     __pcstackBANK0:
   329                           	opt callstack 0
   330  000060                     ?_floorf:
   331                           	opt callstack 0
   332  000060                     ?_ADC_Channel:
   333                           	opt callstack 0
   334  000060                     ADC_Channel@Puerto:
   335                           	opt callstack 0
   336  000060                     floorf@x:
   337                           	opt callstack 0
   338                           
   339                           ; 4 bytes @ 0x0
   340  000060                     	ds	4
   341  000064                     ??_floorf:
   342  000064                     ??_ADC_Channel:
   343                           
   344                           ; 1 bytes @ 0x4
   345  000064                     	ds	6
   346  00006A                     floorf@m:
   347                           	opt callstack 0
   348                           
   349                           ; 4 bytes @ 0xA
   350  00006A                     	ds	4
   351  00006E                     floorf@e:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0xE
   355  00006E                     	ds	2
   356  000070                     floorf@u:
   357                           	opt callstack 0
   358                           
   359                           ; 4 bytes @ 0x10
   360  000070                     	ds	4
   361  000074                     ?_efgtoa:
   362                           	opt callstack 0
   363  000074                     efgtoa@fp:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x14
   367  000074                     	ds	2
   368  000076                     efgtoa@f:
   369                           	opt callstack 0
   370                           
   371                           ; 4 bytes @ 0x16
   372  000076                     	ds	4
   373  00007A                     efgtoa@c:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x1A
   377  00007A                     	ds	1
   378  00007B                     ??_efgtoa:
   379                           
   380                           ; 1 bytes @ 0x1B
   381  00007B                     	ds	5
   382  000080                     efgtoa@ou:
   383                           	opt callstack 0
   384                           
   385                           ; 4 bytes @ 0x20
   386  000080                     	ds	4
   387  000084                     _efgtoa$1054:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x24
   391  000084                     	ds	2
   392  000086                     _efgtoa$1055:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x26
   396  000086                     	ds	2
   397  000088                     _efgtoa$1060:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x28
   401  000088                     	ds	2
   402  00008A                     _efgtoa$1064:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x2A
   406  00008A                     	ds	2
   407  00008C                     _efgtoa$1065:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x2C
   411  00008C                     	ds	2
   412  00008E                     _efgtoa$1066:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x2E
   416  00008E                     	ds	2
   417  000090                     efgtoa@t:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x30
   421  000090                     	ds	2
   422  000092                     efgtoa@pp:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x32
   426  000092                     	ds	2
   427  000094                     efgtoa@m:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x34
   431  000094                     	ds	2
   432  000096                     efgtoa@ne:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x36
   436  000096                     	ds	2
   437  000098                     efgtoa@d:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x38
   441  000098                     	ds	2
   442  00009A                     efgtoa@sign:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x3A
   446  00009A                     	ds	2
   447  00009C                     efgtoa@p:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x3C
   451  00009C                     	ds	2
   452  00009E                     efgtoa@nmode:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x3E
   456  00009E                     	ds	1
   457  00009F                     efgtoa@w:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x3F
   461  00009F                     	ds	2
   462  0000A1                     efgtoa@mode:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x41
   466  0000A1                     	ds	1
   467  0000A2                     efgtoa@h:
   468                           	opt callstack 0
   469                           
   470                           ; 4 bytes @ 0x42
   471  0000A2                     	ds	4
   472  0000A6                     efgtoa@l:
   473                           	opt callstack 0
   474                           
   475                           ; 4 bytes @ 0x46
   476  0000A6                     	ds	4
   477  0000AA                     efgtoa@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x4A
   481  0000AA                     	ds	2
   482  0000AC                     efgtoa@g:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0x4C
   486  0000AC                     	ds	4
   487  0000B0                     efgtoa@e:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x50
   491  0000B0                     	ds	2
   492  0000B2                     efgtoa@n:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x52
   496  0000B2                     	ds	2
   497  0000B4                     efgtoa@u:
   498                           	opt callstack 0
   499                           
   500                           ; 4 bytes @ 0x54
   501  0000B4                     	ds	4
   502  0000B8                     ?_vfpfcnvrt:
   503                           	opt callstack 0
   504  0000B8                     vfpfcnvrt@fp:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x58
   508  0000B8                     	ds	2
   509  0000BA                     vfpfcnvrt@fmt:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x5A
   513  0000BA                     	ds	2
   514  0000BC                     vfpfcnvrt@ap:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x5C
   518  0000BC                     	ds	2
   519  0000BE                     ??_vfpfcnvrt:
   520                           
   521                           ; 1 bytes @ 0x5E
   522  0000BE                     	ds	4
   523  0000C2                     _vfpfcnvrt$1080:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x62
   527  0000C2                     	ds	2
   528  0000C4                     _vfpfcnvrt$1084:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x64
   532  0000C4                     	ds	2
   533  0000C6                     vfpfcnvrt@f:
   534                           	opt callstack 0
   535                           
   536                           ; 4 bytes @ 0x66
   537  0000C6                     	ds	4
   538  0000CA                     vfpfcnvrt@ct:
   539                           	opt callstack 0
   540                           
   541                           ; 3 bytes @ 0x6A
   542  0000CA                     	ds	3
   543  0000CD                     vfpfcnvrt@c:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x6D
   547  0000CD                     	ds	1
   548  0000CE                     ?_vfprintf:
   549                           	opt callstack 0
   550  0000CE                     vfprintf@fp:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x6E
   554  0000CE                     	ds	2
   555  0000D0                     vfprintf@fmt:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x70
   559  0000D0                     	ds	2
   560  0000D2                     vfprintf@ap:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x72
   564  0000D2                     	ds	2
   565  0000D4                     ?_sprintf:
   566                           	opt callstack 0
   567  0000D4                     sprintf@s:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x74
   571  0000D4                     	ds	2
   572  0000D6                     sprintf@fmt:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x76
   576  0000D6                     	ds	8
   577  0000DE                     sprintf@ap:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x7E
   581  0000DE                     	ds	2
   582  0000E0                     sprintf@f:
   583                           	opt callstack 0
   584                           
   585                           ; 6 bytes @ 0x80
   586  0000E0                     	ds	6
   587  0000E6                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x86
   590  0000E6                     	ds	2
   591                           
   592                           	psect	cstackCOMRAM
   593  000001                     __pcstackCOMRAM:
   594                           	opt callstack 0
   595  000001                     ?i2___fltol:
   596                           	opt callstack 0
   597  000001                     ?i2___xxtofl:
   598                           	opt callstack 0
   599  000001                     i2___flge@ff1:
   600                           	opt callstack 0
   601  000001                     i2___fltol@f1:
   602                           	opt callstack 0
   603  000001                     i2___xxtofl@val:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0x0
   607  000001                     	ds	4
   608  000005                     ??i2___fltol:
   609  000005                     ??i2___xxtofl:
   610  000005                     i2___flge@ff2:
   611                           	opt callstack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614  000005                     	ds	4
   615  000009                     ??i2___flge:
   616  000009                     i2___fltol@sign1:
   617                           	opt callstack 0
   618  000009                     i2___xxtofl@sign:
   619                           	opt callstack 0
   620                           
   621                           ; 1 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     i2___fltol@exp1:
   624                           	opt callstack 0
   625  00000A                     i2___xxtofl@exp:
   626                           	opt callstack 0
   627                           
   628                           ; 1 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     i2___xxtofl@arg:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0xA
   634  00000B                     	ds	4
   635  00000F                     ??_I2C_Slave_Read:
   636                           
   637                           ; 1 bytes @ 0xE
   638  00000F                     	ds	1
   639  000010                     ??_Lcd_Cmd:
   640  000010                     ??_Lcd_Chr_CP:
   641  000010                     ?_strlen:
   642                           	opt callstack 0
   643  000010                     ?___fpclassifyf:
   644                           	opt callstack 0
   645  000010                     ?_isupper:
   646                           	opt callstack 0
   647  000010                     ?_isdigit:
   648                           	opt callstack 0
   649  000010                     ?_strncmp:
   650                           	opt callstack 0
   651  000010                     ?_isspace:
   652                           	opt callstack 0
   653  000010                     ?___wmul:
   654                           	opt callstack 0
   655  000010                     ?___awdiv:
   656                           	opt callstack 0
   657  000010                     ?___awmod:
   658                           	opt callstack 0
   659  000010                     ?___fladd:
   660                           	opt callstack 0
   661  000010                     ?___flmul:
   662                           	opt callstack 0
   663  000010                     ?___flneg:
   664                           	opt callstack 0
   665  000010                     ?___fltol:
   666                           	opt callstack 0
   667  000010                     ?___xxtofl:
   668                           	opt callstack 0
   669  000010                     I2C_Slave_Init@address:
   670                           	opt callstack 0
   671  000010                     ADC_Init@entradas:
   672                           	opt callstack 0
   673  000010                     ___wmul@multiplier:
   674                           	opt callstack 0
   675  000010                     ___awdiv@dividend:
   676                           	opt callstack 0
   677  000010                     ___awmod@dividend:
   678                           	opt callstack 0
   679  000010                     isdigit@c:
   680                           	opt callstack 0
   681  000010                     isspace@c:
   682                           	opt callstack 0
   683  000010                     isupper@c:
   684                           	opt callstack 0
   685  000010                     fputc@c:
   686                           	opt callstack 0
   687  000010                     strcpy@dest:
   688                           	opt callstack 0
   689  000010                     strlen@s:
   690                           	opt callstack 0
   691  000010                     strncmp@_l:
   692                           	opt callstack 0
   693  000010                     ___fleq@ff1:
   694                           	opt callstack 0
   695  000010                     ___flneg@f1:
   696                           	opt callstack 0
   697  000010                     ___fltol@f1:
   698                           	opt callstack 0
   699  000010                     ___fladd@b:
   700                           	opt callstack 0
   701  000010                     ___flmul@b:
   702                           	opt callstack 0
   703  000010                     ___xxtofl@val:
   704                           	opt callstack 0
   705  000010                     ___fpclassifyf@x:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0xF
   709  000010                     	ds	2
   710  000012                     ??_isupper:
   711  000012                     ??_isdigit:
   712  000012                     ??_isspace:
   713  000012                     ??_ADC_Init:
   714  000012                     Lcd_Chr_CP@data:
   715                           	opt callstack 0
   716  000012                     Lcd_Cmd@data:
   717                           	opt callstack 0
   718  000012                     ___wmul@multiplicand:
   719                           	opt callstack 0
   720  000012                     ___awdiv@divisor:
   721                           	opt callstack 0
   722  000012                     ___awmod@divisor:
   723                           	opt callstack 0
   724  000012                     fputc@fp:
   725                           	opt callstack 0
   726  000012                     strcpy@src:
   727                           	opt callstack 0
   728  000012                     strlen@a:
   729                           	opt callstack 0
   730  000012                     strncmp@_r:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x11
   734  000012                     	ds	1
   735  000013                     ??_Lcd_Init:
   736  000013                     Lcd_Out@x:
   737                           	opt callstack 0
   738  000013                     Lcd_Out2@x:
   739                           	opt callstack 0
   740                           
   741                           ; 1 bytes @ 0x12
   742  000013                     	ds	1
   743  000014                     ??_fputc:
   744  000014                     ??___fpclassifyf:
   745  000014                     ??_strcpy:
   746  000014                     ??___fltol:
   747  000014                     ??___xxtofl:
   748  000014                     Lcd_Init@data:
   749                           	opt callstack 0
   750  000014                     ___awdiv@counter:
   751                           	opt callstack 0
   752  000014                     ___awmod@counter:
   753                           	opt callstack 0
   754  000014                     Lcd_Out@buffer:
   755                           	opt callstack 0
   756  000014                     Lcd_Out2@buffer:
   757                           	opt callstack 0
   758  000014                     ADC_Init@valor:
   759                           	opt callstack 0
   760  000014                     ___wmul@product:
   761                           	opt callstack 0
   762  000014                     strncmp@n:
   763                           	opt callstack 0
   764  000014                     ___fleq@ff2:
   765                           	opt callstack 0
   766  000014                     ___fladd@a:
   767                           	opt callstack 0
   768  000014                     ___flmul@a:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x13
   772  000014                     	ds	1
   773  000015                     ___awdiv@sign:
   774                           	opt callstack 0
   775  000015                     ___awmod@sign:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x14
   779  000015                     	ds	1
   780  000016                     ??_strncmp:
   781  000016                     ??_Lcd_Out:
   782  000016                     ??_Lcd_Out2:
   783  000016                     ?_tolower:
   784                           	opt callstack 0
   785  000016                     _isspace$1586:
   786                           	opt callstack 0
   787  000016                     ___awdiv@quotient:
   788                           	opt callstack 0
   789  000016                     strcpy@s:
   790                           	opt callstack 0
   791  000016                     tolower@c:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x15
   795  000016                     	ds	1
   796  000017                     ?_atoi:
   797                           	opt callstack 0
   798  000017                     atoi@s:
   799                           	opt callstack 0
   800  000017                     strncmp@l:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x16
   804  000017                     	ds	1
   805  000018                     ??_tolower:
   806  000018                     ??___fladd:
   807  000018                     ??___flmul:
   808  000018                     ??___fleq:
   809  000018                     Lcd_Out@y:
   810                           	opt callstack 0
   811  000018                     Lcd_Out2@y:
   812                           	opt callstack 0
   813  000018                     ___fltol@sign1:
   814                           	opt callstack 0
   815  000018                     ___xxtofl@sign:
   816                           	opt callstack 0
   817  000018                     ___fpclassifyf@e:
   818                           	opt callstack 0
   819  000018                     strcpy@d:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x17
   823  000018                     	ds	1
   824  000019                     ??_atoi:
   825  000019                     Lcd_Out@data:
   826                           	opt callstack 0
   827  000019                     Lcd_Out2@data:
   828                           	opt callstack 0
   829  000019                     ___fltol@exp1:
   830                           	opt callstack 0
   831  000019                     ___xxtofl@exp:
   832                           	opt callstack 0
   833  000019                     fputs@s:
   834                           	opt callstack 0
   835  000019                     strncmp@r:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x18
   839  000019                     	ds	1
   840  00001A                     ___xxtofl@arg:
   841                           	opt callstack 0
   842  00001A                     ___fpclassifyf@u:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x19
   846  00001A                     	ds	1
   847  00001B                     fputs@fp:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x1A
   851  00001B                     	ds	1
   852  00001C                     ___fladd@signs:
   853                           	opt callstack 0
   854  00001C                     ___flmul@sign:
   855                           	opt callstack 0
   856  00001C                     _tolower$1671:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x1B
   860  00001C                     	ds	1
   861  00001D                     ___fladd@aexp:
   862                           	opt callstack 0
   863  00001D                     ___flmul@aexp:
   864                           	opt callstack 0
   865  00001D                     fputs@c:
   866                           	opt callstack 0
   867  00001D                     atoi@neg:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x1C
   871  00001D                     	ds	1
   872  00001E                     ___fladd@bexp:
   873                           	opt callstack 0
   874  00001E                     fputs@i:
   875                           	opt callstack 0
   876  00001E                     ___flmul@grs:
   877                           	opt callstack 0
   878                           
   879                           ; 4 bytes @ 0x1D
   880  00001E                     	ds	1
   881  00001F                     ___fladd@grs:
   882                           	opt callstack 0
   883  00001F                     _atoi$1555:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x1E
   887  00001F                     	ds	1
   888  000020                     ?_pad:
   889                           	opt callstack 0
   890  000020                     pad@fp:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x1F
   894  000020                     	ds	1
   895  000021                     _atoi$1557:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x20
   899  000021                     	ds	1
   900  000022                     ___flmul@bexp:
   901                           	opt callstack 0
   902  000022                     pad@buf:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x21
   906  000022                     	ds	1
   907  000023                     _atoi$1556:
   908                           	opt callstack 0
   909  000023                     ___flmul@prod:
   910                           	opt callstack 0
   911                           
   912                           ; 4 bytes @ 0x22
   913  000023                     	ds	1
   914  000024                     pad@p:
   915                           	opt callstack 0
   916  000024                     atoi@n:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x23
   920  000024                     	ds	2
   921  000026                     ??_pad:
   922                           
   923                           ; 1 bytes @ 0x25
   924  000026                     	ds	1
   925  000027                     pad@i:
   926                           	opt callstack 0
   927  000027                     ___flmul@temp:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x26
   931  000027                     	ds	2
   932  000029                     ?___fldiv:
   933                           	opt callstack 0
   934  000029                     ?___flsub:
   935                           	opt callstack 0
   936  000029                     pad@w:
   937                           	opt callstack 0
   938  000029                     ___flge@ff1:
   939                           	opt callstack 0
   940  000029                     ___flsub@b:
   941                           	opt callstack 0
   942  000029                     ___fldiv@b:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x28
   946  000029                     	ds	4
   947  00002D                     ___flge@ff2:
   948                           	opt callstack 0
   949  00002D                     ___flsub@a:
   950                           	opt callstack 0
   951  00002D                     ___fldiv@a:
   952                           	opt callstack 0
   953                           
   954                           ; 4 bytes @ 0x2C
   955  00002D                     	ds	4
   956  000031                     ??___fldiv:
   957  000031                     ??___flge:
   958                           
   959                           ; 1 bytes @ 0x30
   960  000031                     	ds	4
   961  000035                     ___fldiv@rem:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x34
   965  000035                     	ds	4
   966  000039                     ___fldiv@sign:
   967                           	opt callstack 0
   968                           
   969                           ; 1 bytes @ 0x38
   970  000039                     	ds	1
   971  00003A                     ___fldiv@new_exp:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x39
   975  00003A                     	ds	2
   976  00003C                     ___fldiv@grs:
   977                           	opt callstack 0
   978                           
   979                           ; 4 bytes @ 0x3B
   980  00003C                     	ds	4
   981  000040                     ___fldiv@bexp:
   982                           	opt callstack 0
   983                           
   984                           ; 1 bytes @ 0x3F
   985  000040                     	ds	1
   986  000041                     ___fldiv@aexp:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0x40
   990  000041                     	ds	1
   991  000042                     vfprintf@cfmt:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x41
   995  000042                     	ds	2
   996  000044                     
   997                           ; 1 bytes @ 0x43
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 23 in file "I2C_Slave.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1020 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels required when called:   10
  1023 ;; This function calls:
  1024 ;;		_ADC_Channel
  1025 ;;		_ADC_Init
  1026 ;;		_I2C_Slave_Init
  1027 ;;		_Lcd_Cmd
  1028 ;;		_Lcd_Init
  1029 ;;		_Lcd_Out
  1030 ;;		_Lcd_Out2
  1031 ;;		_Servo_init
  1032 ;;		___fladd
  1033 ;;		___fldiv
  1034 ;;		___fleq
  1035 ;;		_sprintf
  1036 ;; This function is called by:
  1037 ;;		Startup code after reset
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text0
  1042  00157C                     __ptext0:
  1043                           	opt callstack 0
  1044  00157C                     _main:
  1045                           	opt callstack 21
  1046                           
  1047                           ;I2C_Slave.c: 25:     I2C_Slave_Init(0x10);
  1048                           
  1049                           ;incstack = 0
  1050  00157C  0E00               	movlw	0
  1051  00157E  6E11               	movwf	I2C_Slave_Init@address+1,c
  1052  001580  0E10               	movlw	16
  1053  001582  6E10               	movwf	I2C_Slave_Init@address,c
  1054  001584  EC90  F01C         	call	_I2C_Slave_Init	;wreg free
  1055                           
  1056                           ;I2C_Slave.c: 26:     Servo_init();
  1057  001588  EC9F  F01C         	call	_Servo_init	;wreg free
  1058                           
  1059                           ;I2C_Slave.c: 27:     ADC_Init(2);
  1060  00158C  0E00               	movlw	0
  1061  00158E  6E11               	movwf	ADC_Init@entradas+1,c
  1062  001590  0E02               	movlw	2
  1063  001592  6E10               	movwf	ADC_Init@entradas,c
  1064  001594  EC5D  F01A         	call	_ADC_Init	;wreg free
  1065                           
  1066                           ;I2C_Slave.c: 28:     Lcd_Init();
  1067  001598  EC36  F016         	call	_Lcd_Init	;wreg free
  1068                           
  1069                           ;I2C_Slave.c: 29:     Lcd_Cmd(1);
  1070  00159C  0E01               	movlw	1
  1071  00159E  ECA7  F015         	call	_Lcd_Cmd
  1072                           
  1073                           ;I2C_Slave.c: 30:     Lcd_Cmd(12);
  1074  0015A2  0E0C               	movlw	12
  1075  0015A4  ECA7  F015         	call	_Lcd_Cmd
  1076                           
  1077                           ;I2C_Slave.c: 31:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1078  0015A8  0E02               	movlw	2
  1079  0015AA  0100               	movlb	0	; () banked
  1080  0015AC  6FE7               	movwf	(??_main+1)& (0+255),b
  1081  0015AE  0E86               	movlw	134
  1082  0015B0  6FE6               	movwf	??_main& (0+255),b
  1083  0015B2  0E99               	movlw	153
  1084  0015B4                     u8207:
  1085  0015B4  2EE8               	decfsz	wreg,f,c
  1086  0015B6  D7FE               	bra	u8207
  1087  0015B8  2FE6               	decfsz	??_main& (0+255),f,b
  1088  0015BA  D7FC               	bra	u8207
  1089  0015BC  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1090  0015BE  D7FA               	bra	u8207
  1091                           
  1092                           ;I2C_Slave.c: 32:     LATD = 0x00;
  1093  0015C0  0E00               	movlw	0
  1094  0015C2  6E8C               	movwf	3980,c	;volatile
  1095                           
  1096                           ;I2C_Slave.c: 33:     TRISCbits.TRISC0=0;
  1097  0015C4  9094               	bcf	3988,0,c	;volatile
  1098                           
  1099                           ;I2C_Slave.c: 34:     TRISCbits.TRISC1=0;
  1100  0015C6  9294               	bcf	3988,1,c	;volatile
  1101                           
  1102                           ;I2C_Slave.c: 35:     LATCbits.LATC0=0;
  1103  0015C8  908B               	bcf	3979,0,c	;volatile
  1104                           
  1105                           ;I2C_Slave.c: 36:     LATCbits.LATC1=0;
  1106  0015CA  928B               	bcf	3979,1,c	;volatile
  1107                           
  1108                           ;I2C_Slave.c: 37:     Promedio=0.0;
  1109  0015CC  0E00               	movlw	0
  1110  0015CE  0100               	movlb	0	; () banked
  1111  0015D0  6FEC               	movwf	_Promedio& (0+255),b
  1112  0015D2  0E00               	movlw	0
  1113  0015D4  6FED               	movwf	(_Promedio+1)& (0+255),b
  1114  0015D6  0E00               	movlw	0
  1115  0015D8  6FEE               	movwf	(_Promedio+2)& (0+255),b
  1116  0015DA  0E00               	movlw	0
  1117  0015DC  6FEF               	movwf	(_Promedio+3)& (0+255),b
  1118  0015DE                     l6255:
  1119                           
  1120                           ;I2C_Slave.c: 39:          for(u=0;u<=1;u++){
  1121  0015DE  0E00               	movlw	0
  1122  0015E0  0100               	movlb	0	; () banked
  1123  0015E2  6FFB               	movwf	(_u+1)& (0+255),b
  1124  0015E4  0E00               	movlw	0
  1125  0015E6  6FFA               	movwf	_u& (0+255),b
  1126  0015E8                     l6261:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;I2C_Slave.c: 40:             Tp[u]=ADC_Channel(u);
  1130  0015E8  C0FA  F060         	movff	_u,ADC_Channel@Puerto
  1131  0015EC  C0FB  F061         	movff	_u+1,ADC_Channel@Puerto+1
  1132  0015F0  EC8C  F012         	call	_ADC_Channel	;wreg free
  1133  0015F4  0E00               	movlw	low _Tp
  1134  0015F6  0100               	movlb	0	; () banked
  1135  0015F8  6FE6               	movwf	??_main& (0+255),b
  1136  0015FA  0E01               	movlw	high _Tp
  1137  0015FC  6FE7               	movwf	(??_main+1)& (0+255),b
  1138  0015FE  90D8               	bcf	status,0,c
  1139  001600  35FA               	rlcf	_u& (0+255),w,b
  1140  001602  6ED9               	movwf	fsr2l,c
  1141  001604  35FB               	rlcf	(_u+1)& (0+255),w,b
  1142  001606  6EDA               	movwf	fsr2h,c
  1143  001608  90D8               	bcf	status,0,c
  1144  00160A  36D9               	rlcf	fsr2l,f,c
  1145  00160C  36DA               	rlcf	fsr2h,f,c
  1146  00160E  51E6               	movf	??_main& (0+255),w,b
  1147  001610  26D9               	addwf	fsr2l,f,c
  1148  001612  51E7               	movf	(??_main+1)& (0+255),w,b
  1149  001614  22DA               	addwfc	fsr2h,f,c
  1150  001616  C060  FFDE         	movff	?_ADC_Channel,postinc2
  1151  00161A  C061  FFDE         	movff	?_ADC_Channel+1,postinc2
  1152  00161E  C062  FFDE         	movff	?_ADC_Channel+2,postinc2
  1153  001622  C063  FFDE         	movff	?_ADC_Channel+3,postinc2
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;I2C_Slave.c: 41:             Promedio=Promedio+Tp[u];
  1157  001626  0E00               	movlw	low _Tp
  1158  001628  6FE6               	movwf	??_main& (0+255),b
  1159  00162A  0E01               	movlw	high _Tp
  1160  00162C  6FE7               	movwf	(??_main+1)& (0+255),b
  1161  00162E  90D8               	bcf	status,0,c
  1162  001630  35FA               	rlcf	_u& (0+255),w,b
  1163  001632  6ED9               	movwf	fsr2l,c
  1164  001634  35FB               	rlcf	(_u+1)& (0+255),w,b
  1165  001636  6EDA               	movwf	fsr2h,c
  1166  001638  90D8               	bcf	status,0,c
  1167  00163A  36D9               	rlcf	fsr2l,f,c
  1168  00163C  36DA               	rlcf	fsr2h,f,c
  1169  00163E  51E6               	movf	??_main& (0+255),w,b
  1170  001640  26D9               	addwf	fsr2l,f,c
  1171  001642  51E7               	movf	(??_main+1)& (0+255),w,b
  1172  001644  22DA               	addwfc	fsr2h,f,c
  1173  001646  CFDE F010          	movff	postinc2,___fladd@b
  1174  00164A  CFDE F011          	movff	postinc2,___fladd@b+1
  1175  00164E  CFDE F012          	movff	postinc2,___fladd@b+2
  1176  001652  CFDE F013          	movff	postinc2,___fladd@b+3
  1177  001656  C0EC  F014         	movff	_Promedio,___fladd@a
  1178  00165A  C0ED  F015         	movff	_Promedio+1,___fladd@a+1
  1179  00165E  C0EE  F016         	movff	_Promedio+2,___fladd@a+2
  1180  001662  C0EF  F017         	movff	_Promedio+3,___fladd@a+3
  1181  001666  EC13  F00E         	call	___fladd	;wreg free
  1182  00166A  C010  F0EC         	movff	?___fladd,_Promedio
  1183  00166E  C011  F0ED         	movff	?___fladd+1,_Promedio+1
  1184  001672  C012  F0EE         	movff	?___fladd+2,_Promedio+2
  1185  001676  C013  F0EF         	movff	?___fladd+3,_Promedio+3
  1186                           
  1187                           ;I2C_Slave.c: 42:             _delay((unsigned long)((3)*(12000000/4000.0)));
  1188  00167A  0E0C               	movlw	12
  1189  00167C  0100               	movlb	0	; () banked
  1190  00167E  6FE6               	movwf	??_main& (0+255),b
  1191  001680  0EAF               	movlw	175
  1192  001682                     u8217:
  1193  001682  2EE8               	decfsz	wreg,f,c
  1194  001684  D7FE               	bra	u8217
  1195  001686  2FE6               	decfsz	??_main& (0+255),f,b
  1196  001688  D7FC               	bra	u8217
  1197                           
  1198                           ;I2C_Slave.c: 43:         }
  1199  00168A  0100               	movlb	0	; () banked
  1200  00168C  4BFA               	infsnz	_u& (0+255),f,b
  1201  00168E  2BFB               	incf	(_u+1)& (0+255),f,b
  1202                           
  1203                           ; BSR set to: 0
  1204  001690  BFFB               	btfsc	(_u+1)& (0+255),7,b
  1205  001692  D7AA               	goto	l6261
  1206  001694  51FB               	movf	(_u+1)& (0+255),w,b
  1207  001696  E104               	bnz	u8120
  1208  001698  0E02               	movlw	2
  1209  00169A  5DFA               	subwf	_u& (0+255),w,b
  1210  00169C  A0D8               	btfss	status,0,c
  1211  00169E  D7A4               	goto	l6261
  1212  0016A0                     u8120:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;I2C_Slave.c: 44:         Promedio=Promedio/3.0;
  1216  0016A0  C0EC  F029         	movff	_Promedio,___fldiv@b
  1217  0016A4  C0ED  F02A         	movff	_Promedio+1,___fldiv@b+1
  1218  0016A8  C0EE  F02B         	movff	_Promedio+2,___fldiv@b+2
  1219  0016AC  C0EF  F02C         	movff	_Promedio+3,___fldiv@b+3
  1220  0016B0  0E00               	movlw	0
  1221  0016B2  6E2D               	movwf	___fldiv@a,c
  1222  0016B4  0E00               	movlw	0
  1223  0016B6  6E2E               	movwf	___fldiv@a+1,c
  1224  0016B8  0E40               	movlw	64
  1225  0016BA  6E2F               	movwf	___fldiv@a+2,c
  1226  0016BC  0E40               	movlw	64
  1227  0016BE  6E30               	movwf	___fldiv@a+3,c
  1228  0016C0  EC99  F00F         	call	___fldiv	;wreg free
  1229  0016C4  C029  F0EC         	movff	?___fldiv,_Promedio
  1230  0016C8  C02A  F0ED         	movff	?___fldiv+1,_Promedio+1
  1231  0016CC  C02B  F0EE         	movff	?___fldiv+2,_Promedio+2
  1232  0016D0  C02C  F0EF         	movff	?___fldiv+3,_Promedio+3
  1233                           
  1234                           ;I2C_Slave.c: 45:         sprintf(Prom,"%.3f",Promedio);
  1235  0016D4  0ED2               	movlw	low _Prom
  1236  0016D6  0100               	movlb	0	; () banked
  1237  0016D8  6FD4               	movwf	sprintf@s& (0+255),b
  1238  0016DA  0E01               	movlw	high _Prom
  1239  0016DC  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1240  0016DE  0E33               	movlw	low STR_1
  1241  0016E0  6FD6               	movwf	sprintf@fmt& (0+255),b
  1242  0016E2  0E08               	movlw	high STR_1
  1243  0016E4  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1244  0016E6  C0EC  F0D8         	movff	_Promedio,?_sprintf+4
  1245  0016EA  C0ED  F0D9         	movff	_Promedio+1,?_sprintf+5
  1246  0016EE  C0EE  F0DA         	movff	_Promedio+2,?_sprintf+6
  1247  0016F2  C0EF  F0DB         	movff	_Promedio+3,?_sprintf+7
  1248  0016F6  EC32  F01B         	call	_sprintf	;wreg free
  1249                           
  1250                           ;I2C_Slave.c: 46:         Lcd_Out(1,1,"Temperatura:");
  1251  0016FA  0E01               	movlw	1
  1252  0016FC  6E13               	movwf	Lcd_Out@x,c
  1253  0016FE  0E1B               	movlw	low STR_2
  1254  001700  6E14               	movwf	Lcd_Out@buffer,c
  1255  001702  0E08               	movlw	high STR_2
  1256  001704  6E15               	movwf	Lcd_Out@buffer+1,c
  1257  001706  0E01               	movlw	1
  1258  001708  EC22  F01A         	call	_Lcd_Out
  1259                           
  1260                           ;I2C_Slave.c: 47:         Lcd_Out2(2,1,Prom);
  1261  00170C  0E01               	movlw	1
  1262  00170E  6E13               	movwf	Lcd_Out2@x,c
  1263  001710  0ED2               	movlw	low _Prom
  1264  001712  6E14               	movwf	Lcd_Out2@buffer,c
  1265  001714  0E01               	movlw	high _Prom
  1266  001716  6E15               	movwf	Lcd_Out2@buffer+1,c
  1267  001718  0E02               	movlw	2
  1268  00171A  ECCF  F01A         	call	_Lcd_Out2
  1269                           
  1270                           ;I2C_Slave.c: 48:         while(datos!=0x00){
  1271  00171E  D0C5               	goto	u8180
  1272  001720                     l6279:
  1273                           
  1274                           ;I2C_Slave.c: 49:             if(datos==0x15){
  1275  001720  C0F0  F010         	movff	_datos,___fleq@ff1
  1276  001724  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1277  001728  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1278  00172C  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1279  001730  0E00               	movlw	0
  1280  001732  6E14               	movwf	___fleq@ff2,c
  1281  001734  0E00               	movlw	0
  1282  001736  6E15               	movwf	___fleq@ff2+1,c
  1283  001738  0EA8               	movlw	168
  1284  00173A  6E16               	movwf	___fleq@ff2+2,c
  1285  00173C  0E41               	movlw	65
  1286  00173E  6E17               	movwf	___fleq@ff2+3,c
  1287  001740  EC9B  F019         	call	___fleq	;wreg free
  1288  001744  A0D8               	btfss	status,0,c
  1289  001746  D02E               	goto	l6289
  1290                           
  1291                           ;I2C_Slave.c: 50:                 Lcd_Cmd(1);
  1292  001748  0E01               	movlw	1
  1293  00174A  ECA7  F015         	call	_Lcd_Cmd
  1294                           
  1295                           ;I2C_Slave.c: 51:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  1296  00174E  0E02               	movlw	2
  1297  001750  0100               	movlb	0	; () banked
  1298  001752  6FE7               	movwf	(??_main+1)& (0+255),b
  1299  001754  0E86               	movlw	134
  1300  001756  6FE6               	movwf	??_main& (0+255),b
  1301  001758  0E99               	movlw	153
  1302  00175A                     u8227:
  1303  00175A  2EE8               	decfsz	wreg,f,c
  1304  00175C  D7FE               	bra	u8227
  1305  00175E  2FE6               	decfsz	??_main& (0+255),f,b
  1306  001760  D7FC               	bra	u8227
  1307  001762  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1308  001764  D7FA               	bra	u8227
  1309                           
  1310                           ;I2C_Slave.c: 52:                 while(datos==0x15){
  1311  001766  D009               	goto	l6287
  1312  001768                     l6285:
  1313                           
  1314                           ;I2C_Slave.c: 53:                     Lcd_Out(1,1,"Sin salida");
  1315  001768  0E01               	movlw	1
  1316  00176A  6E13               	movwf	Lcd_Out@x,c
  1317  00176C  0E28               	movlw	low STR_3
  1318  00176E  6E14               	movwf	Lcd_Out@buffer,c
  1319  001770  0E08               	movlw	high STR_3
  1320  001772  6E15               	movwf	Lcd_Out@buffer+1,c
  1321  001774  0E01               	movlw	1
  1322  001776  EC22  F01A         	call	_Lcd_Out
  1323  00177A                     l6287:
  1324                           
  1325                           ;I2C_Slave.c: 52:                 while(datos==0x15){
  1326  00177A  C0F0  F010         	movff	_datos,___fleq@ff1
  1327  00177E  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1328  001782  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1329  001786  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1330  00178A  0E00               	movlw	0
  1331  00178C  6E14               	movwf	___fleq@ff2,c
  1332  00178E  0E00               	movlw	0
  1333  001790  6E15               	movwf	___fleq@ff2+1,c
  1334  001792  0EA8               	movlw	168
  1335  001794  6E16               	movwf	___fleq@ff2+2,c
  1336  001796  0E41               	movlw	65
  1337  001798  6E17               	movwf	___fleq@ff2+3,c
  1338  00179A  EC9B  F019         	call	___fleq	;wreg free
  1339  00179E  A0D8               	btfss	status,0,c
  1340  0017A0  D084               	goto	u8180
  1341  0017A2  D7E2               	goto	l6285
  1342  0017A4                     l6289:
  1343  0017A4  C0F0  F010         	movff	_datos,___fleq@ff1
  1344  0017A8  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1345  0017AC  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1346  0017B0  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1347  0017B4  0E00               	movlw	0
  1348  0017B6  6E14               	movwf	___fleq@ff2,c
  1349  0017B8  0E00               	movlw	0
  1350  0017BA  6E15               	movwf	___fleq@ff2+1,c
  1351  0017BC  0EA0               	movlw	160
  1352  0017BE  6E16               	movwf	___fleq@ff2+2,c
  1353  0017C0  0E41               	movlw	65
  1354  0017C2  6E17               	movwf	___fleq@ff2+3,c
  1355  0017C4  EC9B  F019         	call	___fleq	;wreg free
  1356  0017C8  A0D8               	btfss	status,0,c
  1357  0017CA  D02E               	goto	l6299
  1358                           
  1359                           ;I2C_Slave.c: 57:                 Lcd_Cmd(1);
  1360  0017CC  0E01               	movlw	1
  1361  0017CE  ECA7  F015         	call	_Lcd_Cmd
  1362                           
  1363                           ;I2C_Slave.c: 58:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  1364  0017D2  0E02               	movlw	2
  1365  0017D4  0100               	movlb	0	; () banked
  1366  0017D6  6FE7               	movwf	(??_main+1)& (0+255),b
  1367  0017D8  0E86               	movlw	134
  1368  0017DA  6FE6               	movwf	??_main& (0+255),b
  1369  0017DC  0E99               	movlw	153
  1370  0017DE                     u8237:
  1371  0017DE  2EE8               	decfsz	wreg,f,c
  1372  0017E0  D7FE               	bra	u8237
  1373  0017E2  2FE6               	decfsz	??_main& (0+255),f,b
  1374  0017E4  D7FC               	bra	u8237
  1375  0017E6  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1376  0017E8  D7FA               	bra	u8237
  1377                           
  1378                           ;I2C_Slave.c: 59:                 while(datos==0x14){
  1379  0017EA  D009               	goto	l6297
  1380  0017EC                     l6295:
  1381                           
  1382                           ;I2C_Slave.c: 60:                     Lcd_Out(1,1,"Sin salida 1");
  1383  0017EC  0E01               	movlw	1
  1384  0017EE  6E13               	movwf	Lcd_Out@x,c
  1385  0017F0  0E01               	movlw	low STR_4
  1386  0017F2  6E14               	movwf	Lcd_Out@buffer,c
  1387  0017F4  0E08               	movlw	high STR_4
  1388  0017F6  6E15               	movwf	Lcd_Out@buffer+1,c
  1389  0017F8  0E01               	movlw	1
  1390  0017FA  EC22  F01A         	call	_Lcd_Out
  1391  0017FE                     l6297:
  1392                           
  1393                           ;I2C_Slave.c: 59:                 while(datos==0x14){
  1394  0017FE  C0F0  F010         	movff	_datos,___fleq@ff1
  1395  001802  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1396  001806  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1397  00180A  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1398  00180E  0E00               	movlw	0
  1399  001810  6E14               	movwf	___fleq@ff2,c
  1400  001812  0E00               	movlw	0
  1401  001814  6E15               	movwf	___fleq@ff2+1,c
  1402  001816  0EA0               	movlw	160
  1403  001818  6E16               	movwf	___fleq@ff2+2,c
  1404  00181A  0E41               	movlw	65
  1405  00181C  6E17               	movwf	___fleq@ff2+3,c
  1406  00181E  EC9B  F019         	call	___fleq	;wreg free
  1407  001822  A0D8               	btfss	status,0,c
  1408  001824  D042               	goto	u8180
  1409  001826  D7E2               	goto	l6295
  1410  001828                     l6299:
  1411  001828  C0F0  F010         	movff	_datos,___fleq@ff1
  1412  00182C  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1413  001830  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1414  001834  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1415  001838  0E00               	movlw	0
  1416  00183A  6E14               	movwf	___fleq@ff2,c
  1417  00183C  0E00               	movlw	0
  1418  00183E  6E15               	movwf	___fleq@ff2+1,c
  1419  001840  0E98               	movlw	152
  1420  001842  6E16               	movwf	___fleq@ff2+2,c
  1421  001844  0E41               	movlw	65
  1422  001846  6E17               	movwf	___fleq@ff2+3,c
  1423  001848  EC9B  F019         	call	___fleq	;wreg free
  1424  00184C  A0D8               	btfss	status,0,c
  1425  00184E  D02D               	goto	u8180
  1426                           
  1427                           ;I2C_Slave.c: 64:                 Lcd_Cmd(1);
  1428  001850  0E01               	movlw	1
  1429  001852  ECA7  F015         	call	_Lcd_Cmd
  1430                           
  1431                           ;I2C_Slave.c: 65:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  1432  001856  0E02               	movlw	2
  1433  001858  0100               	movlb	0	; () banked
  1434  00185A  6FE7               	movwf	(??_main+1)& (0+255),b
  1435  00185C  0E86               	movlw	134
  1436  00185E  6FE6               	movwf	??_main& (0+255),b
  1437  001860  0E99               	movlw	153
  1438  001862                     u8247:
  1439  001862  2EE8               	decfsz	wreg,f,c
  1440  001864  D7FE               	bra	u8247
  1441  001866  2FE6               	decfsz	??_main& (0+255),f,b
  1442  001868  D7FC               	bra	u8247
  1443  00186A  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1444  00186C  D7FA               	bra	u8247
  1445                           
  1446                           ;I2C_Slave.c: 66:                 while(datos==0x13){
  1447  00186E  D009               	goto	l6307
  1448  001870                     l6305:
  1449                           
  1450                           ;I2C_Slave.c: 67:                     Lcd_Out(1,1,"Sin salida 2");
  1451  001870  0E01               	movlw	1
  1452  001872  6E13               	movwf	Lcd_Out@x,c
  1453  001874  0E0E               	movlw	low STR_5
  1454  001876  6E14               	movwf	Lcd_Out@buffer,c
  1455  001878  0E08               	movlw	high STR_5
  1456  00187A  6E15               	movwf	Lcd_Out@buffer+1,c
  1457  00187C  0E01               	movlw	1
  1458  00187E  EC22  F01A         	call	_Lcd_Out
  1459  001882                     l6307:
  1460                           
  1461                           ;I2C_Slave.c: 66:                 while(datos==0x13){
  1462  001882  C0F0  F010         	movff	_datos,___fleq@ff1
  1463  001886  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1464  00188A  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1465  00188E  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1466  001892  0E00               	movlw	0
  1467  001894  6E14               	movwf	___fleq@ff2,c
  1468  001896  0E00               	movlw	0
  1469  001898  6E15               	movwf	___fleq@ff2+1,c
  1470  00189A  0E98               	movlw	152
  1471  00189C  6E16               	movwf	___fleq@ff2+2,c
  1472  00189E  0E41               	movlw	65
  1473  0018A0  6E17               	movwf	___fleq@ff2+3,c
  1474  0018A2  EC9B  F019         	call	___fleq	;wreg free
  1475  0018A6  B0D8               	btfsc	status,0,c
  1476  0018A8  D7E3               	goto	l6305
  1477  0018AA                     u8180:
  1478                           
  1479                           ;I2C_Slave.c: 48:         while(datos!=0x00){
  1480  0018AA  C0F0  F010         	movff	_datos,___fleq@ff1
  1481  0018AE  C0F1  F011         	movff	_datos+1,___fleq@ff1+1
  1482  0018B2  C0F2  F012         	movff	_datos+2,___fleq@ff1+2
  1483  0018B6  C0F3  F013         	movff	_datos+3,___fleq@ff1+3
  1484  0018BA  0E00               	movlw	0
  1485  0018BC  6E14               	movwf	___fleq@ff2,c
  1486  0018BE  0E00               	movlw	0
  1487  0018C0  6E15               	movwf	___fleq@ff2+1,c
  1488  0018C2  0E00               	movlw	0
  1489  0018C4  6E16               	movwf	___fleq@ff2+2,c
  1490  0018C6  0E00               	movlw	0
  1491  0018C8  6E17               	movwf	___fleq@ff2+3,c
  1492  0018CA  EC9B  F019         	call	___fleq	;wreg free
  1493  0018CE  B0D8               	btfsc	status,0,c
  1494  0018D0  D686               	goto	l6255
  1495  0018D2  D726               	goto	l6279
  1496  0018D4                     __end_of_main:
  1497                           	opt callstack 0
  1498                           
  1499 ;; *************** function _sprintf *****************
  1500 ;; Defined at:
  1501 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  s               2  116[BANK0 ] PTR unsigned char 
  1504 ;;		 -> Prom(17), 
  1505 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  1506 ;;		 -> STR_1(5), 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  f               6  128[BANK0 ] struct _IO_FILE
  1509 ;;  ap              2  126[BANK0 ] PTR void [1]
  1510 ;;		 -> ?_sprintf(2), 
  1511 ;;  ret             2    0        int 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2  116[BANK0 ] int 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         0       8       0       0       0       0       0       0       0
  1522 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1525 ;;Total ram usage:       18 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    9
  1528 ;; This function calls:
  1529 ;;		_vfprintf
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text1
  1536  003664                     __ptext1:
  1537                           	opt callstack 0
  1538  003664                     _sprintf:
  1539                           	opt callstack 21
  1540                           
  1541                           ;incstack = 0
  1542  003664  0ED8               	movlw	low (?_sprintf+4)
  1543  003666  0100               	movlb	0	; () banked
  1544  003668  6FDE               	movwf	sprintf@ap& (0+255),b
  1545  00366A  0E00               	movlw	high (?_sprintf+4)
  1546  00366C  6FDF               	movwf	(sprintf@ap+1)& (0+255),b
  1547  00366E  C0D4  F0E0         	movff	sprintf@s,sprintf@f
  1548  003672  C0D5  F0E1         	movff	sprintf@s+1,sprintf@f+1
  1549                           
  1550                           ; BSR set to: 0
  1551  003676  0E00               	movlw	0
  1552  003678  6FE3               	movwf	(sprintf@f+3)& (0+255),b
  1553  00367A  0E00               	movlw	0
  1554  00367C  6FE2               	movwf	(sprintf@f+2)& (0+255),b
  1555                           
  1556                           ; BSR set to: 0
  1557  00367E  0E00               	movlw	0
  1558  003680  6FE5               	movwf	(sprintf@f+5)& (0+255),b
  1559  003682  0E00               	movlw	0
  1560  003684  6FE4               	movwf	(sprintf@f+4)& (0+255),b
  1561                           
  1562                           ; BSR set to: 0
  1563  003686  0EE0               	movlw	low sprintf@f
  1564  003688  6FCE               	movwf	vfprintf@fp& (0+255),b
  1565  00368A  0E00               	movlw	high sprintf@f
  1566  00368C  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  1567  00368E  C0D6  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  1568  003692  C0D7  F0D1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1569  003696  0EDE               	movlw	low sprintf@ap
  1570  003698  6FD2               	movwf	vfprintf@ap& (0+255),b
  1571  00369A  0E00               	movlw	high sprintf@ap
  1572  00369C  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  1573  00369E  EC07  F01B         	call	_vfprintf	;wreg free
  1574  0036A2  0100               	movlb	0	; () banked
  1575  0036A4  51E2               	movf	(sprintf@f+2)& (0+255),w,b
  1576  0036A6  25D4               	addwf	sprintf@s& (0+255),w,b
  1577  0036A8  6ED9               	movwf	fsr2l,c
  1578  0036AA  51E3               	movf	(sprintf@f+3)& (0+255),w,b
  1579  0036AC  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1580  0036AE  6EDA               	movwf	fsr2h,c
  1581  0036B0  0E00               	movlw	0
  1582  0036B2  6EDF               	movwf	indf2,c
  1583                           
  1584                           ; BSR set to: 0
  1585  0036B4  0012               	return		;funcret
  1586  0036B6                     __end_of_sprintf:
  1587                           	opt callstack 0
  1588                           
  1589 ;; *************** function _vfprintf *****************
  1590 ;; Defined at:
  1591 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  1594 ;;		 -> sprintf@f(6), 
  1595 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  1596 ;;		 -> STR_1(5), 
  1597 ;;  ap              2  114[BANK0 ] PTR PTR void 
  1598 ;;		 -> sprintf@ap(2), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  cfmt            2   65[COMRAM] PTR unsigned char 
  1601 ;;		 -> STR_1(5), 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  2  110[BANK0 ] int 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         0       6       0       0       0       0       0       0       0
  1612 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1614 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1615 ;;Total ram usage:        8 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    8
  1618 ;; This function calls:
  1619 ;;		_vfpfcnvrt
  1620 ;; This function is called by:
  1621 ;;		_sprintf
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626  00360E                     __ptext2:
  1627                           	opt callstack 0
  1628  00360E                     _vfprintf:
  1629                           	opt callstack 21
  1630                           
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;incstack = 0
  1635  00360E  C0D0  F042         	movff	vfprintf@fmt,vfprintf@cfmt
  1636  003612  C0D1  F043         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1639  003616  0E00               	movlw	0
  1640  003618  0100               	movlb	0	; () banked
  1641  00361A  6FF5               	movwf	(_nout+1)& (0+255),b
  1642  00361C  0E00               	movlw	0
  1643  00361E  6FF4               	movwf	_nout& (0+255),b
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1646  003620  D013               	goto	l6197
  1647  003622                     l6195:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1651  003622  C0CE  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  1652  003626  C0CF  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1653  00362A  0E42               	movlw	low vfprintf@cfmt
  1654  00362C  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  1655  00362E  0E00               	movlw	high vfprintf@cfmt
  1656  003630  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1657  003632  C0D2  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  1658  003636  C0D3  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1659  00363A  ECE5  F008         	call	_vfpfcnvrt	;wreg free
  1660  00363E  0100               	movlb	0	; () banked
  1661  003640  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  1662  003642  27F4               	addwf	_nout& (0+255),f,b
  1663  003644  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1664  003646  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1665  003648                     l6197:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1669  003648  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
  1670  00364C  C043  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1671  003650                     	if	0	;tblptru may be non-zero
  1672  003650                     	endif
  1673  003650                     	if	0	;tblptru may be non-zero
  1674  003650                     	endif
  1675  003650  0008               	tblrd		*
  1676  003652  50F5               	movf	tablat,w,c
  1677  003654  0900               	iorlw	0
  1678  003656  A4D8               	btfss	status,2,c
  1679  003658  D7E4               	goto	l6195
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1683  00365A  C0F4  F0CE         	movff	_nout,?_vfprintf
  1684  00365E  C0F5  F0CF         	movff	_nout+1,?_vfprintf+1
  1685                           
  1686                           ; BSR set to: 0
  1687  003662  0012               	return		;funcret
  1688  003664                     __end_of_vfprintf:
  1689                           	opt callstack 0
  1690                           
  1691 ;; *************** function _vfpfcnvrt *****************
  1692 ;; Defined at:
  1693 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  1696 ;;		 -> sprintf@f(6), 
  1697 ;;  fmt             2   90[BANK0 ] PTR PTR unsigned char 
  1698 ;;		 -> vfprintf@cfmt(2), 
  1699 ;;  ap              2   92[BANK0 ] PTR PTR void 
  1700 ;;		 -> sprintf@ap(2), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  llu             8    0        unsigned long long 
  1703 ;;  ll              8    0        long long 
  1704 ;;  f               4  102[BANK0 ] long long 
  1705 ;;  ct              3  106[BANK0 ] unsigned char [3]
  1706 ;;  vp              3    0        PTR void 
  1707 ;;  cp              3    0        PTR unsigned char 
  1708 ;;  i               2    0        int 
  1709 ;;  done            2    0        int 
  1710 ;;  c               1  109[BANK0 ] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2   88[BANK0 ] int 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1720 ;;      Params:         0       6       0       0       0       0       0       0       0
  1721 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1722 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1723 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1724 ;;Total ram usage:       22 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    7
  1727 ;; This function calls:
  1728 ;;		_atoi
  1729 ;;		_efgtoa
  1730 ;;		_fputc
  1731 ;;		_isdigit
  1732 ;;		_isupper
  1733 ;;		_strncmp
  1734 ;;		_tolower
  1735 ;; This function is called by:
  1736 ;;		_vfprintf
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text3
  1741  0011CA                     __ptext3:
  1742                           	opt callstack 0
  1743  0011CA                     _vfpfcnvrt:
  1744                           	opt callstack 21
  1745                           
  1746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;incstack = 0
  1750  0011CA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1751  0011CE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1752  0011D2  CFDE FFF6          	movff	postinc2,tblptrl
  1753  0011D6  CFDD FFF7          	movff	postdec2,tblptrh
  1754  0011DA                     	if	0	;tblptru may be non-zero
  1755  0011DA                     	endif
  1756  0011DA                     	if	0	;tblptru may be non-zero
  1757  0011DA                     	endif
  1758  0011DA  0008               	tblrd		*
  1759  0011DC  50F5               	movf	tablat,w,c
  1760  0011DE  0A25               	xorlw	37
  1761  0011E0  A4D8               	btfss	status,2,c
  1762  0011E2  D1B2               	goto	l6183
  1763                           
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1765  0011E4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1766  0011E8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1767  0011EC  2ADE               	incf	postinc2,f,c
  1768  0011EE  0E00               	movlw	0
  1769  0011F0  22DD               	addwfc	postdec2,f,c
  1770                           
  1771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1772  0011F2  0E00               	movlw	0
  1773  0011F4  0100               	movlb	0	; () banked
  1774  0011F6  6FF7               	movwf	(_width+1)& (0+255),b
  1775  0011F8  0E00               	movlw	0
  1776  0011FA  6FF6               	movwf	_width& (0+255),b
  1777  0011FC  C0F6  F048         	movff	_width,_flags
  1778  001200  C0F7  F049         	movff	_width+1,_flags+1
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1782  001204  69F8               	setf	_prec& (0+255),b
  1783  001206  69F9               	setf	(_prec+1)& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1787  001208  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  00120C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  001210  CFDE FFF6          	movff	postinc2,tblptrl
  1790  001214  CFDD FFF7          	movff	postdec2,tblptrh
  1791  001218                     	if	0	;tblptru may be non-zero
  1792  001218                     	endif
  1793  001218                     	if	0	;tblptru may be non-zero
  1794  001218                     	endif
  1795  001218  0008               	tblrd		*
  1796  00121A  50F5               	movf	tablat,w,c
  1797  00121C  0A2E               	xorlw	46
  1798  00121E  A4D8               	btfss	status,2,c
  1799  001220  D06E               	goto	u8000
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1803  001222  0E00               	movlw	0
  1804  001224  6FF9               	movwf	(_prec+1)& (0+255),b
  1805  001226  0E00               	movlw	0
  1806  001228  6FF8               	movwf	_prec& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1810  00122A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1811  00122E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1812  001232  2ADE               	incf	postinc2,f,c
  1813  001234  0E00               	movlw	0
  1814  001236  22DD               	addwfc	postdec2,f,c
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1818  001238  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1819  00123C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1820  001240  CFDE FFF6          	movff	postinc2,tblptrl
  1821  001244  CFDD FFF7          	movff	postdec2,tblptrh
  1822  001248                     	if	0	;tblptru may be non-zero
  1823  001248                     	endif
  1824  001248                     	if	0	;tblptru may be non-zero
  1825  001248                     	endif
  1826  001248  0008               	tblrd		*
  1827  00124A  50F5               	movf	tablat,w,c
  1828  00124C  0A2A               	xorlw	42
  1829  00124E  A4D8               	btfss	status,2,c
  1830  001250  D01C               	goto	l6119
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1834  001252  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1835  001256  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1836  00125A  2ADE               	incf	postinc2,f,c
  1837  00125C  0E00               	movlw	0
  1838  00125E  22DD               	addwfc	postdec2,f,c
  1839                           
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1841  001260  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1842  001264  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1843  001268  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  1844  00126C  0E02               	movlw	2
  1845  00126E  26DE               	addwf	postinc2,f,c
  1846  001270  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  1847  001274  0E00               	movlw	0
  1848  001276  22DD               	addwfc	postdec2,f,c
  1849  001278  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1850  00127C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1851  001280  CFDE F0F8          	movff	postinc2,_prec
  1852  001284  CFDD F0F9          	movff	postdec2,_prec+1
  1853                           
  1854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1855  001288  D03A               	goto	u8000
  1856  00128A                     l6119:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1860  00128A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1861  00128E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1862  001292  CFDE F017          	movff	postinc2,atoi@s
  1863  001296  CFDD F018          	movff	postdec2,atoi@s+1
  1864  00129A  EC35  F013         	call	_atoi	;wreg free
  1865  00129E  C017  F0F8         	movff	?_atoi,_prec
  1866  0012A2  C018  F0F9         	movff	?_atoi+1,_prec+1
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1869  0012A6  D007               	goto	l6123
  1870  0012A8                     l6121:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1874  0012A8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875  0012AC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876  0012B0  2ADE               	incf	postinc2,f,c
  1877  0012B2  0E00               	movlw	0
  1878  0012B4  22DD               	addwfc	postdec2,f,c
  1879  0012B6                     l6123:
  1880  0012B6  0ED0               	movlw	208
  1881  0012B8  0100               	movlb	0	; () banked
  1882  0012BA  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  1883  0012BC  0EFF               	movlw	255
  1884  0012BE  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1885  0012C0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1886  0012C4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1887  0012C8  CFDE FFF6          	movff	postinc2,tblptrl
  1888  0012CC  CFDD FFF7          	movff	postdec2,tblptrh
  1889  0012D0                     	if	0	;tblptru may be non-zero
  1890  0012D0                     	endif
  1891  0012D0                     	if	0	;tblptru may be non-zero
  1892  0012D0                     	endif
  1893  0012D0  0008               	tblrd		*
  1894  0012D2  50F5               	movf	tablat,w,c
  1895  0012D4  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1896  0012D6  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1897  0012D8  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  1898  0012DA  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1899  0012DC  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1900  0012DE  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1901  0012E0  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1902  0012E2  E106               	bnz	u7980
  1903  0012E4  0E0A               	movlw	10
  1904  0012E6  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1905  0012E8  B0D8               	btfsc	status,0,c
  1906  0012EA  D002               	goto	u7980
  1907  0012EC  0E01               	movlw	1
  1908  0012EE  D001               	goto	u7990
  1909  0012F0                     u7980:
  1910  0012F0  0E00               	movlw	0
  1911  0012F2                     u7990:
  1912  0012F2  6FC2               	movwf	_vfpfcnvrt$1080& (0+255),b
  1913  0012F4  6BC3               	clrf	(_vfpfcnvrt$1080+1)& (0+255),b
  1914                           
  1915                           ; BSR set to: 0
  1916  0012F6  51C2               	movf	_vfpfcnvrt$1080& (0+255),w,b
  1917  0012F8  11C3               	iorwf	(_vfpfcnvrt$1080+1)& (0+255),w,b
  1918  0012FA  A4D8               	btfss	status,2,c
  1919  0012FC  D7D5               	goto	l6121
  1920  0012FE                     u8000:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1924  0012FE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1925  001302  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1926  001306  CFDE FFF6          	movff	postinc2,tblptrl
  1927  00130A  CFDD FFF7          	movff	postdec2,tblptrh
  1928  00130E                     	if	0	;tblptru may be non-zero
  1929  00130E                     	endif
  1930  00130E                     	if	0	;tblptru may be non-zero
  1931  00130E                     	endif
  1932  00130E  0008               	tblrd		*
  1933  001310  50F5               	movf	tablat,w,c
  1934  001312  6E16               	movwf	tolower@c,c
  1935  001314  6A17               	clrf	tolower@c+1,c
  1936  001316  EC84  F01B         	call	_tolower	;wreg free
  1937  00131A  5016               	movf	?_tolower,w,c
  1938  00131C  0100               	movlb	0	; () banked
  1939  00131E  6FCA               	movwf	vfpfcnvrt@ct& (0+255),b
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1943  001320  51CA               	movf	vfpfcnvrt@ct& (0+255),w,b
  1944  001322  B4D8               	btfsc	status,2,c
  1945  001324  D035               	goto	l6139
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1949  001326  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1950  00132A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1951  00132E  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  1952  001332  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  1953  001336  0E01               	movlw	1
  1954  001338  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  1955  00133A  0E00               	movlw	0
  1956  00133C  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1957  00133E  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1958  001342  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1959  001346                     	if	0	;tblptru may be non-zero
  1960  001346                     	endif
  1961  001346                     	if	0	;tblptru may be non-zero
  1962  001346                     	endif
  1963  001346  0008               	tblrd		*
  1964  001348  50F5               	movf	tablat,w,c
  1965  00134A  6E16               	movwf	tolower@c,c
  1966  00134C  6A17               	clrf	tolower@c+1,c
  1967  00134E  EC84  F01B         	call	_tolower	;wreg free
  1968  001352  5016               	movf	?_tolower,w,c
  1969  001354  0100               	movlb	0	; () banked
  1970  001356  6FCB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1974  001358  51CB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1975  00135A  B4D8               	btfsc	status,2,c
  1976  00135C  D019               	goto	l6139
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1980  00135E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1981  001362  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1982  001366  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  1983  00136A  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  1984  00136E  0E02               	movlw	2
  1985  001370  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  1986  001372  0E00               	movlw	0
  1987  001374  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1988  001376  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1989  00137A  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1990  00137E                     	if	0	;tblptru may be non-zero
  1991  00137E                     	endif
  1992  00137E                     	if	0	;tblptru may be non-zero
  1993  00137E                     	endif
  1994  00137E  0008               	tblrd		*
  1995  001380  50F5               	movf	tablat,w,c
  1996  001382  6E16               	movwf	tolower@c,c
  1997  001384  6A17               	clrf	tolower@c+1,c
  1998  001386  EC84  F01B         	call	_tolower	;wreg free
  1999  00138A  5016               	movf	?_tolower,w,c
  2000  00138C  0100               	movlb	0	; () banked
  2001  00138E  6FCC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2002  001390                     l6139:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2006  001390  0E66               	movlw	102
  2007  001392  19CA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2008  001394  A4D8               	btfss	status,2,c
  2009  001396  D03F               	goto	l6151
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2013  001398  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2014  00139C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2015  0013A0  CFDE FFF6          	movff	postinc2,tblptrl
  2016  0013A4  CFDD FFF7          	movff	postdec2,tblptrh
  2017  0013A8                     	if	0	;tblptru may be non-zero
  2018  0013A8                     	endif
  2019  0013A8                     	if	0	;tblptru may be non-zero
  2020  0013A8                     	endif
  2021  0013A8  0008               	tblrd		*
  2022  0013AA  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2026  0013AE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027  0013B2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028  0013B6  2ADE               	incf	postinc2,f,c
  2029  0013B8  0E00               	movlw	0
  2030  0013BA  22DD               	addwfc	postdec2,f,c
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2034  0013BC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2035  0013C0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2036  0013C4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  2037  0013C8  0E04               	movlw	4
  2038  0013CA  26DE               	addwf	postinc2,f,c
  2039  0013CC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  2040  0013D0  0E00               	movlw	0
  2041  0013D2  22DD               	addwfc	postdec2,f,c
  2042  0013D4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2043  0013D8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2044  0013DC  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f
  2045  0013E0  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+1
  2046  0013E4  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+2
  2047  0013E8  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+3
  2048  0013EC                     l6147:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2052  0013EC  C0B8  F074         	movff	vfpfcnvrt@fp,efgtoa@fp
  2053  0013F0  C0B9  F075         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2054  0013F4  C0C6  F076         	movff	vfpfcnvrt@f,efgtoa@f
  2055  0013F8  C0C7  F077         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2056  0013FC  C0C8  F078         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2057  001400  C0C9  F079         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2058  001404  C0CD  F07A         	movff	vfpfcnvrt@c,efgtoa@c
  2059  001408  EC26  F004         	call	_efgtoa	;wreg free
  2060  00140C  C074  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  2061  001410  C075  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2062  001414  0012               	return	
  2063  001416                     l6151:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2067  001416  0ECA               	movlw	low vfpfcnvrt@ct
  2068  001418  6E10               	movwf	strncmp@_l,c
  2069  00141A  0E00               	movlw	high vfpfcnvrt@ct
  2070  00141C  6E11               	movwf	strncmp@_l+1,c
  2071  00141E  0E48               	movlw	low STR_14
  2072  001420  6E12               	movwf	strncmp@_r,c
  2073  001422  0E08               	movlw	high STR_14
  2074  001424  6E13               	movwf	strncmp@_r+1,c
  2075  001426  0E00               	movlw	0
  2076  001428  6E15               	movwf	strncmp@n+1,c
  2077  00142A  0E02               	movlw	2
  2078  00142C  6E14               	movwf	strncmp@n,c
  2079  00142E  ECAF  F018         	call	_strncmp	;wreg free
  2080  001432  5010               	movf	?_strncmp,w,c
  2081  001434  1011               	iorwf	?_strncmp+1,w,c
  2082  001436  A4D8               	btfss	status,2,c
  2083  001438  D056               	goto	l6167
  2084                           
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2086  00143A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2087  00143E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  001442  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  2089  001446  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  2090  00144A  0E01               	movlw	1
  2091  00144C  0100               	movlb	0	; () banked
  2092  00144E  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  2093  001450  0E00               	movlw	0
  2094  001452  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2095  001454  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2096  001458  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2097  00145C                     	if	0	;tblptru may be non-zero
  2098  00145C                     	endif
  2099  00145C                     	if	0	;tblptru may be non-zero
  2100  00145C                     	endif
  2101  00145C  0008               	tblrd		*
  2102  00145E  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  2103  001462  0EBF               	movlw	191
  2104  001464  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  2105  001466  0EFF               	movlw	255
  2106  001468  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2107  00146A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2108  00146E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2109  001472  CFDE FFF6          	movff	postinc2,tblptrl
  2110  001476  CFDD FFF7          	movff	postdec2,tblptrh
  2111  00147A                     	if	0	;tblptru may be non-zero
  2112  00147A                     	endif
  2113  00147A                     	if	0	;tblptru may be non-zero
  2114  00147A                     	endif
  2115  00147A  0008               	tblrd		*
  2116  00147C  50F5               	movf	tablat,w,c
  2117  00147E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2118  001480  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2119  001482  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  2120  001484  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2121  001486  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2122  001488  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2123  00148A  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2124  00148C  E106               	bnz	u8050
  2125  00148E  0E1A               	movlw	26
  2126  001490  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2127  001492  B0D8               	btfsc	status,0,c
  2128  001494  D002               	goto	u8050
  2129  001496  0E01               	movlw	1
  2130  001498  D001               	goto	u8060
  2131  00149A                     u8050:
  2132  00149A  0E00               	movlw	0
  2133  00149C                     u8060:
  2134  00149C  6FC4               	movwf	_vfpfcnvrt$1084& (0+255),b
  2135  00149E  6BC5               	clrf	(_vfpfcnvrt$1084+1)& (0+255),b
  2136                           
  2137                           ; BSR set to: 0
  2138  0014A0  51C4               	movf	_vfpfcnvrt$1084& (0+255),w,b
  2139  0014A2  11C5               	iorwf	(_vfpfcnvrt$1084+1)& (0+255),w,b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2143                           
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2148  0014A4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2149  0014A8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2150  0014AC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  2151  0014B0  0E04               	movlw	4
  2152  0014B2  26DE               	addwf	postinc2,f,c
  2153  0014B4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  2154  0014B8  0E00               	movlw	0
  2155  0014BA  22DD               	addwfc	postdec2,f,c
  2156  0014BC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2157  0014C0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2158  0014C4  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f
  2159  0014C8  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+1
  2160  0014CC  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+2
  2161  0014D0  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+3
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2167  0014D4  0E02               	movlw	2
  2168  0014D6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  0014DA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  0014DE  26DE               	addwf	postinc2,f,c
  2171  0014E0  0E00               	movlw	0
  2172  0014E2  22DD               	addwfc	postdec2,f,c
  2173  0014E4  D783               	goto	l6147
  2174  0014E6                     l6167:
  2175                           
  2176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2177  0014E6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  0014EA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  2180  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  2181  0014F6                     	if	0	;tblptru may be non-zero
  2182  0014F6                     	endif
  2183  0014F6                     	if	0	;tblptru may be non-zero
  2184  0014F6                     	endif
  2185  0014F6  0008               	tblrd		*
  2186  0014F8  50F5               	movf	tablat,w,c
  2187  0014FA  0A25               	xorlw	37
  2188  0014FC  A4D8               	btfss	status,2,c
  2189  0014FE  D017               	goto	l6177
  2190                           
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2192  001500  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2193  001504  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2194  001508  2ADE               	incf	postinc2,f,c
  2195  00150A  0E00               	movlw	0
  2196  00150C  22DD               	addwfc	postdec2,f,c
  2197                           
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2199  00150E  0E00               	movlw	0
  2200  001510  6E11               	movwf	fputc@c+1,c
  2201  001512  0E25               	movlw	37
  2202  001514  6E10               	movwf	fputc@c,c
  2203  001516  C0B8  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2204  00151A  C0B9  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2205  00151E  EC00  F019         	call	_fputc	;wreg free
  2206  001522                     l6173:
  2207                           
  2208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2209  001522  0E00               	movlw	0
  2210  001524  0100               	movlb	0	; () banked
  2211  001526  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2212  001528  0E01               	movlw	1
  2213  00152A  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  2214  00152C  0012               	return	
  2215  00152E                     l6177:
  2216                           
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2218  00152E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  001532  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  001536  2ADE               	incf	postinc2,f,c
  2221  001538  0E00               	movlw	0
  2222  00153A  22DD               	addwfc	postdec2,f,c
  2223                           
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2225  00153C  0E00               	movlw	0
  2226  00153E  0100               	movlb	0	; () banked
  2227  001540  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2228  001542  0E00               	movlw	0
  2229  001544  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  2230  001546  0012               	return	
  2231  001548                     l6183:
  2232                           
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2234  001548  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  00154C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  001550  CFDE FFF6          	movff	postinc2,tblptrl
  2237  001554  CFDD FFF7          	movff	postdec2,tblptrh
  2238  001558                     	if	0	;tblptru may be non-zero
  2239  001558                     	endif
  2240  001558                     	if	0	;tblptru may be non-zero
  2241  001558                     	endif
  2242  001558  0008               	tblrd		*
  2243  00155A  50F5               	movf	tablat,w,c
  2244  00155C  6E10               	movwf	fputc@c,c
  2245  00155E  6A11               	clrf	fputc@c+1,c
  2246  001560  C0B8  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2247  001564  C0B9  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2248  001568  EC00  F019         	call	_fputc	;wreg free
  2249                           
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2251  00156C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  001570  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  001574  2ADE               	incf	postinc2,f,c
  2254  001576  0E00               	movlw	0
  2255  001578  22DD               	addwfc	postdec2,f,c
  2256  00157A  D7D3               	goto	l6173
  2257  00157C                     __end_of_vfpfcnvrt:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function _strncmp *****************
  2261 ;; Defined at:
  2262 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  _l              2   15[COMRAM] PTR const unsigned char 
  2265 ;;		 -> vfpfcnvrt@ct(3), 
  2266 ;;  _r              2   17[COMRAM] PTR const unsigned char 
  2267 ;;		 -> STR_16(3), 
  2268 ;;  n               2   19[COMRAM] unsigned int 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  r               2   24[COMRAM] PTR const unsigned char 
  2271 ;;		 -> STR_16(3), 
  2272 ;;  l               2   22[COMRAM] PTR const unsigned char 
  2273 ;;		 -> vfpfcnvrt@ct(3), 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2   15[COMRAM] int 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:         6       0       0       0       0       0       0       0       0
  2284 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2286 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2287 ;;Total ram usage:       11 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_vfpfcnvrt
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text4
  2298  00315E                     __ptext4:
  2299                           	opt callstack 0
  2300  00315E                     _strncmp:
  2301                           	opt callstack 25
  2302                           
  2303                           ;incstack = 0
  2304  00315E  C010  F017         	movff	strncmp@_l,strncmp@l
  2305  003162  C011  F018         	movff	strncmp@_l+1,strncmp@l+1
  2306  003166  C012  F019         	movff	strncmp@_r,strncmp@r
  2307  00316A  C013  F01A         	movff	strncmp@_r+1,strncmp@r+1
  2308  00316E  0614               	decf	strncmp@n,f,c
  2309  003170  A0D8               	btfss	status,0,c
  2310  003172  0615               	decf	strncmp@n+1,f,c
  2311  003174  2814               	incf	strncmp@n,w,c
  2312  003176  E10F               	bnz	l6089
  2313  003178  2815               	incf	strncmp@n+1,w,c
  2314  00317A  A4D8               	btfss	status,2,c
  2315  00317C  D00C               	goto	l6089
  2316  00317E  0E00               	movlw	0
  2317  003180  6E11               	movwf	?_strncmp+1,c
  2318  003182  0E00               	movlw	0
  2319  003184  6E10               	movwf	?_strncmp,c
  2320  003186  0012               	return	
  2321  003188                     l6087:
  2322  003188  4A17               	infsnz	strncmp@l,f,c
  2323  00318A  2A18               	incf	strncmp@l+1,f,c
  2324  00318C  4A19               	infsnz	strncmp@r,f,c
  2325  00318E  2A1A               	incf	strncmp@r+1,f,c
  2326  003190  0614               	decf	strncmp@n,f,c
  2327  003192  A0D8               	btfss	status,0,c
  2328  003194  0615               	decf	strncmp@n+1,f,c
  2329  003196                     l6089:
  2330  003196  C017  FFD9         	movff	strncmp@l,fsr2l
  2331  00319A  C018  FFDA         	movff	strncmp@l+1,fsr2h
  2332  00319E  50DF               	movf	indf2,w,c
  2333  0031A0  B4D8               	btfsc	status,2,c
  2334  0031A2  D01C               	goto	u7940
  2335  0031A4  C019  FFF6         	movff	strncmp@r,tblptrl
  2336  0031A8  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  2337  0031AC                     	if	0	;tblptru may be non-zero
  2338  0031AC                     	endif
  2339  0031AC                     	if	0	;tblptru may be non-zero
  2340  0031AC                     	endif
  2341  0031AC  0008               	tblrd		*
  2342  0031AE  50F5               	movf	tablat,w,c
  2343  0031B0  0900               	iorlw	0
  2344  0031B2  B4D8               	btfsc	status,2,c
  2345  0031B4  D013               	goto	u7940
  2346  0031B6  5014               	movf	strncmp@n,w,c
  2347  0031B8  1015               	iorwf	strncmp@n+1,w,c
  2348  0031BA  B4D8               	btfsc	status,2,c
  2349  0031BC  D00F               	goto	u7940
  2350  0031BE  C017  FFD9         	movff	strncmp@l,fsr2l
  2351  0031C2  C018  FFDA         	movff	strncmp@l+1,fsr2h
  2352  0031C6  50DF               	movf	indf2,w,c
  2353  0031C8  6E16               	movwf	??_strncmp& (0+255),c
  2354  0031CA  C019  FFF6         	movff	strncmp@r,tblptrl
  2355  0031CE  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  2356  0031D2                     	if	0	;tblptru may be non-zero
  2357  0031D2                     	endif
  2358  0031D2                     	if	0	;tblptru may be non-zero
  2359  0031D2                     	endif
  2360  0031D2  0008               	tblrd		*
  2361  0031D4  50F5               	movf	tablat,w,c
  2362  0031D6  1816               	xorwf	??_strncmp,w,c
  2363  0031D8  B4D8               	btfsc	status,2,c
  2364  0031DA  D7D6               	goto	l6087
  2365  0031DC                     u7940:
  2366  0031DC  C017  FFD9         	movff	strncmp@l,fsr2l
  2367  0031E0  C018  FFDA         	movff	strncmp@l+1,fsr2h
  2368  0031E4  50DF               	movf	indf2,w,c
  2369  0031E6  6E16               	movwf	??_strncmp& (0+255),c
  2370  0031E8  C019  FFF6         	movff	strncmp@r,tblptrl
  2371  0031EC  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  2372  0031F0                     	if	0	;tblptru may be non-zero
  2373  0031F0                     	endif
  2374  0031F0                     	if	0	;tblptru may be non-zero
  2375  0031F0                     	endif
  2376  0031F0  0008               	tblrd		*
  2377  0031F2  50F5               	movf	tablat,w,c
  2378  0031F4  5C16               	subwf	??_strncmp,w,c
  2379  0031F6  6E10               	movwf	?_strncmp,c
  2380  0031F8  6A11               	clrf	?_strncmp+1,c
  2381  0031FA  A0D8               	btfss	status,0,c
  2382  0031FC  0611               	decf	?_strncmp+1,f,c
  2383  0031FE  0012               	return		;funcret
  2384  003200                     __end_of_strncmp:
  2385                           	opt callstack 0
  2386                           
  2387 ;; *************** function _efgtoa *****************
  2388 ;; Defined at:
  2389 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2392 ;;		 -> sprintf@f(6), 
  2393 ;;  f               4   22[BANK0 ] PTR struct _IO_FILE
  2394 ;;  c               1   26[BANK0 ] unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  u               4   84[BANK0 ] unsigned char 
  2397 ;;  g               4   76[BANK0 ] unsigned char 
  2398 ;;  l               4   70[BANK0 ] unsigned char 
  2399 ;;  h               4   66[BANK0 ] unsigned char 
  2400 ;;  ou              4   32[BANK0 ] unsigned char 
  2401 ;;  n               2   82[BANK0 ] int 
  2402 ;;  e               2   80[BANK0 ] int 
  2403 ;;  i               2   74[BANK0 ] int 
  2404 ;;  w               2   63[BANK0 ] int 
  2405 ;;  p               2   60[BANK0 ] int 
  2406 ;;  sign            2   58[BANK0 ] int 
  2407 ;;  d               2   56[BANK0 ] int 
  2408 ;;  ne              2   54[BANK0 ] int 
  2409 ;;  m               2   52[BANK0 ] int 
  2410 ;;  pp              2   50[BANK0 ] int 
  2411 ;;  t               2   48[BANK0 ] int 
  2412 ;;  mode            1   65[BANK0 ] unsigned char 
  2413 ;;  nmode           1   62[BANK0 ] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2   20[BANK0 ] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         0       7       0       0       0       0       0       0       0
  2424 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2425 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2426 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2427 ;;Total ram usage:       68 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    6
  2430 ;; This function calls:
  2431 ;;		___awdiv
  2432 ;;		___awmod
  2433 ;;		___fladd
  2434 ;;		___fldiv
  2435 ;;		___fleq
  2436 ;;		___flge
  2437 ;;		___flmul
  2438 ;;		___flneg
  2439 ;;		___flsub
  2440 ;;		___fltol
  2441 ;;		___fpclassifyf
  2442 ;;		_floorf
  2443 ;;		_isupper
  2444 ;;		_pad
  2445 ;;		_strcpy
  2446 ;;		_tolower
  2447 ;; This function is called by:
  2448 ;;		_vfpfcnvrt
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text5
  2453  00084C                     __ptext5:
  2454                           	opt callstack 0
  2455  00084C                     _efgtoa:
  2456                           	opt callstack 21
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2459                           
  2460                           ;incstack = 0
  2461  00084C  0E00               	movlw	0
  2462  00084E  0100               	movlb	0	; () banked
  2463  000850  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  2464  000852  0E00               	movlw	0
  2465  000854  6F9A               	movwf	efgtoa@sign& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2469  000856  C076  F0AC         	movff	efgtoa@f,efgtoa@g
  2470  00085A  C077  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  2471  00085E  C078  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  2472  000862  C079  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2476  000866  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  2477  000868  D016               	goto	l5751
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2481  00086A  0E00               	movlw	0
  2482  00086C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  2483  00086E  0E01               	movlw	1
  2484  000870  6F9A               	movwf	efgtoa@sign& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2488  000872  C0AC  F010         	movff	efgtoa@g,___flneg@f1
  2489  000876  C0AD  F011         	movff	efgtoa@g+1,___flneg@f1+1
  2490  00087A  C0AE  F012         	movff	efgtoa@g+2,___flneg@f1+2
  2491  00087E  C0AF  F013         	movff	efgtoa@g+3,___flneg@f1+3
  2492  000882  EC51  F01C         	call	___flneg	;wreg free
  2493  000886  C010  F0AC         	movff	?___flneg,efgtoa@g
  2494  00088A  C011  F0AD         	movff	?___flneg+1,efgtoa@g+1
  2495  00088E  C012  F0AE         	movff	?___flneg+2,efgtoa@g+2
  2496  000892  C013  F0AF         	movff	?___flneg+3,efgtoa@g+3
  2497  000896                     l5751:
  2498                           
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2500  000896  0E00               	movlw	0
  2501  000898  0100               	movlb	0	; () banked
  2502  00089A  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  2503  00089C  0E00               	movlw	0
  2504  00089E  6FB2               	movwf	efgtoa@n& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2508  0008A0  C0F6  F09F         	movff	_width,efgtoa@w
  2509  0008A4  C0F7  F0A0         	movff	_width+1,efgtoa@w+1
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2513  0008A8  519A               	movf	efgtoa@sign& (0+255),w,b
  2514  0008AA  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2515  0008AC  A4D8               	btfss	status,2,c
  2516  0008AE  D002               	goto	u7330
  2517                           
  2518                           ; BSR set to: 0
  2519  0008B0  A448               	btfss	_flags,2,c
  2520  0008B2  D013               	goto	l5771
  2521  0008B4                     u7330:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2525  0008B4  519A               	movf	efgtoa@sign& (0+255),w,b
  2526  0008B6  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2527  0008B8  A4D8               	btfss	status,2,c
  2528  0008BA  D004               	goto	l5763
  2529                           
  2530                           ; BSR set to: 0
  2531  0008BC  0E00               	movlw	0
  2532  0008BE  6F85               	movwf	(_efgtoa$1054+1)& (0+255),b
  2533  0008C0  0E2B               	movlw	43
  2534  0008C2  D003               	goto	L1
  2535  0008C4                     l5763:
  2536                           
  2537                           ; BSR set to: 0
  2538  0008C4  0E00               	movlw	0
  2539  0008C6  6F85               	movwf	(_efgtoa$1054+1)& (0+255),b
  2540  0008C8  0E2D               	movlw	45
  2541  0008CA                     L1:
  2542  0008CA  6F84               	movwf	_efgtoa$1054& (0+255),b
  2543                           
  2544                           ; BSR set to: 0
  2545  0008CC  C084  F182         	movff	_efgtoa$1054,_dbuf
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2549  0008D0  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  2550  0008D2  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2554  0008D4  079F               	decf	efgtoa@w& (0+255),f,b
  2555  0008D6  A0D8               	btfss	status,0,c
  2556  0008D8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  2557  0008DA                     l5771:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2561  0008DA  C0AC  F010         	movff	efgtoa@g,___fpclassifyf@x
  2562  0008DE  C0AD  F011         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2563  0008E2  C0AE  F012         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2564  0008E6  C0AF  F013         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2565  0008EA  EC8F  F017         	call	___fpclassifyf	;wreg free
  2566  0008EE  0410               	decf	?___fpclassifyf,w,c
  2567  0008F0  1011               	iorwf	?___fpclassifyf+1,w,c
  2568  0008F2  A4D8               	btfss	status,2,c
  2569  0008F4  D04C               	goto	l5789
  2570  0008F6  0EBF               	movlw	191
  2571  0008F8  0100               	movlb	0	; () banked
  2572  0008FA  6F7B               	movwf	??_efgtoa& (0+255),b
  2573  0008FC  0EFF               	movlw	255
  2574  0008FE  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  2575  000900  517A               	movf	efgtoa@c& (0+255),w,b
  2576  000902  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  2577  000904  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  2578  000906  517B               	movf	??_efgtoa& (0+255),w,b
  2579  000908  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2580  00090A  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  2581  00090C  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2582  00090E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  2583  000910  E106               	bnz	u7360
  2584  000912  0E1A               	movlw	26
  2585  000914  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2586  000916  B0D8               	btfsc	status,0,c
  2587  000918  D002               	goto	u7360
  2588  00091A  0E01               	movlw	1
  2589  00091C  D001               	goto	u7370
  2590  00091E                     u7360:
  2591  00091E  0E00               	movlw	0
  2592  000920                     u7370:
  2593  000920  6F86               	movwf	_efgtoa$1055& (0+255),b
  2594  000922  6B87               	clrf	(_efgtoa$1055+1)& (0+255),b
  2595                           
  2596                           ; BSR set to: 0
  2597  000924  5186               	movf	_efgtoa$1055& (0+255),w,b
  2598  000926  1187               	iorwf	(_efgtoa$1055+1)& (0+255),w,b
  2599  000928  B4D8               	btfsc	status,2,c
  2600  00092A  D00D               	goto	l5781
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2604  00092C  0E82               	movlw	low _dbuf
  2605  00092E  25B2               	addwf	efgtoa@n& (0+255),w,b
  2606  000930  6E10               	movwf	strcpy@dest,c
  2607  000932  0E01               	movlw	high _dbuf
  2608  000934  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2609  000936  6E11               	movwf	strcpy@dest+1,c
  2610  000938  0E38               	movlw	low STR_6
  2611  00093A  6E12               	movwf	strcpy@src,c
  2612  00093C  0E08               	movlw	high STR_6
  2613  00093E  6E13               	movwf	strcpy@src+1,c
  2614  000940  EC5B  F01B         	call	_strcpy	;wreg free
  2615                           
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2617  000944  D00C               	goto	l5783
  2618  000946                     l5781:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2622  000946  0E82               	movlw	low _dbuf
  2623  000948  25B2               	addwf	efgtoa@n& (0+255),w,b
  2624  00094A  6E10               	movwf	strcpy@dest,c
  2625  00094C  0E01               	movlw	high _dbuf
  2626  00094E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2627  000950  6E11               	movwf	strcpy@dest+1,c
  2628  000952  0E40               	movlw	low STR_7
  2629  000954  6E12               	movwf	strcpy@src,c
  2630  000956  0E08               	movlw	high STR_7
  2631  000958  6E13               	movwf	strcpy@src+1,c
  2632  00095A  EC5B  F01B         	call	_strcpy	;wreg free
  2633  00095E                     l5783:
  2634                           
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2636  00095E  0100               	movlb	0	; () banked
  2637  000960  0EFD               	movlw	253
  2638  000962  279F               	addwf	efgtoa@w& (0+255),f,b
  2639  000964  0EFF               	movlw	255
  2640  000966  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2641  000968                     l5785:
  2642                           
  2643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2644  000968  C074  F020         	movff	efgtoa@fp,pad@fp
  2645  00096C  C075  F021         	movff	efgtoa@fp+1,pad@fp+1
  2646  000970  0E82               	movlw	low _dbuf
  2647  000972  6E22               	movwf	pad@buf,c
  2648  000974  0E01               	movlw	high _dbuf
  2649  000976  6E23               	movwf	pad@buf+1,c
  2650  000978  C09F  F024         	movff	efgtoa@w,pad@p
  2651  00097C  C0A0  F025         	movff	efgtoa@w+1,pad@p+1
  2652  000980  EC50  F019         	call	_pad	;wreg free
  2653  000984  C020  F074         	movff	?_pad,?_efgtoa
  2654  000988  C021  F075         	movff	?_pad+1,?_efgtoa+1
  2655  00098C  0012               	return	
  2656  00098E                     l5789:
  2657                           
  2658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2659  00098E  C0AC  F010         	movff	efgtoa@g,___fpclassifyf@x
  2660  000992  C0AD  F011         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2661  000996  C0AE  F012         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2662  00099A  C0AF  F013         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2663  00099E  EC8F  F017         	call	___fpclassifyf	;wreg free
  2664  0009A2  5010               	movf	?___fpclassifyf,w,c
  2665  0009A4  1011               	iorwf	?___fpclassifyf+1,w,c
  2666  0009A6  A4D8               	btfss	status,2,c
  2667  0009A8  D035               	goto	l5807
  2668  0009AA  0EBF               	movlw	191
  2669  0009AC  0100               	movlb	0	; () banked
  2670  0009AE  6F7B               	movwf	??_efgtoa& (0+255),b
  2671  0009B0  0EFF               	movlw	255
  2672  0009B2  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  2673  0009B4  517A               	movf	efgtoa@c& (0+255),w,b
  2674  0009B6  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  2675  0009B8  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  2676  0009BA  517B               	movf	??_efgtoa& (0+255),w,b
  2677  0009BC  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2678  0009BE  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  2679  0009C0  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2680  0009C2  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  2681  0009C4  E106               	bnz	u7400
  2682  0009C6  0E1A               	movlw	26
  2683  0009C8  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2684  0009CA  B0D8               	btfsc	status,0,c
  2685  0009CC  D002               	goto	u7400
  2686  0009CE  0E01               	movlw	1
  2687  0009D0  D001               	goto	u7410
  2688  0009D2                     u7400:
  2689  0009D2  0E00               	movlw	0
  2690  0009D4                     u7410:
  2691  0009D4  6F88               	movwf	_efgtoa$1060& (0+255),b
  2692  0009D6  6B89               	clrf	(_efgtoa$1060+1)& (0+255),b
  2693                           
  2694                           ; BSR set to: 0
  2695  0009D8  5188               	movf	_efgtoa$1060& (0+255),w,b
  2696  0009DA  1189               	iorwf	(_efgtoa$1060+1)& (0+255),w,b
  2697  0009DC  B4D8               	btfsc	status,2,c
  2698  0009DE  D00D               	goto	l5799
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2702  0009E0  0E82               	movlw	low _dbuf
  2703  0009E2  25B2               	addwf	efgtoa@n& (0+255),w,b
  2704  0009E4  6E10               	movwf	strcpy@dest,c
  2705  0009E6  0E01               	movlw	high _dbuf
  2706  0009E8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2707  0009EA  6E11               	movwf	strcpy@dest+1,c
  2708  0009EC  0E3C               	movlw	low STR_10
  2709  0009EE  6E12               	movwf	strcpy@src,c
  2710  0009F0  0E08               	movlw	high STR_10
  2711  0009F2  6E13               	movwf	strcpy@src+1,c
  2712  0009F4  EC5B  F01B         	call	_strcpy	;wreg free
  2713                           
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2715  0009F8  D7B2               	goto	l5783
  2716  0009FA                     l5799:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2720  0009FA  0E82               	movlw	low _dbuf
  2721  0009FC  25B2               	addwf	efgtoa@n& (0+255),w,b
  2722  0009FE  6E10               	movwf	strcpy@dest,c
  2723  000A00  0E01               	movlw	high _dbuf
  2724  000A02  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2725  000A04  6E11               	movwf	strcpy@dest+1,c
  2726  000A06  0E44               	movlw	low STR_11
  2727  000A08  6E12               	movwf	strcpy@src,c
  2728  000A0A  0E08               	movlw	high STR_11
  2729  000A0C  6E13               	movwf	strcpy@src+1,c
  2730  000A0E  EC5B  F01B         	call	_strcpy	;wreg free
  2731  000A12  D7A5               	goto	l5783
  2732  000A14                     l5807:
  2733                           
  2734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2735  000A14  0E00               	movlw	0
  2736  000A16  0100               	movlb	0	; () banked
  2737  000A18  6FB4               	movwf	efgtoa@u& (0+255),b
  2738  000A1A  0E00               	movlw	0
  2739  000A1C  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  2740  000A1E  0E80               	movlw	128
  2741  000A20  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  2742  000A22  0E3F               	movlw	63
  2743  000A24  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  2744                           
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2746  000A26  0E00               	movlw	0
  2747  000A28  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  2748  000A2A  0E00               	movlw	0
  2749  000A2C  6FB0               	movwf	efgtoa@e& (0+255),b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2753  000A2E  C0AC  F010         	movff	efgtoa@g,___fleq@ff1
  2754  000A32  C0AD  F011         	movff	efgtoa@g+1,___fleq@ff1+1
  2755  000A36  C0AE  F012         	movff	efgtoa@g+2,___fleq@ff1+2
  2756  000A3A  C0AF  F013         	movff	efgtoa@g+3,___fleq@ff1+3
  2757  000A3E  0E00               	movlw	0
  2758  000A40  6E14               	movwf	___fleq@ff2,c
  2759  000A42  0E00               	movlw	0
  2760  000A44  6E15               	movwf	___fleq@ff2+1,c
  2761  000A46  0E00               	movlw	0
  2762  000A48  6E16               	movwf	___fleq@ff2+2,c
  2763  000A4A  0E00               	movlw	0
  2764  000A4C  6E17               	movwf	___fleq@ff2+3,c
  2765  000A4E  EC9B  F019         	call	___fleq	;wreg free
  2766  000A52  A0D8               	btfss	status,0,c
  2767  000A54  D01E               	goto	l5817
  2768  000A56  D076               	goto	u7450
  2769  000A58                     l5813:
  2770                           
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2772  000A58  C0B4  F010         	movff	efgtoa@u,___flmul@b
  2773  000A5C  C0B5  F011         	movff	efgtoa@u+1,___flmul@b+1
  2774  000A60  C0B6  F012         	movff	efgtoa@u+2,___flmul@b+2
  2775  000A64  C0B7  F013         	movff	efgtoa@u+3,___flmul@b+3
  2776  000A68  0E00               	movlw	0
  2777  000A6A  6E14               	movwf	___flmul@a,c
  2778  000A6C  0E00               	movlw	0
  2779  000A6E  6E15               	movwf	___flmul@a+1,c
  2780  000A70  0E20               	movlw	32
  2781  000A72  6E16               	movwf	___flmul@a+2,c
  2782  000A74  0E41               	movlw	65
  2783  000A76  6E17               	movwf	___flmul@a+3,c
  2784  000A78  EC6A  F00C         	call	___flmul	;wreg free
  2785  000A7C  C010  F0B4         	movff	?___flmul,efgtoa@u
  2786  000A80  C011  F0B5         	movff	?___flmul+1,efgtoa@u+1
  2787  000A84  C012  F0B6         	movff	?___flmul+2,efgtoa@u+2
  2788  000A88  C013  F0B7         	movff	?___flmul+3,efgtoa@u+3
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2791  000A8C  0100               	movlb	0	; () banked
  2792  000A8E  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  2793  000A90  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  2794  000A92                     l5817:
  2795                           
  2796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2797  000A92  C0AC  F029         	movff	efgtoa@g,___flge@ff1
  2798  000A96  C0AD  F02A         	movff	efgtoa@g+1,___flge@ff1+1
  2799  000A9A  C0AE  F02B         	movff	efgtoa@g+2,___flge@ff1+2
  2800  000A9E  C0AF  F02C         	movff	efgtoa@g+3,___flge@ff1+3
  2801  000AA2  0E00               	movlw	0
  2802  000AA4  6E14               	movwf	___flmul@a,c
  2803  000AA6  0E00               	movlw	0
  2804  000AA8  6E15               	movwf	___flmul@a+1,c
  2805  000AAA  0E20               	movlw	32
  2806  000AAC  6E16               	movwf	___flmul@a+2,c
  2807  000AAE  0E41               	movlw	65
  2808  000AB0  6E17               	movwf	___flmul@a+3,c
  2809  000AB2  C0B4  F010         	movff	efgtoa@u,___flmul@b
  2810  000AB6  C0B5  F011         	movff	efgtoa@u+1,___flmul@b+1
  2811  000ABA  C0B6  F012         	movff	efgtoa@u+2,___flmul@b+2
  2812  000ABE  C0B7  F013         	movff	efgtoa@u+3,___flmul@b+3
  2813  000AC2  EC6A  F00C         	call	___flmul	;wreg free
  2814  000AC6  C010  F02D         	movff	?___flmul,___flge@ff2
  2815  000ACA  C011  F02E         	movff	?___flmul+1,___flge@ff2+1
  2816  000ACE  C012  F02F         	movff	?___flmul+2,___flge@ff2+2
  2817  000AD2  C013  F030         	movff	?___flmul+3,___flge@ff2+3
  2818  000AD6  ECBF  F016         	call	___flge	;wreg free
  2819  000ADA  A0D8               	btfss	status,0,c
  2820  000ADC  D01F               	goto	l5823
  2821  000ADE  D7BC               	goto	l5813
  2822  000AE0                     l5819:
  2823                           
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2825  000AE0  C0B4  F029         	movff	efgtoa@u,___fldiv@b
  2826  000AE4  C0B5  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  2827  000AE8  C0B6  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  2828  000AEC  C0B7  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  2829  000AF0  0E00               	movlw	0
  2830  000AF2  6E2D               	movwf	___fldiv@a,c
  2831  000AF4  0E00               	movlw	0
  2832  000AF6  6E2E               	movwf	___fldiv@a+1,c
  2833  000AF8  0E20               	movlw	32
  2834  000AFA  6E2F               	movwf	___fldiv@a+2,c
  2835  000AFC  0E41               	movlw	65
  2836  000AFE  6E30               	movwf	___fldiv@a+3,c
  2837  000B00  EC99  F00F         	call	___fldiv	;wreg free
  2838  000B04  C029  F0B4         	movff	?___fldiv,efgtoa@u
  2839  000B08  C02A  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  2840  000B0C  C02B  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  2841  000B10  C02C  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  2842                           
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2844  000B14  0100               	movlb	0	; () banked
  2845  000B16  07B0               	decf	efgtoa@e& (0+255),f,b
  2846  000B18  A0D8               	btfss	status,0,c
  2847  000B1A  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  2848  000B1C                     l5823:
  2849                           
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2851  000B1C  C0AC  F029         	movff	efgtoa@g,___flge@ff1
  2852  000B20  C0AD  F02A         	movff	efgtoa@g+1,___flge@ff1+1
  2853  000B24  C0AE  F02B         	movff	efgtoa@g+2,___flge@ff1+2
  2854  000B28  C0AF  F02C         	movff	efgtoa@g+3,___flge@ff1+3
  2855  000B2C  C0B4  F02D         	movff	efgtoa@u,___flge@ff2
  2856  000B30  C0B5  F02E         	movff	efgtoa@u+1,___flge@ff2+1
  2857  000B34  C0B6  F02F         	movff	efgtoa@u+2,___flge@ff2+2
  2858  000B38  C0B7  F030         	movff	efgtoa@u+3,___flge@ff2+3
  2859  000B3C  ECBF  F016         	call	___flge	;wreg free
  2860  000B40  A0D8               	btfss	status,0,c
  2861  000B42  D7CE               	goto	l5819
  2862  000B44                     u7450:
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2865  000B44  C07A  F016         	movff	efgtoa@c,tolower@c
  2866  000B48  6A17               	clrf	tolower@c+1,c
  2867  000B4A  EC84  F01B         	call	_tolower	;wreg free
  2868  000B4E  5016               	movf	?_tolower,w,c
  2869  000B50  0100               	movlb	0	; () banked
  2870  000B52  6FA1               	movwf	efgtoa@mode& (0+255),b
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2874  000B54  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2878  000B58  0E67               	movlw	103
  2879  000B5A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  2880  000B5C  A4D8               	btfss	status,2,c
  2881  000B5E  D019               	goto	l5839
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2885  000B60  51F8               	movf	_prec& (0+255),w,b
  2886  000B62  11F9               	iorwf	(_prec+1)& (0+255),w,b
  2887  000B64  A4D8               	btfss	status,2,c
  2888  000B66  D004               	goto	l5835
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2892  000B68  0E00               	movlw	0
  2893  000B6A  6FF9               	movwf	(_prec+1)& (0+255),b
  2894  000B6C  0E01               	movlw	1
  2895  000B6E  6FF8               	movwf	_prec& (0+255),b
  2896  000B70                     l5835:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2900  000B70  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  2901  000B72  D005               	goto	u7480
  2902  000B74  51F9               	movf	(_prec+1)& (0+255),w,b
  2903  000B76  E108               	bnz	l288
  2904  000B78  05F8               	decf	_prec& (0+255),w,b
  2905  000B7A  B0D8               	btfsc	status,0,c
  2906  000B7C  D005               	goto	l288
  2907  000B7E                     u7480:
  2908                           
  2909                           ; BSR set to: 0
  2910  000B7E  0E00               	movlw	0
  2911  000B80  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  2912  000B82  0E06               	movlw	6
  2913  000B84  6F9C               	movwf	efgtoa@p& (0+255),b
  2914  000B86  D008               	goto	l5845
  2915  000B88                     l288:
  2916                           
  2917                           ; BSR set to: 0
  2918  000B88  C0F8  F09C         	movff	_prec,efgtoa@p
  2919  000B8C  C0F9  F09D         	movff	_prec+1,efgtoa@p+1
  2920  000B90  D003               	goto	l5845
  2921  000B92                     l5839:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2925  000B92  AFF9               	btfss	(_prec+1)& (0+255),7,b
  2926  000B94  D7F9               	goto	l288
  2927  000B96  D7F3               	goto	u7480
  2928  000B98                     l5845:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2932  000B98  0E67               	movlw	103
  2933  000B9A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  2934  000B9C  A4D8               	btfss	status,2,c
  2935  000B9E  D022               	goto	l5855
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2939  000BA0  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  2940  000BA2  D006               	goto	u7510
  2941  000BA4  0EFC               	movlw	252
  2942  000BA6  5DB0               	subwf	efgtoa@e& (0+255),w,b
  2943  000BA8  0EFF               	movlw	255
  2944  000BAA  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2945  000BAC  A0D8               	btfss	status,0,c
  2946  000BAE  D018               	goto	l5853
  2947  000BB0                     u7510:
  2948                           
  2949                           ; BSR set to: 0
  2950  000BB0  0EFF               	movlw	255
  2951  000BB2  6F7B               	movwf	??_efgtoa& (0+255),b
  2952  000BB4  0EFF               	movlw	255
  2953  000BB6  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  2954  000BB8  C09C  F07D         	movff	efgtoa@p,??_efgtoa+2
  2955  000BBC  C09D  F07E         	movff	efgtoa@p+1,??_efgtoa+3
  2956  000BC0  517B               	movf	??_efgtoa& (0+255),w,b
  2957  000BC2  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2958  000BC4  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  2959  000BC6  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2960  000BC8  51B0               	movf	efgtoa@e& (0+255),w,b
  2961  000BCA  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2962  000BCC  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  2963  000BCE  0A80               	xorlw	128
  2964  000BD0  6F7F               	movwf	(??_efgtoa+4)& (0+255),b
  2965  000BD2  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  2966  000BD4  0A80               	xorlw	128
  2967  000BD6  597F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2968  000BD8  A0D8               	btfss	status,0,c
  2969  000BDA  D002               	goto	l5853
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2973  000BDC  0E66               	movlw	102
  2974  000BDE  D001               	goto	L2
  2975  000BE0                     l5853:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2979  000BE0  0E65               	movlw	101
  2980  000BE2                     L2:
  2981  000BE2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  2982  000BE4                     l5855:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2986  000BE4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  2987  000BE8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2991  000BEC  0E67               	movlw	103
  2992  000BEE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  2993  000BF0  A4D8               	btfss	status,2,c
  2994  000BF2  D005               	goto	u7550
  2995                           
  2996                           ; BSR set to: 0
  2997  000BF4  0E66               	movlw	102
  2998  000BF6  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  2999  000BF8  B4D8               	btfsc	status,2,c
  3000                           
  3001                           ; BSR set to: 0
  3002  000BFA  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3003  000BFC  D002               	goto	l5865
  3004  000BFE                     u7550:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3008  000BFE  4B94               	infsnz	efgtoa@m& (0+255),f,b
  3009  000C00  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  3010  000C02                     l5865:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3014  000C02  0E66               	movlw	102
  3015  000C04  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3016  000C06  A4D8               	btfss	status,2,c
  3017  000C08  D016               	goto	l5875
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3021  000C0A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3022  000C0C  D00C               	goto	l5871
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3026  000C0E  0E00               	movlw	0
  3027  000C10  6FB4               	movwf	efgtoa@u& (0+255),b
  3028  000C12  0E00               	movlw	0
  3029  000C14  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3030  000C16  0E80               	movlw	128
  3031  000C18  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3032  000C1A  0E3F               	movlw	63
  3033  000C1C  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3034                           
  3035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3036  000C1E  0E00               	movlw	0
  3037  000C20  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3038  000C22  0E00               	movlw	0
  3039  000C24  6FB0               	movwf	efgtoa@e& (0+255),b
  3040  000C26                     l5871:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3044  000C26  0E67               	movlw	103
  3045  000C28  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3046  000C2A  B4D8               	btfsc	status,2,c
  3047  000C2C  D004               	goto	l5875
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3051  000C2E  51B0               	movf	efgtoa@e& (0+255),w,b
  3052  000C30  2794               	addwf	efgtoa@m& (0+255),f,b
  3053  000C32  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3054  000C34  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3055  000C36                     l5875:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3059  000C36  0E00               	movlw	0
  3060  000C38  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3061  000C3A  0E00               	movlw	0
  3062  000C3C  6FAA               	movwf	efgtoa@i& (0+255),b
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3066  000C3E  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  3067  000C42  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  3068  000C46  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  3069  000C4A  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3073  000C4E  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  3074  000C52  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3075  000C56  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3076  000C5A  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3079  000C5E  D07B               	goto	l5889
  3080  000C60                     l5881:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3084  000C60  C0A2  F029         	movff	efgtoa@h,___fldiv@b
  3085  000C64  C0A3  F02A         	movff	efgtoa@h+1,___fldiv@b+1
  3086  000C68  C0A4  F02B         	movff	efgtoa@h+2,___fldiv@b+2
  3087  000C6C  C0A5  F02C         	movff	efgtoa@h+3,___fldiv@b+3
  3088  000C70  C0B4  F02D         	movff	efgtoa@u,___fldiv@a
  3089  000C74  C0B5  F02E         	movff	efgtoa@u+1,___fldiv@a+1
  3090  000C78  C0B6  F02F         	movff	efgtoa@u+2,___fldiv@a+2
  3091  000C7C  C0B7  F030         	movff	efgtoa@u+3,___fldiv@a+3
  3092  000C80  EC99  F00F         	call	___fldiv	;wreg free
  3093  000C84  C029  F060         	movff	?___fldiv,floorf@x
  3094  000C88  C02A  F061         	movff	?___fldiv+1,floorf@x+1
  3095  000C8C  C02B  F062         	movff	?___fldiv+2,floorf@x+2
  3096  000C90  C02C  F063         	movff	?___fldiv+3,floorf@x+3
  3097  000C94  ECDD  F010         	call	_floorf	;wreg free
  3098  000C98  C060  F0A6         	movff	?_floorf,efgtoa@l
  3099  000C9C  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3100  000CA0  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3101  000CA4  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3104  000CA8  C0A6  F010         	movff	efgtoa@l,___fltol@f1
  3105  000CAC  C0A7  F011         	movff	efgtoa@l+1,___fltol@f1+1
  3106  000CB0  C0A8  F012         	movff	efgtoa@l+2,___fltol@f1+2
  3107  000CB4  C0A9  F013         	movff	efgtoa@l+3,___fltol@f1+3
  3108  000CB8  ECF5  F017         	call	___fltol	;wreg free
  3109  000CBC  C010  F098         	movff	?___fltol,efgtoa@d
  3110  000CC0  C011  F099         	movff	?___fltol+1,efgtoa@d+1
  3111                           
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3113  000CC4  C0A2  F029         	movff	efgtoa@h,___flsub@b
  3114  000CC8  C0A3  F02A         	movff	efgtoa@h+1,___flsub@b+1
  3115  000CCC  C0A4  F02B         	movff	efgtoa@h+2,___flsub@b+2
  3116  000CD0  C0A5  F02C         	movff	efgtoa@h+3,___flsub@b+3
  3117  000CD4  C0B4  F014         	movff	efgtoa@u,___flmul@a
  3118  000CD8  C0B5  F015         	movff	efgtoa@u+1,___flmul@a+1
  3119  000CDC  C0B6  F016         	movff	efgtoa@u+2,___flmul@a+2
  3120  000CE0  C0B7  F017         	movff	efgtoa@u+3,___flmul@a+3
  3121  000CE4  C0A6  F010         	movff	efgtoa@l,___flmul@b
  3122  000CE8  C0A7  F011         	movff	efgtoa@l+1,___flmul@b+1
  3123  000CEC  C0A8  F012         	movff	efgtoa@l+2,___flmul@b+2
  3124  000CF0  C0A9  F013         	movff	efgtoa@l+3,___flmul@b+3
  3125  000CF4  EC6A  F00C         	call	___flmul	;wreg free
  3126  000CF8  C010  F02D         	movff	?___flmul,___flsub@a
  3127  000CFC  C011  F02E         	movff	?___flmul+1,___flsub@a+1
  3128  000D00  C012  F02F         	movff	?___flmul+2,___flsub@a+2
  3129  000D04  C013  F030         	movff	?___flmul+3,___flsub@a+3
  3130  000D08  ECAA  F01B         	call	___flsub	;wreg free
  3131  000D0C  C029  F0A2         	movff	?___flsub,efgtoa@h
  3132  000D10  C02A  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3133  000D14  C02B  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3134  000D18  C02C  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3135                           
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3137  000D1C  C0B4  F029         	movff	efgtoa@u,___fldiv@b
  3138  000D20  C0B5  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  3139  000D24  C0B6  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  3140  000D28  C0B7  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  3141  000D2C  0E00               	movlw	0
  3142  000D2E  6E2D               	movwf	___fldiv@a,c
  3143  000D30  0E00               	movlw	0
  3144  000D32  6E2E               	movwf	___fldiv@a+1,c
  3145  000D34  0E20               	movlw	32
  3146  000D36  6E2F               	movwf	___fldiv@a+2,c
  3147  000D38  0E41               	movlw	65
  3148  000D3A  6E30               	movwf	___fldiv@a+3,c
  3149  000D3C  EC99  F00F         	call	___fldiv	;wreg free
  3150  000D40  C029  F0B4         	movff	?___fldiv,efgtoa@u
  3151  000D44  C02A  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3152  000D48  C02B  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3153  000D4C  C02C  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3154                           
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3156  000D50  0100               	movlb	0	; () banked
  3157  000D52  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  3158  000D54  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  3159  000D56                     l5889:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3163  000D56  5194               	movf	efgtoa@m& (0+255),w,b
  3164  000D58  5DAA               	subwf	efgtoa@i& (0+255),w,b
  3165  000D5A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  3166  000D5C  0A80               	xorlw	128
  3167  000D5E  6F7B               	movwf	??_efgtoa& (0+255),b
  3168  000D60  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  3169  000D62  0A80               	xorlw	128
  3170  000D64  597B               	subwfb	??_efgtoa& (0+255),w,b
  3171  000D66  A0D8               	btfss	status,0,c
  3172  000D68  D77B               	goto	l5881
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3176  000D6A  C0B4  F010         	movff	efgtoa@u,___flmul@b
  3177  000D6E  C0B5  F011         	movff	efgtoa@u+1,___flmul@b+1
  3178  000D72  C0B6  F012         	movff	efgtoa@u+2,___flmul@b+2
  3179  000D76  C0B7  F013         	movff	efgtoa@u+3,___flmul@b+3
  3180  000D7A  0E00               	movlw	0
  3181  000D7C  6E14               	movwf	___flmul@a,c
  3182  000D7E  0E00               	movlw	0
  3183  000D80  6E15               	movwf	___flmul@a+1,c
  3184  000D82  0EA0               	movlw	160
  3185  000D84  6E16               	movwf	___flmul@a+2,c
  3186  000D86  0E40               	movlw	64
  3187  000D88  6E17               	movwf	___flmul@a+3,c
  3188  000D8A  EC6A  F00C         	call	___flmul	;wreg free
  3189  000D8E  C010  F0A6         	movff	?___flmul,efgtoa@l
  3190  000D92  C011  F0A7         	movff	?___flmul+1,efgtoa@l+1
  3191  000D96  C012  F0A8         	movff	?___flmul+2,efgtoa@l+2
  3192  000D9A  C013  F0A9         	movff	?___flmul+3,efgtoa@l+3
  3193                           
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3195  000D9E  C0A2  F029         	movff	efgtoa@h,___flge@ff1
  3196  000DA2  C0A3  F02A         	movff	efgtoa@h+1,___flge@ff1+1
  3197  000DA6  C0A4  F02B         	movff	efgtoa@h+2,___flge@ff1+2
  3198  000DAA  C0A5  F02C         	movff	efgtoa@h+3,___flge@ff1+3
  3199  000DAE  C0A6  F02D         	movff	efgtoa@l,___flge@ff2
  3200  000DB2  C0A7  F02E         	movff	efgtoa@l+1,___flge@ff2+1
  3201  000DB6  C0A8  F02F         	movff	efgtoa@l+2,___flge@ff2+2
  3202  000DBA  C0A9  F030         	movff	efgtoa@l+3,___flge@ff2+3
  3203  000DBE  ECBF  F016         	call	___flge	;wreg free
  3204  000DC2  B0D8               	btfsc	status,0,c
  3205  000DC4  D003               	goto	l5897
  3206                           
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3208  000DC6  0E00               	movlw	0
  3209  000DC8  0100               	movlb	0	; () banked
  3210  000DCA  D018               	goto	L3
  3211  000DCC                     l5897:
  3212                           
  3213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3214  000DCC  C0A2  F010         	movff	efgtoa@h,___fleq@ff1
  3215  000DD0  C0A3  F011         	movff	efgtoa@h+1,___fleq@ff1+1
  3216  000DD4  C0A4  F012         	movff	efgtoa@h+2,___fleq@ff1+2
  3217  000DD8  C0A5  F013         	movff	efgtoa@h+3,___fleq@ff1+3
  3218  000DDC  C0A6  F014         	movff	efgtoa@l,___fleq@ff2
  3219  000DE0  C0A7  F015         	movff	efgtoa@l+1,___fleq@ff2+1
  3220  000DE4  C0A8  F016         	movff	efgtoa@l+2,___fleq@ff2+2
  3221  000DE8  C0A9  F017         	movff	efgtoa@l+3,___fleq@ff2+3
  3222  000DEC  EC9B  F019         	call	___fleq	;wreg free
  3223  000DF0  A0D8               	btfss	status,0,c
  3224  000DF2  D00B               	goto	l5903
  3225  000DF4  0100               	movlb	0	; () banked
  3226  000DF6  B198               	btfsc	efgtoa@d& (0+255),0,b
  3227  000DF8  D008               	goto	l5903
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3231  000DFA  0E00               	movlw	0
  3232  000DFC                     L3:
  3233  000DFC  6FA6               	movwf	efgtoa@l& (0+255),b
  3234  000DFE  0E00               	movlw	0
  3235  000E00  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  3236  000E02  0E00               	movlw	0
  3237  000E04  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  3238  000E06  0E00               	movlw	0
  3239  000E08  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  3240  000E0A                     l5903:
  3241                           
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3243  000E0A  C0AC  F010         	movff	efgtoa@g,___fladd@b
  3244  000E0E  C0AD  F011         	movff	efgtoa@g+1,___fladd@b+1
  3245  000E12  C0AE  F012         	movff	efgtoa@g+2,___fladd@b+2
  3246  000E16  C0AF  F013         	movff	efgtoa@g+3,___fladd@b+3
  3247  000E1A  C0A6  F014         	movff	efgtoa@l,___fladd@a
  3248  000E1E  C0A7  F015         	movff	efgtoa@l+1,___fladd@a+1
  3249  000E22  C0A8  F016         	movff	efgtoa@l+2,___fladd@a+2
  3250  000E26  C0A9  F017         	movff	efgtoa@l+3,___fladd@a+3
  3251  000E2A  EC13  F00E         	call	___fladd	;wreg free
  3252  000E2E  C010  F0A2         	movff	?___fladd,efgtoa@h
  3253  000E32  C011  F0A3         	movff	?___fladd+1,efgtoa@h+1
  3254  000E36  C012  F0A4         	movff	?___fladd+2,efgtoa@h+2
  3255  000E3A  C013  F0A5         	movff	?___fladd+3,efgtoa@h+3
  3256                           
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3258  000E3E  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  3259  000E42  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  3260  000E46  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  3261  000E4A  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  3262                           
  3263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3264  000E4E  0E65               	movlw	101
  3265  000E50  0100               	movlb	0	; () banked
  3266  000E52  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3267  000E54  B4D8               	btfsc	status,2,c
  3268  000E56  D005               	goto	l5911
  3269                           
  3270                           ; BSR set to: 0
  3271  000E58  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  3272  000E5C  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  3273  000E60  D004               	goto	l314
  3274  000E62                     l5911:
  3275                           
  3276                           ; BSR set to: 0
  3277  000E62  0E00               	movlw	0
  3278  000E64  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  3279  000E66  0E00               	movlw	0
  3280  000E68  6F96               	movwf	efgtoa@ne& (0+255),b
  3281  000E6A                     l314:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3285  000E6A  0E00               	movlw	0
  3286  000E6C  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  3287  000E6E  0E00               	movlw	0
  3288  000E70  6F92               	movwf	efgtoa@pp& (0+255),b
  3289                           
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3291  000E72  0E00               	movlw	0
  3292  000E74  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  3293  000E76  0E00               	movlw	0
  3294  000E78  6F90               	movwf	efgtoa@t& (0+255),b
  3295                           
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3297  000E7A  0E00               	movlw	0
  3298  000E7C  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3299  000E7E  0E00               	movlw	0
  3300  000E80  6FAA               	movwf	efgtoa@i& (0+255),b
  3301                           
  3302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3303  000E82  D0C7               	goto	l5961
  3304  000E84                     l5913:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3308  000E84  C0A2  F029         	movff	efgtoa@h,___fldiv@b
  3309  000E88  C0A3  F02A         	movff	efgtoa@h+1,___fldiv@b+1
  3310  000E8C  C0A4  F02B         	movff	efgtoa@h+2,___fldiv@b+2
  3311  000E90  C0A5  F02C         	movff	efgtoa@h+3,___fldiv@b+3
  3312  000E94  C0B4  F02D         	movff	efgtoa@u,___fldiv@a
  3313  000E98  C0B5  F02E         	movff	efgtoa@u+1,___fldiv@a+1
  3314  000E9C  C0B6  F02F         	movff	efgtoa@u+2,___fldiv@a+2
  3315  000EA0  C0B7  F030         	movff	efgtoa@u+3,___fldiv@a+3
  3316  000EA4  EC99  F00F         	call	___fldiv	;wreg free
  3317  000EA8  C029  F060         	movff	?___fldiv,floorf@x
  3318  000EAC  C02A  F061         	movff	?___fldiv+1,floorf@x+1
  3319  000EB0  C02B  F062         	movff	?___fldiv+2,floorf@x+2
  3320  000EB4  C02C  F063         	movff	?___fldiv+3,floorf@x+3
  3321  000EB8  ECDD  F010         	call	_floorf	;wreg free
  3322  000EBC  C060  F0A6         	movff	?_floorf,efgtoa@l
  3323  000EC0  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3324  000EC4  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3325  000EC8  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3326                           
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3328  000ECC  C0A6  F010         	movff	efgtoa@l,___fltol@f1
  3329  000ED0  C0A7  F011         	movff	efgtoa@l+1,___fltol@f1+1
  3330  000ED4  C0A8  F012         	movff	efgtoa@l+2,___fltol@f1+2
  3331  000ED8  C0A9  F013         	movff	efgtoa@l+3,___fltol@f1+3
  3332  000EDC  ECF5  F017         	call	___fltol	;wreg free
  3333  000EE0  C010  F098         	movff	?___fltol,efgtoa@d
  3334  000EE4  C011  F099         	movff	?___fltol+1,efgtoa@d+1
  3335                           
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3337  000EE8  B848               	btfsc	_flags,4,c
  3338  000EEA  D00D               	goto	l5925
  3339  000EEC  0100               	movlb	0	; () banked
  3340  000EEE  5198               	movf	efgtoa@d& (0+255),w,b
  3341  000EF0  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3342  000EF2  A4D8               	btfss	status,2,c
  3343  000EF4  D008               	goto	l5925
  3344                           
  3345                           ; BSR set to: 0
  3346  000EF6  0E67               	movlw	103
  3347  000EF8  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3348  000EFA  B4D8               	btfsc	status,2,c
  3349                           
  3350                           ; BSR set to: 0
  3351  000EFC  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3352  000EFE  D003               	goto	l5925
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3356  000F00  4B90               	infsnz	efgtoa@t& (0+255),f,b
  3357  000F02  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  3358                           
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3360  000F04  D03A               	goto	l5953
  3361  000F06                     l5925:
  3362                           
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3364  000F06  0100               	movlb	0	; () banked
  3365  000F08  5192               	movf	efgtoa@pp& (0+255),w,b
  3366  000F0A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3367  000F0C  B4D8               	btfsc	status,2,c
  3368                           
  3369                           ; BSR set to: 0
  3370  000F0E  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3371  000F10  D022               	goto	l5945
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3375  000F12  0E82               	movlw	low _dbuf
  3376  000F14  25B2               	addwf	efgtoa@n& (0+255),w,b
  3377  000F16  6ED9               	movwf	fsr2l,c
  3378  000F18  0E01               	movlw	high _dbuf
  3379  000F1A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3380  000F1C  6EDA               	movwf	fsr2h,c
  3381  000F1E  0E2E               	movlw	46
  3382  000F20  6EDF               	movwf	indf2,c
  3383                           
  3384                           ; BSR set to: 0
  3385  000F22  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3386  000F24  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3390  000F26  079F               	decf	efgtoa@w& (0+255),f,b
  3391  000F28  A0D8               	btfss	status,0,c
  3392  000F2A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3396  000F2C  0E00               	movlw	0
  3397  000F2E  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  3398  000F30  0E01               	movlw	1
  3399  000F32  6F92               	movwf	efgtoa@pp& (0+255),b
  3400  000F34  D010               	goto	l5945
  3401  000F36                     l5937:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3405  000F36  0E82               	movlw	low _dbuf
  3406  000F38  25B2               	addwf	efgtoa@n& (0+255),w,b
  3407  000F3A  6ED9               	movwf	fsr2l,c
  3408  000F3C  0E01               	movlw	high _dbuf
  3409  000F3E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3410  000F40  6EDA               	movwf	fsr2h,c
  3411  000F42  0E30               	movlw	48
  3412  000F44  6EDF               	movwf	indf2,c
  3413                           
  3414                           ; BSR set to: 0
  3415  000F46  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3416  000F48  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3420  000F4A  079F               	decf	efgtoa@w& (0+255),f,b
  3421  000F4C  A0D8               	btfss	status,0,c
  3422  000F4E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3426  000F50  0790               	decf	efgtoa@t& (0+255),f,b
  3427  000F52  A0D8               	btfss	status,0,c
  3428  000F54  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  3429  000F56                     l5945:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3433  000F56  5190               	movf	efgtoa@t& (0+255),w,b
  3434  000F58  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3435  000F5A  A4D8               	btfss	status,2,c
  3436  000F5C  D7EC               	goto	l5937
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3440  000F5E  0E82               	movlw	low _dbuf
  3441  000F60  25B2               	addwf	efgtoa@n& (0+255),w,b
  3442  000F62  6ED9               	movwf	fsr2l,c
  3443  000F64  0E01               	movlw	high _dbuf
  3444  000F66  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3445  000F68  6EDA               	movwf	fsr2h,c
  3446  000F6A  5198               	movf	efgtoa@d& (0+255),w,b
  3447  000F6C  0F30               	addlw	48
  3448  000F6E  6EDF               	movwf	indf2,c
  3449                           
  3450                           ; BSR set to: 0
  3451  000F70  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3452  000F72  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3456  000F74  079F               	decf	efgtoa@w& (0+255),f,b
  3457  000F76  A0D8               	btfss	status,0,c
  3458  000F78  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3459  000F7A                     l5953:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3463  000F7A  C0A2  F029         	movff	efgtoa@h,___flsub@b
  3464  000F7E  C0A3  F02A         	movff	efgtoa@h+1,___flsub@b+1
  3465  000F82  C0A4  F02B         	movff	efgtoa@h+2,___flsub@b+2
  3466  000F86  C0A5  F02C         	movff	efgtoa@h+3,___flsub@b+3
  3467  000F8A  C0B4  F014         	movff	efgtoa@u,___flmul@a
  3468  000F8E  C0B5  F015         	movff	efgtoa@u+1,___flmul@a+1
  3469  000F92  C0B6  F016         	movff	efgtoa@u+2,___flmul@a+2
  3470  000F96  C0B7  F017         	movff	efgtoa@u+3,___flmul@a+3
  3471  000F9A  C0A6  F010         	movff	efgtoa@l,___flmul@b
  3472  000F9E  C0A7  F011         	movff	efgtoa@l+1,___flmul@b+1
  3473  000FA2  C0A8  F012         	movff	efgtoa@l+2,___flmul@b+2
  3474  000FA6  C0A9  F013         	movff	efgtoa@l+3,___flmul@b+3
  3475  000FAA  EC6A  F00C         	call	___flmul	;wreg free
  3476  000FAE  C010  F02D         	movff	?___flmul,___flsub@a
  3477  000FB2  C011  F02E         	movff	?___flmul+1,___flsub@a+1
  3478  000FB6  C012  F02F         	movff	?___flmul+2,___flsub@a+2
  3479  000FBA  C013  F030         	movff	?___flmul+3,___flsub@a+3
  3480  000FBE  ECAA  F01B         	call	___flsub	;wreg free
  3481  000FC2  C029  F0A2         	movff	?___flsub,efgtoa@h
  3482  000FC6  C02A  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3483  000FCA  C02B  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3484  000FCE  C02C  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3485                           
  3486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3487  000FD2  C0B4  F029         	movff	efgtoa@u,___fldiv@b
  3488  000FD6  C0B5  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  3489  000FDA  C0B6  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  3490  000FDE  C0B7  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  3491  000FE2  0E00               	movlw	0
  3492  000FE4  6E2D               	movwf	___fldiv@a,c
  3493  000FE6  0E00               	movlw	0
  3494  000FE8  6E2E               	movwf	___fldiv@a+1,c
  3495  000FEA  0E20               	movlw	32
  3496  000FEC  6E2F               	movwf	___fldiv@a+2,c
  3497  000FEE  0E41               	movlw	65
  3498  000FF0  6E30               	movwf	___fldiv@a+3,c
  3499  000FF2  EC99  F00F         	call	___fldiv	;wreg free
  3500  000FF6  C029  F0B4         	movff	?___fldiv,efgtoa@u
  3501  000FFA  C02A  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3502  000FFE  C02B  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3503  001002  C02C  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3504                           
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3506  001006  0100               	movlb	0	; () banked
  3507  001008  0796               	decf	efgtoa@ne& (0+255),f,b
  3508  00100A  A0D8               	btfss	status,0,c
  3509  00100C  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3513  00100E  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  3514  001010  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  3515  001012                     l5961:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3519  001012  5194               	movf	efgtoa@m& (0+255),w,b
  3520  001014  5DAA               	subwf	efgtoa@i& (0+255),w,b
  3521  001016  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  3522  001018  0A80               	xorlw	128
  3523  00101A  6F7B               	movwf	??_efgtoa& (0+255),b
  3524  00101C  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  3525  00101E  0A80               	xorlw	128
  3526  001020  597B               	subwfb	??_efgtoa& (0+255),w,b
  3527  001022  B0D8               	btfsc	status,0,c
  3528  001024  D008               	goto	u7720
  3529                           
  3530                           ; BSR set to: 0
  3531  001026  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3532  001028  D72D               	goto	l5913
  3533  00102A  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  3534  00102C  E104               	bnz	u7720
  3535  00102E  0E4B               	movlw	75
  3536  001030  5DB2               	subwf	efgtoa@n& (0+255),w,b
  3537  001032  A0D8               	btfss	status,0,c
  3538  001034  D727               	goto	l5913
  3539  001036                     u7720:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3543  001036  5192               	movf	efgtoa@pp& (0+255),w,b
  3544  001038  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3545  00103A  B4D8               	btfsc	status,2,c
  3546                           
  3547                           ; BSR set to: 0
  3548  00103C  A848               	btfss	_flags,4,c
  3549  00103E  D00A               	goto	l5973
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3553  001040  0E82               	movlw	low _dbuf
  3554  001042  25B2               	addwf	efgtoa@n& (0+255),w,b
  3555  001044  6ED9               	movwf	fsr2l,c
  3556  001046  0E01               	movlw	high _dbuf
  3557  001048  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3558  00104A  6EDA               	movwf	fsr2h,c
  3559  00104C  0E2E               	movlw	46
  3560  00104E  6EDF               	movwf	indf2,c
  3561                           
  3562                           ; BSR set to: 0
  3563  001050  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3564  001052  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3565  001054                     l5973:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3569  001054  0E82               	movlw	low _dbuf
  3570  001056  25B2               	addwf	efgtoa@n& (0+255),w,b
  3571  001058  6ED9               	movwf	fsr2l,c
  3572  00105A  0E01               	movlw	high _dbuf
  3573  00105C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3574  00105E  6EDA               	movwf	fsr2h,c
  3575  001060  0E00               	movlw	0
  3576  001062  6EDF               	movwf	indf2,c
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3580  001064  0E65               	movlw	101
  3581  001066  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3582  001068  A4D8               	btfss	status,2,c
  3583  00106A  D47E               	goto	l5785
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3587  00106C  0E00               	movlw	0
  3588  00106E  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3589  001070  0E4F               	movlw	79
  3590  001072  6FAA               	movwf	efgtoa@i& (0+255),b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3594  001074  0E82               	movlw	low _dbuf
  3595  001076  25AA               	addwf	efgtoa@i& (0+255),w,b
  3596  001078  6ED9               	movwf	fsr2l,c
  3597  00107A  0E01               	movlw	high _dbuf
  3598  00107C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3599  00107E  6EDA               	movwf	fsr2h,c
  3600  001080  0E00               	movlw	0
  3601  001082  6EDF               	movwf	indf2,c
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3605  001084  0E00               	movlw	0
  3606  001086  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3607  001088  0E00               	movlw	0
  3608  00108A  6F9A               	movwf	efgtoa@sign& (0+255),b
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3612  00108C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3613  00108E  D008               	goto	l5989
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3617  001090  0E00               	movlw	0
  3618  001092  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3619  001094  0E01               	movlw	1
  3620  001096  6F9A               	movwf	efgtoa@sign& (0+255),b
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3624  001098  6DB0               	negf	efgtoa@e& (0+255),b
  3625  00109A  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  3626  00109C  B0D8               	btfsc	status,0,c
  3627  00109E  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3628  0010A0                     l5989:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3632  0010A0  0E00               	movlw	0
  3633  0010A2  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3634  0010A4  0E02               	movlw	2
  3635  0010A6  6F9C               	movwf	efgtoa@p& (0+255),b
  3636                           
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3638  0010A8  D02B               	goto	l6001
  3639  0010AA                     l5991:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3643  0010AA  07AA               	decf	efgtoa@i& (0+255),f,b
  3644  0010AC  A0D8               	btfss	status,0,c
  3645  0010AE  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3649  0010B0  0E82               	movlw	low _dbuf
  3650  0010B2  25AA               	addwf	efgtoa@i& (0+255),w,b
  3651  0010B4  6ED9               	movwf	fsr2l,c
  3652  0010B6  0E01               	movlw	high _dbuf
  3653  0010B8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3654  0010BA  6EDA               	movwf	fsr2h,c
  3655  0010BC  C0B0  F010         	movff	efgtoa@e,___awmod@dividend
  3656  0010C0  C0B1  F011         	movff	efgtoa@e+1,___awmod@dividend+1
  3657  0010C4  0E00               	movlw	0
  3658  0010C6  6E13               	movwf	___awmod@divisor+1,c
  3659  0010C8  0E0A               	movlw	10
  3660  0010CA  6E12               	movwf	___awmod@divisor,c
  3661  0010CC  EC97  F01A         	call	___awmod	;wreg free
  3662  0010D0  5010               	movf	?___awmod,w,c
  3663  0010D2  0F30               	addlw	48
  3664  0010D4  6EDF               	movwf	indf2,c
  3665                           
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3667  0010D6  C0B0  F010         	movff	efgtoa@e,___awdiv@dividend
  3668  0010DA  C0B1  F011         	movff	efgtoa@e+1,___awdiv@dividend+1
  3669  0010DE  0E00               	movlw	0
  3670  0010E0  6E13               	movwf	___awdiv@divisor+1,c
  3671  0010E2  0E0A               	movlw	10
  3672  0010E4  6E12               	movwf	___awdiv@divisor,c
  3673  0010E6  ECE0  F019         	call	___awdiv	;wreg free
  3674  0010EA  C010  F0B0         	movff	?___awdiv,efgtoa@e
  3675  0010EE  C011  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  3676                           
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3678  0010F2  0100               	movlb	0	; () banked
  3679  0010F4  079C               	decf	efgtoa@p& (0+255),f,b
  3680  0010F6  A0D8               	btfss	status,0,c
  3681  0010F8  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3685  0010FA  079F               	decf	efgtoa@w& (0+255),f,b
  3686  0010FC  A0D8               	btfss	status,0,c
  3687  0010FE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3688  001100                     l6001:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3692  001100  51B0               	movf	efgtoa@e& (0+255),w,b
  3693  001102  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3694  001104  A4D8               	btfss	status,2,c
  3695  001106  D7D1               	goto	l5991
  3696                           
  3697                           ; BSR set to: 0
  3698  001108  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3699  00110A  D005               	goto	u7780
  3700  00110C  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  3701  00110E  E1CD               	bnz	l5991
  3702  001110  059C               	decf	efgtoa@p& (0+255),w,b
  3703  001112  B0D8               	btfsc	status,0,c
  3704  001114  D7CA               	goto	l5991
  3705  001116                     u7780:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3709  001116  07AA               	decf	efgtoa@i& (0+255),f,b
  3710  001118  A0D8               	btfss	status,0,c
  3711  00111A  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3715  00111C  519A               	movf	efgtoa@sign& (0+255),w,b
  3716  00111E  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3717  001120  A4D8               	btfss	status,2,c
  3718  001122  D004               	goto	l6011
  3719                           
  3720                           ; BSR set to: 0
  3721  001124  0E00               	movlw	0
  3722  001126  6F8B               	movwf	(_efgtoa$1064+1)& (0+255),b
  3723  001128  0E2B               	movlw	43
  3724  00112A  D003               	goto	L4
  3725  00112C                     l6011:
  3726                           
  3727                           ; BSR set to: 0
  3728  00112C  0E00               	movlw	0
  3729  00112E  6F8B               	movwf	(_efgtoa$1064+1)& (0+255),b
  3730  001130  0E2D               	movlw	45
  3731  001132                     L4:
  3732  001132  6F8A               	movwf	_efgtoa$1064& (0+255),b
  3733                           
  3734                           ; BSR set to: 0
  3735  001134  0E82               	movlw	low _dbuf
  3736  001136  25AA               	addwf	efgtoa@i& (0+255),w,b
  3737  001138  6ED9               	movwf	fsr2l,c
  3738  00113A  0E01               	movlw	high _dbuf
  3739  00113C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3740  00113E  6EDA               	movwf	fsr2h,c
  3741  001140  C08A  FFDF         	movff	_efgtoa$1064,indf2
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3745  001144  079F               	decf	efgtoa@w& (0+255),f,b
  3746  001146  A0D8               	btfss	status,0,c
  3747  001148  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3751  00114A  07AA               	decf	efgtoa@i& (0+255),f,b
  3752  00114C  A0D8               	btfss	status,0,c
  3753  00114E  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  3754                           
  3755                           ; BSR set to: 0
  3756  001150  0EBF               	movlw	191
  3757  001152  6F7B               	movwf	??_efgtoa& (0+255),b
  3758  001154  0EFF               	movlw	255
  3759  001156  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  3760  001158  517A               	movf	efgtoa@c& (0+255),w,b
  3761  00115A  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  3762  00115C  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  3763  00115E  517B               	movf	??_efgtoa& (0+255),w,b
  3764  001160  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3765  001162  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  3766  001164  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3767  001166  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  3768  001168  E106               	bnz	u7800
  3769  00116A  0E1A               	movlw	26
  3770  00116C  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3771  00116E  B0D8               	btfsc	status,0,c
  3772  001170  D002               	goto	u7800
  3773  001172  0E01               	movlw	1
  3774  001174  D001               	goto	u7810
  3775  001176                     u7800:
  3776  001176  0E00               	movlw	0
  3777  001178                     u7810:
  3778  001178  6F8E               	movwf	_efgtoa$1066& (0+255),b
  3779  00117A  6B8F               	clrf	(_efgtoa$1066+1)& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782  00117C  518E               	movf	_efgtoa$1066& (0+255),w,b
  3783  00117E  118F               	iorwf	(_efgtoa$1066+1)& (0+255),w,b
  3784  001180  A4D8               	btfss	status,2,c
  3785  001182  D004               	goto	l6027
  3786                           
  3787                           ; BSR set to: 0
  3788  001184  0E00               	movlw	0
  3789  001186  6F8D               	movwf	(_efgtoa$1065+1)& (0+255),b
  3790  001188  0E65               	movlw	101
  3791  00118A  D003               	goto	L5
  3792  00118C                     l6027:
  3793                           
  3794                           ; BSR set to: 0
  3795  00118C  0E00               	movlw	0
  3796  00118E  6F8D               	movwf	(_efgtoa$1065+1)& (0+255),b
  3797  001190  0E45               	movlw	69
  3798  001192                     L5:
  3799  001192  6F8C               	movwf	_efgtoa$1065& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802  001194  0E82               	movlw	low _dbuf
  3803  001196  25AA               	addwf	efgtoa@i& (0+255),w,b
  3804  001198  6ED9               	movwf	fsr2l,c
  3805  00119A  0E01               	movlw	high _dbuf
  3806  00119C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3807  00119E  6EDA               	movwf	fsr2h,c
  3808  0011A0  C08C  FFDF         	movff	_efgtoa$1065,indf2
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3812  0011A4  079F               	decf	efgtoa@w& (0+255),f,b
  3813  0011A6  A0D8               	btfss	status,0,c
  3814  0011A8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3818  0011AA  0E82               	movlw	low _dbuf
  3819  0011AC  25B2               	addwf	efgtoa@n& (0+255),w,b
  3820  0011AE  6E10               	movwf	strcpy@dest,c
  3821  0011B0  0E01               	movlw	high _dbuf
  3822  0011B2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3823  0011B4  6E11               	movwf	strcpy@dest+1,c
  3824  0011B6  0E82               	movlw	low _dbuf
  3825  0011B8  25AA               	addwf	efgtoa@i& (0+255),w,b
  3826  0011BA  6E12               	movwf	strcpy@src,c
  3827  0011BC  0E01               	movlw	high _dbuf
  3828  0011BE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3829  0011C0  6E13               	movwf	strcpy@src+1,c
  3830  0011C2  EC5B  F01B         	call	_strcpy	;wreg free
  3831  0011C6  EFB4  F004         	goto	l5785
  3832  0011CA                     __end_of_efgtoa:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _tolower *****************
  3836 ;; Defined at:
  3837 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  c               2   21[COMRAM] int 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2   21[COMRAM] int 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        8 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    3
  3858 ;; This function calls:
  3859 ;;		_isupper
  3860 ;; This function is called by:
  3861 ;;		_efgtoa
  3862 ;;		_vfpfcnvrt
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text6
  3867  003708                     __ptext6:
  3868                           	opt callstack 0
  3869  003708                     _tolower:
  3870                           	opt callstack 24
  3871                           
  3872                           ;incstack = 0
  3873  003708  0EBF               	movlw	191
  3874  00370A  6E18               	movwf	??_tolower& (0+255),c
  3875  00370C  0EFF               	movlw	255
  3876  00370E  6E19               	movwf	(??_tolower+1)& (0+255),c
  3877  003710  C016  F01A         	movff	tolower@c,??_tolower+2
  3878  003714  C017  F01B         	movff	tolower@c+1,??_tolower+3
  3879  003718  5018               	movf	??_tolower,w,c
  3880  00371A  261A               	addwf	??_tolower+2,f,c
  3881  00371C  5019               	movf	??_tolower+1,w,c
  3882  00371E  221B               	addwfc	??_tolower+3,f,c
  3883  003720  501B               	movf	??_tolower+3,w,c
  3884  003722  E106               	bnz	u6440
  3885  003724  0E1A               	movlw	26
  3886  003726  5C1A               	subwf	??_tolower+2,w,c
  3887  003728  B0D8               	btfsc	status,0,c
  3888  00372A  D002               	goto	u6440
  3889  00372C  0E01               	movlw	1
  3890  00372E  D001               	goto	u6450
  3891  003730                     u6440:
  3892  003730  0E00               	movlw	0
  3893  003732                     u6450:
  3894  003732  6E1C               	movwf	_tolower$1671,c
  3895  003734  6A1D               	clrf	_tolower$1671+1,c
  3896  003736  501C               	movf	_tolower$1671,w,c
  3897  003738  101D               	iorwf	_tolower$1671+1,w,c
  3898  00373A  B4D8               	btfsc	status,2,c
  3899  00373C  D006               	goto	l1179
  3900  00373E  0E20               	movlw	32
  3901  003740  1016               	iorwf	tolower@c,w,c
  3902  003742  6E16               	movwf	?_tolower,c
  3903  003744  5017               	movf	tolower@c+1,w,c
  3904  003746  6E17               	movwf	?_tolower+1,c
  3905  003748  0012               	return	
  3906  00374A                     l1179:
  3907  00374A  C016  F016         	movff	tolower@c,?_tolower
  3908  00374E  C017  F017         	movff	tolower@c+1,?_tolower+1
  3909  003752  0012               	return		;funcret
  3910  003754                     __end_of_tolower:
  3911                           	opt callstack 0
  3912                           
  3913 ;; *************** function _isupper *****************
  3914 ;; Defined at:
  3915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  c               2   15[COMRAM] int 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2   15[COMRAM] int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         2       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        6 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    2
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_efgtoa
  3940 ;;		_vfpfcnvrt
  3941 ;;		_tolower
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text7
  3946  003842                     __ptext7:
  3947                           	opt callstack 0
  3948  003842                     _isupper:
  3949                           	opt callstack 24
  3950                           
  3951                           ;incstack = 0
  3952  003842  0EBF               	movlw	191
  3953  003844  6E12               	movwf	??_isupper& (0+255),c
  3954  003846  0EFF               	movlw	255
  3955  003848  6E13               	movwf	(??_isupper+1)& (0+255),c
  3956  00384A  C010  F014         	movff	isupper@c,??_isupper+2
  3957  00384E  C011  F015         	movff	isupper@c+1,??_isupper+3
  3958  003852  5012               	movf	??_isupper,w,c
  3959  003854  2614               	addwf	??_isupper+2,f,c
  3960  003856  5013               	movf	??_isupper+1,w,c
  3961  003858  2215               	addwfc	??_isupper+3,f,c
  3962  00385A  5015               	movf	??_isupper+3,w,c
  3963  00385C  E106               	bnz	u5900
  3964  00385E  0E1A               	movlw	26
  3965  003860  5C14               	subwf	??_isupper+2,w,c
  3966  003862  B0D8               	btfsc	status,0,c
  3967  003864  D002               	goto	u5900
  3968  003866  0E01               	movlw	1
  3969  003868  D001               	goto	u5910
  3970  00386A                     u5900:
  3971  00386A  0E00               	movlw	0
  3972  00386C                     u5910:
  3973  00386C  6E10               	movwf	?_isupper,c
  3974  00386E  6A11               	clrf	?_isupper+1,c
  3975  003870  0012               	return		;funcret
  3976  003872                     __end_of_isupper:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function _strcpy *****************
  3980 ;; Defined at:
  3981 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  dest            2   15[COMRAM] PTR unsigned char 
  3984 ;;		 -> dbuf(80), 
  3985 ;;  src             2   17[COMRAM] PTR const unsigned char 
  3986 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  3987 ;;		 -> dbuf(80), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  d               2   23[COMRAM] PTR unsigned char 
  3990 ;;		 -> dbuf(80), 
  3991 ;;  s               2   21[COMRAM] PTR const unsigned char 
  3992 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  3993 ;;		 -> dbuf(80), 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2   15[COMRAM] PTR unsigned char 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4003 ;;      Params:         4       0       0       0       0       0       0       0       0
  4004 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4005 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4006 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4007 ;;Total ram usage:       10 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    2
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_efgtoa
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text8
  4018  0036B6                     __ptext8:
  4019                           	opt callstack 0
  4020  0036B6                     _strcpy:
  4021                           	opt callstack 24
  4022                           
  4023                           ;incstack = 0
  4024  0036B6  C012  F016         	movff	strcpy@src,strcpy@s
  4025  0036BA  C013  F017         	movff	strcpy@src+1,strcpy@s+1
  4026  0036BE  C010  F018         	movff	strcpy@dest,strcpy@d
  4027  0036C2  C011  F019         	movff	strcpy@dest+1,strcpy@d+1
  4028  0036C6                     l5235:
  4029  0036C6  5016               	movf	strcpy@s,w,c
  4030  0036C8  6E14               	movwf	??_strcpy& (0+255),c
  4031  0036CA  5017               	movf	strcpy@s+1,w,c
  4032  0036CC  6E15               	movwf	(??_strcpy+1)& (0+255),c
  4033  0036CE  4A16               	infsnz	strcpy@s,f,c
  4034  0036D0  2A17               	incf	strcpy@s+1,f,c
  4035  0036D2  C014  FFF6         	movff	??_strcpy,tblptrl
  4036  0036D6  C015  FFF7         	movff	??_strcpy+1,tblptrh
  4037  0036DA  6AF8               	clrf	tblptru,c
  4038  0036DC  C018  FFD9         	movff	strcpy@d,fsr2l
  4039  0036E0  C019  FFDA         	movff	strcpy@d+1,fsr2h
  4040  0036E4  4A18               	infsnz	strcpy@d,f,c
  4041  0036E6  2A19               	incf	strcpy@d+1,f,c
  4042  0036E8  0E07               	movlw	(high __ramtop+-1)
  4043  0036EA  64F7               	cpfsgt	tblptrh,c
  4044  0036EC  D003               	bra	u6427
  4045  0036EE  0008               	tblrd		*
  4046  0036F0  50F5               	movf	tablat,w,c
  4047  0036F2  D005               	bra	u6420
  4048  0036F4                     u6427:
  4049  0036F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4050  0036F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4051  0036FC  50E7               	movf	indf1,w,c
  4052  0036FE                     u6420:
  4053  0036FE  6EDF               	movwf	indf2,c
  4054  003700  50DF               	movf	indf2,w,c
  4055  003702  B4D8               	btfsc	status,2,c
  4056  003704  0012               	return	
  4057  003706  D7DF               	goto	l5235
  4058  003708                     __end_of_strcpy:
  4059                           	opt callstack 0
  4060                           
  4061 ;; *************** function _pad *****************
  4062 ;; Defined at:
  4063 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4066 ;;		 -> sprintf@f(6), 
  4067 ;;  buf             2   33[COMRAM] PTR unsigned char 
  4068 ;;		 -> dbuf(80), 
  4069 ;;  p               2   35[COMRAM] int 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  w               2   40[COMRAM] int 
  4072 ;;  i               2   38[COMRAM] int 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2   31[COMRAM] int 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4082 ;;      Params:         6       0       0       0       0       0       0       0       0
  4083 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4085 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4086 ;;Total ram usage:       11 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    5
  4089 ;; This function calls:
  4090 ;;		_fputc
  4091 ;;		_fputs
  4092 ;;		_strlen
  4093 ;; This function is called by:
  4094 ;;		_efgtoa
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text9
  4099  0032A0                     __ptext9:
  4100                           	opt callstack 0
  4101  0032A0                     _pad:
  4102                           	opt callstack 21
  4103                           
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4105                           
  4106                           ;incstack = 0
  4107  0032A0  A048               	btfss	_flags,0,c
  4108  0032A2  D00A               	goto	l5193
  4109                           
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4111  0032A4  C022  F019         	movff	pad@buf,fputs@s
  4112  0032A8  C023  F01A         	movff	pad@buf+1,fputs@s+1
  4113  0032AC  C020  F01B         	movff	pad@fp,fputs@fp
  4114  0032B0  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  4115  0032B4  ECEC  F01B         	call	_fputs	;wreg free
  4116  0032B8                     l5193:
  4117                           
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4119  0032B8  BE25               	btfsc	pad@p+1,7,c
  4120  0032BA  D005               	goto	l5197
  4121  0032BC  C024  F029         	movff	pad@p,pad@w
  4122  0032C0  C025  F02A         	movff	pad@p+1,pad@w+1
  4123  0032C4  D004               	goto	l247
  4124  0032C6                     l5197:
  4125  0032C6  0E00               	movlw	0
  4126  0032C8  6E2A               	movwf	pad@w+1,c
  4127  0032CA  0E00               	movlw	0
  4128  0032CC  6E29               	movwf	pad@w,c
  4129  0032CE                     l247:
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4132  0032CE  0E00               	movlw	0
  4133  0032D0  6E28               	movwf	pad@i+1,c
  4134  0032D2  0E00               	movlw	0
  4135  0032D4  6E27               	movwf	pad@i,c
  4136                           
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4138  0032D6  D00C               	goto	l5203
  4139  0032D8                     l5199:
  4140                           
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4142  0032D8  0E00               	movlw	0
  4143  0032DA  6E11               	movwf	fputc@c+1,c
  4144  0032DC  0E20               	movlw	32
  4145  0032DE  6E10               	movwf	fputc@c,c
  4146  0032E0  C020  F012         	movff	pad@fp,fputc@fp
  4147  0032E4  C021  F013         	movff	pad@fp+1,fputc@fp+1
  4148  0032E8  EC00  F019         	call	_fputc	;wreg free
  4149                           
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4151  0032EC  4A27               	infsnz	pad@i,f,c
  4152  0032EE  2A28               	incf	pad@i+1,f,c
  4153  0032F0                     l5203:
  4154                           
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4156  0032F0  5029               	movf	pad@w,w,c
  4157  0032F2  5C27               	subwf	pad@i,w,c
  4158  0032F4  5028               	movf	pad@i+1,w,c
  4159  0032F6  0A80               	xorlw	128
  4160  0032F8  6E26               	movwf	??_pad& (0+255),c
  4161  0032FA  502A               	movf	pad@w+1,w,c
  4162  0032FC  0A80               	xorlw	128
  4163  0032FE  5826               	subwfb	??_pad& (0+255),w,c
  4164  003300  A0D8               	btfss	status,0,c
  4165  003302  D7EA               	goto	l5199
  4166                           
  4167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4168  003304  B048               	btfsc	_flags,0,c
  4169  003306  D00A               	goto	l5207
  4170                           
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4172  003308  C022  F019         	movff	pad@buf,fputs@s
  4173  00330C  C023  F01A         	movff	pad@buf+1,fputs@s+1
  4174  003310  C020  F01B         	movff	pad@fp,fputs@fp
  4175  003314  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  4176  003318  ECEC  F01B         	call	_fputs	;wreg free
  4177  00331C                     l5207:
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4180  00331C  C022  F010         	movff	pad@buf,strlen@s
  4181  003320  C023  F011         	movff	pad@buf+1,strlen@s+1
  4182  003324  EC68  F01C         	call	_strlen	;wreg free
  4183  003328  5029               	movf	pad@w,w,c
  4184  00332A  2410               	addwf	?_strlen,w,c
  4185  00332C  6E20               	movwf	?_pad,c
  4186  00332E  502A               	movf	pad@w+1,w,c
  4187  003330  2011               	addwfc	?_strlen+1,w,c
  4188  003332  6E21               	movwf	?_pad+1,c
  4189  003334  0012               	return		;funcret
  4190  003336                     __end_of_pad:
  4191                           	opt callstack 0
  4192                           
  4193 ;; *************** function _strlen *****************
  4194 ;; Defined at:
  4195 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4198 ;;		 -> dbuf(80), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  a               2   17[COMRAM] PTR const unsigned char 
  4201 ;;		 -> dbuf(80), 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  2   15[COMRAM] unsigned int 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4211 ;;      Params:         2       0       0       0       0       0       0       0       0
  4212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4214 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4215 ;;Total ram usage:        4 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    2
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_pad
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text10
  4226  0038D0                     __ptext10:
  4227                           	opt callstack 0
  4228  0038D0                     _strlen:
  4229                           	opt callstack 23
  4230                           
  4231                           ;incstack = 0
  4232  0038D0  C010  F012         	movff	strlen@s,strlen@a
  4233  0038D4  C011  F013         	movff	strlen@s+1,strlen@a+1
  4234  0038D8  D002               	goto	l4977
  4235  0038DA                     l4975:
  4236  0038DA  4A10               	infsnz	strlen@s,f,c
  4237  0038DC  2A11               	incf	strlen@s+1,f,c
  4238  0038DE                     l4977:
  4239  0038DE  C010  FFD9         	movff	strlen@s,fsr2l
  4240  0038E2  C011  FFDA         	movff	strlen@s+1,fsr2h
  4241  0038E6  50DF               	movf	indf2,w,c
  4242  0038E8  A4D8               	btfss	status,2,c
  4243  0038EA  D7F7               	goto	l4975
  4244  0038EC  5012               	movf	strlen@a,w,c
  4245  0038EE  5C10               	subwf	strlen@s,w,c
  4246  0038F0  6E10               	movwf	?_strlen,c
  4247  0038F2  5013               	movf	strlen@a+1,w,c
  4248  0038F4  5811               	subwfb	strlen@s+1,w,c
  4249  0038F6  6E11               	movwf	?_strlen+1,c
  4250  0038F8  0012               	return		;funcret
  4251  0038FA                     __end_of_strlen:
  4252                           	opt callstack 0
  4253                           
  4254 ;; *************** function _fputs *****************
  4255 ;; Defined at:
  4256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  s               2   24[COMRAM] PTR const unsigned char 
  4259 ;;		 -> dbuf(80), 
  4260 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  4261 ;;		 -> sprintf@f(6), 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  i               2   29[COMRAM] int 
  4264 ;;  c               1   28[COMRAM] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2   24[COMRAM] int 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4274 ;;      Params:         4       0       0       0       0       0       0       0       0
  4275 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4277 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        7 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    4
  4281 ;; This function calls:
  4282 ;;		_fputc
  4283 ;; This function is called by:
  4284 ;;		_pad
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text11
  4289  0037D8                     __ptext11:
  4290                           	opt callstack 0
  4291  0037D8                     _fputs:
  4292                           	opt callstack 21
  4293                           
  4294                           ;incstack = 0
  4295  0037D8  0E00               	movlw	0
  4296  0037DA  6E1F               	movwf	fputs@i+1,c
  4297  0037DC  0E00               	movlw	0
  4298  0037DE  6E1E               	movwf	fputs@i,c
  4299  0037E0  D00B               	goto	l4971
  4300  0037E2                     l4967:
  4301  0037E2  C01D  F010         	movff	fputs@c,fputc@c
  4302  0037E6  6A11               	clrf	fputc@c+1,c
  4303  0037E8  C01B  F012         	movff	fputs@fp,fputc@fp
  4304  0037EC  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
  4305  0037F0  EC00  F019         	call	_fputc	;wreg free
  4306  0037F4  4A1E               	infsnz	fputs@i,f,c
  4307  0037F6  2A1F               	incf	fputs@i+1,f,c
  4308  0037F8                     l4971:
  4309  0037F8  501E               	movf	fputs@i,w,c
  4310  0037FA  2419               	addwf	fputs@s,w,c
  4311  0037FC  6ED9               	movwf	fsr2l,c
  4312  0037FE  501F               	movf	fputs@i+1,w,c
  4313  003800  201A               	addwfc	fputs@s+1,w,c
  4314  003802  6EDA               	movwf	fsr2h,c
  4315  003804  50DF               	movf	indf2,w,c
  4316  003806  6E1D               	movwf	fputs@c,c
  4317  003808  501D               	movf	fputs@c,w,c
  4318  00380A  B4D8               	btfsc	status,2,c
  4319  00380C  0012               	return	
  4320  00380E  D7E9               	goto	l4967
  4321  003810                     __end_of_fputs:
  4322                           	opt callstack 0
  4323                           
  4324 ;; *************** function _fputc *****************
  4325 ;; Defined at:
  4326 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  c               2   15[COMRAM] int 
  4329 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4330 ;;		 -> sprintf@f(6), 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  2   15[COMRAM] int 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:         4       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4345 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:        9 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    3
  4349 ;; This function calls:
  4350 ;;		_putch
  4351 ;; This function is called by:
  4352 ;;		_pad
  4353 ;;		_vfpfcnvrt
  4354 ;;		_fputs
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text12
  4359  003200                     __ptext12:
  4360                           	opt callstack 0
  4361  003200                     _fputc:
  4362                           	opt callstack 24
  4363                           
  4364                           ;incstack = 0
  4365  003200  5012               	movf	fputc@fp,w,c
  4366  003202  1013               	iorwf	fputc@fp+1,w,c
  4367  003204  B4D8               	btfsc	status,2,c
  4368  003206  D004               	goto	u5850
  4369  003208  5012               	movf	fputc@fp,w,c
  4370  00320A  1013               	iorwf	fputc@fp+1,w,c
  4371  00320C  A4D8               	btfss	status,2,c
  4372  00320E  D004               	goto	l4957
  4373  003210                     u5850:
  4374  003210  5010               	movf	fputc@c,w,c
  4375  003212  ECAD  F01C         	call	_putch
  4376  003216  0012               	return	
  4377  003218                     l4957:
  4378  003218  EE20 F004          	lfsr	2,4
  4379  00321C  5012               	movf	fputc@fp,w,c
  4380  00321E  26D9               	addwf	fsr2l,f,c
  4381  003220  5013               	movf	fputc@fp+1,w,c
  4382  003222  22DA               	addwfc	fsr2h,f,c
  4383  003224  50DE               	movf	postinc2,w,c
  4384  003226  10DE               	iorwf	postinc2,w,c
  4385  003228  B4D8               	btfsc	status,2,c
  4386  00322A  D016               	goto	u5870
  4387  00322C  EE20 F004          	lfsr	2,4
  4388  003230  5012               	movf	fputc@fp,w,c
  4389  003232  26D9               	addwf	fsr2l,f,c
  4390  003234  5013               	movf	fputc@fp+1,w,c
  4391  003236  22DA               	addwfc	fsr2h,f,c
  4392  003238  EE10 F002          	lfsr	1,2
  4393  00323C  5012               	movf	fputc@fp,w,c
  4394  00323E  26E1               	addwf	fsr1l,f,c
  4395  003240  5013               	movf	fputc@fp+1,w,c
  4396  003242  22E2               	addwfc	fsr1h,f,c
  4397  003244  50DE               	movf	postinc2,w,c
  4398  003246  5CE6               	subwf	postinc1,w,c
  4399  003248  50E6               	movf	postinc1,w,c
  4400  00324A  0A80               	xorlw	128
  4401  00324C  6E18               	movwf	(??_fputc+4)& (0+255),c
  4402  00324E  50DE               	movf	postinc2,w,c
  4403  003250  0A80               	xorlw	128
  4404  003252  5818               	subwfb	(??_fputc+4)& (0+255),w,c
  4405  003254  B0D8               	btfsc	status,0,c
  4406  003256  0012               	return	
  4407  003258                     u5870:
  4408  003258  EE20 F002          	lfsr	2,2
  4409  00325C  5012               	movf	fputc@fp,w,c
  4410  00325E  26D9               	addwf	fsr2l,f,c
  4411  003260  5013               	movf	fputc@fp+1,w,c
  4412  003262  22DA               	addwfc	fsr2h,f,c
  4413  003264  CFDE F014          	movff	postinc2,??_fputc
  4414  003268  CFDD F015          	movff	postdec2,??_fputc+1
  4415  00326C  C012  FFD9         	movff	fputc@fp,fsr2l
  4416  003270  C013  FFDA         	movff	fputc@fp+1,fsr2h
  4417  003274  CFDE F016          	movff	postinc2,??_fputc+2
  4418  003278  CFDD F017          	movff	postdec2,??_fputc+3
  4419  00327C  5014               	movf	??_fputc,w,c
  4420  00327E  2416               	addwf	??_fputc+2,w,c
  4421  003280  6ED9               	movwf	fsr2l,c
  4422  003282  5015               	movf	??_fputc+1,w,c
  4423  003284  2017               	addwfc	??_fputc+3,w,c
  4424  003286  6EDA               	movwf	fsr2h,c
  4425  003288  C010  FFDF         	movff	fputc@c,indf2
  4426  00328C  EE20 F002          	lfsr	2,2
  4427  003290  5012               	movf	fputc@fp,w,c
  4428  003292  26D9               	addwf	fsr2l,f,c
  4429  003294  5013               	movf	fputc@fp+1,w,c
  4430  003296  22DA               	addwfc	fsr2h,f,c
  4431  003298  2ADE               	incf	postinc2,f,c
  4432  00329A  0E00               	movlw	0
  4433  00329C  22DD               	addwfc	postdec2,f,c
  4434  00329E  0012               	return		;funcret
  4435  0032A0                     __end_of_fputc:
  4436                           	opt callstack 0
  4437                           
  4438 ;; *************** function _putch *****************
  4439 ;; Defined at:
  4440 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  c               1    wreg     unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  c               1    0[COMRAM] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    2
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_fputc
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text13
  4469  00395A                     __ptext13:
  4470                           	opt callstack 0
  4471  00395A                     _putch:
  4472                           	opt callstack 24
  4473                           
  4474                           ;incstack = 0
  4475  00395A  0012               	return		;funcret
  4476  00395C                     __end_of_putch:
  4477                           	opt callstack 0
  4478                           
  4479 ;; *************** function _floorf *****************
  4480 ;; Defined at:
  4481 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  x               4    0[BANK0 ] float 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  u               4   16[BANK0 ] struct .
  4486 ;;  m               4   10[BANK0 ] unsigned long 
  4487 ;;  e               2   14[BANK0 ] int 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  4    0[BANK0 ] float 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4497 ;;      Params:         0       4       0       0       0       0       0       0       0
  4498 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4499 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4500 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4501 ;;Total ram usage:       20 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    2
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_efgtoa
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text14
  4512  0021BA                     __ptext14:
  4513                           	opt callstack 0
  4514  0021BA                     _floorf:
  4515                           	opt callstack 24
  4516                           
  4517                           ;incstack = 0
  4518  0021BA  C0E8  F070         	movff	floorf@F524,floorf@u
  4519  0021BE  C0E9  F071         	movff	floorf@F524+1,floorf@u+1
  4520  0021C2  C0EA  F072         	movff	floorf@F524+2,floorf@u+2
  4521  0021C6  C0EB  F073         	movff	floorf@F524+3,floorf@u+3
  4522  0021CA  C060  F070         	movff	floorf@x,floorf@u
  4523  0021CE  C061  F071         	movff	floorf@x+1,floorf@u+1
  4524  0021D2  C062  F072         	movff	floorf@x+2,floorf@u+2
  4525  0021D6  C063  F073         	movff	floorf@x+3,floorf@u+3
  4526  0021DA  0E81               	movlw	129
  4527  0021DC  0100               	movlb	0	; () banked
  4528  0021DE  6F64               	movwf	??_floorf& (0+255),b
  4529  0021E0  0EFF               	movlw	255
  4530  0021E2  6F65               	movwf	(??_floorf+1)& (0+255),b
  4531  0021E4  C070  F066         	movff	floorf@u,??_floorf+2
  4532  0021E8  C071  F067         	movff	floorf@u+1,??_floorf+3
  4533  0021EC  C072  F068         	movff	floorf@u+2,??_floorf+4
  4534  0021F0  C073  F069         	movff	floorf@u+3,??_floorf+5
  4535  0021F4  0E18               	movlw	24
  4536  0021F6  D005               	goto	u6470
  4537  0021F8                     u6475:
  4538  0021F8  90D8               	bcf	status,0,c
  4539  0021FA  3369               	rrcf	(??_floorf+5)& (0+255),f,b
  4540  0021FC  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4541  0021FE  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4542  002200  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4543  002202                     u6470:
  4544  002202  2EE8               	decfsz	wreg,f,c
  4545  002204  D7F9               	goto	u6475
  4546  002206  5166               	movf	(??_floorf+2)& (0+255),w,b
  4547  002208  2564               	addwf	??_floorf& (0+255),w,b
  4548  00220A  6F6E               	movwf	floorf@e& (0+255),b
  4549  00220C  0E00               	movlw	0
  4550  00220E  2165               	addwfc	(??_floorf+1)& (0+255),w,b
  4551  002210  6F6F               	movwf	(floorf@e+1)& (0+255),b
  4552  002212  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4553  002214  D00F               	goto	l5253
  4554  002216  516F               	movf	(floorf@e+1)& (0+255),w,b
  4555  002218  E104               	bnz	u6480
  4556  00221A  0E17               	movlw	23
  4557  00221C  5D6E               	subwf	floorf@e& (0+255),w,b
  4558  00221E  A0D8               	btfss	status,0,c
  4559  002220  D009               	goto	l5253
  4560  002222                     u6480:
  4561                           
  4562                           ; BSR set to: 0
  4563  002222  C060  F060         	movff	floorf@x,?_floorf
  4564  002226  C061  F061         	movff	floorf@x+1,?_floorf+1
  4565  00222A  C062  F062         	movff	floorf@x+2,?_floorf+2
  4566  00222E  C063  F063         	movff	floorf@x+3,?_floorf+3
  4567  002232  0012               	return	
  4568  002234                     l5253:
  4569                           
  4570                           ; BSR set to: 0
  4571  002234  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4572  002236  D05F               	goto	l5263
  4573                           
  4574                           ; BSR set to: 0
  4575  002238  C06E  F064         	movff	floorf@e,??_floorf
  4576  00223C  0EFF               	movlw	255
  4577  00223E  6F65               	movwf	(??_floorf+1)& (0+255),b
  4578  002240  0EFF               	movlw	255
  4579  002242  6F66               	movwf	(??_floorf+2)& (0+255),b
  4580  002244  0E7F               	movlw	127
  4581  002246  6F67               	movwf	(??_floorf+3)& (0+255),b
  4582  002248  0E00               	movlw	0
  4583  00224A  6F68               	movwf	(??_floorf+4)& (0+255),b
  4584  00224C                     u6505:
  4585  00224C  6764               	tstfsz	??_floorf& (0+255),b
  4586  00224E  D001               	goto	u6506
  4587  002250  D007               	goto	u6507
  4588  002252                     u6506:
  4589  002252  3568               	rlcf	(??_floorf+4)& (0+255),w,b
  4590  002254  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4591  002256  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4592  002258  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4593  00225A  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4594  00225C  2F64               	decfsz	??_floorf& (0+255),f,b
  4595  00225E  D7F6               	goto	u6505
  4596  002260                     u6507:
  4597  002260  C065  F06A         	movff	??_floorf+1,floorf@m
  4598  002264  C066  F06B         	movff	??_floorf+2,floorf@m+1
  4599  002268  C067  F06C         	movff	??_floorf+3,floorf@m+2
  4600  00226C  C068  F06D         	movff	??_floorf+4,floorf@m+3
  4601  002270  0100               	movlb	0	; () banked
  4602  002272  516A               	movf	floorf@m& (0+255),w,b
  4603  002274  1570               	andwf	floorf@u& (0+255),w,b
  4604  002276  6F64               	movwf	??_floorf& (0+255),b
  4605  002278  516B               	movf	(floorf@m+1)& (0+255),w,b
  4606  00227A  1571               	andwf	(floorf@u+1)& (0+255),w,b
  4607  00227C  6F65               	movwf	(??_floorf+1)& (0+255),b
  4608  00227E  516C               	movf	(floorf@m+2)& (0+255),w,b
  4609  002280  1572               	andwf	(floorf@u+2)& (0+255),w,b
  4610  002282  6F66               	movwf	(??_floorf+2)& (0+255),b
  4611  002284  516D               	movf	(floorf@m+3)& (0+255),w,b
  4612  002286  1573               	andwf	(floorf@u+3)& (0+255),w,b
  4613  002288  6F67               	movwf	(??_floorf+3)& (0+255),b
  4614  00228A  5164               	movf	??_floorf& (0+255),w,b
  4615  00228C  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4616  00228E  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4617  002290  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4618  002292  B4D8               	btfsc	status,2,c
  4619  002294  D7C6               	goto	u6480
  4620                           
  4621                           ; BSR set to: 0
  4622  002296  C070  F064         	movff	floorf@u,??_floorf
  4623  00229A  C071  F065         	movff	floorf@u+1,??_floorf+1
  4624  00229E  C072  F066         	movff	floorf@u+2,??_floorf+2
  4625  0022A2  C073  F067         	movff	floorf@u+3,??_floorf+3
  4626  0022A6  0E20               	movlw	32
  4627  0022A8  D005               	goto	u6520
  4628  0022AA                     u6525:
  4629  0022AA  90D8               	bcf	status,0,c
  4630  0022AC  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4631  0022AE  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4632  0022B0  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4633  0022B2  3364               	rrcf	??_floorf& (0+255),f,b
  4634  0022B4                     u6520:
  4635  0022B4  2EE8               	decfsz	wreg,f,c
  4636  0022B6  D7F9               	goto	u6525
  4637  0022B8  5164               	movf	??_floorf& (0+255),w,b
  4638  0022BA  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4639  0022BC  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4640  0022BE  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4641  0022C0  B4D8               	btfsc	status,2,c
  4642  0022C2  D008               	goto	l1099
  4643                           
  4644                           ; BSR set to: 0
  4645  0022C4  516A               	movf	floorf@m& (0+255),w,b
  4646  0022C6  2770               	addwf	floorf@u& (0+255),f,b
  4647  0022C8  516B               	movf	(floorf@m+1)& (0+255),w,b
  4648  0022CA  2371               	addwfc	(floorf@u+1)& (0+255),f,b
  4649  0022CC  516C               	movf	(floorf@m+2)& (0+255),w,b
  4650  0022CE  2372               	addwfc	(floorf@u+2)& (0+255),f,b
  4651  0022D0  516D               	movf	(floorf@m+3)& (0+255),w,b
  4652  0022D2  2373               	addwfc	(floorf@u+3)& (0+255),f,b
  4653  0022D4                     l1099:
  4654                           
  4655                           ; BSR set to: 0
  4656  0022D4  1D6A               	comf	floorf@m& (0+255),w,b
  4657  0022D6  6F64               	movwf	??_floorf& (0+255),b
  4658  0022D8  1D6B               	comf	(floorf@m+1)& (0+255),w,b
  4659  0022DA  6F65               	movwf	(??_floorf+1)& (0+255),b
  4660  0022DC  1D6C               	comf	(floorf@m+2)& (0+255),w,b
  4661  0022DE  6F66               	movwf	(??_floorf+2)& (0+255),b
  4662  0022E0  1D6D               	comf	(floorf@m+3)& (0+255),w,b
  4663  0022E2  6F67               	movwf	(??_floorf+3)& (0+255),b
  4664  0022E4  5164               	movf	??_floorf& (0+255),w,b
  4665  0022E6  1770               	andwf	floorf@u& (0+255),f,b
  4666  0022E8  5165               	movf	(??_floorf+1)& (0+255),w,b
  4667  0022EA  1771               	andwf	(floorf@u+1)& (0+255),f,b
  4668  0022EC  5166               	movf	(??_floorf+2)& (0+255),w,b
  4669  0022EE  1772               	andwf	(floorf@u+2)& (0+255),f,b
  4670  0022F0  5167               	movf	(??_floorf+3)& (0+255),w,b
  4671  0022F2  1773               	andwf	(floorf@u+3)& (0+255),f,b
  4672  0022F4  D036               	goto	l5271
  4673  0022F6                     l5263:
  4674                           
  4675                           ; BSR set to: 0
  4676  0022F6  C070  F064         	movff	floorf@u,??_floorf
  4677  0022FA  C071  F065         	movff	floorf@u+1,??_floorf+1
  4678  0022FE  C072  F066         	movff	floorf@u+2,??_floorf+2
  4679  002302  C073  F067         	movff	floorf@u+3,??_floorf+3
  4680  002306  0E20               	movlw	32
  4681  002308  D005               	goto	u6540
  4682  00230A                     u6545:
  4683  00230A  90D8               	bcf	status,0,c
  4684  00230C  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4685  00230E  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4686  002310  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4687  002312  3364               	rrcf	??_floorf& (0+255),f,b
  4688  002314                     u6540:
  4689  002314  2EE8               	decfsz	wreg,f,c
  4690  002316  D7F9               	goto	u6545
  4691  002318  5164               	movf	??_floorf& (0+255),w,b
  4692  00231A  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4693  00231C  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4694  00231E  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4695  002320  A4D8               	btfss	status,2,c
  4696  002322  D008               	goto	l5267
  4697                           
  4698                           ; BSR set to: 0
  4699  002324  0E00               	movlw	0
  4700  002326  6F70               	movwf	floorf@u& (0+255),b
  4701  002328  0E00               	movlw	0
  4702  00232A  6F71               	movwf	(floorf@u+1)& (0+255),b
  4703  00232C  0E00               	movlw	0
  4704  00232E  6F72               	movwf	(floorf@u+2)& (0+255),b
  4705  002330  0E00               	movlw	0
  4706  002332  D016               	goto	L6
  4707  002334                     l5267:
  4708                           
  4709                           ; BSR set to: 0
  4710  002334  90D8               	bcf	status,0,c
  4711  002336  3570               	rlcf	floorf@u& (0+255),w,b
  4712  002338  6F64               	movwf	??_floorf& (0+255),b
  4713  00233A  3571               	rlcf	(floorf@u+1)& (0+255),w,b
  4714  00233C  6F65               	movwf	(??_floorf+1)& (0+255),b
  4715  00233E  3572               	rlcf	(floorf@u+2)& (0+255),w,b
  4716  002340  6F66               	movwf	(??_floorf+2)& (0+255),b
  4717  002342  3573               	rlcf	(floorf@u+3)& (0+255),w,b
  4718  002344  6F67               	movwf	(??_floorf+3)& (0+255),b
  4719  002346  5164               	movf	??_floorf& (0+255),w,b
  4720  002348  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4721  00234A  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4722  00234C  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4723  00234E  B4D8               	btfsc	status,2,c
  4724  002350  D008               	goto	l5271
  4725                           
  4726                           ; BSR set to: 0
  4727  002352  0E00               	movlw	0
  4728  002354  6F70               	movwf	floorf@u& (0+255),b
  4729  002356  0E00               	movlw	0
  4730  002358  6F71               	movwf	(floorf@u+1)& (0+255),b
  4731  00235A  0E80               	movlw	128
  4732  00235C  6F72               	movwf	(floorf@u+2)& (0+255),b
  4733  00235E  0EBF               	movlw	191
  4734  002360                     L6:
  4735  002360  6F73               	movwf	(floorf@u+3)& (0+255),b
  4736  002362                     l5271:
  4737                           
  4738                           ; BSR set to: 0
  4739  002362  C070  F060         	movff	floorf@u,?_floorf
  4740  002366  C071  F061         	movff	floorf@u+1,?_floorf+1
  4741  00236A  C072  F062         	movff	floorf@u+2,?_floorf+2
  4742  00236E  C073  F063         	movff	floorf@u+3,?_floorf+3
  4743                           
  4744                           ; BSR set to: 0
  4745  002372  0012               	return		;funcret
  4746  002374                     __end_of_floorf:
  4747                           	opt callstack 0
  4748                           
  4749 ;; *************** function ___fpclassifyf *****************
  4750 ;; Defined at:
  4751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  x               4   15[COMRAM] float 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  u               4   25[COMRAM] struct .
  4756 ;;  e               2   23[COMRAM] int 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2   15[COMRAM] int 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         4       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4769 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:       14 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_efgtoa
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text15
  4781  002F1E                     __ptext15:
  4782                           	opt callstack 0
  4783  002F1E                     ___fpclassifyf:
  4784                           	opt callstack 24
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;incstack = 0
  4788  002F1E  C044  F01A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4789  002F22  C045  F01B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4790  002F26  C046  F01C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4791  002F2A  C047  F01D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4792  002F2E  C010  F01A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4793  002F32  C011  F01B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4794  002F36  C012  F01C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4795  002F3A  C013  F01D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4796  002F3E  C01A  F014         	movff	___fpclassifyf@u,??___fpclassifyf
  4797  002F42  C01B  F015         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4798  002F46  C01C  F016         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4799  002F4A  C01D  F017         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4800  002F4E  0E18               	movlw	24
  4801  002F50  D005               	goto	u6350
  4802  002F52                     u6355:
  4803  002F52  90D8               	bcf	status,0,c
  4804  002F54  3217               	rrcf	??___fpclassifyf+3,f,c
  4805  002F56  3216               	rrcf	??___fpclassifyf+2,f,c
  4806  002F58  3215               	rrcf	??___fpclassifyf+1,f,c
  4807  002F5A  3214               	rrcf	??___fpclassifyf,f,c
  4808  002F5C                     u6350:
  4809  002F5C  2EE8               	decfsz	wreg,f,c
  4810  002F5E  D7F9               	goto	u6355
  4811  002F60  5014               	movf	??___fpclassifyf,w,c
  4812  002F62  6E18               	movwf	___fpclassifyf@e,c
  4813  002F64  6A19               	clrf	___fpclassifyf@e+1,c
  4814  002F66  5018               	movf	___fpclassifyf@e,w,c
  4815  002F68  1019               	iorwf	___fpclassifyf@e+1,w,c
  4816  002F6A  A4D8               	btfss	status,2,c
  4817  002F6C  D019               	goto	l5223
  4818  002F6E  90D8               	bcf	status,0,c
  4819  002F70  341A               	rlcf	___fpclassifyf@u,w,c
  4820  002F72  6E14               	movwf	??___fpclassifyf& (0+255),c
  4821  002F74  341B               	rlcf	___fpclassifyf@u+1,w,c
  4822  002F76  6E15               	movwf	(??___fpclassifyf+1)& (0+255),c
  4823  002F78  341C               	rlcf	___fpclassifyf@u+2,w,c
  4824  002F7A  6E16               	movwf	(??___fpclassifyf+2)& (0+255),c
  4825  002F7C  341D               	rlcf	___fpclassifyf@u+3,w,c
  4826  002F7E  6E17               	movwf	(??___fpclassifyf+3)& (0+255),c
  4827  002F80  5014               	movf	??___fpclassifyf,w,c
  4828  002F82  1015               	iorwf	??___fpclassifyf+1,w,c
  4829  002F84  1016               	iorwf	??___fpclassifyf+2,w,c
  4830  002F86  1017               	iorwf	??___fpclassifyf+3,w,c
  4831  002F88  A4D8               	btfss	status,2,c
  4832  002F8A  D005               	goto	l5219
  4833  002F8C  0E00               	movlw	0
  4834  002F8E  6E11               	movwf	?___fpclassifyf+1,c
  4835  002F90  0E02               	movlw	2
  4836  002F92  6E10               	movwf	?___fpclassifyf,c
  4837  002F94  0012               	return	
  4838  002F96                     l5219:
  4839  002F96  0E00               	movlw	0
  4840  002F98  6E11               	movwf	?___fpclassifyf+1,c
  4841  002F9A  0E03               	movlw	3
  4842  002F9C  6E10               	movwf	?___fpclassifyf,c
  4843  002F9E  0012               	return	
  4844  002FA0                     l5223:
  4845  002FA0  2818               	incf	___fpclassifyf@e,w,c
  4846  002FA2  1019               	iorwf	___fpclassifyf@e+1,w,c
  4847  002FA4  A4D8               	btfss	status,2,c
  4848  002FA6  D01C               	goto	l5229
  4849  002FA8  C01A  F014         	movff	___fpclassifyf@u,??___fpclassifyf
  4850  002FAC  C01B  F015         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4851  002FB0  C01C  F016         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4852  002FB4  C01D  F017         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4853  002FB8  0E09               	movlw	9
  4854  002FBA                     u6395:
  4855  002FBA  90D8               	bcf	status,0,c
  4856  002FBC  3614               	rlcf	??___fpclassifyf,f,c
  4857  002FBE  3615               	rlcf	??___fpclassifyf+1,f,c
  4858  002FC0  3616               	rlcf	??___fpclassifyf+2,f,c
  4859  002FC2  3617               	rlcf	??___fpclassifyf+3,f,c
  4860  002FC4  2EE8               	decfsz	wreg,f,c
  4861  002FC6  D7F9               	goto	u6395
  4862  002FC8  5014               	movf	??___fpclassifyf,w,c
  4863  002FCA  1015               	iorwf	??___fpclassifyf+1,w,c
  4864  002FCC  1016               	iorwf	??___fpclassifyf+2,w,c
  4865  002FCE  1017               	iorwf	??___fpclassifyf+3,w,c
  4866  002FD0  A4D8               	btfss	status,2,c
  4867  002FD2  D002               	goto	u6400
  4868  002FD4  0E01               	movlw	1
  4869  002FD6  D001               	goto	u6410
  4870  002FD8                     u6400:
  4871  002FD8  0E00               	movlw	0
  4872  002FDA                     u6410:
  4873  002FDA  6E10               	movwf	?___fpclassifyf,c
  4874  002FDC  6A11               	clrf	?___fpclassifyf+1,c
  4875  002FDE  0012               	return	
  4876  002FE0                     l5229:
  4877  002FE0  0E00               	movlw	0
  4878  002FE2  6E11               	movwf	?___fpclassifyf+1,c
  4879  002FE4  0E04               	movlw	4
  4880  002FE6  6E10               	movwf	?___fpclassifyf,c
  4881  002FE8  0012               	return		;funcret
  4882  002FEA                     __end_of___fpclassifyf:
  4883                           	opt callstack 0
  4884                           
  4885 ;; *************** function ___fltol *****************
  4886 ;; Defined at:
  4887 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  f1              4   15[COMRAM] int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  exp1            1   24[COMRAM] unsigned char 
  4892 ;;  sign1           1   23[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  4   15[COMRAM] long 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4902 ;;      Params:         4       0       0       0       0       0       0       0       0
  4903 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4904 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4905 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4906 ;;Total ram usage:       10 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    2
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_efgtoa
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text16
  4917  002FEA                     __ptext16:
  4918                           	opt callstack 0
  4919  002FEA                     ___fltol:
  4920                           	opt callstack 24
  4921                           
  4922                           ;incstack = 0
  4923  002FEA  3412               	rlcf	___fltol@f1+2,w,c
  4924  002FEC  3413               	rlcf	___fltol@f1+3,w,c
  4925  002FEE  6E19               	movwf	___fltol@exp1,c
  4926  002FF0  5019               	movf	___fltol@exp1,w,c
  4927  002FF2  A4D8               	btfss	status,2,c
  4928  002FF4  D009               	goto	l5691
  4929  002FF6                     u7220:
  4930  002FF6  0E00               	movlw	0
  4931  002FF8  6E10               	movwf	?___fltol,c
  4932  002FFA  0E00               	movlw	0
  4933  002FFC  6E11               	movwf	?___fltol+1,c
  4934  002FFE  0E00               	movlw	0
  4935  003000  6E12               	movwf	?___fltol+2,c
  4936  003002  0E00               	movlw	0
  4937  003004  6E13               	movwf	?___fltol+3,c
  4938  003006  0012               	return	
  4939  003008                     l5691:
  4940  003008  C010  F014         	movff	___fltol@f1,??___fltol
  4941  00300C  C011  F015         	movff	___fltol@f1+1,??___fltol+1
  4942  003010  C012  F016         	movff	___fltol@f1+2,??___fltol+2
  4943  003014  C013  F017         	movff	___fltol@f1+3,??___fltol+3
  4944  003018  0E20               	movlw	32
  4945  00301A  D005               	goto	u7230
  4946  00301C                     u7235:
  4947  00301C  90D8               	bcf	status,0,c
  4948  00301E  3217               	rrcf	??___fltol+3,f,c
  4949  003020  3216               	rrcf	??___fltol+2,f,c
  4950  003022  3215               	rrcf	??___fltol+1,f,c
  4951  003024  3214               	rrcf	??___fltol,f,c
  4952  003026                     u7230:
  4953  003026  2EE8               	decfsz	wreg,f,c
  4954  003028  D7F9               	goto	u7235
  4955  00302A  5014               	movf	??___fltol,w,c
  4956  00302C  6E18               	movwf	___fltol@sign1,c
  4957  00302E  8E12               	bsf	___fltol@f1+2,7,c
  4958  003030  0EFF               	movlw	255
  4959  003032  1610               	andwf	___fltol@f1,f,c
  4960  003034  0EFF               	movlw	255
  4961  003036  1611               	andwf	___fltol@f1+1,f,c
  4962  003038  0EFF               	movlw	255
  4963  00303A  1612               	andwf	___fltol@f1+2,f,c
  4964  00303C  0E00               	movlw	0
  4965  00303E  1613               	andwf	___fltol@f1+3,f,c
  4966  003040  0E96               	movlw	150
  4967  003042  5E19               	subwf	___fltol@exp1,f,c
  4968  003044  AE19               	btfss	___fltol@exp1,7,c
  4969  003046  D00D               	goto	l5711
  4970  003048  5019               	movf	___fltol@exp1,w,c
  4971  00304A  0A80               	xorlw	128
  4972  00304C  0F97               	addlw	151
  4973  00304E  A0D8               	btfss	status,0,c
  4974  003050  D7D2               	goto	u7220
  4975  003052                     l5707:
  4976  003052  90D8               	bcf	status,0,c
  4977  003054  3213               	rrcf	___fltol@f1+3,f,c
  4978  003056  3212               	rrcf	___fltol@f1+2,f,c
  4979  003058  3211               	rrcf	___fltol@f1+1,f,c
  4980  00305A  3210               	rrcf	___fltol@f1,f,c
  4981  00305C  3E19               	incfsz	___fltol@exp1,f,c
  4982  00305E  D7F9               	goto	l5707
  4983  003060  D00D               	goto	u7270
  4984  003062                     l5711:
  4985  003062  0E1F               	movlw	31
  4986  003064  6419               	cpfsgt	___fltol@exp1,c
  4987  003066  D007               	goto	l5719
  4988  003068  D7C6               	goto	u7220
  4989  00306A                     l5717:
  4990  00306A  90D8               	bcf	status,0,c
  4991  00306C  3610               	rlcf	___fltol@f1,f,c
  4992  00306E  3611               	rlcf	___fltol@f1+1,f,c
  4993  003070  3612               	rlcf	___fltol@f1+2,f,c
  4994  003072  3613               	rlcf	___fltol@f1+3,f,c
  4995  003074  0619               	decf	___fltol@exp1,f,c
  4996  003076                     l5719:
  4997  003076  5019               	movf	___fltol@exp1,w,c
  4998  003078  A4D8               	btfss	status,2,c
  4999  00307A  D7F7               	goto	l5717
  5000  00307C                     u7270:
  5001  00307C  5018               	movf	___fltol@sign1,w,c
  5002  00307E  B4D8               	btfsc	status,2,c
  5003  003080  D008               	goto	l5725
  5004  003082  1E13               	comf	___fltol@f1+3,f,c
  5005  003084  1E12               	comf	___fltol@f1+2,f,c
  5006  003086  1E11               	comf	___fltol@f1+1,f,c
  5007  003088  6C10               	negf	___fltol@f1,c
  5008  00308A  0E00               	movlw	0
  5009  00308C  2211               	addwfc	___fltol@f1+1,f,c
  5010  00308E  2212               	addwfc	___fltol@f1+2,f,c
  5011  003090  2213               	addwfc	___fltol@f1+3,f,c
  5012  003092                     l5725:
  5013  003092  C010  F010         	movff	___fltol@f1,?___fltol
  5014  003096  C011  F011         	movff	___fltol@f1+1,?___fltol+1
  5015  00309A  C012  F012         	movff	___fltol@f1+2,?___fltol+2
  5016  00309E  C013  F013         	movff	___fltol@f1+3,?___fltol+3
  5017  0030A2  0012               	return		;funcret
  5018  0030A4                     __end_of___fltol:
  5019                           	opt callstack 0
  5020                           
  5021 ;; *************** function ___flsub *****************
  5022 ;; Defined at:
  5023 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  b               4   40[COMRAM] long 
  5026 ;;  a               4   44[COMRAM] long 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  4   40[COMRAM] long 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5038 ;;      Params:         8       0       0       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5041 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5042 ;;Total ram usage:        8 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    3
  5045 ;; This function calls:
  5046 ;;		___fladd
  5047 ;; This function is called by:
  5048 ;;		_efgtoa
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text17
  5053  003754                     __ptext17:
  5054                           	opt callstack 0
  5055  003754                     ___flsub:
  5056                           	opt callstack 23
  5057                           
  5058                           ;incstack = 0
  5059  003754  0E00               	movlw	0
  5060  003756  1A2D               	xorwf	___flsub@a,f,c
  5061  003758  0E00               	movlw	0
  5062  00375A  1A2E               	xorwf	___flsub@a+1,f,c
  5063  00375C  0E00               	movlw	0
  5064  00375E  1A2F               	xorwf	___flsub@a+2,f,c
  5065  003760  0E80               	movlw	128
  5066  003762  1A30               	xorwf	___flsub@a+3,f,c
  5067  003764  C029  F010         	movff	___flsub@b,___fladd@b
  5068  003768  C02A  F011         	movff	___flsub@b+1,___fladd@b+1
  5069  00376C  C02B  F012         	movff	___flsub@b+2,___fladd@b+2
  5070  003770  C02C  F013         	movff	___flsub@b+3,___fladd@b+3
  5071  003774  C02D  F014         	movff	___flsub@a,___fladd@a
  5072  003778  C02E  F015         	movff	___flsub@a+1,___fladd@a+1
  5073  00377C  C02F  F016         	movff	___flsub@a+2,___fladd@a+2
  5074  003780  C030  F017         	movff	___flsub@a+3,___fladd@a+3
  5075  003784  EC13  F00E         	call	___fladd	;wreg free
  5076  003788  C010  F029         	movff	?___fladd,?___flsub
  5077  00378C  C011  F02A         	movff	?___fladd+1,?___flsub+1
  5078  003790  C012  F02B         	movff	?___fladd+2,?___flsub+2
  5079  003794  C013  F02C         	movff	?___fladd+3,?___flsub+3
  5080  003798  0012               	return		;funcret
  5081  00379A                     __end_of___flsub:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function ___fladd *****************
  5085 ;; Defined at:
  5086 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  b               4   15[COMRAM] long 
  5089 ;;  a               4   19[COMRAM] long 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  grs             1   30[COMRAM] unsigned char 
  5092 ;;  bexp            1   29[COMRAM] unsigned char 
  5093 ;;  aexp            1   28[COMRAM] unsigned char 
  5094 ;;  signs           1   27[COMRAM] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  4   15[COMRAM] unsigned char 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5104 ;;      Params:         8       0       0       0       0       0       0       0       0
  5105 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5106 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5107 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5108 ;;Total ram usage:       16 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    2
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;;		_efgtoa
  5116 ;;		___flsub
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text18
  5121  001C26                     __ptext18:
  5122                           	opt callstack 0
  5123  001C26                     ___fladd:
  5124                           	opt callstack 23
  5125                           
  5126                           ;incstack = 0
  5127  001C26  5013               	movf	___fladd@b+3,w,c
  5128  001C28  0B80               	andlw	128
  5129  001C2A  6E1C               	movwf	___fladd@signs,c
  5130  001C2C  5013               	movf	___fladd@b+3,w,c
  5131  001C2E  2413               	addwf	___fladd@b+3,w,c
  5132  001C30  6E1E               	movwf	___fladd@bexp,c
  5133  001C32  BE12               	btfsc	___fladd@b+2,7,c
  5134  001C34  801E               	bsf	___fladd@bexp,0,c
  5135  001C36  501E               	movf	___fladd@bexp,w,c
  5136  001C38  B4D8               	btfsc	status,2,c
  5137  001C3A  D00D               	goto	l5003
  5138  001C3C  281E               	incf	___fladd@bexp,w,c
  5139  001C3E  A4D8               	btfss	status,2,c
  5140  001C40  D008               	goto	l4999
  5141  001C42  0E00               	movlw	0
  5142  001C44  6E10               	movwf	___fladd@b,c
  5143  001C46  0E00               	movlw	0
  5144  001C48  6E11               	movwf	___fladd@b+1,c
  5145  001C4A  0E00               	movlw	0
  5146  001C4C  6E12               	movwf	___fladd@b+2,c
  5147  001C4E  0E00               	movlw	0
  5148  001C50  6E13               	movwf	___fladd@b+3,c
  5149  001C52                     l4999:
  5150  001C52  8E12               	bsf	___fladd@b+2,7,c
  5151  001C54  D006               	goto	L7
  5152  001C56                     l5003:
  5153  001C56  0E00               	movlw	0
  5154  001C58  6E10               	movwf	___fladd@b,c
  5155  001C5A  0E00               	movlw	0
  5156  001C5C  6E11               	movwf	___fladd@b+1,c
  5157  001C5E  0E00               	movlw	0
  5158  001C60  6E12               	movwf	___fladd@b+2,c
  5159  001C62                     L7:
  5160  001C62  0E00               	movlw	0
  5161  001C64  6E13               	movwf	___fladd@b+3,c
  5162  001C66  5017               	movf	___fladd@a+3,w,c
  5163  001C68  0B80               	andlw	128
  5164  001C6A  6E1D               	movwf	___fladd@aexp,c
  5165  001C6C  501C               	movf	___fladd@signs,w,c
  5166  001C6E  181D               	xorwf	___fladd@aexp,w,c
  5167  001C70  A4D8               	btfss	status,2,c
  5168  001C72  8C1C               	bsf	___fladd@signs,6,c
  5169  001C74  5017               	movf	___fladd@a+3,w,c
  5170  001C76  2417               	addwf	___fladd@a+3,w,c
  5171  001C78  6E1D               	movwf	___fladd@aexp,c
  5172  001C7A  BE16               	btfsc	___fladd@a+2,7,c
  5173  001C7C  801D               	bsf	___fladd@aexp,0,c
  5174  001C7E  501D               	movf	___fladd@aexp,w,c
  5175  001C80  B4D8               	btfsc	status,2,c
  5176  001C82  D00D               	goto	l5027
  5177  001C84  281D               	incf	___fladd@aexp,w,c
  5178  001C86  A4D8               	btfss	status,2,c
  5179  001C88  D008               	goto	l5023
  5180  001C8A  0E00               	movlw	0
  5181  001C8C  6E14               	movwf	___fladd@a,c
  5182  001C8E  0E00               	movlw	0
  5183  001C90  6E15               	movwf	___fladd@a+1,c
  5184  001C92  0E00               	movlw	0
  5185  001C94  6E16               	movwf	___fladd@a+2,c
  5186  001C96  0E00               	movlw	0
  5187  001C98  6E17               	movwf	___fladd@a+3,c
  5188  001C9A                     l5023:
  5189  001C9A  8E16               	bsf	___fladd@a+2,7,c
  5190  001C9C  D006               	goto	L8
  5191  001C9E                     l5027:
  5192  001C9E  0E00               	movlw	0
  5193  001CA0  6E14               	movwf	___fladd@a,c
  5194  001CA2  0E00               	movlw	0
  5195  001CA4  6E15               	movwf	___fladd@a+1,c
  5196  001CA6  0E00               	movlw	0
  5197  001CA8  6E16               	movwf	___fladd@a+2,c
  5198  001CAA                     L8:
  5199  001CAA  0E00               	movlw	0
  5200  001CAC  6E17               	movwf	___fladd@a+3,c
  5201  001CAE  501E               	movf	___fladd@bexp,w,c
  5202  001CB0  5C1D               	subwf	___fladd@aexp,w,c
  5203  001CB2  B0D8               	btfsc	status,0,c
  5204  001CB4  D022               	goto	l5065
  5205  001CB6  AC1C               	btfss	___fladd@signs,6,c
  5206  001CB8  D002               	goto	l5035
  5207  001CBA  0E80               	movlw	128
  5208  001CBC  1A1C               	xorwf	___fladd@signs,f,c
  5209  001CBE                     l5035:
  5210  001CBE  C01E  F01F         	movff	___fladd@bexp,___fladd@grs
  5211  001CC2  C01D  F01E         	movff	___fladd@aexp,___fladd@bexp
  5212  001CC6  C01F  F01D         	movff	___fladd@grs,___fladd@aexp
  5213  001CCA  C010  F01F         	movff	___fladd@b,___fladd@grs
  5214  001CCE  C014  F010         	movff	___fladd@a,___fladd@b
  5215  001CD2  C01F  F014         	movff	___fladd@grs,___fladd@a
  5216  001CD6  C011  F01F         	movff	___fladd@b+1,___fladd@grs
  5217  001CDA  C015  F011         	movff	___fladd@a+1,___fladd@b+1
  5218  001CDE  C01F  F015         	movff	___fladd@grs,___fladd@a+1
  5219  001CE2  C012  F01F         	movff	___fladd@b+2,___fladd@grs
  5220  001CE6  C016  F012         	movff	___fladd@a+2,___fladd@b+2
  5221  001CEA  C01F  F016         	movff	___fladd@grs,___fladd@a+2
  5222  001CEE  C013  F01F         	movff	___fladd@b+3,___fladd@grs
  5223  001CF2  C017  F013         	movff	___fladd@a+3,___fladd@b+3
  5224  001CF6  C01F  F017         	movff	___fladd@grs,___fladd@a+3
  5225  001CFA                     l5065:
  5226  001CFA  0E00               	movlw	0
  5227  001CFC  6E1F               	movwf	___fladd@grs,c
  5228  001CFE  501E               	movf	___fladd@bexp,w,c
  5229  001D00  C01D  F018         	movff	___fladd@aexp,??___fladd
  5230  001D04  6A19               	clrf	(??___fladd+1)& (0+255),c
  5231  001D06  5E18               	subwf	??___fladd,f,c
  5232  001D08  0E00               	movlw	0
  5233  001D0A  5A19               	subwfb	??___fladd+1,f,c
  5234  001D0C  BE19               	btfsc	??___fladd+1,7,c
  5235  001D0E  D02C               	goto	l906
  5236  001D10  5019               	movf	??___fladd+1,w,c
  5237  001D12  E104               	bnz	u6010
  5238  001D14  0E1A               	movlw	26
  5239  001D16  5C18               	subwf	??___fladd,w,c
  5240  001D18  A0D8               	btfss	status,0,c
  5241  001D1A  D026               	goto	l906
  5242  001D1C                     u6010:
  5243  001D1C  5010               	movf	___fladd@b,w,c
  5244  001D1E  1011               	iorwf	___fladd@b+1,w,c
  5245  001D20  1012               	iorwf	___fladd@b+2,w,c
  5246  001D22  1013               	iorwf	___fladd@b+3,w,c
  5247  001D24  B4D8               	btfsc	status,2,c
  5248  001D26  D002               	goto	u6020
  5249  001D28  0E01               	movlw	1
  5250  001D2A  D001               	goto	u6030
  5251  001D2C                     u6020:
  5252  001D2C  0E00               	movlw	0
  5253  001D2E                     u6030:
  5254  001D2E  6E1F               	movwf	___fladd@grs,c
  5255  001D30  0E00               	movlw	0
  5256  001D32  6E10               	movwf	___fladd@b,c
  5257  001D34  0E00               	movlw	0
  5258  001D36  6E11               	movwf	___fladd@b+1,c
  5259  001D38  0E00               	movlw	0
  5260  001D3A  6E12               	movwf	___fladd@b+2,c
  5261  001D3C  0E00               	movlw	0
  5262  001D3E  6E13               	movwf	___fladd@b+3,c
  5263  001D40  C01D  F01E         	movff	___fladd@aexp,___fladd@bexp
  5264  001D44  D015               	goto	u6060
  5265  001D46                     l907:
  5266  001D46  A01F               	btfss	___fladd@grs,0,c
  5267  001D48  D005               	goto	l5077
  5268  001D4A  90D8               	bcf	status,0,c
  5269  001D4C  301F               	rrcf	___fladd@grs,w,c
  5270  001D4E  0901               	iorlw	1
  5271  001D50  6E1F               	movwf	___fladd@grs,c
  5272  001D52  D002               	goto	l5079
  5273  001D54                     l5077:
  5274  001D54  90D8               	bcf	status,0,c
  5275  001D56  321F               	rrcf	___fladd@grs,f,c
  5276  001D58                     l5079:
  5277  001D58  B010               	btfsc	___fladd@b,0,c
  5278  001D5A  8E1F               	bsf	___fladd@grs,7,c
  5279  001D5C  3413               	rlcf	___fladd@b+3,w,c
  5280  001D5E  3213               	rrcf	___fladd@b+3,f,c
  5281  001D60  3212               	rrcf	___fladd@b+2,f,c
  5282  001D62  3211               	rrcf	___fladd@b+1,f,c
  5283  001D64  3210               	rrcf	___fladd@b,f,c
  5284  001D66  2A1E               	incf	___fladd@bexp,f,c
  5285  001D68                     l906:
  5286  001D68  501D               	movf	___fladd@aexp,w,c
  5287  001D6A  5C1E               	subwf	___fladd@bexp,w,c
  5288  001D6C  A0D8               	btfss	status,0,c
  5289  001D6E  D7EB               	goto	l907
  5290  001D70                     u6060:
  5291  001D70  BC1C               	btfsc	___fladd@signs,6,c
  5292  001D72  D028               	goto	l5111
  5293  001D74  501E               	movf	___fladd@bexp,w,c
  5294  001D76  A4D8               	btfss	status,2,c
  5295  001D78  D009               	goto	l5093
  5296  001D7A  0E00               	movlw	0
  5297  001D7C  6E10               	movwf	?___fladd,c
  5298  001D7E  0E00               	movlw	0
  5299  001D80  6E11               	movwf	?___fladd+1,c
  5300  001D82  0E00               	movlw	0
  5301  001D84  6E12               	movwf	?___fladd+2,c
  5302  001D86  0E00               	movlw	0
  5303  001D88  6E13               	movwf	?___fladd+3,c
  5304  001D8A  0012               	return	
  5305  001D8C                     l5093:
  5306  001D8C  5014               	movf	___fladd@a,w,c
  5307  001D8E  2610               	addwf	___fladd@b,f,c
  5308  001D90  5015               	movf	___fladd@a+1,w,c
  5309  001D92  2211               	addwfc	___fladd@b+1,f,c
  5310  001D94  5016               	movf	___fladd@a+2,w,c
  5311  001D96  2212               	addwfc	___fladd@b+2,f,c
  5312  001D98  5017               	movf	___fladd@a+3,w,c
  5313  001D9A  2213               	addwfc	___fladd@b+3,f,c
  5314  001D9C  A013               	btfss	___fladd@b+3,0,c
  5315  001D9E  D071               	goto	u6190
  5316  001DA0  A01F               	btfss	___fladd@grs,0,c
  5317  001DA2  D005               	goto	l5101
  5318  001DA4  90D8               	bcf	status,0,c
  5319  001DA6  301F               	rrcf	___fladd@grs,w,c
  5320  001DA8  0901               	iorlw	1
  5321  001DAA  6E1F               	movwf	___fladd@grs,c
  5322  001DAC  D002               	goto	l5103
  5323  001DAE                     l5101:
  5324  001DAE  90D8               	bcf	status,0,c
  5325  001DB0  321F               	rrcf	___fladd@grs,f,c
  5326  001DB2                     l5103:
  5327  001DB2  B010               	btfsc	___fladd@b,0,c
  5328  001DB4  8E1F               	bsf	___fladd@grs,7,c
  5329  001DB6  3413               	rlcf	___fladd@b+3,w,c
  5330  001DB8  3213               	rrcf	___fladd@b+3,f,c
  5331  001DBA  3212               	rrcf	___fladd@b+2,f,c
  5332  001DBC  3211               	rrcf	___fladd@b+1,f,c
  5333  001DBE  3210               	rrcf	___fladd@b,f,c
  5334  001DC0  2A1E               	incf	___fladd@bexp,f,c
  5335  001DC2  D05F               	goto	u6190
  5336  001DC4                     l5111:
  5337  001DC4  5014               	movf	___fladd@a,w,c
  5338  001DC6  5C10               	subwf	___fladd@b,w,c
  5339  001DC8  5015               	movf	___fladd@a+1,w,c
  5340  001DCA  5811               	subwfb	___fladd@b+1,w,c
  5341  001DCC  5016               	movf	___fladd@a+2,w,c
  5342  001DCE  5812               	subwfb	___fladd@b+2,w,c
  5343  001DD0  5013               	movf	___fladd@b+3,w,c
  5344  001DD2  0A80               	xorlw	128
  5345  001DD4  6E18               	movwf	??___fladd& (0+255),c
  5346  001DD6  5017               	movf	___fladd@a+3,w,c
  5347  001DD8  0A80               	xorlw	128
  5348  001DDA  5818               	subwfb	??___fladd& (0+255),w,c
  5349  001DDC  B0D8               	btfsc	status,0,c
  5350  001DDE  D025               	goto	l5121
  5351  001DE0  5010               	movf	___fladd@b,w,c
  5352  001DE2  5C14               	subwf	___fladd@a,w,c
  5353  001DE4  6E18               	movwf	??___fladd& (0+255),c
  5354  001DE6  5011               	movf	___fladd@b+1,w,c
  5355  001DE8  5815               	subwfb	___fladd@a+1,w,c
  5356  001DEA  6E19               	movwf	(??___fladd+1)& (0+255),c
  5357  001DEC  5012               	movf	___fladd@b+2,w,c
  5358  001DEE  5816               	subwfb	___fladd@a+2,w,c
  5359  001DF0  6E1A               	movwf	(??___fladd+2)& (0+255),c
  5360  001DF2  5013               	movf	___fladd@b+3,w,c
  5361  001DF4  5817               	subwfb	___fladd@a+3,w,c
  5362  001DF6  6E1B               	movwf	(??___fladd+3)& (0+255),c
  5363  001DF8  0EFF               	movlw	255
  5364  001DFA  2418               	addwf	??___fladd,w,c
  5365  001DFC  6E10               	movwf	___fladd@b,c
  5366  001DFE  0EFF               	movlw	255
  5367  001E00  2019               	addwfc	??___fladd+1,w,c
  5368  001E02  6E11               	movwf	___fladd@b+1,c
  5369  001E04  0EFF               	movlw	255
  5370  001E06  201A               	addwfc	??___fladd+2,w,c
  5371  001E08  6E12               	movwf	___fladd@b+2,c
  5372  001E0A  0EFF               	movlw	255
  5373  001E0C  201B               	addwfc	??___fladd+3,w,c
  5374  001E0E  6E13               	movwf	___fladd@b+3,c
  5375  001E10  0E80               	movlw	128
  5376  001E12  1A1C               	xorwf	___fladd@signs,f,c
  5377  001E14  6C1F               	negf	___fladd@grs,c
  5378  001E16  501F               	movf	___fladd@grs,w,c
  5379  001E18  A4D8               	btfss	status,2,c
  5380  001E1A  D00F               	goto	l922
  5381  001E1C  0E01               	movlw	1
  5382  001E1E  2610               	addwf	___fladd@b,f,c
  5383  001E20  0E00               	movlw	0
  5384  001E22  2211               	addwfc	___fladd@b+1,f,c
  5385  001E24  2212               	addwfc	___fladd@b+2,f,c
  5386  001E26  2213               	addwfc	___fladd@b+3,f,c
  5387  001E28  D008               	goto	l922
  5388  001E2A                     l5121:
  5389  001E2A  5014               	movf	___fladd@a,w,c
  5390  001E2C  5E10               	subwf	___fladd@b,f,c
  5391  001E2E  5015               	movf	___fladd@a+1,w,c
  5392  001E30  5A11               	subwfb	___fladd@b+1,f,c
  5393  001E32  5016               	movf	___fladd@a+2,w,c
  5394  001E34  5A12               	subwfb	___fladd@b+2,f,c
  5395  001E36  5017               	movf	___fladd@a+3,w,c
  5396  001E38  5A13               	subwfb	___fladd@b+3,f,c
  5397  001E3A                     l922:
  5398  001E3A  5010               	movf	___fladd@b,w,c
  5399  001E3C  1011               	iorwf	___fladd@b+1,w,c
  5400  001E3E  1012               	iorwf	___fladd@b+2,w,c
  5401  001E40  1013               	iorwf	___fladd@b+3,w,c
  5402  001E42  A4D8               	btfss	status,2,c
  5403  001E44  D01C               	goto	l5145
  5404  001E46  501F               	movf	___fladd@grs,w,c
  5405  001E48  A4D8               	btfss	status,2,c
  5406  001E4A  D019               	goto	l5145
  5407  001E4C  0E00               	movlw	0
  5408  001E4E  6E10               	movwf	?___fladd,c
  5409  001E50  0E00               	movlw	0
  5410  001E52  6E11               	movwf	?___fladd+1,c
  5411  001E54  0E00               	movlw	0
  5412  001E56  6E12               	movwf	?___fladd+2,c
  5413  001E58  0E00               	movlw	0
  5414  001E5A  6E13               	movwf	?___fladd+3,c
  5415  001E5C  0012               	return	
  5416  001E5E                     l5129:
  5417  001E5E  90D8               	bcf	status,0,c
  5418  001E60  3610               	rlcf	___fladd@b,f,c
  5419  001E62  3611               	rlcf	___fladd@b+1,f,c
  5420  001E64  3612               	rlcf	___fladd@b+2,f,c
  5421  001E66  3613               	rlcf	___fladd@b+3,f,c
  5422  001E68  BE1F               	btfsc	___fladd@grs,7,c
  5423  001E6A  8010               	bsf	___fladd@b,0,c
  5424  001E6C  A01F               	btfss	___fladd@grs,0,c
  5425  001E6E  D002               	goto	l5139
  5426  001E70  80D8               	bsf	status,0,c
  5427  001E72  D001               	goto	L9
  5428  001E74                     l5139:
  5429  001E74  90D8               	bcf	status,0,c
  5430  001E76                     L9:
  5431  001E76  361F               	rlcf	___fladd@grs,f,c
  5432  001E78  501E               	movf	___fladd@bexp,w,c
  5433  001E7A  A4D8               	btfss	status,2,c
  5434  001E7C  061E               	decf	___fladd@bexp,f,c
  5435  001E7E                     l5145:
  5436  001E7E  AE12               	btfss	___fladd@b+2,7,c
  5437  001E80  D7EE               	goto	l5129
  5438  001E82                     u6190:
  5439  001E82  0E00               	movlw	0
  5440  001E84  6E1D               	movwf	___fladd@aexp,c
  5441  001E86  AE1F               	btfss	___fladd@grs,7,c
  5442  001E88  D00B               	goto	l931
  5443  001E8A  C01F  F018         	movff	___fladd@grs,??___fladd
  5444  001E8E  0E7F               	movlw	127
  5445  001E90  1618               	andwf	??___fladd,f,c
  5446  001E92  B4D8               	btfsc	status,2,c
  5447  001E94  D003               	goto	l932
  5448  001E96                     u6210:
  5449  001E96  0E01               	movlw	1
  5450  001E98  6E1D               	movwf	___fladd@aexp,c
  5451  001E9A  D002               	goto	l931
  5452  001E9C                     l932:
  5453  001E9C  B010               	btfsc	___fladd@b,0,c
  5454  001E9E  D7FB               	goto	u6210
  5455  001EA0                     l931:
  5456  001EA0  501D               	movf	___fladd@aexp,w,c
  5457  001EA2  B4D8               	btfsc	status,2,c
  5458  001EA4  D020               	goto	l5165
  5459  001EA6  0E01               	movlw	1
  5460  001EA8  2610               	addwf	___fladd@b,f,c
  5461  001EAA  0E00               	movlw	0
  5462  001EAC  2211               	addwfc	___fladd@b+1,f,c
  5463  001EAE  2212               	addwfc	___fladd@b+2,f,c
  5464  001EB0  2213               	addwfc	___fladd@b+3,f,c
  5465  001EB2  A013               	btfss	___fladd@b+3,0,c
  5466  001EB4  D018               	goto	l5165
  5467  001EB6  C010  F018         	movff	___fladd@b,??___fladd
  5468  001EBA  C011  F019         	movff	___fladd@b+1,??___fladd+1
  5469  001EBE  C012  F01A         	movff	___fladd@b+2,??___fladd+2
  5470  001EC2  C013  F01B         	movff	___fladd@b+3,??___fladd+3
  5471  001EC6  341B               	rlcf	??___fladd+3,w,c
  5472  001EC8  321B               	rrcf	??___fladd+3,f,c
  5473  001ECA  321A               	rrcf	??___fladd+2,f,c
  5474  001ECC  3219               	rrcf	??___fladd+1,f,c
  5475  001ECE  3218               	rrcf	??___fladd,f,c
  5476  001ED0  C018  F010         	movff	??___fladd,___fladd@b
  5477  001ED4  C019  F011         	movff	??___fladd+1,___fladd@b+1
  5478  001ED8  C01A  F012         	movff	??___fladd+2,___fladd@b+2
  5479  001EDC  C01B  F013         	movff	??___fladd+3,___fladd@b+3
  5480  001EE0  281E               	incf	___fladd@bexp,w,c
  5481  001EE2  A4D8               	btfss	status,2,c
  5482  001EE4  2A1E               	incf	___fladd@bexp,f,c
  5483  001EE6                     l5165:
  5484  001EE6  281E               	incf	___fladd@bexp,w,c
  5485  001EE8  B4D8               	btfsc	status,2,c
  5486  001EEA  D003               	goto	u6270
  5487  001EEC  501E               	movf	___fladd@bexp,w,c
  5488  001EEE  A4D8               	btfss	status,2,c
  5489  001EF0  D00D               	goto	l5173
  5490  001EF2                     u6270:
  5491  001EF2  0E00               	movlw	0
  5492  001EF4  6E10               	movwf	___fladd@b,c
  5493  001EF6  0E00               	movlw	0
  5494  001EF8  6E11               	movwf	___fladd@b+1,c
  5495  001EFA  0E00               	movlw	0
  5496  001EFC  6E12               	movwf	___fladd@b+2,c
  5497  001EFE  0E00               	movlw	0
  5498  001F00  6E13               	movwf	___fladd@b+3,c
  5499  001F02  501E               	movf	___fladd@bexp,w,c
  5500  001F04  A4D8               	btfss	status,2,c
  5501  001F06  D002               	goto	l5173
  5502  001F08  0E00               	movlw	0
  5503  001F0A  6E1C               	movwf	___fladd@signs,c
  5504  001F0C                     l5173:
  5505  001F0C  A01E               	btfss	___fladd@bexp,0,c
  5506  001F0E  D002               	goto	l5177
  5507  001F10  8E12               	bsf	___fladd@b+2,7,c
  5508  001F12  D001               	goto	l5179
  5509  001F14                     l5177:
  5510  001F14  9E12               	bcf	___fladd@b+2,7,c
  5511  001F16                     l5179:
  5512  001F16  90D8               	bcf	status,0,c
  5513  001F18  301E               	rrcf	___fladd@bexp,w,c
  5514  001F1A  6E13               	movwf	___fladd@b+3,c
  5515  001F1C  BE1C               	btfsc	___fladd@signs,7,c
  5516  001F1E  8E13               	bsf	___fladd@b+3,7,c
  5517  001F20  C010  F010         	movff	___fladd@b,?___fladd
  5518  001F24  C011  F011         	movff	___fladd@b+1,?___fladd+1
  5519  001F28  C012  F012         	movff	___fladd@b+2,?___fladd+2
  5520  001F2C  C013  F013         	movff	___fladd@b+3,?___fladd+3
  5521  001F30  0012               	return		;funcret
  5522  001F32                     __end_of___fladd:
  5523                           	opt callstack 0
  5524                           
  5525 ;; *************** function ___flneg *****************
  5526 ;; Defined at:
  5527 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  f1              4   15[COMRAM] unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4   15[COMRAM] unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         4       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        4 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    2
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_efgtoa
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text19
  5556  0038A2                     __ptext19:
  5557                           	opt callstack 0
  5558  0038A2                     ___flneg:
  5559                           	opt callstack 24
  5560                           
  5561                           ;incstack = 0
  5562  0038A2  5010               	movf	___flneg@f1,w,c
  5563  0038A4  1011               	iorwf	___flneg@f1+1,w,c
  5564  0038A6  1012               	iorwf	___flneg@f1+2,w,c
  5565  0038A8  1013               	iorwf	___flneg@f1+3,w,c
  5566  0038AA  B4D8               	btfsc	status,2,c
  5567  0038AC  D008               	goto	l5681
  5568  0038AE  0E00               	movlw	0
  5569  0038B0  1A10               	xorwf	___flneg@f1,f,c
  5570  0038B2  0E00               	movlw	0
  5571  0038B4  1A11               	xorwf	___flneg@f1+1,f,c
  5572  0038B6  0E00               	movlw	0
  5573  0038B8  1A12               	xorwf	___flneg@f1+2,f,c
  5574  0038BA  0E80               	movlw	128
  5575  0038BC  1A13               	xorwf	___flneg@f1+3,f,c
  5576  0038BE                     l5681:
  5577  0038BE  C010  F010         	movff	___flneg@f1,?___flneg
  5578  0038C2  C011  F011         	movff	___flneg@f1+1,?___flneg+1
  5579  0038C6  C012  F012         	movff	___flneg@f1+2,?___flneg+2
  5580  0038CA  C013  F013         	movff	___flneg@f1+3,?___flneg+3
  5581  0038CE  0012               	return		;funcret
  5582  0038D0                     __end_of___flneg:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function ___flge *****************
  5586 ;; Defined at:
  5587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  ff1             4   40[COMRAM] unsigned char 
  5590 ;;  ff2             4   44[COMRAM] unsigned char 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;		None               void
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5602 ;;      Params:         8       0       0       0       0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5604 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5605 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5606 ;;Total ram usage:       12 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:    2
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_efgtoa
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text20
  5617  002D7E                     __ptext20:
  5618                           	opt callstack 0
  5619  002D7E                     ___flge:
  5620                           	opt callstack 24
  5621                           
  5622                           ;incstack = 0
  5623  002D7E  0E00               	movlw	0
  5624  002D80  1429               	andwf	___flge@ff1,w,c
  5625  002D82  6E31               	movwf	??___flge& (0+255),c
  5626  002D84  0E00               	movlw	0
  5627  002D86  142A               	andwf	___flge@ff1+1,w,c
  5628  002D88  6E32               	movwf	(??___flge+1)& (0+255),c
  5629  002D8A  0E80               	movlw	128
  5630  002D8C  142B               	andwf	___flge@ff1+2,w,c
  5631  002D8E  6E33               	movwf	(??___flge+2)& (0+255),c
  5632  002D90  0E7F               	movlw	127
  5633  002D92  142C               	andwf	___flge@ff1+3,w,c
  5634  002D94  6E34               	movwf	(??___flge+3)& (0+255),c
  5635  002D96  5031               	movf	??___flge,w,c
  5636  002D98  1032               	iorwf	??___flge+1,w,c
  5637  002D9A  1033               	iorwf	??___flge+2,w,c
  5638  002D9C  1034               	iorwf	??___flge+3,w,c
  5639  002D9E  A4D8               	btfss	status,2,c
  5640  002DA0  D008               	goto	l5659
  5641  002DA2  0E00               	movlw	0
  5642  002DA4  6E29               	movwf	___flge@ff1,c
  5643  002DA6  0E00               	movlw	0
  5644  002DA8  6E2A               	movwf	___flge@ff1+1,c
  5645  002DAA  0E00               	movlw	0
  5646  002DAC  6E2B               	movwf	___flge@ff1+2,c
  5647  002DAE  0E00               	movlw	0
  5648  002DB0  6E2C               	movwf	___flge@ff1+3,c
  5649  002DB2                     l5659:
  5650  002DB2  0E00               	movlw	0
  5651  002DB4  142D               	andwf	___flge@ff2,w,c
  5652  002DB6  6E31               	movwf	??___flge& (0+255),c
  5653  002DB8  0E00               	movlw	0
  5654  002DBA  142E               	andwf	___flge@ff2+1,w,c
  5655  002DBC  6E32               	movwf	(??___flge+1)& (0+255),c
  5656  002DBE  0E80               	movlw	128
  5657  002DC0  142F               	andwf	___flge@ff2+2,w,c
  5658  002DC2  6E33               	movwf	(??___flge+2)& (0+255),c
  5659  002DC4  0E7F               	movlw	127
  5660  002DC6  1430               	andwf	___flge@ff2+3,w,c
  5661  002DC8  6E34               	movwf	(??___flge+3)& (0+255),c
  5662  002DCA  5031               	movf	??___flge,w,c
  5663  002DCC  1032               	iorwf	??___flge+1,w,c
  5664  002DCE  1033               	iorwf	??___flge+2,w,c
  5665  002DD0  1034               	iorwf	??___flge+3,w,c
  5666  002DD2  A4D8               	btfss	status,2,c
  5667  002DD4  D008               	goto	l5663
  5668  002DD6  0E00               	movlw	0
  5669  002DD8  6E2D               	movwf	___flge@ff2,c
  5670  002DDA  0E00               	movlw	0
  5671  002DDC  6E2E               	movwf	___flge@ff2+1,c
  5672  002DDE  0E00               	movlw	0
  5673  002DE0  6E2F               	movwf	___flge@ff2+2,c
  5674  002DE2  0E00               	movlw	0
  5675  002DE4  6E30               	movwf	___flge@ff2+3,c
  5676  002DE6                     l5663:
  5677  002DE6  AE2C               	btfss	___flge@ff1+3,7,c
  5678  002DE8  D009               	goto	l5667
  5679  002DEA  6C29               	negf	___flge@ff1,c
  5680  002DEC  1E2A               	comf	___flge@ff1+1,f,c
  5681  002DEE  B0D8               	btfsc	status,0,c
  5682  002DF0  2A2A               	incf	___flge@ff1+1,f,c
  5683  002DF2  1E2B               	comf	___flge@ff1+2,f,c
  5684  002DF4  B0D8               	btfsc	status,0,c
  5685  002DF6  2A2B               	incf	___flge@ff1+2,f,c
  5686  002DF8  0E80               	movlw	128
  5687  002DFA  562C               	subfwb	___flge@ff1+3,f,c
  5688  002DFC                     l5667:
  5689  002DFC  AE30               	btfss	___flge@ff2+3,7,c
  5690  002DFE  D009               	goto	l642
  5691  002E00  6C2D               	negf	___flge@ff2,c
  5692  002E02  1E2E               	comf	___flge@ff2+1,f,c
  5693  002E04  B0D8               	btfsc	status,0,c
  5694  002E06  2A2E               	incf	___flge@ff2+1,f,c
  5695  002E08  1E2F               	comf	___flge@ff2+2,f,c
  5696  002E0A  B0D8               	btfsc	status,0,c
  5697  002E0C  2A2F               	incf	___flge@ff2+2,f,c
  5698  002E0E  0E80               	movlw	128
  5699  002E10  5630               	subfwb	___flge@ff2+3,f,c
  5700  002E12                     l642:
  5701  002E12  0E00               	movlw	0
  5702  002E14  1A29               	xorwf	___flge@ff1,f,c
  5703  002E16  0E00               	movlw	0
  5704  002E18  1A2A               	xorwf	___flge@ff1+1,f,c
  5705  002E1A  0E00               	movlw	0
  5706  002E1C  1A2B               	xorwf	___flge@ff1+2,f,c
  5707  002E1E  0E80               	movlw	128
  5708  002E20  1A2C               	xorwf	___flge@ff1+3,f,c
  5709  002E22  0E00               	movlw	0
  5710  002E24  1A2D               	xorwf	___flge@ff2,f,c
  5711  002E26  0E00               	movlw	0
  5712  002E28  1A2E               	xorwf	___flge@ff2+1,f,c
  5713  002E2A  0E00               	movlw	0
  5714  002E2C  1A2F               	xorwf	___flge@ff2+2,f,c
  5715  002E2E  0E80               	movlw	128
  5716  002E30  1A30               	xorwf	___flge@ff2+3,f,c
  5717  002E32  502D               	movf	___flge@ff2,w,c
  5718  002E34  5C29               	subwf	___flge@ff1,w,c
  5719  002E36  502E               	movf	___flge@ff2+1,w,c
  5720  002E38  582A               	subwfb	___flge@ff1+1,w,c
  5721  002E3A  502F               	movf	___flge@ff2+2,w,c
  5722  002E3C  582B               	subwfb	___flge@ff1+2,w,c
  5723  002E3E  5030               	movf	___flge@ff2+3,w,c
  5724  002E40  582C               	subwfb	___flge@ff1+3,w,c
  5725  002E42  B0D8               	btfsc	status,0,c
  5726  002E44  D002               	goto	l5673
  5727  002E46  90D8               	bcf	status,0,c
  5728  002E48  0012               	return	
  5729  002E4A                     l5673:
  5730  002E4A  80D8               	bsf	status,0,c
  5731  002E4C  0012               	return		;funcret
  5732  002E4E                     __end_of___flge:
  5733                           	opt callstack 0
  5734                           
  5735 ;; *************** function ___fleq *****************
  5736 ;; Defined at:
  5737 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  ff1             4   15[COMRAM] unsigned char 
  5740 ;;  ff2             4   19[COMRAM] unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5752 ;;      Params:         8       0       0       0       0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5754 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5755 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:       12 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    2
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_main
  5763 ;;		_efgtoa
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text21
  5768  003336                     __ptext21:
  5769                           	opt callstack 0
  5770  003336                     ___fleq:
  5771                           	opt callstack 24
  5772                           
  5773                           ;incstack = 0
  5774  003336  0E00               	movlw	0
  5775  003338  1410               	andwf	___fleq@ff1,w,c
  5776  00333A  6E18               	movwf	??___fleq& (0+255),c
  5777  00333C  0E00               	movlw	0
  5778  00333E  1411               	andwf	___fleq@ff1+1,w,c
  5779  003340  6E19               	movwf	(??___fleq+1)& (0+255),c
  5780  003342  0E80               	movlw	128
  5781  003344  1412               	andwf	___fleq@ff1+2,w,c
  5782  003346  6E1A               	movwf	(??___fleq+2)& (0+255),c
  5783  003348  0E7F               	movlw	127
  5784  00334A  1413               	andwf	___fleq@ff1+3,w,c
  5785  00334C  6E1B               	movwf	(??___fleq+3)& (0+255),c
  5786  00334E  5018               	movf	??___fleq,w,c
  5787  003350  1019               	iorwf	??___fleq+1,w,c
  5788  003352  101A               	iorwf	??___fleq+2,w,c
  5789  003354  101B               	iorwf	??___fleq+3,w,c
  5790  003356  A4D8               	btfss	status,2,c
  5791  003358  D008               	goto	l5643
  5792  00335A  0E00               	movlw	0
  5793  00335C  6E10               	movwf	___fleq@ff1,c
  5794  00335E  0E00               	movlw	0
  5795  003360  6E11               	movwf	___fleq@ff1+1,c
  5796  003362  0E00               	movlw	0
  5797  003364  6E12               	movwf	___fleq@ff1+2,c
  5798  003366  0E00               	movlw	0
  5799  003368  6E13               	movwf	___fleq@ff1+3,c
  5800  00336A                     l5643:
  5801  00336A  0E00               	movlw	0
  5802  00336C  1414               	andwf	___fleq@ff2,w,c
  5803  00336E  6E18               	movwf	??___fleq& (0+255),c
  5804  003370  0E00               	movlw	0
  5805  003372  1415               	andwf	___fleq@ff2+1,w,c
  5806  003374  6E19               	movwf	(??___fleq+1)& (0+255),c
  5807  003376  0E80               	movlw	128
  5808  003378  1416               	andwf	___fleq@ff2+2,w,c
  5809  00337A  6E1A               	movwf	(??___fleq+2)& (0+255),c
  5810  00337C  0E7F               	movlw	127
  5811  00337E  1417               	andwf	___fleq@ff2+3,w,c
  5812  003380  6E1B               	movwf	(??___fleq+3)& (0+255),c
  5813  003382  5018               	movf	??___fleq,w,c
  5814  003384  1019               	iorwf	??___fleq+1,w,c
  5815  003386  101A               	iorwf	??___fleq+2,w,c
  5816  003388  101B               	iorwf	??___fleq+3,w,c
  5817  00338A  A4D8               	btfss	status,2,c
  5818  00338C  D008               	goto	l5647
  5819  00338E  0E00               	movlw	0
  5820  003390  6E14               	movwf	___fleq@ff2,c
  5821  003392  0E00               	movlw	0
  5822  003394  6E15               	movwf	___fleq@ff2+1,c
  5823  003396  0E00               	movlw	0
  5824  003398  6E16               	movwf	___fleq@ff2+2,c
  5825  00339A  0E00               	movlw	0
  5826  00339C  6E17               	movwf	___fleq@ff2+3,c
  5827  00339E                     l5647:
  5828  00339E  5014               	movf	___fleq@ff2,w,c
  5829  0033A0  1810               	xorwf	___fleq@ff1,w,c
  5830  0033A2  E10A               	bnz	u7150
  5831  0033A4  5015               	movf	___fleq@ff2+1,w,c
  5832  0033A6  1811               	xorwf	___fleq@ff1+1,w,c
  5833  0033A8  E107               	bnz	u7150
  5834  0033AA  5016               	movf	___fleq@ff2+2,w,c
  5835  0033AC  1812               	xorwf	___fleq@ff1+2,w,c
  5836  0033AE  E104               	bnz	u7150
  5837  0033B0  5017               	movf	___fleq@ff2+3,w,c
  5838  0033B2  1813               	xorwf	___fleq@ff1+3,w,c
  5839  0033B4  B4D8               	btfsc	status,2,c
  5840  0033B6  D002               	goto	l5651
  5841  0033B8                     u7150:
  5842  0033B8  90D8               	bcf	status,0,c
  5843  0033BA  0012               	return	
  5844  0033BC                     l5651:
  5845  0033BC  80D8               	bsf	status,0,c
  5846  0033BE  0012               	return		;funcret
  5847  0033C0                     __end_of___fleq:
  5848                           	opt callstack 0
  5849                           
  5850 ;; *************** function ___awmod *****************
  5851 ;; Defined at:
  5852 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  dividend        2   15[COMRAM] int 
  5855 ;;  divisor         2   17[COMRAM] int 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  sign            1   20[COMRAM] unsigned char 
  5858 ;;  counter         1   19[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2   15[COMRAM] int 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5868 ;;      Params:         4       0       0       0       0       0       0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5871 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5872 ;;Total ram usage:        6 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    2
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_efgtoa
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text22
  5883  00352E                     __ptext22:
  5884                           	opt callstack 0
  5885  00352E                     ___awmod:
  5886                           	opt callstack 24
  5887                           
  5888                           ;incstack = 0
  5889  00352E  0E00               	movlw	0
  5890  003530  6E15               	movwf	___awmod@sign,c
  5891  003532  AE11               	btfss	___awmod@dividend+1,7,c
  5892  003534  D006               	goto	l5611
  5893  003536  6C10               	negf	___awmod@dividend,c
  5894  003538  1E11               	comf	___awmod@dividend+1,f,c
  5895  00353A  B0D8               	btfsc	status,0,c
  5896  00353C  2A11               	incf	___awmod@dividend+1,f,c
  5897  00353E  0E01               	movlw	1
  5898  003540  6E15               	movwf	___awmod@sign,c
  5899  003542                     l5611:
  5900  003542  AE13               	btfss	___awmod@divisor+1,7,c
  5901  003544  D004               	goto	l5615
  5902  003546  6C12               	negf	___awmod@divisor,c
  5903  003548  1E13               	comf	___awmod@divisor+1,f,c
  5904  00354A  B0D8               	btfsc	status,0,c
  5905  00354C  2A13               	incf	___awmod@divisor+1,f,c
  5906  00354E                     l5615:
  5907  00354E  5012               	movf	___awmod@divisor,w,c
  5908  003550  1013               	iorwf	___awmod@divisor+1,w,c
  5909  003552  B4D8               	btfsc	status,2,c
  5910  003554  D018               	goto	l5631
  5911  003556  0E01               	movlw	1
  5912  003558  6E14               	movwf	___awmod@counter,c
  5913  00355A  D004               	goto	l5621
  5914  00355C                     l5619:
  5915  00355C  90D8               	bcf	status,0,c
  5916  00355E  3612               	rlcf	___awmod@divisor,f,c
  5917  003560  3613               	rlcf	___awmod@divisor+1,f,c
  5918  003562  2A14               	incf	___awmod@counter,f,c
  5919  003564                     l5621:
  5920  003564  AE13               	btfss	___awmod@divisor+1,7,c
  5921  003566  D7FA               	goto	l5619
  5922  003568                     u7100:
  5923  003568  5012               	movf	___awmod@divisor,w,c
  5924  00356A  5C10               	subwf	___awmod@dividend,w,c
  5925  00356C  5013               	movf	___awmod@divisor+1,w,c
  5926  00356E  5811               	subwfb	___awmod@dividend+1,w,c
  5927  003570  A0D8               	btfss	status,0,c
  5928  003572  D004               	goto	l5627
  5929  003574  5012               	movf	___awmod@divisor,w,c
  5930  003576  5E10               	subwf	___awmod@dividend,f,c
  5931  003578  5013               	movf	___awmod@divisor+1,w,c
  5932  00357A  5A11               	subwfb	___awmod@dividend+1,f,c
  5933  00357C                     l5627:
  5934  00357C  90D8               	bcf	status,0,c
  5935  00357E  3213               	rrcf	___awmod@divisor+1,f,c
  5936  003580  3212               	rrcf	___awmod@divisor,f,c
  5937  003582  2E14               	decfsz	___awmod@counter,f,c
  5938  003584  D7F1               	goto	u7100
  5939  003586                     l5631:
  5940  003586  5015               	movf	___awmod@sign,w,c
  5941  003588  B4D8               	btfsc	status,2,c
  5942  00358A  D004               	goto	l5635
  5943  00358C  6C10               	negf	___awmod@dividend,c
  5944  00358E  1E11               	comf	___awmod@dividend+1,f,c
  5945  003590  B0D8               	btfsc	status,0,c
  5946  003592  2A11               	incf	___awmod@dividend+1,f,c
  5947  003594                     l5635:
  5948  003594  C010  F010         	movff	___awmod@dividend,?___awmod
  5949  003598  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
  5950  00359C  0012               	return		;funcret
  5951  00359E                     __end_of___awmod:
  5952                           	opt callstack 0
  5953                           
  5954 ;; *************** function ___awdiv *****************
  5955 ;; Defined at:
  5956 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  dividend        2   15[COMRAM] int 
  5959 ;;  divisor         2   17[COMRAM] int 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  quotient        2   21[COMRAM] int 
  5962 ;;  sign            1   20[COMRAM] unsigned char 
  5963 ;;  counter         1   19[COMRAM] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  2   15[COMRAM] int 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5973 ;;      Params:         4       0       0       0       0       0       0       0       0
  5974 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5976 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5977 ;;Total ram usage:        8 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_efgtoa
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text23
  5988  0033C0                     __ptext23:
  5989                           	opt callstack 0
  5990  0033C0                     ___awdiv:
  5991                           	opt callstack 24
  5992                           
  5993                           ;incstack = 0
  5994  0033C0  0E00               	movlw	0
  5995  0033C2  6E15               	movwf	___awdiv@sign,c
  5996  0033C4  AE13               	btfss	___awdiv@divisor+1,7,c
  5997  0033C6  D006               	goto	l5567
  5998  0033C8  6C12               	negf	___awdiv@divisor,c
  5999  0033CA  1E13               	comf	___awdiv@divisor+1,f,c
  6000  0033CC  B0D8               	btfsc	status,0,c
  6001  0033CE  2A13               	incf	___awdiv@divisor+1,f,c
  6002  0033D0  0E01               	movlw	1
  6003  0033D2  6E15               	movwf	___awdiv@sign,c
  6004  0033D4                     l5567:
  6005  0033D4  AE11               	btfss	___awdiv@dividend+1,7,c
  6006  0033D6  D006               	goto	l5573
  6007  0033D8  6C10               	negf	___awdiv@dividend,c
  6008  0033DA  1E11               	comf	___awdiv@dividend+1,f,c
  6009  0033DC  B0D8               	btfsc	status,0,c
  6010  0033DE  2A11               	incf	___awdiv@dividend+1,f,c
  6011  0033E0  0E01               	movlw	1
  6012  0033E2  1A15               	xorwf	___awdiv@sign,f,c
  6013  0033E4                     l5573:
  6014  0033E4  0E00               	movlw	0
  6015  0033E6  6E17               	movwf	___awdiv@quotient+1,c
  6016  0033E8  0E00               	movlw	0
  6017  0033EA  6E16               	movwf	___awdiv@quotient,c
  6018  0033EC  5012               	movf	___awdiv@divisor,w,c
  6019  0033EE  1013               	iorwf	___awdiv@divisor+1,w,c
  6020  0033F0  B4D8               	btfsc	status,2,c
  6021  0033F2  D01C               	goto	l5595
  6022  0033F4  0E01               	movlw	1
  6023  0033F6  6E14               	movwf	___awdiv@counter,c
  6024  0033F8  D004               	goto	l5581
  6025  0033FA                     l5579:
  6026  0033FA  90D8               	bcf	status,0,c
  6027  0033FC  3612               	rlcf	___awdiv@divisor,f,c
  6028  0033FE  3613               	rlcf	___awdiv@divisor+1,f,c
  6029  003400  2A14               	incf	___awdiv@counter,f,c
  6030  003402                     l5581:
  6031  003402  AE13               	btfss	___awdiv@divisor+1,7,c
  6032  003404  D7FA               	goto	l5579
  6033  003406                     u7040:
  6034  003406  90D8               	bcf	status,0,c
  6035  003408  3616               	rlcf	___awdiv@quotient,f,c
  6036  00340A  3617               	rlcf	___awdiv@quotient+1,f,c
  6037  00340C  5012               	movf	___awdiv@divisor,w,c
  6038  00340E  5C10               	subwf	___awdiv@dividend,w,c
  6039  003410  5013               	movf	___awdiv@divisor+1,w,c
  6040  003412  5811               	subwfb	___awdiv@dividend+1,w,c
  6041  003414  A0D8               	btfss	status,0,c
  6042  003416  D005               	goto	l5591
  6043  003418  5012               	movf	___awdiv@divisor,w,c
  6044  00341A  5E10               	subwf	___awdiv@dividend,f,c
  6045  00341C  5013               	movf	___awdiv@divisor+1,w,c
  6046  00341E  5A11               	subwfb	___awdiv@dividend+1,f,c
  6047  003420  8016               	bsf	___awdiv@quotient,0,c
  6048  003422                     l5591:
  6049  003422  90D8               	bcf	status,0,c
  6050  003424  3213               	rrcf	___awdiv@divisor+1,f,c
  6051  003426  3212               	rrcf	___awdiv@divisor,f,c
  6052  003428  2E14               	decfsz	___awdiv@counter,f,c
  6053  00342A  D7ED               	goto	u7040
  6054  00342C                     l5595:
  6055  00342C  5015               	movf	___awdiv@sign,w,c
  6056  00342E  B4D8               	btfsc	status,2,c
  6057  003430  D004               	goto	l5599
  6058  003432  6C16               	negf	___awdiv@quotient,c
  6059  003434  1E17               	comf	___awdiv@quotient+1,f,c
  6060  003436  B0D8               	btfsc	status,0,c
  6061  003438  2A17               	incf	___awdiv@quotient+1,f,c
  6062  00343A                     l5599:
  6063  00343A  C016  F010         	movff	___awdiv@quotient,?___awdiv
  6064  00343E  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  6065  003442  0012               	return		;funcret
  6066  003444                     __end_of___awdiv:
  6067                           	opt callstack 0
  6068                           
  6069 ;; *************** function _atoi *****************
  6070 ;; Defined at:
  6071 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  s               2   22[COMRAM] PTR const unsigned char 
  6074 ;;		 -> STR_1(5), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  n               2   35[COMRAM] int 
  6077 ;;  neg             2   28[COMRAM] int 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2   22[COMRAM] int 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6087 ;;      Params:         2       0       0       0       0       0       0       0       0
  6088 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6089 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6090 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6091 ;;Total ram usage:       15 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    3
  6094 ;; This function calls:
  6095 ;;		___wmul
  6096 ;;		_isdigit
  6097 ;;		_isspace
  6098 ;; This function is called by:
  6099 ;;		_vfpfcnvrt
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text24
  6104  00266A                     __ptext24:
  6105                           	opt callstack 0
  6106  00266A                     _atoi:
  6107                           	opt callstack 24
  6108                           
  6109                           ;incstack = 0
  6110  00266A  0E00               	movlw	0
  6111  00266C  6E25               	movwf	atoi@n+1,c
  6112  00266E  0E00               	movlw	0
  6113  002670  6E24               	movwf	atoi@n,c
  6114  002672  0E00               	movlw	0
  6115  002674  6E1E               	movwf	atoi@neg+1,c
  6116  002676  0E00               	movlw	0
  6117  002678  6E1D               	movwf	atoi@neg,c
  6118  00267A  D002               	goto	l6043
  6119  00267C                     l6041:
  6120  00267C  4A17               	infsnz	atoi@s,f,c
  6121  00267E  2A18               	incf	atoi@s+1,f,c
  6122  002680                     l6043:
  6123  002680  0E01               	movlw	1
  6124  002682  6E23               	movwf	_atoi$1556,c
  6125  002684  C017  FFF6         	movff	atoi@s,tblptrl
  6126  002688  C018  FFF7         	movff	atoi@s+1,tblptrh
  6127  00268C                     	if	0	;tblptru may be non-zero
  6128  00268C                     	endif
  6129  00268C                     	if	0	;tblptru may be non-zero
  6130  00268C                     	endif
  6131  00268C  0008               	tblrd		*
  6132  00268E  50F5               	movf	tablat,w,c
  6133  002690  0A20               	xorlw	32
  6134  002692  B4D8               	btfsc	status,2,c
  6135  002694  D018               	goto	l6051
  6136  002696  0EF7               	movlw	247
  6137  002698  6E19               	movwf	??_atoi& (0+255),c
  6138  00269A  0EFF               	movlw	255
  6139  00269C  6E1A               	movwf	(??_atoi+1)& (0+255),c
  6140  00269E  C017  FFF6         	movff	atoi@s,tblptrl
  6141  0026A2  C018  FFF7         	movff	atoi@s+1,tblptrh
  6142  0026A6                     	if	0	;tblptru may be non-zero
  6143  0026A6                     	endif
  6144  0026A6                     	if	0	;tblptru may be non-zero
  6145  0026A6                     	endif
  6146  0026A6  0008               	tblrd		*
  6147  0026A8  50F5               	movf	tablat,w,c
  6148  0026AA  6E1B               	movwf	(??_atoi+2)& (0+255),c
  6149  0026AC  6A1C               	clrf	(??_atoi+3)& (0+255),c
  6150  0026AE  5019               	movf	??_atoi,w,c
  6151  0026B0  261B               	addwf	??_atoi+2,f,c
  6152  0026B2  501A               	movf	??_atoi+1,w,c
  6153  0026B4  221C               	addwfc	??_atoi+3,f,c
  6154  0026B6  501C               	movf	??_atoi+3,w,c
  6155  0026B8  E104               	bnz	u7840
  6156  0026BA  0E05               	movlw	5
  6157  0026BC  5C1B               	subwf	??_atoi+2,w,c
  6158  0026BE  A0D8               	btfss	status,0,c
  6159  0026C0  D002               	goto	l6051
  6160  0026C2                     u7840:
  6161  0026C2  0E00               	movlw	0
  6162  0026C4  6E23               	movwf	_atoi$1556,c
  6163  0026C6                     l6051:
  6164  0026C6  C023  F01F         	movff	_atoi$1556,_atoi$1555
  6165  0026CA  6A20               	clrf	_atoi$1555+1,c
  6166  0026CC  501F               	movf	_atoi$1555,w,c
  6167  0026CE  1020               	iorwf	_atoi$1555+1,w,c
  6168  0026D0  B4D8               	btfsc	status,2,c
  6169  0026D2  D008               	goto	l6061
  6170  0026D4  D7D3               	goto	l6041
  6171  0026D6                     l6057:
  6172  0026D6  0E00               	movlw	0
  6173  0026D8  6E1E               	movwf	atoi@neg+1,c
  6174  0026DA  0E01               	movlw	1
  6175  0026DC  6E1D               	movwf	atoi@neg,c
  6176  0026DE                     l6059:
  6177  0026DE  4A17               	infsnz	atoi@s,f,c
  6178  0026E0  2A18               	incf	atoi@s+1,f,c
  6179  0026E2  D02E               	goto	l6067
  6180  0026E4                     l6061:
  6181  0026E4  C017  FFF6         	movff	atoi@s,tblptrl
  6182  0026E8  C018  FFF7         	movff	atoi@s+1,tblptrh
  6183  0026EC                     	if	0	;tblptru may be non-zero
  6184  0026EC                     	endif
  6185  0026EC                     	if	0	;tblptru may be non-zero
  6186  0026EC                     	endif
  6187  0026EC  0008               	tblrd		*
  6188  0026EE  50F5               	movf	tablat,w,c
  6189  0026F0  6E19               	movwf	??_atoi& (0+255),c
  6190  0026F2  6A1A               	clrf	(??_atoi+1)& (0+255),c
  6191                           
  6192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6193                           ; Switch size 1, requested type "simple"
  6194                           ; Number of cases is 1, Range of values is 0 to 0
  6195                           ; switch strategies available:
  6196                           ; Name         Instructions Cycles
  6197                           ; simple_byte            4     3 (average)
  6198                           ;	Chosen strategy is simple_byte
  6199  0026F4  501A               	movf	??_atoi+1,w,c
  6200  0026F6  0A00               	xorlw	0	; case 0
  6201  0026F8  A4D8               	btfss	status,2,c
  6202  0026FA  D022               	goto	l6067
  6203                           
  6204                           ; Switch size 1, requested type "simple"
  6205                           ; Number of cases is 2, Range of values is 43 to 45
  6206                           ; switch strategies available:
  6207                           ; Name         Instructions Cycles
  6208                           ; simple_byte            7     4 (average)
  6209                           ;	Chosen strategy is simple_byte
  6210  0026FC  5019               	movf	??_atoi,w,c
  6211  0026FE  0A2B               	xorlw	43	; case 43
  6212  002700  B4D8               	btfsc	status,2,c
  6213  002702  D7ED               	goto	l6059
  6214  002704  0A06               	xorlw	6	; case 45
  6215  002706  B4D8               	btfsc	status,2,c
  6216  002708  D7E6               	goto	l6057
  6217  00270A  D01A               	goto	l6067
  6218  00270C                     l6063:
  6219  00270C  C024  F010         	movff	atoi@n,___wmul@multiplier
  6220  002710  C025  F011         	movff	atoi@n+1,___wmul@multiplier+1
  6221  002714  0E00               	movlw	0
  6222  002716  6E13               	movwf	___wmul@multiplicand+1,c
  6223  002718  0E0A               	movlw	10
  6224  00271A  6E12               	movwf	___wmul@multiplicand,c
  6225  00271C  EC7D  F01C         	call	___wmul	;wreg free
  6226  002720  C017  FFF6         	movff	atoi@s,tblptrl
  6227  002724  C018  FFF7         	movff	atoi@s+1,tblptrh
  6228  002728                     	if	0	;tblptru may be non-zero
  6229  002728                     	endif
  6230  002728                     	if	0	;tblptru may be non-zero
  6231  002728                     	endif
  6232  002728  0008               	tblrd		*
  6233  00272A  50F5               	movf	tablat,w,c
  6234  00272C  5E10               	subwf	?___wmul,f,c
  6235  00272E  0E00               	movlw	0
  6236  002730  5A11               	subwfb	?___wmul+1,f,c
  6237  002732  0E30               	movlw	48
  6238  002734  2410               	addwf	?___wmul,w,c
  6239  002736  6E24               	movwf	atoi@n,c
  6240  002738  0E00               	movlw	0
  6241  00273A  2011               	addwfc	?___wmul+1,w,c
  6242  00273C  6E25               	movwf	atoi@n+1,c
  6243  00273E  D7CF               	goto	l6059
  6244  002740                     l6067:
  6245  002740  0ED0               	movlw	208
  6246  002742  6E19               	movwf	??_atoi& (0+255),c
  6247  002744  0EFF               	movlw	255
  6248  002746  6E1A               	movwf	(??_atoi+1)& (0+255),c
  6249  002748  C017  FFF6         	movff	atoi@s,tblptrl
  6250  00274C  C018  FFF7         	movff	atoi@s+1,tblptrh
  6251  002750                     	if	0	;tblptru may be non-zero
  6252  002750                     	endif
  6253  002750                     	if	0	;tblptru may be non-zero
  6254  002750                     	endif
  6255  002750  0008               	tblrd		*
  6256  002752  50F5               	movf	tablat,w,c
  6257  002754  6E1B               	movwf	(??_atoi+2)& (0+255),c
  6258  002756  6A1C               	clrf	(??_atoi+3)& (0+255),c
  6259  002758  5019               	movf	??_atoi,w,c
  6260  00275A  261B               	addwf	??_atoi+2,f,c
  6261  00275C  501A               	movf	??_atoi+1,w,c
  6262  00275E  221C               	addwfc	??_atoi+3,f,c
  6263  002760  501C               	movf	??_atoi+3,w,c
  6264  002762  E106               	bnz	u7860
  6265  002764  0E0A               	movlw	10
  6266  002766  5C1B               	subwf	??_atoi+2,w,c
  6267  002768  B0D8               	btfsc	status,0,c
  6268  00276A  D002               	goto	u7860
  6269  00276C  0E01               	movlw	1
  6270  00276E  D001               	goto	u7870
  6271  002770                     u7860:
  6272  002770  0E00               	movlw	0
  6273  002772                     u7870:
  6274  002772  6E21               	movwf	_atoi$1557,c
  6275  002774  6A22               	clrf	_atoi$1557+1,c
  6276  002776  5021               	movf	_atoi$1557,w,c
  6277  002778  1022               	iorwf	_atoi$1557+1,w,c
  6278  00277A  A4D8               	btfss	status,2,c
  6279  00277C  D7C7               	goto	l6063
  6280  00277E  501D               	movf	atoi@neg,w,c
  6281  002780  101E               	iorwf	atoi@neg+1,w,c
  6282  002782  A4D8               	btfss	status,2,c
  6283  002784  D00D               	goto	l1087
  6284  002786  C024  F019         	movff	atoi@n,??_atoi
  6285  00278A  C025  F01A         	movff	atoi@n+1,??_atoi+1
  6286  00278E  1E19               	comf	??_atoi,f,c
  6287  002790  1E1A               	comf	??_atoi+1,f,c
  6288  002792  4A19               	infsnz	??_atoi,f,c
  6289  002794  2A1A               	incf	??_atoi+1,f,c
  6290  002796  C019  F017         	movff	??_atoi,?_atoi
  6291  00279A  C01A  F018         	movff	??_atoi+1,?_atoi+1
  6292  00279E  0012               	return	
  6293  0027A0                     l1087:
  6294  0027A0  C024  F017         	movff	atoi@n,?_atoi
  6295  0027A4  C025  F018         	movff	atoi@n+1,?_atoi+1
  6296  0027A8  0012               	return		;funcret
  6297  0027AA                     __end_of_atoi:
  6298                           	opt callstack 0
  6299                           
  6300 ;; *************** function _isspace *****************
  6301 ;; Defined at:
  6302 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  c               2   15[COMRAM] int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  2   15[COMRAM] int 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6316 ;;      Params:         2       0       0       0       0       0       0       0       0
  6317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6318 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6319 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6320 ;;Total ram usage:        7 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    2
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_atoi
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text25
  6331  00379A                     __ptext25:
  6332                           	opt callstack 0
  6333  00379A                     _isspace:
  6334                           	opt callstack 24
  6335                           
  6336                           ;incstack = 0
  6337  00379A  0E01               	movlw	1
  6338  00379C  6E16               	movwf	_isspace$1586,c
  6339  00379E  0E20               	movlw	32
  6340  0037A0  1810               	xorwf	isspace@c,w,c
  6341  0037A2  1011               	iorwf	isspace@c+1,w,c
  6342  0037A4  B4D8               	btfsc	status,2,c
  6343  0037A6  D014               	goto	l5737
  6344  0037A8  0EF7               	movlw	247
  6345  0037AA  6E12               	movwf	??_isspace& (0+255),c
  6346  0037AC  0EFF               	movlw	255
  6347  0037AE  6E13               	movwf	(??_isspace+1)& (0+255),c
  6348  0037B0  C010  F014         	movff	isspace@c,??_isspace+2
  6349  0037B4  C011  F015         	movff	isspace@c+1,??_isspace+3
  6350  0037B8  5012               	movf	??_isspace,w,c
  6351  0037BA  2614               	addwf	??_isspace+2,f,c
  6352  0037BC  5013               	movf	??_isspace+1,w,c
  6353  0037BE  2215               	addwfc	??_isspace+3,f,c
  6354  0037C0  5015               	movf	??_isspace+3,w,c
  6355  0037C2  E104               	bnz	u7300
  6356  0037C4  0E05               	movlw	5
  6357  0037C6  5C14               	subwf	??_isspace+2,w,c
  6358  0037C8  A0D8               	btfss	status,0,c
  6359  0037CA  D002               	goto	l5737
  6360  0037CC                     u7300:
  6361  0037CC  0E00               	movlw	0
  6362  0037CE  6E16               	movwf	_isspace$1586,c
  6363  0037D0                     l5737:
  6364  0037D0  C016  F010         	movff	_isspace$1586,?_isspace
  6365  0037D4  6A11               	clrf	?_isspace+1,c
  6366  0037D6  0012               	return		;funcret
  6367  0037D8                     __end_of_isspace:
  6368                           	opt callstack 0
  6369                           
  6370 ;; *************** function _isdigit *****************
  6371 ;; Defined at:
  6372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  c               2   15[COMRAM] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  2   15[COMRAM] int 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6386 ;;      Params:         2       0       0       0       0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6388 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6389 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6390 ;;Total ram usage:        6 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    2
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_vfpfcnvrt
  6397 ;;		_atoi
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text26
  6402  003872                     __ptext26:
  6403                           	opt callstack 0
  6404  003872                     _isdigit:
  6405                           	opt callstack 25
  6406                           
  6407                           ;incstack = 0
  6408  003872  0ED0               	movlw	208
  6409  003874  6E12               	movwf	??_isdigit& (0+255),c
  6410  003876  0EFF               	movlw	255
  6411  003878  6E13               	movwf	(??_isdigit+1)& (0+255),c
  6412  00387A  C010  F014         	movff	isdigit@c,??_isdigit+2
  6413  00387E  C011  F015         	movff	isdigit@c+1,??_isdigit+3
  6414  003882  5012               	movf	??_isdigit,w,c
  6415  003884  2614               	addwf	??_isdigit+2,f,c
  6416  003886  5013               	movf	??_isdigit+1,w,c
  6417  003888  2215               	addwfc	??_isdigit+3,f,c
  6418  00388A  5015               	movf	??_isdigit+3,w,c
  6419  00388C  E106               	bnz	u6570
  6420  00388E  0E0A               	movlw	10
  6421  003890  5C14               	subwf	??_isdigit+2,w,c
  6422  003892  B0D8               	btfsc	status,0,c
  6423  003894  D002               	goto	u6570
  6424  003896  0E01               	movlw	1
  6425  003898  D001               	goto	u6580
  6426  00389A                     u6570:
  6427  00389A  0E00               	movlw	0
  6428  00389C                     u6580:
  6429  00389C  6E10               	movwf	?_isdigit,c
  6430  00389E  6A11               	clrf	?_isdigit+1,c
  6431  0038A0  0012               	return		;funcret
  6432  0038A2                     __end_of_isdigit:
  6433                           	opt callstack 0
  6434                           
  6435 ;; *************** function ___wmul *****************
  6436 ;; Defined at:
  6437 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  multiplier      2   15[COMRAM] unsigned int 
  6440 ;;  multiplicand    2   17[COMRAM] unsigned int 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  product         2   19[COMRAM] unsigned int 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  2   15[COMRAM] unsigned int 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, prodl, prodh
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6452 ;;      Params:         4       0       0       0       0       0       0       0       0
  6453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6455 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6456 ;;Total ram usage:        6 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    2
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_atoi
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text27
  6467  0038FA                     __ptext27:
  6468                           	opt callstack 0
  6469  0038FA                     ___wmul:
  6470                           	opt callstack 24
  6471                           
  6472                           ;incstack = 0
  6473  0038FA  5010               	movf	___wmul@multiplier,w,c
  6474  0038FC  0212               	mulwf	___wmul@multiplicand,c
  6475  0038FE  CFF3 F014          	movff	prodl,___wmul@product
  6476  003902  CFF4 F015          	movff	prodh,___wmul@product+1
  6477  003906  5010               	movf	___wmul@multiplier,w,c
  6478  003908  0213               	mulwf	___wmul@multiplicand+1,c
  6479  00390A  50F3               	movf	prodl,w,c
  6480  00390C  2615               	addwf	___wmul@product+1,f,c
  6481  00390E  5011               	movf	___wmul@multiplier+1,w,c
  6482  003910  0212               	mulwf	___wmul@multiplicand,c
  6483  003912  50F3               	movf	prodl,w,c
  6484  003914  2615               	addwf	___wmul@product+1,f,c
  6485  003916  C014  F010         	movff	___wmul@product,?___wmul
  6486  00391A  C015  F011         	movff	___wmul@product+1,?___wmul+1
  6487  00391E  0012               	return		;funcret
  6488  003920                     __end_of___wmul:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function _Servo_init *****************
  6492 ;; Defined at:
  6493 ;;		line 3 in file "./Servo.h"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    2
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_main
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text28
  6522  00393E                     __ptext28:
  6523                           	opt callstack 0
  6524  00393E                     _Servo_init:
  6525                           	opt callstack 28
  6526                           
  6527                           ;./Servo.h: 4:     INTCONbits.GIE=0;
  6528                           
  6529                           ;incstack = 0
  6530  00393E  9EF2               	bcf	4082,7,c	;volatile
  6531                           
  6532                           ;./Servo.h: 5:     INTCONbits.PEIE = 1;
  6533  003940  8CF2               	bsf	4082,6,c	;volatile
  6534                           
  6535                           ;./Servo.h: 6:     INTCONbits.TMR0IE=1;
  6536  003942  8AF2               	bsf	4082,5,c	;volatile
  6537                           
  6538                           ;./Servo.h: 7:     INTCONbits.TMR0IF=0;
  6539  003944  94F2               	bcf	4082,2,c	;volatile
  6540                           
  6541                           ;./Servo.h: 8:     T0CONbits.T0CS=0;
  6542  003946  9AD5               	bcf	4053,5,c	;volatile
  6543                           
  6544                           ;./Servo.h: 9:     T0CONbits.T0PS=0b111;
  6545  003948  0E07               	movlw	7
  6546  00394A  12D5               	iorwf	4053,f,c	;volatile
  6547                           
  6548                           ;./Servo.h: 10:     T0CONbits.PSA=0;
  6549  00394C  96D5               	bcf	4053,3,c	;volatile
  6550                           
  6551                           ;./Servo.h: 11:     TMR0=21;
  6552  00394E  0E00               	movlw	0
  6553  003950  6ED7               	movwf	4055,c	;volatile
  6554  003952  0E15               	movlw	21
  6555  003954  6ED6               	movwf	4054,c	;volatile
  6556                           
  6557                           ;./Servo.h: 12:     INTCONbits.GIE=1;
  6558  003956  8EF2               	bsf	4082,7,c	;volatile
  6559  003958  0012               	return		;funcret
  6560  00395A                     __end_of_Servo_init:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _Lcd_Out2 *****************
  6564 ;; Defined at:
  6565 ;;		line 115 in file "./flex_lcd.h"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  y               1    wreg     unsigned char 
  6568 ;;  x               1   18[COMRAM] unsigned char 
  6569 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  6570 ;;		 -> Prom(17), 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  y               1   23[COMRAM] unsigned char 
  6573 ;;  data            1   24[COMRAM] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         3       0       0       0       0       0       0       0       0
  6584 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6586 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        7 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    3
  6590 ;; This function calls:
  6591 ;;		_Lcd_Chr_CP
  6592 ;;		_Lcd_Cmd
  6593 ;; This function is called by:
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text29
  6599  00359E                     __ptext29:
  6600                           	opt callstack 0
  6601  00359E                     _Lcd_Out2:
  6602                           	opt callstack 27
  6603                           
  6604                           ;incstack = 0
  6605                           ;Lcd_Out2@y stored from wreg
  6606  00359E  6E18               	movwf	Lcd_Out2@y,c
  6607                           
  6608                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  6609  0035A0  D00D               	goto	l4507
  6610  0035A2                     l4497:
  6611  0035A2  5013               	movf	Lcd_Out2@x,w,c
  6612  0035A4  0F80               	addlw	128
  6613  0035A6  D008               	goto	L12
  6614  0035A8                     l4499:
  6615  0035A8  5013               	movf	Lcd_Out2@x,w,c
  6616  0035AA  0FC0               	addlw	192
  6617  0035AC  D005               	goto	L12
  6618  0035AE                     l4501:
  6619  0035AE  5013               	movf	Lcd_Out2@x,w,c
  6620  0035B0  0F94               	addlw	148
  6621  0035B2  D002               	goto	L12
  6622  0035B4                     l4503:
  6623  0035B4  5013               	movf	Lcd_Out2@x,w,c
  6624  0035B6  0FD4               	addlw	212
  6625  0035B8                     L12:
  6626  0035B8  6E19               	movwf	Lcd_Out2@data,c
  6627  0035BA  D014               	goto	l4509
  6628  0035BC                     l4507:
  6629  0035BC  5018               	movf	Lcd_Out2@y,w,c
  6630  0035BE  6E16               	movwf	??_Lcd_Out2& (0+255),c
  6631  0035C0  6A17               	clrf	(??_Lcd_Out2+1)& (0+255),c
  6632                           
  6633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6634                           ; Switch size 1, requested type "simple"
  6635                           ; Number of cases is 1, Range of values is 0 to 0
  6636                           ; switch strategies available:
  6637                           ; Name         Instructions Cycles
  6638                           ; simple_byte            4     3 (average)
  6639                           ;	Chosen strategy is simple_byte
  6640  0035C2  5017               	movf	??_Lcd_Out2+1,w,c
  6641  0035C4  0A00               	xorlw	0	; case 0
  6642  0035C6  A4D8               	btfss	status,2,c
  6643  0035C8  D00D               	goto	l4509
  6644                           
  6645                           ; Switch size 1, requested type "simple"
  6646                           ; Number of cases is 4, Range of values is 1 to 4
  6647                           ; switch strategies available:
  6648                           ; Name         Instructions Cycles
  6649                           ; simple_byte           13     7 (average)
  6650                           ;	Chosen strategy is simple_byte
  6651  0035CA  5016               	movf	??_Lcd_Out2,w,c
  6652  0035CC  0A01               	xorlw	1	; case 1
  6653  0035CE  B4D8               	btfsc	status,2,c
  6654  0035D0  D7E8               	goto	l4497
  6655  0035D2  0A03               	xorlw	3	; case 2
  6656  0035D4  B4D8               	btfsc	status,2,c
  6657  0035D6  D7E8               	goto	l4499
  6658  0035D8  0A01               	xorlw	1	; case 3
  6659  0035DA  B4D8               	btfsc	status,2,c
  6660  0035DC  D7E8               	goto	l4501
  6661  0035DE  0A07               	xorlw	7	; case 4
  6662  0035E0  B4D8               	btfsc	status,2,c
  6663  0035E2  D7E8               	goto	l4503
  6664  0035E4                     l4509:
  6665                           
  6666                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  6667  0035E4  5019               	movf	Lcd_Out2@data,w,c
  6668  0035E6  ECA7  F015         	call	_Lcd_Cmd
  6669                           
  6670                           ;./flex_lcd.h: 127: while(*buffer)
  6671  0035EA  D009               	goto	l4515
  6672  0035EC                     l4511:
  6673                           
  6674                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  6675  0035EC  C014  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  6676  0035F0  C015  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  6677  0035F4  50DF               	movf	indf2,w,c
  6678  0035F6  EC15  F015         	call	_Lcd_Chr_CP
  6679                           
  6680                           ;./flex_lcd.h: 130:     buffer++;
  6681  0035FA  4A14               	infsnz	Lcd_Out2@buffer,f,c
  6682  0035FC  2A15               	incf	Lcd_Out2@buffer+1,f,c
  6683  0035FE                     l4515:
  6684                           
  6685                           ;./flex_lcd.h: 127: while(*buffer)
  6686  0035FE  C014  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  6687  003602  C015  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  6688  003606  50DF               	movf	indf2,w,c
  6689  003608  B4D8               	btfsc	status,2,c
  6690  00360A  0012               	return	
  6691  00360C  D7EF               	goto	l4511
  6692  00360E                     __end_of_Lcd_Out2:
  6693                           	opt callstack 0
  6694                           
  6695 ;; *************** function _Lcd_Out *****************
  6696 ;; Defined at:
  6697 ;;		line 94 in file "./flex_lcd.h"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  y               1    wreg     unsigned char 
  6700 ;;  x               1   18[COMRAM] unsigned char 
  6701 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  6702 ;;		 -> STR_5(13), STR_4(13), STR_3(11), STR_2(13), 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  y               1   23[COMRAM] unsigned char 
  6705 ;;  data            1   24[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6715 ;;      Params:         3       0       0       0       0       0       0       0       0
  6716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6717 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6718 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6719 ;;Total ram usage:        7 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    3
  6722 ;; This function calls:
  6723 ;;		_Lcd_Chr_CP
  6724 ;;		_Lcd_Cmd
  6725 ;; This function is called by:
  6726 ;;		_main
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text30
  6731  003444                     __ptext30:
  6732                           	opt callstack 0
  6733  003444                     _Lcd_Out:
  6734                           	opt callstack 27
  6735                           
  6736                           ;incstack = 0
  6737                           ;Lcd_Out@y stored from wreg
  6738  003444  6E18               	movwf	Lcd_Out@y,c
  6739                           
  6740                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  6741  003446  D00D               	goto	l4481
  6742  003448                     l4471:
  6743  003448  5013               	movf	Lcd_Out@x,w,c
  6744  00344A  0F80               	addlw	128
  6745  00344C  D008               	goto	L15
  6746  00344E                     l4473:
  6747  00344E  5013               	movf	Lcd_Out@x,w,c
  6748  003450  0FC0               	addlw	192
  6749  003452  D005               	goto	L15
  6750  003454                     l4475:
  6751  003454  5013               	movf	Lcd_Out@x,w,c
  6752  003456  0F94               	addlw	148
  6753  003458  D002               	goto	L15
  6754  00345A                     l4477:
  6755  00345A  5013               	movf	Lcd_Out@x,w,c
  6756  00345C  0FD4               	addlw	212
  6757  00345E                     L15:
  6758  00345E  6E19               	movwf	Lcd_Out@data,c
  6759  003460  D014               	goto	l4483
  6760  003462                     l4481:
  6761  003462  5018               	movf	Lcd_Out@y,w,c
  6762  003464  6E16               	movwf	??_Lcd_Out& (0+255),c
  6763  003466  6A17               	clrf	(??_Lcd_Out+1)& (0+255),c
  6764                           
  6765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6766                           ; Switch size 1, requested type "simple"
  6767                           ; Number of cases is 1, Range of values is 0 to 0
  6768                           ; switch strategies available:
  6769                           ; Name         Instructions Cycles
  6770                           ; simple_byte            4     3 (average)
  6771                           ;	Chosen strategy is simple_byte
  6772  003468  5017               	movf	??_Lcd_Out+1,w,c
  6773  00346A  0A00               	xorlw	0	; case 0
  6774  00346C  A4D8               	btfss	status,2,c
  6775  00346E  D00D               	goto	l4483
  6776                           
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 4, Range of values is 1 to 4
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           13     7 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  003470  5016               	movf	??_Lcd_Out,w,c
  6784  003472  0A01               	xorlw	1	; case 1
  6785  003474  B4D8               	btfsc	status,2,c
  6786  003476  D7E8               	goto	l4471
  6787  003478  0A03               	xorlw	3	; case 2
  6788  00347A  B4D8               	btfsc	status,2,c
  6789  00347C  D7E8               	goto	l4473
  6790  00347E  0A01               	xorlw	1	; case 3
  6791  003480  B4D8               	btfsc	status,2,c
  6792  003482  D7E8               	goto	l4475
  6793  003484  0A07               	xorlw	7	; case 4
  6794  003486  B4D8               	btfsc	status,2,c
  6795  003488  D7E8               	goto	l4477
  6796  00348A                     l4483:
  6797                           
  6798                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  6799  00348A  5019               	movf	Lcd_Out@data,w,c
  6800  00348C  ECA7  F015         	call	_Lcd_Cmd
  6801                           
  6802                           ;./flex_lcd.h: 106: while(*buffer)
  6803  003490  D00A               	goto	l4489
  6804  003492                     l4485:
  6805                           
  6806                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  6807  003492  C014  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6808  003496  C015  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6809  00349A                     	if	0	;tblptru may be non-zero
  6810  00349A                     	endif
  6811  00349A                     	if	0	;tblptru may be non-zero
  6812  00349A                     	endif
  6813  00349A  0008               	tblrd		*
  6814  00349C  50F5               	movf	tablat,w,c
  6815  00349E  EC15  F015         	call	_Lcd_Chr_CP
  6816                           
  6817                           ;./flex_lcd.h: 109:     buffer++;
  6818  0034A2  4A14               	infsnz	Lcd_Out@buffer,f,c
  6819  0034A4  2A15               	incf	Lcd_Out@buffer+1,f,c
  6820  0034A6                     l4489:
  6821                           
  6822                           ;./flex_lcd.h: 106: while(*buffer)
  6823  0034A6  C014  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6824  0034AA  C015  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6825  0034AE                     	if	0	;tblptru may be non-zero
  6826  0034AE                     	endif
  6827  0034AE                     	if	0	;tblptru may be non-zero
  6828  0034AE                     	endif
  6829  0034AE  0008               	tblrd		*
  6830  0034B0  50F5               	movf	tablat,w,c
  6831  0034B2  0900               	iorlw	0
  6832  0034B4  B4D8               	btfsc	status,2,c
  6833  0034B6  0012               	return	
  6834  0034B8  D7EC               	goto	l4485
  6835  0034BA                     __end_of_Lcd_Out:
  6836                           	opt callstack 0
  6837                           
  6838 ;; *************** function _Lcd_Chr_CP *****************
  6839 ;; Defined at:
  6840 ;;		line 136 in file "./flex_lcd.h"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  data            1    wreg     unsigned char 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  data            1   17[COMRAM] unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6854 ;;      Params:         0       0       0       0       0       0       0       0       0
  6855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6856 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6857 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6858 ;;Total ram usage:        3 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    2
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_Lcd_Out
  6865 ;;		_Lcd_Out2
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text31
  6870  002A2A                     __ptext31:
  6871                           	opt callstack 0
  6872  002A2A                     _Lcd_Chr_CP:
  6873                           	opt callstack 27
  6874                           
  6875                           ;incstack = 0
  6876                           ;Lcd_Chr_CP@data stored from wreg
  6877  002A2A  6E12               	movwf	Lcd_Chr_CP@data,c
  6878                           
  6879                           ;./flex_lcd.h: 137: PORTDbits.RD5 = 0; PORTDbits.RD4 = 1;
  6880  002A2C  9A83               	bcf	3971,5,c	;volatile
  6881  002A2E  8883               	bsf	3971,4,c	;volatile
  6882                           
  6883                           ;./flex_lcd.h: 138: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  6884  002A30  6A10               	clrf	??_Lcd_Chr_CP& (0+255),c
  6885  002A32  AE12               	btfss	Lcd_Chr_CP@data,7,c
  6886  002A34  D001               	bra	u5215
  6887  002A36  2A10               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6888  002A38                     u5215:
  6889  002A38  0E01               	movlw	1
  6890  002A3A  1610               	andwf	??_Lcd_Chr_CP,f,c
  6891  002A3C  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6892  002A3E  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6893  002A40  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6894  002A42  5083               	movf	3971,w,c	;volatile
  6895  002A44  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6896  002A46  0BF7               	andlw	-9
  6897  002A48  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6898  002A4A  6E83               	movwf	3971,c	;volatile
  6899  002A4C  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6900  002A50  0E06               	movlw	6
  6901  002A52  6E11               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6902  002A54                     u5225:
  6903  002A54  90D8               	bcf	status,0,c
  6904  002A56  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6905  002A58  2E11               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6906  002A5A  D7FC               	goto	u5225
  6907  002A5C  0E01               	movlw	1
  6908  002A5E  1610               	andwf	??_Lcd_Chr_CP,f,c
  6909  002A60  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6910  002A62  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6911  002A64  5083               	movf	3971,w,c	;volatile
  6912  002A66  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6913  002A68  0BFB               	andlw	-5
  6914  002A6A  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6915  002A6C  6E83               	movwf	3971,c	;volatile
  6916                           
  6917                           ;./flex_lcd.h: 139: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  6918  002A6E  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6919  002A72  0E05               	movlw	5
  6920  002A74  6E11               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6921  002A76                     u5235:
  6922  002A76  90D8               	bcf	status,0,c
  6923  002A78  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6924  002A7A  2E11               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6925  002A7C  D7FC               	goto	u5235
  6926  002A7E  0E01               	movlw	1
  6927  002A80  1610               	andwf	??_Lcd_Chr_CP,f,c
  6928  002A82  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6929  002A84  5083               	movf	3971,w,c	;volatile
  6930  002A86  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6931  002A88  0BFD               	andlw	-3
  6932  002A8A  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6933  002A8C  6E83               	movwf	3971,c	;volatile
  6934  002A8E  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6935  002A92  3A10               	swapf	??_Lcd_Chr_CP,f,c
  6936  002A94  0E0F               	movlw	15
  6937  002A96  1610               	andwf	??_Lcd_Chr_CP,f,c
  6938  002A98  0E01               	movlw	1
  6939  002A9A  1610               	andwf	??_Lcd_Chr_CP,f,c
  6940  002A9C  5083               	movf	3971,w,c	;volatile
  6941  002A9E  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6942  002AA0  0BFE               	andlw	-2
  6943  002AA2  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6944  002AA4  6E83               	movwf	3971,c	;volatile
  6945                           
  6946                           ;./flex_lcd.h: 140: _delay(10);
  6947  002AA6  0E03               	movlw	3
  6948  002AA8                     u8257:
  6949  002AA8  2EE8               	decfsz	wreg,f,c
  6950  002AAA  D7FE               	bra	u8257
  6951  002AAC  F000               	nop	
  6952                           
  6953                           ;./flex_lcd.h: 141: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  6954  002AAE  8A83               	bsf	3971,5,c	;volatile
  6955  002AB0  0E05               	movlw	5
  6956  002AB2                     u8267:
  6957  002AB2  2EE8               	decfsz	wreg,f,c
  6958  002AB4  D7FE               	bra	u8267
  6959  002AB6  9A83               	bcf	3971,5,c	;volatile
  6960                           
  6961                           ;./flex_lcd.h: 142: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  6962  002AB8  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6963  002ABC  90D8               	bcf	status,0,c
  6964  002ABE  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6965  002AC0  90D8               	bcf	status,0,c
  6966  002AC2  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6967  002AC4  90D8               	bcf	status,0,c
  6968  002AC6  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6969  002AC8  0E01               	movlw	1
  6970  002ACA  1610               	andwf	??_Lcd_Chr_CP,f,c
  6971  002ACC  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6972  002ACE  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6973  002AD0  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6974  002AD2  5083               	movf	3971,w,c	;volatile
  6975  002AD4  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6976  002AD6  0BF7               	andlw	-9
  6977  002AD8  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6978  002ADA  6E83               	movwf	3971,c	;volatile
  6979  002ADC  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6980  002AE0  90D8               	bcf	status,0,c
  6981  002AE2  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6982  002AE4  90D8               	bcf	status,0,c
  6983  002AE6  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6984  002AE8  0E01               	movlw	1
  6985  002AEA  1610               	andwf	??_Lcd_Chr_CP,f,c
  6986  002AEC  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6987  002AEE  4610               	rlncf	??_Lcd_Chr_CP,f,c
  6988  002AF0  5083               	movf	3971,w,c	;volatile
  6989  002AF2  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6990  002AF4  0BFB               	andlw	-5
  6991  002AF6  1810               	xorwf	??_Lcd_Chr_CP,w,c
  6992  002AF8  6E83               	movwf	3971,c	;volatile
  6993                           
  6994                           ;./flex_lcd.h: 143: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  6995  002AFA  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6996  002AFE  90D8               	bcf	status,0,c
  6997  002B00  3210               	rrcf	??_Lcd_Chr_CP,f,c
  6998  002B02  0E01               	movlw	1
  6999  002B04  1610               	andwf	??_Lcd_Chr_CP,f,c
  7000  002B06  4610               	rlncf	??_Lcd_Chr_CP,f,c
  7001  002B08  5083               	movf	3971,w,c	;volatile
  7002  002B0A  1810               	xorwf	??_Lcd_Chr_CP,w,c
  7003  002B0C  0BFD               	andlw	-3
  7004  002B0E  1810               	xorwf	??_Lcd_Chr_CP,w,c
  7005  002B10  6E83               	movwf	3971,c	;volatile
  7006  002B12  C012  F010         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7007  002B16  0E01               	movlw	1
  7008  002B18  1610               	andwf	??_Lcd_Chr_CP,f,c
  7009  002B1A  5083               	movf	3971,w,c	;volatile
  7010  002B1C  1810               	xorwf	??_Lcd_Chr_CP,w,c
  7011  002B1E  0BFE               	andlw	-2
  7012  002B20  1810               	xorwf	??_Lcd_Chr_CP,w,c
  7013  002B22  6E83               	movwf	3971,c	;volatile
  7014                           
  7015                           ;./flex_lcd.h: 144: _delay(10);
  7016  002B24  0E03               	movlw	3
  7017  002B26                     u8277:
  7018  002B26  2EE8               	decfsz	wreg,f,c
  7019  002B28  D7FE               	bra	u8277
  7020  002B2A  F000               	nop	
  7021                           
  7022                           ;./flex_lcd.h: 145: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  7023  002B2C  8A83               	bsf	3971,5,c	;volatile
  7024  002B2E  0E05               	movlw	5
  7025  002B30                     u8287:
  7026  002B30  2EE8               	decfsz	wreg,f,c
  7027  002B32  D7FE               	bra	u8287
  7028  002B34  9A83               	bcf	3971,5,c	;volatile
  7029                           
  7030                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(12000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(12000000/4000000.0)));
  7031  002B36  0E05               	movlw	5
  7032  002B38                     u8297:
  7033  002B38  2EE8               	decfsz	wreg,f,c
  7034  002B3A  D7FE               	bra	u8297
  7035  002B3C  0E16               	movlw	22
  7036  002B3E  6E10               	movwf	??_Lcd_Chr_CP& (0+255),c
  7037  002B40  0E6C               	movlw	108
  7038  002B42                     u8307:
  7039  002B42  2EE8               	decfsz	wreg,f,c
  7040  002B44  D7FE               	bra	u8307
  7041  002B46  2E10               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  7042  002B48  D7FC               	bra	u8307
  7043  002B4A  D000               	nop2	
  7044  002B4C  0012               	return		;funcret
  7045  002B4E                     __end_of_Lcd_Chr_CP:
  7046                           	opt callstack 0
  7047                           
  7048 ;; *************** function _Lcd_Init *****************
  7049 ;; Defined at:
  7050 ;;		line 52 in file "./flex_lcd.h"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  data            1   19[COMRAM] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:        2 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		_Lcd_Cmd
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text32
  7079  002C6C                     __ptext32:
  7080                           	opt callstack 0
  7081  002C6C                     _Lcd_Init:
  7082                           	opt callstack 27
  7083                           
  7084                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISDbits.TRISD3 = 0;
  7085                           
  7086                           ;incstack = 0
  7087  002C6C  9695               	bcf	3989,3,c	;volatile
  7088                           
  7089                           ;./flex_lcd.h: 55: TRISDbits.TRISD2 = 0;
  7090  002C6E  9495               	bcf	3989,2,c	;volatile
  7091                           
  7092                           ;./flex_lcd.h: 56: TRISDbits.TRISD1 = 0;
  7093  002C70  9295               	bcf	3989,1,c	;volatile
  7094                           
  7095                           ;./flex_lcd.h: 57: TRISDbits.TRISD0 = 0;
  7096  002C72  9095               	bcf	3989,0,c	;volatile
  7097                           
  7098                           ;./flex_lcd.h: 58: TRISDbits.TRISD5 = 0;
  7099  002C74  9A95               	bcf	3989,5,c	;volatile
  7100                           
  7101                           ;./flex_lcd.h: 59: TRISDbits.TRISD4 = 0;
  7102  002C76  9895               	bcf	3989,4,c	;volatile
  7103                           
  7104                           ;./flex_lcd.h: 60: PORTDbits.RD3 = 0;
  7105  002C78  9683               	bcf	3971,3,c	;volatile
  7106                           
  7107                           ;./flex_lcd.h: 61: PORTDbits.RD2 = 0;
  7108  002C7A  9483               	bcf	3971,2,c	;volatile
  7109                           
  7110                           ;./flex_lcd.h: 62: PORTDbits.RD1 = 0;
  7111  002C7C  9283               	bcf	3971,1,c	;volatile
  7112                           
  7113                           ;./flex_lcd.h: 63: PORTDbits.RD0 = 0;
  7114  002C7E  9083               	bcf	3971,0,c	;volatile
  7115                           
  7116                           ;./flex_lcd.h: 64: PORTDbits.RD5 = 0;
  7117  002C80  9A83               	bcf	3971,5,c	;volatile
  7118                           
  7119                           ;./flex_lcd.h: 65: PORTDbits.RD4 = 0;
  7120  002C82  9883               	bcf	3971,4,c	;volatile
  7121                           
  7122                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7123  002C84  0E16               	movlw	22
  7124  002C86  6E13               	movwf	??_Lcd_Init& (0+255),c
  7125  002C88  0E6C               	movlw	108
  7126  002C8A                     u8317:
  7127  002C8A  2EE8               	decfsz	wreg,f,c
  7128  002C8C  D7FE               	bra	u8317
  7129  002C8E  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7130  002C90  D7FC               	bra	u8317
  7131  002C92  D000               	nop2	
  7132                           
  7133                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7134  002C94  0E16               	movlw	22
  7135  002C96  6E13               	movwf	??_Lcd_Init& (0+255),c
  7136  002C98  0E6C               	movlw	108
  7137  002C9A                     u8327:
  7138  002C9A  2EE8               	decfsz	wreg,f,c
  7139  002C9C  D7FE               	bra	u8327
  7140  002C9E  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7141  002CA0  D7FC               	bra	u8327
  7142  002CA2  D000               	nop2	
  7143                           
  7144                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7145  002CA4  0E16               	movlw	22
  7146  002CA6  6E13               	movwf	??_Lcd_Init& (0+255),c
  7147  002CA8  0E6C               	movlw	108
  7148  002CAA                     u8337:
  7149  002CAA  2EE8               	decfsz	wreg,f,c
  7150  002CAC  D7FE               	bra	u8337
  7151  002CAE  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7152  002CB0  D7FC               	bra	u8337
  7153  002CB2  D000               	nop2	
  7154                           
  7155                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7156  002CB4  0E16               	movlw	22
  7157  002CB6  6E13               	movwf	??_Lcd_Init& (0+255),c
  7158  002CB8  0E6C               	movlw	108
  7159  002CBA                     u8347:
  7160  002CBA  2EE8               	decfsz	wreg,f,c
  7161  002CBC  D7FE               	bra	u8347
  7162  002CBE  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7163  002CC0  D7FC               	bra	u8347
  7164  002CC2  D000               	nop2	
  7165                           
  7166                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7167  002CC4  0E16               	movlw	22
  7168  002CC6  6E13               	movwf	??_Lcd_Init& (0+255),c
  7169  002CC8  0E6C               	movlw	108
  7170  002CCA                     u8357:
  7171  002CCA  2EE8               	decfsz	wreg,f,c
  7172  002CCC  D7FE               	bra	u8357
  7173  002CCE  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7174  002CD0  D7FC               	bra	u8357
  7175  002CD2  D000               	nop2	
  7176                           
  7177                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7178  002CD4  0E16               	movlw	22
  7179  002CD6  6E13               	movwf	??_Lcd_Init& (0+255),c
  7180  002CD8  0E6C               	movlw	108
  7181  002CDA                     u8367:
  7182  002CDA  2EE8               	decfsz	wreg,f,c
  7183  002CDC  D7FE               	bra	u8367
  7184  002CDE  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7185  002CE0  D7FC               	bra	u8367
  7186  002CE2  D000               	nop2	
  7187                           
  7188                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  7189  002CE4  0E01               	movlw	1
  7190  002CE6  6E14               	movwf	Lcd_Init@data,c
  7191  002CE8                     l73:
  7192                           
  7193                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD1 = 1; PORTDbits.RD0 = 1; PORTDbits.RD5 = 0;
  7194  002CE8  9683               	bcf	3971,3,c	;volatile
  7195  002CEA  9483               	bcf	3971,2,c	;volatile
  7196  002CEC  8283               	bsf	3971,1,c	;volatile
  7197  002CEE  8083               	bsf	3971,0,c	;volatile
  7198  002CF0  9A83               	bcf	3971,5,c	;volatile
  7199                           
  7200                           ;./flex_lcd.h: 75:     PORTDbits.RD4 = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbit
      +                          s.RD1 = 1; PORTDbits.RD0 = 1;
  7201  002CF2  9883               	bcf	3971,4,c	;volatile
  7202  002CF4  9683               	bcf	3971,3,c	;volatile
  7203  002CF6  9483               	bcf	3971,2,c	;volatile
  7204  002CF8  8283               	bsf	3971,1,c	;volatile
  7205  002CFA  8083               	bsf	3971,0,c	;volatile
  7206                           
  7207                           ;./flex_lcd.h: 76:     PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  7208  002CFC  8A83               	bsf	3971,5,c	;volatile
  7209  002CFE  9883               	bcf	3971,4,c	;volatile
  7210                           
  7211                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7212  002D00  0E05               	movlw	5
  7213  002D02                     u8377:
  7214  002D02  2EE8               	decfsz	wreg,f,c
  7215  002D04  D7FE               	bra	u8377
  7216                           
  7217                           ;./flex_lcd.h: 78:     PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbit
      +                          s.RD0 = 1; PORTDbits.RD5 = 0;
  7218  002D06  9683               	bcf	3971,3,c	;volatile
  7219  002D08  9483               	bcf	3971,2,c	;volatile
  7220  002D0A  8283               	bsf	3971,1,c	;volatile
  7221  002D0C  8083               	bsf	3971,0,c	;volatile
  7222  002D0E  9A83               	bcf	3971,5,c	;volatile
  7223                           
  7224                           ;./flex_lcd.h: 79:     PORTDbits.RD4 = 0;
  7225  002D10  9883               	bcf	3971,4,c	;volatile
  7226                           
  7227                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7228  002D12  0E16               	movlw	22
  7229  002D14  6E13               	movwf	??_Lcd_Init& (0+255),c
  7230  002D16  0E6C               	movlw	108
  7231  002D18                     u8387:
  7232  002D18  2EE8               	decfsz	wreg,f,c
  7233  002D1A  D7FE               	bra	u8387
  7234  002D1C  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7235  002D1E  D7FC               	bra	u8387
  7236  002D20  D000               	nop2	
  7237                           
  7238                           ;./flex_lcd.h: 81: }
  7239  002D22  2A14               	incf	Lcd_Init@data,f,c
  7240  002D24  0E03               	movlw	3
  7241  002D26  6414               	cpfsgt	Lcd_Init@data,c
  7242  002D28  D7DF               	goto	l73
  7243                           
  7244                           ;./flex_lcd.h: 82: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  7245  002D2A  9683               	bcf	3971,3,c	;volatile
  7246  002D2C  9483               	bcf	3971,2,c	;volatile
  7247  002D2E  8283               	bsf	3971,1,c	;volatile
  7248  002D30  9083               	bcf	3971,0,c	;volatile
  7249  002D32  9A83               	bcf	3971,5,c	;volatile
  7250  002D34  9883               	bcf	3971,4,c	;volatile
  7251                           
  7252                           ;./flex_lcd.h: 83: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
  7253  002D36  9683               	bcf	3971,3,c	;volatile
  7254  002D38  9483               	bcf	3971,2,c	;volatile
  7255  002D3A  8283               	bsf	3971,1,c	;volatile
  7256  002D3C  9083               	bcf	3971,0,c	;volatile
  7257  002D3E  8A83               	bsf	3971,5,c	;volatile
  7258  002D40  9883               	bcf	3971,4,c	;volatile
  7259                           
  7260                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(12000000/4000000.0)));
  7261  002D42  0E05               	movlw	5
  7262  002D44                     u8397:
  7263  002D44  2EE8               	decfsz	wreg,f,c
  7264  002D46  D7FE               	bra	u8397
  7265                           
  7266                           ;./flex_lcd.h: 85: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0; PORTDbits.RD1 = 1; PORTDbits.RD
      +                          0 = 0; PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  7267  002D48  9683               	bcf	3971,3,c	;volatile
  7268  002D4A  9483               	bcf	3971,2,c	;volatile
  7269  002D4C  8283               	bsf	3971,1,c	;volatile
  7270  002D4E  9083               	bcf	3971,0,c	;volatile
  7271  002D50  9A83               	bcf	3971,5,c	;volatile
  7272  002D52  9883               	bcf	3971,4,c	;volatile
  7273                           
  7274                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7275  002D54  0E16               	movlw	22
  7276  002D56  6E13               	movwf	??_Lcd_Init& (0+255),c
  7277  002D58  0E6C               	movlw	108
  7278  002D5A                     u8407:
  7279  002D5A  2EE8               	decfsz	wreg,f,c
  7280  002D5C  D7FE               	bra	u8407
  7281  002D5E  2E13               	decfsz	??_Lcd_Init& (0+255),f,c
  7282  002D60  D7FC               	bra	u8407
  7283  002D62  D000               	nop2	
  7284  002D64  0E28               	movlw	40
  7285  002D66  ECA7  F015         	call	_Lcd_Cmd
  7286  002D6A  0E10               	movlw	16
  7287  002D6C  ECA7  F015         	call	_Lcd_Cmd
  7288  002D70  0E01               	movlw	1
  7289  002D72  ECA7  F015         	call	_Lcd_Cmd
  7290  002D76  0E0F               	movlw	15
  7291  002D78  ECA7  F015         	call	_Lcd_Cmd
  7292  002D7C  0012               	return		;funcret
  7293  002D7E                     __end_of_Lcd_Init:
  7294                           	opt callstack 0
  7295                           
  7296 ;; *************** function _Lcd_Cmd *****************
  7297 ;; Defined at:
  7298 ;;		line 150 in file "./flex_lcd.h"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  data            1    wreg     unsigned char 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  data            1   17[COMRAM] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7312 ;;      Params:         0       0       0       0       0       0       0       0       0
  7313 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7314 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7315 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7316 ;;Total ram usage:        3 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    2
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_Lcd_Init
  7323 ;;		_Lcd_Out
  7324 ;;		_Lcd_Out2
  7325 ;;		_main
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text33
  7330  002B4E                     __ptext33:
  7331                           	opt callstack 0
  7332  002B4E                     _Lcd_Cmd:
  7333                           	opt callstack 27
  7334                           
  7335                           ;incstack = 0
  7336                           ;Lcd_Cmd@data stored from wreg
  7337  002B4E  6E12               	movwf	Lcd_Cmd@data,c
  7338                           
  7339                           ;./flex_lcd.h: 151: PORTDbits.RD5 = 0; PORTDbits.RD4 = 0;
  7340  002B50  9A83               	bcf	3971,5,c	;volatile
  7341  002B52  9883               	bcf	3971,4,c	;volatile
  7342                           
  7343                           ;./flex_lcd.h: 152: PORTDbits.RD3 = (data & 0b10000000)>>7; PORTDbits.RD2 = (data & 0b01
      +                          000000)>>6;
  7344  002B54  6A10               	clrf	??_Lcd_Cmd& (0+255),c
  7345  002B56  AE12               	btfss	Lcd_Cmd@data,7,c
  7346  002B58  D001               	bra	u5185
  7347  002B5A  2A10               	incf	??_Lcd_Cmd& (0+255),f,c
  7348  002B5C                     u5185:
  7349  002B5C  0E01               	movlw	1
  7350  002B5E  1610               	andwf	??_Lcd_Cmd,f,c
  7351  002B60  4610               	rlncf	??_Lcd_Cmd,f,c
  7352  002B62  4610               	rlncf	??_Lcd_Cmd,f,c
  7353  002B64  4610               	rlncf	??_Lcd_Cmd,f,c
  7354  002B66  5083               	movf	3971,w,c	;volatile
  7355  002B68  1810               	xorwf	??_Lcd_Cmd,w,c
  7356  002B6A  0BF7               	andlw	-9
  7357  002B6C  1810               	xorwf	??_Lcd_Cmd,w,c
  7358  002B6E  6E83               	movwf	3971,c	;volatile
  7359  002B70  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7360  002B74  0E06               	movlw	6
  7361  002B76  6E11               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7362  002B78                     u5195:
  7363  002B78  90D8               	bcf	status,0,c
  7364  002B7A  3210               	rrcf	??_Lcd_Cmd,f,c
  7365  002B7C  2E11               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7366  002B7E  D7FC               	goto	u5195
  7367  002B80  0E01               	movlw	1
  7368  002B82  1610               	andwf	??_Lcd_Cmd,f,c
  7369  002B84  4610               	rlncf	??_Lcd_Cmd,f,c
  7370  002B86  4610               	rlncf	??_Lcd_Cmd,f,c
  7371  002B88  5083               	movf	3971,w,c	;volatile
  7372  002B8A  1810               	xorwf	??_Lcd_Cmd,w,c
  7373  002B8C  0BFB               	andlw	-5
  7374  002B8E  1810               	xorwf	??_Lcd_Cmd,w,c
  7375  002B90  6E83               	movwf	3971,c	;volatile
  7376                           
  7377                           ;./flex_lcd.h: 153: PORTDbits.RD1 = (data & 0b00100000)>>5; PORTDbits.RD0 = (data & 0b00
      +                          010000)>>4;
  7378  002B92  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7379  002B96  0E05               	movlw	5
  7380  002B98  6E11               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7381  002B9A                     u5205:
  7382  002B9A  90D8               	bcf	status,0,c
  7383  002B9C  3210               	rrcf	??_Lcd_Cmd,f,c
  7384  002B9E  2E11               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7385  002BA0  D7FC               	goto	u5205
  7386  002BA2  0E01               	movlw	1
  7387  002BA4  1610               	andwf	??_Lcd_Cmd,f,c
  7388  002BA6  4610               	rlncf	??_Lcd_Cmd,f,c
  7389  002BA8  5083               	movf	3971,w,c	;volatile
  7390  002BAA  1810               	xorwf	??_Lcd_Cmd,w,c
  7391  002BAC  0BFD               	andlw	-3
  7392  002BAE  1810               	xorwf	??_Lcd_Cmd,w,c
  7393  002BB0  6E83               	movwf	3971,c	;volatile
  7394  002BB2  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7395  002BB6  3A10               	swapf	??_Lcd_Cmd,f,c
  7396  002BB8  0E0F               	movlw	15
  7397  002BBA  1610               	andwf	??_Lcd_Cmd,f,c
  7398  002BBC  0E01               	movlw	1
  7399  002BBE  1610               	andwf	??_Lcd_Cmd,f,c
  7400  002BC0  5083               	movf	3971,w,c	;volatile
  7401  002BC2  1810               	xorwf	??_Lcd_Cmd,w,c
  7402  002BC4  0BFE               	andlw	-2
  7403  002BC6  1810               	xorwf	??_Lcd_Cmd,w,c
  7404  002BC8  6E83               	movwf	3971,c	;volatile
  7405                           
  7406                           ;./flex_lcd.h: 154: _delay(10);
  7407  002BCA  0E03               	movlw	3
  7408  002BCC                     u8417:
  7409  002BCC  2EE8               	decfsz	wreg,f,c
  7410  002BCE  D7FE               	bra	u8417
  7411  002BD0  F000               	nop	
  7412                           
  7413                           ;./flex_lcd.h: 155: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  7414  002BD2  8A83               	bsf	3971,5,c	;volatile
  7415  002BD4  0E05               	movlw	5
  7416  002BD6                     u8427:
  7417  002BD6  2EE8               	decfsz	wreg,f,c
  7418  002BD8  D7FE               	bra	u8427
  7419  002BDA  9A83               	bcf	3971,5,c	;volatile
  7420                           
  7421                           ;./flex_lcd.h: 156: PORTDbits.RD3 = (data & 0b00001000)>>3; PORTDbits.RD2 = (data & 0b00
      +                          000100)>>2;
  7422  002BDC  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7423  002BE0  90D8               	bcf	status,0,c
  7424  002BE2  3210               	rrcf	??_Lcd_Cmd,f,c
  7425  002BE4  90D8               	bcf	status,0,c
  7426  002BE6  3210               	rrcf	??_Lcd_Cmd,f,c
  7427  002BE8  90D8               	bcf	status,0,c
  7428  002BEA  3210               	rrcf	??_Lcd_Cmd,f,c
  7429  002BEC  0E01               	movlw	1
  7430  002BEE  1610               	andwf	??_Lcd_Cmd,f,c
  7431  002BF0  4610               	rlncf	??_Lcd_Cmd,f,c
  7432  002BF2  4610               	rlncf	??_Lcd_Cmd,f,c
  7433  002BF4  4610               	rlncf	??_Lcd_Cmd,f,c
  7434  002BF6  5083               	movf	3971,w,c	;volatile
  7435  002BF8  1810               	xorwf	??_Lcd_Cmd,w,c
  7436  002BFA  0BF7               	andlw	-9
  7437  002BFC  1810               	xorwf	??_Lcd_Cmd,w,c
  7438  002BFE  6E83               	movwf	3971,c	;volatile
  7439  002C00  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7440  002C04  90D8               	bcf	status,0,c
  7441  002C06  3210               	rrcf	??_Lcd_Cmd,f,c
  7442  002C08  90D8               	bcf	status,0,c
  7443  002C0A  3210               	rrcf	??_Lcd_Cmd,f,c
  7444  002C0C  0E01               	movlw	1
  7445  002C0E  1610               	andwf	??_Lcd_Cmd,f,c
  7446  002C10  4610               	rlncf	??_Lcd_Cmd,f,c
  7447  002C12  4610               	rlncf	??_Lcd_Cmd,f,c
  7448  002C14  5083               	movf	3971,w,c	;volatile
  7449  002C16  1810               	xorwf	??_Lcd_Cmd,w,c
  7450  002C18  0BFB               	andlw	-5
  7451  002C1A  1810               	xorwf	??_Lcd_Cmd,w,c
  7452  002C1C  6E83               	movwf	3971,c	;volatile
  7453                           
  7454                           ;./flex_lcd.h: 157: PORTDbits.RD1 = (data & 0b00000010)>>1; PORTDbits.RD0 = (data & 0b00
      +                          000001);
  7455  002C1E  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7456  002C22  90D8               	bcf	status,0,c
  7457  002C24  3210               	rrcf	??_Lcd_Cmd,f,c
  7458  002C26  0E01               	movlw	1
  7459  002C28  1610               	andwf	??_Lcd_Cmd,f,c
  7460  002C2A  4610               	rlncf	??_Lcd_Cmd,f,c
  7461  002C2C  5083               	movf	3971,w,c	;volatile
  7462  002C2E  1810               	xorwf	??_Lcd_Cmd,w,c
  7463  002C30  0BFD               	andlw	-3
  7464  002C32  1810               	xorwf	??_Lcd_Cmd,w,c
  7465  002C34  6E83               	movwf	3971,c	;volatile
  7466  002C36  C012  F010         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7467  002C3A  0E01               	movlw	1
  7468  002C3C  1610               	andwf	??_Lcd_Cmd,f,c
  7469  002C3E  5083               	movf	3971,w,c	;volatile
  7470  002C40  1810               	xorwf	??_Lcd_Cmd,w,c
  7471  002C42  0BFE               	andlw	-2
  7472  002C44  1810               	xorwf	??_Lcd_Cmd,w,c
  7473  002C46  6E83               	movwf	3971,c	;volatile
  7474                           
  7475                           ;./flex_lcd.h: 158: _delay(10);
  7476  002C48  0E03               	movlw	3
  7477  002C4A                     u8437:
  7478  002C4A  2EE8               	decfsz	wreg,f,c
  7479  002C4C  D7FE               	bra	u8437
  7480  002C4E  F000               	nop	
  7481                           
  7482                           ;./flex_lcd.h: 159: PORTDbits.RD5 = 1; _delay((unsigned long)((5)*(12000000/4000000.0)))
      +                          ; PORTDbits.RD5 = 0;
  7483  002C50  8A83               	bsf	3971,5,c	;volatile
  7484  002C52  0E05               	movlw	5
  7485  002C54                     u8447:
  7486  002C54  2EE8               	decfsz	wreg,f,c
  7487  002C56  D7FE               	bra	u8447
  7488  002C58  9A83               	bcf	3971,5,c	;volatile
  7489                           
  7490                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7491  002C5A  0E16               	movlw	22
  7492  002C5C  6E10               	movwf	??_Lcd_Cmd& (0+255),c
  7493  002C5E  0E6C               	movlw	108
  7494  002C60                     u8457:
  7495  002C60  2EE8               	decfsz	wreg,f,c
  7496  002C62  D7FE               	bra	u8457
  7497  002C64  2E10               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7498  002C66  D7FC               	bra	u8457
  7499  002C68  D000               	nop2	
  7500  002C6A  0012               	return		;funcret
  7501  002C6C                     __end_of_Lcd_Cmd:
  7502                           	opt callstack 0
  7503                           
  7504 ;; *************** function _I2C_Slave_Init *****************
  7505 ;; Defined at:
  7506 ;;		line 1 in file "./I2C_Slave.h"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  address         2   15[COMRAM] short 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7520 ;;      Params:         2       0       0       0       0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7523 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7524 ;;Total ram usage:        2 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    2
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text34
  7535  003920                     __ptext34:
  7536                           	opt callstack 0
  7537  003920                     _I2C_Slave_Init:
  7538                           	opt callstack 28
  7539                           
  7540                           ;./I2C_Slave.h: 1: void I2C_Slave_Init(short address);./I2C_Slave.h: 2: {;./I2C_Slave.h:
      +                           3:     SSPSTAT = 0x80;
  7541                           
  7542                           ;incstack = 0
  7543  003920  0E80               	movlw	128
  7544  003922  6EC7               	movwf	4039,c	;volatile
  7545                           
  7546                           ;./I2C_Slave.h: 4:     SSPADD = address;
  7547  003924  C010  FFC8         	movff	I2C_Slave_Init@address,4040	;volatile
  7548                           
  7549                           ;./I2C_Slave.h: 5:     SSPCON1 = 0x36;
  7550  003928  0E36               	movlw	54
  7551  00392A  6EC6               	movwf	4038,c	;volatile
  7552                           
  7553                           ;./I2C_Slave.h: 6:     SSPCON2 = 0x01;
  7554  00392C  0E01               	movlw	1
  7555  00392E  6EC5               	movwf	4037,c	;volatile
  7556                           
  7557                           ;./I2C_Slave.h: 7:     TRISBbits.TRISB1 = 1;
  7558  003930  8293               	bsf	3987,1,c	;volatile
  7559                           
  7560                           ;./I2C_Slave.h: 8:     TRISBbits.TRISB0 = 1;
  7561  003932  8093               	bsf	3987,0,c	;volatile
  7562                           
  7563                           ;./I2C_Slave.h: 9:     GIE = 1;
  7564  003934  8EF2               	bsf	4082,7,c	;volatile
  7565                           
  7566                           ;./I2C_Slave.h: 10:     PEIE = 1;
  7567  003936  8CF2               	bsf	4082,6,c	;volatile
  7568                           
  7569                           ;./I2C_Slave.h: 11:     SSPIF = 0;
  7570  003938  969E               	bcf	3998,3,c	;volatile
  7571                           
  7572                           ;./I2C_Slave.h: 12:     SSPIE = 1;
  7573  00393A  869D               	bsf	3997,3,c	;volatile
  7574  00393C  0012               	return		;funcret
  7575  00393E                     __end_of_I2C_Slave_Init:
  7576                           	opt callstack 0
  7577                           
  7578 ;; *************** function _ADC_Init *****************
  7579 ;; Defined at:
  7580 ;;		line 5 in file "./ADC.h"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  entradas        2   15[COMRAM] int 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  valor           2   19[COMRAM] int 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7594 ;;      Params:         2       0       0       0       0       0       0       0       0
  7595 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7596 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7597 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7598 ;;Total ram usage:        6 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    2
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_main
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text35
  7609  0034BA                     __ptext35:
  7610                           	opt callstack 0
  7611  0034BA                     _ADC_Init:
  7612                           	opt callstack 28
  7613                           
  7614                           ;./ADC.h: 6:     int valor=15-entradas;
  7615                           
  7616                           ;incstack = 0
  7617  0034BA  5010               	movf	ADC_Init@entradas,w,c
  7618  0034BC  080F               	sublw	15
  7619  0034BE  6E14               	movwf	ADC_Init@valor,c
  7620  0034C0  5011               	movf	ADC_Init@entradas+1,w,c
  7621  0034C2  A0D8               	btfss	status,0,c
  7622  0034C4  2AE8               	incf	wreg,f,c
  7623  0034C6  0800               	sublw	0
  7624  0034C8  6E15               	movwf	ADC_Init@valor+1,c
  7625                           
  7626                           ;./ADC.h: 7:     ADCON1bits.VCFG=0;
  7627  0034CA  0ECF               	movlw	-49
  7628  0034CC  16C1               	andwf	4033,f,c	;volatile
  7629                           
  7630                           ;./ADC.h: 8:     ADCON1bits.PCFG=valor;
  7631  0034CE  50C1               	movf	4033,w,c	;volatile
  7632  0034D0  1814               	xorwf	ADC_Init@valor,w,c
  7633  0034D2  0BF0               	andlw	-16
  7634  0034D4  1814               	xorwf	ADC_Init@valor,w,c
  7635  0034D6  6EC1               	movwf	4033,c	;volatile
  7636                           
  7637                           ;./ADC.h: 9:     ADCON2bits.ADFM=1;
  7638  0034D8  8EC0               	bsf	4032,7,c	;volatile
  7639                           
  7640                           ;./ADC.h: 10:     ADCON2bits.ACQT=0b010;
  7641  0034DA  50C0               	movf	4032,w,c	;volatile
  7642  0034DC  0BC7               	andlw	-57
  7643  0034DE  0910               	iorlw	16
  7644  0034E0  6EC0               	movwf	4032,c	;volatile
  7645                           
  7646                           ;./ADC.h: 11:     ADCON2bits.ADCS=0b101;
  7647  0034E2  50C0               	movf	4032,w,c	;volatile
  7648  0034E4  0BF8               	andlw	-8
  7649  0034E6  0905               	iorlw	5
  7650  0034E8  6EC0               	movwf	4032,c	;volatile
  7651                           
  7652                           ;./ADC.h: 12:     switch(entradas){
  7653  0034EA  D009               	goto	l4555
  7654  0034EC                     l4545:
  7655                           
  7656                           ;./ADC.h: 14:             TRISA=0x01;
  7657  0034EC  0E01               	movlw	1
  7658  0034EE  D005               	goto	L18
  7659  0034F0                     l4547:
  7660                           
  7661                           ;./ADC.h: 18:             TRISA=0x03;
  7662  0034F0  0E03               	movlw	3
  7663  0034F2  D003               	goto	L18
  7664  0034F4                     l4549:
  7665                           
  7666                           ;./ADC.h: 22:             TRISA=0x07;
  7667  0034F4  0E07               	movlw	7
  7668  0034F6  D001               	goto	L18
  7669  0034F8                     l4551:
  7670                           
  7671                           ;./ADC.h: 26:             TRISA=0x0F;
  7672  0034F8  0E0F               	movlw	15
  7673  0034FA                     L18:
  7674  0034FA  6E92               	movwf	3986,c	;volatile
  7675                           
  7676                           ;./ADC.h: 27:             break;
  7677  0034FC  D015               	goto	l4557
  7678  0034FE                     l4555:
  7679  0034FE  C010  F012         	movff	ADC_Init@entradas,??_ADC_Init
  7680  003502  C011  F013         	movff	ADC_Init@entradas+1,??_ADC_Init+1
  7681                           
  7682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7683                           ; Switch size 1, requested type "simple"
  7684                           ; Number of cases is 1, Range of values is 0 to 0
  7685                           ; switch strategies available:
  7686                           ; Name         Instructions Cycles
  7687                           ; simple_byte            4     3 (average)
  7688                           ;	Chosen strategy is simple_byte
  7689  003506  5013               	movf	??_ADC_Init+1,w,c
  7690  003508  0A00               	xorlw	0	; case 0
  7691  00350A  A4D8               	btfss	status,2,c
  7692  00350C  D00D               	goto	l4557
  7693                           
  7694                           ; Switch size 1, requested type "simple"
  7695                           ; Number of cases is 4, Range of values is 1 to 4
  7696                           ; switch strategies available:
  7697                           ; Name         Instructions Cycles
  7698                           ; simple_byte           13     7 (average)
  7699                           ;	Chosen strategy is simple_byte
  7700  00350E  5012               	movf	??_ADC_Init,w,c
  7701  003510  0A01               	xorlw	1	; case 1
  7702  003512  B4D8               	btfsc	status,2,c
  7703  003514  D7EB               	goto	l4545
  7704  003516  0A03               	xorlw	3	; case 2
  7705  003518  B4D8               	btfsc	status,2,c
  7706  00351A  D7EA               	goto	l4547
  7707  00351C  0A01               	xorlw	1	; case 3
  7708  00351E  B4D8               	btfsc	status,2,c
  7709  003520  D7E9               	goto	l4549
  7710  003522  0A07               	xorlw	7	; case 4
  7711  003524  B4D8               	btfsc	status,2,c
  7712  003526  D7E8               	goto	l4551
  7713  003528                     l4557:
  7714                           
  7715                           ;./ADC.h: 30:     LATA=0x00;
  7716  003528  0E00               	movlw	0
  7717  00352A  6E89               	movwf	3977,c	;volatile
  7718  00352C  0012               	return		;funcret
  7719  00352E                     __end_of_ADC_Init:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function _ADC_Channel *****************
  7723 ;; Defined at:
  7724 ;;		line 32 in file "./ADC.h"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  Puerto          2    0[BANK0 ] int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  4    0[BANK0 ] float 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7738 ;;      Params:         0       4       0       0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7740 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7741 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7742 ;;Total ram usage:        8 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:    3
  7745 ;; This function calls:
  7746 ;;		___fldiv
  7747 ;;		___flmul
  7748 ;;		___xxtofl
  7749 ;; This function is called by:
  7750 ;;		_main
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text36
  7755  002518                     __ptext36:
  7756                           	opt callstack 0
  7757  002518                     _ADC_Channel:
  7758                           	opt callstack 27
  7759                           
  7760                           ;./ADC.h: 33:     if(Puerto>12){
  7761                           
  7762                           ;incstack = 0
  7763  002518  0100               	movlb	0	; () banked
  7764  00251A  BF61               	btfsc	(ADC_Channel@Puerto+1)& (0+255),7,b
  7765  00251C  D00F               	goto	l6205
  7766  00251E  5161               	movf	(ADC_Channel@Puerto+1)& (0+255),w,b
  7767  002520  E104               	bnz	u8100
  7768  002522  0E0D               	movlw	13
  7769  002524  5D60               	subwf	ADC_Channel@Puerto& (0+255),w,b
  7770  002526  A0D8               	btfss	status,0,c
  7771  002528  D009               	goto	l6205
  7772  00252A                     u8100:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;./ADC.h: 34:         return 0;
  7776  00252A  0E00               	movlw	0
  7777  00252C  6F60               	movwf	?_ADC_Channel& (0+255),b
  7778  00252E  0E00               	movlw	0
  7779  002530  6F61               	movwf	(?_ADC_Channel+1)& (0+255),b
  7780  002532  0E00               	movlw	0
  7781  002534  6F62               	movwf	(?_ADC_Channel+2)& (0+255),b
  7782  002536  0E00               	movlw	0
  7783  002538  6F63               	movwf	(?_ADC_Channel+3)& (0+255),b
  7784  00253A  0012               	return	
  7785  00253C                     l6205:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;./ADC.h: 36:     ADCON0bits.CHS=Puerto;
  7789  00253C  C060  F064         	movff	ADC_Channel@Puerto,??_ADC_Channel
  7790  002540  4764               	rlncf	??_ADC_Channel& (0+255),f,b
  7791  002542  4764               	rlncf	??_ADC_Channel& (0+255),f,b
  7792  002544  50C2               	movf	4034,w,c	;volatile
  7793  002546  1964               	xorwf	??_ADC_Channel& (0+255),w,b
  7794  002548  0BC3               	andlw	-61
  7795  00254A  1964               	xorwf	??_ADC_Channel& (0+255),w,b
  7796  00254C  6EC2               	movwf	4034,c	;volatile
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;./ADC.h: 37:     ADCON0bits.ADON = 1;
  7800  00254E  80C2               	bsf	4034,0,c	;volatile
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;./ADC.h: 38:     ADCON0bits.GO_DONE = 1;
  7804  002550  82C2               	bsf	4034,1,c	;volatile
  7805                           
  7806                           ;./ADC.h: 39:     while(ADCON0bits.GO_DONE==1){
  7807  002552  D088               	goto	l128
  7808  002554                     l6211:
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;./ADC.h: 40:        ADC[Puerto]=ADRES;
  7812  002554  CFC3 F010          	movff	4035,___xxtofl@val	;volatile
  7813  002558  CFC4 F011          	movff	4036,___xxtofl@val+1	;volatile
  7814  00255C  6A12               	clrf	___xxtofl@val+2,c
  7815  00255E  6A13               	clrf	___xxtofl@val+3,c
  7816  002560  0E00               	movlw	0
  7817  002562  ECD5  F013         	call	___xxtofl
  7818  002566  0E30               	movlw	low _ADC
  7819  002568  0100               	movlb	0	; () banked
  7820  00256A  6F64               	movwf	??_ADC_Channel& (0+255),b
  7821  00256C  0E01               	movlw	high _ADC
  7822  00256E  6F65               	movwf	(??_ADC_Channel+1)& (0+255),b
  7823  002570  90D8               	bcf	status,0,c
  7824  002572  3560               	rlcf	ADC_Channel@Puerto& (0+255),w,b
  7825  002574  6ED9               	movwf	fsr2l,c
  7826  002576  3561               	rlcf	(ADC_Channel@Puerto+1)& (0+255),w,b
  7827  002578  6EDA               	movwf	fsr2h,c
  7828  00257A  90D8               	bcf	status,0,c
  7829  00257C  36D9               	rlcf	fsr2l,f,c
  7830  00257E  36DA               	rlcf	fsr2h,f,c
  7831  002580  5164               	movf	??_ADC_Channel& (0+255),w,b
  7832  002582  26D9               	addwf	fsr2l,f,c
  7833  002584  5165               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7834  002586  22DA               	addwfc	fsr2h,f,c
  7835  002588  C010  FFDE         	movff	?___xxtofl,postinc2
  7836  00258C  C011  FFDE         	movff	?___xxtofl+1,postinc2
  7837  002590  C012  FFDE         	movff	?___xxtofl+2,postinc2
  7838  002594  C013  FFDE         	movff	?___xxtofl+3,postinc2
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;./ADC.h: 41:        ADC[Puerto]=(ADC[Puerto]*5.0)/1023;
  7842  002598  0E00               	movlw	0
  7843  00259A  6E14               	movwf	___flmul@a,c
  7844  00259C  0E00               	movlw	0
  7845  00259E  6E15               	movwf	___flmul@a+1,c
  7846  0025A0  0EA0               	movlw	160
  7847  0025A2  6E16               	movwf	___flmul@a+2,c
  7848  0025A4  0E40               	movlw	64
  7849  0025A6  6E17               	movwf	___flmul@a+3,c
  7850  0025A8  0E30               	movlw	low _ADC
  7851  0025AA  6F64               	movwf	??_ADC_Channel& (0+255),b
  7852  0025AC  0E01               	movlw	high _ADC
  7853  0025AE  6F65               	movwf	(??_ADC_Channel+1)& (0+255),b
  7854  0025B0  90D8               	bcf	status,0,c
  7855  0025B2  3560               	rlcf	ADC_Channel@Puerto& (0+255),w,b
  7856  0025B4  6ED9               	movwf	fsr2l,c
  7857  0025B6  3561               	rlcf	(ADC_Channel@Puerto+1)& (0+255),w,b
  7858  0025B8  6EDA               	movwf	fsr2h,c
  7859  0025BA  90D8               	bcf	status,0,c
  7860  0025BC  36D9               	rlcf	fsr2l,f,c
  7861  0025BE  36DA               	rlcf	fsr2h,f,c
  7862  0025C0  5164               	movf	??_ADC_Channel& (0+255),w,b
  7863  0025C2  26D9               	addwf	fsr2l,f,c
  7864  0025C4  5165               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7865  0025C6  22DA               	addwfc	fsr2h,f,c
  7866  0025C8  CFDE F010          	movff	postinc2,___flmul@b
  7867  0025CC  CFDE F011          	movff	postinc2,___flmul@b+1
  7868  0025D0  CFDE F012          	movff	postinc2,___flmul@b+2
  7869  0025D4  CFDE F013          	movff	postinc2,___flmul@b+3
  7870  0025D8  EC6A  F00C         	call	___flmul	;wreg free
  7871  0025DC  C010  F029         	movff	?___flmul,___fldiv@b
  7872  0025E0  C011  F02A         	movff	?___flmul+1,___fldiv@b+1
  7873  0025E4  C012  F02B         	movff	?___flmul+2,___fldiv@b+2
  7874  0025E8  C013  F02C         	movff	?___flmul+3,___fldiv@b+3
  7875  0025EC  0E00               	movlw	0
  7876  0025EE  6E2D               	movwf	___fldiv@a,c
  7877  0025F0  0EC0               	movlw	192
  7878  0025F2  6E2E               	movwf	___fldiv@a+1,c
  7879  0025F4  0E7F               	movlw	127
  7880  0025F6  6E2F               	movwf	___fldiv@a+2,c
  7881  0025F8  0E44               	movlw	68
  7882  0025FA  6E30               	movwf	___fldiv@a+3,c
  7883  0025FC  EC99  F00F         	call	___fldiv	;wreg free
  7884  002600  0E30               	movlw	low _ADC
  7885  002602  0100               	movlb	0	; () banked
  7886  002604  6F66               	movwf	(??_ADC_Channel+2)& (0+255),b
  7887  002606  0E01               	movlw	high _ADC
  7888  002608  6F67               	movwf	(??_ADC_Channel+3)& (0+255),b
  7889  00260A  90D8               	bcf	status,0,c
  7890  00260C  3560               	rlcf	ADC_Channel@Puerto& (0+255),w,b
  7891  00260E  6ED9               	movwf	fsr2l,c
  7892  002610  3561               	rlcf	(ADC_Channel@Puerto+1)& (0+255),w,b
  7893  002612  6EDA               	movwf	fsr2h,c
  7894  002614  90D8               	bcf	status,0,c
  7895  002616  36D9               	rlcf	fsr2l,f,c
  7896  002618  36DA               	rlcf	fsr2h,f,c
  7897  00261A  5166               	movf	(??_ADC_Channel+2)& (0+255),w,b
  7898  00261C  26D9               	addwf	fsr2l,f,c
  7899  00261E  5167               	movf	(??_ADC_Channel+3)& (0+255),w,b
  7900  002620  22DA               	addwfc	fsr2h,f,c
  7901  002622  C029  FFDE         	movff	?___fldiv,postinc2
  7902  002626  C02A  FFDE         	movff	?___fldiv+1,postinc2
  7903  00262A  C02B  FFDE         	movff	?___fldiv+2,postinc2
  7904  00262E  C02C  FFDE         	movff	?___fldiv+3,postinc2
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;./ADC.h: 42:         return ADC[Puerto];
  7908  002632  0E30               	movlw	low _ADC
  7909  002634  6F64               	movwf	??_ADC_Channel& (0+255),b
  7910  002636  0E01               	movlw	high _ADC
  7911  002638  6F65               	movwf	(??_ADC_Channel+1)& (0+255),b
  7912  00263A  90D8               	bcf	status,0,c
  7913  00263C  3560               	rlcf	ADC_Channel@Puerto& (0+255),w,b
  7914  00263E  6ED9               	movwf	fsr2l,c
  7915  002640  3561               	rlcf	(ADC_Channel@Puerto+1)& (0+255),w,b
  7916  002642  6EDA               	movwf	fsr2h,c
  7917  002644  90D8               	bcf	status,0,c
  7918  002646  36D9               	rlcf	fsr2l,f,c
  7919  002648  36DA               	rlcf	fsr2h,f,c
  7920  00264A  5164               	movf	??_ADC_Channel& (0+255),w,b
  7921  00264C  26D9               	addwf	fsr2l,f,c
  7922  00264E  5165               	movf	(??_ADC_Channel+1)& (0+255),w,b
  7923  002650  22DA               	addwfc	fsr2h,f,c
  7924  002652  CFDE F060          	movff	postinc2,?_ADC_Channel
  7925  002656  CFDE F061          	movff	postinc2,?_ADC_Channel+1
  7926  00265A  CFDE F062          	movff	postinc2,?_ADC_Channel+2
  7927  00265E  CFDE F063          	movff	postinc2,?_ADC_Channel+3
  7928  002662  0012               	return	
  7929  002664                     l128:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;./ADC.h: 39:     while(ADCON0bits.GO_DONE==1){
  7933  002664  A2C2               	btfss	4034,1,c	;volatile
  7934  002666  0012               	return	
  7935  002668  D775               	goto	l6211
  7936  00266A                     __end_of_ADC_Channel:
  7937                           	opt callstack 0
  7938                           
  7939 ;; *************** function ___xxtofl *****************
  7940 ;; Defined at:
  7941 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  sign            1    wreg     unsigned char 
  7944 ;;  val             4   15[COMRAM] long 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  sign            1   23[COMRAM] unsigned char 
  7947 ;;  arg             4   25[COMRAM] unsigned long 
  7948 ;;  exp             1   24[COMRAM] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  4   15[COMRAM] unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7958 ;;      Params:         4       0       0       0       0       0       0       0       0
  7959 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7961 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7962 ;;Total ram usage:       14 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    2
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_ADC_Channel
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text37
  7973  0027AA                     __ptext37:
  7974                           	opt callstack 0
  7975  0027AA                     ___xxtofl:
  7976                           	opt callstack 27
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;incstack = 0
  7980                           ;___xxtofl@sign stored from wreg
  7981  0027AA  6E18               	movwf	___xxtofl@sign,c
  7982  0027AC  5018               	movf	___xxtofl@sign,w,c
  7983  0027AE  A4D8               	btfss	status,2,c
  7984  0027B0  AE13               	btfss	___xxtofl@val+3,7,c
  7985  0027B2  D01A               	goto	l1032
  7986  0027B4  C010  F014         	movff	___xxtofl@val,??___xxtofl
  7987  0027B8  C011  F015         	movff	___xxtofl@val+1,??___xxtofl+1
  7988  0027BC  C012  F016         	movff	___xxtofl@val+2,??___xxtofl+2
  7989  0027C0  C013  F017         	movff	___xxtofl@val+3,??___xxtofl+3
  7990  0027C4  1E14               	comf	??___xxtofl,f,c
  7991  0027C6  1E15               	comf	??___xxtofl+1,f,c
  7992  0027C8  1E16               	comf	??___xxtofl+2,f,c
  7993  0027CA  1E17               	comf	??___xxtofl+3,f,c
  7994  0027CC  2A14               	incf	??___xxtofl,f,c
  7995  0027CE  0E00               	movlw	0
  7996  0027D0  2215               	addwfc	??___xxtofl+1,f,c
  7997  0027D2  2216               	addwfc	??___xxtofl+2,f,c
  7998  0027D4  2217               	addwfc	??___xxtofl+3,f,c
  7999  0027D6  C014  F01A         	movff	??___xxtofl,___xxtofl@arg
  8000  0027DA  C015  F01B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8001  0027DE  C016  F01C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8002  0027E2  C017  F01D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8003  0027E6  D008               	goto	l4373
  8004  0027E8                     l1032:
  8005  0027E8  C010  F01A         	movff	___xxtofl@val,___xxtofl@arg
  8006  0027EC  C011  F01B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8007  0027F0  C012  F01C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8008  0027F4  C013  F01D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8009  0027F8                     l4373:
  8010  0027F8  5010               	movf	___xxtofl@val,w,c
  8011  0027FA  1011               	iorwf	___xxtofl@val+1,w,c
  8012  0027FC  1012               	iorwf	___xxtofl@val+2,w,c
  8013  0027FE  1013               	iorwf	___xxtofl@val+3,w,c
  8014  002800  A4D8               	btfss	status,2,c
  8015  002802  D009               	goto	l4379
  8016  002804  0E00               	movlw	0
  8017  002806  6E10               	movwf	?___xxtofl,c
  8018  002808  0E00               	movlw	0
  8019  00280A  6E11               	movwf	?___xxtofl+1,c
  8020  00280C  0E00               	movlw	0
  8021  00280E  6E12               	movwf	?___xxtofl+2,c
  8022  002810  0E00               	movlw	0
  8023  002812  6E13               	movwf	?___xxtofl+3,c
  8024  002814  0012               	return	
  8025  002816                     l4379:
  8026  002816  0E96               	movlw	150
  8027  002818  6E19               	movwf	___xxtofl@exp,c
  8028  00281A  D006               	goto	l4383
  8029  00281C                     l4381:
  8030  00281C  2A19               	incf	___xxtofl@exp,f,c
  8031  00281E  90D8               	bcf	status,0,c
  8032  002820  321D               	rrcf	___xxtofl@arg+3,f,c
  8033  002822  321C               	rrcf	___xxtofl@arg+2,f,c
  8034  002824  321B               	rrcf	___xxtofl@arg+1,f,c
  8035  002826  321A               	rrcf	___xxtofl@arg,f,c
  8036  002828                     l4383:
  8037  002828  0E00               	movlw	0
  8038  00282A  141A               	andwf	___xxtofl@arg,w,c
  8039  00282C  6E14               	movwf	??___xxtofl& (0+255),c
  8040  00282E  0E00               	movlw	0
  8041  002830  141B               	andwf	___xxtofl@arg+1,w,c
  8042  002832  6E15               	movwf	(??___xxtofl+1)& (0+255),c
  8043  002834  0E00               	movlw	0
  8044  002836  141C               	andwf	___xxtofl@arg+2,w,c
  8045  002838  6E16               	movwf	(??___xxtofl+2)& (0+255),c
  8046  00283A  0EFE               	movlw	254
  8047  00283C  141D               	andwf	___xxtofl@arg+3,w,c
  8048  00283E  6E17               	movwf	(??___xxtofl+3)& (0+255),c
  8049  002840  5014               	movf	??___xxtofl,w,c
  8050  002842  1015               	iorwf	??___xxtofl+1,w,c
  8051  002844  1016               	iorwf	??___xxtofl+2,w,c
  8052  002846  1017               	iorwf	??___xxtofl+3,w,c
  8053  002848  B4D8               	btfsc	status,2,c
  8054  00284A  D00D               	goto	l1039
  8055  00284C  D7E7               	goto	l4381
  8056  00284E                     l4385:
  8057  00284E  2A19               	incf	___xxtofl@exp,f,c
  8058  002850  0E01               	movlw	1
  8059  002852  261A               	addwf	___xxtofl@arg,f,c
  8060  002854  0E00               	movlw	0
  8061  002856  221B               	addwfc	___xxtofl@arg+1,f,c
  8062  002858  221C               	addwfc	___xxtofl@arg+2,f,c
  8063  00285A  221D               	addwfc	___xxtofl@arg+3,f,c
  8064  00285C  90D8               	bcf	status,0,c
  8065  00285E  321D               	rrcf	___xxtofl@arg+3,f,c
  8066  002860  321C               	rrcf	___xxtofl@arg+2,f,c
  8067  002862  321B               	rrcf	___xxtofl@arg+1,f,c
  8068  002864  321A               	rrcf	___xxtofl@arg,f,c
  8069  002866                     l1039:
  8070  002866  0E00               	movlw	0
  8071  002868  141A               	andwf	___xxtofl@arg,w,c
  8072  00286A  6E14               	movwf	??___xxtofl& (0+255),c
  8073  00286C  0E00               	movlw	0
  8074  00286E  141B               	andwf	___xxtofl@arg+1,w,c
  8075  002870  6E15               	movwf	(??___xxtofl+1)& (0+255),c
  8076  002872  0E00               	movlw	0
  8077  002874  141C               	andwf	___xxtofl@arg+2,w,c
  8078  002876  6E16               	movwf	(??___xxtofl+2)& (0+255),c
  8079  002878  0EFF               	movlw	255
  8080  00287A  141D               	andwf	___xxtofl@arg+3,w,c
  8081  00287C  6E17               	movwf	(??___xxtofl+3)& (0+255),c
  8082  00287E  5014               	movf	??___xxtofl,w,c
  8083  002880  1015               	iorwf	??___xxtofl+1,w,c
  8084  002882  1016               	iorwf	??___xxtofl+2,w,c
  8085  002884  1017               	iorwf	??___xxtofl+3,w,c
  8086  002886  B4D8               	btfsc	status,2,c
  8087  002888  D007               	goto	l4393
  8088  00288A  D7E1               	goto	l4385
  8089  00288C                     l4391:
  8090  00288C  0619               	decf	___xxtofl@exp,f,c
  8091  00288E  90D8               	bcf	status,0,c
  8092  002890  361A               	rlcf	___xxtofl@arg,f,c
  8093  002892  361B               	rlcf	___xxtofl@arg+1,f,c
  8094  002894  361C               	rlcf	___xxtofl@arg+2,f,c
  8095  002896  361D               	rlcf	___xxtofl@arg+3,f,c
  8096  002898                     l4393:
  8097  002898  BE1C               	btfsc	___xxtofl@arg+2,7,c
  8098  00289A  D003               	goto	u5310
  8099  00289C  0E02               	movlw	2
  8100  00289E  6019               	cpfslt	___xxtofl@exp,c
  8101  0028A0  D7F5               	goto	l4391
  8102  0028A2                     u5310:
  8103  0028A2  A019               	btfss	___xxtofl@exp,0,c
  8104  0028A4  9E1C               	bcf	___xxtofl@arg+2,7,c
  8105  0028A6  90D8               	bcf	status,0,c
  8106  0028A8  3219               	rrcf	___xxtofl@exp,f,c
  8107  0028AA  C019  F014         	movff	___xxtofl@exp,??___xxtofl
  8108  0028AE  6A15               	clrf	(??___xxtofl+1)& (0+255),c
  8109  0028B0  6A16               	clrf	(??___xxtofl+2)& (0+255),c
  8110  0028B2  6A17               	clrf	(??___xxtofl+3)& (0+255),c
  8111  0028B4  C014  F017         	movff	??___xxtofl,??___xxtofl+3
  8112  0028B8  6A16               	clrf	??___xxtofl+2,c
  8113  0028BA  6A15               	clrf	??___xxtofl+1,c
  8114  0028BC  6A14               	clrf	??___xxtofl,c
  8115  0028BE  5014               	movf	??___xxtofl,w,c
  8116  0028C0  121A               	iorwf	___xxtofl@arg,f,c
  8117  0028C2  5015               	movf	??___xxtofl+1,w,c
  8118  0028C4  121B               	iorwf	___xxtofl@arg+1,f,c
  8119  0028C6  5016               	movf	??___xxtofl+2,w,c
  8120  0028C8  121C               	iorwf	___xxtofl@arg+2,f,c
  8121  0028CA  5017               	movf	??___xxtofl+3,w,c
  8122  0028CC  121D               	iorwf	___xxtofl@arg+3,f,c
  8123  0028CE  5018               	movf	___xxtofl@sign,w,c
  8124  0028D0  A4D8               	btfss	status,2,c
  8125  0028D2  AE13               	btfss	___xxtofl@val+3,7,c
  8126  0028D4  D001               	goto	l4409
  8127  0028D6  8E1D               	bsf	___xxtofl@arg+3,7,c
  8128  0028D8                     l4409:
  8129  0028D8  C01A  F010         	movff	___xxtofl@arg,?___xxtofl
  8130  0028DC  C01B  F011         	movff	___xxtofl@arg+1,?___xxtofl+1
  8131  0028E0  C01C  F012         	movff	___xxtofl@arg+2,?___xxtofl+2
  8132  0028E4  C01D  F013         	movff	___xxtofl@arg+3,?___xxtofl+3
  8133  0028E8  0012               	return		;funcret
  8134  0028EA                     __end_of___xxtofl:
  8135                           	opt callstack 0
  8136                           
  8137 ;; *************** function ___flmul *****************
  8138 ;; Defined at:
  8139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  b               4   15[COMRAM] unsigned char 
  8142 ;;  a               4   19[COMRAM] unsigned char 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  prod            4   34[COMRAM] struct .
  8145 ;;  grs             4   29[COMRAM] unsigned long 
  8146 ;;  temp            2   38[COMRAM] struct .
  8147 ;;  bexp            1   33[COMRAM] unsigned char 
  8148 ;;  aexp            1   28[COMRAM] unsigned char 
  8149 ;;  sign            1   27[COMRAM] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  4   15[COMRAM] unsigned char 
  8152 ;; Registers used:
  8153 ;;		wreg, status,2, status,0, prodl, prodh
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8159 ;;      Params:         8       0       0       0       0       0       0       0       0
  8160 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8161 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8162 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8163 ;;Total ram usage:       25 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    2
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_ADC_Channel
  8170 ;;		_efgtoa
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text38
  8175  0018D4                     __ptext38:
  8176                           	opt callstack 0
  8177  0018D4                     ___flmul:
  8178                           	opt callstack 24
  8179                           
  8180                           ;incstack = 0
  8181  0018D4  5013               	movf	___flmul@b+3,w,c
  8182  0018D6  0B80               	andlw	128
  8183  0018D8  6E1C               	movwf	___flmul@sign,c
  8184  0018DA  5013               	movf	___flmul@b+3,w,c
  8185  0018DC  2413               	addwf	___flmul@b+3,w,c
  8186  0018DE  6E22               	movwf	___flmul@bexp,c
  8187  0018E0  BE12               	btfsc	___flmul@b+2,7,c
  8188  0018E2  8022               	bsf	___flmul@bexp,0,c
  8189  0018E4  5022               	movf	___flmul@bexp,w,c
  8190  0018E6  B4D8               	btfsc	status,2,c
  8191  0018E8  D00D               	goto	l5437
  8192  0018EA  2822               	incf	___flmul@bexp,w,c
  8193  0018EC  A4D8               	btfss	status,2,c
  8194  0018EE  D008               	goto	l5435
  8195  0018F0  0E00               	movlw	0
  8196  0018F2  6E10               	movwf	___flmul@b,c
  8197  0018F4  0E00               	movlw	0
  8198  0018F6  6E11               	movwf	___flmul@b+1,c
  8199  0018F8  0E00               	movlw	0
  8200  0018FA  6E12               	movwf	___flmul@b+2,c
  8201  0018FC  0E00               	movlw	0
  8202  0018FE  6E13               	movwf	___flmul@b+3,c
  8203  001900                     l5435:
  8204  001900  8E12               	bsf	___flmul@b+2,7,c
  8205  001902  D008               	goto	l5439
  8206  001904                     l5437:
  8207  001904  0E00               	movlw	0
  8208  001906  6E10               	movwf	___flmul@b,c
  8209  001908  0E00               	movlw	0
  8210  00190A  6E11               	movwf	___flmul@b+1,c
  8211  00190C  0E00               	movlw	0
  8212  00190E  6E12               	movwf	___flmul@b+2,c
  8213  001910  0E00               	movlw	0
  8214  001912  6E13               	movwf	___flmul@b+3,c
  8215  001914                     l5439:
  8216  001914  5017               	movf	___flmul@a+3,w,c
  8217  001916  0B80               	andlw	128
  8218  001918  1A1C               	xorwf	___flmul@sign,f,c
  8219  00191A  5017               	movf	___flmul@a+3,w,c
  8220  00191C  2417               	addwf	___flmul@a+3,w,c
  8221  00191E  6E1D               	movwf	___flmul@aexp,c
  8222  001920  BE16               	btfsc	___flmul@a+2,7,c
  8223  001922  801D               	bsf	___flmul@aexp,0,c
  8224  001924  501D               	movf	___flmul@aexp,w,c
  8225  001926  B4D8               	btfsc	status,2,c
  8226  001928  D00D               	goto	l5455
  8227  00192A  281D               	incf	___flmul@aexp,w,c
  8228  00192C  A4D8               	btfss	status,2,c
  8229  00192E  D008               	goto	l5453
  8230  001930  0E00               	movlw	0
  8231  001932  6E14               	movwf	___flmul@a,c
  8232  001934  0E00               	movlw	0
  8233  001936  6E15               	movwf	___flmul@a+1,c
  8234  001938  0E00               	movlw	0
  8235  00193A  6E16               	movwf	___flmul@a+2,c
  8236  00193C  0E00               	movlw	0
  8237  00193E  6E17               	movwf	___flmul@a+3,c
  8238  001940                     l5453:
  8239  001940  8E16               	bsf	___flmul@a+2,7,c
  8240  001942  D008               	goto	l991
  8241  001944                     l5455:
  8242  001944  0E00               	movlw	0
  8243  001946  6E14               	movwf	___flmul@a,c
  8244  001948  0E00               	movlw	0
  8245  00194A  6E15               	movwf	___flmul@a+1,c
  8246  00194C  0E00               	movlw	0
  8247  00194E  6E16               	movwf	___flmul@a+2,c
  8248  001950  0E00               	movlw	0
  8249  001952  6E17               	movwf	___flmul@a+3,c
  8250  001954                     l991:
  8251  001954  501D               	movf	___flmul@aexp,w,c
  8252  001956  B4D8               	btfsc	status,2,c
  8253  001958  D003               	goto	u6890
  8254  00195A  5022               	movf	___flmul@bexp,w,c
  8255  00195C  A4D8               	btfss	status,2,c
  8256  00195E  D009               	goto	l5463
  8257  001960                     u6890:
  8258  001960  0E00               	movlw	0
  8259  001962  6E10               	movwf	?___flmul,c
  8260  001964  0E00               	movlw	0
  8261  001966  6E11               	movwf	?___flmul+1,c
  8262  001968  0E00               	movlw	0
  8263  00196A  6E12               	movwf	?___flmul+2,c
  8264  00196C  0E00               	movlw	0
  8265  00196E  6E13               	movwf	?___flmul+3,c
  8266  001970  0012               	return	
  8267  001972                     l5463:
  8268  001972  5016               	movf	___flmul@a+2,w,c
  8269  001974  0210               	mulwf	___flmul@b,c
  8270  001976  CFF3 F027          	movff	prodl,___flmul@temp
  8271  00197A  CFF4 F028          	movff	prodh,___flmul@temp+1
  8272  00197E  5027               	movf	___flmul@temp,w,c
  8273  001980  6E1E               	movwf	___flmul@grs,c
  8274  001982  6A1F               	clrf	___flmul@grs+1,c
  8275  001984  6A20               	clrf	___flmul@grs+2,c
  8276  001986  6A21               	clrf	___flmul@grs+3,c
  8277  001988  5028               	movf	___flmul@temp+1,w,c
  8278  00198A  6E23               	movwf	___flmul@prod,c
  8279  00198C  6A24               	clrf	___flmul@prod+1,c
  8280  00198E  6A25               	clrf	___flmul@prod+2,c
  8281  001990  6A26               	clrf	___flmul@prod+3,c
  8282  001992  5015               	movf	___flmul@a+1,w,c
  8283  001994  0211               	mulwf	___flmul@b+1,c
  8284  001996  CFF3 F027          	movff	prodl,___flmul@temp
  8285  00199A  CFF4 F028          	movff	prodh,___flmul@temp+1
  8286  00199E  5027               	movf	___flmul@temp,w,c
  8287  0019A0  261E               	addwf	___flmul@grs,f,c
  8288  0019A2  0E00               	movlw	0
  8289  0019A4  221F               	addwfc	___flmul@grs+1,f,c
  8290  0019A6  2220               	addwfc	___flmul@grs+2,f,c
  8291  0019A8  2221               	addwfc	___flmul@grs+3,f,c
  8292  0019AA  5028               	movf	___flmul@temp+1,w,c
  8293  0019AC  2623               	addwf	___flmul@prod,f,c
  8294  0019AE  0E00               	movlw	0
  8295  0019B0  2224               	addwfc	___flmul@prod+1,f,c
  8296  0019B2  2225               	addwfc	___flmul@prod+2,f,c
  8297  0019B4  2226               	addwfc	___flmul@prod+3,f,c
  8298  0019B6  5014               	movf	___flmul@a,w,c
  8299  0019B8  0212               	mulwf	___flmul@b+2,c
  8300  0019BA  CFF3 F027          	movff	prodl,___flmul@temp
  8301  0019BE  CFF4 F028          	movff	prodh,___flmul@temp+1
  8302  0019C2  5027               	movf	___flmul@temp,w,c
  8303  0019C4  261E               	addwf	___flmul@grs,f,c
  8304  0019C6  0E00               	movlw	0
  8305  0019C8  221F               	addwfc	___flmul@grs+1,f,c
  8306  0019CA  2220               	addwfc	___flmul@grs+2,f,c
  8307  0019CC  2221               	addwfc	___flmul@grs+3,f,c
  8308  0019CE  5028               	movf	___flmul@temp+1,w,c
  8309  0019D0  2623               	addwf	___flmul@prod,f,c
  8310  0019D2  0E00               	movlw	0
  8311  0019D4  2224               	addwfc	___flmul@prod+1,f,c
  8312  0019D6  2225               	addwfc	___flmul@prod+2,f,c
  8313  0019D8  2226               	addwfc	___flmul@prod+3,f,c
  8314  0019DA  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  8315  0019DE  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  8316  0019E2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  8317  0019E6  6A1E               	clrf	___flmul@grs,c
  8318  0019E8  5014               	movf	___flmul@a,w,c
  8319  0019EA  0211               	mulwf	___flmul@b+1,c
  8320  0019EC  CFF3 F027          	movff	prodl,___flmul@temp
  8321  0019F0  CFF4 F028          	movff	prodh,___flmul@temp+1
  8322  0019F4  5027               	movf	___flmul@temp,w,c
  8323  0019F6  261E               	addwf	___flmul@grs,f,c
  8324  0019F8  5028               	movf	___flmul@temp+1,w,c
  8325  0019FA  221F               	addwfc	___flmul@grs+1,f,c
  8326  0019FC  0E00               	movlw	0
  8327  0019FE  2220               	addwfc	___flmul@grs+2,f,c
  8328  001A00  0E00               	movlw	0
  8329  001A02  2221               	addwfc	___flmul@grs+3,f,c
  8330  001A04  5015               	movf	___flmul@a+1,w,c
  8331  001A06  0210               	mulwf	___flmul@b,c
  8332  001A08  CFF3 F027          	movff	prodl,___flmul@temp
  8333  001A0C  CFF4 F028          	movff	prodh,___flmul@temp+1
  8334  001A10  5027               	movf	___flmul@temp,w,c
  8335  001A12  261E               	addwf	___flmul@grs,f,c
  8336  001A14  5028               	movf	___flmul@temp+1,w,c
  8337  001A16  221F               	addwfc	___flmul@grs+1,f,c
  8338  001A18  0E00               	movlw	0
  8339  001A1A  2220               	addwfc	___flmul@grs+2,f,c
  8340  001A1C  0E00               	movlw	0
  8341  001A1E  2221               	addwfc	___flmul@grs+3,f,c
  8342  001A20  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  8343  001A24  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  8344  001A28  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  8345  001A2C  6A1E               	clrf	___flmul@grs,c
  8346  001A2E  5014               	movf	___flmul@a,w,c
  8347  001A30  0210               	mulwf	___flmul@b,c
  8348  001A32  CFF3 F027          	movff	prodl,___flmul@temp
  8349  001A36  CFF4 F028          	movff	prodh,___flmul@temp+1
  8350  001A3A  5027               	movf	___flmul@temp,w,c
  8351  001A3C  261E               	addwf	___flmul@grs,f,c
  8352  001A3E  5028               	movf	___flmul@temp+1,w,c
  8353  001A40  221F               	addwfc	___flmul@grs+1,f,c
  8354  001A42  0E00               	movlw	0
  8355  001A44  2220               	addwfc	___flmul@grs+2,f,c
  8356  001A46  0E00               	movlw	0
  8357  001A48  2221               	addwfc	___flmul@grs+3,f,c
  8358  001A4A  5016               	movf	___flmul@a+2,w,c
  8359  001A4C  0211               	mulwf	___flmul@b+1,c
  8360  001A4E  CFF3 F027          	movff	prodl,___flmul@temp
  8361  001A52  CFF4 F028          	movff	prodh,___flmul@temp+1
  8362  001A56  5027               	movf	___flmul@temp,w,c
  8363  001A58  2623               	addwf	___flmul@prod,f,c
  8364  001A5A  5028               	movf	___flmul@temp+1,w,c
  8365  001A5C  2224               	addwfc	___flmul@prod+1,f,c
  8366  001A5E  0E00               	movlw	0
  8367  001A60  2225               	addwfc	___flmul@prod+2,f,c
  8368  001A62  0E00               	movlw	0
  8369  001A64  2226               	addwfc	___flmul@prod+3,f,c
  8370  001A66  5015               	movf	___flmul@a+1,w,c
  8371  001A68  0212               	mulwf	___flmul@b+2,c
  8372  001A6A  CFF3 F027          	movff	prodl,___flmul@temp
  8373  001A6E  CFF4 F028          	movff	prodh,___flmul@temp+1
  8374  001A72  5027               	movf	___flmul@temp,w,c
  8375  001A74  2623               	addwf	___flmul@prod,f,c
  8376  001A76  5028               	movf	___flmul@temp+1,w,c
  8377  001A78  2224               	addwfc	___flmul@prod+1,f,c
  8378  001A7A  0E00               	movlw	0
  8379  001A7C  2225               	addwfc	___flmul@prod+2,f,c
  8380  001A7E  0E00               	movlw	0
  8381  001A80  2226               	addwfc	___flmul@prod+3,f,c
  8382  001A82  5016               	movf	___flmul@a+2,w,c
  8383  001A84  0212               	mulwf	___flmul@b+2,c
  8384  001A86  CFF3 F027          	movff	prodl,___flmul@temp
  8385  001A8A  CFF4 F028          	movff	prodh,___flmul@temp+1
  8386  001A8E  5027               	movf	___flmul@temp,w,c
  8387  001A90  6E18               	movwf	??___flmul& (0+255),c
  8388  001A92  5028               	movf	___flmul@temp+1,w,c
  8389  001A94  6E19               	movwf	(??___flmul+1)& (0+255),c
  8390  001A96  6A1A               	clrf	(??___flmul+2)& (0+255),c
  8391  001A98  6A1B               	clrf	(??___flmul+3)& (0+255),c
  8392  001A9A  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  8393  001A9E  C019  F01A         	movff	??___flmul+1,??___flmul+2
  8394  001AA2  C018  F019         	movff	??___flmul,??___flmul+1
  8395  001AA6  6A18               	clrf	??___flmul,c
  8396  001AA8  5018               	movf	??___flmul,w,c
  8397  001AAA  2623               	addwf	___flmul@prod,f,c
  8398  001AAC  5019               	movf	??___flmul+1,w,c
  8399  001AAE  2224               	addwfc	___flmul@prod+1,f,c
  8400  001AB0  501A               	movf	??___flmul+2,w,c
  8401  001AB2  2225               	addwfc	___flmul@prod+2,f,c
  8402  001AB4  501B               	movf	??___flmul+3,w,c
  8403  001AB6  2226               	addwfc	___flmul@prod+3,f,c
  8404  001AB8  C01E  F018         	movff	___flmul@grs,??___flmul
  8405  001ABC  C01F  F019         	movff	___flmul@grs+1,??___flmul+1
  8406  001AC0  C020  F01A         	movff	___flmul@grs+2,??___flmul+2
  8407  001AC4  C021  F01B         	movff	___flmul@grs+3,??___flmul+3
  8408  001AC8  0E19               	movlw	25
  8409  001ACA  D005               	goto	u6900
  8410  001ACC                     u6905:
  8411  001ACC  90D8               	bcf	status,0,c
  8412  001ACE  321B               	rrcf	??___flmul+3,f,c
  8413  001AD0  321A               	rrcf	??___flmul+2,f,c
  8414  001AD2  3219               	rrcf	??___flmul+1,f,c
  8415  001AD4  3218               	rrcf	??___flmul,f,c
  8416  001AD6                     u6900:
  8417  001AD6  2EE8               	decfsz	wreg,f,c
  8418  001AD8  D7F9               	goto	u6905
  8419  001ADA  5018               	movf	??___flmul,w,c
  8420  001ADC  2623               	addwf	___flmul@prod,f,c
  8421  001ADE  5019               	movf	??___flmul+1,w,c
  8422  001AE0  2224               	addwfc	___flmul@prod+1,f,c
  8423  001AE2  501A               	movf	??___flmul+2,w,c
  8424  001AE4  2225               	addwfc	___flmul@prod+2,f,c
  8425  001AE6  501B               	movf	??___flmul+3,w,c
  8426  001AE8  2226               	addwfc	___flmul@prod+3,f,c
  8427  001AEA  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  8428  001AEE  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  8429  001AF2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  8430  001AF6  6A1E               	clrf	___flmul@grs,c
  8431  001AF8  501D               	movf	___flmul@aexp,w,c
  8432  001AFA  C022  F018         	movff	___flmul@bexp,??___flmul
  8433  001AFE  6A19               	clrf	(??___flmul+1)& (0+255),c
  8434  001B00  2618               	addwf	??___flmul,f,c
  8435  001B02  0E00               	movlw	0
  8436  001B04  2219               	addwfc	??___flmul+1,f,c
  8437  001B06  0E82               	movlw	130
  8438  001B08  2418               	addwf	??___flmul,w,c
  8439  001B0A  6E27               	movwf	___flmul@temp,c
  8440  001B0C  0EFF               	movlw	255
  8441  001B0E  2019               	addwfc	??___flmul+1,w,c
  8442  001B10  6E28               	movwf	___flmul@temp+1,c
  8443  001B12  D00F               	goto	l5511
  8444  001B14                     l5505:
  8445  001B14  90D8               	bcf	status,0,c
  8446  001B16  3623               	rlcf	___flmul@prod,f,c
  8447  001B18  3624               	rlcf	___flmul@prod+1,f,c
  8448  001B1A  3625               	rlcf	___flmul@prod+2,f,c
  8449  001B1C  3626               	rlcf	___flmul@prod+3,f,c
  8450  001B1E  BE21               	btfsc	___flmul@grs+3,7,c
  8451  001B20  8023               	bsf	___flmul@prod,0,c
  8452  001B22  90D8               	bcf	status,0,c
  8453  001B24  361E               	rlcf	___flmul@grs,f,c
  8454  001B26  361F               	rlcf	___flmul@grs+1,f,c
  8455  001B28  3620               	rlcf	___flmul@grs+2,f,c
  8456  001B2A  3621               	rlcf	___flmul@grs+3,f,c
  8457  001B2C  0627               	decf	___flmul@temp,f,c
  8458  001B2E  A0D8               	btfss	status,0,c
  8459  001B30  0628               	decf	___flmul@temp+1,f,c
  8460  001B32                     l5511:
  8461  001B32  AE25               	btfss	___flmul@prod+2,7,c
  8462  001B34  D7EF               	goto	l5505
  8463  001B36  0E00               	movlw	0
  8464  001B38  6E1D               	movwf	___flmul@aexp,c
  8465  001B3A  AE21               	btfss	___flmul@grs+3,7,c
  8466  001B3C  D017               	goto	l1000
  8467  001B3E  0EFF               	movlw	255
  8468  001B40  141E               	andwf	___flmul@grs,w,c
  8469  001B42  6E18               	movwf	??___flmul& (0+255),c
  8470  001B44  0EFF               	movlw	255
  8471  001B46  141F               	andwf	___flmul@grs+1,w,c
  8472  001B48  6E19               	movwf	(??___flmul+1)& (0+255),c
  8473  001B4A  0EFF               	movlw	255
  8474  001B4C  1420               	andwf	___flmul@grs+2,w,c
  8475  001B4E  6E1A               	movwf	(??___flmul+2)& (0+255),c
  8476  001B50  0E7F               	movlw	127
  8477  001B52  1421               	andwf	___flmul@grs+3,w,c
  8478  001B54  6E1B               	movwf	(??___flmul+3)& (0+255),c
  8479  001B56  5018               	movf	??___flmul,w,c
  8480  001B58  1019               	iorwf	??___flmul+1,w,c
  8481  001B5A  101A               	iorwf	??___flmul+2,w,c
  8482  001B5C  101B               	iorwf	??___flmul+3,w,c
  8483  001B5E  B4D8               	btfsc	status,2,c
  8484  001B60  D003               	goto	l1001
  8485  001B62                     u6940:
  8486  001B62  0E01               	movlw	1
  8487  001B64  6E1D               	movwf	___flmul@aexp,c
  8488  001B66  D002               	goto	l1000
  8489  001B68                     l1001:
  8490  001B68  B023               	btfsc	___flmul@prod,0,c
  8491  001B6A  D7FB               	goto	u6940
  8492  001B6C                     l1000:
  8493  001B6C  501D               	movf	___flmul@aexp,w,c
  8494  001B6E  B4D8               	btfsc	status,2,c
  8495  001B70  D01F               	goto	l5531
  8496  001B72  0E01               	movlw	1
  8497  001B74  2623               	addwf	___flmul@prod,f,c
  8498  001B76  0E00               	movlw	0
  8499  001B78  2224               	addwfc	___flmul@prod+1,f,c
  8500  001B7A  2225               	addwfc	___flmul@prod+2,f,c
  8501  001B7C  2226               	addwfc	___flmul@prod+3,f,c
  8502  001B7E  A026               	btfss	___flmul@prod+3,0,c
  8503  001B80  D017               	goto	l5531
  8504  001B82  C023  F018         	movff	___flmul@prod,??___flmul
  8505  001B86  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  8506  001B8A  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  8507  001B8E  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  8508  001B92  341B               	rlcf	??___flmul+3,w,c
  8509  001B94  321B               	rrcf	??___flmul+3,f,c
  8510  001B96  321A               	rrcf	??___flmul+2,f,c
  8511  001B98  3219               	rrcf	??___flmul+1,f,c
  8512  001B9A  3218               	rrcf	??___flmul,f,c
  8513  001B9C  C018  F023         	movff	??___flmul,___flmul@prod
  8514  001BA0  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  8515  001BA4  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  8516  001BA8  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  8517  001BAC  4A27               	infsnz	___flmul@temp,f,c
  8518  001BAE  2A28               	incf	___flmul@temp+1,f,c
  8519  001BB0                     l5531:
  8520  001BB0  BE28               	btfsc	___flmul@temp+1,7,c
  8521  001BB2  D00D               	goto	l5535
  8522  001BB4  5028               	movf	___flmul@temp+1,w,c
  8523  001BB6  E103               	bnz	u6980
  8524  001BB8  2827               	incf	___flmul@temp,w,c
  8525  001BBA  A0D8               	btfss	status,0,c
  8526  001BBC  D008               	goto	l5535
  8527  001BBE                     u6980:
  8528  001BBE  0E00               	movlw	0
  8529  001BC0  6E23               	movwf	___flmul@prod,c
  8530  001BC2  0E00               	movlw	0
  8531  001BC4  6E24               	movwf	___flmul@prod+1,c
  8532  001BC6  0E80               	movlw	128
  8533  001BC8  6E25               	movwf	___flmul@prod+2,c
  8534  001BCA  0E7F               	movlw	127
  8535  001BCC  D020               	goto	L19
  8536  001BCE                     l5535:
  8537  001BCE  BE28               	btfsc	___flmul@temp+1,7,c
  8538  001BD0  D005               	goto	u6990
  8539  001BD2  5028               	movf	___flmul@temp+1,w,c
  8540  001BD4  E10E               	bnz	l1008
  8541  001BD6  0427               	decf	___flmul@temp,w,c
  8542  001BD8  B0D8               	btfsc	status,0,c
  8543  001BDA  D00B               	goto	l1008
  8544  001BDC                     u6990:
  8545  001BDC  0E00               	movlw	0
  8546  001BDE  6E23               	movwf	___flmul@prod,c
  8547  001BE0  0E00               	movlw	0
  8548  001BE2  6E24               	movwf	___flmul@prod+1,c
  8549  001BE4  0E00               	movlw	0
  8550  001BE6  6E25               	movwf	___flmul@prod+2,c
  8551  001BE8  0E00               	movlw	0
  8552  001BEA  6E26               	movwf	___flmul@prod+3,c
  8553  001BEC  0E00               	movlw	0
  8554  001BEE  6E1C               	movwf	___flmul@sign,c
  8555  001BF0  D00F               	goto	l5547
  8556  001BF2                     l1008:
  8557  001BF2  C027  F022         	movff	___flmul@temp,___flmul@bexp
  8558  001BF6  0EFF               	movlw	255
  8559  001BF8  1623               	andwf	___flmul@prod,f,c
  8560  001BFA  0EFF               	movlw	255
  8561  001BFC  1624               	andwf	___flmul@prod+1,f,c
  8562  001BFE  0E7F               	movlw	127
  8563  001C00  1625               	andwf	___flmul@prod+2,f,c
  8564  001C02  0E00               	movlw	0
  8565  001C04  1626               	andwf	___flmul@prod+3,f,c
  8566  001C06  B022               	btfsc	___flmul@bexp,0,c
  8567  001C08  8E25               	bsf	___flmul@prod+2,7,c
  8568  001C0A  90D8               	bcf	status,0,c
  8569  001C0C  3022               	rrcf	___flmul@bexp,w,c
  8570  001C0E                     L19:
  8571  001C0E  6E26               	movwf	___flmul@prod+3,c
  8572  001C10                     l5547:
  8573  001C10  501C               	movf	___flmul@sign,w,c
  8574  001C12  1226               	iorwf	___flmul@prod+3,f,c
  8575  001C14  C023  F010         	movff	___flmul@prod,?___flmul
  8576  001C18  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  8577  001C1C  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  8578  001C20  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  8579  001C24  0012               	return		;funcret
  8580  001C26                     __end_of___flmul:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function ___fldiv *****************
  8584 ;; Defined at:
  8585 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  b               4   40[COMRAM] unsigned char 
  8588 ;;  a               4   44[COMRAM] unsigned char 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  grs             4   59[COMRAM] unsigned long 
  8591 ;;  rem             4   52[COMRAM] unsigned long 
  8592 ;;  new_exp         2   57[COMRAM] short 
  8593 ;;  aexp            1   64[COMRAM] unsigned char 
  8594 ;;  bexp            1   63[COMRAM] unsigned char 
  8595 ;;  sign            1   56[COMRAM] unsigned char 
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  4   40[COMRAM] unsigned char 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8605 ;;      Params:         8       0       0       0       0       0       0       0       0
  8606 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8607 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8608 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8609 ;;Total ram usage:       25 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    2
  8612 ;; This function calls:
  8613 ;;		Nothing
  8614 ;; This function is called by:
  8615 ;;		_ADC_Channel
  8616 ;;		_main
  8617 ;;		_efgtoa
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text39
  8622  001F32                     __ptext39:
  8623                           	opt callstack 0
  8624  001F32                     ___fldiv:
  8625                           	opt callstack 24
  8626                           
  8627                           ;incstack = 0
  8628  001F32  502C               	movf	___fldiv@b+3,w,c
  8629  001F34  0B80               	andlw	128
  8630  001F36  6E39               	movwf	___fldiv@sign,c
  8631  001F38  502C               	movf	___fldiv@b+3,w,c
  8632  001F3A  242C               	addwf	___fldiv@b+3,w,c
  8633  001F3C  6E40               	movwf	___fldiv@bexp,c
  8634  001F3E  BE2B               	btfsc	___fldiv@b+2,7,c
  8635  001F40  8040               	bsf	___fldiv@bexp,0,c
  8636  001F42  5040               	movf	___fldiv@bexp,w,c
  8637  001F44  B4D8               	btfsc	status,2,c
  8638  001F46  D00D               	goto	l5301
  8639  001F48  2840               	incf	___fldiv@bexp,w,c
  8640  001F4A  A4D8               	btfss	status,2,c
  8641  001F4C  D008               	goto	l5297
  8642  001F4E  0E00               	movlw	0
  8643  001F50  6E29               	movwf	___fldiv@b,c
  8644  001F52  0E00               	movlw	0
  8645  001F54  6E2A               	movwf	___fldiv@b+1,c
  8646  001F56  0E00               	movlw	0
  8647  001F58  6E2B               	movwf	___fldiv@b+2,c
  8648  001F5A  0E00               	movlw	0
  8649  001F5C  6E2C               	movwf	___fldiv@b+3,c
  8650  001F5E                     l5297:
  8651  001F5E  8E2B               	bsf	___fldiv@b+2,7,c
  8652  001F60  D006               	goto	L20
  8653  001F62                     l5301:
  8654  001F62  0E00               	movlw	0
  8655  001F64  6E29               	movwf	___fldiv@b,c
  8656  001F66  0E00               	movlw	0
  8657  001F68  6E2A               	movwf	___fldiv@b+1,c
  8658  001F6A  0E00               	movlw	0
  8659  001F6C  6E2B               	movwf	___fldiv@b+2,c
  8660  001F6E                     L20:
  8661  001F6E  0E00               	movlw	0
  8662  001F70  6E2C               	movwf	___fldiv@b+3,c
  8663  001F72  5030               	movf	___fldiv@a+3,w,c
  8664  001F74  0B80               	andlw	128
  8665  001F76  1A39               	xorwf	___fldiv@sign,f,c
  8666  001F78  5030               	movf	___fldiv@a+3,w,c
  8667  001F7A  2430               	addwf	___fldiv@a+3,w,c
  8668  001F7C  6E41               	movwf	___fldiv@aexp,c
  8669  001F7E  BE2F               	btfsc	___fldiv@a+2,7,c
  8670  001F80  8041               	bsf	___fldiv@aexp,0,c
  8671  001F82  5041               	movf	___fldiv@aexp,w,c
  8672  001F84  B4D8               	btfsc	status,2,c
  8673  001F86  D00D               	goto	l5321
  8674  001F88  2841               	incf	___fldiv@aexp,w,c
  8675  001F8A  A4D8               	btfss	status,2,c
  8676  001F8C  D008               	goto	l5317
  8677  001F8E  0E00               	movlw	0
  8678  001F90  6E2D               	movwf	___fldiv@a,c
  8679  001F92  0E00               	movlw	0
  8680  001F94  6E2E               	movwf	___fldiv@a+1,c
  8681  001F96  0E00               	movlw	0
  8682  001F98  6E2F               	movwf	___fldiv@a+2,c
  8683  001F9A  0E00               	movlw	0
  8684  001F9C  6E30               	movwf	___fldiv@a+3,c
  8685  001F9E                     l5317:
  8686  001F9E  8E2F               	bsf	___fldiv@a+2,7,c
  8687  001FA0  D006               	goto	L21
  8688  001FA2                     l5321:
  8689  001FA2  0E00               	movlw	0
  8690  001FA4  6E2D               	movwf	___fldiv@a,c
  8691  001FA6  0E00               	movlw	0
  8692  001FA8  6E2E               	movwf	___fldiv@a+1,c
  8693  001FAA  0E00               	movlw	0
  8694  001FAC  6E2F               	movwf	___fldiv@a+2,c
  8695  001FAE                     L21:
  8696  001FAE  0E00               	movlw	0
  8697  001FB0  6E30               	movwf	___fldiv@a+3,c
  8698  001FB2  502D               	movf	___fldiv@a,w,c
  8699  001FB4  102E               	iorwf	___fldiv@a+1,w,c
  8700  001FB6  102F               	iorwf	___fldiv@a+2,w,c
  8701  001FB8  1030               	iorwf	___fldiv@a+3,w,c
  8702  001FBA  A4D8               	btfss	status,2,c
  8703  001FBC  D017               	goto	l5335
  8704  001FBE  0E00               	movlw	0
  8705  001FC0  6E29               	movwf	___fldiv@b,c
  8706  001FC2  0E00               	movlw	0
  8707  001FC4  6E2A               	movwf	___fldiv@b+1,c
  8708  001FC6  0E00               	movlw	0
  8709  001FC8  6E2B               	movwf	___fldiv@b+2,c
  8710  001FCA  0E00               	movlw	0
  8711  001FCC  6E2C               	movwf	___fldiv@b+3,c
  8712  001FCE  0E80               	movlw	128
  8713  001FD0  122B               	iorwf	___fldiv@b+2,f,c
  8714  001FD2  0E7F               	movlw	127
  8715  001FD4  122C               	iorwf	___fldiv@b+3,f,c
  8716  001FD6                     l5329:
  8717  001FD6  5039               	movf	___fldiv@sign,w,c
  8718  001FD8  122C               	iorwf	___fldiv@b+3,f,c
  8719  001FDA  C029  F029         	movff	___fldiv@b,?___fldiv
  8720  001FDE  C02A  F02A         	movff	___fldiv@b+1,?___fldiv+1
  8721  001FE2  C02B  F02B         	movff	___fldiv@b+2,?___fldiv+2
  8722  001FE6  C02C  F02C         	movff	___fldiv@b+3,?___fldiv+3
  8723  001FEA  0012               	return	
  8724  001FEC                     l5335:
  8725  001FEC  5040               	movf	___fldiv@bexp,w,c
  8726  001FEE  A4D8               	btfss	status,2,c
  8727  001FF0  D009               	goto	l5343
  8728  001FF2  0E00               	movlw	0
  8729  001FF4  6E29               	movwf	?___fldiv,c
  8730  001FF6  0E00               	movlw	0
  8731  001FF8  6E2A               	movwf	?___fldiv+1,c
  8732  001FFA  0E00               	movlw	0
  8733  001FFC  6E2B               	movwf	?___fldiv+2,c
  8734  001FFE  0E00               	movlw	0
  8735  002000  6E2C               	movwf	?___fldiv+3,c
  8736  002002  0012               	return	
  8737  002004                     l5343:
  8738  002004  5041               	movf	___fldiv@aexp,w,c
  8739  002006  C040  F031         	movff	___fldiv@bexp,??___fldiv
  8740  00200A  6A32               	clrf	(??___fldiv+1)& (0+255),c
  8741  00200C  5E31               	subwf	??___fldiv,f,c
  8742  00200E  0E00               	movlw	0
  8743  002010  5A32               	subwfb	??___fldiv+1,f,c
  8744  002012  0E7F               	movlw	127
  8745  002014  2431               	addwf	??___fldiv,w,c
  8746  002016  6E3A               	movwf	___fldiv@new_exp,c
  8747  002018  0E00               	movlw	0
  8748  00201A  2032               	addwfc	??___fldiv+1,w,c
  8749  00201C  6E3B               	movwf	___fldiv@new_exp+1,c
  8750  00201E  C029  F035         	movff	___fldiv@b,___fldiv@rem
  8751  002022  C02A  F036         	movff	___fldiv@b+1,___fldiv@rem+1
  8752  002026  C02B  F037         	movff	___fldiv@b+2,___fldiv@rem+2
  8753  00202A  C02C  F038         	movff	___fldiv@b+3,___fldiv@rem+3
  8754  00202E  0E00               	movlw	0
  8755  002030  6E29               	movwf	___fldiv@b,c
  8756  002032  0E00               	movlw	0
  8757  002034  6E2A               	movwf	___fldiv@b+1,c
  8758  002036  0E00               	movlw	0
  8759  002038  6E2B               	movwf	___fldiv@b+2,c
  8760  00203A  0E00               	movlw	0
  8761  00203C  6E2C               	movwf	___fldiv@b+3,c
  8762  00203E  0E00               	movlw	0
  8763  002040  6E3C               	movwf	___fldiv@grs,c
  8764  002042  0E00               	movlw	0
  8765  002044  6E3D               	movwf	___fldiv@grs+1,c
  8766  002046  0E00               	movlw	0
  8767  002048  6E3E               	movwf	___fldiv@grs+2,c
  8768  00204A  0E00               	movlw	0
  8769  00204C  6E3F               	movwf	___fldiv@grs+3,c
  8770  00204E  0E00               	movlw	0
  8771  002050  6E41               	movwf	___fldiv@aexp,c
  8772  002052  D028               	goto	l961
  8773  002054                     l5353:
  8774  002054  5041               	movf	___fldiv@aexp,w,c
  8775  002056  B4D8               	btfsc	status,2,c
  8776  002058  D011               	goto	l5361
  8777  00205A  90D8               	bcf	status,0,c
  8778  00205C  3635               	rlcf	___fldiv@rem,f,c
  8779  00205E  3636               	rlcf	___fldiv@rem+1,f,c
  8780  002060  3637               	rlcf	___fldiv@rem+2,f,c
  8781  002062  3638               	rlcf	___fldiv@rem+3,f,c
  8782  002064  90D8               	bcf	status,0,c
  8783  002066  3629               	rlcf	___fldiv@b,f,c
  8784  002068  362A               	rlcf	___fldiv@b+1,f,c
  8785  00206A  362B               	rlcf	___fldiv@b+2,f,c
  8786  00206C  362C               	rlcf	___fldiv@b+3,f,c
  8787  00206E  BE3F               	btfsc	___fldiv@grs+3,7,c
  8788  002070  8029               	bsf	___fldiv@b,0,c
  8789  002072  90D8               	bcf	status,0,c
  8790  002074  363C               	rlcf	___fldiv@grs,f,c
  8791  002076  363D               	rlcf	___fldiv@grs+1,f,c
  8792  002078  363E               	rlcf	___fldiv@grs+2,f,c
  8793  00207A  363F               	rlcf	___fldiv@grs+3,f,c
  8794  00207C                     l5361:
  8795  00207C  502D               	movf	___fldiv@a,w,c
  8796  00207E  5C35               	subwf	___fldiv@rem,w,c
  8797  002080  502E               	movf	___fldiv@a+1,w,c
  8798  002082  5836               	subwfb	___fldiv@rem+1,w,c
  8799  002084  502F               	movf	___fldiv@a+2,w,c
  8800  002086  5837               	subwfb	___fldiv@rem+2,w,c
  8801  002088  5030               	movf	___fldiv@a+3,w,c
  8802  00208A  5838               	subwfb	___fldiv@rem+3,w,c
  8803  00208C  A0D8               	btfss	status,0,c
  8804  00208E  D009               	goto	l5367
  8805  002090  8C3F               	bsf	___fldiv@grs+3,6,c
  8806  002092  502D               	movf	___fldiv@a,w,c
  8807  002094  5E35               	subwf	___fldiv@rem,f,c
  8808  002096  502E               	movf	___fldiv@a+1,w,c
  8809  002098  5A36               	subwfb	___fldiv@rem+1,f,c
  8810  00209A  502F               	movf	___fldiv@a+2,w,c
  8811  00209C  5A37               	subwfb	___fldiv@rem+2,f,c
  8812  00209E  5030               	movf	___fldiv@a+3,w,c
  8813  0020A0  5A38               	subwfb	___fldiv@rem+3,f,c
  8814  0020A2                     l5367:
  8815  0020A2  2A41               	incf	___fldiv@aexp,f,c
  8816  0020A4                     l961:
  8817  0020A4  0E19               	movlw	25
  8818  0020A6  6441               	cpfsgt	___fldiv@aexp,c
  8819  0020A8  D7D5               	goto	l5353
  8820  0020AA  5035               	movf	___fldiv@rem,w,c
  8821  0020AC  1036               	iorwf	___fldiv@rem+1,w,c
  8822  0020AE  1037               	iorwf	___fldiv@rem+2,w,c
  8823  0020B0  1038               	iorwf	___fldiv@rem+3,w,c
  8824  0020B2  B4D8               	btfsc	status,2,c
  8825  0020B4  D011               	goto	l5379
  8826  0020B6  803C               	bsf	___fldiv@grs,0,c
  8827  0020B8  D00F               	goto	l5379
  8828  0020BA                     l5373:
  8829  0020BA  90D8               	bcf	status,0,c
  8830  0020BC  3629               	rlcf	___fldiv@b,f,c
  8831  0020BE  362A               	rlcf	___fldiv@b+1,f,c
  8832  0020C0  362B               	rlcf	___fldiv@b+2,f,c
  8833  0020C2  362C               	rlcf	___fldiv@b+3,f,c
  8834  0020C4  BE3F               	btfsc	___fldiv@grs+3,7,c
  8835  0020C6  8029               	bsf	___fldiv@b,0,c
  8836  0020C8  90D8               	bcf	status,0,c
  8837  0020CA  363C               	rlcf	___fldiv@grs,f,c
  8838  0020CC  363D               	rlcf	___fldiv@grs+1,f,c
  8839  0020CE  363E               	rlcf	___fldiv@grs+2,f,c
  8840  0020D0  363F               	rlcf	___fldiv@grs+3,f,c
  8841  0020D2  063A               	decf	___fldiv@new_exp,f,c
  8842  0020D4  A0D8               	btfss	status,0,c
  8843  0020D6  063B               	decf	___fldiv@new_exp+1,f,c
  8844  0020D8                     l5379:
  8845  0020D8  AE2B               	btfss	___fldiv@b+2,7,c
  8846  0020DA  D7EF               	goto	l5373
  8847  0020DC  0E00               	movlw	0
  8848  0020DE  6E41               	movwf	___fldiv@aexp,c
  8849  0020E0  AE3F               	btfss	___fldiv@grs+3,7,c
  8850  0020E2  D017               	goto	l972
  8851  0020E4  0EFF               	movlw	255
  8852  0020E6  143C               	andwf	___fldiv@grs,w,c
  8853  0020E8  6E31               	movwf	??___fldiv& (0+255),c
  8854  0020EA  0EFF               	movlw	255
  8855  0020EC  143D               	andwf	___fldiv@grs+1,w,c
  8856  0020EE  6E32               	movwf	(??___fldiv+1)& (0+255),c
  8857  0020F0  0EFF               	movlw	255
  8858  0020F2  143E               	andwf	___fldiv@grs+2,w,c
  8859  0020F4  6E33               	movwf	(??___fldiv+2)& (0+255),c
  8860  0020F6  0E7F               	movlw	127
  8861  0020F8  143F               	andwf	___fldiv@grs+3,w,c
  8862  0020FA  6E34               	movwf	(??___fldiv+3)& (0+255),c
  8863  0020FC  5031               	movf	??___fldiv,w,c
  8864  0020FE  1032               	iorwf	??___fldiv+1,w,c
  8865  002100  1033               	iorwf	??___fldiv+2,w,c
  8866  002102  1034               	iorwf	??___fldiv+3,w,c
  8867  002104  B4D8               	btfsc	status,2,c
  8868  002106  D003               	goto	l973
  8869  002108                     u6750:
  8870  002108  0E01               	movlw	1
  8871  00210A  6E41               	movwf	___fldiv@aexp,c
  8872  00210C  D002               	goto	l972
  8873  00210E                     l973:
  8874  00210E  B029               	btfsc	___fldiv@b,0,c
  8875  002110  D7FB               	goto	u6750
  8876  002112                     l972:
  8877  002112  5041               	movf	___fldiv@aexp,w,c
  8878  002114  B4D8               	btfsc	status,2,c
  8879  002116  D01F               	goto	l5399
  8880  002118  0E01               	movlw	1
  8881  00211A  2629               	addwf	___fldiv@b,f,c
  8882  00211C  0E00               	movlw	0
  8883  00211E  222A               	addwfc	___fldiv@b+1,f,c
  8884  002120  222B               	addwfc	___fldiv@b+2,f,c
  8885  002122  222C               	addwfc	___fldiv@b+3,f,c
  8886  002124  A02C               	btfss	___fldiv@b+3,0,c
  8887  002126  D017               	goto	l5399
  8888  002128  C029  F031         	movff	___fldiv@b,??___fldiv
  8889  00212C  C02A  F032         	movff	___fldiv@b+1,??___fldiv+1
  8890  002130  C02B  F033         	movff	___fldiv@b+2,??___fldiv+2
  8891  002134  C02C  F034         	movff	___fldiv@b+3,??___fldiv+3
  8892  002138  3434               	rlcf	??___fldiv+3,w,c
  8893  00213A  3234               	rrcf	??___fldiv+3,f,c
  8894  00213C  3233               	rrcf	??___fldiv+2,f,c
  8895  00213E  3232               	rrcf	??___fldiv+1,f,c
  8896  002140  3231               	rrcf	??___fldiv,f,c
  8897  002142  C031  F029         	movff	??___fldiv,___fldiv@b
  8898  002146  C032  F02A         	movff	??___fldiv+1,___fldiv@b+1
  8899  00214A  C033  F02B         	movff	??___fldiv+2,___fldiv@b+2
  8900  00214E  C034  F02C         	movff	??___fldiv+3,___fldiv@b+3
  8901  002152  4A3A               	infsnz	___fldiv@new_exp,f,c
  8902  002154  2A3B               	incf	___fldiv@new_exp+1,f,c
  8903  002156                     l5399:
  8904  002156  BE3B               	btfsc	___fldiv@new_exp+1,7,c
  8905  002158  D010               	goto	l5403
  8906  00215A  503B               	movf	___fldiv@new_exp+1,w,c
  8907  00215C  E103               	bnz	u6790
  8908  00215E  283A               	incf	___fldiv@new_exp,w,c
  8909  002160  A0D8               	btfss	status,0,c
  8910  002162  D00B               	goto	l5403
  8911  002164                     u6790:
  8912  002164  0E00               	movlw	0
  8913  002166  6E3B               	movwf	___fldiv@new_exp+1,c
  8914  002168  683A               	setf	___fldiv@new_exp,c
  8915  00216A  0E00               	movlw	0
  8916  00216C  6E29               	movwf	___fldiv@b,c
  8917  00216E  0E00               	movlw	0
  8918  002170  6E2A               	movwf	___fldiv@b+1,c
  8919  002172  0E00               	movlw	0
  8920  002174  6E2B               	movwf	___fldiv@b+2,c
  8921  002176  0E00               	movlw	0
  8922  002178  6E2C               	movwf	___fldiv@b+3,c
  8923  00217A                     l5403:
  8924  00217A  BE3B               	btfsc	___fldiv@new_exp+1,7,c
  8925  00217C  D005               	goto	u6800
  8926  00217E  503B               	movf	___fldiv@new_exp+1,w,c
  8927  002180  E111               	bnz	l5407
  8928  002182  043A               	decf	___fldiv@new_exp,w,c
  8929  002184  B0D8               	btfsc	status,0,c
  8930  002186  D00E               	goto	l5407
  8931  002188                     u6800:
  8932  002188  0E00               	movlw	0
  8933  00218A  6E3B               	movwf	___fldiv@new_exp+1,c
  8934  00218C  0E00               	movlw	0
  8935  00218E  6E3A               	movwf	___fldiv@new_exp,c
  8936  002190  0E00               	movlw	0
  8937  002192  6E29               	movwf	___fldiv@b,c
  8938  002194  0E00               	movlw	0
  8939  002196  6E2A               	movwf	___fldiv@b+1,c
  8940  002198  0E00               	movlw	0
  8941  00219A  6E2B               	movwf	___fldiv@b+2,c
  8942  00219C  0E00               	movlw	0
  8943  00219E  6E2C               	movwf	___fldiv@b+3,c
  8944  0021A0  0E00               	movlw	0
  8945  0021A2  6E39               	movwf	___fldiv@sign,c
  8946  0021A4                     l5407:
  8947  0021A4  C03A  F040         	movff	___fldiv@new_exp,___fldiv@bexp
  8948  0021A8  A040               	btfss	___fldiv@bexp,0,c
  8949  0021AA  D002               	goto	l5413
  8950  0021AC  8E2B               	bsf	___fldiv@b+2,7,c
  8951  0021AE  D001               	goto	l5415
  8952  0021B0                     l5413:
  8953  0021B0  9E2B               	bcf	___fldiv@b+2,7,c
  8954  0021B2                     l5415:
  8955  0021B2  90D8               	bcf	status,0,c
  8956  0021B4  3040               	rrcf	___fldiv@bexp,w,c
  8957  0021B6  6E2C               	movwf	___fldiv@b+3,c
  8958  0021B8  D70E               	goto	l5329
  8959  0021BA                     __end_of___fldiv:
  8960                           	opt callstack 0
  8961                           
  8962 ;; *************** function _I2C_Slave_Read *****************
  8963 ;; Defined at:
  8964 ;;		line 73 in file "I2C_Slave.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;		None
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2, status,0, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8978 ;;      Params:         0       0       0       0       0       0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8980 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8981 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8982 ;;Total ram usage:        1 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:    1
  8985 ;; This function calls:
  8986 ;;		i2___flge
  8987 ;;		i2___fltol
  8988 ;;		i2___xxtofl
  8989 ;; This function is called by:
  8990 ;;		Interrupt level 2
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	intcode
  8995  000008                     __pintcode:
  8996                           	opt callstack 0
  8997  000008                     _I2C_Slave_Read:
  8998                           	opt callstack 21
  8999                           
  9000                           ;incstack = 0
  9001  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9002  00000A  EDBA  F011         	call	int_func,f	;refresh shadow registers
  9003                           
  9004                           	psect	intcode_body
  9005  002374                     __pintcode_body:
  9006                           	opt callstack 21
  9007  002374                     int_func:
  9008                           	opt callstack 21
  9009  002374  0006               	pop		; remove dummy address from shadow register refresh
  9010                           
  9011                           ;I2C_Slave.c: 74:     if(SSPIF == 1){
  9012  002376  A69E               	btfss	3998,3,c	;volatile
  9013  002378  D03D               	goto	i2l187
  9014                           
  9015                           ;I2C_Slave.c: 75:        SSPCON1bits.CKP = 0;
  9016  00237A  98C6               	bcf	4038,4,c	;volatile
  9017                           
  9018                           ;I2C_Slave.c: 76:        if ((SSPCON1bits.SSPOV) || (SSPCON1bits.WCOL)){
  9019  00237C  BCC6               	btfsc	4038,6,c	;volatile
  9020  00237E  D002               	goto	i2u572_40
  9021  002380  AEC6               	btfss	4038,7,c	;volatile
  9022  002382  D006               	goto	i2l188
  9023  002384                     i2u572_40:
  9024                           
  9025                           ;I2C_Slave.c: 77:              z = SSPBUF;
  9026  002384  CFC9 F04C          	movff	4041,_z	;volatile
  9027  002388  6A4D               	clrf	_z+1,c
  9028                           
  9029                           ;I2C_Slave.c: 78:              SSPCON1bits.SSPOV = 0;
  9030  00238A  9CC6               	bcf	4038,6,c	;volatile
  9031                           
  9032                           ;I2C_Slave.c: 79:              SSPCON1bits.WCOL = 0;
  9033  00238C  9EC6               	bcf	4038,7,c	;volatile
  9034                           
  9035                           ;I2C_Slave.c: 80:              SSPCON1bits.CKP = 1;
  9036  00238E  88C6               	bsf	4038,4,c	;volatile
  9037  002390                     i2l188:
  9038                           
  9039                           ;I2C_Slave.c: 82:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  9040  002390  AAC7               	btfss	4039,5,c	;volatile
  9041  002392  B4C7               	btfsc	4039,2,c	;volatile
  9042  002394  D018               	goto	i2l191
  9043                           
  9044                           ;I2C_Slave.c: 83:            z = SSPBUF;
  9045  002396  CFC9 F04C          	movff	4041,_z	;volatile
  9046  00239A  6A4D               	clrf	_z+1,c
  9047  00239C                     i2l192:
  9048  00239C  A0C7               	btfss	4039,0,c	;volatile
  9049  00239E  D7FE               	goto	i2l192
  9050                           
  9051                           ;I2C_Slave.c: 85:            datos = SSPBUF;
  9052  0023A0  50C9               	movf	4041,w,c	;volatile
  9053  0023A2  6E01               	movwf	i2___xxtofl@val,c
  9054  0023A4  6A02               	clrf	i2___xxtofl@val+1,c
  9055  0023A6  6A03               	clrf	i2___xxtofl@val+2,c
  9056  0023A8  6A04               	clrf	i2___xxtofl@val+3,c
  9057  0023AA  0E00               	movlw	0
  9058  0023AC  EC75  F014         	call	i2___xxtofl
  9059  0023B0  C001  F0F0         	movff	?i2___xxtofl,_datos
  9060  0023B4  C002  F0F1         	movff	?i2___xxtofl+1,_datos+1
  9061  0023B8  C003  F0F2         	movff	?i2___xxtofl+2,_datos+2
  9062  0023BC  C004  F0F3         	movff	?i2___xxtofl+3,_datos+3
  9063                           
  9064                           ;I2C_Slave.c: 86:            SSPCON1bits.CKP = 1;
  9065  0023C0  88C6               	bsf	4038,4,c	;volatile
  9066                           
  9067                           ;I2C_Slave.c: 87:            SSPM3 = 0;
  9068  0023C2  96C6               	bcf	4038,3,c	;volatile
  9069                           
  9070                           ;I2C_Slave.c: 88:         }
  9071  0023C4  D016               	goto	i2u578_40
  9072  0023C6                     i2l191:
  9073  0023C6  AAC7               	btfss	4039,5,c	;volatile
  9074  0023C8  A4C7               	btfss	4039,2,c	;volatile
  9075  0023CA  D013               	goto	i2u578_40
  9076                           
  9077                           ;I2C_Slave.c: 90:            z = SSPBUF;
  9078  0023CC  CFC9 F04C          	movff	4041,_z	;volatile
  9079  0023D0  6A4D               	clrf	_z+1,c
  9080                           
  9081                           ;I2C_Slave.c: 91:            BF = 0;
  9082  0023D2  90C7               	bcf	4039,0,c	;volatile
  9083                           
  9084                           ;I2C_Slave.c: 92:            SSPBUF = Promedio ;
  9085  0023D4  C0EC  F001         	movff	_Promedio,i2___fltol@f1
  9086  0023D8  C0ED  F002         	movff	_Promedio+1,i2___fltol@f1+1
  9087  0023DC  C0EE  F003         	movff	_Promedio+2,i2___fltol@f1+2
  9088  0023E0  C0EF  F004         	movff	_Promedio+3,i2___fltol@f1+3
  9089  0023E4  EC52  F018         	call	i2___fltol	;wreg free
  9090  0023E8  5001               	movf	?i2___fltol,w,c
  9091  0023EA  6EC9               	movwf	4041,c	;volatile
  9092                           
  9093                           ;I2C_Slave.c: 93:            SSPCON1bits.CKP = 1;
  9094  0023EC  88C6               	bsf	4038,4,c	;volatile
  9095  0023EE                     i2l197:
  9096  0023EE  B0C7               	btfsc	4039,0,c	;volatile
  9097  0023F0  D7FE               	goto	i2l197
  9098  0023F2                     i2u578_40:
  9099                           
  9100                           ;I2C_Slave.c: 97:        SSPIF = 0;
  9101  0023F2  969E               	bcf	3998,3,c	;volatile
  9102  0023F4                     i2l187:
  9103                           
  9104                           ;I2C_Slave.c: 99:     if(INTCONbits.TMR0IF==1){
  9105  0023F4  A4F2               	btfss	4082,2,c	;volatile
  9106  0023F6  D08E               	goto	i2l206
  9107                           
  9108                           ;I2C_Slave.c: 100:         if(Tp[0]>2.5){
  9109  0023F8  0E00               	movlw	0
  9110  0023FA  6E01               	movwf	i2___flge@ff1,c
  9111  0023FC  0E00               	movlw	0
  9112  0023FE  6E02               	movwf	i2___flge@ff1+1,c
  9113  002400  0E20               	movlw	32
  9114  002402  6E03               	movwf	i2___flge@ff1+2,c
  9115  002404  0E40               	movlw	64
  9116  002406  6E04               	movwf	i2___flge@ff1+3,c
  9117  002408  C100  F005         	movff	_Tp,i2___flge@ff2
  9118  00240C  C101  F006         	movff	_Tp+1,i2___flge@ff2+1
  9119  002410  C102  F007         	movff	_Tp+2,i2___flge@ff2+2
  9120  002414  C103  F008         	movff	_Tp+3,i2___flge@ff2+3
  9121  002418  EC27  F017         	call	i2___flge	;wreg free
  9122  00241C  B0D8               	btfsc	status,0,c
  9123  00241E  D00E               	goto	i2l4831
  9124                           
  9125                           ;I2C_Slave.c: 101:             LATCbits.LATC0=1;
  9126  002420  808B               	bsf	3979,0,c	;volatile
  9127                           
  9128                           ;I2C_Slave.c: 102:             _delay((unsigned long)((2)*(12000000/4000.0)));
  9129  002422  0E08               	movlw	8
  9130  002424  6E0F               	movwf	??_I2C_Slave_Read& (0+255),c
  9131  002426  0ECA               	movlw	202
  9132  002428                     i2u846_47:
  9133  002428  2EE8               	decfsz	wreg,f,c
  9134  00242A  D7FE               	bra	i2u846_47
  9135  00242C  2E0F               	decfsz	??_I2C_Slave_Read& (0+255),f,c
  9136  00242E  D7FC               	bra	i2u846_47
  9137                           
  9138                           ;I2C_Slave.c: 103:             LATCbits.LATC0=0;
  9139  002430  908B               	bcf	3979,0,c	;volatile
  9140                           
  9141                           ;I2C_Slave.c: 104:             TMR0=45;
  9142  002432  0E00               	movlw	0
  9143  002434  6ED7               	movwf	4055,c	;volatile
  9144  002436  0E2D               	movlw	45
  9145  002438  6ED6               	movwf	4054,c	;volatile
  9146                           
  9147                           ;I2C_Slave.c: 105:             INTCONbits.TMR0IF=0;
  9148  00243A  94F2               	bcf	4082,2,c	;volatile
  9149  00243C                     i2l4831:
  9150                           
  9151                           ;I2C_Slave.c: 107:         if(Tp[0]<2.5){
  9152  00243C  C100  F001         	movff	_Tp,i2___flge@ff1
  9153  002440  C101  F002         	movff	_Tp+1,i2___flge@ff1+1
  9154  002444  C102  F003         	movff	_Tp+2,i2___flge@ff1+2
  9155  002448  C103  F004         	movff	_Tp+3,i2___flge@ff1+3
  9156  00244C  0E00               	movlw	0
  9157  00244E  6E05               	movwf	i2___flge@ff2,c
  9158  002450  0E00               	movlw	0
  9159  002452  6E06               	movwf	i2___flge@ff2+1,c
  9160  002454  0E20               	movlw	32
  9161  002456  6E07               	movwf	i2___flge@ff2+2,c
  9162  002458  0E40               	movlw	64
  9163  00245A  6E08               	movwf	i2___flge@ff2+3,c
  9164  00245C  EC27  F017         	call	i2___flge	;wreg free
  9165  002460  B0D8               	btfsc	status,0,c
  9166  002462  D00F               	goto	i2l4843
  9167                           
  9168                           ;I2C_Slave.c: 108:             LATCbits.LATC0=1;
  9169  002464  808B               	bsf	3979,0,c	;volatile
  9170                           
  9171                           ;I2C_Slave.c: 109:             _delay((unsigned long)((1)*(12000000/4000.0)));
  9172  002466  0E04               	movlw	4
  9173  002468  6E0F               	movwf	??_I2C_Slave_Read& (0+255),c
  9174  00246A  0EE4               	movlw	228
  9175  00246C                     i2u847_47:
  9176  00246C  2EE8               	decfsz	wreg,f,c
  9177  00246E  D7FE               	bra	i2u847_47
  9178  002470  2E0F               	decfsz	??_I2C_Slave_Read& (0+255),f,c
  9179  002472  D7FC               	bra	i2u847_47
  9180  002474  D000               	nop2	
  9181                           
  9182                           ;I2C_Slave.c: 110:             LATCbits.LATC0=0;
  9183  002476  908B               	bcf	3979,0,c	;volatile
  9184                           
  9185                           ;I2C_Slave.c: 111:             TMR0=33;
  9186  002478  0E00               	movlw	0
  9187  00247A  6ED7               	movwf	4055,c	;volatile
  9188  00247C  0E21               	movlw	33
  9189  00247E  6ED6               	movwf	4054,c	;volatile
  9190                           
  9191                           ;I2C_Slave.c: 112:             INTCONbits.TMR0IF=0;
  9192  002480  94F2               	bcf	4082,2,c	;volatile
  9193  002482                     i2l4843:
  9194                           
  9195                           ;I2C_Slave.c: 114:         if(Tp[1]>2.5){
  9196  002482  0E00               	movlw	0
  9197  002484  6E01               	movwf	i2___flge@ff1,c
  9198  002486  0E00               	movlw	0
  9199  002488  6E02               	movwf	i2___flge@ff1+1,c
  9200  00248A  0E20               	movlw	32
  9201  00248C  6E03               	movwf	i2___flge@ff1+2,c
  9202  00248E  0E40               	movlw	64
  9203  002490  6E04               	movwf	i2___flge@ff1+3,c
  9204  002492  C104  F005         	movff	_Tp+4,i2___flge@ff2
  9205  002496  C105  F006         	movff	_Tp+5,i2___flge@ff2+1
  9206  00249A  C106  F007         	movff	_Tp+6,i2___flge@ff2+2
  9207  00249E  C107  F008         	movff	_Tp+7,i2___flge@ff2+3
  9208  0024A2  EC27  F017         	call	i2___flge	;wreg free
  9209  0024A6  B0D8               	btfsc	status,0,c
  9210  0024A8  D00F               	goto	i2l4855
  9211                           
  9212                           ;I2C_Slave.c: 115:             LATCbits.LATC1=1;
  9213  0024AA  828B               	bsf	3979,1,c	;volatile
  9214                           
  9215                           ;I2C_Slave.c: 116:             _delay((unsigned long)((1)*(12000000/4000.0)));
  9216  0024AC  0E04               	movlw	4
  9217  0024AE  6E0F               	movwf	??_I2C_Slave_Read& (0+255),c
  9218  0024B0  0EE4               	movlw	228
  9219  0024B2                     i2u848_47:
  9220  0024B2  2EE8               	decfsz	wreg,f,c
  9221  0024B4  D7FE               	bra	i2u848_47
  9222  0024B6  2E0F               	decfsz	??_I2C_Slave_Read& (0+255),f,c
  9223  0024B8  D7FC               	bra	i2u848_47
  9224  0024BA  D000               	nop2	
  9225                           
  9226                           ;I2C_Slave.c: 117:             LATCbits.LATC1=0;
  9227  0024BC  928B               	bcf	3979,1,c	;volatile
  9228                           
  9229                           ;I2C_Slave.c: 118:             TMR0=33;
  9230  0024BE  0E00               	movlw	0
  9231  0024C0  6ED7               	movwf	4055,c	;volatile
  9232  0024C2  0E21               	movlw	33
  9233  0024C4  6ED6               	movwf	4054,c	;volatile
  9234                           
  9235                           ;I2C_Slave.c: 119:             INTCONbits.TMR0IF=0;
  9236  0024C6  94F2               	bcf	4082,2,c	;volatile
  9237  0024C8                     i2l4855:
  9238  0024C8  C104  F001         	movff	_Tp+4,i2___flge@ff1
  9239  0024CC  C105  F002         	movff	_Tp+5,i2___flge@ff1+1
  9240  0024D0  C106  F003         	movff	_Tp+6,i2___flge@ff1+2
  9241  0024D4  C107  F004         	movff	_Tp+7,i2___flge@ff1+3
  9242  0024D8  0E00               	movlw	0
  9243  0024DA  6E05               	movwf	i2___flge@ff2,c
  9244  0024DC  0E00               	movlw	0
  9245  0024DE  6E06               	movwf	i2___flge@ff2+1,c
  9246  0024E0  0E20               	movlw	32
  9247  0024E2  6E07               	movwf	i2___flge@ff2+2,c
  9248  0024E4  0E40               	movlw	64
  9249  0024E6  6E08               	movwf	i2___flge@ff2+3,c
  9250  0024E8  EC27  F017         	call	i2___flge	;wreg free
  9251  0024EC  B0D8               	btfsc	status,0,c
  9252  0024EE  D00D               	goto	i2l4867
  9253                           
  9254                           ;I2C_Slave.c: 121:             LATCbits.LATC1=1;
  9255  0024F0  828B               	bsf	3979,1,c	;volatile
  9256                           
  9257                           ;I2C_Slave.c: 122:             _delay((unsigned long)((2)*(12000000/4000.0)));
  9258  0024F2  0E08               	movlw	8
  9259  0024F4  6E0F               	movwf	??_I2C_Slave_Read& (0+255),c
  9260  0024F6  0ECA               	movlw	202
  9261  0024F8                     i2u849_47:
  9262  0024F8  2EE8               	decfsz	wreg,f,c
  9263  0024FA  D7FE               	bra	i2u849_47
  9264  0024FC  2E0F               	decfsz	??_I2C_Slave_Read& (0+255),f,c
  9265  0024FE  D7FC               	bra	i2u849_47
  9266                           
  9267                           ;I2C_Slave.c: 123:             LATCbits.LATC1=0;
  9268  002500  928B               	bcf	3979,1,c	;volatile
  9269                           
  9270                           ;I2C_Slave.c: 124:             TMR0=45;
  9271  002502  0E00               	movlw	0
  9272  002504  6ED7               	movwf	4055,c	;volatile
  9273  002506  0E2D               	movlw	45
  9274  002508  D003               	goto	L22
  9275  00250A                     i2l4867:
  9276                           
  9277                           ;I2C_Slave.c: 127:             TMR0=21;
  9278  00250A  0E00               	movlw	0
  9279  00250C  6ED7               	movwf	4055,c	;volatile
  9280  00250E  0E15               	movlw	21
  9281  002510                     L22:
  9282  002510  6ED6               	movwf	4054,c	;volatile
  9283                           
  9284                           ;I2C_Slave.c: 128:             INTCONbits.TMR0IF=0;
  9285  002512  94F2               	bcf	4082,2,c	;volatile
  9286  002514                     i2l206:
  9287  002514  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9288  002516  0011               	retfie		f
  9289  002518                     __end_of_I2C_Slave_Read:
  9290                           	opt callstack 0
  9291                           
  9292 ;; *************** function i2___xxtofl *****************
  9293 ;; Defined at:
  9294 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  sign            1    wreg     unsigned char 
  9297 ;;  val             4    0[COMRAM] long 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  sign            1    8[COMRAM] unsigned char 
  9300 ;;  __xxtofl        4   10[COMRAM] unsigned long 
  9301 ;;  __xxtofl        1    9[COMRAM] unsigned char 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  4    0[COMRAM] unsigned char 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2, status,0
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9311 ;;      Params:         4       0       0       0       0       0       0       0       0
  9312 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9313 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9314 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9315 ;;Total ram usage:       14 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_I2C_Slave_Read
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text41
  9325  0028EA                     __ptext41:
  9326                           	opt callstack 0
  9327  0028EA                     i2___xxtofl:
  9328                           	opt callstack 21
  9329                           
  9330                           ;incstack = 0
  9331                           ;i2___xxtofl@sign stored from wreg
  9332  0028EA  6E09               	movwf	i2___xxtofl@sign,c
  9333  0028EC  5009               	movf	i2___xxtofl@sign,w,c
  9334  0028EE  A4D8               	btfss	status,2,c
  9335  0028F0  AE04               	btfss	i2___xxtofl@val+3,7,c
  9336  0028F2  D01A               	goto	i2l1032
  9337  0028F4  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
  9338  0028F8  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
  9339  0028FC  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
  9340  002900  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
  9341  002904  1E05               	comf	??i2___xxtofl,f,c
  9342  002906  1E06               	comf	??i2___xxtofl+1,f,c
  9343  002908  1E07               	comf	??i2___xxtofl+2,f,c
  9344  00290A  1E08               	comf	??i2___xxtofl+3,f,c
  9345  00290C  2A05               	incf	??i2___xxtofl,f,c
  9346  00290E  0E00               	movlw	0
  9347  002910  2206               	addwfc	??i2___xxtofl+1,f,c
  9348  002912  2207               	addwfc	??i2___xxtofl+2,f,c
  9349  002914  2208               	addwfc	??i2___xxtofl+3,f,c
  9350  002916  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
  9351  00291A  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
  9352  00291E  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
  9353  002922  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
  9354  002926  D008               	goto	i2l4675
  9355  002928                     i2l1032:
  9356  002928  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
  9357  00292C  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
  9358  002930  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
  9359  002934  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
  9360  002938                     i2l4675:
  9361  002938  5001               	movf	i2___xxtofl@val,w,c
  9362  00293A  1002               	iorwf	i2___xxtofl@val+1,w,c
  9363  00293C  1003               	iorwf	i2___xxtofl@val+2,w,c
  9364  00293E  1004               	iorwf	i2___xxtofl@val+3,w,c
  9365  002940  A4D8               	btfss	status,2,c
  9366  002942  D009               	goto	i2l4681
  9367  002944  0E00               	movlw	0
  9368  002946  6E01               	movwf	?i2___xxtofl,c
  9369  002948  0E00               	movlw	0
  9370  00294A  6E02               	movwf	?i2___xxtofl+1,c
  9371  00294C  0E00               	movlw	0
  9372  00294E  6E03               	movwf	?i2___xxtofl+2,c
  9373  002950  0E00               	movlw	0
  9374  002952  6E04               	movwf	?i2___xxtofl+3,c
  9375  002954  0012               	return	
  9376  002956                     i2l4681:
  9377  002956  0E96               	movlw	150
  9378  002958  6E0A               	movwf	i2___xxtofl@exp,c
  9379  00295A  D006               	goto	i2l4685
  9380  00295C                     i2l4683:
  9381  00295C  2A0A               	incf	i2___xxtofl@exp,f,c
  9382  00295E  90D8               	bcf	status,0,c
  9383  002960  320E               	rrcf	i2___xxtofl@arg+3,f,c
  9384  002962  320D               	rrcf	i2___xxtofl@arg+2,f,c
  9385  002964  320C               	rrcf	i2___xxtofl@arg+1,f,c
  9386  002966  320B               	rrcf	i2___xxtofl@arg,f,c
  9387  002968                     i2l4685:
  9388  002968  0E00               	movlw	0
  9389  00296A  140B               	andwf	i2___xxtofl@arg,w,c
  9390  00296C  6E05               	movwf	??i2___xxtofl& (0+255),c
  9391  00296E  0E00               	movlw	0
  9392  002970  140C               	andwf	i2___xxtofl@arg+1,w,c
  9393  002972  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
  9394  002974  0E00               	movlw	0
  9395  002976  140D               	andwf	i2___xxtofl@arg+2,w,c
  9396  002978  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
  9397  00297A  0EFE               	movlw	254
  9398  00297C  140E               	andwf	i2___xxtofl@arg+3,w,c
  9399  00297E  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
  9400  002980  5005               	movf	??i2___xxtofl,w,c
  9401  002982  1006               	iorwf	??i2___xxtofl+1,w,c
  9402  002984  1007               	iorwf	??i2___xxtofl+2,w,c
  9403  002986  1008               	iorwf	??i2___xxtofl+3,w,c
  9404  002988  B4D8               	btfsc	status,2,c
  9405  00298A  D00D               	goto	i2l1039
  9406  00298C  D7E7               	goto	i2l4683
  9407  00298E                     i2l4687:
  9408  00298E  2A0A               	incf	i2___xxtofl@exp,f,c
  9409  002990  0E01               	movlw	1
  9410  002992  260B               	addwf	i2___xxtofl@arg,f,c
  9411  002994  0E00               	movlw	0
  9412  002996  220C               	addwfc	i2___xxtofl@arg+1,f,c
  9413  002998  220D               	addwfc	i2___xxtofl@arg+2,f,c
  9414  00299A  220E               	addwfc	i2___xxtofl@arg+3,f,c
  9415  00299C  90D8               	bcf	status,0,c
  9416  00299E  320E               	rrcf	i2___xxtofl@arg+3,f,c
  9417  0029A0  320D               	rrcf	i2___xxtofl@arg+2,f,c
  9418  0029A2  320C               	rrcf	i2___xxtofl@arg+1,f,c
  9419  0029A4  320B               	rrcf	i2___xxtofl@arg,f,c
  9420  0029A6                     i2l1039:
  9421  0029A6  0E00               	movlw	0
  9422  0029A8  140B               	andwf	i2___xxtofl@arg,w,c
  9423  0029AA  6E05               	movwf	??i2___xxtofl& (0+255),c
  9424  0029AC  0E00               	movlw	0
  9425  0029AE  140C               	andwf	i2___xxtofl@arg+1,w,c
  9426  0029B0  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
  9427  0029B2  0E00               	movlw	0
  9428  0029B4  140D               	andwf	i2___xxtofl@arg+2,w,c
  9429  0029B6  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
  9430  0029B8  0EFF               	movlw	255
  9431  0029BA  140E               	andwf	i2___xxtofl@arg+3,w,c
  9432  0029BC  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
  9433  0029BE  5005               	movf	??i2___xxtofl,w,c
  9434  0029C0  1006               	iorwf	??i2___xxtofl+1,w,c
  9435  0029C2  1007               	iorwf	??i2___xxtofl+2,w,c
  9436  0029C4  1008               	iorwf	??i2___xxtofl+3,w,c
  9437  0029C6  B4D8               	btfsc	status,2,c
  9438  0029C8  D007               	goto	i2l4695
  9439  0029CA  D7E1               	goto	i2l4687
  9440  0029CC                     i2l4693:
  9441  0029CC  060A               	decf	i2___xxtofl@exp,f,c
  9442  0029CE  90D8               	bcf	status,0,c
  9443  0029D0  360B               	rlcf	i2___xxtofl@arg,f,c
  9444  0029D2  360C               	rlcf	i2___xxtofl@arg+1,f,c
  9445  0029D4  360D               	rlcf	i2___xxtofl@arg+2,f,c
  9446  0029D6  360E               	rlcf	i2___xxtofl@arg+3,f,c
  9447  0029D8                     i2l4695:
  9448  0029D8  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
  9449  0029DA  D003               	goto	i2u558_40
  9450  0029DC  0E02               	movlw	2
  9451  0029DE  600A               	cpfslt	i2___xxtofl@exp,c
  9452  0029E0  D7F5               	goto	i2l4693
  9453  0029E2                     i2u558_40:
  9454  0029E2  A00A               	btfss	i2___xxtofl@exp,0,c
  9455  0029E4  9E0D               	bcf	i2___xxtofl@arg+2,7,c
  9456  0029E6  90D8               	bcf	status,0,c
  9457  0029E8  320A               	rrcf	i2___xxtofl@exp,f,c
  9458  0029EA  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
  9459  0029EE  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
  9460  0029F0  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
  9461  0029F2  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
  9462  0029F4  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
  9463  0029F8  6A07               	clrf	??i2___xxtofl+2,c
  9464  0029FA  6A06               	clrf	??i2___xxtofl+1,c
  9465  0029FC  6A05               	clrf	??i2___xxtofl,c
  9466  0029FE  5005               	movf	??i2___xxtofl,w,c
  9467  002A00  120B               	iorwf	i2___xxtofl@arg,f,c
  9468  002A02  5006               	movf	??i2___xxtofl+1,w,c
  9469  002A04  120C               	iorwf	i2___xxtofl@arg+1,f,c
  9470  002A06  5007               	movf	??i2___xxtofl+2,w,c
  9471  002A08  120D               	iorwf	i2___xxtofl@arg+2,f,c
  9472  002A0A  5008               	movf	??i2___xxtofl+3,w,c
  9473  002A0C  120E               	iorwf	i2___xxtofl@arg+3,f,c
  9474  002A0E  5009               	movf	i2___xxtofl@sign,w,c
  9475  002A10  A4D8               	btfss	status,2,c
  9476  002A12  AE04               	btfss	i2___xxtofl@val+3,7,c
  9477  002A14  D001               	goto	i2l4711
  9478  002A16  8E0E               	bsf	i2___xxtofl@arg+3,7,c
  9479  002A18                     i2l4711:
  9480  002A18  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
  9481  002A1C  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
  9482  002A20  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
  9483  002A24  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
  9484  002A28  0012               	return		;funcret
  9485  002A2A                     __end_ofi2___xxtofl:
  9486                           	opt callstack 0
  9487                           
  9488 ;; *************** function i2___fltol *****************
  9489 ;; Defined at:
  9490 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  f1              4    0[COMRAM] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  __fltol         1    9[COMRAM] unsigned char 
  9495 ;;  __fltol         1    8[COMRAM] unsigned char 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  4    0[COMRAM] long 
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9505 ;;      Params:         4       0       0       0       0       0       0       0       0
  9506 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9508 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9509 ;;Total ram usage:       10 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_I2C_Slave_Read
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text42
  9519  0030A4                     __ptext42:
  9520                           	opt callstack 0
  9521  0030A4                     i2___fltol:
  9522                           	opt callstack 21
  9523                           
  9524                           ;incstack = 0
  9525  0030A4  3403               	rlcf	i2___fltol@f1+2,w,c
  9526  0030A6  3404               	rlcf	i2___fltol@f1+3,w,c
  9527  0030A8  6E0A               	movwf	i2___fltol@exp1,c
  9528  0030AA  500A               	movf	i2___fltol@exp1,w,c
  9529  0030AC  A4D8               	btfss	status,2,c
  9530  0030AE  D009               	goto	i2l4631
  9531  0030B0                     i2u545_40:
  9532  0030B0  0E00               	movlw	0
  9533  0030B2  6E01               	movwf	?i2___fltol,c
  9534  0030B4  0E00               	movlw	0
  9535  0030B6  6E02               	movwf	?i2___fltol+1,c
  9536  0030B8  0E00               	movlw	0
  9537  0030BA  6E03               	movwf	?i2___fltol+2,c
  9538  0030BC  0E00               	movlw	0
  9539  0030BE  6E04               	movwf	?i2___fltol+3,c
  9540  0030C0  0012               	return	
  9541  0030C2                     i2l4631:
  9542  0030C2  C001  F005         	movff	i2___fltol@f1,??i2___fltol
  9543  0030C6  C002  F006         	movff	i2___fltol@f1+1,??i2___fltol+1
  9544  0030CA  C003  F007         	movff	i2___fltol@f1+2,??i2___fltol+2
  9545  0030CE  C004  F008         	movff	i2___fltol@f1+3,??i2___fltol+3
  9546  0030D2  0E20               	movlw	32
  9547  0030D4  D005               	goto	i2u546_40
  9548  0030D6                     i2u546_45:
  9549  0030D6  90D8               	bcf	status,0,c
  9550  0030D8  3208               	rrcf	??i2___fltol+3,f,c
  9551  0030DA  3207               	rrcf	??i2___fltol+2,f,c
  9552  0030DC  3206               	rrcf	??i2___fltol+1,f,c
  9553  0030DE  3205               	rrcf	??i2___fltol,f,c
  9554  0030E0                     i2u546_40:
  9555  0030E0  2EE8               	decfsz	wreg,f,c
  9556  0030E2  D7F9               	goto	i2u546_45
  9557  0030E4  5005               	movf	??i2___fltol,w,c
  9558  0030E6  6E09               	movwf	i2___fltol@sign1,c
  9559  0030E8  8E03               	bsf	i2___fltol@f1+2,7,c
  9560  0030EA  0EFF               	movlw	255
  9561  0030EC  1601               	andwf	i2___fltol@f1,f,c
  9562  0030EE  0EFF               	movlw	255
  9563  0030F0  1602               	andwf	i2___fltol@f1+1,f,c
  9564  0030F2  0EFF               	movlw	255
  9565  0030F4  1603               	andwf	i2___fltol@f1+2,f,c
  9566  0030F6  0E00               	movlw	0
  9567  0030F8  1604               	andwf	i2___fltol@f1+3,f,c
  9568  0030FA  0E96               	movlw	150
  9569  0030FC  5E0A               	subwf	i2___fltol@exp1,f,c
  9570  0030FE  AE0A               	btfss	i2___fltol@exp1,7,c
  9571  003100  D00D               	goto	i2l4651
  9572  003102  500A               	movf	i2___fltol@exp1,w,c
  9573  003104  0A80               	xorlw	128
  9574  003106  0F97               	addlw	151
  9575  003108  A0D8               	btfss	status,0,c
  9576  00310A  D7D2               	goto	i2u545_40
  9577  00310C                     i2l4647:
  9578  00310C  90D8               	bcf	status,0,c
  9579  00310E  3204               	rrcf	i2___fltol@f1+3,f,c
  9580  003110  3203               	rrcf	i2___fltol@f1+2,f,c
  9581  003112  3202               	rrcf	i2___fltol@f1+1,f,c
  9582  003114  3201               	rrcf	i2___fltol@f1,f,c
  9583  003116  3E0A               	incfsz	i2___fltol@exp1,f,c
  9584  003118  D7F9               	goto	i2l4647
  9585  00311A  D00D               	goto	i2u550_40
  9586  00311C                     i2l4651:
  9587  00311C  0E1F               	movlw	31
  9588  00311E  640A               	cpfsgt	i2___fltol@exp1,c
  9589  003120  D007               	goto	i2l4659
  9590  003122  D7C6               	goto	i2u545_40
  9591  003124                     i2l4657:
  9592  003124  90D8               	bcf	status,0,c
  9593  003126  3601               	rlcf	i2___fltol@f1,f,c
  9594  003128  3602               	rlcf	i2___fltol@f1+1,f,c
  9595  00312A  3603               	rlcf	i2___fltol@f1+2,f,c
  9596  00312C  3604               	rlcf	i2___fltol@f1+3,f,c
  9597  00312E  060A               	decf	i2___fltol@exp1,f,c
  9598  003130                     i2l4659:
  9599  003130  500A               	movf	i2___fltol@exp1,w,c
  9600  003132  A4D8               	btfss	status,2,c
  9601  003134  D7F7               	goto	i2l4657
  9602  003136                     i2u550_40:
  9603  003136  5009               	movf	i2___fltol@sign1,w,c
  9604  003138  B4D8               	btfsc	status,2,c
  9605  00313A  D008               	goto	i2l4665
  9606  00313C  1E04               	comf	i2___fltol@f1+3,f,c
  9607  00313E  1E03               	comf	i2___fltol@f1+2,f,c
  9608  003140  1E02               	comf	i2___fltol@f1+1,f,c
  9609  003142  6C01               	negf	i2___fltol@f1,c
  9610  003144  0E00               	movlw	0
  9611  003146  2202               	addwfc	i2___fltol@f1+1,f,c
  9612  003148  2203               	addwfc	i2___fltol@f1+2,f,c
  9613  00314A  2204               	addwfc	i2___fltol@f1+3,f,c
  9614  00314C                     i2l4665:
  9615  00314C  C001  F001         	movff	i2___fltol@f1,?i2___fltol
  9616  003150  C002  F002         	movff	i2___fltol@f1+1,?i2___fltol+1
  9617  003154  C003  F003         	movff	i2___fltol@f1+2,?i2___fltol+2
  9618  003158  C004  F004         	movff	i2___fltol@f1+3,?i2___fltol+3
  9619  00315C  0012               	return		;funcret
  9620  00315E                     __end_ofi2___fltol:
  9621                           	opt callstack 0
  9622                           
  9623 ;; *************** function i2___flge *****************
  9624 ;; Defined at:
  9625 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  ff1             4    0[COMRAM] long 
  9628 ;;  ff2             4    4[COMRAM] long 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;		None               void
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9640 ;;      Params:         8       0       0       0       0       0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9642 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9643 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9644 ;;Total ram usage:       12 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_I2C_Slave_Read
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text43
  9654  002E4E                     __ptext43:
  9655                           	opt callstack 0
  9656  002E4E                     i2___flge:
  9657                           	opt callstack 21
  9658                           
  9659                           ;incstack = 0
  9660  002E4E  0E00               	movlw	0
  9661  002E50  1401               	andwf	i2___flge@ff1,w,c
  9662  002E52  6E09               	movwf	??i2___flge& (0+255),c
  9663  002E54  0E00               	movlw	0
  9664  002E56  1402               	andwf	i2___flge@ff1+1,w,c
  9665  002E58  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  9666  002E5A  0E80               	movlw	128
  9667  002E5C  1403               	andwf	i2___flge@ff1+2,w,c
  9668  002E5E  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  9669  002E60  0E7F               	movlw	127
  9670  002E62  1404               	andwf	i2___flge@ff1+3,w,c
  9671  002E64  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  9672  002E66  5009               	movf	??i2___flge,w,c
  9673  002E68  100A               	iorwf	??i2___flge+1,w,c
  9674  002E6A  100B               	iorwf	??i2___flge+2,w,c
  9675  002E6C  100C               	iorwf	??i2___flge+3,w,c
  9676  002E6E  A4D8               	btfss	status,2,c
  9677  002E70  D008               	goto	i2l4607
  9678  002E72  0E00               	movlw	0
  9679  002E74  6E01               	movwf	i2___flge@ff1,c
  9680  002E76  0E00               	movlw	0
  9681  002E78  6E02               	movwf	i2___flge@ff1+1,c
  9682  002E7A  0E00               	movlw	0
  9683  002E7C  6E03               	movwf	i2___flge@ff1+2,c
  9684  002E7E  0E00               	movlw	0
  9685  002E80  6E04               	movwf	i2___flge@ff1+3,c
  9686  002E82                     i2l4607:
  9687  002E82  0E00               	movlw	0
  9688  002E84  1405               	andwf	i2___flge@ff2,w,c
  9689  002E86  6E09               	movwf	??i2___flge& (0+255),c
  9690  002E88  0E00               	movlw	0
  9691  002E8A  1406               	andwf	i2___flge@ff2+1,w,c
  9692  002E8C  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  9693  002E8E  0E80               	movlw	128
  9694  002E90  1407               	andwf	i2___flge@ff2+2,w,c
  9695  002E92  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  9696  002E94  0E7F               	movlw	127
  9697  002E96  1408               	andwf	i2___flge@ff2+3,w,c
  9698  002E98  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  9699  002E9A  5009               	movf	??i2___flge,w,c
  9700  002E9C  100A               	iorwf	??i2___flge+1,w,c
  9701  002E9E  100B               	iorwf	??i2___flge+2,w,c
  9702  002EA0  100C               	iorwf	??i2___flge+3,w,c
  9703  002EA2  A4D8               	btfss	status,2,c
  9704  002EA4  D008               	goto	i2l4611
  9705  002EA6  0E00               	movlw	0
  9706  002EA8  6E05               	movwf	i2___flge@ff2,c
  9707  002EAA  0E00               	movlw	0
  9708  002EAC  6E06               	movwf	i2___flge@ff2+1,c
  9709  002EAE  0E00               	movlw	0
  9710  002EB0  6E07               	movwf	i2___flge@ff2+2,c
  9711  002EB2  0E00               	movlw	0
  9712  002EB4  6E08               	movwf	i2___flge@ff2+3,c
  9713  002EB6                     i2l4611:
  9714  002EB6  AE04               	btfss	i2___flge@ff1+3,7,c
  9715  002EB8  D009               	goto	i2l4615
  9716  002EBA  6C01               	negf	i2___flge@ff1,c
  9717  002EBC  1E02               	comf	i2___flge@ff1+1,f,c
  9718  002EBE  B0D8               	btfsc	status,0,c
  9719  002EC0  2A02               	incf	i2___flge@ff1+1,f,c
  9720  002EC2  1E03               	comf	i2___flge@ff1+2,f,c
  9721  002EC4  B0D8               	btfsc	status,0,c
  9722  002EC6  2A03               	incf	i2___flge@ff1+2,f,c
  9723  002EC8  0E80               	movlw	128
  9724  002ECA  5604               	subfwb	i2___flge@ff1+3,f,c
  9725  002ECC                     i2l4615:
  9726  002ECC  AE08               	btfss	i2___flge@ff2+3,7,c
  9727  002ECE  D009               	goto	i2l642
  9728  002ED0  6C05               	negf	i2___flge@ff2,c
  9729  002ED2  1E06               	comf	i2___flge@ff2+1,f,c
  9730  002ED4  B0D8               	btfsc	status,0,c
  9731  002ED6  2A06               	incf	i2___flge@ff2+1,f,c
  9732  002ED8  1E07               	comf	i2___flge@ff2+2,f,c
  9733  002EDA  B0D8               	btfsc	status,0,c
  9734  002EDC  2A07               	incf	i2___flge@ff2+2,f,c
  9735  002EDE  0E80               	movlw	128
  9736  002EE0  5608               	subfwb	i2___flge@ff2+3,f,c
  9737  002EE2                     i2l642:
  9738  002EE2  0E00               	movlw	0
  9739  002EE4  1A01               	xorwf	i2___flge@ff1,f,c
  9740  002EE6  0E00               	movlw	0
  9741  002EE8  1A02               	xorwf	i2___flge@ff1+1,f,c
  9742  002EEA  0E00               	movlw	0
  9743  002EEC  1A03               	xorwf	i2___flge@ff1+2,f,c
  9744  002EEE  0E80               	movlw	128
  9745  002EF0  1A04               	xorwf	i2___flge@ff1+3,f,c
  9746  002EF2  0E00               	movlw	0
  9747  002EF4  1A05               	xorwf	i2___flge@ff2,f,c
  9748  002EF6  0E00               	movlw	0
  9749  002EF8  1A06               	xorwf	i2___flge@ff2+1,f,c
  9750  002EFA  0E00               	movlw	0
  9751  002EFC  1A07               	xorwf	i2___flge@ff2+2,f,c
  9752  002EFE  0E80               	movlw	128
  9753  002F00  1A08               	xorwf	i2___flge@ff2+3,f,c
  9754  002F02  5005               	movf	i2___flge@ff2,w,c
  9755  002F04  5C01               	subwf	i2___flge@ff1,w,c
  9756  002F06  5006               	movf	i2___flge@ff2+1,w,c
  9757  002F08  5802               	subwfb	i2___flge@ff1+1,w,c
  9758  002F0A  5007               	movf	i2___flge@ff2+2,w,c
  9759  002F0C  5803               	subwfb	i2___flge@ff1+2,w,c
  9760  002F0E  5008               	movf	i2___flge@ff2+3,w,c
  9761  002F10  5804               	subwfb	i2___flge@ff1+3,w,c
  9762  002F12  B0D8               	btfsc	status,0,c
  9763  002F14  D002               	goto	i2l4621
  9764  002F16  90D8               	bcf	status,0,c
  9765  002F18  0012               	return	
  9766  002F1A                     i2l4621:
  9767  002F1A  80D8               	bsf	status,0,c
  9768  002F1C  0012               	return		;funcret
  9769  002F1E                     __end_ofi2___flge:
  9770                           	opt callstack 0
  9771                           
  9772                           	psect	rparam
  9773  0000                     
  9774                           	psect	temp
  9775  000050                     btemp:
  9776                           	opt callstack 0
  9777  000050                     	ds	1
  9778  0000                     int$flags	set	btemp
  9779  0000                     wtemp8	set	btemp+1
  9780  0000                     ttemp5	set	btemp+1
  9781  0000                     ttemp6	set	btemp+4
  9782  0000                     ttemp7	set	btemp+8
  9783                           tosu	equ	0xFFF
  9784                           tosh	equ	0xFFE
  9785                           tosl	equ	0xFFD
  9786                           stkptr	equ	0xFFC
  9787                           pclatu	equ	0xFFB
  9788                           pclath	equ	0xFFA
  9789                           pcl	equ	0xFF9
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           indf0	equ	0xFEF
  9797                           postinc0	equ	0xFEE
  9798                           postdec0	equ	0xFED
  9799                           preinc0	equ	0xFEC
  9800                           plusw0	equ	0xFEB
  9801                           fsr0h	equ	0xFEA
  9802                           fsr0l	equ	0xFE9
  9803                           wreg	equ	0xFE8
  9804                           indf1	equ	0xFE7
  9805                           postinc1	equ	0xFE6
  9806                           postdec1	equ	0xFE5
  9807                           preinc1	equ	0xFE4
  9808                           plusw1	equ	0xFE3
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           bsr	equ	0xFE0
  9812                           indf2	equ	0xFDF
  9813                           postinc2	equ	0xFDE
  9814                           postdec2	equ	0xFDD
  9815                           preinc2	equ	0xFDC
  9816                           plusw2	equ	0xFDB
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         259
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      79
    BANK0           160    136     156
    BANK1           256      0     227
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1599_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Prom(BANK1[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[13]), STR_3(CODE[11]), STR_2(CODE[13]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___fldiv
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _ADC_Channel->___fldiv
    ___fldiv->___flmul

Critical Paths under _I2C_Slave_Read in COMRAM

    _I2C_Slave_Read->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _I2C_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _I2C_Slave_Read in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _I2C_Slave_Read in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _I2C_Slave_Read in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _I2C_Slave_Read in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _I2C_Slave_Read in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _I2C_Slave_Read in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _I2C_Slave_Read in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   57874
                                            134 BANK0      2     2      0
                        _ADC_Channel
                           _ADC_Init
                     _I2C_Slave_Init
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                         _Servo_init
                            ___fladd
                            ___fldiv
                             ___fleq
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   39362
                                            116 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38858
                                             65 COMRAM     2     2      0
                                            110 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   38331
                                             88 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   31522
                                             20 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             21 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     572
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             40 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             15 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             40 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    2030
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             22 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             15 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Servo_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     685
                                             18 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3    1141
                                             18 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             6     4      2     143
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Channel                                          8     4      4    7220
                                              0 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     448
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             15 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             40 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _I2C_Slave_Read                                       1     1      0     993
                                             14 COMRAM     1     1      0
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (10) i2___xxtofl                                         14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (10) i2___fltol                                          10     6      4     255
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     390
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Channel
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _ADC_Init
   _I2C_Slave_Init
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Servo_init
   ___fladd
   ___fldiv
     ___flmul (ARG)
   ___fleq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _I2C_Slave_Read (ROOT)
   i2___flge
   i2___fltol
   i2___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E3       7       88.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CE      20        0.0%
DATA                 0      0     1CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 00:18:40 2019

           ___fldiv@aexp 0041             ___fldiv@bexp 0040                        _i 004A  
                      _u 00FA                        _z 004C             ___fldiv@sign 0039  
            _SSPSTATbits 000FC7                       _BF 007E38                       l73 2CE8  
           ___awdiv@sign 0015                       _Tp 0100      ___wmul@multiplicand 0012  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l128 2664  
                    l314 0E6A                      l247 32CE                      _ADC 0130  
                    l288 0B88                      l642 2E12                      l922 1E3A  
                    l906 1D68                      l931 1EA0                      l907 1D46  
                    l932 1E9C                      l961 20A4                      l972 2112  
                    l973 210E                      l991 1954                      _GIE 007F97  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _pad 32A0             ___awmod@sign 0015               i2___xxtofl 28EA  
                    wreg 000FE8             __CFG_FOSC$HS 000000     __size_of_ADC_Channel 0152  
           ___flmul@aexp 001D             ___flmul@bexp 0022             ___flmul@sign 001C  
           ___flmul@temp 0027             ___flmul@prod 0023             __CFG_LVP$OFF 000000  
           ___fltol@exp1 0019             __CFG_WDT$OFF 000000                     l1000 1B6C  
                   l1001 1B68                     l1008 1BF2                     l1032 27E8  
                   l1039 2866                     l1087 27A0                     l1099 22D4  
                   l1179 374A                     l5003 1C56                     l5101 1DAE  
                   l5103 1DB2                     l5111 1DC4                     l5023 1C9A  
                   l5121 1E2A                     l6001 1100                     l5035 1CBE  
                   l5027 1C9E                     l5203 32F0                     l6011 112C  
                   l5301 1F62                     l4501 35AE                     l4511 35EC  
                   l4503 35B4                     l5223 2FA0                     l5207 331C  
                   l5321 1FA2                     l4409 28D8                     l6041 267C  
                   l5129 1E5E                     l5145 1E7E                     l5065 1CFA  
                   l6121 12A8                     l5403 217A                     l6211 2554  
                   l4515 35FE                     l4507 35BC                     l6051 26C6  
                   l6043 2680                     l5139 1E74                     l5219 2F96  
                   l5235 36C6                     l6027 118C                     l6123 12B6  
                   l5413 21B0                     l5317 1F9E                     l4381 281C  
                   l4373 27F8                     l6205 253C                     l4509 35E4  
                   l6061 26E4                     l5173 1F0C                     l5165 1EE6  
                   l5093 1D8C                     l5077 1D54                     l5229 2FE0  
                   l5253 2234                     ?_pad 0020                     l5415 21B2  
                   l5407 21A4                     l5343 2004                     l5335 1FEC  
                   l5511 1B32                     l4391 288C                     l4383 2828  
                   l4551 34F8                     l4471 3448                     l6063 270C  
                   l5079 1D58                     l5271 2362                     l5263 22F6  
                   l6151 1416                     l6119 128A                     l5361 207C  
                   l5353 2054                     l5329 1FD6                     l5505 1B14  
                   l4393 2898                     l4385 284E                     l4545 34EC  
                   l4473 344E                     l4481 3462                     l6057 26D6  
                   l5177 1F14                     l5193 32B8                     l6305 1870  
                   l5531 1BB0                     l5435 1900                     l4379 2816  
                   l4547 34F0                     l4555 34FE                     l4475 3454  
                   l4483 348A                     l6067 2740                     l6059 26DE  
                   l5611 3542                     l5179 1F16                     l5267 2334  
                   l6147 13EC                     l6139 1390                     l6307 1882  
                   l5373 20BA                     l5453 1940                     l5437 1904  
                   l4549 34F4                     l4557 3528                     l4485 3492  
                   l4477 345A                     l5621 3564                     l5197 32C6  
                   l6173 1522                     l6261 15E8                     l5367 20A2  
                   l5535 1BCE                     l5463 1972                     l5455 1944  
                   l5439 1914                     l5631 3586                     l5615 354E  
                   l5711 3062                     l5199 32D8                     l6087 3188  
                   l6167 14E6                     l6183 1548                     l6255 15DE  
                   l5297 1F5E                     l4489 34A6                     l4497 35A2  
                   l6089 3196                     l6177 152E                     l5379 20D8  
                   l5547 1C10                     l4499 35A8                     l5635 3594  
                   l5627 357C                     l5619 355C                     l5651 33BC  
                   l5643 336A                     l5707 3052                     l6195 3622  
                   l5581 3402                     l5573 33E4                     l5725 3092  
                   l5717 306A                     l5813 0A58                     l6197 3648  
                   l6285 1768                     l5399 2156                     l5591 3422  
                   l5567 33D4                     l5647 339E                     l5663 2DE6  
                   l5719 3076                     l5911 0E62                     l5903 0E0A  
                   l5823 0B1C                     l5807 0A14                     l5751 0896  
                   l6295 17EC                     l6287 177A                     l6279 1720  
                   l5737 37D0                     l5673 2E4A                     l5681 38BE  
                   l5913 0E84                     l5817 0A92                     l6297 17FE  
                   l6289 17A4                     _ADCS 0160                     l5579 33FA  
                   l5595 342C                     l5667 2DFC                     l5659 2DB2  
                   l5691 3008                     l4971 37F8                     l5835 0B70  
                   l5819 0AE0                     l5763 08C4                     l5771 08DA  
                   l6299 1828                     l4957 3218                     l5925 0F06  
                   l5853 0BE0                     l5845 0B98                     l5781 0946  
                   l5599 343A                     l4967 37E2                     l4975 38DA  
                   l5871 0C26                     l5855 0BE4                     l5839 0B92  
                   l5783 095E                     l4977 38DE                     l5937 0F36  
                   l5945 0F56                     l5953 0F7A                     l5961 1012  
                   l5881 0C60                     l5865 0C02                     l5785 0968  
                   l5875 0C36                     l5973 1054                     l5789 098E  
                   l4999 1C52                     l5991 10AA                     l5799 09FA  
                   l5897 0DCC                     l5889 0D56                     l5989 10A0  
                   STR_1 0833                     STR_2 081B                     STR_3 0828  
                   STR_4 0801                     STR_5 080E                     STR_6 0838  
                   STR_7 0840                     _LATA 000F89                     _LATD 000F8C  
                   u6010 1D1C                     u6020 1D2C                     u5205 2B9A  
                   u5310 28A2                     u6030 1D2E                     u5215 2A38  
                   u5225 2A54                     u6210 1E96                     u5235 2A76  
                   _PEIE 007F96                     u7100 3568                     u6060 1D70  
                   u7040 3406                     u6400 2FD8                     u8000 12FE  
                   u5185 2B5C                     u6410 2FDA                     u5195 2B78  
                   u8100 252A                     u7300 37CC                     u7220 2FF6  
                   u6420 36FE                     u7150 33B8                     u6270 1EF2  
                   u6190 1E82                     u7230 3026                     u6350 2F5C  
                   u6520 22B4                     u6440 3730                     u7400 09D2  
                   u8120 16A0                     u6505 224C                     u6506 2252  
                   u6450 3732                     u7410 09D4                     u7330 08B4  
                   u8050 149A                     u7235 301C                     u6355 2F52  
                   u6507 2260                     u6427 36F4                     u6540 2314  
                   u5900 386A                     u8060 149C                     u6525 22AA  
                   u7270 307C                     u6470 2202                     u5910 386C  
                   u7510 0BB0                     u8207 15B4                     u6800 2188  
                   u6480 2222                     u7360 091E                     u6545 230A  
                   u8217 1682                     u6570 389A                     u5850 3210  
                   u7450 0B44                     u7370 0920                     u8307 2B42  
                   u6395 2FBA                     u6475 21F8                     u8227 175A  
                   u6900 1AD6                     u6580 389C                     u8180 18AA  
                   u8317 2C8A                     u8237 17DE                     u6750 2108  
                   u5870 3258                     u7550 0BFE                     u8407 2D5A  
                   u8327 2C9A                     u8247 1862                     u7800 1176  
                   u7720 1036                     u7480 0B7E                     u6905 1ACC  
                   u8417 2BCC                     u8337 2CAA                     u8257 2AA8  
                   u7810 1178                     u8427 2BD6                     u8347 2CBA  
                   u8267 2AB2                     u6940 1B62                     u8437 2C4A  
                   u8357 2CCA                     u8277 2B26                     u6790 2164  
                   u8447 2C54                     u8367 2CDA                     u8287 2B30  
                   u7840 26C2                     u8457 2C60                     u8377 2D02  
                   u8297 2B38                     u6890 1960                     u8387 2D18  
                   u6980 1BBE                     u7860 2770                     u7780 1116  
                   u7940 31DC                     u8397 2D44                     u6990 1BDC  
                   u7870 2772                     u7980 12F0                     u7990 12F2  
                   _TMR0 000FD6             __CFG_PWRT$ON 000000             i2___flge@ff1 0001  
           i2___flge@ff2 0005                     _Prom 01D2                     _dbuf 0182  
                   _atoi 266A                     _main 157C                     _prec 00F8  
                   _nout 00F4                     pad@i 0027                     pad@p 0024  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0029  
                   fsr2l 000FD9                     btemp 0050         __end_of_ADC_Init 352E  
          ___fpclassifyf 2F1E                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             i2___fltol@f1 0001  
        ___fldiv@new_exp 003A          __end_of_Lcd_Cmd 2C6C             _tolower$1671 001C  
        __end_of_Lcd_Out 34BA            __CFG_MCLRE$ON 000000             ___param_bank 000000  
             _Lcd_Chr_CP 2A2A                    ??_pad 0026           Lcd_Out2@buffer 0014  
          __CFG_PLLDIV$1 000000            ___fltol@sign1 0018                    ?_atoi 0017  
        __end_of___fladd 1F32                    ?_main 0001          __end_of___fldiv 21BA  
        __end_of___awdiv 3444          __end_of___flneg 38D0                    _ADRES 000FC3  
                  STR_10 083C                    STR_11 0844                    STR_14 0848  
                  STR_16 0848          __end_of___awmod 359E          __end_of___flmul 1C26  
        __end_of___flsub 379A          __end_of___fltol 30A4          ___awdiv@divisor 0012  
                  i2l206 2514                    i2l191 23C6                    i2l192 239C  
                  i2l187 23F4                    i2l188 2390                    i2l197 23EE  
                  i2l642 2EE2          ___awdiv@counter 0014             vfpfcnvrt@fmt 00BA  
          __CFG_USBDIV$1 000000                    _SSPM3 007E33                    _TRISA 000F92  
                  _SSPIE 007CEB                    _SSPIF 007CF3            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _datos 00F0                    _flags 0048                    _fputc 3200  
                  _fputs 37D8          __end_of_isdigit 38A2                    _valor 004E  
                  atoi@n 0024                    pad@fp 0020                    atoi@s 0017  
                  _width 00F6                    _putch 395A          __end_of_isspace 37D8  
        __end_of_isupper 3872         __end_ofi2___flge 2F1E                    tablat 000FF5  
                  ttemp5 0051                    ttemp6 0054                    ttemp7 0058  
                  status 000FD8                    wtemp8 0051          __end_of_sprintf 36B6  
         ?___fpclassifyf 0010          __end_of_tolower 3754          __end_of_strncmp 3200  
         __CFG_ICPRT$OFF 000000       __size_ofi2___fltol 00BA         __end_of_Lcd_Init 2D7E  
       __end_of_Lcd_Out2 360E          __initialization 3810             __end_of_atoi 27AA  
           __end_of_main 18D4                   ??_atoi 0019                   ??_main 00E6  
          __activetblptr 000002              ?i2___xxtofl 0001          __CFG_CCP2MX$OFF 000000  
                 ?_fputc 0010                   ?_fputs 0019         ___awdiv@dividend 0010  
                 ?_putch 0001                   i2l1032 2928                   i2l1039 29A6  
                 i2l4611 2EB6                   i2l4621 2F1A                   i2l4615 2ECC  
                 i2l4607 2E82                   i2l4631 30C2                   i2l4711 2A18  
                 i2l4651 311C                   i2l4647 310C                   i2l4831 243C  
                 i2l4665 314C                   i2l4657 3124                   i2l4681 2956  
                 i2l4659 3130                   i2l4683 295C                   i2l4675 2938  
                 i2l4843 2482                   i2l4693 29CC                   i2l4685 2968  
                 i2l4695 29D8                   i2l4687 298E                   i2l4855 24C8  
                 i2l4867 250A                ??_Lcd_Cmd 0010                ??_Lcd_Out 0016  
                 _SSPADD 000FC8                   _SSPBUF 000FC9         __end_of___xxtofl 28EA  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 0042                   ___flge 2D7E  
                 ___fleq 3336              ?_Lcd_Chr_CP 0001                ??___fladd 0018  
                 ___wmul 38FA                ??___fldiv 0031                ??___awdiv 0014  
              ??___flneg 0014           __CFG_STVREN$ON 000000                ??___awmod 0014  
              ??___flmul 0018                ??___flsub 0031                ??___fltol 0014  
                 _efgtoa 084C                   _floorf 21BA                   clear_0 3816  
                 clear_1 3822                   clear_2 382E         ___awdiv@quotient 0016  
        ___awmod@divisor 0012               _Servo_init 393E          ___awmod@counter 0014  
                 pad@buf 0022                   _strcpy 36B6                   _strlen 38D0  
                 fputc@c 0010                   fputs@c 001D                   fputs@i 001E  
                 fputs@s 0019                ??_isdigit 0012        __end_ofi2___fltol 315E  
        ___fpclassifyf@e 0018                ?_ADC_Init 0010          ___fpclassifyf@u 001A  
        ___fpclassifyf@x 0010             __mediumconst 0000                ??_isspace 0012  
                 tblptrh 000FF7                ??_isupper 0012                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3664  
              ??_sprintf 0044                ??_tolower 0018                ??_strncmp 0016  
             ___flge@ff1 0029               ___flge@ff2 002D          ??___fpclassifyf 0014  
           ___xxtofl@arg 001A             ___xxtofl@exp 0019             ___xxtofl@val 0010  
             ___fleq@ff1 0010               ___fleq@ff2 0014               __accesstop 0060  
__end_of__initialization 3834           i2___fltol@exp1 000A          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0010            ___rparam_used 000001               ___fltol@f1 0010  
    __size_ofi2___xxtofl 0140           __pcstackCOMRAM 0001  __size_of_I2C_Slave_Init 001E  
__size_of_I2C_Slave_Read 2510            __end_of_fputc 32A0            __end_of_fputs 3810  
          __end_of_putch 395C                ?i2___flge 0001               ??_ADC_Init 0012  
              ?_Lcd_Init 0001                ?_Lcd_Out2 0013          __CFG_LPT1OSC$ON 000000  
                ??_fputc 0014                  ??_fputs 001D    I2C_Slave_Init@address 0010  
    __size_of_Lcd_Chr_CP 0124                  ??_putch 0010               __pbssBANK0 00E8  
             __pbssBANK1 0100                  ?___flge 0029                  ?___fleq 0010  
                ?___wmul 0010                  ?_efgtoa 0074                  ?_floorf 0060  
            ?_Servo_init 0001               ??i2___flge 0009            ??_ADC_Channel 0064  
                ?_strcpy 0010                  ?_strlen 0010                ?___xxtofl 0010  
     __size_of_vfpfcnvrt 03B2               ??_Lcd_Init 0013               ??_Lcd_Out2 0016  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
        __CFG_VREGEN$OFF 000000                  _Lcd_Cmd 2B4E                  _Lcd_Out 3444  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 00D0  
        __size_of___fleq 008A                  ___fladd 1C26                  ___fldiv 1F32  
                ___awdiv 33C0                  ___flneg 38A2                  ___awmod 352E  
                ___flmul 18D4                  ___flsub 3754                  ___fltol 2FEA  
        __size_of___wmul 0026         ADC_Init@entradas 0010                ?_vfprintf 00CE  
           __psmallconst 0800          __size_of_efgtoa 097E          __size_of_floorf 01BA  
                __pcinit 3810                  __ramtop 0800                  __ptext0 157C  
                __ptext1 3664                  __ptext2 360E                  __ptext3 11CA  
                __ptext4 315E                  __ptext5 084C                  __ptext6 3708  
                __ptext7 3842                  __ptext8 36B6                  __ptext9 32A0  
              _T0CONbits 000FD5          __size_of_strcpy 0052          __size_of_strlen 002A  
                _palabra 0171             __size_of_pad 0096                  _isdigit 3872  
           ??i2___xxtofl 0005               ??___xxtofl 0014         ___awmod@dividend 0010  
                _isspace 379A                  _isupper 3842                  efgtoa@c 007A  
                efgtoa@d 0098                  efgtoa@e 00B0                  efgtoa@f 0076  
                efgtoa@g 00AC                  efgtoa@h 00A2                  efgtoa@i 00AA  
                efgtoa@l 00A6                  efgtoa@m 0094                  efgtoa@n 00B2  
                efgtoa@p 009C                  efgtoa@t 0090                  efgtoa@u 00B4  
                efgtoa@w 009F                  atoi@neg 001D      __end_of_ADC_Channel 266A  
                _sprintf 3664                  _tolower 3708                  _strncmp 315E  
         __pintcode_body 2374     end_of_initialization 3834                  floorf@e 006E  
                floorf@m 006A                  floorf@u 0070                  floorf@x 0060  
                fputc@fp 0012            __Lmediumconst 0000                  int_func 2374  
                fputs@fp 001B      __size_of_Servo_init 001C           i2___xxtofl@arg 000B  
         i2___xxtofl@exp 000A           i2___xxtofl@val 0001        __end_of_vfpfcnvrt 157C  
             efgtoa@mode 00A1               efgtoa@sign 009A           _I2C_Slave_Init 3920  
         _I2C_Slave_Read 0008       __end_ofi2___xxtofl 2A2A             ??_Lcd_Chr_CP 0010  
              Lcd_Out2@x 0013                Lcd_Out2@y 0018                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0042                  strcpy@d 0018                  strlen@a 0012  
                strcpy@s 0016                  strlen@s 0010                _PORTDbits 000F83  
            ___fladd@grs 001F            ___xxtofl@sign 0018                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 003C  
            ___fldiv@rem 0035          i2___fltol@sign1 0009        __size_of_ADC_Init 0074  
              i2___fltol 30A4       __end_of_Lcd_Chr_CP 2B4E              ___flmul@grs 001E  
 __end_of_I2C_Slave_Init 393E   __end_of_I2C_Slave_Read 2518           __end_of___flge 2E4E  
         __end_of___fleq 33C0              vfpfcnvrt@ap 00BC              vfpfcnvrt@ct 00CA  
            vfpfcnvrt@fp 00B8        ADC_Channel@Puerto 0060           __end_of___wmul 3920  
         __end_of_efgtoa 11CA           __end_of_floorf 2374               floorf@F524 00E8  
            _ADC_Channel 2518           __end_of_strcpy 3708           __end_of_strlen 38FA  
      __size_ofi2___flge 00D0      start_initialization 3810              __end_of_pad 3336  
             ?i2___fltol 0001            Lcd_Out@buffer 0014        __size_of_Lcd_Init 0112  
      __size_of_Lcd_Out2 0070    __end_of___fpclassifyf 2FEA          ?_I2C_Slave_Init 0010  
        ?_I2C_Slave_Read 0001              vfprintf@fmt 00D0                 ??___flge 0031  
               ??___fleq 0018                 ??___wmul 0014                 ??_efgtoa 007B  
               ??_floorf 0064             ??_Servo_init 0010                 ??_strcpy 0014  
               ??_strlen 0012                ___fladd@a 0014                ___fladd@b 0010  
              ___fldiv@a 002D                ___fldiv@b 0029                ___flmul@a 0014  
              ___flmul@b 0010              __pbssCOMRAM 0044                ___flsub@a 002D  
              ___flsub@b 0029            __pcstackBANK0 0060        __size_of___xxtofl 0140  
               ?_Lcd_Cmd 0001                 ?_Lcd_Out 0013                _atoi$1555 001F  
              _atoi$1556 0023                _atoi$1557 0021       __end_of_Servo_init 395A  
            _efgtoa$1060 0088              _efgtoa$1054 0084              _efgtoa$1055 0086  
            _efgtoa$1064 008A              _efgtoa$1065 008C              _efgtoa$1066 008E  
              __pintcode 0008                 ?___fladd 0010                 ?___fldiv 0029  
               ?___awdiv 0010                 ?___flneg 0010                 ?___awmod 0010  
               ?___flmul 0010                 ?___flsub 0029                 ?___fltol 0010  
      __size_of_vfprintf 0056              __smallconst 0800                 ?_isdigit 0010  
               _ADC_Init 34BA                 ?_isspace 0010                 ?_isupper 0010  
               ?_sprintf 00D4                 ?_tolower 0016              ??i2___fltol 0005  
         __size_of_fputc 00A0           __size_of_fputs 0038                 ?_strncmp 0010  
         __size_of_putch 0002           ___wmul@product 0014                 _LATCbits 000F8B  
               i2u550_40 3136                 i2u545_40 30B0                 i2u546_40 30E0  
               i2u546_45 30D6                 i2u572_40 2384                 i2u558_40 29E2  
               i2u578_40 23F2                 i2u846_47 2428                 i2u847_47 246C  
               i2u848_47 24B2                 i2u849_47 24F8                 _RCONbits 000FD0  
               Lcd_Out@x 0013         __CFG_WDTPS$32768 000000                 Lcd_Out@y 0018  
              _vfpfcnvrt 11CA             Lcd_Init@data 0014               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 i2___flge 2E4E  
      ___wmul@multiplier 0010             _isspace$1586 0016             Lcd_Out2@data 0019  
               _Lcd_Init 2C6C                 _Lcd_Out2 359E               vfpfcnvrt@c 00CD  
             vfpfcnvrt@f 00C6              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
       __size_of_Lcd_Cmd 011E         __size_of_Lcd_Out 0076                 __Hrparam 0000  
             vfprintf@ap 00D2                 __Lrparam 0000               vfprintf@fp 00CE  
          ADC_Init@valor 0014                 _Promedio 00EC         __size_of___fladd 030C  
       __size_of___fldiv 0288         __size_of___awdiv 0084         __size_of___flneg 002E  
       __size_of___awmod 0070         __size_of___flmul 0352         __size_of___flsub 0046  
       __size_of___fltol 00BA               ?_vfpfcnvrt 00B8             ?_ADC_Channel 0060  
     ___fpclassifyf@F463 0044               sprintf@fmt 00D6                 ___xxtofl 27AA  
       __size_of_isdigit 0030           Lcd_Chr_CP@data 0012         __size_of_isspace 003E  
               __ptext10 38D0                 __ptext11 37D8                 __ptext20 2D7E  
               __ptext12 3200                 __ptext21 3336                 __ptext13 395A  
               __ptext30 3444                 __ptext22 352E                 __ptext14 21BA  
               __ptext31 2A2A                 __ptext23 33C0                 __ptext15 2F1E  
               __ptext32 2C6C                 __ptext24 266A                 __ptext16 2FEA  
               __ptext41 28EA                 __ptext33 2B4E                 __ptext25 379A  
               __ptext17 3754                 __ptext42 30A4                 __ptext34 3920  
               __ptext26 3872                 __ptext18 1C26                 __ptext43 2E4E  
               __ptext35 34BA                 __ptext27 38FA                 __ptext19 38A2  
               __ptext36 2518                 __ptext28 393E                 __ptext37 27AA  
               __ptext29 359E                 __ptext38 18D4                 __ptext39 1F32  
       __size_of_isupper 0030         __size_of_sprintf 0052         __size_of_tolower 004C  
             strcpy@dest 0010         __size_of_strncmp 00A2         ??_I2C_Slave_Init 0012  
       ??_I2C_Slave_Read 000F              Lcd_Cmd@data 0012            __size_of_atoi 0140  
          __size_of_main 0358                 efgtoa@fp 0074                 efgtoa@ne 0096  
               efgtoa@pp 0092                 efgtoa@ou 0080                 int$flags 0050  
               _vfprintf 360E    __CFG_CPUDIV$OSC1_PLL2 000000           _vfpfcnvrt$1080 00C2  
         _vfpfcnvrt$1084 00C4              Lcd_Out@data 0019               _INTCONbits 000FF2  
               isdigit@c 0010                 intlevel2 0000                sprintf@ap 00DE  
        i2___xxtofl@sign 0009                 isspace@c 0010                strcpy@src 0012  
               isupper@c 0010                strncmp@_l 0010                strncmp@_r 0012  
            efgtoa@nmode 009E              ??_vfpfcnvrt 00BE                 sprintf@f 00E0  
               tolower@c 0016                 sprintf@s 00D4   __size_of___fpclassifyf 00CC  
               strncmp@l 0017                 strncmp@n 0014                 strncmp@r 0019  
            _SSPCON1bits 000FC6            ___fladd@signs 001C             ___fladd@aexp 001D  
           ___fladd@bexp 001E  
