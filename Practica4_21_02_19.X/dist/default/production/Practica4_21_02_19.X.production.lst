

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 20 00:40:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007CF6                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _Tabla
    57  007CF6  7E                 	db	126
    58  007CF7  30                 	db	48
    59  007CF8  6D                 	db	109
    60  007CF9  79                 	db	121
    61  007CFA  33                 	db	51
    62  007CFB  5B                 	db	91
    63  007CFC  5F                 	db	95
    64  007CFD  71                 	db	113
    65  007CFE  FF                 	db	255
    66  007CFF  F3                 	db	243
    67  0000                     _PORTAbits	set	3968
    68  0000                     _PORTBbits	set	3969
    69  0000                     _LATD	set	3980
    70  0000                     _LATBbits	set	3978
    71  0000                     _TRISAbits	set	3986
    72  0000                     _TRISBbits	set	3987
    73  0000                     _TRISD	set	3989
    74  0000                     _ADCON1	set	4033
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  007D22                     __pcinit:
    80                           	opt callstack 0
    81  007D22                     start_initialization:
    82                           	opt callstack 0
    83  007D22                     __initialization:
    84                           	opt callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (10 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  007D22  0EF6               	movlw	low __pidataCOMRAM
    89  007D24  6EF6               	movwf	tblptrl,c
    90  007D26  0E7C               	movlw	high __pidataCOMRAM
    91  007D28  6EF7               	movwf	tblptrh,c
    92  007D2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  007D2C  6EF8               	movwf	tblptru,c
    94  007D2E  EE00  F00B         	lfsr	0,__pdataCOMRAM
    95  007D32  EE10 F00A          	lfsr	1,10
    96  007D36                     copy_data0:
    97  007D36  0009               	tblrd		*+
    98  007D38  CFF5 FFEE          	movff	tablat,postinc0
    99  007D3C  50E5               	movf	postdec1,w,c
   100  007D3E  50E1               	movf	fsr1l,w,c
   101  007D40  E1FA               	bnz	copy_data0
   102                           
   103                           ; Clear objects allocated to COMRAM (10 bytes)
   104  007D42  EE00  F001         	lfsr	0,__pbssCOMRAM
   105  007D46  0E0A               	movlw	10
   106  007D48                     clear_0:
   107  007D48  6AEE               	clrf	postinc0,c
   108  007D4A  06E8               	decf	wreg,f,c
   109  007D4C  E1FD               	bnz	clear_0
   110  007D4E                     end_of_initialization:
   111                           	opt callstack 0
   112  007D4E                     __end_of__initialization:
   113                           	opt callstack 0
   114  007D4E  0100               	movlb	0
   115  007D50  EF1E  F03F         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118  000001                     __pbssCOMRAM:
   119                           	opt callstack 0
   120  000001                     _Dato:
   121                           	opt callstack 0
   122  000001                     	ds	2
   123  000003                     _Decenas2:
   124                           	opt callstack 0
   125  000003                     	ds	2
   126  000005                     _Decenas1:
   127                           	opt callstack 0
   128  000005                     	ds	2
   129  000007                     _unidadesS2:
   130                           	opt callstack 0
   131  000007                     	ds	2
   132  000009                     _unidadesS1:
   133                           	opt callstack 0
   134  000009                     	ds	2
   135                           
   136                           	psect	dataCOMRAM
   137  00000B                     __pdataCOMRAM:
   138                           	opt callstack 0
   139  00000B                     _Tabla:
   140                           	opt callstack 0
   141  00000B                     	ds	10
   142                           
   143                           	psect	cstackCOMRAM
   144  000015                     __pcstackCOMRAM:
   145                           	opt callstack 0
   146  000015                     ??_display:
   147  000015                     ?_seleccion:
   148                           	opt callstack 0
   149                           
   150                           ; 2 bytes @ 0x0
   151  000015                     	ds	1
   152  000016                     display@veces:
   153                           	opt callstack 0
   154                           
   155                           ; 1 bytes @ 0x1
   156  000016                     	ds	1
   157  000017                     conteo@condicion2:
   158                           	opt callstack 0
   159                           
   160                           ; 2 bytes @ 0x2
   161  000017                     	ds	2
   162  000019                     main@cont:
   163                           	opt callstack 0
   164                           
   165                           ; 2 bytes @ 0x4
   166  000019                     	ds	2
   167  00001B                     main@sel:
   168                           	opt callstack 0
   169                           
   170                           ; 2 bytes @ 0x6
   171  00001B                     	ds	2
   172                           
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 20 in file "Practica4_Prueba3.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;  sel             2    6[COMRAM] short 
   183 ;;  cont            2    4[COMRAM] short 
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   193 ;;      Params:         0       0       0       0       0       0       0       0       0
   194 ;;      Locals:         4       0       0       0       0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0       0       0
   196 ;;      Totals:         4       0       0       0       0       0       0       0       0
   197 ;;Total ram usage:        4 bytes
   198 ;; Hardware stack levels required when called:    1
   199 ;; This function calls:
   200 ;;		_conteo
   201 ;;		_display
   202 ;;		_seleccion
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text0
   209  007E3C                     __ptext0:
   210                           	opt callstack 0
   211  007E3C                     _main:
   212                           	opt callstack 30
   213                           
   214                           ;Practica4_Prueba3.c: 21: ADCON1=0x0F;
   215                           
   216                           ;incstack = 0
   217  007E3C  0E0F               	movlw	15
   218  007E3E  6EC1               	movwf	4033,c	;volatile
   219                           
   220                           ;Practica4_Prueba3.c: 22: TRISD=0x00;
   221  007E40  0E00               	movlw	0
   222  007E42  6E95               	movwf	3989,c	;volatile
   223                           
   224                           ;Practica4_Prueba3.c: 23: TRISBbits.RB0=0;
   225  007E44  9093               	bcf	3987,0,c	;volatile
   226                           
   227                           ;Practica4_Prueba3.c: 24: TRISBbits.RB1=0;
   228  007E46  9293               	bcf	3987,1,c	;volatile
   229                           
   230                           ;Practica4_Prueba3.c: 25: TRISBbits.RB2=0;
   231  007E48  9493               	bcf	3987,2,c	;volatile
   232                           
   233                           ;Practica4_Prueba3.c: 26: TRISBbits.RB3=0;
   234  007E4A  9693               	bcf	3987,3,c	;volatile
   235                           
   236                           ;Practica4_Prueba3.c: 27: TRISBbits.RB4=1;
   237  007E4C  8893               	bsf	3987,4,c	;volatile
   238                           
   239                           ;Practica4_Prueba3.c: 28: TRISBbits.RB7=1;
   240  007E4E  8E93               	bsf	3987,7,c	;volatile
   241                           
   242                           ;Practica4_Prueba3.c: 30: TRISAbits.RA0=1;
   243  007E50  8092               	bsf	3986,0,c	;volatile
   244                           
   245                           ;Practica4_Prueba3.c: 31: TRISAbits.RA1=1;
   246  007E52  8292               	bsf	3986,1,c	;volatile
   247                           
   248                           ;Practica4_Prueba3.c: 32: TRISAbits.RA2=1;
   249  007E54  8492               	bsf	3986,2,c	;volatile
   250                           
   251                           ;Practica4_Prueba3.c: 33: TRISAbits.RA3=1;
   252  007E56  8692               	bsf	3986,3,c	;volatile
   253                           
   254                           ;Practica4_Prueba3.c: 34: TRISAbits.RA4=1;
   255  007E58  8892               	bsf	3986,4,c	;volatile
   256                           
   257                           ;Practica4_Prueba3.c: 36: LATBbits.LATB0=0;
   258  007E5A  908A               	bcf	3978,0,c	;volatile
   259                           
   260                           ;Practica4_Prueba3.c: 37: LATBbits.LATB1=0;
   261  007E5C  928A               	bcf	3978,1,c	;volatile
   262                           
   263                           ;Practica4_Prueba3.c: 38: LATBbits.LATB2=0;
   264  007E5E  948A               	bcf	3978,2,c	;volatile
   265                           
   266                           ;Practica4_Prueba3.c: 39: LATBbits.LATB3=0;
   267  007E60  968A               	bcf	3978,3,c	;volatile
   268                           
   269                           ;Practica4_Prueba3.c: 40: LATD=0x00;
   270  007E62  0E00               	movlw	0
   271  007E64  6E8C               	movwf	3980,c	;volatile
   272                           
   273                           ;Practica4_Prueba3.c: 41: short int cont=0;
   274  007E66  0E00               	movlw	0
   275  007E68  6E1A               	movwf	main@cont+1,c
   276  007E6A  0E00               	movlw	0
   277  007E6C  6E19               	movwf	main@cont,c
   278                           
   279                           ;Practica4_Prueba3.c: 42: short int sel=0;
   280  007E6E  0E00               	movlw	0
   281  007E70  6E1C               	movwf	main@sel+1,c
   282  007E72  0E00               	movlw	0
   283  007E74  6E1B               	movwf	main@sel,c
   284                           
   285                           ;Practica4_Prueba3.c: 43: while(sel<5){
   286  007E76  D0A5               	goto	l1104
   287  007E78                     l1022:
   288                           
   289                           ;Practica4_Prueba3.c: 44:     if(sel==0 && PORTBbits.RB4==1){
   290  007E78  501B               	movf	main@sel,w,c
   291  007E7A  101C               	iorwf	main@sel+1,w,c
   292  007E7C  B4D8               	btfsc	status,2,c
   293  007E7E  A881               	btfss	3969,4,c	;volatile
   294  007E80  D020               	goto	l45
   295                           
   296                           ;Practica4_Prueba3.c: 45:         unidadesS1=seleccion();
   297  007E82  EC80  F03E         	call	_seleccion	;wreg free
   298  007E86  C015  F009         	movff	?_seleccion,_unidadesS1
   299  007E8A  C016  F00A         	movff	?_seleccion+1,_unidadesS1+1
   300                           
   301                           ;Practica4_Prueba3.c: 46:         if(unidadesS1>9){unidadesS1=9;}
   302  007E8E  BE0A               	btfsc	_unidadesS1+1,7,c
   303  007E90  D00A               	goto	l1032
   304  007E92  500A               	movf	_unidadesS1+1,w,c
   305  007E94  E104               	bnz	u490
   306  007E96  0E0A               	movlw	10
   307  007E98  5C09               	subwf	_unidadesS1,w,c
   308  007E9A  A0D8               	btfss	status,0,c
   309  007E9C  D004               	goto	l1032
   310  007E9E                     u490:
   311  007E9E  0E00               	movlw	0
   312  007EA0  6E0A               	movwf	_unidadesS1+1,c
   313  007EA2  0E09               	movlw	9
   314  007EA4  D005               	goto	L1
   315  007EA6                     l1032:
   316  007EA6  AE0A               	btfss	_unidadesS1+1,7,c
   317  007EA8  D005               	goto	l46
   318  007EAA  0E00               	movlw	0
   319  007EAC  6E0A               	movwf	_unidadesS1+1,c
   320  007EAE  0E00               	movlw	0
   321  007EB0                     L1:
   322  007EB0  6E09               	movwf	_unidadesS1,c
   323  007EB2  D007               	goto	l45
   324  007EB4                     l46:
   325  007EB4  B881               	btfsc	3969,4,c	;volatile
   326  007EB6  B280               	btfsc	3968,1,c	;volatile
   327  007EB8  D004               	goto	l45
   328  007EBA  0E00               	movlw	0
   329  007EBC  6E1C               	movwf	main@sel+1,c
   330  007EBE  0E01               	movlw	1
   331  007EC0  6E1B               	movwf	main@sel,c
   332  007EC2                     l45:
   333                           
   334                           ;Practica4_Prueba3.c: 51:     if(sel==1 && PORTBbits.RB4==1){
   335  007EC2  041B               	decf	main@sel,w,c
   336  007EC4  101C               	iorwf	main@sel+1,w,c
   337  007EC6  B4D8               	btfsc	status,2,c
   338  007EC8  A881               	btfss	3969,4,c	;volatile
   339  007ECA  D020               	goto	l51
   340                           
   341                           ;Practica4_Prueba3.c: 52:         unidadesS2=seleccion();
   342  007ECC  EC80  F03E         	call	_seleccion	;wreg free
   343  007ED0  C015  F007         	movff	?_seleccion,_unidadesS2
   344  007ED4  C016  F008         	movff	?_seleccion+1,_unidadesS2+1
   345                           
   346                           ;Practica4_Prueba3.c: 53:         if(unidadesS2>5){unidadesS2=5;}
   347  007ED8  BE08               	btfsc	_unidadesS2+1,7,c
   348  007EDA  D00A               	goto	l1050
   349  007EDC  5008               	movf	_unidadesS2+1,w,c
   350  007EDE  E104               	bnz	u550
   351  007EE0  0E06               	movlw	6
   352  007EE2  5C07               	subwf	_unidadesS2,w,c
   353  007EE4  A0D8               	btfss	status,0,c
   354  007EE6  D004               	goto	l1050
   355  007EE8                     u550:
   356  007EE8  0E00               	movlw	0
   357  007EEA  6E08               	movwf	_unidadesS2+1,c
   358  007EEC  0E05               	movlw	5
   359  007EEE  D005               	goto	L2
   360  007EF0                     l1050:
   361  007EF0  AE08               	btfss	_unidadesS2+1,7,c
   362  007EF2  D005               	goto	l52
   363  007EF4  0E00               	movlw	0
   364  007EF6  6E08               	movwf	_unidadesS2+1,c
   365  007EF8  0E00               	movlw	0
   366  007EFA                     L2:
   367  007EFA  6E07               	movwf	_unidadesS2,c
   368  007EFC  D007               	goto	l51
   369  007EFE                     l52:
   370  007EFE  B881               	btfsc	3969,4,c	;volatile
   371  007F00  B080               	btfsc	3968,0,c	;volatile
   372  007F02  D004               	goto	l51
   373  007F04  0E00               	movlw	0
   374  007F06  6E1C               	movwf	main@sel+1,c
   375  007F08  0E02               	movlw	2
   376  007F0A  6E1B               	movwf	main@sel,c
   377  007F0C                     l51:
   378                           
   379                           ;Practica4_Prueba3.c: 58:     if(sel==2 && PORTBbits.RB4==1){
   380  007F0C  0E02               	movlw	2
   381  007F0E  181B               	xorwf	main@sel,w,c
   382  007F10  101C               	iorwf	main@sel+1,w,c
   383  007F12  B4D8               	btfsc	status,2,c
   384  007F14  A881               	btfss	3969,4,c	;volatile
   385  007F16  D020               	goto	l57
   386                           
   387                           ;Practica4_Prueba3.c: 59:         Decenas1=seleccion();
   388  007F18  EC80  F03E         	call	_seleccion	;wreg free
   389  007F1C  C015  F005         	movff	?_seleccion,_Decenas1
   390  007F20  C016  F006         	movff	?_seleccion+1,_Decenas1+1
   391                           
   392                           ;Practica4_Prueba3.c: 60:         if(Decenas1>9){Decenas1=9;}
   393  007F24  BE06               	btfsc	_Decenas1+1,7,c
   394  007F26  D00A               	goto	l1068
   395  007F28  5006               	movf	_Decenas1+1,w,c
   396  007F2A  E104               	bnz	u610
   397  007F2C  0E0A               	movlw	10
   398  007F2E  5C05               	subwf	_Decenas1,w,c
   399  007F30  A0D8               	btfss	status,0,c
   400  007F32  D004               	goto	l1068
   401  007F34                     u610:
   402  007F34  0E00               	movlw	0
   403  007F36  6E06               	movwf	_Decenas1+1,c
   404  007F38  0E09               	movlw	9
   405  007F3A  D005               	goto	L3
   406  007F3C                     l1068:
   407  007F3C  AE06               	btfss	_Decenas1+1,7,c
   408  007F3E  D005               	goto	l58
   409  007F40  0E00               	movlw	0
   410  007F42  6E06               	movwf	_Decenas1+1,c
   411  007F44  0E00               	movlw	0
   412  007F46                     L3:
   413  007F46  6E05               	movwf	_Decenas1,c
   414  007F48  D007               	goto	l57
   415  007F4A                     l58:
   416  007F4A  B881               	btfsc	3969,4,c	;volatile
   417  007F4C  BE81               	btfsc	3969,7,c	;volatile
   418  007F4E  D004               	goto	l57
   419  007F50  0E00               	movlw	0
   420  007F52  6E1C               	movwf	main@sel+1,c
   421  007F54  0E03               	movlw	3
   422  007F56  6E1B               	movwf	main@sel,c
   423  007F58                     l57:
   424                           
   425                           ;Practica4_Prueba3.c: 65:     if(sel==3 && PORTBbits.RB4==1){
   426  007F58  0E03               	movlw	3
   427  007F5A  181B               	xorwf	main@sel,w,c
   428  007F5C  101C               	iorwf	main@sel+1,w,c
   429  007F5E  B4D8               	btfsc	status,2,c
   430  007F60  A881               	btfss	3969,4,c	;volatile
   431  007F62  D020               	goto	l63
   432                           
   433                           ;Practica4_Prueba3.c: 66:         Decenas2=seleccion();
   434  007F64  EC80  F03E         	call	_seleccion	;wreg free
   435  007F68  C015  F003         	movff	?_seleccion,_Decenas2
   436  007F6C  C016  F004         	movff	?_seleccion+1,_Decenas2+1
   437                           
   438                           ;Practica4_Prueba3.c: 67:         if(Decenas2>5){Decenas2=5;}
   439  007F70  BE04               	btfsc	_Decenas2+1,7,c
   440  007F72  D00A               	goto	l1086
   441  007F74  5004               	movf	_Decenas2+1,w,c
   442  007F76  E104               	bnz	u670
   443  007F78  0E06               	movlw	6
   444  007F7A  5C03               	subwf	_Decenas2,w,c
   445  007F7C  A0D8               	btfss	status,0,c
   446  007F7E  D004               	goto	l1086
   447  007F80                     u670:
   448  007F80  0E00               	movlw	0
   449  007F82  6E04               	movwf	_Decenas2+1,c
   450  007F84  0E05               	movlw	5
   451  007F86  D005               	goto	L4
   452  007F88                     l1086:
   453  007F88  AE04               	btfss	_Decenas2+1,7,c
   454  007F8A  D005               	goto	l64
   455  007F8C  0E00               	movlw	0
   456  007F8E  6E04               	movwf	_Decenas2+1,c
   457  007F90  0E00               	movlw	0
   458  007F92                     L4:
   459  007F92  6E03               	movwf	_Decenas2,c
   460  007F94  D007               	goto	l63
   461  007F96                     l64:
   462  007F96  B881               	btfsc	3969,4,c	;volatile
   463  007F98  B280               	btfsc	3968,1,c	;volatile
   464  007F9A  D004               	goto	l63
   465  007F9C  0E00               	movlw	0
   466  007F9E  6E1C               	movwf	main@sel+1,c
   467  007FA0  0E04               	movlw	4
   468  007FA2  6E1B               	movwf	main@sel,c
   469  007FA4                     l63:
   470                           
   471                           ;Practica4_Prueba3.c: 72:     if(sel==4 && PORTAbits.RA0==0 && PORTAbits.RA1==0){
   472  007FA4  0E04               	movlw	4
   473  007FA6  181B               	xorwf	main@sel,w,c
   474  007FA8  101C               	iorwf	main@sel+1,w,c
   475  007FAA  B4D8               	btfsc	status,2,c
   476  007FAC  B080               	btfsc	3968,0,c	;volatile
   477  007FAE  D006               	goto	l1102
   478  007FB0  B280               	btfsc	3968,1,c	;volatile
   479  007FB2  D004               	goto	l1102
   480                           
   481                           ;Practica4_Prueba3.c: 73:         sel=6;
   482  007FB4  0E00               	movlw	0
   483  007FB6  6E1C               	movwf	main@sel+1,c
   484  007FB8  0E06               	movlw	6
   485  007FBA  6E1B               	movwf	main@sel,c
   486  007FBC                     l1102:
   487                           
   488                           ;Practica4_Prueba3.c: 75:     display(22);
   489  007FBC  0E16               	movlw	22
   490  007FBE  ECD3  F03E         	call	_display
   491  007FC2                     l1104:
   492                           
   493                           ;Practica4_Prueba3.c: 43: while(sel<5){
   494  007FC2  BE1C               	btfsc	main@sel+1,7,c
   495  007FC4  D759               	goto	l1022
   496  007FC6  501C               	movf	main@sel+1,w,c
   497  007FC8  E104               	bnz	u740
   498  007FCA  0E05               	movlw	5
   499  007FCC  5C1B               	subwf	main@sel,w,c
   500  007FCE  A0D8               	btfss	status,0,c
   501  007FD0  D753               	goto	l1022
   502  007FD2                     u740:
   503                           
   504                           ;Practica4_Prueba3.c: 78:     if(PORTBbits.RB7==0 && PORTBbits.RB4==1){
   505                           
   506                           ;Practica4_Prueba3.c: 77: while(1){
   507  007FD2  AE81               	btfss	3969,7,c	;volatile
   508  007FD4  A881               	btfss	3969,4,c	;volatile
   509  007FD6  D004               	goto	l1110
   510                           
   511                           ;Practica4_Prueba3.c: 79:         cont=1;
   512  007FD8  0E00               	movlw	0
   513  007FDA  6E1A               	movwf	main@cont+1,c
   514  007FDC  0E01               	movlw	1
   515  007FDE  6E19               	movwf	main@cont,c
   516  007FE0                     l1110:
   517                           
   518                           ;Practica4_Prueba3.c: 81:     if(PORTBbits.RB7==1 && PORTBbits.RB4==0){
   519  007FE0  BE81               	btfsc	3969,7,c	;volatile
   520  007FE2  B881               	btfsc	3969,4,c	;volatile
   521  007FE4  D004               	goto	l1116
   522                           
   523                           ;Practica4_Prueba3.c: 82:         cont=2;
   524  007FE6  0E00               	movlw	0
   525  007FE8  6E1A               	movwf	main@cont+1,c
   526  007FEA  0E02               	movlw	2
   527  007FEC  6E19               	movwf	main@cont,c
   528  007FEE                     l1116:
   529                           
   530                           ;Practica4_Prueba3.c: 84:     if(cont==1){
   531  007FEE  0419               	decf	main@cont,w,c
   532  007FF0  101A               	iorwf	main@cont+1,w,c
   533  007FF2  B4D8               	btfsc	status,2,c
   534                           
   535                           ;Practica4_Prueba3.c: 85:         conteo();
   536  007FF4  ECAA  F03E         	call	_conteo	;wreg free
   537                           
   538                           ;Practica4_Prueba3.c: 87:     display(45);
   539  007FF8  0E2D               	movlw	45
   540  007FFA  ECD3  F03E         	call	_display
   541  007FFE  D7E9               	goto	u740
   542  008000                     __end_of_main:
   543                           	opt callstack 0
   544                           
   545 ;; *************** function _seleccion *****************
   546 ;; Defined at:
   547 ;;		line 162 in file "Practica4_Prueba3.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  2    0[COMRAM] int 
   554 ;; Registers used:
   555 ;;		status,2, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   561 ;;      Params:         2       0       0       0       0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0
   564 ;;      Totals:         2       0       0       0       0       0       0       0       0
   565 ;;Total ram usage:        2 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text1
   575  007D00                     __ptext1:
   576                           	opt callstack 0
   577  007D00                     _seleccion:
   578                           	opt callstack 30
   579                           
   580                           ;Practica4_Prueba3.c: 163:     if(PORTAbits.RA2==0 && PORTAbits.RA3==1){
   581                           
   582                           ;incstack = 0
   583  007D00  A480               	btfss	3968,2,c	;volatile
   584  007D02  A680               	btfss	3968,3,c	;volatile
   585  007D04  D003               	goto	l91
   586                           
   587                           ;Practica4_Prueba3.c: 164:         Dato++;
   588  007D06  4A01               	infsnz	_Dato,f,c
   589  007D08  2A02               	incf	_Dato+1,f,c
   590                           
   591                           ;Practica4_Prueba3.c: 165:     }else if(PORTAbits.RA3==0 && PORTAbits.RA2==1){
   592  007D0A  D006               	goto	l986
   593  007D0C                     l91:
   594  007D0C  A680               	btfss	3968,3,c	;volatile
   595  007D0E  A480               	btfss	3968,2,c	;volatile
   596  007D10  D003               	goto	l986
   597                           
   598                           ;Practica4_Prueba3.c: 166:         Dato--;
   599  007D12  0601               	decf	_Dato,f,c
   600  007D14  A0D8               	btfss	status,0,c
   601  007D16  0602               	decf	_Dato+1,f,c
   602  007D18                     l986:
   603                           
   604                           ;Practica4_Prueba3.c: 169:     return Dato;
   605  007D18  C001  F015         	movff	_Dato,?_seleccion
   606  007D1C  C002  F016         	movff	_Dato+1,?_seleccion+1
   607  007D20  0012               	return		;funcret
   608  007D22                     __end_of_seleccion:
   609                           	opt callstack 0
   610                           
   611 ;; *************** function _display *****************
   612 ;; Defined at:
   613 ;;		line 90 in file "Practica4_Prueba3.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  veces           1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  veces           1    1[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         0       0       0       0       0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0
   629 ;;      Temps:          1       0       0       0       0       0       0       0       0
   630 ;;      Totals:         2       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text2
   641  007DA6                     __ptext2:
   642                           	opt callstack 0
   643  007DA6                     _display:
   644                           	opt callstack 30
   645                           
   646                           ;incstack = 0
   647                           ;display@veces stored from wreg
   648  007DA6  6E16               	movwf	display@veces,c
   649                           
   650                           ;Practica4_Prueba3.c: 91:     while(veces){
   651  007DA8  D045               	goto	l816
   652  007DAA                     l786:
   653                           
   654                           ;Practica4_Prueba3.c: 92:         LATD=Tabla[unidadesS1];
   655  007DAA  0E0B               	movlw	low _Tabla
   656  007DAC  2409               	addwf	_unidadesS1,w,c
   657  007DAE  6ED9               	movwf	fsr2l,c
   658  007DB0  0E00               	movlw	high _Tabla
   659  007DB2  200A               	addwfc	_unidadesS1+1,w,c
   660  007DB4  6EDA               	movwf	fsr2h,c
   661  007DB6  50DF               	movf	indf2,w,c
   662  007DB8  6E8C               	movwf	3980,c	;volatile
   663                           
   664                           ;Practica4_Prueba3.c: 93:         LATBbits.LATB3=1;
   665  007DBA  868A               	bsf	3978,3,c	;volatile
   666                           
   667                           ;Practica4_Prueba3.c: 94:         _delay((unsigned long)((5)*(8000000/4000.0)));
   668  007DBC  0E0D               	movlw	13
   669  007DBE  6E15               	movwf	??_display& (0+255),c
   670  007DC0  0EFC               	movlw	252
   671  007DC2                     u807:
   672  007DC2  2EE8               	decfsz	wreg,f,c
   673  007DC4  D7FE               	bra	u807
   674  007DC6  2E15               	decfsz	??_display& (0+255),f,c
   675  007DC8  D7FC               	bra	u807
   676                           
   677                           ;Practica4_Prueba3.c: 95:         LATBbits.LATB3=0;
   678  007DCA  968A               	bcf	3978,3,c	;volatile
   679                           
   680                           ;Practica4_Prueba3.c: 97:         LATD=Tabla[unidadesS2];
   681  007DCC  0E0B               	movlw	low _Tabla
   682  007DCE  2407               	addwf	_unidadesS2,w,c
   683  007DD0  6ED9               	movwf	fsr2l,c
   684  007DD2  0E00               	movlw	high _Tabla
   685  007DD4  2008               	addwfc	_unidadesS2+1,w,c
   686  007DD6  6EDA               	movwf	fsr2h,c
   687  007DD8  50DF               	movf	indf2,w,c
   688  007DDA  6E8C               	movwf	3980,c	;volatile
   689                           
   690                           ;Practica4_Prueba3.c: 98:         LATBbits.LATB2=1;
   691  007DDC  848A               	bsf	3978,2,c	;volatile
   692                           
   693                           ;Practica4_Prueba3.c: 99:         _delay((unsigned long)((5)*(8000000/4000.0)));
   694  007DDE  0E0D               	movlw	13
   695  007DE0  6E15               	movwf	??_display& (0+255),c
   696  007DE2  0EFC               	movlw	252
   697  007DE4                     u817:
   698  007DE4  2EE8               	decfsz	wreg,f,c
   699  007DE6  D7FE               	bra	u817
   700  007DE8  2E15               	decfsz	??_display& (0+255),f,c
   701  007DEA  D7FC               	bra	u817
   702                           
   703                           ;Practica4_Prueba3.c: 100:         LATBbits.LATB2=0;
   704  007DEC  948A               	bcf	3978,2,c	;volatile
   705                           
   706                           ;Practica4_Prueba3.c: 102:         LATD=Tabla[Decenas1];
   707  007DEE  0E0B               	movlw	low _Tabla
   708  007DF0  2405               	addwf	_Decenas1,w,c
   709  007DF2  6ED9               	movwf	fsr2l,c
   710  007DF4  0E00               	movlw	high _Tabla
   711  007DF6  2006               	addwfc	_Decenas1+1,w,c
   712  007DF8  6EDA               	movwf	fsr2h,c
   713  007DFA  50DF               	movf	indf2,w,c
   714  007DFC  6E8C               	movwf	3980,c	;volatile
   715                           
   716                           ;Practica4_Prueba3.c: 103:         LATBbits.LATB1=1;
   717  007DFE  828A               	bsf	3978,1,c	;volatile
   718                           
   719                           ;Practica4_Prueba3.c: 104:         _delay((unsigned long)((5)*(8000000/4000.0)));
   720  007E00  0E0D               	movlw	13
   721  007E02  6E15               	movwf	??_display& (0+255),c
   722  007E04  0EFC               	movlw	252
   723  007E06                     u827:
   724  007E06  2EE8               	decfsz	wreg,f,c
   725  007E08  D7FE               	bra	u827
   726  007E0A  2E15               	decfsz	??_display& (0+255),f,c
   727  007E0C  D7FC               	bra	u827
   728                           
   729                           ;Practica4_Prueba3.c: 105:         LATBbits.LATB1=0;
   730  007E0E  928A               	bcf	3978,1,c	;volatile
   731                           
   732                           ;Practica4_Prueba3.c: 107:         LATD=Tabla[Decenas2];
   733  007E10  0E0B               	movlw	low _Tabla
   734  007E12  2403               	addwf	_Decenas2,w,c
   735  007E14  6ED9               	movwf	fsr2l,c
   736  007E16  0E00               	movlw	high _Tabla
   737  007E18  2004               	addwfc	_Decenas2+1,w,c
   738  007E1A  6EDA               	movwf	fsr2h,c
   739  007E1C  50DF               	movf	indf2,w,c
   740  007E1E  6E8C               	movwf	3980,c	;volatile
   741                           
   742                           ;Practica4_Prueba3.c: 108:         LATBbits.LATB0=1;
   743  007E20  808A               	bsf	3978,0,c	;volatile
   744                           
   745                           ;Practica4_Prueba3.c: 109:         _delay((unsigned long)((5)*(8000000/4000.0)));
   746  007E22  0E0D               	movlw	13
   747  007E24  6E15               	movwf	??_display& (0+255),c
   748  007E26  0EFC               	movlw	252
   749  007E28                     u837:
   750  007E28  2EE8               	decfsz	wreg,f,c
   751  007E2A  D7FE               	bra	u837
   752  007E2C  2E15               	decfsz	??_display& (0+255),f,c
   753  007E2E  D7FC               	bra	u837
   754                           
   755                           ;Practica4_Prueba3.c: 110:         LATBbits.LATB0=0;
   756  007E30  908A               	bcf	3978,0,c	;volatile
   757                           
   758                           ;Practica4_Prueba3.c: 111:         veces--;
   759  007E32  0616               	decf	display@veces,f,c
   760  007E34                     l816:
   761                           
   762                           ;Practica4_Prueba3.c: 91:     while(veces){
   763  007E34  5016               	movf	display@veces,w,c
   764  007E36  B4D8               	btfsc	status,2,c
   765  007E38  0012               	return	
   766  007E3A  D7B7               	goto	l786
   767  007E3C                     __end_of_display:
   768                           	opt callstack 0
   769                           
   770 ;; *************** function _conteo *****************
   771 ;; Defined at:
   772 ;;		line 114 in file "Practica4_Prueba3.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  condicion2      2    2[COMRAM] short 
   777 ;;  condicion       2    0        short 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         4       0       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         4       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text3
   801  007D54                     __ptext3:
   802                           	opt callstack 0
   803  007D54                     _conteo:
   804                           	opt callstack 30
   805                           
   806                           ;Practica4_Prueba3.c: 116:     short int condicion2=0;
   807                           
   808                           ;incstack = 0
   809  007D54  0E00               	movlw	0
   810  007D56  6E18               	movwf	conteo@condicion2+1,c
   811  007D58  0E00               	movlw	0
   812  007D5A  6E17               	movwf	conteo@condicion2,c
   813                           
   814                           ;Practica4_Prueba3.c: 118:     unidadesS1--;
   815  007D5C  0609               	decf	_unidadesS1,f,c
   816  007D5E  A0D8               	btfss	status,0,c
   817  007D60  060A               	decf	_unidadesS1+1,f,c
   818                           
   819                           ;Practica4_Prueba3.c: 119:     if(unidadesS1<0){
   820  007D62  AE0A               	btfss	_unidadesS1+1,7,c
   821  007D64  0012               	return	
   822                           
   823                           ;Practica4_Prueba3.c: 120:         unidadesS1=9;
   824  007D66  0E00               	movlw	0
   825  007D68  6E0A               	movwf	_unidadesS1+1,c
   826  007D6A  0E09               	movlw	9
   827  007D6C  6E09               	movwf	_unidadesS1,c
   828                           
   829                           ;Practica4_Prueba3.c: 121:         unidadesS2--;
   830  007D6E  0607               	decf	_unidadesS2,f,c
   831  007D70  A0D8               	btfss	status,0,c
   832  007D72  0608               	decf	_unidadesS2+1,f,c
   833                           
   834                           ;Practica4_Prueba3.c: 122:         if(unidadesS2<0){
   835  007D74  AE08               	btfss	_unidadesS2+1,7,c
   836  007D76  0012               	return	
   837                           
   838                           ;Practica4_Prueba3.c: 123:             unidadesS2=5;
   839  007D78  0E00               	movlw	0
   840  007D7A  6E08               	movwf	_unidadesS2+1,c
   841  007D7C  0E05               	movlw	5
   842  007D7E  6E07               	movwf	_unidadesS2,c
   843                           
   844                           ;Practica4_Prueba3.c: 124:             Decenas1--;
   845  007D80  0605               	decf	_Decenas1,f,c
   846  007D82  A0D8               	btfss	status,0,c
   847  007D84  0606               	decf	_Decenas1+1,f,c
   848                           
   849                           ;Practica4_Prueba3.c: 125:             if(Decenas1<0){
   850  007D86  AE06               	btfss	_Decenas1+1,7,c
   851  007D88  0012               	return	
   852                           
   853                           ;Practica4_Prueba3.c: 126:                 Decenas1=9;
   854  007D8A  0E00               	movlw	0
   855  007D8C  6E06               	movwf	_Decenas1+1,c
   856  007D8E  0E09               	movlw	9
   857  007D90  6E05               	movwf	_Decenas1,c
   858                           
   859                           ;Practica4_Prueba3.c: 127:                 Decenas2--;
   860  007D92  0603               	decf	_Decenas2,f,c
   861  007D94  A0D8               	btfss	status,0,c
   862  007D96  0604               	decf	_Decenas2+1,f,c
   863                           
   864                           ;Practica4_Prueba3.c: 128:                 if(Decenas2<0){
   865  007D98  AE04               	btfss	_Decenas2+1,7,c
   866  007D9A  0012               	return	
   867                           
   868                           ;Practica4_Prueba3.c: 129:                     Decenas2=0;
   869  007D9C  0E00               	movlw	0
   870  007D9E  6E04               	movwf	_Decenas2+1,c
   871  007DA0  0E00               	movlw	0
   872  007DA2  6E03               	movwf	_Decenas2,c
   873  007DA4  0012               	return	
   874  007DA6                     __end_of_conteo:
   875                           	opt callstack 0
   876  0000                     
   877                           	psect	rparam
   878  0000                     tosu	equ	0xFFF
   879                           tosh	equ	0xFFE
   880                           tosl	equ	0xFFD
   881                           stkptr	equ	0xFFC
   882                           pclatu	equ	0xFFB
   883                           pclath	equ	0xFFA
   884                           pcl	equ	0xFF9
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           prodh	equ	0xFF4
   890                           prodl	equ	0xFF3
   891                           indf0	equ	0xFEF
   892                           postinc0	equ	0xFEE
   893                           postdec0	equ	0xFED
   894                           preinc0	equ	0xFEC
   895                           plusw0	equ	0xFEB
   896                           fsr0h	equ	0xFEA
   897                           fsr0l	equ	0xFE9
   898                           wreg	equ	0xFE8
   899                           indf1	equ	0xFE7
   900                           postinc1	equ	0xFE6
   901                           postdec1	equ	0xFE5
   902                           preinc1	equ	0xFE4
   903                           plusw1	equ	0xFE3
   904                           fsr1h	equ	0xFE2
   905                           fsr1l	equ	0xFE1
   906                           bsr	equ	0xFE0
   907                           indf2	equ	0xFDF
   908                           postinc2	equ	0xFDE
   909                           postdec2	equ	0xFDD
   910                           preinc2	equ	0xFDC
   911                           plusw2	equ	0xFDB
   912                           fsr2h	equ	0xFDA
   913                           fsr2l	equ	0xFD9
   914                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_conteo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     178
                                              4 COMRAM     4     4      0
                             _conteo
                            _display
                          _seleccion
 ---------------------------------------------------------------------------------
 (1) _seleccion                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _conteo                                               4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conteo
   _display
   _seleccion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      1C       1       29.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      20        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 20 00:40:27 2019

                     l51 7F0C                       l52 7EFE                       l45 7EC2  
                     l46 7EB4                       l63 7FA4                       l64 7F96  
                     l57 7F58                       l58 7F4A                       l91 7D0C  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l816 7E34  
                    l786 7DAA                      l986 7D18             __CFG_CPB$OFF 000000  
                    u610 7F34             __CFG_CPD$OFF 000000                      u550 7EE8  
                    u490 7E9E                      u740 7FD2                      u670 7F80  
                    u807 7DC2                      u817 7DE4                      u827 7E06  
                    u837 7E28             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1110 7FE0                     l1102 7FBC                     l1022 7E78  
                   l1032 7EA6                     l1104 7FC2                     l1050 7EF0  
                   l1116 7FEE                     l1068 7F3C                     l1086 7F88  
                   _LATD 000F8C                     _Dato 0001             __CFG_PWRT$ON 000000  
                   _main 7E3C                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
                  ?_main 0015            __CFG_USBDIV$1 000000                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000                    _Tabla 000B           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000          __end_of_display 7E3C  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000             display@veces 0016  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 7D22             __end_of_main 8000  
                 ??_main 0019            __activetblptr 000000          __CFG_CCP2MX$OFF 000000  
                 _ADCON1 000FC1           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _conteo 7D54                   clear_0 7D48                ??_display 0015  
           __pdataCOMRAM 000B                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7D4E  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0015  
        __CFG_LPT1OSC$ON 000000         conteo@condicion2 0017       __size_of_seleccion 0022  
                ?_conteo 0015          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000          __size_of_conteo 0052                  __pcinit 7D22  
                __ramtop 0800                  __ptext0 7E3C                  __ptext1 7D00  
                __ptext2 7DA6                  __ptext3 7D54                  _display 7DA6  
                main@sel 001B     end_of_initialization 7D4E        __end_of_seleccion 7D22  
                postdec1 000FE5                  postinc0 000FEE                _PORTAbits 000F80  
              _PORTBbits 000F81               _unidadesS1 0009               _unidadesS2 0007  
              _TRISAbits 000F92                _TRISBbits 000F93            __pidataCOMRAM 7CF6  
         __end_of_conteo 7DA6      start_initialization 7D22                 ??_conteo 0015  
            __pbssCOMRAM 0001                 ?_display 0015                 _LATBbits 000F8A  
              _seleccion 7D00         __CFG_WDTPS$32768 000000                 _Decenas1 0005  
               _Decenas2 0003                copy_data0 7D36               ?_seleccion 0015  
               __Hrparam 0000                 __Lrparam 0000         __size_of_display 0096  
          __size_of_main 01C4                 main@cont 0019    __CFG_CPUDIV$OSC1_PLL2 000000  
            ??_seleccion 0017  
